{"url": "https://api.github.com/repos/rust-lang/rust/pulls/62528", "id": 295736968, "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk1NzM2OTY4", "html_url": "https://github.com/rust-lang/rust/pull/62528", "diff_url": "https://github.com/rust-lang/rust/pull/62528.diff", "patch_url": "https://github.com/rust-lang/rust/pull/62528.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/62528", "number": 62528, "state": "closed", "locked": false, "title": "Add joining slices of slices with a slice separator, not just a single item", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "body": "https://github.com/rust-lang/rust/issues/27747#issuecomment-294525391\r\n> It's kinda annoying to be able to join strings with a str (which can have multiple chars), but joining a slice of slices, you can only join with a single element.\r\n\r\nThis turns out to be fixable, with some possible inference regressions.\r\n\r\n# TL;DR\r\n\r\nRelated trait(s) are unstable and tracked at https://github.com/rust-lang/rust/issues/27747, but the `[T]::join` method that is being extended here is already stable.\r\n\r\nExample use of the new insta-stable functionality:\r\n\r\n```rust\r\nlet nested: Vec<Vec<Foo>> = /* \u2026 */;\r\nlet separator: &[Foo] = /* \u2026 */;  // Previously: could only be a single &Foo\r\nnested.join(separator)\r\n```\r\n\r\nComplete API affected by this PR, after changes:\r\n\r\n```rust\r\nimpl<T> [T] {\r\n    pub fn concat<Item: ?Sized>(&self) -> <Self as Concat<Item>>::Output\r\n        where Self: Concat<Item>\r\n    {\r\n        Concat::concat(self)\r\n    }\r\n    pub fn join<Separator>(&self, sep: Separator) -> <Self as Join<Separator>>::Output\r\n        where Self: Join<Separator>\r\n    {\r\n        Join::join(self, sep)\r\n    }\r\n}\r\n\r\n// The `Item` parameter is only useful for the the slice-of-slices impl.\r\npub trait Concat<Item: ?Sized> {\r\n    type Output;\r\n    fn concat(slice: &Self) -> Self::Output;\r\n}\r\n\r\npub trait Join<Separator> {\r\n    type Output;\r\n    fn join(slice: &Self, sep: Separator) -> Self::Output;\r\n}\r\n\r\nimpl<T: Clone, V: Borrow<[T]>> Concat<T> for [V] {\r\n    type Output = Vec<T>;\r\n}\r\n\r\nimpl<T: Clone, V: Borrow<[T]>> Join<&'_ T> for [V] {\r\n    type Output = Vec<T>;\r\n}\r\n\r\n// New functionality here!\r\nimpl<T: Clone, V: Borrow<[T]>> Join<&'_ [T]> for [V] {\r\n    type Output = Vec<T>;\r\n}\r\n\r\nimpl<S: Borrow<str>> Concat<str> for [S] {\r\n    type Output = String;\r\n}\r\n\r\nimpl<S: Borrow<str>> Join<&'_ str> for [S] {\r\n    type Output = String;\r\n}\r\n```\r\n\r\n# Details\r\n\r\nAfter https://github.com/rust-lang/rust/pull/62403 but before this PR, the API is:\r\n\r\n```rust\r\nimpl<T> [T] {\r\n    pub fn concat<Separator: ?Sized>(&self) -> T::Output\r\n        where T: SliceConcat<Separator>\r\n    {\r\n        SliceConcat::concat(self)\r\n    }\r\n\r\n    pub fn join<Separator: ?Sized>(&self, sep: &Separator) -> T::Output\r\n        where T: SliceConcat<Separator>\r\n    {\r\n        SliceConcat::join(self, sep)\r\n    }\r\n}\r\n\r\npub trait SliceConcat<Separator: ?Sized>: Sized {\r\n    type Output;\r\n    fn concat(slice: &[Self]) -> Self::Output;\r\n    fn join(slice: &[Self], sep: &Separator) -> Self::Output;\r\n}\r\n\r\nimpl<T: Clone, V: Borrow<[T]>> SliceConcat<T> for V {\r\n    type Output = Vec<T>;\r\n}\r\n\r\nimpl<S: Borrow<str>> SliceConcat<str> for S {\r\n    type Output = String;\r\n}\r\n```\r\n\r\nBy adding a trait impl we should be able to accept a slice of `T` as the separator, as an alternative to a single `T` value.\r\n\r\nIn a `some_slice.join(some_separator)` call, trait resolution will pick an impl or the other based on the type of `some_separator`. In `some_slice.concat()` however there is no separator, so this call would become ambiguous. Some regression in type inference or trait resolution may be acceptable on principle, but requiring a turbofish for every single call to `concat` isn\u2019t great.\r\n\r\nThe solution to that is splitting the `SliceConcat` trait into two `Concat` and `Join` traits, one for each eponymous method. Only `Join` would gain a new impl, so that `some_slice.concat()` would not become ambiguous.\r\n\r\nNow, at the trait level the `Concat` trait does not need a `Separator` parameter anymore. However, simply removing it causes one of the impls not to be accepted anymore:\r\n\r\n```rust\r\nerror[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\r\n  --> src/liballoc/slice.rs:608:6\r\n    |\r\n608 | impl<T: Clone, V: Borrow<[T]>> Concat for [V] {\r\n    |      ^ unconstrained type parameter\r\n```\r\n\r\nThis makes sense: if `[V]::concat` is a method that is itself not generic, then its return type (which is the `Concat::Output` associated type) needs to be determined based on solely `V`. And although there is no such type in the standard library, there is nothing stopping another crate from defining a `V` type that implements both `Borrow<[Foo]>` and `Borrow<[Bar]>`. It might not be a good idea, but it\u2019s possible. Both would apply here, and there would be no way to determine `T`.\r\n\r\nThis could be a warning sign that this API is too generic. Perhaps we\u2019d be better off having one less type variable, and only implement `Concat for [&'_ [T]]` and `Concat for [Vec<T>]` etc. However this aspect of `[V]::concat` is already stable, so we\u2019re stuck with it.\r\n\r\nThe solution is to keep a dummy type parameter on the `Concat` trait. That way, if a type has multiple `Borrow<[_]>` impls, it\u2019ll end up with multiple corresponding `Concat<_>` impls.\r\n\r\nIn `impl<S: Borrow<str>> Concat<str> for [S]`, the second occurrence of `str` is not meaningful. It could be any type. As long as there is only once such type with an applicable impl, trait resolution will be appeased without demanding turbofishes.\r\n\r\n# Joining strings with `char`\r\n\r\nFor symmetry I also tried adding this impl (because why not):\r\n\r\n```rust\r\nimpl<S: Borrow<str>> Join<char> for [S] {\r\n    type Output = String;\r\n}\r\n```\r\n\r\nThis immediately caused an inference regression in a dependency of rustc:\r\n\r\n```rust\r\nerror[E0277]: the trait bound `std::string::String: std::borrow::Borrow<[std::string::String]>` is not satisfied\r\n   --> /home/simon/.cargo/registry/src/github.com-1ecc6299db9ec823/getopts-0.2.19/src/lib.rs:595:37\r\n    |\r\n595 |             row.push_str(&desc_rows.join(&desc_sep));\r\n    |                                     ^^^^ the trait `std::borrow::Borrow<[std::string::String]>` is not implemented for `std::string::String`\r\n    |\r\n    = help: the following implementations were found:\r\n              <std::string::String as std::borrow::Borrow<str>>\r\n    = note: required because of the requirements on the impl of `std::slice::Join<&std::string::String>` for `[std::string::String]`\r\n```\r\n\r\nIn the context of this code, two facts are known:\r\n\r\n* `desc_rows` is a `Vec<String>`\r\n* `desc_sep` is a `String`\r\n\r\nPreviously the first fact alone reduces the resolution of `join` to only one solution, where its argument it expected to be `&str`. Then, `&String` is coerced to `&str`.\r\n\r\nWith the new `Join` impl, the first fact leavs two applicable impls where the separator can be either `&str` or `char`. But `&String` is neither of these things. It appears that possible coercions are not accounted for, in the search for a solution in trait resolution.\r\n\r\nI have not included this new impl in this PR. It\u2019s still possible to add later, but the `getopts` breakage does not need to block the rest of the PR. And the functionality easy for end-user to duplicate: `slice_of_strings.join(&*char_separator.encode_utf8(&mut [0_u8, 4]))`\r\n\r\nThe `&*` part of that last code snippet is another case of the same issue: `encode_utf8` returns `&mut str` which can be coerced to `&str`, but isn\u2019t when trait resolution is ambiguous.", "created_at": "2019-07-09T12:44:03Z", "updated_at": "2019-08-01T12:10:58Z", "closed_at": "2019-07-26T02:18:20Z", "merged_at": "2019-07-26T02:18:20Z", "merge_commit_sha": "5f7768a976edc296c62479b936993b4dc9af065b", "assignee": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 223796632, "node_id": "MDU6TGFiZWwyMjM3OTY2MzI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/relnotes", "name": "relnotes", "color": "fad8c7", "default": false, "description": "Marks issues that should be documented in the release notes of the next release."}, {"id": 583437191, "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors", "name": "S-waiting-on-bors", "color": "d3dddd", "default": false, "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/65", "html_url": "https://github.com/rust-lang/rust/milestone/65", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/65/labels", "id": 4460013, "node_id": "MDk6TWlsZXN0b25lNDQ2MDAxMw==", "number": 65, "title": "1.38", "description": "", "creator": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 24, "state": "closed", "created_at": "2019-07-02T21:16:06Z", "updated_at": "2019-09-27T11:35:13Z", "due_on": "2019-08-15T07:00:00Z", "closed_at": "2019-09-27T11:35:13Z"}, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/62528/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/62528/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62528/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/5f7768a976edc296c62479b936993b4dc9af065b", "head": {"label": "SimonSapin:concat", "ref": "concat", "sha": "5f7768a976edc296c62479b936993b4dc9af065b", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "repo": {"id": 7715452, "node_id": "MDEwOlJlcG9zaXRvcnk3NzE1NDUy", "name": "rust", "full_name": "SimonSapin/rust", "private": false, "owner": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/SimonSapin/rust", "description": "a safe, concurrent, practical language", "fork": true, "url": "https://api.github.com/repos/SimonSapin/rust", "forks_url": "https://api.github.com/repos/SimonSapin/rust/forks", "keys_url": "https://api.github.com/repos/SimonSapin/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/SimonSapin/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/SimonSapin/rust/teams", "hooks_url": "https://api.github.com/repos/SimonSapin/rust/hooks", "issue_events_url": "https://api.github.com/repos/SimonSapin/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/SimonSapin/rust/events", "assignees_url": "https://api.github.com/repos/SimonSapin/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/SimonSapin/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/SimonSapin/rust/tags", "blobs_url": "https://api.github.com/repos/SimonSapin/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/SimonSapin/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/SimonSapin/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/SimonSapin/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/SimonSapin/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/SimonSapin/rust/languages", "stargazers_url": "https://api.github.com/repos/SimonSapin/rust/stargazers", "contributors_url": "https://api.github.com/repos/SimonSapin/rust/contributors", "subscribers_url": "https://api.github.com/repos/SimonSapin/rust/subscribers", "subscription_url": "https://api.github.com/repos/SimonSapin/rust/subscription", "commits_url": "https://api.github.com/repos/SimonSapin/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/SimonSapin/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/SimonSapin/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/SimonSapin/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/SimonSapin/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/SimonSapin/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/SimonSapin/rust/merges", "archive_url": "https://api.github.com/repos/SimonSapin/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/SimonSapin/rust/downloads", "issues_url": "https://api.github.com/repos/SimonSapin/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/SimonSapin/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/SimonSapin/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/SimonSapin/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/SimonSapin/rust/labels{/name}", "releases_url": "https://api.github.com/repos/SimonSapin/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/SimonSapin/rust/deployments", "created_at": "2013-01-20T11:03:20Z", "updated_at": "2022-10-02T08:45:21Z", "pushed_at": "2022-06-21T10:39:57Z", "git_url": "git://github.com/SimonSapin/rust.git", "ssh_url": "git@github.com:SimonSapin/rust.git", "clone_url": "https://github.com/SimonSapin/rust.git", "svn_url": "https://github.com/SimonSapin/rust", "homepage": "http://www.rust-lang.org", "size": 836185, "stargazers_count": 1, "watchers_count": 1, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "88953840ac9fc3e7f90af537b8b4177b76ae0d87", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T10:22:09Z", "pushed_at": "2023-06-19T11:00:09Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 919641, "stargazers_count": 82742, "watchers_count": 82742, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10956, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9631, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10956, "open_issues": 9631, "watchers": 82742, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/62528"}, "html": {"href": "https://github.com/rust-lang/rust/pull/62528"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/62528"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/62528/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/62528/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/62528/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/5f7768a976edc296c62479b936993b4dc9af065b"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 19, "review_comments": 4, "maintainer_can_modify": false, "commits": 7, "additions": 96, "deletions": 29, "changed_files": 2}