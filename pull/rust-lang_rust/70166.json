{"url": "https://api.github.com/repos/rust-lang/rust/pulls/70166", "id": 391217903, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkxMjE3OTAz", "html_url": "https://github.com/rust-lang/rust/pull/70166", "diff_url": "https://github.com/rust-lang/rust/pull/70166.diff", "patch_url": "https://github.com/rust-lang/rust/pull/70166.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/70166", "number": 70166, "state": "closed", "locked": false, "title": "Derive PartialEq, Eq and Hash for RangeInclusive", "user": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "body": "The manual implementation of `PartialEq`, `Eq` and `Hash` for `RangeInclusive` was functionally equivalent to a derived implementation.\r\n\r\nThis change removes the manual implementation and adds the respective derives.\r\nA side effect of this change is that the derives also add implementations for `StructuralPartialEq` and `StructuralEq`, which enables `RangeInclusive` to be used in const generics, closing #70155.\r\n\r\nThis change is enabled by #68835, which changed the field `is_empty: Option<bool>` to `exhausted: bool` removing the need for *semantic* equality instead of *structural* equality.\r\n\r\n## PartialEq\r\noriginal [`PartialEq`](https://github.com/rust-lang/rust/blob/f4c675c476c18b1a11041193f2f59d695b126bc8/src/libcore/ops/range.rs#L353-L359) implementation:\r\n```rust\r\n#[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\r\nimpl<Idx: PartialEq> PartialEq for RangeInclusive<Idx> {\r\n    #[inline]\r\n    fn eq(&self, other: &Self) -> bool {\r\n        self.start == other.start && self.end == other.end && self.exhausted == other.exhausted\r\n    }\r\n}\r\n```\r\nexpanded derive implementation (using `cargo expand ops::range`):\r\n```rust\r\n#[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\r\nimpl<Idx> crate::marker::StructuralPartialEq for RangeInclusive<Idx> {}\r\n\r\n#[automatically_derived]\r\n#[allow(unused_qualifications)]\r\n#[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\r\nimpl<Idx: crate::cmp::PartialEq> crate::cmp::PartialEq for RangeInclusive<Idx> {\r\n    #[inline]\r\n    fn eq(&self, other: &RangeInclusive<Idx>) -> bool {\r\n        match *other {\r\n            RangeInclusive { start: ref __self_1_0,end: ref __self_1_1, exhausted: ref __self_1_2 } => match *self {\r\n                RangeInclusive { start: ref __self_0_0, end: ref __self_0_1, exhausted: ref __self_0_2 } => {\r\n                    (*__self_0_0) == (*__self_1_0) && (*__self_0_1) == (*__self_1_1) && (*__self_0_2) == (*__self_1_2)\r\n                }\r\n            },\r\n        }\r\n    }\r\n    #[inline]\r\n    fn ne(&self, other: &RangeInclusive<Idx>) -> bool {\r\n        match *other {\r\n            RangeInclusive { start: ref __self_1_0, end: ref __self_1_1, exhausted: ref __self_1_2 } => match *self {\r\n                RangeInclusive { start: ref __self_0_0, end: ref __self_0_1exhausted: ref __self_0_2 } => {\r\n                    (*__self_0_0) != (*__self_1_0) || (*__self_0_1) != (*__self_1_1) || (*__self_0_2) != (*__self_1_2)\r\n                }\r\n            },\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThese implementations both test for *structural* equality, with the same order of field comparisons, and the bound `Idx: PartialEq` is the same.\r\n## Eq\r\noriginal [`Eq`](https://github.com/rust-lang/rust/blob/f4c675c476c18b1a11041193f2f59d695b126bc8/src/libcore/ops/range.rs#L361-L362) implementation:\r\n```rust\r\n#[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\r\nimpl<Idx: Eq> Eq for RangeInclusive<Idx> {}\r\n```\r\nexpanded derive implementation (using `cargo expand ops::range`):\r\n```rust\r\n#[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\r\nimpl<Idx> crate::marker::StructuralEq for RangeInclusive<Idx> {}\r\n\r\n#[automatically_derived]\r\n#[allow(unused_qualifications)]\r\n#[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\r\nimpl<Idx: crate::cmp::Eq> crate::cmp::Eq for RangeInclusive<Idx> {\r\n    #[inline]\r\n    #[doc(hidden)]\r\n    fn assert_receiver_is_total_eq(&self) -> () {\r\n        {\r\n            let _: crate::cmp::AssertParamIsEq<Idx>;\r\n            let _: crate::cmp::AssertParamIsEq<Idx>;\r\n            let _: crate::cmp::AssertParamIsEq<bool>;\r\n        }\r\n    }\r\n}\r\n```\r\nThese implementations are equivalent since `Eq` is just a marker trait and the bound `Idx: Eq` is the same.\r\n\r\n## Hash\r\noriginal [`Hash`](https://github.com/rust-lang/rust/blob/f4c675c476c18b1a11041193f2f59d695b126bc8/src/libcore/ops/range.rs#L364-L371) implementation:\r\n```rust\r\n#[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\r\nimpl<Idx: Hash> Hash for RangeInclusive<Idx> {\r\n    fn hash<H: Hasher>(&self, state: &mut H) {\r\n        self.start.hash(state);\r\n        self.end.hash(state);\r\n        self.exhausted.hash(state);\r\n    }\r\n}\r\n```\r\nexpanded derive implementation (using `cargo expand ops::range`):\r\n```rust\r\n#[automatically_derived]\r\n#[allow(unused_qualifications)]\r\n#[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\r\nimpl<Idx: crate::hash::Hash> crate::hash::Hash for RangeInclusive<Idx> {\r\n    fn hash<__H: crate::hash::Hasher>(&self, state: &mut __H) -> () {\r\n        match *self { RangeInclusive { start: ref __self_0_0, end: ref __self_0_1, exhausted: ref __self_0_2 } => {\r\n                crate::hash::Hash::hash(&(*__self_0_0), state);\r\n                crate::hash::Hash::hash(&(*__self_0_1), state);\r\n                crate::hash::Hash::hash(&(*__self_0_2), state)\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\nThese implementations are functionally equivalent, with the same order of field hashing, and the bound `Idx: Hash` is the same.", "created_at": "2020-03-19T20:20:25Z", "updated_at": "2020-03-21T16:19:30Z", "closed_at": "2020-03-21T07:46:57Z", "merged_at": "2020-03-21T07:46:57Z", "merge_commit_sha": "7b420aee3581f8d092df6e53f7be3b39890704fc", "assignee": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 583437191, "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors", "name": "S-waiting-on-bors", "color": "d3dddd", "default": false, "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."}], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/70166/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/70166/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70166/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/6570e275b9cfc6448c096e6bc86cddd602c333bd", "head": {"label": "CDirkx:range-inclusive-derives", "ref": "range-inclusive-derives", "sha": "6570e275b9cfc6448c096e6bc86cddd602c333bd", "user": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "repo": {"id": 236357890, "node_id": "MDEwOlJlcG9zaXRvcnkyMzYzNTc4OTA=", "name": "rust", "full_name": "CDirkx/rust", "private": false, "owner": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/CDirkx/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": true, "url": "https://api.github.com/repos/CDirkx/rust", "forks_url": "https://api.github.com/repos/CDirkx/rust/forks", "keys_url": "https://api.github.com/repos/CDirkx/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/CDirkx/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/CDirkx/rust/teams", "hooks_url": "https://api.github.com/repos/CDirkx/rust/hooks", "issue_events_url": "https://api.github.com/repos/CDirkx/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/CDirkx/rust/events", "assignees_url": "https://api.github.com/repos/CDirkx/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/CDirkx/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/CDirkx/rust/tags", "blobs_url": "https://api.github.com/repos/CDirkx/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/CDirkx/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/CDirkx/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/CDirkx/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/CDirkx/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/CDirkx/rust/languages", "stargazers_url": "https://api.github.com/repos/CDirkx/rust/stargazers", "contributors_url": "https://api.github.com/repos/CDirkx/rust/contributors", "subscribers_url": "https://api.github.com/repos/CDirkx/rust/subscribers", "subscription_url": "https://api.github.com/repos/CDirkx/rust/subscription", "commits_url": "https://api.github.com/repos/CDirkx/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/CDirkx/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/CDirkx/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/CDirkx/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/CDirkx/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/CDirkx/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/CDirkx/rust/merges", "archive_url": "https://api.github.com/repos/CDirkx/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/CDirkx/rust/downloads", "issues_url": "https://api.github.com/repos/CDirkx/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/CDirkx/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/CDirkx/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/CDirkx/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/CDirkx/rust/labels{/name}", "releases_url": "https://api.github.com/repos/CDirkx/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/CDirkx/rust/deployments", "created_at": "2020-01-26T18:38:55Z", "updated_at": "2022-07-30T15:30:25Z", "pushed_at": "2022-08-01T16:59:22Z", "git_url": "git://github.com/CDirkx/rust.git", "ssh_url": "git@github.com:CDirkx/rust.git", "clone_url": "https://github.com/CDirkx/rust.git", "svn_url": "https://github.com/CDirkx/rust", "homepage": "https://www.rust-lang.org", "size": 924727, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": true, "has_projects": false, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "f4c675c476c18b1a11041193f2f59d695b126bc8", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-20T03:06:09Z", "pushed_at": "2023-06-20T04:35:07Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 930404, "stargazers_count": 82761, "watchers_count": 82761, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10963, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9630, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10963, "open_issues": 9630, "watchers": 82761, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/70166"}, "html": {"href": "https://github.com/rust-lang/rust/pull/70166"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/70166"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/70166/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/70166/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/70166/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/6570e275b9cfc6448c096e6bc86cddd602c333bd"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 5, "review_comments": 0, "maintainer_can_modify": false, "commits": 2, "additions": 2, "deletions": 22, "changed_files": 1}