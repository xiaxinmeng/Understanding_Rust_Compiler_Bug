{"url": "https://api.github.com/repos/rust-lang/rust/pulls/68350", "id": 364451118, "node_id": "MDExOlB1bGxSZXF1ZXN0MzY0NDUxMTE4", "html_url": "https://github.com/rust-lang/rust/pull/68350", "diff_url": "https://github.com/rust-lang/rust/pull/68350.diff", "patch_url": "https://github.com/rust-lang/rust/pull/68350.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/68350", "number": 68350, "state": "closed", "locked": false, "title": "Add lint for never type regressions", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "body": "Fixes #67225\r\nFixes #66173\r\n\r\nTl;DR: This PR introduces a lint that detects the 'bad' never-type fallback in `objc` (which results in U.B.), while allowing safe fallback to occur without a warning.\r\n\r\nSee https://hackmd.io/@FohtAO04T92wF-8_TVATYQ/SJ0vcjyWL for some background on never-type fallback.\r\n\r\n### The problem\r\n\r\nWe want to reject \"bad\" code like this:\r\n\r\n```rust\r\nfn unconstrained_return<T>() -> Result<T, String> {\r\n    let ffi: fn() -> T = transmute(some_pointer);\r\n    Ok(ffi())\r\n}\r\nfn foo() {\r\n    match unconstrained_return::<_>() {\r\n        Ok(x) => x,  // `x` has type `_`, which is unconstrained\r\n        Err(s) => panic!(s),  // \u2026 except for unifying with the type of `panic!()`\r\n        // so that both `match` arms have the same type.\r\n        // Therefore `_` resolves to `!` and we \"return\" an `Ok(!)` value.\r\n    };\r\n}\r\n```\r\n\r\nin which enabling never-type fallback can cause undefined behavior.\r\n\r\nHowever, we want to allow \"good\" code like this:\r\n\r\n```rust\r\nstruct E;\r\nimpl From<!> for E {\r\n    fn from(x: !) -> E { x }\r\n}\r\nfn foo(never: !) {\r\n    <E as From<_>>::from(never);\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nwhich relies on never-type fallback being enabled, but is perfectly safe.\r\n\r\n### The solution\r\n\r\nThe key difference between these two examples lies in how the result of never-type fallback is used. In the first example, we end up inferring the generic parameter of `unconstrained_return` to be `!`. In the second example, we still infer a generic parameter to be `!` (`Box::<!>::new(!)`), but we also pass an uninhabited parameter to the function.\r\n\r\nAnother way of looking at this is that the call to `unconstrained_return` is **potentially live* - none of its arguments are uninhabited, so we might (and in fact, do) end up actually executing the call at runtime.\r\n\r\nIn the second example, `Box::new()` has an uninhabited argument (the `!` type). This means that this call is **definitely dead** - since the `!` type can never be instantiated, it's impossible for the call to every be executed.\r\n\r\nThis forms the basis for the check. For each method call, we check the following:\r\n\r\n1. Did the generic arguments have unconstrained type variables prior to fallback?\r\n2. Did any of the generic arguments become uninhabited after fallback?\r\n3. Are all of the method arguments inhabited?\r\n\r\nIf the answer to all of these is *yes*, we emit an error. I've left extensive comments in the code describing how this is accomplished.\r\n\r\nThese conditions ensure that we don't error on the `Box` and `From<!>` examples, while still erroring on the bad `objc` code.\r\n\r\n### Further notes\r\n\r\nYou can test out this branch with the original bad `objc` code as follows:\r\n\r\n1. Clone `https://github.com/Aaron1011/rust-objc`\r\n2. Checkout the `bad-fallback` branch.\r\n3. With a local rustc toolchain built from this branch, run `cargo build --example example`\r\n4. Note that you get an error due to an unconstrained return type\r\n\r\n### Unresolved questions\r\n\r\n1. This lint only checks method calls. I believe this is sufficient to catch any undefined behavior caused by fallback changes. Since the introduced undefined behavior relies on actually 'producing' a `!` type instance, the user must be doing something 'weird' (calling `transmute` or some other intrinsic). I don't think it's possible to trigger this without *some* kind of intrinsic call - however, I'm not 100% certain.\r\n\r\n2. This lint requires us to perform extra work during the type-checking of every single method. This is not ideal - however, changing this would have required significant refactoring to method type-checking. It would be a good idea to due to a perf run to see what kind of impact this has, and it another approach will be required.\r\n\r\n3. This 'lint' is currently a hard error. I believe it should always be possible to fix this error by adding explicit type annotations *somewhere* (though in the `obj` case, this may be in the caller of a macro). Unfortunately, I think actually emitting any kind of suggestion to the user will be extremely difficult. Hopefully, this error is so rare that the lack of suggestion isn't a problem. If users are running into this with any frequency, I think we'll need a different approach.\r\n\r\n4. If this PR is accepted, I see two ways of rolling this out:\r\n\r\n1. If the bad `objc` crate is the only crate known to be affected, we could potentially go from no warning/lint to a hard error in a single release (coupled enabling never-type fallback0.\r\n2. If we're worried that this could break a lot of crates, we could make this into a future compatibility lint. At some point in the future, we could enable never-type fallback while simultaneously making this a hard error.\r\n\r\nWhat we should **not** do is make the never-type fallback changes without making this lint (or whatever lint ends up getting accepted) into a hard error. A lint, even a deny-by-default one, would be insufficient, as we would run a serious risk introducing undefined behavior without any kind of explicit acknowledgment from the user.\r\n", "created_at": "2020-01-18T18:20:36Z", "updated_at": "2020-07-23T01:41:41Z", "closed_at": "2020-04-01T14:16:42Z", "merged_at": null, "merge_commit_sha": "ba9c74832ff320677d6990989d664b8093dd02f2", "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 583426710, "node_id": "MDU6TGFiZWw1ODM0MjY3MTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-review", "name": "S-waiting-on-review", "color": "d3dddd", "default": false, "description": "Status: Awaiting review from the assignee but also interested parties."}, {"id": 1472513132, "node_id": "MDU6TGFiZWwxNDcyNTEzMTMy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-never_type", "name": "F-never_type", "color": "f9c0cc", "default": false, "description": "`#![feature(never_type)]`"}], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/68350/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/68350/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68350/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/fe77a00ebde62938ca6e8a4732f89fe5cc14215c", "head": {"label": "Aaron1011:its-daylight-saving-time", "ref": "its-daylight-saving-time", "sha": "fe77a00ebde62938ca6e8a4732f89fe5cc14215c", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "repo": {"id": 37898905, "node_id": "MDEwOlJlcG9zaXRvcnkzNzg5ODkwNQ==", "name": "rust", "full_name": "Aaron1011/rust", "private": false, "owner": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/Aaron1011/rust", "description": "A safe, concurrent, practical language.", "fork": true, "url": "https://api.github.com/repos/Aaron1011/rust", "forks_url": "https://api.github.com/repos/Aaron1011/rust/forks", "keys_url": "https://api.github.com/repos/Aaron1011/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Aaron1011/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Aaron1011/rust/teams", "hooks_url": "https://api.github.com/repos/Aaron1011/rust/hooks", "issue_events_url": "https://api.github.com/repos/Aaron1011/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/Aaron1011/rust/events", "assignees_url": "https://api.github.com/repos/Aaron1011/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/Aaron1011/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/Aaron1011/rust/tags", "blobs_url": "https://api.github.com/repos/Aaron1011/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Aaron1011/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Aaron1011/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Aaron1011/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Aaron1011/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/Aaron1011/rust/languages", "stargazers_url": "https://api.github.com/repos/Aaron1011/rust/stargazers", "contributors_url": "https://api.github.com/repos/Aaron1011/rust/contributors", "subscribers_url": "https://api.github.com/repos/Aaron1011/rust/subscribers", "subscription_url": "https://api.github.com/repos/Aaron1011/rust/subscription", "commits_url": "https://api.github.com/repos/Aaron1011/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Aaron1011/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Aaron1011/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Aaron1011/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Aaron1011/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/Aaron1011/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Aaron1011/rust/merges", "archive_url": "https://api.github.com/repos/Aaron1011/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Aaron1011/rust/downloads", "issues_url": "https://api.github.com/repos/Aaron1011/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/Aaron1011/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/Aaron1011/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/Aaron1011/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Aaron1011/rust/labels{/name}", "releases_url": "https://api.github.com/repos/Aaron1011/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/Aaron1011/rust/deployments", "created_at": "2015-06-23T05:21:58Z", "updated_at": "2023-05-07T04:27:27Z", "pushed_at": "2023-01-21T22:46:54Z", "git_url": "git://github.com/Aaron1011/rust.git", "ssh_url": "git@github.com:Aaron1011/rust.git", "clone_url": "https://github.com/Aaron1011/rust.git", "svn_url": "https://github.com/Aaron1011/rust", "homepage": "http://www.rust-lang.org", "size": 1045768, "stargazers_count": 3, "watchers_count": 3, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 3, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "35b5157db591539ffe8acaaae3438cc1d3ed9619", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-20T02:32:08Z", "pushed_at": "2023-06-20T02:02:30Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 930398, "stargazers_count": 82760, "watchers_count": 82760, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10961, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9626, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10961, "open_issues": 9626, "watchers": 82760, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/68350"}, "html": {"href": "https://github.com/rust-lang/rust/pull/68350"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/68350"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/68350/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/68350/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/68350/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/fe77a00ebde62938ca6e8a4732f89fe5cc14215c"}}, "author_association": "MEMBER", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 90, "review_comments": 8, "maintainer_can_modify": false, "commits": 25, "additions": 981, "deletions": 31, "changed_files": 20}