{"url": "https://api.github.com/repos/rust-lang/rust/pulls/25350", "id": 35275358, "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNzUzNTg=", "html_url": "https://github.com/rust-lang/rust/pull/25350", "diff_url": "https://github.com/rust-lang/rust/pull/25350.diff", "patch_url": "https://github.com/rust-lang/rust/pull/25350.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/25350", "number": 25350, "state": "closed", "locked": false, "title": "Initial MSVC support for the compiler", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "body": "Special thanks to @retep998 for the [excellent writeup](https://github.com/rust-lang/rfcs/issues/1061) of tasks to be done and @ricky26 for initially blazing the trail here!\n# MSVC Support\n\nThis goal of this series of commits is to add MSVC support to the Rust compiler\nand build system, allowing it more easily interoperate with Visual Studio\ninstallations and native libraries compiled outside of MinGW.\n\nThe tl;dr; of this change is that there is a new target of the compiler,\n`x86_64-pc-windows-msvc`, which will not interact with the MinGW toolchain at\nall and will instead use `link.exe` to assemble output artifacts.\n## Why try to use MSVC?\n\nWith today's Rust distribution, when you install a compiler on Windows you also\ninstall `gcc.exe` and a number of supporting libraries by default (this can be\nopted out of). This allows installations to remain independent of MinGW\ninstallations, but it still generally requires native code to be linked with\nMinGW instead of MSVC. Some more background can also be found in #1768 about the\nincompatibilities between MinGW and MSVC.\n\nOverall the current installation strategy is quite nice so long as you don't\ninteract with native code, but once you do the usage of a MinGW-based `gcc.exe`\nstarts to get quite painful.\n\nRelying on a nonstandard Windows toolchain has also been a long-standing \"code\nsmell\" of Rust and has been slated for remedy for quite some time now. Using a\nstandard toolchain is a great motivational factor for improving the\ninteroperability of Rust code with the native system.\n## What does it mean to use MSVC?\n\n\"Using MSVC\" can be a bit of a nebulous concept, but this PR defines it as:\n- The build system for Rust will build as much code as possible with the MSVC\n  compiler, `cl.exe`.\n- The build system will use native MSVC tools for managing archives.\n- The compiler will link all output with `link.exe` instead of `gcc.exe`.\n\nNone of these are currently implemented today, but all are required for the\ncompiler to fluently interoperate with MSVC.\n## How does this all work?\n\nAt the highest level, this PR adds a new target triple to the Rust compiler:\n\n```\nx86_64-pc-windows-msvc\n```\n\nAll logic for using MSVC or not is scoped within this triple and code can\nconditionally build for MSVC or MinGW via:\n\n```\n#[cfg(target_env = \"msvc\")]\n```\n\nIt is expected that auto builders will be set up for MSVC-based compiles in\naddition to the existing MinGW-based compiles, and we will likely soon start\nshipping MSVC nightlies where `x86_64-pc-windows-msvc` is the host target triple\nof the compiler.\n# Summary of changes\n\nHere I'll explain at a high level what many of the changes made were targeted\nat, but many more details can be found in the commits themselves. Many thanks to\n@retep998 for the excellent writeup in rust-lang/rfcs#1061 and @rick26 for a lot\nof the initial proof-of-concept work!\n## Build system changes\n\nAs is probably expected, a large chunk of this PR is changes to Rust's build\nsystem to build with MSVC. At a high level **it is an explicit non goal** to\nenable building outside of a MinGW shell, instead all Makefile infrastructure we\nhave today is retrofitted with support to use MSVC instead of the standard MSVC\ntoolchain. Some of the high-level changes are:\n- The configure script now detects when MSVC is being targeted and adds a number\n  of additional requirements about the build environment:\n  - The `--msvc-root` option must be specified or `cl.exe` must be in PATH to\n    discover where MSVC is installed. The compiler in use is also required to\n    target x86_64.\n  - Once the MSVC root is known, the INCLUDE/LIB environment variables are\n    scraped so they can be reexported by the build system.\n  - CMake is required to build LLVM with MSVC (and LLVM is also configured with\n    CMake instead of the normal configure script).\n  - jemalloc is currently unconditionally disabled for MSVC targets as jemalloc\n    isn't a hard requirement and I don't know how to build it with MSVC.\n- Invocations of a C and/or C++ compiler are now abstracted behind macros to\n  appropriately call the underlying compiler with the correct format of\n  arguments, for example there is now a macro for \"assemble an archive from\n  objects\" instead of hard-coded invocations of `$(AR) crus liboutput.a ...`\n- The output filenames for standard libraries such as morestack/compiler-rt are\n  now \"more correct\" on windows as they are shipped as `foo.lib` instead of\n  `libfoo.a`.\n- Rust targets can now depend on native tools provided by LLVM, and as you'll\n  see in the commits the entire MSVC target depends on `llvm-ar.exe`.\n- Support for custom arbitrary makefile dependencies of Rust targets has been\n  added. The MSVC target for `rustc_llvm` currently requires a custom `.DEF`\n  file to be passed to the linker to get further linkages to complete.\n## Compiler changes\n\nThe modifications made to the compiler have so far largely been minor tweaks\nhere and there, mostly just adding a layer of abstraction over whether MSVC or a\nGNU-like linker is being used. At a high-level these changes are:\n- The section name for metadata storage in dynamic libraries is called `.rustc`\n  for MSVC-based platorms as section names cannot contain more than 8\n  characters.\n- The implementation of `rustc_back::Archive` was refactored, but the\n  functionality has remained the same.\n- Targets can now specify the default `ar` utility to use, and for MSVC this\n  defaults to `llvm-ar.exe`\n- The building of the linker command in `rustc_trans::back::link` has been\n  abstracted behind a trait for the same code path to be used between GNU and\n  MSVC linkers.\n## Standard library changes\n\nOnly a few small changes were required to the stadnard library itself, and only\nfor minor differences between the C runtime of msvcrt.dll and MinGW's libc.a\n- Some function names for floating point functions have leading underscores, and\n  some are not present at all.\n- Linkage to the `advapi32` library for crypto-related functions is now\n  explicit.\n- Some small bits of C code here and there were fixed for compatibility with\n  MSVC's cl.exe compiler.\n# Future Work\n\nThis commit is not yet a 100% complete port to using MSVC as there are still\nsome key components missing as well as some unimplemented optimizations. This PR\nis already getting large enough that I wanted to draw the line here, but here's\na list of what is not implemented in this PR, on purpose:\n## Unwinding\n\nThe revision of our LLVM submodule [does not seem to implement](https://github.com/rust-lang/llvm/blob/rust-llvm-2015-02-19/lib/CodeGen/Passes.cpp#L454-L461) does not\nsupport lowering SEH exception handling on the Windows MSVC targets, so\nunwinding support is not currently implemented for the standard library (it's\nlowered to an abort).\n\nIt looks like, however, that upstream LLVM has quite a bit more support for SEH\nunwinding and landing pads than the current revision we have, so adding support\nwill likely just involve updating LLVM and then adding some shims of our own\nhere and there.\n## dllimport and dllexport\n\nAn interesting part of Windows which MSVC forces our hand on (and apparently\nMinGW didn't) is the usage of `dllimport` and `dllexport` attributes in LLVM IR\nas well as native dependencies (in C these correspond to\n`__declspec(dllimport)`).\n\nWhenever a dynamic library is built by MSVC it must have its public interface\nspecified by functions tagged with `dllexport` or otherwise they're not\navailable to be linked against. This poses a few problems for the compiler, some\nof which are somewhat fundamental, but this commit alters the compiler to attach\nthe `dllexport` attribute to all LLVM functions that are reachable (e.g. they're\nalready tagged with external linkage). This is suboptimal for a few reasons:\n- If an object file will never be included in a dynamic library, there's no need\n  to attach the dllexport attribute. Most object files in Rust are not destined\n  to become part of a dll as binaries are statically linked by default.\n- If the compiler is emitting both an rlib and a dylib, the same source object\n  file is currently used but with MSVC this may be less feasible. The compiler\n  may be able to get around this, but it may involve some invasive changes to\n  deal with this.\n\nThe flipside of this situation is that whenever you link to a dll and you import\na function from it, the import should be tagged with `dllimport`. At this time,\nhowever, the compiler does not emit `dllimport` for any declarations other than\nconstants (where it is required), which is again suboptimal for even more\nreasons!\n- Calling a function imported from another dll without using `dllimport` causes\n  the linker/compiler to have extra overhead (one `jmp` instruction on x86) when\n  calling the function.\n- The same object file may be used in different circumstances, so a function may\n  be imported from a dll if the object is linked into a dll, but it may be\n  just linked against if linked into an rlib.\n- The compiler has no knowledge about whether native functions should be tagged\n  dllimport or not.\n\nFor now the compiler takes the perf hit (I do not have any numbers to this\neffect) by marking very little as `dllimport` and praying the linker will take\ncare of everything. Fixing this problem will likely require adding a few\nattributes to Rust itself (feature gated at the start) and then strongly\nrecommending static linkage on Windows! This may also involve shipping a\nstatically linked compiler on Windows instead of a dynamically linked compiler,\nbut these sorts of changes are pretty invasive and aren't part of this PR.\n## CI integration\n\nThankfully we don't need to set up a new snapshot bot for the changes made here as our snapshots are freestanding already, we should be able to use the same snapshot to bootstrap both MinGW and MSVC compilers (once a new snapshot is made from these changes).\n\nI plan on setting up a new suite of auto bots which are testing MSVC configurations for now as well, for now they'll just be bootstrapping and not running tests, but once unwinding is implemented they'll start running all tests as well and we'll eventually start gating on them as well.\n\n---\n\nI'd love as many eyes on this as we've got as this was one of my first interactions with MSVC and Visual Studio, so there may be glaring holes that I'm missing here and there!\n\ncc @retep998, @ricky26, @vadimcn, @klutzy \n\nr? @brson \n", "created_at": "2015-05-12T21:58:42Z", "updated_at": "2015-06-16T10:40:42Z", "closed_at": "2015-05-20T02:08:00Z", "merged_at": "2015-05-20T02:08:00Z", "merge_commit_sha": "51c3c1b1cdc4ff4e831008a5e479084a1df83960", "assignee": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/25350/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/25350/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/25350/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/cb3071b2736244db03f800102f123f437fabc9c1", "head": {"label": "alexcrichton:msvc", "ref": "msvc", "sha": "cb3071b2736244db03f800102f123f437fabc9c1", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "repo": {"id": 7385331, "node_id": "MDEwOlJlcG9zaXRvcnk3Mzg1MzMx", "name": "rust", "full_name": "alexcrichton/rust", "private": false, "owner": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/alexcrichton/rust", "description": "a safe, concurrent, practical language", "fork": true, "url": "https://api.github.com/repos/alexcrichton/rust", "forks_url": "https://api.github.com/repos/alexcrichton/rust/forks", "keys_url": "https://api.github.com/repos/alexcrichton/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/alexcrichton/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/alexcrichton/rust/teams", "hooks_url": "https://api.github.com/repos/alexcrichton/rust/hooks", "issue_events_url": "https://api.github.com/repos/alexcrichton/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/alexcrichton/rust/events", "assignees_url": "https://api.github.com/repos/alexcrichton/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/alexcrichton/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/alexcrichton/rust/tags", "blobs_url": "https://api.github.com/repos/alexcrichton/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/alexcrichton/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/alexcrichton/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/alexcrichton/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/alexcrichton/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/alexcrichton/rust/languages", "stargazers_url": "https://api.github.com/repos/alexcrichton/rust/stargazers", "contributors_url": "https://api.github.com/repos/alexcrichton/rust/contributors", "subscribers_url": "https://api.github.com/repos/alexcrichton/rust/subscribers", "subscription_url": "https://api.github.com/repos/alexcrichton/rust/subscription", "commits_url": "https://api.github.com/repos/alexcrichton/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/alexcrichton/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/alexcrichton/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/alexcrichton/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/alexcrichton/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/alexcrichton/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/alexcrichton/rust/merges", "archive_url": "https://api.github.com/repos/alexcrichton/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/alexcrichton/rust/downloads", "issues_url": "https://api.github.com/repos/alexcrichton/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/alexcrichton/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/alexcrichton/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/alexcrichton/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/alexcrichton/rust/labels{/name}", "releases_url": "https://api.github.com/repos/alexcrichton/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/alexcrichton/rust/deployments", "created_at": "2012-12-31T08:59:51Z", "updated_at": "2019-03-30T13:47:44Z", "pushed_at": "2023-02-15T16:13:51Z", "git_url": "git://github.com/alexcrichton/rust.git", "ssh_url": "git@github.com:alexcrichton/rust.git", "clone_url": "https://github.com/alexcrichton/rust.git", "svn_url": "https://github.com/alexcrichton/rust", "homepage": "http://www.rust-lang.org", "size": 1061611, "stargazers_count": 8, "watchers_count": 8, "language": "Rust", "has_issues": false, "has_projects": false, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 1, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": null, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 1, "open_issues": 0, "watchers": 8, "default_branch": "incoming"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "9c47ebb00abecf2b2fe7fa0b0ea059c8327b40f2", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-20T07:37:00Z", "pushed_at": "2023-06-20T07:33:05Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 930628, "stargazers_count": 82766, "watchers_count": 82766, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10963, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9623, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10963, "open_issues": 9623, "watchers": 82766, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/25350"}, "html": {"href": "https://github.com/rust-lang/rust/pull/25350"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/25350"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/25350/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/25350/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/25350/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/cb3071b2736244db03f800102f123f437fabc9c1"}}, "author_association": "MEMBER", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 38, "review_comments": 25, "maintainer_can_modify": false, "commits": 31, "additions": 1832, "deletions": 1066, "changed_files": 47}