{"url": "https://api.github.com/repos/rust-lang/rust/pulls/93628", "id": 839633373, "node_id": "PR_kwDOAAsO6M4yC8nd", "html_url": "https://github.com/rust-lang/rust/pull/93628", "diff_url": "https://github.com/rust-lang/rust/pull/93628.diff", "patch_url": "https://github.com/rust-lang/rust/pull/93628.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/93628", "number": 93628, "state": "closed", "locked": false, "title": "Stabilize `let else`", "user": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "body": ":tada:  **Stabilizes the `let else` feature, added by [RFC 3137](https://github.com/rust-lang/rfcs/pull/3137).** :tada: \r\n\r\nReference PR: https://github.com/rust-lang/reference/pull/1156\r\n\r\ncloses #87335 (`let else` tracking issue)\r\n\r\nFCP: https://github.com/rust-lang/rust/pull/93628#issuecomment-1029383585\r\n\r\n----------\r\n \r\n## Stabilization report\r\n\r\n### Summary\r\n\r\nThe feature allows refutable patterns in `let` statements if the expression is\r\nfollowed by a diverging `else`:\r\n\r\n```Rust\r\nfn get_count_item(s: &str) -> (u64, &str) {\r\n    let mut it = s.split(' ');\r\n    let (Some(count_str), Some(item)) = (it.next(), it.next()) else {\r\n        panic!(\"Can't segment count item pair: '{s}'\");\r\n    };\r\n    let Ok(count) = u64::from_str(count_str) else {\r\n        panic!(\"Can't parse integer: '{count_str}'\");\r\n    };\r\n    (count, item)\r\n}\r\nassert_eq!(get_count_item(\"3 chairs\"), (3, \"chairs\"));\r\n```\r\n\r\n### Differences from the RFC / Desugaring\r\n\r\nOutside of desugaring I'm not aware of any differences between the implementation and the RFC. The chosen desugaring has been changed from the RFC's [original](https://rust-lang.github.io/rfcs/3137-let-else.html#reference-level-explanations). You can read a detailed discussion of the implementation history of it in @cormacrelf 's [summary](https://github.com/rust-lang/rust/pull/93628#issuecomment-1041143670) in this thread, as well as the [followup](https://github.com/rust-lang/rust/pull/93628#issuecomment-1046598419). Since that followup, further changes have happened to the desugaring, in #98574, #99518, #99954. The later changes were mostly about the drop order: On match, temporaries drop in the same order as they would for a `let` declaration. On mismatch, temporaries drop before the `else` block.\r\n\r\n### Test cases\r\n\r\nIn chronological order as they were merged.\r\n\r\nAdded by df9a2e0687895731e12f4a2651e8d70acd08872d (#87688):\r\n\r\n* [`ui/pattern/usefulness/top-level-alternation.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/pattern/usefulness/top-level-alternation.rs) to ensure the unreachable pattern lint visits patterns inside `let else`.\r\n\r\nAdded by 5b95df4bdc330f34213812ad65cae86ced90d80c (#87688):\r\n\r\n* [`ui/let-else/let-else-bool-binop-init.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-bool-binop-init.rs) to ensure that no lazy boolean expressions (using `&&` or `||`) are allowed in the expression, as the RFC mandates.\r\n* [`ui/let-else/let-else-brace-before-else.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-brace-before-else.rs) to ensure that no `}` directly preceding the `else` is allowed in the expression, as the RFC mandates.\r\n* [`ui/let-else/let-else-check.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-check.rs) to ensure that `#[allow(...)]` attributes added to the entire `let` statement apply for the `else` block.\r\n* [`ui/let-else/let-else-irrefutable.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-irrefutable.rs) to ensure that the `irrefutable_let_patterns` lint fires.\r\n* [`ui/let-else/let-else-missing-semicolon.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-missing-semicolon.rs) to ensure the presence of semicolons at the end of the `let` statement.\r\n* [`ui/let-else/let-else-non-diverging.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-non-diverging.rs) to ensure the `else` block diverges.\r\n* [`ui/let-else/let-else-run-pass.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-run-pass.rs) to ensure the feature works in some simple test case settings.\r\n* [`ui/let-else/let-else-scope.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-scope.rs) to ensure the bindings created by the outer `let` expression are not available in the `else` block of it.\r\n\r\nAdded by bf7c32a4477a76bfd18fdcd8f45a939cbed82d34 (#89965):\r\n\r\n* [`ui/let-else/issue-89960.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/issue-89960.rs) as a regression test for the ICE-on-error bug #89960 . Later in 102b9125e1cefbb8ed8408d2db3f9f7d5afddbf0 this got removed in favour of more comprehensive tests.\r\n\r\nAdded by 856541963ce95ef4f7d4a81784bb5002ccf63c93 (#89974):\r\n\r\n* [`ui/let-else/let-else-if.rs`](https://github.com/rust-lang/rust/blob/1.58.1/src/test/ui/let-else/let-else-if.rs) to test for the improved error message that points out that `let else if` is not possible.\r\n\r\nAdded by 9b45713b6c1775f0103a1ebee6ab7c6d9b781a21:\r\n\r\n* [`ui/let-else/let-else-allow-unused.rs`](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-allow-unused.rs) as a regression test for #89807, to ensure that `#[allow(...)]` attributes added to the entire `let` statement apply for bindings created by the `let else` pattern.\r\n\r\nAdded by 61bcd8d3075471b3867428788c49f54fffe53f52 (#89841):\r\n\r\n* [`ui/let-else/let-else-non-copy.rs`](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-non-copy.rs) to ensure that a copy is performed out of non-copy wrapper types. This mirrors `if let` behaviour. The test case bases on rustc internal changes originally meant for #89933 but then removed from the PR due to the error prior to the improvements of #89841.\r\n* [`ui/let-else/let-else-source-expr-nomove-pass.rs `](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-source-expr-nomove-pass.rs) to ensure that while there is a move of the binding in the successful case, the `else` case can still access the non-matching value. This mirrors `if let` behaviour.\r\n\r\nAdded by 102b9125e1cefbb8ed8408d2db3f9f7d5afddbf0 (#89841):\r\n\r\n* [`ui/let-else/let-else-ref-bindings.rs`](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-ref-bindings.rs) and [`ui/let-else/let-else-ref-bindings-pass.rs `](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-ref-bindings-pass.rs) to check `ref` and `ref mut` keywords in the pattern work correctly and error when needed.\r\n\r\nAdded by 2715c5f984fda7faa156d1c9cf91aa4934f0e00f (#89841):\r\n\r\n* Match ergonomic tests adapted from the `rfc2005` test suite.\r\n\r\nAdded by fec8a507a27de1b08a0b95592dc8ec93bf0a321a (#89841):\r\n\r\n* [`ui/let-else/let-else-deref-coercion-annotated.rs`](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-deref-coercion-annotated.rs) and [`ui/let-else/let-else-deref-coercion.rs`](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-deref-coercion.rs) to check deref coercions.\r\n\r\n#### Added since this stabilization report was originally written (2022-02-09)\r\n\r\nAdded by 76ea56667703ac06689ff1d6fba5d170fa7392a7 (#94211):\r\n\r\n* [`ui/let-else/let-else-destructuring.rs`](https://github.com/rust-lang/rust/blob/1.63.0/src/test/ui/let-else/let-else-destructuring.rs) to give a nice error message if an user tries to do an assignment with a (possibly refutable) pattern and an `else` block, like asked for in #93995.\r\n\r\nAdded by e7730dcb7eb29a10ee73f269f4dc6e9d606db0da (#94208):\r\n\r\n* [`ui/let-else/let-else-allow-in-expr.rs`](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-allow-in-expr.rs) to test whether `#[allow(unused_variables)]` works in the expr, as well as its non presence, as well as putting it on the entire `let else` *affects* the expr, too. This was adding a missing test as pointed out by the stabilization report.\r\n* Expansion of `ui/let-else/let-else-allow-unused.rs` and `ui/let-else/let-else-check.rs` to ensure that non-presence of `#[allow(unused)]` does issue the unused lint. This was adding a missing test case as pointed out by the stabilization report.\r\n\r\nAdded by 5bd71063b3810d977aa376d1e6dd7cec359330cc (#94208):\r\n\r\n* [`ui/let-else/let-else-slicing-error.rs`](https://github.com/rust-lang/rust/blob/1.61.0/src/test/ui/let-else/let-else-slicing-error.rs), a regression test for #92069, which got fixed without addition of a regression test. This resolves a missing test as pointed out by the stabilization report.\r\n\r\nAdded by 5374688e1d8cbcff7d1d14bb34e38fe6fe7c233e (#98574):\r\n\r\n* [`src/test/ui/async-await/async-await-let-else.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/async-await/async-await-let-else.rs) to test the interaction of async/await with `let else`\r\n\r\nAdded by 6c529ded8674b89c46052da92399227c3b764c6a (#98574):\r\n\r\n* [`src/test/ui/let-else/let-else-temporary-lifetime.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/let-else/let-else-temporary-lifetime.rs) as a (partial) regression test for #98672\r\n\r\nAdded by 9b566401068cb8450912f6ab48f3d0e60f5cb482 (#99518):\r\n\r\n* [`src/test/ui/let-else/let-else-temp-borrowck.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/let-else/let-else-temporary-lifetime.rs) as a regression test for #93951\r\n* Extension of `src/test/ui/let-else/let-else-temporary-lifetime.rs` to include a partial regression test for #98672 (especially regarding `else` drop order)\r\n\r\nAdded by baf9a7cb57120ec1411196214fd0d1c33fb18bf6 (#99518):\r\n\r\n* Extension of `src/test/ui/let-else/let-else-temporary-lifetime.rs` to include a partial regression test for #93951, similar to `let-else-temp-borrowck.rs`\r\n\r\nAdded by 60be2de8b7b8a1c4eee7e065b8cef38ea629a6a3 (#99518):\r\n\r\n* Extension of `src/test/ui/let-else/let-else-temporary-lifetime.rs` to include a program that can now be compiled thanks to borrow checker implications of #99518\r\n\r\nAdded by 47a7a91c969ed2edd12c674ca05c1baf867f6f6f (#100132):\r\n\r\n* [`src/test/ui/let-else/issue-100103.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/let-else/issue-100103.rs), as a regression test for #100103, to ensure that there is no ICE when doing `Err(...)?` inside else blocks.\r\n\r\nAdded by e3c5bd617d040b5ee0bc79e6e7f01772adce791b (#100443):\r\n\r\n* [`src/test/ui/let-else/let-else-then-diverge.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/let-else/let-else-then-diverge.rs), to verify that there is no unreachable code error with the current desugaring.\r\n\r\nAdded by 981852677c531d52f701b870bb27b45668a44d52 (#100443):\r\n\r\n* [`src/test/ui/let-else/issue-94176.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/let-else/issue-94176.rs), to make sure that a correct span is emitted for a missing trailing expression error. Regression test for #94176.\r\n\r\nAdded by e182d12a8493b40a557394325a3a713b6528de60 (#100434):\r\n\r\n* [src/test/ui/unpretty/pretty-let-else.rs](https://github.com/rust-lang/rust/blob/master/src/test/ui/unpretty/pretty-let-else.rs), as a regression test to ensure pretty printing works for `let else` (this bug surfaced in many different ways)\r\n\r\nAdded by e26285603ca8b83b9d06e56f74e10e3d410553ff (#99954):\r\n\r\n* [`src/test/ui/let-else/let-else-temporary-lifetime.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/let-else/let-else-temporary-lifetime.rs) extended to contain & borrows as well, as this was identified as an earlier issue with the desugaring: https://github.com/rust-lang/rust/issues/98672#issuecomment-1200196921\r\n\r\nAdded by 2d8460ef43d902f34ba2133fe38f66ee8d2fdafc (#99291):\r\n\r\n* [`src/test/ui/let-else/let-else-drop-order.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/let-else/let-else-drop-order.rs) a matrix based test for various drop order behaviour of `let else`. Especially, it verifies equality of `let` and `let else` drop orders, [resolving](https://github.com/rust-lang/rust/pull/93628#issuecomment-1238498468) a [stabilization blocker](https://github.com/rust-lang/rust/pull/93628#issuecomment-1055738523).\r\n\r\nAdded by 1b87ce0d4092045728c1c68282769d555706f273 (#101410):\r\n\r\n* Edit to `src/test/ui/let-else/let-else-temporary-lifetime.rs` to add the `-Zvalidate-mir` flag, as a regression test for #99228\r\n\r\nAdded by af591ebe4d0cf2097a5fdc0bb710442d0f2e7876 (#101410):\r\n\r\n* [`src/test/ui/let-else/issue-99975.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui/let-else/issue-99975.rs) as a regression test for the ICE #99975.\r\n\r\nAdded by this PR:\r\n\r\n* `ui/let-else/let-else.rs`, a simple run-pass check, similar to `ui/let-else/let-else-run-pass.rs`.\r\n\r\n### Things not currently tested\r\n\r\n* ~~The `#[allow(...)]` tests check whether allow works, but they don't check whether the non-presence of allow causes a lint to fire.~~ \u2192 *test added by e7730dcb7eb29a10ee73f269f4dc6e9d606db0da*\r\n* ~~There is no `#[allow(...)]` test for the expression, as there are tests for the pattern and the else block.~~ \u2192 *test added by e7730dcb7eb29a10ee73f269f4dc6e9d606db0da*\r\n* ~~`let-else-brace-before-else.rs` forbids the `let ... = {} else {}` pattern and there is a rustfix to obtain `let ... = ({}) else {}`. I'm not sure whether the `.fixed` files are checked by the tooling that they compile. But if there is no such check, it would be neat to make sure that `let ... = ({}) else {}` compiles.~~ \u2192 *test added by e7730dcb7eb29a10ee73f269f4dc6e9d606db0da*\r\n* ~~#92069 got closed as fixed, but no regression test was added. Not sure it's worth to add one.~~ \u2192 *test added by 5bd71063b3810d977aa376d1e6dd7cec359330cc*\r\n* ~~consistency between `let else` and `if let` regarding lifetimes and drop order: https://github.com/rust-lang/rust/pull/93628#issuecomment-1055738523~~ \u2192 *test added by 2d8460ef43d902f34ba2133fe38f66ee8d2fdafc*\r\n\r\nEdit: they are all tested now.\r\n\r\n### Possible future work / Refutable destructuring assignments\r\n\r\n[RFC 2909](https://rust-lang.github.io/rfcs/2909-destructuring-assignment.html) specifies destructuring assignment, allowing statements like `FooBar { a, b, c } = foo();`.\r\nAs it was stabilized, destructuring assignment only allows *irrefutable* patterns, which before the advent of `let else` were the only patterns that `let` supported.\r\nSo the combination of `let else` and destructuring assignments gives reason to think about extensions of the destructuring assignments feature that allow refutable patterns, discussed in #93995.\r\n\r\nA naive mapping of `let else` to destructuring assignments in the form of `Some(v) = foo() else { ... };` might not be the ideal way. `let else` needs a diverging `else` clause as it introduces new bindings, while assignments have a default behaviour to fall back to if the pattern does not match, in the form of not performing the assignment. Thus, there is no good case to require divergence, or even an `else` clause at all, beyond the need for having *some* introducer syntax so that it is clear to readers that the assignment is not a given (enums and structs look similar). There are better candidates for introducer syntax however than an empty `else {}` clause, like `maybe` which could be added as a keyword on an edition boundary:\r\n\r\n```Rust\r\nlet mut v = 0;\r\nmaybe Some(v) = foo(&v);\r\nmaybe Some(v) = foo(&v) else { bar() };\r\n```\r\n\r\nFurther design discussion is left to an RFC, or the linked issue.", "created_at": "2022-02-03T19:28:27Z", "updated_at": "2022-09-22T15:11:55Z", "closed_at": "2022-09-17T13:38:03Z", "merged_at": "2022-09-17T13:38:03Z", "merge_commit_sha": "3ad81e0dd854d0edaeea7429fba6c2255c6a27ef", "assignee": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 223796632, "node_id": "MDU6TGFiZWwyMjM3OTY2MzI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/relnotes", "name": "relnotes", "color": "fad8c7", "default": false, "description": "Marks issues that should be documented in the release notes of the next release."}, {"id": 583437191, "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors", "name": "S-waiting-on-bors", "color": "d3dddd", "default": false, "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 1206122880, "node_id": "MDU6TGFiZWwxMjA2MTIyODgw", "url": "https://api.github.com/repos/rust-lang/rust/labels/needs-fcp", "name": "needs-fcp", "color": "fceb9f", "default": false, "description": "This change is insta-stable, so needs a completed FCP to proceed."}, {"id": 1404942788, "node_id": "MDU6TGFiZWwxNDA0OTQyNzg4", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-fcp", "name": "S-waiting-on-fcp", "color": "d3dddd", "default": false, "description": "Status: PR is in FCP and is awaiting for FCP to complete."}, {"id": 2420759390, "node_id": "MDU6TGFiZWwyNDIwNzU5Mzkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-query-system", "name": "A-query-system", "color": "f7e101", "default": false, "description": "Area: The rustc query system (https://rustc-dev-guide.rust-lang.org/query.html)"}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/97", "html_url": "https://github.com/rust-lang/rust/milestone/97", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/97/labels", "id": 8274783, "node_id": "MI_kwDOAAsO6M4AfkNf", "number": 97, "title": "1.65.0", "description": null, "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 953, "state": "closed", "created_at": "2022-08-06T12:29:11Z", "updated_at": "2023-04-12T04:50:01Z", "due_on": null, "closed_at": "2022-11-03T14:43:27Z"}, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/93628/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/93628/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93628/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/37dde3fb58554ec8c421dcf41ef1a02afc45253f", "head": {"label": "est31:stabilize_let_else", "ref": "stabilize_let_else", "sha": "37dde3fb58554ec8c421dcf41ef1a02afc45253f", "user": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "repo": {"id": 48673970, "node_id": "MDEwOlJlcG9zaXRvcnk0ODY3Mzk3MA==", "name": "rust", "full_name": "est31/rust", "private": false, "owner": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/est31/rust", "description": "A safe, concurrent, practical language.", "fork": true, "url": "https://api.github.com/repos/est31/rust", "forks_url": "https://api.github.com/repos/est31/rust/forks", "keys_url": "https://api.github.com/repos/est31/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/est31/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/est31/rust/teams", "hooks_url": "https://api.github.com/repos/est31/rust/hooks", "issue_events_url": "https://api.github.com/repos/est31/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/est31/rust/events", "assignees_url": "https://api.github.com/repos/est31/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/est31/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/est31/rust/tags", "blobs_url": "https://api.github.com/repos/est31/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/est31/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/est31/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/est31/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/est31/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/est31/rust/languages", "stargazers_url": "https://api.github.com/repos/est31/rust/stargazers", "contributors_url": "https://api.github.com/repos/est31/rust/contributors", "subscribers_url": "https://api.github.com/repos/est31/rust/subscribers", "subscription_url": "https://api.github.com/repos/est31/rust/subscription", "commits_url": "https://api.github.com/repos/est31/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/est31/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/est31/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/est31/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/est31/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/est31/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/est31/rust/merges", "archive_url": "https://api.github.com/repos/est31/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/est31/rust/downloads", "issues_url": "https://api.github.com/repos/est31/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/est31/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/est31/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/est31/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/est31/rust/labels{/name}", "releases_url": "https://api.github.com/repos/est31/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/est31/rust/deployments", "created_at": "2015-12-28T04:34:25Z", "updated_at": "2023-06-06T01:25:02Z", "pushed_at": "2023-06-08T22:08:30Z", "git_url": "git://github.com/est31/rust.git", "ssh_url": "git@github.com:est31/rust.git", "clone_url": "https://github.com/est31/rust.git", "svn_url": "https://github.com/est31/rust", "homepage": "http://www.rust-lang.org", "size": 880619, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "35a0407814a6b5a04f0929105631e9c69e293e9d", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T13:19:04Z", "pushed_at": "2023-06-19T13:47:15Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 920473, "stargazers_count": 82747, "watchers_count": 82747, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10956, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9631, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10956, "open_issues": 9631, "watchers": 82747, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/93628"}, "html": {"href": "https://github.com/rust-lang/rust/pull/93628"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/93628"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/93628/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/93628/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/93628/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/37dde3fb58554ec8c421dcf41ef1a02afc45253f"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 143, "review_comments": 2, "maintainer_can_modify": false, "commits": 5, "additions": 170, "deletions": 211, "changed_files": 114}