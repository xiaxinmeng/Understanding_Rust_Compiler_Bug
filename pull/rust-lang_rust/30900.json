{"url": "https://api.github.com/repos/rust-lang/rust/pulls/30900", "id": 56039386, "node_id": "MDExOlB1bGxSZXF1ZXN0NTYwMzkzODY=", "html_url": "https://github.com/rust-lang/rust/pull/30900", "diff_url": "https://github.com/rust-lang/rust/pull/30900.diff", "patch_url": "https://github.com/rust-lang/rust/pull/30900.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/30900", "number": 30900, "state": "closed", "locked": false, "title": "Implement the translation item collector", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "body": "The purpose of the translation item collector is to find all monomorphic instances of functions, methods and statics that need to be translated into LLVM IR in order to compile the current crate.\n\nSo far these instances have been discovered lazily during the trans path. For incremental compilation we want to know the set of these instances in advance, and that is what the trans::collect module provides.\nIn the future, incremental and regular translation will be driven by the collector implemented here.\n\nr? @nikomatsakis \ncc @rust-lang/compiler \n# Translation Item Collection\n\nThis module is responsible for discovering all items that will contribute to\nto code generation of the crate. The important part here is that it not only\nneeds to find syntax-level items (functions, structs, etc) but also all\ntheir monomorphized instantiations. Every non-generic, non-const function\nmaps to one LLVM artifact. Every generic function can produce\nfrom zero to N artifacts, depending on the sets of type arguments it\nis instantiated with.\nThis also applies to generic items from other crates: A generic definition\nin crate X might produce monomorphizations that are compiled into crate Y.\nWe also have to collect these here.\n\nThe following kinds of \"translation items\" are handled here:\n- Functions\n- Methods\n- Closures\n- Statics\n- Drop glue\n\nThe following things also result in LLVM artifacts, but are not collected\nhere, since we instantiate them locally on demand when needed in a given\ncodegen unit:\n- Constants\n- Vtables\n- Object Shims\n## General Algorithm\n\nLet's define some terms first:\n- A \"translation item\" is something that results in a function or global in\n  the LLVM IR of a codegen unit. Translation items do not stand on their\n  own, they can reference other translation items. For example, if function\n  `foo()` calls function `bar()` then the translation item for `foo()`\n  references the translation item for function `bar()`. In general, the\n  definition for translation item A referencing a translation item B is that\n  the LLVM artifact produced for A references the LLVM artifact produced\n  for B.\n- Translation items and the references between them for a directed graph,\n  where the translation items are the nodes and references form the edges.\n  Let's call this graph the \"translation item graph\".\n- The translation item graph for a program contains all translation items\n  that are needed in order to produce the complete LLVM IR of the program.\n\nThe purpose of the algorithm implemented in this module is to build the\ntranslation item graph for the current crate. It runs in two phases:\n1. Discover the roots of the graph by traversing the HIR of the crate.\n2. Starting from the roots, find neighboring nodes by inspecting the MIR\n   representation of the item corresponding to a given node, until no more\n   new nodes are found.\n### Discovering roots\n\nThe roots of the translation item graph correspond to the non-generic\nsyntactic items in the source code. We find them by walking the HIR of the\ncrate, and whenever we hit upon a function, method, or static item, we\ncreate a translation item consisting of the items DefId and, since we only\nconsider non-generic items, an empty type-substitution set.\n### Finding neighbor nodes\n\nGiven a translation item node, we can discover neighbors by inspecting its\nMIR. We walk the MIR and any time we hit upon something that signifies a\nreference to another translation item, we have found a neighbor. Since the\ntranslation item we are currently at is always monomorphic, we also know the\nconcrete type arguments of its neighbors, and so all neighbors again will be\nmonomorphic. The specific forms a reference to a neighboring node can take\nin MIR are quite diverse. Here is an overview:\n#### Calling Functions/Methods\n\nThe most obvious form of one translation item referencing another is a\nfunction or method call (represented by a CALL terminator in MIR). But\ncalls are not the only thing that might introduce a reference between two\nfunction translation items, and as we will see below, they are just a\nspecialized of the form described next, and consequently will don't get any\nspecial treatment in the algorithm.\n#### Taking a reference to a function or method\n\nA function does not need to actually be called in order to be a neighbor of\nanother function. It suffices to just take a reference in order to introduce\nan edge. Consider the following example:\n\n``` rust\nfn print_val<T: Display>(x: T) {\n    println!(\"{}\", x);\n}\n\nfn call_fn(f: &Fn(i32), x: i32) {\n    f(x);\n}\n\nfn main() {\n    let print_i32 = print_val::<i32>;\n    call_fn(&print_i32, 0);\n}\n```\n\nThe MIR of none of these functions will contain an explicit call to\n`print_val::<i32>`. Nonetheless, in order to translate this program, we need\nan instance of this function. Thus, whenever we encounter a function or\nmethod in operand position, we treat it as a neighbor of the current\ntranslation item. Calls are just a special case of that.\n#### Closures\n\nIn a way, closures are a simple case. Since every closure object needs to be\nconstructed somewhere, we can reliably discover them by observing\n`RValue::Aggregate` expressions with `AggregateKind::Closure`. This is also\ntrue for closures inlined from other crates.\n#### Drop glue\n\nDrop glue translation items are introduced by MIR drop-statements. The\ngenerated translation item will again have drop-glue item neighbors if the\ntype to be dropped contains nested values that also need to be dropped. It\nmight also have a function item neighbor for the explicit `Drop::drop`\nimplementation of its type.\n#### Unsizing Casts\n\nA subtle way of introducing neighbor edges is by casting to a trait object.\nSince the resulting fat-pointer contains a reference to a vtable, we need to\ninstantiate all object-save methods of the trait, as we need to store\npointers to these functions even if they never get called anywhere. This can\nbe seen as a special case of taking a function reference.\n#### Boxes\n\nSince `Box` expression have special compiler support, no explicit calls to\n`exchange_malloc()` and `exchange_free()` may show up in MIR, even if the\ncompiler will generate them. We have to observe `Rvalue::Box` expressions\nand Box-typed drop-statements for that purpose.\n## Interaction with Cross-Crate Inlining\n\nThe binary of a crate will not only contain machine code for the items\ndefined in the source code of that crate. It will also contain monomorphic\ninstantiations of any extern generic functions and of functions marked with\n# [inline].\n\nThe collection algorithm handles this more or less transparently. When\nconstructing a neighbor node for an item, the algorithm will always call\n`inline::get_local_instance()` before proceeding. If no local instance can\nbe acquired (e.g. for a function that is just linked to) no node is created;\nwhich is exactly what we want, since no machine code should be generated in\nthe current crate for such an item. On the other hand, if we can\nsuccessfully inline the function, we subsequently can just treat it like a\nlocal item, walking it's MIR et cetera.\n## Eager and Lazy Collection Mode\n\nTranslation item collection can be performed in one of two modes:\n- Lazy mode means that items will only be instantiated when actually\n  referenced. The goal is to produce the least amount of machine code\n  possible.\n- Eager mode is meant to be used in conjunction with incremental compilation\n  where a stable set of translation items is more important than a minimal\n  one. Thus, eager mode will instantiate drop-glue for every drop-able type\n  in the crate, even of no drop call for that type exists (yet). It will\n  also instantiate default implementations of trait methods, something that\n  otherwise is only done on demand.\n## Open Issues\n\nSome things are not yet fully implemented in the current version of this\nmodule.\n### Initializers of Constants and Statics\n\nSince no MIR is constructed yet for initializer expressions of constants and\nstatics we cannot inspect these properly.\n### Const Fns\n\nIdeally, no translation item should be generated for const fns unless there\nis a call to them that cannot be evaluated at compile time. At the moment\nthis is not implemented however: a translation item will be produced\nregardless of whether it is actually needed or not.\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/rust-lang/rust/30900)\n\n<!-- Reviewable:end -->\n", "created_at": "2016-01-14T14:12:29Z", "updated_at": "2016-01-29T23:59:26Z", "closed_at": "2016-01-29T06:41:25Z", "merged_at": "2016-01-29T06:41:25Z", "merge_commit_sha": "f648ad0d964080449b1d9833244734b1189eef5d", "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/30900/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/30900/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/30900/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/4d074b8c4cbaf113d01a5da09f3c6d2e6dd9f5c2", "head": {"label": "michaelwoerister:trans_item_collect", "ref": "trans_item_collect", "sha": "4d074b8c4cbaf113d01a5da09f3c6d2e6dd9f5c2", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "repo": {"id": 9431220, "node_id": "MDEwOlJlcG9zaXRvcnk5NDMxMjIw", "name": "rust", "full_name": "michaelwoerister/rust", "private": false, "owner": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/michaelwoerister/rust", "description": "a safe, concurrent, practical language", "fork": true, "url": "https://api.github.com/repos/michaelwoerister/rust", "forks_url": "https://api.github.com/repos/michaelwoerister/rust/forks", "keys_url": "https://api.github.com/repos/michaelwoerister/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/michaelwoerister/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/michaelwoerister/rust/teams", "hooks_url": "https://api.github.com/repos/michaelwoerister/rust/hooks", "issue_events_url": "https://api.github.com/repos/michaelwoerister/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/michaelwoerister/rust/events", "assignees_url": "https://api.github.com/repos/michaelwoerister/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/michaelwoerister/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/michaelwoerister/rust/tags", "blobs_url": "https://api.github.com/repos/michaelwoerister/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/michaelwoerister/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/michaelwoerister/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/michaelwoerister/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/michaelwoerister/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/michaelwoerister/rust/languages", "stargazers_url": "https://api.github.com/repos/michaelwoerister/rust/stargazers", "contributors_url": "https://api.github.com/repos/michaelwoerister/rust/contributors", "subscribers_url": "https://api.github.com/repos/michaelwoerister/rust/subscribers", "subscription_url": "https://api.github.com/repos/michaelwoerister/rust/subscription", "commits_url": "https://api.github.com/repos/michaelwoerister/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/michaelwoerister/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/michaelwoerister/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/michaelwoerister/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/michaelwoerister/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/michaelwoerister/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/michaelwoerister/rust/merges", "archive_url": "https://api.github.com/repos/michaelwoerister/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/michaelwoerister/rust/downloads", "issues_url": "https://api.github.com/repos/michaelwoerister/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/michaelwoerister/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/michaelwoerister/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/michaelwoerister/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/michaelwoerister/rust/labels{/name}", "releases_url": "https://api.github.com/repos/michaelwoerister/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/michaelwoerister/rust/deployments", "created_at": "2013-04-14T15:57:02Z", "updated_at": "2022-10-31T13:37:05Z", "pushed_at": "2023-06-06T09:35:07Z", "git_url": "git://github.com/michaelwoerister/rust.git", "ssh_url": "git@github.com:michaelwoerister/rust.git", "clone_url": "https://github.com/michaelwoerister/rust.git", "svn_url": "https://github.com/michaelwoerister/rust", "homepage": "http://www.rust-lang.org", "size": 870720, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "43c1a173a874f5513db58b2f5321489a00087484", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T07:04:40Z", "pushed_at": "2023-06-19T07:16:41Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 919635, "stargazers_count": 82736, "watchers_count": 82736, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10954, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9628, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10954, "open_issues": 9628, "watchers": 82736, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/30900"}, "html": {"href": "https://github.com/rust-lang/rust/pull/30900"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/30900"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/30900/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/30900/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/30900/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/4d074b8c4cbaf113d01a5da09f3c6d2e6dd9f5c2"}}, "author_association": "MEMBER", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 40, "review_comments": 0, "maintainer_can_modify": false, "commits": 4, "additions": 3342, "deletions": 74, "changed_files": 46}