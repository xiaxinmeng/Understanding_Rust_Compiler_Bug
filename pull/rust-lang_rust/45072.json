{"url": "https://api.github.com/repos/rust-lang/rust/pulls/45072", "id": 145230328, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ1MjMwMzI4", "html_url": "https://github.com/rust-lang/rust/pull/45072", "diff_url": "https://github.com/rust-lang/rust/pull/45072.diff", "patch_url": "https://github.com/rust-lang/rust/pull/45072.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/45072", "number": 45072, "state": "closed", "locked": false, "title": "new rules for merging expected and supplied types in closure signatures", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "body": "As uncovered in #38714, we currently have some pretty bogus code for combining the \"expected signature\" of a closure with the \"supplied signature\". To set the scene, consider a case like this:\r\n\r\n```rust\r\nfn foo<F>(f: F)\r\nwhere\r\n  F: for<'a> FnOnce(&'a u32) -> &'a u32\r\n  // ^ *expected* signature comes from this where-clause\r\n{\r\n    ...\r\n}\r\n\r\nfn main() {\r\n    foo(|x: &u32| -> &u32 { .. }\r\n     // ^^^^^^^^^^^^^^^^^ supplied signature\r\n     // comes from here \r\n}\r\n```\r\n\r\nIn this case, the supplied signature (a) includes all the parts and (b) is the same as the expected signature, modulo the names used for the regions. But often people supply only *some* parts of the signature. For example, one might write `foo(|x| ..)`, leaving *everything* to be inferred, or perhaps `foo(|x: &u32| ...)`, which leaves the return type to be inferred.\r\n\r\nIn the current code, we use the expected type to supply the types that are not given, but otherwise use the type the user gave, except for one case: if the user writes `fn foo(|x: _| ..)` (i.e., an underscore at the outermost level), then we will take the expected type (rather than instantiating a fresh type variable). This can result in nonsensical situations, particularly with bound regions that link the types of parameters to one another or to the return type. Consider `foo(|x: &u32| ...)` -- if we *literally* splice the expected return type of `&'a u32` together with what the user gave, we wind up with a signature like `for<'a> fn(&u32) -> &'a u32`. This is not even permitted as a type, because bound regions like `'a` must appear also in the arguments somewhere, which is why #38714 leads to an ICE.\r\n\r\nThis PR institutes some new rules. These are not meant to be the *final* set of rules, but they are a kind of \"lower bar\" for what kind of code we accept (i.e., we can extend these rules in the future to be smarter in some cases, but -- as we will see -- these rules do accept some things that we then would not be able to back off from).\r\n\r\nThese rules are derived from a few premises:\r\n\r\n- First and foremost, anonymous regions in closure annotation are mostly requests for the code to \"figure out the right lifetime\" and shouldn't be read too closely. So for example when people write a closure signature like `|x: &u32|`, they are really intended for us to \"figure out\" the right region for `x`. \r\n    - In contrast, the current code treats this supplied type as being more definitive. In particular, writing `|x: &u32|` would always result in the region of `x` being bound in the closure type. In other words, the signature would be something like `for<'a> fn(&'a u32)` -- this is derived from the fact that `fn(&u32)` expands to a type where the region is bound in the fn type.\r\n    - This PR takes a different approach. The \"binding level\" for reference types appearing in closure signatures can be informed in some cases by the expected signature. So, for example, if the expected signature is something like `(&'f u32)`, where the region of the first argument appears free, then for `|x: &u32|`, the new code would infer `x` to also have the free region `'f`.\r\n        - This inference has some limits. We don't do this for bindings that appear within the selected types themselves. So e.g. `|x: fn(&u32)|`, when combined with an expected type of `fn(fn(&'f u32))`, would still result in a closure that expects `for<'a> fn(&'a u32)`. Such an annotation will ultimately result in an error, as it happens, since `foo` is supplying a `fn(&'f u32)` to the closure, but the closure signature demands a `for<'a> fn(&'a u32)`. But still we choose to trust it and have the user change it.\r\n        - I wanted to preserve the rough intuition that one can copy-and-paste a type out of the fn signature and into the fn body without dramatically changing its meaning. Interestingly, if one has `|x: &u32|`, then regardless of whether the region of `x` is bound or free in the closure signature, it is also free in the region body, and that is also true when one writes `let x: &u32`, so that intuition holds here. But the same would not be true for `fn(&u32)`, hence the different behavior.\r\n- Second, we must take either **all** the references to bound regions from the expected type or **none**. The current code, as we saw, will happily take a bound region in the return type but drop the other place where it is used, in the parameters. Since bound regions are all about linking multiple things together, I think it's important not to do that. (That said, we could conceivably be a bit less strict here, since the subtyping rules will get our back, but we definitely don't want any bound regions that appear only in the return type.)\r\n- Finally, we cannot take the bound region names from the supplied types and \"intermix\" them with the names from the expected types. \r\n    - We *could* potentially do some alpha renaming, but I didn't do that.\r\n- Ultimately, if the types the user supplied do not match expectations in some way that we cannot recover from, we fallback to deriving the closure signature solely from those expected types.\r\n    - For example, if the expected type is `u32` but the user wrote `i32`.\r\n    - Or, more subtle, if the user wrote e.g. `&'x u32` for some named lifetime `'x`, but the expected type includes a bound lifetime (`for<'a> (&'a u32)`). In that case, preferring the type that the user explicitly wrote would hide an appearance of a bound name from the expected type, and we try to never do that.\r\n\r\nThe detailed rules that I came up with are found in the code, but for ease of reading I've also [excerpted them into a gist](https://gist.github.com/nikomatsakis/e69252a2b57e6d97d044c2f254c177f1). I am not convinced they are correct and would welcome feedback for alternative approaches. \r\n\r\n(As an aside, the way I think I would ultimately *prefer* to think about this is that the conversion from HIR types to internal types could be parameterized by an \"expected type\" that it uses to guide itself. However, since that would be a pain, I opted *in the code* to first instantiate the supplied types as `Ty<'tcx>` and then \"merge\" those types with the `Ty<'tcx>` from the expected signature.)\r\n\r\nI think we should probably FCP this before landing.\r\n\r\ncc @rust-lang/lang \r\nr? @arielb1 ", "created_at": "2017-10-06T19:37:51Z", "updated_at": "2017-11-05T19:20:00Z", "closed_at": "2017-11-05T19:20:00Z", "merged_at": "2017-11-05T19:20:00Z", "merge_commit_sha": "e8a96c97f4972c3d4823105f53e28b88cd9b533e", "assignee": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 583437191, "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors", "name": "S-waiting-on-bors", "color": "d3dddd", "default": false, "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."}], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/45072/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/45072/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45072/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/e8a96c97f4972c3d4823105f53e28b88cd9b533e", "head": {"label": "nikomatsakis:issue-38714", "ref": "issue-38714", "sha": "e8a96c97f4972c3d4823105f53e28b88cd9b533e", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "repo": {"id": 1672543, "node_id": "MDEwOlJlcG9zaXRvcnkxNjcyNTQz", "name": "rust", "full_name": "nikomatsakis/rust", "private": false, "owner": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/nikomatsakis/rust", "description": "A work-in-progress programming language; not yet suitable for users", "fork": true, "url": "https://api.github.com/repos/nikomatsakis/rust", "forks_url": "https://api.github.com/repos/nikomatsakis/rust/forks", "keys_url": "https://api.github.com/repos/nikomatsakis/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/nikomatsakis/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/nikomatsakis/rust/teams", "hooks_url": "https://api.github.com/repos/nikomatsakis/rust/hooks", "issue_events_url": "https://api.github.com/repos/nikomatsakis/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/nikomatsakis/rust/events", "assignees_url": "https://api.github.com/repos/nikomatsakis/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/nikomatsakis/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/nikomatsakis/rust/tags", "blobs_url": "https://api.github.com/repos/nikomatsakis/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/nikomatsakis/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/nikomatsakis/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/nikomatsakis/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/nikomatsakis/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/nikomatsakis/rust/languages", "stargazers_url": "https://api.github.com/repos/nikomatsakis/rust/stargazers", "contributors_url": "https://api.github.com/repos/nikomatsakis/rust/contributors", "subscribers_url": "https://api.github.com/repos/nikomatsakis/rust/subscribers", "subscription_url": "https://api.github.com/repos/nikomatsakis/rust/subscription", "commits_url": "https://api.github.com/repos/nikomatsakis/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/nikomatsakis/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/nikomatsakis/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/nikomatsakis/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/nikomatsakis/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/nikomatsakis/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/nikomatsakis/rust/merges", "archive_url": "https://api.github.com/repos/nikomatsakis/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/nikomatsakis/rust/downloads", "issues_url": "https://api.github.com/repos/nikomatsakis/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/nikomatsakis/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/nikomatsakis/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/nikomatsakis/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/nikomatsakis/rust/labels{/name}", "releases_url": "https://api.github.com/repos/nikomatsakis/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/nikomatsakis/rust/deployments", "created_at": "2011-04-27T20:20:29Z", "updated_at": "2019-10-06T20:22:28Z", "pushed_at": "2022-06-30T20:55:38Z", "git_url": "git://github.com/nikomatsakis/rust.git", "ssh_url": "git@github.com:nikomatsakis/rust.git", "clone_url": "https://github.com/nikomatsakis/rust.git", "svn_url": "https://github.com/nikomatsakis/rust", "homepage": "", "size": 858895, "stargazers_count": 7, "watchers_count": 7, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 1, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 1, "watchers": 7, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "e340996ff5faa77b72d9b859aff34211033c1b68", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-20T01:08:57Z", "pushed_at": "2023-06-20T01:23:18Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 930398, "stargazers_count": 82757, "watchers_count": 82757, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10960, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9627, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10960, "open_issues": 9627, "watchers": 82757, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/45072"}, "html": {"href": "https://github.com/rust-lang/rust/pull/45072"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/45072"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/45072/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/45072/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/45072/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/e8a96c97f4972c3d4823105f53e28b88cd9b533e"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 24, "review_comments": 15, "maintainer_can_modify": false, "commits": 4, "additions": 838, "deletions": 169, "changed_files": 21}