{"url": "https://api.github.com/repos/rust-lang/rust/pulls/52908", "id": 205157661, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1MTU3NjYx", "html_url": "https://github.com/rust-lang/rust/pull/52908", "diff_url": "https://github.com/rust-lang/rust/pull/52908.diff", "patch_url": "https://github.com/rust-lang/rust/pull/52908.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/52908", "number": 52908, "state": "closed", "locked": false, "title": "Use SetLenOnDrop in Vec::truncate()", "user": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "body": "This avoids a redundant length check in some cases when calling\r\n`Vec::truncate` or `Vec::clear`.\r\n\r\nFixes #51802 \r\n\r\nNote that the generated code still seems suboptimal. I tested with the following functions:\r\n\r\n```rust\r\n#[no_mangle]\r\npub extern fn foo(x: &mut Vec<u8>) {\r\n    x.clear();\r\n}\r\n\r\n#[no_mangle]\r\npub extern fn bar(x: &mut Vec<u8>) {\r\n    x.truncate(5);\r\n}\r\n\r\n#[no_mangle]\r\npub extern fn baz(x: &mut Vec<u8>, n: usize) {\r\n    x.truncate(n);\r\n}\r\n\r\n#[no_mangle]\r\npub extern fn foo_string(x: &mut Vec<String>) {\r\n    x.clear();\r\n}\r\n\r\n#[no_mangle]\r\npub extern fn bar_string(x: &mut Vec<String>) {\r\n    x.truncate(5);\r\n}\r\n\r\n#[no_mangle]\r\npub extern fn baz_string(x: &mut Vec<String>, n: usize) {\r\n    x.truncate(n);\r\n}\r\n```\r\n\r\n<details>\r\n  <summary>Old output</summary>\r\n\r\n```asm\r\n00000000000460a0 <foo>:\r\n   460a0:       48 83 7f 10 00          cmpq   $0x0,0x10(%rdi)\r\n   460a5:       74 08                   je     460af <foo+0xf>\r\n   460a7:       48 c7 47 10 00 00 00    movq   $0x0,0x10(%rdi)\r\n   460ae:       00\r\n   460af:       c3                      retq\r\n\r\n00000000000460b0 <bar>:\r\n   460b0:       48 83 7f 10 06          cmpq   $0x6,0x10(%rdi)\r\n   460b5:       72 08                   jb     460bf <bar+0xf>\r\n   460b7:       48 c7 47 10 05 00 00    movq   $0x5,0x10(%rdi)\r\n   460be:       00\r\n   460bf:       c3                      retq\r\n\r\n00000000000460c0 <baz>:\r\n   460c0:       48 39 77 10             cmp    %rsi,0x10(%rdi)\r\n   460c4:       76 04                   jbe    460ca <baz+0xa>\r\n   460c6:       48 89 77 10             mov    %rsi,0x10(%rdi)\r\n   460ca:       c3                      retq\r\n   460cb:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\r\n\r\n00000000000460d0 <foo_string>:\r\n   460d0:       41 57                   push   %r15\r\n   460d2:       41 56                   push   %r14\r\n   460d4:       53                      push   %rbx\r\n   460d5:       48 8b 47 10             mov    0x10(%rdi),%rax\r\n   460d9:       48 85 c0                test   %rax,%rax\r\n   460dc:       74 4a                   je     46128 <foo_string+0x58>\r\n   460de:       49 89 fe                mov    %rdi,%r14\r\n   460e1:       48 8b 0f                mov    (%rdi),%rcx\r\n   460e4:       48 8d 14 40             lea    (%rax,%rax,2),%rdx\r\n   460e8:       48 8d 58 ff             lea    -0x1(%rax),%rbx\r\n   460ec:       4c 8d 3c d1             lea    (%rcx,%rdx,8),%r15\r\n   460f0:       49 83 c7 f0             add    $0xfffffffffffffff0,%r15\r\n   460f4:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\r\n   460fb:       00 00 00\r\n   460fe:       66 90                   xchg   %ax,%ax\r\n   46100:       49 89 5e 10             mov    %rbx,0x10(%r14)\r\n   46104:       49 8b 37                mov    (%r15),%rsi\r\n   46107:       48 85 f6                test   %rsi,%rsi\r\n   4610a:       74 0e                   je     4611a <foo_string+0x4a>\r\n   4610c:       49 8b 7f f8             mov    -0x8(%r15),%rdi\r\n   46110:       ba 01 00 00 00          mov    $0x1,%edx\r\n   46115:       e8 a6 e9 ff ff          callq  44ac0 <__rust_dealloc@plt>\r\n   4611a:       48 83 c3 ff             add    $0xffffffffffffffff,%rbx\r\n   4611e:       49 83 c7 e8             add    $0xffffffffffffffe8,%r15\r\n   46122:       48 83 fb ff             cmp    $0xffffffffffffffff,%rbx\r\n   46126:       75 d8                   jne    46100 <foo_string+0x30>\r\n   46128:       5b                      pop    %rbx\r\n   46129:       41 5e                   pop    %r14\r\n   4612b:       41 5f                   pop    %r15\r\n   4612d:       c3                      retq\r\n   4612e:       66 90                   xchg   %ax,%ax\r\n\r\n0000000000046130 <bar_string>:\r\n   46130:       41 57                   push   %r15\r\n   46132:       41 56                   push   %r14\r\n   46134:       53                      push   %rbx\r\n   46135:       4c 8b 7f 10             mov    0x10(%rdi),%r15\r\n   46139:       49 83 ff 06             cmp    $0x6,%r15\r\n   4613d:       72 49                   jb     46188 <bar_string+0x58>\r\n   4613f:       49 89 fe                mov    %rdi,%r14\r\n   46142:       48 8b 07                mov    (%rdi),%rax\r\n   46145:       4b 8d 0c 7f             lea    (%r15,%r15,2),%rcx\r\n   46149:       48 8d 1c c8             lea    (%rax,%rcx,8),%rbx\r\n   4614d:       48 83 c3 f0             add    $0xfffffffffffffff0,%rbx\r\n   46151:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\r\n   46158:       00 00 00\r\n   4615b:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\r\n   46160:       49 83 c7 ff             add    $0xffffffffffffffff,%r15\r\n   46164:       4d 89 7e 10             mov    %r15,0x10(%r14)\r\n   46168:       48 8b 33                mov    (%rbx),%rsi\r\n   4616b:       48 85 f6                test   %rsi,%rsi\r\n   4616e:       74 0e                   je     4617e <bar_string+0x4e>\r\n   46170:       48 8b 7b f8             mov    -0x8(%rbx),%rdi\r\n   46174:       ba 01 00 00 00          mov    $0x1,%edx\r\n   46179:       e8 42 e9 ff ff          callq  44ac0 <__rust_dealloc@plt>\r\n   4617e:       48 83 c3 e8             add    $0xffffffffffffffe8,%rbx\r\n   46182:       49 83 ff 05             cmp    $0x5,%r15\r\n   46186:       77 d8                   ja     46160 <bar_string+0x30>\r\n   46188:       5b                      pop    %rbx\r\n   46189:       41 5e                   pop    %r14\r\n   4618b:       41 5f                   pop    %r15\r\n   4618d:       c3                      retq\r\n   4618e:       66 90                   xchg   %ax,%ax\r\n\r\n0000000000046190 <baz_string>:\r\n   46190:       41 57                   push   %r15\r\n   46192:       41 56                   push   %r14\r\n   46194:       41 54                   push   %r12\r\n   46196:       53                      push   %rbx\r\n   46197:       50                      push   %rax\r\n   46198:       4c 8b 67 10             mov    0x10(%rdi),%r12\r\n   4619c:       49 39 f4                cmp    %rsi,%r12\r\n   4619f:       76 46                   jbe    461e7 <baz_string+0x57>\r\n   461a1:       49 89 f6                mov    %rsi,%r14\r\n   461a4:       49 89 ff                mov    %rdi,%r15\r\n   461a7:       48 8b 07                mov    (%rdi),%rax\r\n   461aa:       4b 8d 0c 64             lea    (%r12,%r12,2),%rcx\r\n   461ae:       48 8d 1c c8             lea    (%rax,%rcx,8),%rbx\r\n   461b2:       48 83 c3 f0             add    $0xfffffffffffffff0,%rbx\r\n   461b6:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\r\n   461bd:       00 00 00\r\n   461c0:       49 83 c4 ff             add    $0xffffffffffffffff,%r12\r\n   461c4:       4d 89 67 10             mov    %r12,0x10(%r15)\r\n   461c8:       48 8b 33                mov    (%rbx),%rsi\r\n   461cb:       48 85 f6                test   %rsi,%rsi\r\n   461ce:       74 0e                   je     461de <baz_string+0x4e>\r\n   461d0:       48 8b 7b f8             mov    -0x8(%rbx),%rdi\r\n   461d4:       ba 01 00 00 00          mov    $0x1,%edx\r\n   461d9:       e8 e2 e8 ff ff          callq  44ac0 <__rust_dealloc@plt>\r\n   461de:       48 83 c3 e8             add    $0xffffffffffffffe8,%rbx\r\n   461e2:       4d 39 f4                cmp    %r14,%r12\r\n   461e5:       77 d9                   ja     461c0 <baz_string+0x30>\r\n   461e7:       48 83 c4 08             add    $0x8,%rsp\r\n   461eb:       5b                      pop    %rbx\r\n   461ec:       41 5c                   pop    %r12\r\n   461ee:       41 5e                   pop    %r14\r\n   461f0:       41 5f                   pop    %r15\r\n   461f2:       c3                      retq\r\n   461f3:       90                      nop\r\n   461f4:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\r\n   461fb:       00 00 00\r\n   461fe:       66 90                   xchg   %ax,%ax\r\n```\r\n</details>\r\n\r\n<details>\r\n  <summary>New output</summary>\r\n\r\n```asm\r\n0000000000084d10 <foo>:\r\n   84d10:       48 c7 47 10 00 00 00    movq   $0x0,0x10(%rdi)\r\n   84d17:       00\r\n   84d18:       c3                      retq\r\n   84d19:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)\r\n\r\n0000000000084d20 <bar>:\r\n   84d20:       48 8b 47 10             mov    0x10(%rdi),%rax\r\n   84d24:       48 83 f8 05             cmp    $0x5,%rax\r\n   84d28:       b9 05 00 00 00          mov    $0x5,%ecx\r\n   84d2d:       48 0f 42 c8             cmovb  %rax,%rcx\r\n   84d31:       48 89 4f 10             mov    %rcx,0x10(%rdi)\r\n   84d35:       c3                      retq\r\n   84d36:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\r\n   84d3d:       00 00 00\r\n\r\n0000000000084d40 <baz>:\r\n   84d40:       48 8b 47 10             mov    0x10(%rdi),%rax\r\n   84d44:       48 39 f0                cmp    %rsi,%rax\r\n   84d47:       48 0f 47 c6             cmova  %rsi,%rax\r\n   84d4b:       48 89 47 10             mov    %rax,0x10(%rdi)\r\n   84d4f:       c3                      retq\r\n\r\n0000000000084d50 <foo_string>:\r\n   84d50:       41 57                   push   %r15\r\n   84d52:       41 56                   push   %r14\r\n   84d54:       53                      push   %rbx\r\n   84d55:       49 89 fe                mov    %rdi,%r14\r\n   84d58:       4c 8b 7f 10             mov    0x10(%rdi),%r15\r\n   84d5c:       4d 85 ff                test   %r15,%r15\r\n   84d5f:       74 2f                   je     84d90 <foo_string+0x40>\r\n   84d61:       49 8b 06                mov    (%r14),%rax\r\n   84d64:       4b 8d 0c 7f             lea    (%r15,%r15,2),%rcx\r\n   84d68:       48 8d 1c c8             lea    (%rax,%rcx,8),%rbx\r\n   84d6c:       48 83 c3 f0             add    $0xfffffffffffffff0,%rbx\r\n   84d70:       48 8b 33                mov    (%rbx),%rsi\r\n   84d73:       48 85 f6                test   %rsi,%rsi\r\n   84d76:       74 0e                   je     84d86 <foo_string+0x36>\r\n   84d78:       48 8b 7b f8             mov    -0x8(%rbx),%rdi\r\n   84d7c:       ba 01 00 00 00          mov    $0x1,%edx\r\n   84d81:       e8 1a b1 ff ff          callq  7fea0 <__rust_dealloc@plt>\r\n   84d86:       48 83 c3 e8             add    $0xffffffffffffffe8,%rbx\r\n   84d8a:       49 83 c7 ff             add    $0xffffffffffffffff,%r15\r\n   84d8e:       75 e0                   jne    84d70 <foo_string+0x20>\r\n   84d90:       49 c7 46 10 00 00 00    movq   $0x0,0x10(%r14)\r\n   84d97:       00\r\n   84d98:       5b                      pop    %rbx\r\n   84d99:       41 5e                   pop    %r14\r\n   84d9b:       41 5f                   pop    %r15\r\n   84d9d:       c3                      retq\r\n   84d9e:       66 90                   xchg   %ax,%ax\r\n\r\n0000000000084da0 <bar_string>:\r\n   84da0:       41 57                   push   %r15\r\n   84da2:       41 56                   push   %r14\r\n   84da4:       53                      push   %rbx\r\n   84da5:       49 89 fe                mov    %rdi,%r14\r\n   84da8:       4c 8b 7f 10             mov    0x10(%rdi),%r15\r\n   84dac:       49 83 ff 06             cmp    $0x6,%r15\r\n   84db0:       72 44                   jb     84df6 <bar_string+0x56>\r\n   84db2:       49 8b 06                mov    (%r14),%rax\r\n   84db5:       4b 8d 0c 7f             lea    (%r15,%r15,2),%rcx\r\n   84db9:       48 8d 1c c8             lea    (%rax,%rcx,8),%rbx\r\n   84dbd:       48 83 c3 f0             add    $0xfffffffffffffff0,%rbx\r\n   84dc1:       49 83 c7 fb             add    $0xfffffffffffffffb,%r15\r\n   84dc5:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\r\n   84dcc:       00 00 00\r\n   84dcf:       90                      nop\r\n   84dd0:       48 8b 33                mov    (%rbx),%rsi\r\n   84dd3:       48 85 f6                test   %rsi,%rsi\r\n   84dd6:       74 0e                   je     84de6 <bar_string+0x46>\r\n   84dd8:       48 8b 7b f8             mov    -0x8(%rbx),%rdi\r\n   84ddc:       ba 01 00 00 00          mov    $0x1,%edx\r\n   84de1:       e8 ba b0 ff ff          callq  7fea0 <__rust_dealloc@plt>\r\n   84de6:       48 83 c3 e8             add    $0xffffffffffffffe8,%rbx\r\n   84dea:       49 83 c7 ff             add    $0xffffffffffffffff,%r15\r\n   84dee:       75 e0                   jne    84dd0 <bar_string+0x30>\r\n   84df0:       41 bf 05 00 00 00       mov    $0x5,%r15d\r\n   84df6:       4d 89 7e 10             mov    %r15,0x10(%r14)\r\n   84dfa:       5b                      pop    %rbx\r\n   84dfb:       41 5e                   pop    %r14\r\n   84dfd:       41 5f                   pop    %r15\r\n   84dff:       c3                      retq\r\n\r\n0000000000084e00 <baz_string>:\r\n   84e00:       41 57                   push   %r15\r\n   84e02:       41 56                   push   %r14\r\n   84e04:       41 54                   push   %r12\r\n   84e06:       53                      push   %rbx\r\n   84e07:       50                      push   %rax\r\n   84e08:       49 89 ff                mov    %rdi,%r15\r\n   84e0b:       48 8b 47 10             mov    0x10(%rdi),%rax\r\n   84e0f:       49 89 c4                mov    %rax,%r12\r\n   84e12:       49 29 f4                sub    %rsi,%r12\r\n   84e15:       76 3c                   jbe    84e53 <baz_string+0x53>\r\n   84e17:       49 89 f6                mov    %rsi,%r14\r\n   84e1a:       49 8b 0f                mov    (%r15),%rcx\r\n   84e1d:       48 8d 04 40             lea    (%rax,%rax,2),%rax\r\n   84e21:       48 8d 1c c1             lea    (%rcx,%rax,8),%rbx\r\n   84e25:       48 83 c3 f0             add    $0xfffffffffffffff0,%rbx\r\n   84e29:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)\r\n   84e30:       48 8b 33                mov    (%rbx),%rsi\r\n   84e33:       48 85 f6                test   %rsi,%rsi\r\n   84e36:       74 0e                   je     84e46 <baz_string+0x46>\r\n   84e38:       48 8b 7b f8             mov    -0x8(%rbx),%rdi\r\n   84e3c:       ba 01 00 00 00          mov    $0x1,%edx\r\n   84e41:       e8 5a b0 ff ff          callq  7fea0 <__rust_dealloc@plt>\r\n   84e46:       48 83 c3 e8             add    $0xffffffffffffffe8,%rbx\r\n   84e4a:       49 83 c4 ff             add    $0xffffffffffffffff,%r12\r\n   84e4e:       75 e0                   jne    84e30 <baz_string+0x30>\r\n   84e50:       4c 89 f0                mov    %r14,%rax\r\n   84e53:       49 89 47 10             mov    %rax,0x10(%r15)\r\n   84e57:       48 83 c4 08             add    $0x8,%rsp\r\n   84e5b:       5b                      pop    %rbx\r\n   84e5c:       41 5c                   pop    %r12\r\n   84e5e:       41 5e                   pop    %r14\r\n   84e60:       41 5f                   pop    %r15\r\n   84e62:       c3                      retq\r\n   84e63:       90                      nop\r\n   84e64:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\r\n   84e6b:       00 00 00\r\n   84e6e:       66 90                   xchg   %ax,%ax\r\n```\r\n</details>\r\n\r\nFor calling `truncate` with non-zero lengths on non-`Drop` types, it seems that a redundant load and comparison gets replaced with an awkward sequence with a conditional move. In the unknown length case, the new code is no longer awkward.\r\n\r\nMaybe someone moderately proficient at assembly could tell if this looks like a win or not.\r\n\r\n---\r\n\r\nThis came up when discussing replacing `unsafe { vec.set_len(0) }` with `vec.clear()` in a project where the author was worried about potential performance degradation. It might be worth replacing some unsafe code, even it it's trivial to see that it's actually safe.", "created_at": "2018-07-31T15:43:46Z", "updated_at": "2018-08-01T22:06:30Z", "closed_at": "2018-08-01T22:06:30Z", "merged_at": "2018-08-01T22:06:30Z", "merge_commit_sha": "38e311e4486b475c498ed1afdb6a036cdd702ebf", "assignee": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 583437191, "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors", "name": "S-waiting-on-bors", "color": "d3dddd", "default": false, "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."}], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/52908/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/52908/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52908/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/38e311e4486b475c498ed1afdb6a036cdd702ebf", "head": {"label": "lnicola:vec-truncate-opt", "ref": "vec-truncate-opt", "sha": "38e311e4486b475c498ed1afdb6a036cdd702ebf", "user": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "f89817997ac0aa100bf91997194ad85a7e59f743", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-20T08:05:17Z", "pushed_at": "2023-06-20T08:31:07Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 930628, "stargazers_count": 82767, "watchers_count": 82767, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10964, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9624, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10964, "open_issues": 9624, "watchers": 82767, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/52908"}, "html": {"href": "https://github.com/rust-lang/rust/pull/52908"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/52908"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/52908/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/52908/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/52908/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/38e311e4486b475c498ed1afdb6a036cdd702ebf"}}, "author_association": "MEMBER", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 8, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 38, "deletions": 6, "changed_files": 2}