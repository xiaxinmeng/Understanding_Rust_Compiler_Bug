{"url": "https://api.github.com/repos/rust-lang/rust/pulls/8097", "id": 7220869, "node_id": "MDExOlB1bGxSZXF1ZXN0NzIyMDg2OQ==", "html_url": "https://github.com/rust-lang/rust/pull/8097", "diff_url": "https://github.com/rust-lang/rust/pull/8097.diff", "patch_url": "https://github.com/rust-lang/rust/pull/8097.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/8097", "number": 8097, "state": "closed", "locked": false, "title": "Sha1 and Sha2 cleanups & optimizations", "user": {"login": "DaGenix", "id": 2101211, "node_id": "MDQ6VXNlcjIxMDEyMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2101211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DaGenix", "html_url": "https://github.com/DaGenix", "followers_url": "https://api.github.com/users/DaGenix/followers", "following_url": "https://api.github.com/users/DaGenix/following{/other_user}", "gists_url": "https://api.github.com/users/DaGenix/gists{/gist_id}", "starred_url": "https://api.github.com/users/DaGenix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DaGenix/subscriptions", "organizations_url": "https://api.github.com/users/DaGenix/orgs", "repos_url": "https://api.github.com/users/DaGenix/repos", "events_url": "https://api.github.com/users/DaGenix/events{/privacy}", "received_events_url": "https://api.github.com/users/DaGenix/received_events", "type": "User", "site_admin": false}, "body": "UPDATED (8/03): I'm leaving in my cycle count measurements in the description below, but just want to warn that I'm not sure how accurate they are. I would suggest not using them for anything unless someone else verifies them.\n\nUPDATED (7/29): Rebased out the MD5 implementation and updated the Sha1 implementation instead.\n\nI reworked the Sha2 code to be more readable and faster. Part of that work entailed extracting out common code having to do with buffer handling into a new struct, FixedBuffer, in the new cryptoutil.rs file. I then updated the Sha1 implementation to use the new functionality.\n\nThe first 3 commits in this request just move stuff around in the sha2.rs file. None of the changes here should impact functionality, but hopefully make the code a bit cleaner and easier to work with.\n\nIn the 4th commit:\n- I create the FixedBuffer struct. This struct contains the logic to gather up input bytes until a full block is available. Once that full block is available, its fed into a passed in closure, which in the case of a hash function is the compression function and the buffer is then marked as empty. The existing Digest implementations tend to do a lot processing a byte at a time and tend to do more copies than necessary - the FixedBuffer class tries to do just the minimum amount of copying possible. My hope is that this struct can be used by any future Digest implementation (at least those that are block based).\n- I added in a few unsafe methods to optimize some common cases - writing an integer to a [u8] and reading in an array of integers from a [u8]. These methods verify their preconditions explicitly and will cause an assert! if they are used in a manner that would corrupt memory.\n- I updated the Sha2 code to make use of all this new functionality. This resulted in a nice speedup in my benchmarks.\n- I greatly reduced the size of the Sha2 objects - previously they contained their entire working buffer - 80 u64s for Sha512 and 64 u32s for Sha256, even though they are only needed for calculation by the compression function; with this change I allocate those larger buffers on the stack in the compression function.\n\nIn the 5th commit, I rewrite the compression functions used by Sha2. Not a major change - I inlined the message schedule calculation into the same loop as the rest of the compression function. This results in a nice speedup as I believe it lets LLVM optimize the method better. \n\nIn the 6th commit, I update the Digest trait to use default methods and get rid of the the DigestUtil trait now that default methods seem to be working better.\n\nThe 7th commit adds a new function to cryptoutil.rs that tests a Digest by feeding it 1,000,000 'a's with a varying input size and then checks the result. This is basically the same test that already exists in Sha1, so, I update that test. I also implement new tests using this function for Sha2.\n\nThe 8th commit adds new functions to cryptoutil.rs to perform integer additions with overflow checking. These functions are useful for keeping track of the size of the message to be processed by Sha1 and Sha2 since these Digests are only defined for messages under a certain size. I update the Sha2 code to use these functions.\n\nThe 9th commit updates the existing Sha1 code to use the new functionality in cryptoutil.rs. Hopefully this is a good example of how the new functionality is generally applicable to more than just Sha2 and can be used by future block based Digest functions.\n\nOutside of the #tests, I also tested the Sha2 and Sha1 implementations by generating a few thousand random inputs of up to 10MB in size, calculated the digests using these implementations and Java's implementations checking to make sure that they agree.\n\nPerformance Measurements:\n\nBenchmarks:\n\nBefore making any updates, the Sha2 performance was:\n\n```\ntest sha2::bench::sha256_10 ... bench: 104 ns/iter (+/- 3) = 96 MB/s\ntest sha2::bench::sha256_1k ... bench: 10476 ns/iter (+/- 918) = 97 MB/s\ntest sha2::bench::sha256_64k ... bench: 671398 ns/iter (+/- 9934) = 97 MB/s\ntest sha2::bench::sha512_10 ... bench: 86 ns/iter (+/- 6) = 116 MB/s\ntest sha2::bench::sha512_1k ... bench: 6114 ns/iter (+/- 50) = 167 MB/s\ntest sha2::bench::sha512_64k ... bench: 393582 ns/iter (+/- 22549) = 166 MB/s\n```\n\nAfter the changes in change 4, the performance improved to:\n\n```\ntest sha2::bench::sha256_10 ... bench: 101 ns/iter (+/- 7) = 99 MB/s\ntest sha2::bench::sha256_1k ... bench: 7736 ns/iter (+/- 177) = 132 MB/s\ntest sha2::bench::sha256_64k ... bench: 492327 ns/iter (+/- 12650) = 133 MB/s\ntest sha2::bench::sha512_10 ... bench: 72 ns/iter (+/- 2) = 138 MB/s\ntest sha2::bench::sha512_1k ... bench: 5004 ns/iter (+/- 935) = 204 MB/s\ntest sha2::bench::sha512_64k ... bench: 316444 ns/iter (+/- 8554) = 207 MB/s\n```\n\nAfter the rest of the changes (changes after 5 didn't impact performance much, so this is basically the same as the performance after change 5), the performance further improved to:\n\n```\ntest sha2::bench::sha256_10 ... bench: 91 ns/iter (+/- 1) = 109 MB/s\ntest sha2::bench::sha256_1k ... bench: 7018 ns/iter (+/- 3036) = 145 MB/s\ntest sha2::bench::sha256_64k ... bench: 449890 ns/iter (+/- 9512) = 145 MB/s\ntest sha2::bench::sha512_10 ... bench: 63 ns/iter (+/- 0) = 158 MB/s\ntest sha2::bench::sha512_1k ... bench: 4052 ns/iter (+/- 1087) = 252 MB/s\ntest sha2::bench::sha512_64k ... bench: 256686 ns/iter (+/- 1721) = 255 MB/s\n```\n\nBefore making any updates, the Sha1 performance was:\n\n```\ntest sha1::bench::sha1_10 ... bench: 85 ns/iter (+/- 6) = 117 MB/s\ntest sha1::bench::sha1_1k ... bench: 8090 ns/iter (+/- 230) = 126 MB/s\ntest sha1::bench::sha1_64k ... bench: 523690 ns/iter (+/- 160571) = 125 MB/s\n```\n\nAfter the updates to the Sha1 code, the performance improved to:\n\n```\ntest sha1::bench::sha1_10 ... bench: 87 ns/iter (+/- 4) = 114 MB/s\ntest sha1::bench::sha1_1k ... bench: 6221 ns/iter (+/- 61) = 164 MB/s\ntest sha1::bench::sha1_64k ... bench: 395805 ns/iter (+/- 4292) = 165 MB/s\n```\n\nCycle counts:\n\nSha512 performance on my machine is: 10.95 cycles / byte. Intel [1], has a Sha512 implementation that achieves 9.4 cycles / byte using the SSE instructions (the AVX implementation is slightly faster, but, only runs on Haswell processors, I think). Assuming that that is the best possible performance, there really isn't all that much more room for optimization without resorting to assembly. I'm not sure what optimized C implementations generally achieve. Prior to the rebase, I was getting about 11.5 cycles / byte. I'm not sure why the performance improved a bit, possibly just variation on my machine or maybe the new code to keep track of the message length is a bit more efficient.\n\nSha256 performance on my machine is: 18.55 cycles / byte. Intel [2] achieved roughly 13.8 cycles / byte in their single threaded SSE implementation. Like Sha512, I think this puts the Sha256 implementation pretty close to the limit on how efficient it can be without resorting to assembly, though not as close to Sha512. After the rebase, the performance seems to have decreased by about 1 cycle / byte. The only new change was to how the message size is being calculated. I haven't done any testing specifically focusing on that at this time, however.\n\nI used the RDTSC instruction to measure the cycle counts. In my measurements, I took into account the entire digest operation all the way through calculating the output digest. Its a little unclear to me if Intel's measurements were just of the compression function or if they included the output digest calculation steps as well.\n\nI didn't / can't measure performance on non-Intel architectures. However, I don't think that any of the changes I made would result in decreased performance on other architectures. I redid my cycle calculations after the rebase.\n\n[1] - http://www.intel.com/content/www/us/en/intelligent-systems/intel-technology/fast-sha512-implementations-ia-processors-paper.html\n\n[2] - http://www.intel.com/content/www/us/en/intelligent-systems/intel-technology/sha-256-implementations-paper.html\n", "created_at": "2013-07-28T21:12:57Z", "updated_at": "2014-06-12T11:29:23Z", "closed_at": "2013-08-01T01:42:52Z", "merged_at": null, "merge_commit_sha": "5dd1f75847377e7e89066e4b495632355a7254cc", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/8097/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/8097/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8097/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/9ff79f69f844d1254a75310677a213f666e96acc", "head": {"label": "DaGenix:digest-improvements", "ref": "digest-improvements", "sha": "9ff79f69f844d1254a75310677a213f666e96acc", "user": {"login": "DaGenix", "id": 2101211, "node_id": "MDQ6VXNlcjIxMDEyMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2101211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DaGenix", "html_url": "https://github.com/DaGenix", "followers_url": "https://api.github.com/users/DaGenix/followers", "following_url": "https://api.github.com/users/DaGenix/following{/other_user}", "gists_url": "https://api.github.com/users/DaGenix/gists{/gist_id}", "starred_url": "https://api.github.com/users/DaGenix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DaGenix/subscriptions", "organizations_url": "https://api.github.com/users/DaGenix/orgs", "repos_url": "https://api.github.com/users/DaGenix/repos", "events_url": "https://api.github.com/users/DaGenix/events{/privacy}", "received_events_url": "https://api.github.com/users/DaGenix/received_events", "type": "User", "site_admin": false}, "repo": {"id": 10753926, "node_id": "MDEwOlJlcG9zaXRvcnkxMDc1MzkyNg==", "name": "rust", "full_name": "DaGenix/rust", "private": false, "owner": {"login": "DaGenix", "id": 2101211, "node_id": "MDQ6VXNlcjIxMDEyMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2101211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DaGenix", "html_url": "https://github.com/DaGenix", "followers_url": "https://api.github.com/users/DaGenix/followers", "following_url": "https://api.github.com/users/DaGenix/following{/other_user}", "gists_url": "https://api.github.com/users/DaGenix/gists{/gist_id}", "starred_url": "https://api.github.com/users/DaGenix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DaGenix/subscriptions", "organizations_url": "https://api.github.com/users/DaGenix/orgs", "repos_url": "https://api.github.com/users/DaGenix/repos", "events_url": "https://api.github.com/users/DaGenix/events{/privacy}", "received_events_url": "https://api.github.com/users/DaGenix/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/DaGenix/rust", "description": "a safe, concurrent, practical language", "fork": true, "url": "https://api.github.com/repos/DaGenix/rust", "forks_url": "https://api.github.com/repos/DaGenix/rust/forks", "keys_url": "https://api.github.com/repos/DaGenix/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/DaGenix/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/DaGenix/rust/teams", "hooks_url": "https://api.github.com/repos/DaGenix/rust/hooks", "issue_events_url": "https://api.github.com/repos/DaGenix/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/DaGenix/rust/events", "assignees_url": "https://api.github.com/repos/DaGenix/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/DaGenix/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/DaGenix/rust/tags", "blobs_url": "https://api.github.com/repos/DaGenix/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/DaGenix/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/DaGenix/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/DaGenix/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/DaGenix/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/DaGenix/rust/languages", "stargazers_url": "https://api.github.com/repos/DaGenix/rust/stargazers", "contributors_url": "https://api.github.com/repos/DaGenix/rust/contributors", "subscribers_url": "https://api.github.com/repos/DaGenix/rust/subscribers", "subscription_url": "https://api.github.com/repos/DaGenix/rust/subscription", "commits_url": "https://api.github.com/repos/DaGenix/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/DaGenix/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/DaGenix/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/DaGenix/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/DaGenix/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/DaGenix/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/DaGenix/rust/merges", "archive_url": "https://api.github.com/repos/DaGenix/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/DaGenix/rust/downloads", "issues_url": "https://api.github.com/repos/DaGenix/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/DaGenix/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/DaGenix/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/DaGenix/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/DaGenix/rust/labels{/name}", "releases_url": "https://api.github.com/repos/DaGenix/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/DaGenix/rust/deployments", "created_at": "2013-06-18T04:36:41Z", "updated_at": "2014-03-14T00:58:02Z", "pushed_at": "2014-08-02T05:21:31Z", "git_url": "git://github.com/DaGenix/rust.git", "ssh_url": "git@github.com:DaGenix/rust.git", "clone_url": "https://github.com/DaGenix/rust.git", "svn_url": "https://github.com/DaGenix/rust", "homepage": "http://www.rust-lang.org", "size": 148244, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "5633a5363b6c650500b8b6496ddd49ea8c698f92", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T08:56:44Z", "pushed_at": "2023-06-19T09:00:30Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 919641, "stargazers_count": 82741, "watchers_count": 82741, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10954, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9628, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10954, "open_issues": 9628, "watchers": 82741, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/8097"}, "html": {"href": "https://github.com/rust-lang/rust/pull/8097"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/8097"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/8097/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/8097/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/8097/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/9ff79f69f844d1254a75310677a213f666e96acc"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 8, "review_comments": 4, "maintainer_can_modify": false, "commits": 9, "additions": 910, "deletions": 851, "changed_files": 6}