{"url": "https://api.github.com/repos/rust-lang/rust/pulls/4610", "id": 3816178, "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxNjE3OA==", "html_url": "https://github.com/rust-lang/rust/pull/4610", "diff_url": "https://github.com/rust-lang/rust/pull/4610.diff", "patch_url": "https://github.com/rust-lang/rust/pull/4610.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/4610", "number": 4610, "state": "closed", "locked": false, "title": "Rustpkg", "user": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "body": "Rustpkg is a revamp of Cargo for the Rust suite that I've been working on for the past week. It's a purely functional package manager that has no central sources of any kind,\nbut rather installs via URLs. It's similar to how Go's `go get` tool works, except\nrustpkg requires a central metadata file (`package.rs`) in the repository, archive or folder\nin order to figure out how to build the package. This is a side effect of rustpkg\nallowing multiple crates to be defined in a single package (i.e. a package is defined\nas a set of crates rather than a package being exactly the same as one crate).\n\nThe metadata is written in Rust. This is both good and bad. One con is that\nRust's syntax is going to be moderately unstable until v1.0 (as I was told),\nso compiling an old package might spring up weird compiling errors. On the other hand,\nyou get to write the build process in Rust itself which is so incredibly meta and fun\nand you get to use an awesome language to build projects in that same awesome language.\n\nRustpkg also doubles as a powerful build system that gives you two ways to\ndescribe the build process of projects: declarative and imperative. The declarative\nsyntax allows you to declare the build process using Rust's attribute syntax.\nA simplistic declarative package script (`package.rs`) would be something\nlike the following (Servo doesn't actually use rustpkg, it's just an example):\n\n``` rust\n#[pkg(id = \"org.mozilla.servo\",\n      vers = \"0.5.6\")];\n\n#[pkg_crate(file = \"src/servo.rc\")];\n#[pkg_crate(file = \"src/servo-gfx.rc\")];\n```\n\nThe imperative API is for when you need a more powerful build process, such\nas probing the system for important configuration, running shell scripts (or\neven autotools, which is a planned builtin feature that I want to add). A simple\nexample using the imperative API is as follows (rustpkg is automatically included):\n\n``` rust\n#[pkg(id = \"org.mozilla.servo\",\n      vers = \"0.5.6\")];\n\n#[pkg_do(build)]\nfn build() {\n   let platform = if os::is_toaster() { ~\"platform=toaster\" } else { ~\"platform=alien\" };\n   let crate = rustpkg::Crate(~\"src/servo.rc\").cfg(platform).flag(~\"-g\");\n\n   rustpkg::build(~[crate]);\n}\n```\n\nWhen a package's crates are installed, they are stored under a unique name (Rust's library crates work like this out of the box) in `~/.rustpkg/bin` or `~/.rustpkg/lib`. This allows packages to coexist in a purely functional manner. However, if you want to easily\nuse a binary crate that has been installed from the `~/.rustpkg/bin` path (after\nadding it to your `$PATH`) then rustpkg provides \"preferring\" functionality\nto symlink a generic name for the crate into the binary directory (which\nvoids the purely functional label, which is why it's explicitly optional). For example, if you had a crate with the name `servo` and it's uniquely installed to `~/.rustpkg/bin/servo-<hash>-0.5.6` then `rustpkg prefer servo` would link it to `~/.rustpkg/bin/servo` which you can then easily run as just `servo` if the binary directory is in your `$PATH`.\n\nThere's also `rustpkg do <cmd>` which allows you to create scripts callable by the user in the package script:\n\n``` rust\n// ...\n\n#[pkg_do(configure)]\nfn configure() {\n    io::println(~\"let us configure things\");\n}\n```\n\n```\n$ rustpkg do configure\nlet us configure things\n```\n\nThere's more detailed per-command info in `rustpkg --help`.\n\nPreferring is currently pretty rusty, along with some of the other features. But that's to\nbe expected due to this being the initial implementation and I plan to perfect it\nover time (including documentation). This pull request also adds `std::semver`, which is originally made by @erickt but I've ported it to the latest syntax and added it into std with his permission.\n\nI still really want to add the following but they're not important for the initial pull request:\n- Improvements to the user interface based on feedback\n- More features of the imperative API\n- Use the JIT compiler for package scripts (JIT segfaults for me at the moment)\n- Use `std::workcache` for only compiling things that have changed\n- Add wrappers around autotools that also use workcache\n", "created_at": "2013-01-24T08:22:50Z", "updated_at": "2014-06-14T03:05:57Z", "closed_at": "2013-02-05T02:05:59Z", "merged_at": null, "merge_commit_sha": "", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/4610/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/4610/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/4610/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/4abb0afa48edbb5c25253924ebd1c338e9cb847b", "head": {"label": "z0w0:rustpkg", "ref": "rustpkg", "sha": "4abb0afa48edbb5c25253924ebd1c338e9cb847b", "user": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "rust-lang:incoming", "ref": "incoming", "sha": "e8f4da78e78238d7a24dc452302a4c1f113f0e2a", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T07:04:40Z", "pushed_at": "2023-06-19T07:27:52Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 919635, "stargazers_count": 82736, "watchers_count": 82736, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10954, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9628, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10954, "open_issues": 9628, "watchers": 82736, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/4610"}, "html": {"href": "https://github.com/rust-lang/rust/pull/4610"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/4610"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/4610/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/4610/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/4610/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/4abb0afa48edbb5c25253924ebd1c338e9cb847b"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 35, "review_comments": 0, "maintainer_can_modify": false, "commits": 16, "additions": 2614, "deletions": 2206, "changed_files": 22}