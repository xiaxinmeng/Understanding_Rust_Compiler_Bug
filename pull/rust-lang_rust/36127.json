{"url": "https://api.github.com/repos/rust-lang/rust/pulls/36127", "id": 83195059, "node_id": "MDExOlB1bGxSZXF1ZXN0ODMxOTUwNTk=", "html_url": "https://github.com/rust-lang/rust/pull/36127", "diff_url": "https://github.com/rust-lang/rust/pull/36127.diff", "patch_url": "https://github.com/rust-lang/rust/pull/36127.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/36127", "number": 36127, "state": "closed", "locked": false, "title": "Improve performance of str::to_lowercase and str::to_uppercase", "user": {"login": "meh", "id": 40204, "node_id": "MDQ6VXNlcjQwMjA0", "avatar_url": "https://avatars.githubusercontent.com/u/40204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meh", "html_url": "https://github.com/meh", "followers_url": "https://api.github.com/users/meh/followers", "following_url": "https://api.github.com/users/meh/following{/other_user}", "gists_url": "https://api.github.com/users/meh/gists{/gist_id}", "starred_url": "https://api.github.com/users/meh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meh/subscriptions", "organizations_url": "https://api.github.com/users/meh/orgs", "repos_url": "https://api.github.com/users/meh/repos", "events_url": "https://api.github.com/users/meh/events{/privacy}", "received_events_url": "https://api.github.com/users/meh/received_events", "type": "User", "site_admin": false}, "body": "I was working on a crate to handle string casing and it seems the `to_lowercase` and `to_uppercase` implementations I came up with (excluding the fact the stuff in my crate returns `Cow<Self>`) is faster than the one in libstd in most cases, and a little slower in the worst case (i.e. all uppercase when calling `to_lowercase` or the other way around).\n\nI ran the libstd tests and it was all green locally, but it doesn't look like there any test cases for these two functions, unless I'm blind :panda_face:  \n\nBelow are the benchmarks (which probably aren't testing any real world scenario cases) I ran locally, and the code to run them.\n\n```\ntest lower_new_best     ... bench:         208 ns/iter (+/- 14)\ntest lower_new_mixed    ... bench:       1,216 ns/iter (+/- 77)\ntest lower_new_unicode  ... bench:         644 ns/iter (+/- 49)\ntest lower_new_unicode2 ... bench:       1,642 ns/iter (+/- 218)\ntest lower_new_worst    ... bench:       1,821 ns/iter (+/- 149)\ntest lower_std_best     ... bench:       1,840 ns/iter (+/- 263)\ntest lower_std_mixed    ... bench:       1,808 ns/iter (+/- 256)\ntest lower_std_unicode  ... bench:       1,941 ns/iter (+/- 106)\ntest lower_std_unicode2 ... bench:       1,918 ns/iter (+/- 94)\ntest lower_std_worst    ... bench:       1,798 ns/iter (+/- 143)\ntest upper_new_best     ... bench:         231 ns/iter (+/- 47)\ntest upper_new_mixed    ... bench:       1,206 ns/iter (+/- 65)\ntest upper_new_unicode  ... bench:         724 ns/iter (+/- 164)\ntest upper_new_unicode2 ... bench:       1,566 ns/iter (+/- 128)\ntest upper_new_worst    ... bench:       1,838 ns/iter (+/- 120)\ntest upper_std_best     ... bench:       1,669 ns/iter (+/- 155)\ntest upper_std_mixed    ... bench:       1,720 ns/iter (+/- 166)\ntest upper_std_unicode  ... bench:       1,820 ns/iter (+/- 133)\ntest upper_std_unicode2 ... bench:       1,797 ns/iter (+/- 146)\ntest upper_std_worst    ... bench:       1,669 ns/iter (+/- 110)\n```\n\n``` rust\n#![feature(test, unicode)]\nextern crate test;\nuse test::Bencher;\n\nextern crate rustc_unicode;\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n\nfn to_uppercase(this: &str) -> String {\n    let mut s = String::with_capacity(this.len());\n    let mut left = None;\n\n    // Try to collect slices of upper case characters to push into the\n    // result or extend with the upper case version if a lower case\n    // character is found.\n    for (i, ch) in this.char_indices() {\n        if ch.is_lowercase() {\n            if let Some(offset) = left.take() {\n                s.push_str(&this[offset..i]);\n            }\n\n            s.extend(ch.to_uppercase());\n        }\n        else if left.is_none() {\n            left = Some(i);\n        }\n    }\n\n    // Append any leftover upper case characters.\n    if let Some(offset) = left.take() {\n        s.push_str(&this[offset..]);\n    }\n\n    s\n}\n\nfn to_lowercase(this: &str) -> String {\n    let mut s = String::with_capacity(this.len());\n    let mut left = None;\n\n    // Try to collect slices of lower case characters to push into the\n    // result or extend with the lower case version if an upper case\n    // character is found.\n    for (i, ch) in this.char_indices() {\n        if ch.is_uppercase() {\n            if let Some(offset) = left.take() {\n                s.push_str(&this[offset..i]);\n            }\n\n            if ch == '\u03a3' {\n                // \u03a3 maps to \u03c3, except at the end of a word where it maps to \u03c2.\n                // This is the only conditional (contextual) but language-independent mapping\n                // in `SpecialCasing.txt`,\n                // so hard-code it rather than have a generic \"condition\" mechanism.\n                // See https://github.com/rust-lang/rust/issues/26035\n\n                map_uppercase_sigma(this, i, &mut s);\n            }\n            else {\n                s.extend(ch.to_lowercase());\n            }\n        }\n        else if left.is_none() {\n            left = Some(i);\n        }\n    }\n\n    // Append any leftover upper case characters.\n    if let Some(offset) = left.take() {\n        s.push_str(&this[offset..]);\n    }\n\n    return s;\n\n    fn map_uppercase_sigma(from: &str, i: usize, to: &mut String) {\n        // See http://www.unicode.org/versions/Unicode7.0.0/ch03.pdf#G33992\n        // for the definition of `Final_Sigma`.\n        debug_assert!('\u03a3'.len_utf8() == 2);\n        let is_word_final = case_ignoreable_then_cased(from[..i].chars().rev()) &&\n                           !case_ignoreable_then_cased(from[i + 2..].chars());\n\n        to.push(if is_word_final {\n                '\u03c2'\n        } else {\n                '\u03c3'\n        });\n    }\n\n    fn case_ignoreable_then_cased<I: Iterator<Item = char>>(iter: I) -> bool {\n        use rustc_unicode::derived_property::{Cased, Case_Ignorable};\n        match iter.skip_while(|&c| Case_Ignorable(c)).next() {\n            Some(c) => Cased(c),\n            None => false,\n        }\n    }\n}\n\n#[bench]\nfn upper_new_worst(b: &mut Bencher) {\n    b.iter(|| to_uppercase(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"));\n}\n\n#[bench]\nfn upper_new_mixed(b: &mut Bencher) {\n    b.iter(|| to_uppercase(\"AAAaaaaaaaaaaaaAAAAAAAAAaaaaAaaaAAAAaaaaAAaaaaaaaAAAAaaaaa\"));\n}\n\n#[bench]\nfn upper_new_best(b: &mut Bencher) {\n    b.iter(|| to_uppercase(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"));\n}\n\n#[bench]\nfn upper_new_unicode(b: &mut Bencher) {\n    b.iter(|| to_uppercase(\"AAA\u00dfAAAA\u00f0AAAAAA\u00e6\u00e6\u00e6\u00e6\u00e6AA\u00dfAA\u00f0\u00f0\u00f0\u00f0AAAAAAAAA\u00e6A\u00c6\u00e6AAAAAAAAAAAAAAAA\"));\n}\n\n#[bench]\nfn upper_new_unicode2(b: &mut Bencher) {\n    b.iter(|| to_uppercase(\"aaa\u00dfaaaa\u00d0aaaaaa\u00c6\u00c6\u00c6\u00c6\u00c6aa\u00dfaa\u00d0\u00d0\u00d0\u00d0aaaaaaaaa\u00c6a\u00e6\u00c6aaaaaaaaaaaaaaaa\"));\n}\n\n#[bench]\nfn upper_std_worst(b: &mut Bencher) {\n    b.iter(|| \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\".to_uppercase());\n}\n\n#[bench]\nfn upper_std_mixed(b: &mut Bencher) {\n    b.iter(|| \"AAAaaaaaaaaaaaaAAAAAAAAAaaaaAaaaAAAAaaaaAAaaaaaaaAAAAaaaaa\".to_uppercase());\n}\n\n#[bench]\nfn upper_std_unicode(b: &mut Bencher) {\n    b.iter(|| \"AAA\u00dfAAAA\u00f0AAAAAA\u00e6\u00e6\u00e6\u00e6\u00e6AA\u00dfAA\u00f0\u00f0\u00f0\u00f0AAAAAAAAA\u00e6A\u00c6\u00e6AAAAAAAAAAAAAAAA\".to_uppercase());\n}\n\n#[bench]\nfn upper_std_unicode2(b: &mut Bencher) {\n    b.iter(|| \"aaa\u00dfaaaa\u00d0aaaaaa\u00c6\u00c6\u00c6\u00c6\u00c6aa\u00dfaa\u00d0\u00d0\u00d0\u00d0aaaaaaaaa\u00c6a\u00e6\u00c6aaaaaaaaaaaaaaaa\".to_uppercase());\n}\n\n#[bench]\nfn upper_std_best(b: &mut Bencher) {\n    b.iter(|| \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\".to_uppercase());\n}\n\n#[bench]\nfn lower_new_worst(b: &mut Bencher) {\n    b.iter(|| to_lowercase(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"));\n}\n\n#[bench]\nfn lower_new_mixed(b: &mut Bencher) {\n    b.iter(|| to_lowercase(\"aaaAAAAAAAAAAAAaaaaaaaaaAAAAaAAAaaaaAAAAaaAAAAAAAaaaaAAAAA\"));\n}\n\n#[bench]\nfn lower_new_best(b: &mut Bencher) {\n    b.iter(|| to_lowercase(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"));\n}\n\n#[bench]\nfn lower_new_unicode(b: &mut Bencher) {\n    b.iter(|| to_lowercase(\"aaa\u00dfaaaa\u00d0aaaaaa\u00c6\u00c6\u00c6\u00c6\u00c6aa\u00dfaa\u00d0\u00d0\u00d0\u00d0aaaaaaaaa\u00c6a\u00e6\u00c6aaaaaaaaaaaaaaaa\"));\n}\n\n#[bench]\nfn lower_new_unicode2(b: &mut Bencher) {\n    b.iter(|| to_lowercase(\"AAA\u00d0\u00aaAAAA\u00f0AAAAAA\u00e6\u00e6\u00e6\u00e6\u00e6AA\u00dfAA\u00f0\u00f0\u00f0\u00f0AAAAAAAAA\u00c6A\u00c6\u00c6AAAAAAAAAAAAAAAA\"));\n}\n\n#[bench]\nfn lower_std_worst(b: &mut Bencher) {\n    b.iter(|| \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\".to_lowercase());\n}\n\n#[bench]\nfn lower_std_mixed(b: &mut Bencher) {\n    b.iter(|| \"aaaAAAAAAAAAAAAaaaaaaaaaAAAAaAAAaaaaAAAAaaAAAAAAAaaaaAAAAA\".to_lowercase());\n}\n\n#[bench]\nfn lower_std_unicode(b: &mut Bencher) {\n    b.iter(|| \"aaa\u00dfaaaa\u00d0aaaaaa\u00c6\u00c6\u00c6\u00c6\u00c6aa\u00dfaa\u00d0\u00d0\u00d0\u00d0aaaaaaaaa\u00c6a\u00e6\u00c6aaaaaaaaaaaaaaaa\".to_lowercase());\n}\n\n#[bench]\nfn lower_std_unicode2(b: &mut Bencher) {\n    b.iter(|| \"AAA\u00d0\u00aaAAAA\u00f0AAAAAA\u00e6\u00e6\u00e6\u00e6\u00e6AA\u00dfAA\u00f0\u00f0\u00f0\u00f0AAAAAAAAA\u00c6A\u00c6\u00c6AAAAAAAAAAAAAAAA\".to_lowercase());\n}\n\n#[bench]\nfn lower_std_best(b: &mut Bencher) {\n    b.iter(|| \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\".to_lowercase());\n}\n```\n", "created_at": "2016-08-30T01:32:17Z", "updated_at": "2016-10-31T22:27:19Z", "closed_at": "2016-10-31T20:33:17Z", "merged_at": null, "merge_commit_sha": "9a8d649eab1deda6fea27770dac92d3f119aa52a", "assignee": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/36127/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/36127/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36127/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/7452bbd274858191793e74ecbf6cda960bc47ff0", "head": {"label": "meh:faster-upperlowercase", "ref": "faster-upperlowercase", "sha": "7452bbd274858191793e74ecbf6cda960bc47ff0", "user": {"login": "meh", "id": 40204, "node_id": "MDQ6VXNlcjQwMjA0", "avatar_url": "https://avatars.githubusercontent.com/u/40204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meh", "html_url": "https://github.com/meh", "followers_url": "https://api.github.com/users/meh/followers", "following_url": "https://api.github.com/users/meh/following{/other_user}", "gists_url": "https://api.github.com/users/meh/gists{/gist_id}", "starred_url": "https://api.github.com/users/meh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meh/subscriptions", "organizations_url": "https://api.github.com/users/meh/orgs", "repos_url": "https://api.github.com/users/meh/repos", "events_url": "https://api.github.com/users/meh/events{/privacy}", "received_events_url": "https://api.github.com/users/meh/received_events", "type": "User", "site_admin": false}, "repo": {"id": 66887852, "node_id": "MDEwOlJlcG9zaXRvcnk2Njg4Nzg1Mg==", "name": "rust", "full_name": "meh/rust", "private": false, "owner": {"login": "meh", "id": 40204, "node_id": "MDQ6VXNlcjQwMjA0", "avatar_url": "https://avatars.githubusercontent.com/u/40204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meh", "html_url": "https://github.com/meh", "followers_url": "https://api.github.com/users/meh/followers", "following_url": "https://api.github.com/users/meh/following{/other_user}", "gists_url": "https://api.github.com/users/meh/gists{/gist_id}", "starred_url": "https://api.github.com/users/meh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meh/subscriptions", "organizations_url": "https://api.github.com/users/meh/orgs", "repos_url": "https://api.github.com/users/meh/repos", "events_url": "https://api.github.com/users/meh/events{/privacy}", "received_events_url": "https://api.github.com/users/meh/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/meh/rust", "description": "A safe, concurrent, practical language.", "fork": true, "url": "https://api.github.com/repos/meh/rust", "forks_url": "https://api.github.com/repos/meh/rust/forks", "keys_url": "https://api.github.com/repos/meh/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/meh/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/meh/rust/teams", "hooks_url": "https://api.github.com/repos/meh/rust/hooks", "issue_events_url": "https://api.github.com/repos/meh/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/meh/rust/events", "assignees_url": "https://api.github.com/repos/meh/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/meh/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/meh/rust/tags", "blobs_url": "https://api.github.com/repos/meh/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/meh/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/meh/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/meh/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/meh/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/meh/rust/languages", "stargazers_url": "https://api.github.com/repos/meh/rust/stargazers", "contributors_url": "https://api.github.com/repos/meh/rust/contributors", "subscribers_url": "https://api.github.com/repos/meh/rust/subscribers", "subscription_url": "https://api.github.com/repos/meh/rust/subscription", "commits_url": "https://api.github.com/repos/meh/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/meh/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/meh/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/meh/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/meh/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/meh/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/meh/rust/merges", "archive_url": "https://api.github.com/repos/meh/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/meh/rust/downloads", "issues_url": "https://api.github.com/repos/meh/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/meh/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/meh/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/meh/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/meh/rust/labels{/name}", "releases_url": "https://api.github.com/repos/meh/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/meh/rust/deployments", "created_at": "2016-08-29T23:17:34Z", "updated_at": "2016-08-29T23:17:56Z", "pushed_at": "2016-11-06T17:20:30Z", "git_url": "git://github.com/meh/rust.git", "ssh_url": "git@github.com:meh/rust.git", "clone_url": "https://github.com/meh/rust.git", "svn_url": "https://github.com/meh/rust", "homepage": "https://www.rust-lang.org", "size": 306899, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "933f4717104aba3af71ced7e5a513f8c0bd6077a", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T10:22:09Z", "pushed_at": "2023-06-19T10:41:44Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 919641, "stargazers_count": 82742, "watchers_count": 82742, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10956, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9630, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10956, "open_issues": 9630, "watchers": 82742, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/36127"}, "html": {"href": "https://github.com/rust-lang/rust/pull/36127"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/36127"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/36127/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/36127/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/36127/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/7452bbd274858191793e74ecbf6cda960bc47ff0"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 14, "review_comments": 7, "maintainer_can_modify": false, "commits": 3, "additions": 60, "deletions": 15, "changed_files": 1}