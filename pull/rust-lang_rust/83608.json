{"url": "https://api.github.com/repos/rust-lang/rust/pulls/83608", "id": 602260789, "node_id": "MDExOlB1bGxSZXF1ZXN0NjAyMjYwNzg5", "html_url": "https://github.com/rust-lang/rust/pull/83608", "diff_url": "https://github.com/rust-lang/rust/pull/83608.diff", "patch_url": "https://github.com/rust-lang/rust/pull/83608.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/83608", "number": 83608, "state": "closed", "locked": false, "title": "Add slice methods for indexing via an array of indices.", "user": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "body": "Disclaimer: It's been a while since I contributed to the main Rust repo, apologies in advance if this is large enough already that it should've been an RFC.\r\n\r\n---\r\n\r\n# Update:\r\n\r\n- Based on feedback, removed the `&[T]` variant of this API, and removed the requirements for the indices to be sorted.\r\n\r\n# Description\r\n\r\nThis adds the following slice methods to `core`:\r\n\r\n```rust\r\nimpl<T> [T] {\r\n    pub unsafe fn get_many_unchecked_mut<const N: usize>(&mut self, indices: [usize; N]) -> [&mut T; N];\r\n    pub fn get_many_mut<const N: usize>(&mut self, indices: [usize; N]) -> Option<[&mut T; N]>;\r\n}\r\n```\r\n\r\nThis allows creating multiple mutable references to disjunct positions in a slice, which previously required writing some awkward code with `split_at_mut()` or `iter_mut()`. For the bound-checked variant, the indices are checked against each other and against the bounds of the slice, which requires `N * (N + 1) / 2` comparison operations.\r\n\r\nThis has a proof-of-concept standalone implementation here: https://crates.io/crates/index_many\r\n\r\nCare has been taken that the implementation passes miri borrow checks, and generates straight-forward assembly (though this was only checked on x86_64).\r\n\r\n# Example\r\n\r\n```rust\r\nlet v = &mut [1, 2, 3, 4];\r\nlet [a, b] = v.get_many_mut([0, 2]).unwrap();\r\nstd::mem::swap(a, b);\r\n*v += 100;\r\nassert_eq!(v, &[3, 2, 101, 4]);\r\n```\r\n\r\n# Codegen Examples\r\n\r\n<details>\r\n  <summary>Click to expand!</summary>\r\n\r\nDisclaimer: Taken from local tests with the standalone implementation.\r\n\r\n## Unchecked Indexing:\r\n\r\n```rust\r\npub unsafe fn example_unchecked(slice: &mut [usize], indices: [usize; 3]) -> [&mut usize; 3] {\r\n    slice.get_many_unchecked_mut(indices)\r\n}\r\n```\r\n\r\n```nasm\r\nexample_unchecked:\r\n mov     rcx, qword, ptr, [r9]\r\n mov     r8, qword, ptr, [r9, +, 8]\r\n mov     r9, qword, ptr, [r9, +, 16]\r\n lea     rcx, [rdx, +, 8*rcx]\r\n lea     r8, [rdx, +, 8*r8]\r\n lea     rdx, [rdx, +, 8*r9]\r\n mov     qword, ptr, [rax], rcx\r\n mov     qword, ptr, [rax, +, 8], r8\r\n mov     qword, ptr, [rax, +, 16], rdx\r\n ret\r\n```\r\n\r\n## Checked Indexing (Option):\r\n\r\n```rust\r\npub unsafe fn example_option(slice: &mut [usize], indices: [usize; 3]) -> Option<[&mut usize; 3]> {\r\n    slice.get_many_mut(indices)\r\n}\r\n```\r\n\r\n```nasm\r\n mov     r10, qword, ptr, [r9, +, 8]\r\n mov     rcx, qword, ptr, [r9, +, 16]\r\n cmp     rcx, r10\r\n je      .LBB0_7\r\n mov     r9, qword, ptr, [r9]\r\n cmp     rcx, r9\r\n je      .LBB0_7\r\n cmp     rcx, r8\r\n jae     .LBB0_7\r\n cmp     r10, r9\r\n je      .LBB0_7\r\n cmp     r9, r8\r\n jae     .LBB0_7\r\n cmp     r10, r8\r\n jae     .LBB0_7\r\n lea     r8, [rdx, +, 8*r9]\r\n lea     r9, [rdx, +, 8*r10]\r\n lea     rcx, [rdx, +, 8*rcx]\r\n mov     qword, ptr, [rax], r8\r\n mov     qword, ptr, [rax, +, 8], r9\r\n mov     qword, ptr, [rax, +, 16], rcx\r\n ret\r\n.LBB0_7:\r\n mov     qword, ptr, [rax], 0\r\n ret\r\n```\r\n\r\n## Checked Indexing (Panic):\r\n\r\n```rust\r\npub fn example_panic(slice: &mut [usize], indices: [usize; 3]) -> [&mut usize; 3] {\r\n    let len = slice.len();\r\n    match slice.get_many_mut(indices) {\r\n        Some(s) => s,\r\n        None => {\r\n            let tmp = indices;\r\n            index_many::sorted_bound_check_failed(&tmp, len)\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```nasm\r\nexample_panic:\r\n sub     rsp, 56\r\n mov     rax, qword, ptr, [r9]\r\n mov     r10, qword, ptr, [r9, +, 8]\r\n mov     r9, qword, ptr, [r9, +, 16]\r\n cmp     r9, r10\r\n je      .LBB0_6\r\n cmp     r9, rax\r\n je      .LBB0_6\r\n cmp     r9, r8\r\n jae     .LBB0_6\r\n cmp     r10, rax\r\n je      .LBB0_6\r\n cmp     rax, r8\r\n jae     .LBB0_6\r\n cmp     r10, r8\r\n jae     .LBB0_6\r\n lea     rax, [rdx, +, 8*rax]\r\n lea     r8, [rdx, +, 8*r10]\r\n lea     rdx, [rdx, +, 8*r9]\r\n mov     qword, ptr, [rcx], rax\r\n mov     qword, ptr, [rcx, +, 8], r8\r\n mov     qword, ptr, [rcx, +, 16], rdx\r\n mov     rax, rcx\r\n add     rsp, 56\r\n ret\r\n.LBB0_6:\r\n mov     qword, ptr, [rsp, +, 32], rax\r\n mov     qword, ptr, [rsp, +, 40], r10\r\n mov     qword, ptr, [rsp, +, 48], r9\r\n lea     rcx, [rsp, +, 32]\r\n mov     edx, 3\r\n call    index_many::bound_check_failed\r\n ud2\r\n```\r\n</details>\r\n\r\n# Extensions\r\n\r\nThere are multiple optional extensions to this.\r\n\r\n## Indexing With Ranges\r\n\r\nThis could easily be expanded to allow indexing with `[I; N]` where `I: SliceIndex<Self>`.  I wanted to keep the initial implementation simple, so I didn't include it yet.\r\n\r\n## Panicking Variant\r\n\r\nWe could also add this method:\r\n\r\n```rust\r\nimpl<T> [T] {\r\n    fn index_many_mut<const N: usize>(&mut self, indices: [usize; N]) -> [&mut T; N];\r\n}\r\n```\r\n\r\nThis would work similar to the regular index operator and panic with out-of-bound indices. The advantage would be that we could more easily ensure good codegen with a useful panic message, which is non-trivial with the `Option` variant.\r\n\r\nThis is implemented in the standalone implementation, and used as basis for the codegen examples here and there.", "created_at": "2021-03-28T15:41:23Z", "updated_at": "2022-11-22T10:17:30Z", "closed_at": "2022-11-22T10:17:25Z", "merged_at": "2022-11-22T10:17:24Z", "merge_commit_sha": "1dd515f27393c7f1e8b57f9d21c183cd05005b5c", "assignee": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 583437191, "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors", "name": "S-waiting-on-bors", "color": "d3dddd", "default": false, "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/99", "html_url": "https://github.com/rust-lang/rust/milestone/99", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/99/labels", "id": 8595267, "node_id": "MI_kwDOAAsO6M4AgydD", "number": 99, "title": "1.67.0", "description": null, "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 914, "state": "closed", "created_at": "2022-10-30T02:26:48Z", "updated_at": "2023-05-30T19:55:38Z", "due_on": null, "closed_at": "2023-02-03T16:32:41Z"}, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/83608/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/83608/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83608/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/3fe37b8c6e02daa6a7c33a71bb7f44682e43d08d", "head": {"label": "Kimundi:index_many", "ref": "index_many", "sha": "3fe37b8c6e02daa6a7c33a71bb7f44682e43d08d", "user": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "repo": {"id": 7525322, "node_id": "MDEwOlJlcG9zaXRvcnk3NTI1MzIy", "name": "rust", "full_name": "Kimundi/rust", "private": false, "owner": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/Kimundi/rust", "description": "a safe, concurrent, practical language", "fork": true, "url": "https://api.github.com/repos/Kimundi/rust", "forks_url": "https://api.github.com/repos/Kimundi/rust/forks", "keys_url": "https://api.github.com/repos/Kimundi/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Kimundi/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Kimundi/rust/teams", "hooks_url": "https://api.github.com/repos/Kimundi/rust/hooks", "issue_events_url": "https://api.github.com/repos/Kimundi/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/Kimundi/rust/events", "assignees_url": "https://api.github.com/repos/Kimundi/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/Kimundi/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/Kimundi/rust/tags", "blobs_url": "https://api.github.com/repos/Kimundi/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Kimundi/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Kimundi/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Kimundi/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Kimundi/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/Kimundi/rust/languages", "stargazers_url": "https://api.github.com/repos/Kimundi/rust/stargazers", "contributors_url": "https://api.github.com/repos/Kimundi/rust/contributors", "subscribers_url": "https://api.github.com/repos/Kimundi/rust/subscribers", "subscription_url": "https://api.github.com/repos/Kimundi/rust/subscription", "commits_url": "https://api.github.com/repos/Kimundi/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Kimundi/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Kimundi/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Kimundi/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Kimundi/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/Kimundi/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Kimundi/rust/merges", "archive_url": "https://api.github.com/repos/Kimundi/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Kimundi/rust/downloads", "issues_url": "https://api.github.com/repos/Kimundi/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/Kimundi/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/Kimundi/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/Kimundi/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Kimundi/rust/labels{/name}", "releases_url": "https://api.github.com/repos/Kimundi/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/Kimundi/rust/deployments", "created_at": "2013-01-09T17:13:13Z", "updated_at": "2022-08-06T12:37:54Z", "pushed_at": "2022-11-20T16:19:25Z", "git_url": "git://github.com/Kimundi/rust.git", "ssh_url": "git@github.com:Kimundi/rust.git", "clone_url": "https://github.com/Kimundi/rust.git", "svn_url": "https://github.com/Kimundi/rust", "homepage": "http://www.rust-lang.org", "size": 1000168, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "911cbf8e46f0f3b044c87fc5cbca922878db757b", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-21T00:15:03Z", "pushed_at": "2023-06-21T00:31:23Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 931095, "stargazers_count": 82793, "watchers_count": 82793, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10969, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9632, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10969, "open_issues": 9632, "watchers": 82793, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/83608"}, "html": {"href": "https://github.com/rust-lang/rust/pull/83608"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/83608"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/83608/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/83608/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/83608/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/3fe37b8c6e02daa6a7c33a71bb7f44682e43d08d"}}, "author_association": "MEMBER", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 59, "review_comments": 6, "maintainer_can_modify": false, "commits": 1, "additions": 201, "deletions": 0, "changed_files": 5}