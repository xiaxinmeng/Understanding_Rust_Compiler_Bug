{"url": "https://api.github.com/repos/rust-lang/rust/pulls/94598", "id": 871434045, "node_id": "PR_kwDOAAsO6M4z8Qc9", "html_url": "https://github.com/rust-lang/rust/pull/94598", "diff_url": "https://github.com/rust-lang/rust/pull/94598.diff", "patch_url": "https://github.com/rust-lang/rust/pull/94598.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/94598", "number": 94598, "state": "closed", "locked": false, "title": "Add a dedicated length-prefixing method to `Hasher`", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "body": "This accomplishes two main goals:\r\n- Make it clear who is responsible for prefix-freedom, including how they should do it\r\n- Make it feasible for a `Hasher` that *doesn't* care about Hash-DoS resistance to get better performance by not hashing lengths\r\n\r\nThis does not change rustc-hash, since that's in an external crate, but that could potentially use it in future.\r\n\r\nFixes #94026\r\n\r\nr? rust-lang/libs\r\n\r\n---\r\n\r\nThe core of this change is the following two new methods on `Hasher`:\r\n\r\n```rust\r\npub trait Hasher {\r\n    /// Writes a length prefix into this hasher, as part of being prefix-free.\r\n    ///\r\n    /// If you're implementing [`Hash`] for a custom collection, call this before\r\n    /// writing its contents to this `Hasher`.  That way\r\n    /// `(collection![1, 2, 3], collection![4, 5])` and\r\n    /// `(collection![1, 2], collection![3, 4, 5])` will provide different\r\n    /// sequences of values to the `Hasher`\r\n    ///\r\n    /// The `impl<T> Hash for [T]` includes a call to this method, so if you're\r\n    /// hashing a slice (or array or vector) via its `Hash::hash` method,\r\n    /// you should **not** call this yourself.\r\n    ///\r\n    /// This method is only for providing domain separation.  If you want to\r\n    /// hash a `usize` that represents part of the *data*, then it's important\r\n    /// that you pass it to [`Hasher::write_usize`] instead of to this method.\r\n    ///\r\n    /// # Examples\r\n    ///\r\n    /// ```\r\n    /// #![feature(hasher_prefixfree_extras)]\r\n    /// # // Stubs to make the `impl` below pass the compiler\r\n    /// # struct MyCollection<T>(Option<T>);\r\n    /// # impl<T> MyCollection<T> {\r\n    /// #     fn len(&self) -> usize { todo!() }\r\n    /// # }\r\n    /// # impl<'a, T> IntoIterator for &'a MyCollection<T> {\r\n    /// #     type Item = T;\r\n    /// #     type IntoIter = std::iter::Empty<T>;\r\n    /// #     fn into_iter(self) -> Self::IntoIter { todo!() }\r\n    /// # }\r\n    ///\r\n    /// use std::hash::{Hash, Hasher};\r\n    /// impl<T: Hash> Hash for MyCollection<T> {\r\n    ///     fn hash<H: Hasher>(&self, state: &mut H) {\r\n    ///         state.write_length_prefix(self.len());\r\n    ///         for elt in self {\r\n    ///             elt.hash(state);\r\n    ///         }\r\n    ///     }\r\n    /// }\r\n    /// ```\r\n    ///\r\n    /// # Note to Implementers\r\n    ///\r\n    /// If you've decided that your `Hasher` is willing to be susceptible to\r\n    /// Hash-DoS attacks, then you might consider skipping hashing some or all\r\n    /// of the `len` provided in the name of increased performance.\r\n    #[inline]\r\n    #[unstable(feature = \"hasher_prefixfree_extras\", issue = \"88888888\")]\r\n    fn write_length_prefix(&mut self, len: usize) {\r\n        self.write_usize(len);\r\n    }\r\n\r\n    /// Writes a single `str` into this hasher.\r\n    ///\r\n    /// If you're implementing [`Hash`], you generally do not need to call this,\r\n    /// as the `impl Hash for str` does, so you can just use that.\r\n    ///\r\n    /// This includes the domain separator for prefix-freedom, so you should\r\n    /// **not** call `Self::write_length_prefix` before calling this.\r\n    ///\r\n    /// # Note to Implementers\r\n    ///\r\n    /// The default implementation of this method includes a call to\r\n    /// [`Self::write_length_prefix`], so if your implementation of `Hasher`\r\n    /// doesn't care about prefix-freedom and you've thus overridden\r\n    /// that method to do nothing, there's no need to override this one.\r\n    ///\r\n    /// This method is available to be overridden separately from the others\r\n    /// as `str` being UTF-8 means that it never contains `0xFF` bytes, which\r\n    /// can be used to provide prefix-freedom cheaper than hashing a length.\r\n    ///\r\n    /// For example, if your `Hasher` works byte-by-byte (perhaps by accumulating\r\n    /// them into a buffer), then you can hash the bytes of the `str` followed\r\n    /// by a single `0xFF` byte.\r\n    ///\r\n    /// If your `Hasher` works in chunks, you can also do this by being careful\r\n    /// about how you pad partial chunks.  If the chunks are padded with `0x00`\r\n    /// bytes then just hashing an extra `0xFF` byte doesn't necessarily\r\n    /// provide prefix-freedom, as `\"ab\"` and `\"ab\\u{0}\"` would likely hash\r\n    /// the same sequence of chunks.  But if you pad with `0xFF` bytes instead,\r\n    /// ensuring at least one padding byte, then it can often provide\r\n    /// prefix-freedom cheaper than hashing the length would.\r\n    #[inline]\r\n    #[unstable(feature = \"hasher_prefixfree_extras\", issue = \"88888888\")]\r\n    fn write_str(&mut self, s: &str) {\r\n        self.write_length_prefix(s.len());\r\n        self.write(s.as_bytes());\r\n    }\r\n}\r\n```\r\n\r\nWith updates to the `Hash` implementations for slices and containers to call `write_length_prefix` instead of `write_usize`.\r\n\r\n`write_str` defaults to using `write_length_prefix` since, as was pointed out in the issue, the `write_u8(0xFF)` approach is insufficient for hashers that work in chunks, as those would hash `\"a\\u{0}\"` and `\"a\"` to the same thing.  But since `SipHash` works byte-wise (there's an internal buffer to accumulate bytes until a full chunk is available) it overrides `write_str` to continue to use the add-non-UTF-8-byte approach.\r\n\r\n---\r\n\r\nCompatibility:\r\n\r\nBecause the default implementation of `write_length_prefix` calls `write_usize`, the changed hash implementation for slices will do the same thing the old one did on existing `Hasher`s.\r\n", "created_at": "2022-03-04T08:28:15Z", "updated_at": "2022-05-13T02:09:56Z", "closed_at": "2022-05-06T12:09:50Z", "merged_at": "2022-05-06T12:09:50Z", "merge_commit_sha": "8c4fc9d9a45b0577f583abda870386f1f940c706", "assignee": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 583437191, "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors", "name": "S-waiting-on-bors", "color": "d3dddd", "default": false, "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."}, {"id": 1223998418, "node_id": "MDU6TGFiZWwxMjIzOTk4NDE4", "url": "https://api.github.com/repos/rust-lang/rust/labels/merged-by-bors", "name": "merged-by-bors", "color": "dae4e4", "default": false, "description": "This PR was explicitly merged by bors"}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/93", "html_url": "https://github.com/rust-lang/rust/milestone/93", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/93/labels", "id": 7835324, "node_id": "MI_kwDOAAsO6M4Ad468", "number": 93, "title": "1.62.0", "description": "", "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 4, "closed_issues": 714, "state": "closed", "created_at": "2022-04-04T09:40:37Z", "updated_at": "2022-10-22T02:28:03Z", "due_on": null, "closed_at": "2022-07-01T01:32:41Z"}, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/94598/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/94598/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94598/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/ebdcb08abf00f193b3787dc32cea97ce74a14963", "head": {"label": "scottmcm:prefix-free-hasher-methods", "ref": "prefix-free-hasher-methods", "sha": "ebdcb08abf00f193b3787dc32cea97ce74a14963", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "repo": {"id": 81642528, "node_id": "MDEwOlJlcG9zaXRvcnk4MTY0MjUyOA==", "name": "rust", "full_name": "scottmcm/rust", "private": false, "owner": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/scottmcm/rust", "description": "A safe, concurrent, practical language.", "fork": true, "url": "https://api.github.com/repos/scottmcm/rust", "forks_url": "https://api.github.com/repos/scottmcm/rust/forks", "keys_url": "https://api.github.com/repos/scottmcm/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/scottmcm/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/scottmcm/rust/teams", "hooks_url": "https://api.github.com/repos/scottmcm/rust/hooks", "issue_events_url": "https://api.github.com/repos/scottmcm/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/scottmcm/rust/events", "assignees_url": "https://api.github.com/repos/scottmcm/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/scottmcm/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/scottmcm/rust/tags", "blobs_url": "https://api.github.com/repos/scottmcm/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/scottmcm/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/scottmcm/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/scottmcm/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/scottmcm/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/scottmcm/rust/languages", "stargazers_url": "https://api.github.com/repos/scottmcm/rust/stargazers", "contributors_url": "https://api.github.com/repos/scottmcm/rust/contributors", "subscribers_url": "https://api.github.com/repos/scottmcm/rust/subscribers", "subscription_url": "https://api.github.com/repos/scottmcm/rust/subscription", "commits_url": "https://api.github.com/repos/scottmcm/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/scottmcm/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/scottmcm/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/scottmcm/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/scottmcm/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/scottmcm/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/scottmcm/rust/merges", "archive_url": "https://api.github.com/repos/scottmcm/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/scottmcm/rust/downloads", "issues_url": "https://api.github.com/repos/scottmcm/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/scottmcm/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/scottmcm/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/scottmcm/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/scottmcm/rust/labels{/name}", "releases_url": "https://api.github.com/repos/scottmcm/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/scottmcm/rust/deployments", "created_at": "2017-02-11T09:12:33Z", "updated_at": "2023-01-11T19:31:16Z", "pushed_at": "2023-06-19T09:00:24Z", "git_url": "git://github.com/scottmcm/rust.git", "ssh_url": "git@github.com:scottmcm/rust.git", "clone_url": "https://github.com/scottmcm/rust.git", "svn_url": "https://github.com/scottmcm/rust", "homepage": "https://www.rust-lang.org", "size": 908517, "stargazers_count": 2, "watchers_count": 2, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 2, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "74cea9fdb9ca77d4104df5c28124817004ead6a3", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T22:34:36Z", "pushed_at": "2023-06-19T23:52:14Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 920577, "stargazers_count": 82755, "watchers_count": 82755, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10957, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9625, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10957, "open_issues": 9625, "watchers": 82755, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/94598"}, "html": {"href": "https://github.com/rust-lang/rust/pull/94598"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/94598"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/94598/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/94598/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/94598/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/ebdcb08abf00f193b3787dc32cea97ce74a14963"}}, "author_association": "MEMBER", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 42, "review_comments": 1, "maintainer_can_modify": false, "commits": 2, "additions": 197, "deletions": 6, "changed_files": 14}