{"url": "https://api.github.com/repos/rust-lang/rust/pulls/105096", "id": 1140764339, "node_id": "PR_kwDOAAsO6M5D_q6z", "html_url": "https://github.com/rust-lang/rust/pull/105096", "diff_url": "https://github.com/rust-lang/rust/pull/105096.diff", "patch_url": "https://github.com/rust-lang/rust/pull/105096.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/105096", "number": 105096, "state": "closed", "locked": false, "title": "Clarify that copied allocators must behave the same", "user": {"login": "LegionMammal978", "id": 7880963, "node_id": "MDQ6VXNlcjc4ODA5NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7880963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegionMammal978", "html_url": "https://github.com/LegionMammal978", "followers_url": "https://api.github.com/users/LegionMammal978/followers", "following_url": "https://api.github.com/users/LegionMammal978/following{/other_user}", "gists_url": "https://api.github.com/users/LegionMammal978/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegionMammal978/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegionMammal978/subscriptions", "organizations_url": "https://api.github.com/users/LegionMammal978/orgs", "repos_url": "https://api.github.com/users/LegionMammal978/repos", "events_url": "https://api.github.com/users/LegionMammal978/events{/privacy}", "received_events_url": "https://api.github.com/users/LegionMammal978/received_events", "type": "User", "site_admin": false}, "body": "Currently, the safety documentation for `Allocator` says that a cloned or moved allocator must behave the same as the original. However, it does not specify that a copied allocator must behave the same, and it's possible to construct an allocator that permits being moved or cloned, but sometimes produces a new allocator when copied.\r\n\r\n<details>\r\n<summary>Contrived example which results in a Miri error</summary>\r\n\r\n```rust\r\n#![feature(allocator_api, once_cell, strict_provenance)]\r\nuse std::{\r\n    alloc::{AllocError, Allocator, Global, Layout},\r\n    collections::HashMap,\r\n    hint,\r\n    marker::PhantomPinned,\r\n    num::NonZeroUsize,\r\n    pin::Pin,\r\n    ptr::{addr_of, NonNull},\r\n    sync::{LazyLock, Mutex},\r\n};\r\n\r\nmod source_allocator {\r\n    use super::*;\r\n\r\n    // `SourceAllocator` has 3 states:\r\n    // - invalid value: is_cloned == false, source != self.addr()\r\n    // - source value:  is_cloned == false, source == self.addr()\r\n    // - cloned value:  is_cloned == true\r\n    pub struct SourceAllocator {\r\n        is_cloned: bool,\r\n        source: usize,\r\n        _pin: PhantomPinned,\r\n    }\r\n\r\n    impl SourceAllocator {\r\n        // Returns a pinned source value (pointing to itself).\r\n        pub fn new_source() -> Pin<Box<Self>> {\r\n            let mut b = Box::new(Self {\r\n                is_cloned: false,\r\n                source: 0,\r\n                _pin: PhantomPinned,\r\n            });\r\n            b.source = b.addr();\r\n            Box::into_pin(b)\r\n        }\r\n\r\n        fn addr(&self) -> usize {\r\n            addr_of!(*self).addr()\r\n        }\r\n\r\n        // Invalid values point to source 0.\r\n        // Source values point to themselves.\r\n        // Cloned values point to their corresponding source.\r\n        fn source(&self) -> usize {\r\n            if self.is_cloned || self.addr() == self.source {\r\n                self.source\r\n            } else {\r\n                0\r\n            }\r\n        }\r\n    }\r\n\r\n    // Copying an invalid value produces an invalid value.\r\n    // Copying a source value produces an invalid value.\r\n    // Copying a cloned value produces a cloned value with the same source.\r\n    impl Copy for SourceAllocator {}\r\n\r\n    // Cloning an invalid value produces an invalid value.\r\n    // Cloning a source value produces a cloned value with that source.\r\n    // Cloning a cloned value produces a cloned value with the same source.\r\n    impl Clone for SourceAllocator {\r\n        fn clone(&self) -> Self {\r\n            if self.is_cloned || self.addr() != self.source {\r\n                *self\r\n            } else {\r\n                Self {\r\n                    is_cloned: true,\r\n                    source: self.source,\r\n                    _pin: PhantomPinned,\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static SOURCE_MAP: LazyLock<Mutex<HashMap<NonZeroUsize, usize>>> =\r\n        LazyLock::new(Default::default);\r\n\r\n    // SAFETY: Wraps `Global`'s methods with additional tracking.\r\n    // All invalid values share blocks with each other.\r\n    // Each source value shares blocks with all cloned values pointing to it.\r\n    // Cloning an allocator always produces a compatible allocator:\r\n    // - Cloning an invalid value produces another invalid value.\r\n    // - Cloning a source value produces a cloned value pointing to it.\r\n    // - Cloning a cloned value produces another cloned value with the same source.\r\n    // Moving an allocator always produces a compatible allocator:\r\n    // - Invalid values remain invalid when moved.\r\n    // - Source values cannot be moved, since they are always pinned to the heap.\r\n    // - Cloned values keep the same source when moved.\r\n    unsafe impl Allocator for SourceAllocator {\r\n        fn allocate(&self, layout: Layout) -> Result<NonNull<[u8]>, AllocError> {\r\n            let mut map = SOURCE_MAP.lock().unwrap();\r\n            let block = Global.allocate(layout)?;\r\n            let block_addr = block.cast::<u8>().addr();\r\n            map.insert(block_addr, self.source());\r\n            Ok(block)\r\n        }\r\n\r\n        unsafe fn deallocate(&self, block: NonNull<u8>, layout: Layout) {\r\n            let mut map = SOURCE_MAP.lock().unwrap();\r\n            let block_addr = block.addr();\r\n            // SAFETY: `block` came from an allocator that shares blocks with this allocator.\r\n            if map.remove(&block_addr) != Some(self.source()) {\r\n                hint::unreachable_unchecked()\r\n            }\r\n            Global.deallocate(block, layout)\r\n        }\r\n    }\r\n}\r\nuse source_allocator::SourceAllocator;\r\n\r\n// SAFETY: `alloc1` and `alloc2` must share blocks.\r\nunsafe fn test_same(alloc1: &SourceAllocator, alloc2: &SourceAllocator) {\r\n    let ptr = alloc1.allocate(Layout::new::<i32>()).unwrap();\r\n    alloc2.deallocate(ptr.cast(), Layout::new::<i32>());\r\n}\r\n\r\nfn main() {\r\n    let orig = &*SourceAllocator::new_source();\r\n    let orig_cloned1 = &orig.clone();\r\n    let orig_cloned2 = &orig.clone();\r\n    let copied = &{ *orig };\r\n    let copied_cloned1 = &copied.clone();\r\n    let copied_cloned2 = &copied.clone();\r\n    unsafe {\r\n        test_same(orig, orig_cloned1);\r\n        test_same(orig_cloned1, orig_cloned2);\r\n        test_same(copied, copied_cloned1);\r\n        test_same(copied_cloned1, copied_cloned2);\r\n        test_same(orig, copied); // error\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\nThis could result in issues in the future for algorithms that specialize on `Copy` types. Right now, nothing in the standard library that depends on `Allocator + Clone` is susceptible to this issue, but I still think it would make sense to specify that copying an allocator is always as valid as cloning it.", "created_at": "2022-11-30T19:05:18Z", "updated_at": "2023-05-15T13:39:20Z", "closed_at": "2023-03-26T03:54:34Z", "merged_at": "2023-03-26T03:54:34Z", "merge_commit_sha": "48ae1b335f91ff137f955005f015b83fa24b8044", "assignee": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 583437191, "node_id": "MDU6TGFiZWw1ODM0MzcxOTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-bors", "name": "S-waiting-on-bors", "color": "d3dddd", "default": false, "description": "Status: Waiting on bors to run and complete tests. Bors will change the label on completion."}, {"id": 1223998418, "node_id": "MDU6TGFiZWwxMjIzOTk4NDE4", "url": "https://api.github.com/repos/rust-lang/rust/labels/merged-by-bors", "name": "merged-by-bors", "color": "dae4e4", "default": false, "description": "This PR was explicitly merged by bors"}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/104", "html_url": "https://github.com/rust-lang/rust/milestone/104", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/104/labels", "id": 9118353, "node_id": "MI_kwDOAAsO6M4AiyKR", "number": 104, "title": "1.70.0", "description": null, "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 847, "state": "open", "created_at": "2023-03-04T22:50:24Z", "updated_at": "2023-06-04T21:59:59Z", "due_on": null, "closed_at": null}, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/105096/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/105096/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105096/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/57e12f970cd97c65a7d1ce97989a778ffa102584", "head": {"label": "LegionMammal978:copied-allocators", "ref": "copied-allocators", "sha": "57e12f970cd97c65a7d1ce97989a778ffa102584", "user": {"login": "LegionMammal978", "id": 7880963, "node_id": "MDQ6VXNlcjc4ODA5NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7880963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegionMammal978", "html_url": "https://github.com/LegionMammal978", "followers_url": "https://api.github.com/users/LegionMammal978/followers", "following_url": "https://api.github.com/users/LegionMammal978/following{/other_user}", "gists_url": "https://api.github.com/users/LegionMammal978/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegionMammal978/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegionMammal978/subscriptions", "organizations_url": "https://api.github.com/users/LegionMammal978/orgs", "repos_url": "https://api.github.com/users/LegionMammal978/repos", "events_url": "https://api.github.com/users/LegionMammal978/events{/privacy}", "received_events_url": "https://api.github.com/users/LegionMammal978/received_events", "type": "User", "site_admin": false}, "repo": {"id": 438034793, "node_id": "R_kgDOGhvhaQ", "name": "rust", "full_name": "LegionMammal978/rust", "private": false, "owner": {"login": "LegionMammal978", "id": 7880963, "node_id": "MDQ6VXNlcjc4ODA5NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7880963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegionMammal978", "html_url": "https://github.com/LegionMammal978", "followers_url": "https://api.github.com/users/LegionMammal978/followers", "following_url": "https://api.github.com/users/LegionMammal978/following{/other_user}", "gists_url": "https://api.github.com/users/LegionMammal978/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegionMammal978/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegionMammal978/subscriptions", "organizations_url": "https://api.github.com/users/LegionMammal978/orgs", "repos_url": "https://api.github.com/users/LegionMammal978/repos", "events_url": "https://api.github.com/users/LegionMammal978/events{/privacy}", "received_events_url": "https://api.github.com/users/LegionMammal978/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/LegionMammal978/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": true, "url": "https://api.github.com/repos/LegionMammal978/rust", "forks_url": "https://api.github.com/repos/LegionMammal978/rust/forks", "keys_url": "https://api.github.com/repos/LegionMammal978/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/LegionMammal978/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/LegionMammal978/rust/teams", "hooks_url": "https://api.github.com/repos/LegionMammal978/rust/hooks", "issue_events_url": "https://api.github.com/repos/LegionMammal978/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/LegionMammal978/rust/events", "assignees_url": "https://api.github.com/repos/LegionMammal978/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/LegionMammal978/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/LegionMammal978/rust/tags", "blobs_url": "https://api.github.com/repos/LegionMammal978/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/LegionMammal978/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/LegionMammal978/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/LegionMammal978/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/LegionMammal978/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/LegionMammal978/rust/languages", "stargazers_url": "https://api.github.com/repos/LegionMammal978/rust/stargazers", "contributors_url": "https://api.github.com/repos/LegionMammal978/rust/contributors", "subscribers_url": "https://api.github.com/repos/LegionMammal978/rust/subscribers", "subscription_url": "https://api.github.com/repos/LegionMammal978/rust/subscription", "commits_url": "https://api.github.com/repos/LegionMammal978/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/LegionMammal978/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/LegionMammal978/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/LegionMammal978/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/LegionMammal978/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/LegionMammal978/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/LegionMammal978/rust/merges", "archive_url": "https://api.github.com/repos/LegionMammal978/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/LegionMammal978/rust/downloads", "issues_url": "https://api.github.com/repos/LegionMammal978/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/LegionMammal978/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/LegionMammal978/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/LegionMammal978/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/LegionMammal978/rust/labels{/name}", "releases_url": "https://api.github.com/repos/LegionMammal978/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/LegionMammal978/rust/deployments", "created_at": "2021-12-13T21:48:01Z", "updated_at": "2022-01-09T13:43:12Z", "pushed_at": "2023-05-15T18:31:07Z", "git_url": "git://github.com/LegionMammal978/rust.git", "ssh_url": "git@github.com:LegionMammal978/rust.git", "clone_url": "https://github.com/LegionMammal978/rust.git", "svn_url": "https://github.com/LegionMammal978/rust", "homepage": "https://www.rust-lang.org", "size": 918897, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "999ac5f7770bff68bd65f490990d32c3ec1faaa6", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-20T08:05:17Z", "pushed_at": "2023-06-20T09:28:37Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 930869, "stargazers_count": 82767, "watchers_count": 82767, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10964, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9624, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10964, "open_issues": 9624, "watchers": 82767, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/105096"}, "html": {"href": "https://github.com/rust-lang/rust/pull/105096"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/105096"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/105096/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/105096/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/105096/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/57e12f970cd97c65a7d1ce97989a778ffa102584"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "comments": 9, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 3, "deletions": 3, "changed_files": 1}