{"url": "https://api.github.com/repos/rust-lang/rust/pulls/89213", "id": 742033574, "node_id": "PR_kwDOAAsO6M4sOoim", "html_url": "https://github.com/rust-lang/rust/pull/89213", "diff_url": "https://github.com/rust-lang/rust/pull/89213.diff", "patch_url": "https://github.com/rust-lang/rust/pull/89213.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/89213", "number": 89213, "state": "closed", "locked": false, "title": "WIP: Avoid storing captured upvars in generators twice if possible", "user": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "body": "Hi!\r\nI tried to address the first problem described in https://github.com/rust-lang/rust/issues/62958, but I'm repeatedly running into dead-ends. So I wanted to share my code to ask if what I'm doing makes any sense and if not, what other directions could I try. I'll try to describe the current state, both to confirm if I understand it correctly and possibly to get potential reviewers to remember these things quicker.\r\n\r\n## Description of the current state\r\nUpvars in generators (captured variables and parameters of `async` functions) are currently stored at the start of the generator struct. At the beginning of the generator function code (in the first basic block), these upvars are stored into locals. If these locals are accessed across an `await` point, they will be included inside the generator layout as new fields, even though they are already stored at the very beginning of the generator struct.\r\n\r\nFor example, this generator has `12` bytes (4 bytes upvar `a`, 4 bytes `Ready` future + discriminant + padding, 4 bytes local referencing `a`), even though it could only have `8`, because the `a` parameter could reuse the same memory slot.\r\n```rust\r\nasync fn wait(a: u32) {\r\n    std::future::ready(()).await;\r\n    drop(a);\r\n}\r\n```\r\nEven though this example may look contrived, this situation probably comes up quite often, since `Drop` arguments/upvars will be implicitly dropped at the end of the generator, which causes them to be duplicated even though it seems like they are not accessed at all:\r\n```rust\r\nasync fn wait(a: HasDrop) {\r\n    std::future::ready(()).await;\r\n} // Here `a` is dropped implicitly, therefore it's included twice in the generator struct\r\n```\r\n\r\nThe current layout of generators looks like this:\r\n```\r\nUpvar #0\r\nUpvar #1\r\n...\r\nDiscriminant\r\nPromoted field #0\r\nPromoted field #1\r\n...\r\nVariants with overlapped fields\r\n```\r\nWhere promoted fields are locals that cannot be overlapped. The upvars and discriminant are stored as fields on the generator struct, while the promoted fields are just referenced by the individual variants.\r\n\r\n## Solution\r\nI tried to take the upvar locals, and store them into the unresumed variant of the generator. That by itself seems like the right thing to do. However, then I had to modify the generator layout code and that's where issues started to crop up.\r\n\r\n### Layout modification 1\r\nFirst I tried to generate the layout for the unresumed variant in such a way that it's fields (containing saved upvar locals) will point to the beginning of the generator struct. So with e.g. two 1-byte upvars, the layout looked like this:\r\n```\r\nfields: [\r\noffset: 0, // first upvar\r\noffset: 1, // second upvar\r\noffset: 2 // discriminant\r\n],\r\nvariants: [\r\n   variant 0 (unresumed): {\r\n       fields: [\r\n          offset: 0, // local referencing first upvar\r\n          offset: 1 // local referencing second upvar\r\n      ]\r\n   }\r\n]\r\n```\r\nThis actually worked for simple cases, but when running more complicated tests form the `ui` suite, the codegen was ending with errors. It seemed like the offsets were referencing some invalid fields, the sizes of the individual upvar fields and the field offsets didn't match up, it was a mess. It looked like I broke some invariants in the layout code (or I had a different bug there).\r\n\r\nQuestion: Is this layout correct? Is it OK that some memory slots (the upvars) are both included in the fields of the struct AND they are also referenced by a variant, which itself is `StructKind::Prefixed` by the size of the upvars and the discriminant (which means that the variant touches memory slots \"outside\" of its range). Maybe the unresumed variant could somehow start at the beginning of the struct (conceptually)?\r\n\r\nAnyway, I thought that this approach is not correct, so I tried something else. This version can be found [here](https://github.com/Kobzol/rust/commit/7fa37a3f0ceb5802a913f5f367b427636c4c731f).\r\n\r\n## Layout modification 2\r\nIn my second attempt, to avoid the \"overlap\" of the upvar references from the above approach, I tried to remove the upvars from the generator struct fields. Therefore the generator struct layout will only have the discriminant in its fields. This is a rather disruptive change, because I had to find all code that creates generator upvar accesses and change it so that it accesses the unresumed variant fields instead of the fields of the generator itself.\r\n\r\nI'm not sure if this is the correct approach though. And after changing all of the places that I have found, I began to run into MIR cycle issues. At this point I realized that it would be better to open a PR than to try other \"random\" approaches without knowing if it's the correct thing to do.\r\n\r\nThe current code in this PR contains the second approach which turns all generator fields accesses into unresumed variant field accesses. As you can see, it's heavily WIP, I just wanted to ask if (and how) should I continue or if this doesn't lead anywhere :) I'll be glad for any feedback.\r\n\r\n<details>\r\n<summary>MIR cycle error that I'm getting</summary>\r\n\r\n```\r\nerror[E0391]: cycle detected when borrow-checking `wait::{closure#0}`\r\n  --> src/main.rs:18:23\r\n   |\r\n18 |   async fn wait(a: u32) {\r\n   |  _______________________^\r\n19 | |     std::future::ready(1).await;\r\n20 | |     drop(a);\r\n21 | | }\r\n   | |_^\r\n   |\r\nnote: ...which requires optimizing MIR for `wait::{closure#0}`...\r\n  --> src/main.rs:18:23\r\n   |\r\n18 |   async fn wait(a: u32) {\r\n   |  _______________________^\r\n19 | |     std::future::ready(1).await;\r\n20 | |     drop(a);\r\n21 | | }\r\n   | |_^\r\nnote: ...which requires elaborating drops for `wait::{closure#0}`...\r\n  --> src/main.rs:18:23\r\n   |\r\n18 |   async fn wait(a: u32) {\r\n   |  _______________________^\r\n19 | |     std::future::ready(1).await;\r\n20 | |     drop(a);\r\n21 | | }\r\n   | |_^\r\n   = note: ...which again requires borrow-checking `wait::{closure#0}`, completing the cycle\r\nnote: cycle used when borrow-checking `wait`\r\n  --> src/main.rs:18:1\r\n   |\r\n18 | async fn wait(a: u32) {\r\n   | ^^^^^^^^^^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0391`.\r\nwarning: `test-crate` (bin \"test-crate\") generated 1 warning\r\nerror: could not compile `test-crate` due to previous error; 1 warning emitted\r\n```\r\n</details>\r\n\r\nRelated issue: https://github.com/rust-lang/rust/issues/62958\r\n\r\nr? @tmandry", "created_at": "2021-09-24T08:54:03Z", "updated_at": "2022-07-08T15:08:05Z", "closed_at": "2022-07-08T15:07:44Z", "merged_at": null, "merge_commit_sha": "aed817a208d7dda29f812f513ab1693ba766695c", "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 627350354, "node_id": "MDU6TGFiZWw2MjczNTAzNTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-inactive", "name": "S-inactive", "color": "d3dddd", "default": false, "description": "Status: Inactive and waiting on the author. This is often applied to closed PRs."}], "milestone": null, "draft": true, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/89213/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/89213/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89213/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/0af63de5fbefa5bf15a6f5a1fc38f29f2b1144c7", "head": {"label": "Kobzol:generator-parameter-overlap", "ref": "generator-parameter-overlap", "sha": "0af63de5fbefa5bf15a6f5a1fc38f29f2b1144c7", "user": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "repo": {"id": 290505452, "node_id": "MDEwOlJlcG9zaXRvcnkyOTA1MDU0NTI=", "name": "rust", "full_name": "Kobzol/rust", "private": false, "owner": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/Kobzol/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": true, "url": "https://api.github.com/repos/Kobzol/rust", "forks_url": "https://api.github.com/repos/Kobzol/rust/forks", "keys_url": "https://api.github.com/repos/Kobzol/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Kobzol/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Kobzol/rust/teams", "hooks_url": "https://api.github.com/repos/Kobzol/rust/hooks", "issue_events_url": "https://api.github.com/repos/Kobzol/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/Kobzol/rust/events", "assignees_url": "https://api.github.com/repos/Kobzol/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/Kobzol/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/Kobzol/rust/tags", "blobs_url": "https://api.github.com/repos/Kobzol/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Kobzol/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Kobzol/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Kobzol/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Kobzol/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/Kobzol/rust/languages", "stargazers_url": "https://api.github.com/repos/Kobzol/rust/stargazers", "contributors_url": "https://api.github.com/repos/Kobzol/rust/contributors", "subscribers_url": "https://api.github.com/repos/Kobzol/rust/subscribers", "subscription_url": "https://api.github.com/repos/Kobzol/rust/subscription", "commits_url": "https://api.github.com/repos/Kobzol/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Kobzol/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Kobzol/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Kobzol/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Kobzol/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/Kobzol/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Kobzol/rust/merges", "archive_url": "https://api.github.com/repos/Kobzol/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Kobzol/rust/downloads", "issues_url": "https://api.github.com/repos/Kobzol/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/Kobzol/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/Kobzol/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/Kobzol/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Kobzol/rust/labels{/name}", "releases_url": "https://api.github.com/repos/Kobzol/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/Kobzol/rust/deployments", "created_at": "2020-08-26T13:33:20Z", "updated_at": "2022-02-10T16:03:42Z", "pushed_at": "2023-06-19T08:16:10Z", "git_url": "git://github.com/Kobzol/rust.git", "ssh_url": "git@github.com:Kobzol/rust.git", "clone_url": "https://github.com/Kobzol/rust.git", "svn_url": "https://github.com/Kobzol/rust", "homepage": "https://www.rust-lang.org", "size": 915736, "stargazers_count": 1, "watchers_count": 1, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 1, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 1, "watchers": 1, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "17dfae79bbc3dabe1427073086acf7f7bd45148c", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T09:29:46Z", "pushed_at": "2023-06-19T09:00:30Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 919641, "stargazers_count": 82742, "watchers_count": 82742, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10954, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9628, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10954, "open_issues": 9628, "watchers": 82742, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/89213"}, "html": {"href": "https://github.com/rust-lang/rust/pull/89213"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/89213"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/89213/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/89213/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/89213/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/0af63de5fbefa5bf15a6f5a1fc38f29f2b1144c7"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 21, "review_comments": 9, "maintainer_can_modify": false, "commits": 2, "additions": 105, "deletions": 7, "changed_files": 1}