{"url": "https://api.github.com/repos/rust-lang/rust/pulls/66113", "id": 336697944, "node_id": "MDExOlB1bGxSZXF1ZXN0MzM2Njk3OTQ0", "html_url": "https://github.com/rust-lang/rust/pull/66113", "diff_url": "https://github.com/rust-lang/rust/pull/66113.diff", "patch_url": "https://github.com/rust-lang/rust/pull/66113.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/66113", "number": 66113, "state": "closed", "locked": false, "title": "[WIP] Make a table of trait object type_ids and vtable pointers available to programs", "user": {"login": "alecmocatta", "id": 1136246, "node_id": "MDQ6VXNlcjExMzYyNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1136246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecmocatta", "html_url": "https://github.com/alecmocatta", "followers_url": "https://api.github.com/users/alecmocatta/followers", "following_url": "https://api.github.com/users/alecmocatta/following{/other_user}", "gists_url": "https://api.github.com/users/alecmocatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecmocatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecmocatta/subscriptions", "organizations_url": "https://api.github.com/users/alecmocatta/orgs", "repos_url": "https://api.github.com/users/alecmocatta/repos", "events_url": "https://api.github.com/users/alecmocatta/events{/privacy}", "received_events_url": "https://api.github.com/users/alecmocatta/received_events", "type": "User", "site_admin": false}, "body": "This PR aims to enable safe and sound serialization and deserialization of trait objects on tier 1 platforms.\r\n\r\nSome context: The ability to serialize and deserialize trait objects, or similarly closures, has been requested by various members of the community for some time: https://github.com/rust-lang/rfcs/issues/668 https://github.com/rust-lang/rfcs/issues/1022. The two main use cases are IPC \u2013 for example sending trait objects between forks of a process; and distributed computing \u2013 for example sending trait objects to processes distributed across a cluster. While some message kinds can be wrapped in an enum instead of a trait object, this can be inconvenient, and isn't viable for un-nameable types like closures. The goal of this PR is to lay the groundwork for safe and sound serialization and deserialization of trait objects in a low-impact manner that allows user crates to safely experiment and iterate on this functionality.\r\n\r\nDeserializing trait objects is possible today, but only in a rather hairy manner. The crate [`serde_traitobject`](https://github.com/alecmocatta/serde_traitobject) for example works and sees usage, but it has two unsoundness vectors:\r\n\r\n* a malicious MITM (who could forge ostensibly-valid but unsound data); and\r\n* multiple vtable segments in a single binary that are loaded at inconsistent relative addresses.\r\n\r\nThe latter requires a very odd linker script and is unlikely to occur in practise; the former is concerning and rules out many use cases. It is however sufficient for other use cases \u2013 in fact a really cool one using it was published recently: [`native_spark`](https://github.com/rajasekarv/native_spark).\r\n\r\nThe approach I've taken in this PR is to create essentially a global array with [appending linkage](https://llvm.org/docs/LangRef.html#linkage-appending) that stores structs comprising the [`type_id`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/struct.TyCtxt.html#method.type_id_hash) of the trait object and a pointer to the vtable, for all materialized vtables. Unfortunately appending linkage isn't really implemented by LLVM yet besides for a couple of special variables, so I've used the old-school approach of emitting static variables into an [orphan section](https://sourceware.org/binutils/docs/ld/Orphan-Sections.html). The start and end of this section can be reliably retreived by user programs with help from the linker.\r\n\r\nThis array increases the size of libraries by a small amount; for example build/x86_64-apple-darwin/stage2 by ~1.3MiB i.e. ~0.2%. Thanks to `--gc-sections` on Linux and `/OPT:REF` on Windows, it's removed entirely from binaries that don't use it on those platforms. macOS's `-dead_strip` works a little differently, and the best solution I've found adds 16 bytes per used vtable to the resulting binary. This increases the size of binaries by a small amount: hello world grows by 76 bytes i.e. ~0.03%. With a bit more work I think this could probably be made zero-cost similar to Linux and Windows. Android and iOS behave the same as Linux and macOS, and on other platforms this PR is a no-op.\r\n\r\nThis array allows programs to retrieve a list of all materializable vtable pointers for a given `dyn Trait`. From this, a candidate concrete type for serialization can be selected and safely invoked. Here's a rough sketch of how serialization and deserialization can work:\r\n\r\n```rust\r\nuse std::raw::TraitObject;\r\nfn vtables() { /* see src/test/ui/vtables/vtable-list.rs */ }\r\n\r\n// Process A\r\nlet send: Box<T> = send;\r\nlet send: Box<dyn Trait> = send;\r\nlet type_tag = send.type_tag();\r\ntype_tag.serialize();\r\ntrait_object.serialize();\r\n\r\n// Process B\r\nlet trait_type_id = type_id::<dyn Trait>();\r\nlet type_tag = deserialize();\r\nlet trait_object = vtables().iter().find_map(|record| {\r\n    if record.type_id != trait_type_id {\r\n        return None;\r\n    }\r\n    let trait_object = TraitObject { data: ptr::dangling(), vtable: record.vtable };\r\n    let trait_object = transmute::<TraitObject, *const dyn Trait>();\r\n    (trait_object.type_tag() == type_tag).then(trait_object)\r\n}).unwrap();\r\nlet send: Box<dyn Trait> = trait_object.deserialize_erased();\r\n```\r\n\r\n`fn type_tag()` here could be `type_id()`, which would work for unnameable types like closures but doesn't work across different builds where the `type_id` has changed due to potentially unrelated changes. It could be provided explicitly by the program (i.e. like [`typetag`](https://github.com/dtolnay/typetag)), which would not work for unnameable types but would work across different builds. It could also be a combination of both \u2013 explicit tags where provided, falling back to `type_id`.\r\n\r\nI believe this is a step in the right direction to enabling sound trait object serialization and deserialization. It resolves the aforementioned security issue that exists in applications being used today, it enables user crates to safely iterate on the user interface for trait object deserialization, and it can hopefully co-evolve with the unsafe code guidelines and other RFCs like https://github.com/rust-lang/rfcs/pull/2580 to increase the strength of its guarantees. \r\n\r\nAn upside of this PR is safe and sound serialization and deserialization of closures in conjunction with [`serde_closure`](https://github.com/alecmocatta/serde_closure) - which is a proc macro that extracts captured variables from the AST and puts them in a struct that implements Serialize, Deserialize, Debug and other convenient traits. This is the major use case for distributed computing frameworks like [`constellation`](https://github.com/constellation-rs/constellation) and [`native_spark`](https://github.com/rajasekarv/native_spark).\r\n\r\n---\r\n\r\nI'd like to add a test that checks the array is removed by the linker on Linux and Windows if it's not used, but I'm not familiar with how to do this?\r\n\r\nLet me know how best to feature gate it. Or if it perhaps doesn't need it \u2013 doing anything useful with the array is already unstable (i.e. transmuting `dyn Trait` <-> `std::raw::TraitObject` to get/set the vtable). Per the RFC guidelines as this should be \"invisible to users-of-rust\" I've gone ahead with this PR \u2013 let me know if it does indeed need an RFC. And lastly it's probably worth confirming it is indeed \"invisible to users-of-rust\" with a crater and/or perf run?", "created_at": "2019-11-05T10:12:36Z", "updated_at": "2020-02-28T01:31:42Z", "closed_at": "2020-02-28T01:31:42Z", "merged_at": null, "merge_commit_sha": "796de0c026c186b31714368b3bbc84df251323ef", "assignee": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 178802147, "node_id": "MDU6TGFiZWwxNzg4MDIxNDc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-needs-decision", "name": "I-needs-decision", "color": "e11d21", "default": false, "description": "Issues in need of decision."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 762300676, "node_id": "MDU6TGFiZWw3NjIzMDA2NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-blocked", "name": "S-blocked", "color": "d3dddd", "default": false, "description": "Status: marked as blocked \u274c on something else such as an RFC or other implementation work."}], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/66113/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/66113/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66113/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/0dd29cfed23a9356367dfa223616a8282f06054a", "head": {"label": "alecmocatta:vtables", "ref": "vtables", "sha": "0dd29cfed23a9356367dfa223616a8282f06054a", "user": {"login": "alecmocatta", "id": 1136246, "node_id": "MDQ6VXNlcjExMzYyNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1136246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecmocatta", "html_url": "https://github.com/alecmocatta", "followers_url": "https://api.github.com/users/alecmocatta/followers", "following_url": "https://api.github.com/users/alecmocatta/following{/other_user}", "gists_url": "https://api.github.com/users/alecmocatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecmocatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecmocatta/subscriptions", "organizations_url": "https://api.github.com/users/alecmocatta/orgs", "repos_url": "https://api.github.com/users/alecmocatta/repos", "events_url": "https://api.github.com/users/alecmocatta/events{/privacy}", "received_events_url": "https://api.github.com/users/alecmocatta/received_events", "type": "User", "site_admin": false}, "repo": {"id": 142081040, "node_id": "MDEwOlJlcG9zaXRvcnkxNDIwODEwNDA=", "name": "rust", "full_name": "alecmocatta/rust", "private": false, "owner": {"login": "alecmocatta", "id": 1136246, "node_id": "MDQ6VXNlcjExMzYyNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1136246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alecmocatta", "html_url": "https://github.com/alecmocatta", "followers_url": "https://api.github.com/users/alecmocatta/followers", "following_url": "https://api.github.com/users/alecmocatta/following{/other_user}", "gists_url": "https://api.github.com/users/alecmocatta/gists{/gist_id}", "starred_url": "https://api.github.com/users/alecmocatta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alecmocatta/subscriptions", "organizations_url": "https://api.github.com/users/alecmocatta/orgs", "repos_url": "https://api.github.com/users/alecmocatta/repos", "events_url": "https://api.github.com/users/alecmocatta/events{/privacy}", "received_events_url": "https://api.github.com/users/alecmocatta/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/alecmocatta/rust", "description": "A safe, concurrent, practical language.", "fork": true, "url": "https://api.github.com/repos/alecmocatta/rust", "forks_url": "https://api.github.com/repos/alecmocatta/rust/forks", "keys_url": "https://api.github.com/repos/alecmocatta/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/alecmocatta/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/alecmocatta/rust/teams", "hooks_url": "https://api.github.com/repos/alecmocatta/rust/hooks", "issue_events_url": "https://api.github.com/repos/alecmocatta/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/alecmocatta/rust/events", "assignees_url": "https://api.github.com/repos/alecmocatta/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/alecmocatta/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/alecmocatta/rust/tags", "blobs_url": "https://api.github.com/repos/alecmocatta/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/alecmocatta/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/alecmocatta/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/alecmocatta/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/alecmocatta/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/alecmocatta/rust/languages", "stargazers_url": "https://api.github.com/repos/alecmocatta/rust/stargazers", "contributors_url": "https://api.github.com/repos/alecmocatta/rust/contributors", "subscribers_url": "https://api.github.com/repos/alecmocatta/rust/subscribers", "subscription_url": "https://api.github.com/repos/alecmocatta/rust/subscription", "commits_url": "https://api.github.com/repos/alecmocatta/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/alecmocatta/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/alecmocatta/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/alecmocatta/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/alecmocatta/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/alecmocatta/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/alecmocatta/rust/merges", "archive_url": "https://api.github.com/repos/alecmocatta/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/alecmocatta/rust/downloads", "issues_url": "https://api.github.com/repos/alecmocatta/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/alecmocatta/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/alecmocatta/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/alecmocatta/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/alecmocatta/rust/labels{/name}", "releases_url": "https://api.github.com/repos/alecmocatta/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/alecmocatta/rust/deployments", "created_at": "2018-07-23T23:47:52Z", "updated_at": "2019-11-03T19:53:52Z", "pushed_at": "2023-06-13T15:52:03Z", "git_url": "git://github.com/alecmocatta/rust.git", "ssh_url": "git@github.com:alecmocatta/rust.git", "clone_url": "https://github.com/alecmocatta/rust.git", "svn_url": "https://github.com/alecmocatta/rust", "homepage": "https://www.rust-lang.org", "size": 883873, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "2e4da3caadc61fab2cfcffebcbfdd72fbcee62b7", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T22:34:36Z", "pushed_at": "2023-06-19T23:52:14Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 920577, "stargazers_count": 82755, "watchers_count": 82755, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10957, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9625, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10957, "open_issues": 9625, "watchers": 82755, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/66113"}, "html": {"href": "https://github.com/rust-lang/rust/pull/66113"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/66113"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/66113/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/66113/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/66113/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/0dd29cfed23a9356367dfa223616a8282f06054a"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 14, "review_comments": 0, "maintainer_can_modify": false, "commits": 4, "additions": 194, "deletions": 4, "changed_files": 10}