{"url": "https://api.github.com/repos/rust-lang/rust/pulls/87032", "id": 687219073, "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3MjE5MDcz", "html_url": "https://github.com/rust-lang/rust/pull/87032", "diff_url": "https://github.com/rust-lang/rust/pull/87032.diff", "patch_url": "https://github.com/rust-lang/rust/pull/87032.patch", "issue_url": "https://api.github.com/repos/rust-lang/rust/issues/87032", "number": 87032, "state": "closed", "locked": false, "title": "Defuse the bomb that is `mem::uninitialized`", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "body": "EDIT: I think for now it makes sense to withdraw this PR while we wait for #66151 to explore tightening intrinsics::assert_zero_valid. I could also imagine an even better version of this PR that uses some value other than 0 (amusingly, 1 might be the most permissive/safe value?). Furthermore, while I still think mem::uninitialized deserves to be as discouraged as we can possibly make it, I am slightly less dim on its existence now that I understand the model of uninitialized memory better and that it actually is possible to use this function safely in some contrived circumstances (let x: () = mem::uninitialized();), which means that it isn't completely ridiculous to expect a hypothetical Rust specification to specify its behavior.\r\n\r\nOriginal below:\r\n\r\n---\r\n\r\nThe deficiencies with `mem::uninitialized` have long been [well-known](https://github.com/rust-lang/rfcs/pull/1892). It has been long since replaced by `mem::MaybeUninit`, and was officially deprecated in November 2019.\r\n\r\nThe problem with `mem::unitialized` is that, as originally conceived, it is fundamentally incompatible with Rust's stance on memory safety. The API as of Rust 1.0 presented a promise that this function *could* be safe; however, that promise could not be kept. There is no safe way for something with this API to safely provide uninitialized memory.\r\n\r\nWe can see this contradiction reflected in the current implementation: the return value is simply `MaybeUninit::uninit().assume_init()`. And yet if we look at the `MaybeUninit` docs, we see the following listed as a misuse of the API:\r\n\r\n> `let x: i32 = unsafe { MaybeUninit::uninit().assume_init() }; // undefined behavior!`\r\n\r\nIt isn't safe to use uninitialized memory like this, and yet the API of `mem::uninitialized` makes it unavoidable.\r\n\r\nWhen a function is marked `unsafe` in Rust, that does *not* mean that that function is fundamentally memory-unsafe; it means that the caller must manually uphold certain invariants in order to ensure memory safety. This is why all `unsafe` functions in libstd are supposed to have a \"Safety\" section in their documentation to inform the user how the function may be safely used. And yet for `mem::uninitialized` there is no \"Safety\" section, because, as implemented, the caller-upheld invariant is essentially this: *the return value of this function must never be used*.\r\n\r\nSo at best this function is \"just\" useless. And when it is not just useless, it is immediate undefined behavior.\r\n\r\nRust's stability guarantee permits breakage in the event of unsoundness. In fact, a year prior to the deprecation of `mem::uninitialized`, a check was added that guarantees that the function will panic at runtime when used with many types that are known to have uninhabited values. This caused some breakage in the wild, and yet it was not sufficient to totally solve the issue (self-evidently, as otherwise `MaybeUninit` would not have later been stabilized and this function would not have been deprecated).\r\n\r\nHowever, although it is arguably within Rust's right to outright remove this function from the stdlib for the sake of soundness, it is possible to be more conservative. Since we must choose between being unsafe and being safe-but-useless, this PR chooses the latter.\r\n\r\nThis PR replaces the internals of `mem::uninitialized` with a call to `mem::zeroed`. Semantically this is legal: if your code was written to expect any imaginable value, then it must work with any *specific* value ([relevant XKCD](https://xkcd.com/221/)). Philosophically this is also defensible: although this new implementation not strictly \"uninitialized\", the alternative is undefined behavior; since undefined behavior allows any behavior at all, up to and including nasal demons, an interpretation of undefined behavior wherein your uninitialized memory is replaced with initialized memory is legal.\r\n\r\nThis PR has three chief advantages:\r\n\r\n1. Any program using `mem::uninitialized` that has not been updated since the introduction of `MaybeUninit` is no longer all-but guaranteed to exhibit undefined behavior.\r\n2. Because we can safely remove the guaranteed-to-panic-on-types-with-uninhabited-values check, this means that legacy libraries that stopped working because of that check may now be usable once more. (`mem::zeroed` has its own, more narrowly-scoped check that rejects a subset of the types of the current check.)\r\n3. In a hypothetical future where Rust has a language specification, this interpretation of the contract of this function (transitioning from \"this returns an uninitialized value\" to \"this returns an unspecified value\") is possible to reasonably specify (even if it's not guaranteed to ever be useful).\r\n\r\nThis PR does **not** remove the `unsafe` marker on this function, nor does it reverse its deprecation, nor does it suggest that either of those ever be done. We're just building the sarcophagus on Chernobyl here.\r\n\r\n[This was discussed in #libs on Zulip](https://rust-lang.zulipchat.com/#narrow/stream/219381-t-libs/topic/disarming.20mem.3A.3Auninitialized/near/244030355), and there were no outright objections (although some desired to just see this removed from std entirely).", "created_at": "2021-07-10T18:09:59Z", "updated_at": "2021-07-31T22:22:25Z", "closed_at": "2021-07-31T20:47:21Z", "merged_at": null, "merge_commit_sha": "9c0fe7e9bc91ffd29e9f199a329deaa73e162fce", "assignee": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 583436937, "node_id": "MDU6TGFiZWw1ODM0MzY5Mzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-author", "name": "S-waiting-on-author", "color": "d3dddd", "default": false, "description": "Status: This is awaiting some action (such as code changes or more information) from the author."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/rust-lang/rust/pulls/87032/commits", "review_comments_url": "https://api.github.com/repos/rust-lang/rust/pulls/87032/comments", "review_comment_url": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87032/comments", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/a2045c47cd32709f28b53da5168d696d5ea7f40a", "head": {"label": "bstrie:zeroinit", "ref": "zeroinit", "sha": "a2045c47cd32709f28b53da5168d696d5ea7f40a", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "repo": {"id": 4433426, "node_id": "MDEwOlJlcG9zaXRvcnk0NDMzNDI2", "name": "rust", "full_name": "bstrie/rust", "private": false, "owner": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/bstrie/rust", "description": "a safe, concurrent, practical language", "fork": true, "url": "https://api.github.com/repos/bstrie/rust", "forks_url": "https://api.github.com/repos/bstrie/rust/forks", "keys_url": "https://api.github.com/repos/bstrie/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/bstrie/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/bstrie/rust/teams", "hooks_url": "https://api.github.com/repos/bstrie/rust/hooks", "issue_events_url": "https://api.github.com/repos/bstrie/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/bstrie/rust/events", "assignees_url": "https://api.github.com/repos/bstrie/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/bstrie/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/bstrie/rust/tags", "blobs_url": "https://api.github.com/repos/bstrie/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/bstrie/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/bstrie/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/bstrie/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/bstrie/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/bstrie/rust/languages", "stargazers_url": "https://api.github.com/repos/bstrie/rust/stargazers", "contributors_url": "https://api.github.com/repos/bstrie/rust/contributors", "subscribers_url": "https://api.github.com/repos/bstrie/rust/subscribers", "subscription_url": "https://api.github.com/repos/bstrie/rust/subscription", "commits_url": "https://api.github.com/repos/bstrie/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/bstrie/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/bstrie/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/bstrie/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/bstrie/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/bstrie/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/bstrie/rust/merges", "archive_url": "https://api.github.com/repos/bstrie/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/bstrie/rust/downloads", "issues_url": "https://api.github.com/repos/bstrie/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/bstrie/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/bstrie/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/bstrie/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/bstrie/rust/labels{/name}", "releases_url": "https://api.github.com/repos/bstrie/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/bstrie/rust/deployments", "created_at": "2012-05-24T13:59:22Z", "updated_at": "2014-02-15T20:01:25Z", "pushed_at": "2022-07-27T14:30:16Z", "git_url": "git://github.com/bstrie/rust.git", "ssh_url": "git@github.com:bstrie/rust.git", "clone_url": "https://github.com/bstrie/rust.git", "svn_url": "https://github.com/bstrie/rust", "homepage": "http://www.rust-lang.org", "size": 914275, "stargazers_count": 0, "watchers_count": 0, "language": "Rust", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "rust-lang:master", "ref": "master", "sha": "3a24abd22fd25c836d8b4d75ff46c833f9c3934c", "user": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 724712, "node_id": "MDEwOlJlcG9zaXRvcnk3MjQ3MTI=", "name": "rust", "full_name": "rust-lang/rust", "private": false, "owner": {"login": "rust-lang", "id": 5430905, "node_id": "MDEyOk9yZ2FuaXphdGlvbjU0MzA5MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5430905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-lang", "html_url": "https://github.com/rust-lang", "followers_url": "https://api.github.com/users/rust-lang/followers", "following_url": "https://api.github.com/users/rust-lang/following{/other_user}", "gists_url": "https://api.github.com/users/rust-lang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-lang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-lang/subscriptions", "organizations_url": "https://api.github.com/users/rust-lang/orgs", "repos_url": "https://api.github.com/users/rust-lang/repos", "events_url": "https://api.github.com/users/rust-lang/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-lang/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/rust-lang/rust", "description": "Empowering everyone to build reliable and efficient software.", "fork": false, "url": "https://api.github.com/repos/rust-lang/rust", "forks_url": "https://api.github.com/repos/rust-lang/rust/forks", "keys_url": "https://api.github.com/repos/rust-lang/rust/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/rust-lang/rust/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/rust-lang/rust/teams", "hooks_url": "https://api.github.com/repos/rust-lang/rust/hooks", "issue_events_url": "https://api.github.com/repos/rust-lang/rust/issues/events{/number}", "events_url": "https://api.github.com/repos/rust-lang/rust/events", "assignees_url": "https://api.github.com/repos/rust-lang/rust/assignees{/user}", "branches_url": "https://api.github.com/repos/rust-lang/rust/branches{/branch}", "tags_url": "https://api.github.com/repos/rust-lang/rust/tags", "blobs_url": "https://api.github.com/repos/rust-lang/rust/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/rust-lang/rust/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/rust-lang/rust/git/refs{/sha}", "trees_url": "https://api.github.com/repos/rust-lang/rust/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/rust-lang/rust/statuses/{sha}", "languages_url": "https://api.github.com/repos/rust-lang/rust/languages", "stargazers_url": "https://api.github.com/repos/rust-lang/rust/stargazers", "contributors_url": "https://api.github.com/repos/rust-lang/rust/contributors", "subscribers_url": "https://api.github.com/repos/rust-lang/rust/subscribers", "subscription_url": "https://api.github.com/repos/rust-lang/rust/subscription", "commits_url": "https://api.github.com/repos/rust-lang/rust/commits{/sha}", "git_commits_url": "https://api.github.com/repos/rust-lang/rust/git/commits{/sha}", "comments_url": "https://api.github.com/repos/rust-lang/rust/comments{/number}", "issue_comment_url": "https://api.github.com/repos/rust-lang/rust/issues/comments{/number}", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/{+path}", "compare_url": "https://api.github.com/repos/rust-lang/rust/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/rust-lang/rust/merges", "archive_url": "https://api.github.com/repos/rust-lang/rust/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/rust-lang/rust/downloads", "issues_url": "https://api.github.com/repos/rust-lang/rust/issues{/number}", "pulls_url": "https://api.github.com/repos/rust-lang/rust/pulls{/number}", "milestones_url": "https://api.github.com/repos/rust-lang/rust/milestones{/number}", "notifications_url": "https://api.github.com/repos/rust-lang/rust/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/rust-lang/rust/labels{/name}", "releases_url": "https://api.github.com/repos/rust-lang/rust/releases{/id}", "deployments_url": "https://api.github.com/repos/rust-lang/rust/deployments", "created_at": "2010-06-16T20:39:03Z", "updated_at": "2023-06-19T07:04:40Z", "pushed_at": "2023-06-19T07:31:20Z", "git_url": "git://github.com/rust-lang/rust.git", "ssh_url": "git@github.com:rust-lang/rust.git", "clone_url": "https://github.com/rust-lang/rust.git", "svn_url": "https://github.com/rust-lang/rust", "homepage": "https://www.rust-lang.org", "size": 919635, "stargazers_count": 82736, "watchers_count": 82736, "language": "Rust", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": false, "forks_count": 10954, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 9627, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "hacktoberfest", "language", "rust"], "visibility": "public", "forks": 10954, "open_issues": 9627, "watchers": 82736, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/87032"}, "html": {"href": "https://github.com/rust-lang/rust/pull/87032"}, "issue": {"href": "https://api.github.com/repos/rust-lang/rust/issues/87032"}, "comments": {"href": "https://api.github.com/repos/rust-lang/rust/issues/87032/comments"}, "review_comments": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/87032/comments"}, "review_comment": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/rust-lang/rust/pulls/87032/commits"}, "statuses": {"href": "https://api.github.com/repos/rust-lang/rust/statuses/a2045c47cd32709f28b53da5168d696d5ea7f40a"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 41, "review_comments": 22, "maintainer_can_modify": false, "commits": 1, "additions": 43, "deletions": 27, "changed_files": 3}