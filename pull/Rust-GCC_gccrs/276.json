{"url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/276", "id": 591754685, "node_id": "MDExOlB1bGxSZXF1ZXN0NTkxNzU0Njg1", "html_url": "https://github.com/Rust-GCC/gccrs/pull/276", "diff_url": "https://github.com/Rust-GCC/gccrs/pull/276.diff", "patch_url": "https://github.com/Rust-GCC/gccrs/pull/276.patch", "issue_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/276", "number": 276, "state": "closed", "locked": false, "title": "Proof of Concept: using s-expression for AST dump", "user": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "body": "This is a proof-of-concept implementation for dumping AST into s-expression. I chose s-expression for demonstration because it's simple enough to write a serialization procedure for it by hand. If we end up using JSON we might need to pull in additional dependency.\r\n\r\nTwo new functions are added:\r\n* `to_sexp()` converts an object to a s-expression string. It's a overloaded template function, similar to `std::to_string()`.\r\n* `sexp()` creates a new compound s-expression containing some sub-expressions(which is to say, wrap them with a pair of parenthesis). `sexp()` accepts an arbitrary number of parameters(via some template magic).\r\n\r\nThe follow types of objects are serializable:\r\n* numbers\r\n* `std::string`\r\n* any class that implements `SexpSerializable`, which is an interface containing a single `to_sexp` method\r\n* containers of serializable objects, e.g. `std::vector<SexpSerializable*>`\r\n* pointers to serializable objects, e.g. `std::unique_ptr<std::string>`\r\n\r\nCalling `to_sexp()` or `sexp()` on containers or pointers will recursively call these functions for the underlying objects. As a result, implement the `SexpSerializable` interface is often a matter of listing what values you want to dump; the rest is handled automatically.\r\n\r\nA new header file, `util/rust-expr.h`, contains implementation of these functions. It's a big pile of meta-programming magic(I had way too much fun doing these meta-programming.)\r\n\r\n---\r\n\r\nAs an example, here's how you would implement `SexpSerializable` for the `AST::Crate` object:\r\n\r\n```c++\r\nstruct Crate : public SexpSerializable {\r\n    std::vector<std::unique_ptr<Item>> items;\r\n    NodeId node_id;\r\n\r\n    std::string to_sexp() const override {\r\n        return sexp(\"Crate\", sexp(\"node_id\", node_id),\r\n                             sexp(\"items\", items));\r\n    }\r\n\r\n    // ...other methods\r\n}\r\n```\r\n\r\nAssuming the underlying types also implements `SexpSerializable`, calling `to_sexp()` on a crate will generate this:\r\n\r\n```lisp\r\n(Crate \r\n    (node_id 123)\r\n    (items \r\n        (Function main \r\n            (returns void) \r\n            (params ) \r\n            (body \r\n                (Block \r\n                    (statements [Stmt placeholder] [Stmt placeholder]) \r\n                    (final_expr [nullptr]))))))\r\n```\r\n\r\n---\r\n\r\nLimitations:\r\n* I only implemented `SexpSerializable` for a few classes for demonstration purpose. It will need a lot of polish.\r\n* Currently `to_sexp()` only generates a compact, minimal s-expression. The previous output is formatted by one of my editor plugins.\r\n\r\nI'm happy to hear any thoughts and suggestions. This is just a phototype so I'm OK rewriting it from scratch if necessary.", "created_at": "2021-03-12T15:06:03Z", "updated_at": "2021-03-28T10:19:10Z", "closed_at": "2021-03-28T10:19:10Z", "merged_at": null, "merge_commit_sha": "cd9724ae30075c332b907ce2468c3101bb137fb8", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 61372777, "node_id": "MDU6TGFiZWw2MTM3Mjc3Nw==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 2642482874, "node_id": "MDU6TGFiZWwyNjQyNDgyODc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/cleanup", "name": "cleanup", "color": "E22959", "default": false, "description": ""}, {"id": 2728374888, "node_id": "MDU6TGFiZWwyNzI4Mzc0ODg4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/debug", "name": "debug", "color": "57C08E", "default": false, "description": ""}], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/276/commits", "review_comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/276/comments", "review_comment_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/276/comments", "statuses_url": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/bf928e69aaa169346df624d849e3ac393b785650", "head": {"label": "YizhePKU:sexp-dump", "ref": "sexp-dump", "sha": "bf928e69aaa169346df624d849e3ac393b785650", "user": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "Rust-GCC:master", "ref": "master", "sha": "b8549556123da80e60922eaa928cfd284f831303", "user": {"login": "Rust-GCC", "id": 74917047, "node_id": "MDEyOk9yZ2FuaXphdGlvbjc0OTE3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/74917047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rust-GCC", "html_url": "https://github.com/Rust-GCC", "followers_url": "https://api.github.com/users/Rust-GCC/followers", "following_url": "https://api.github.com/users/Rust-GCC/following{/other_user}", "gists_url": "https://api.github.com/users/Rust-GCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rust-GCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rust-GCC/subscriptions", "organizations_url": "https://api.github.com/users/Rust-GCC/orgs", "repos_url": "https://api.github.com/users/Rust-GCC/repos", "events_url": "https://api.github.com/users/Rust-GCC/events{/privacy}", "received_events_url": "https://api.github.com/users/Rust-GCC/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 13653100, "node_id": "MDEwOlJlcG9zaXRvcnkxMzY1MzEwMA==", "name": "gccrs", "full_name": "Rust-GCC/gccrs", "private": false, "owner": {"login": "Rust-GCC", "id": 74917047, "node_id": "MDEyOk9yZ2FuaXphdGlvbjc0OTE3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/74917047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rust-GCC", "html_url": "https://github.com/Rust-GCC", "followers_url": "https://api.github.com/users/Rust-GCC/followers", "following_url": "https://api.github.com/users/Rust-GCC/following{/other_user}", "gists_url": "https://api.github.com/users/Rust-GCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rust-GCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rust-GCC/subscriptions", "organizations_url": "https://api.github.com/users/Rust-GCC/orgs", "repos_url": "https://api.github.com/users/Rust-GCC/repos", "events_url": "https://api.github.com/users/Rust-GCC/events{/privacy}", "received_events_url": "https://api.github.com/users/Rust-GCC/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Rust-GCC/gccrs", "description": "GCC Front-End for Rust", "fork": false, "url": "https://api.github.com/repos/Rust-GCC/gccrs", "forks_url": "https://api.github.com/repos/Rust-GCC/gccrs/forks", "keys_url": "https://api.github.com/repos/Rust-GCC/gccrs/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Rust-GCC/gccrs/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Rust-GCC/gccrs/teams", "hooks_url": "https://api.github.com/repos/Rust-GCC/gccrs/hooks", "issue_events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/events{/number}", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/events", "assignees_url": "https://api.github.com/repos/Rust-GCC/gccrs/assignees{/user}", "branches_url": "https://api.github.com/repos/Rust-GCC/gccrs/branches{/branch}", "tags_url": "https://api.github.com/repos/Rust-GCC/gccrs/tags", "blobs_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/{sha}", "languages_url": "https://api.github.com/repos/Rust-GCC/gccrs/languages", "stargazers_url": "https://api.github.com/repos/Rust-GCC/gccrs/stargazers", "contributors_url": "https://api.github.com/repos/Rust-GCC/gccrs/contributors", "subscribers_url": "https://api.github.com/repos/Rust-GCC/gccrs/subscribers", "subscription_url": "https://api.github.com/repos/Rust-GCC/gccrs/subscription", "commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/{+path}", "compare_url": "https://api.github.com/repos/Rust-GCC/gccrs/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Rust-GCC/gccrs/merges", "archive_url": "https://api.github.com/repos/Rust-GCC/gccrs/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Rust-GCC/gccrs/downloads", "issues_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues{/number}", "pulls_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls{/number}", "milestones_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones{/number}", "notifications_url": "https://api.github.com/repos/Rust-GCC/gccrs/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/labels{/name}", "releases_url": "https://api.github.com/repos/Rust-GCC/gccrs/releases{/id}", "deployments_url": "https://api.github.com/repos/Rust-GCC/gccrs/deployments", "created_at": "2013-10-17T15:30:28Z", "updated_at": "2023-06-20T09:08:24Z", "pushed_at": "2023-06-20T21:29:48Z", "git_url": "git://github.com/Rust-GCC/gccrs.git", "ssh_url": "git@github.com:Rust-GCC/gccrs.git", "clone_url": "https://github.com/Rust-GCC/gccrs.git", "svn_url": "https://github.com/Rust-GCC/gccrs", "homepage": "https://rust-gcc.github.io/", "size": 1252381, "stargazers_count": 2035, "watchers_count": 2035, "language": null, "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": true, "forks_count": 127, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 300, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0", "node_id": "MDc6TGljZW5zZTg="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "gcc", "gcc-rust", "hacktoberfest", "rust", "rust-lang"], "visibility": "public", "forks": 127, "open_issues": 300, "watchers": 2035, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/276"}, "html": {"href": "https://github.com/Rust-GCC/gccrs/pull/276"}, "issue": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/issues/276"}, "comments": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/issues/276/comments"}, "review_comments": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/276/comments"}, "review_comment": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/276/commits"}, "statuses": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/bf928e69aaa169346df624d849e3ac393b785650"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 11, "review_comments": 0, "maintainer_can_modify": false, "commits": 8, "additions": 194, "deletions": 8, "changed_files": 4}