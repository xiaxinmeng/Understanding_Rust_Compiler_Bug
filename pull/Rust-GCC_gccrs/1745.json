{"url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/1745", "id": 1199494031, "node_id": "PR_kwDOANBUbM5HftOP", "html_url": "https://github.com/Rust-GCC/gccrs/pull/1745", "diff_url": "https://github.com/Rust-GCC/gccrs/pull/1745.diff", "patch_url": "https://github.com/Rust-GCC/gccrs/pull/1745.patch", "issue_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1745", "number": 1745, "state": "closed", "locked": false, "title": "[CL] gccrs: const folding port", "user": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "body": "```\r\ngccrs: const folding port\r\n\r\nThis changeset ports cp_global_trees structure which is used throughout the\r\ncp constexpr.cc code. I am not sure what it's purpose is but it seems it is used\r\nto add and manipulate tree information during the c++ compilation process.\r\nIt is possible this is not needed in the Rust code and may be taken out later.\r\nAlso, the initialization function isn't being called from anywhere yet, so\r\nwe will need to find a suitable point for it.\r\n\r\ngcc/rust/ChangeLog:\r\n\t* backend/rust-tree.cc : Add new includes.\r\n\t(scope_chain): New.\r\n\t(maybe_add_global): New.\r\n\t(init_modules): New (copied from cp)\r\n\t(var_in_constexpr_fn): Likewise.\r\n\t(member_vec_linear_search): Likewise.\r\n\t(member_vec_binary_search): Likewise.\r\n\t(is_overloaded_fn): Likewise.\r\n\t(ovl_make): Likewise.\r\n\t(lookup_add): Likewise.\r\n\t(type_memfn_quals): Likewise.\r\n\t(struct find_parameter_pack_data): Likewise.\r\n\t(struct conv_type_hasher): Likewise.\r\n\t(make_conv_op_name): Likewise.\r\n\t(builtin_pack_fn_p): Likewise.\r\n\t(builtin_pack_call_p): Likewise.\r\n\t(has_extra_args_mechanism_p): Likewise.\r\n\t(find_parameter_packs_r): Likewise.\r\n\t(WALK_SUBTREE): Likewise.\r\n\t(type_memfn_rqual): Likewise.\r\n\t(maybe_add_lang_type_raw): Likewise.\r\n\t(struct c_fileinfo): Likewise.\r\n\t(get_fileinfo): Likewise.\r\n\t(cxx_make_type): Likewise.\r\n\t(build_min_array_type): Likewise.\r\n\t(fields_linear_search): Likewise.\r\n\t(nothrow_spec_p): Likewise.\r\n\t(maybe_get_fns): Likewise.\r\n\t(get_fns): Likewise.\r\n\t(get_first_fn): Likewise.\r\n\t(dependent_name): Likewise.\r\n\t(called_fns_equal): Likewise.\r\n\t(canonical_eh_spec): Likewise.\r\n\t(rs_tree_code_length): Likewise.\r\n\t(rs_tree_operand_length): Likewise.\r\n\t(rs_tree_equal): Likewise.\r\n\t(publicly_uniquely_derived_p): Likewise.\r\n\t(comp_except_types): Likewise.\r\n\t(comp_except_specs): Likewise.\r\n\t(compparms): Likewise.\r\n\t(set_array_type_canon): Likewise.\r\n\t(struct cplus_array_info): Likewise.\r\n\t(struct cplus_array_hasher): Likewise.\r\n\t(cplus_array_hasher::hash): Likewise.\r\n\t(cplus_array_hasher::equal): Likewise.\r\n\t(is_byte_access_type): Likewise.\r\n\t(build_cplus_array_type): Likewise.\r\n\t(rs_build_qualified_type_real): Likewise.\r\n\t(vector_targets_convertible_p): Likewise.\r\n\t(comp_array_types): Likewise.\r\n\t(same_type_ignoring_top_level_qualifiers_p): Likewise.\r\n\t(comp_ptr_ttypes_const): Likewise.\r\n\t(similar_type_p): Likewise.\r\n\t(structural_comptypes): Likewise.\r\n\t(comptypes): Likewise.\r\n\t(next_initializable_field): Likewise.\r\n\t(sufficient_parms_p): Likewise.\r\n\t(default_ctor_p): Likewise.\r\n\t(user_provided_p): Likewise.\r\n\t(type_has_non_user_provided_default_constructor): Likewise.\r\n\t(default_init_uninitialized_part): Likewise.\r\n\t(extract_conversion_operator): Likewise.\r\n\t(get_class_binding_direct): Likewise.\r\n\t(lang_check_failed): Likewise.\r\n\t(skip_artificial_parms_for): Likewise.\r\n\t(in_class_defaulted_default_constructor): Likewise.\r\n\t(is_instantiation_of_constexpr): Likewise.\r\n\t(check_for_uninitialized_const_var): Likewise.\r\n\t(cv_unqualified): Likewise.\r\n\t(make_tree_vector): Likewise.\r\n\t(release_tree_vector): Likewise.\r\n\t(instantiation_dependent_expression_p): Likewise.\r\n\t(cp_get_callee): Likewise.\r\n\t(build_nop): Likewise.\r\n\t(scalarish_type_p): Likewise.\r\n\t(type_has_nontrivial_copy_init): Likewise.\r\n\t(build_local_temp): Likewise.\r\n\t(is_normal_capture_proxy): Likewise.\r\n\t(reject_gcc_builtin): Likewise.\r\n\t(is_bitfield_expr_with_lowered_type): Likewise.\r\n\t(maybe_undo_parenthesized_ref): Likewise.\r\n\t(fold_offsetof): Likewise.\r\n\t(char_type_p): Likewise.\r\n\t(resolve_nondeduced_context): Likewise.\r\n\t(instantiate_non_dependent_or_null): Likewise.\r\n\t(resolve_nondeduced_context_or_error): Likewise.\r\n\t(really_overloaded_fn): Likewise.\r\n\t(invalid_nonstatic_memfn_p): Likewise.\r\n\t(strip_top_quals): Likewise.\r\n\t(cxx_incomplete_type_inform): Likewise.\r\n\t(cxx_incomplete_type_diagnostic): Likewise.\r\n\t(decl_constant_var_p): Likewise.\r\n\t(undeduced_auto_decl): Likewise.\r\n\t(require_deduced_type): Likewise.\r\n\t* backend/rust-tree.h (enum c_tree_index): Likewise.\r\n\t(GTY): Likewise.\r\n\t(enum cp_tree_index): Likewise.\r\n\t(wchar_decl_node): Likewise.\r\n\t(vtable_entry_type): Likewise.\r\n\t(delta_type_node): Likewise.\r\n\t(vtable_index_type): Likewise.\r\n\t(class_type_node): Likewise.\r\n\t(unknown_type_node): Likewise.\r\n\t(init_list_type_node): Likewise.\r\n\t(explicit_void_list_node): Likewise.\r\n\t(vtbl_type_node): Likewise.\r\n\t(vtbl_ptr_type_node): Likewise.\r\n\t(std_node): Likewise.\r\n\t(abi_node): Likewise.\r\n\t(global_namespace): Likewise.\r\n\t(const_type_info_type_node): Likewise.\r\n\t(conv_op_marker): Likewise.\r\n\t(abort_fndecl): Likewise.\r\n\t(current_aggr): Likewise.\r\n\t(nullptr_node): Likewise.\r\n\t(nullptr_type_node): Likewise.\r\n\t(align_type_node): Likewise.\r\n\t(char8_type_node): Likewise.\r\n\t(char16_type_node): Likewise.\r\n\t(char32_type_node): Likewise.\r\n\t(wchar_type_node): Likewise.\r\n\t(underlying_wchar_type_node): Likewise.\r\n\t(wint_type_node): Likewise.\r\n\t(signed_size_type_node): Likewise.\r\n\t(unsigned_ptrdiff_type_node): Likewise.\r\n\t(intmax_type_node): Likewise.\r\n\t(uintmax_type_node): Likewise.\r\n\t(widest_integer_literal_type_node): Likewise.\r\n\t(widest_unsigned_literal_type_node): Likewise.\r\n\t(sig_atomic_type_node): Likewise.\r\n\t(int8_type_node): Likewise.\r\n\t(int16_type_node): Likewise.\r\n\t(int32_type_node): Likewise.\r\n\t(int64_type_node): Likewise.\r\n\t(uint8_type_node): Likewise.\r\n\t(c_uint16_type_node): Likewise.\r\n\t(c_uint32_type_node): Likewise.\r\n\t(c_uint64_type_node): Likewise.\r\n\t(int_least8_type_node): Likewise.\r\n\t(int_least16_type_node): Likewise.\r\n\t(int_least32_type_node): Likewise.\r\n\t(int_least64_type_node): Likewise.\r\n\t(uint_least8_type_node): Likewise.\r\n\t(uint_least16_type_node): Likewise.\r\n\t(uint_least32_type_node): Likewise.\r\n\t(uint_least64_type_node): Likewise.\r\n\t(int_fast8_type_node): Likewise.\r\n\t(int_fast16_type_node): Likewise.\r\n\t(int_fast32_type_node): Likewise.\r\n\t(int_fast64_type_node): Likewise.\r\n\t(uint_fast8_type_node): Likewise.\r\n\t(uint_fast16_type_node): Likewise.\r\n\t(uint_fast32_type_node): Likewise.\r\n\t(uint_fast64_type_node): Likewise.\r\n\t(intptr_type_node): Likewise.\r\n\t(uintptr_type_node): Likewise.\r\n\t(truthvalue_type_node): Likewise.\r\n\t(truthvalue_true_node): Likewise.\r\n\t(truthvalue_false_node): Likewise.\r\n\t(char_array_type_node): Likewise.\r\n\t(char8_array_type_node): Likewise.\r\n\t(char16_array_type_node): Likewise.\r\n\t(char32_array_type_node): Likewise.\r\n\t(wchar_array_type_node): Likewise.\r\n\t(string_type_node): Likewise.\r\n\t(const_string_type_node): Likewise.\r\n\t(default_function_type): Likewise.\r\n\t(function_name_decl_node): Likewise.\r\n\t(pretty_function_name_decl_node): Likewise.\r\n\t(c99_function_name_decl_node): Likewise.\r\n\t(saved_function_name_decls): Likewise.\r\n\t(null_node): Likewise.\r\n\t(ctor_identifier): Likewise.\r\n\t(complete_ctor_identifier): Likewise.\r\n\t(base_ctor_identifier): Likewise.\r\n\t(dtor_identifier): Likewise.\r\n\t(complete_dtor_identifier): Likewise.\r\n\t(base_dtor_identifier): Likewise.\r\n\t(deleting_dtor_identifier): Likewise.\r\n\t(conv_op_identifier): Likewise.\r\n\t(delta_identifier): Likewise.\r\n\t(in_charge_identifier): Likewise.\r\n\t(vtt_parm_identifier): Likewise.\r\n\t(as_base_identifier): Likewise.\r\n\t(this_identifier): Likewise.\r\n\t(pfn_identifier): Likewise.\r\n\t(vptr_identifier): Likewise.\r\n\t(global_identifier): Likewise.\r\n\t(anon_identifier): Likewise.\r\n\t(auto_identifier): Likewise.\r\n\t(decltype_auto_identifier): Likewise.\r\n\t(init_list_identifier): Likewise.\r\n\t(for_range__identifier): Likewise.\r\n\t(for_begin__identifier): Likewise.\r\n\t(for_end__identifier): Likewise.\r\n\t(for_range_identifier): Likewise.\r\n\t(for_begin_identifier): Likewise.\r\n\t(for_end_identifier): Likewise.\r\n\t(abi_tag_identifier): Likewise.\r\n\t(aligned_identifier): Likewise.\r\n\t(begin_identifier): Likewise.\r\n\t(end_identifier): Likewise.\r\n\t(get__identifier): Likewise.\r\n\t(gnu_identifier): Likewise.\r\n\t(tuple_element_identifier): Likewise.\r\n\t(tuple_size_identifier): Likewise.\r\n\t(type_identifier): Likewise.\r\n\t(value_identifier): Likewise.\r\n\t(fun_identifier): Likewise.\r\n\t(closure_identifier): Likewise.\r\n\t(heap_uninit_identifier): Likewise.\r\n\t(heap_identifier): Likewise.\r\n\t(heap_deleted_identifier): Likewise.\r\n\t(heap_vec_uninit_identifier): Likewise.\r\n\t(heap_vec_identifier): Likewise.\r\n\t(omp_identifier): Likewise.\r\n\t(lang_name_c): Likewise.\r\n\t(lang_name_cplusplus): Likewise.\r\n\t(empty_except_spec): Likewise.\r\n\t(noexcept_true_spec): Likewise.\r\n\t(noexcept_false_spec): Likewise.\r\n\t(noexcept_deferred_spec): Likewise.\r\n\t(terminate_fn): Likewise.\r\n\t(call_unexpected_fn): Likewise.\r\n\t(get_exception_ptr_fn): Likewise.\r\n\t(begin_catch_fn): Likewise.\r\n\t(end_catch_fn): Likewise.\r\n\t(allocate_exception_fn): Likewise.\r\n\t(free_exception_fn): Likewise.\r\n\t(throw_fn): Likewise.\r\n\t(rethrow_fn): Likewise.\r\n\t(atexit_fn_ptr_type_node): Likewise.\r\n\t(atexit_node): Likewise.\r\n\t(dso_handle_node): Likewise.\r\n\t(dynamic_cast_node): Likewise.\r\n\t(cleanup_type): Likewise.\r\n\t(vtt_parm_type): Likewise.\r\n\t(any_targ_node): Likewise.\r\n\t(source_location_impl): Likewise.\r\n\t(OVL_FUNCTION): Likewise.\r\n\t(OVL_CHAIN): Likewise.\r\n\t(OVL_DEDUP_P): Likewise.\r\n\t(OVL_USING_P): Likewise.\r\n\t(OVL_HIDDEN_P): Likewise.\r\n\t(OVL_NESTED_P): Likewise.\r\n\t(OVL_LOOKUP_P): Likewise.\r\n\t(OVL_EXPORT_P): Likewise.\r\n\t(OVL_FIRST): Likewise.\r\n\t(OVL_NAME): Likewise.\r\n\t(OVL_P): Likewise.\r\n\t(OVL_SINGLE_P): Likewise.\r\n\t(TYPE_HAS_DEFAULT_CONSTRUCTOR): Likewise.\r\n\t(CLASSTYPE_LAZY_DEFAULT_CTOR): Likewise.\r\n\t(CLASSTYPE_CONSTRUCTORS): Likewise.\r\n\t(ATTR_IS_DEPENDENT): Likewise.\r\n\t(ABI_TAG_IMPLICIT): Likewise.\r\n\t(PARENTHESIZED_LIST_P): Likewise.\r\n\t(DECL_DEPENDENT_P): Likewise.\r\n\t(USING_DECL_SCOPE): Likewise.\r\n\t(USING_DECL_DECLS): Likewise.\r\n\t(USING_DECL_TYPENAME_P): Likewise.\r\n\t(USING_DECL_UNRELATED_P): Likewise.\r\n\t(DECL_DECLARES_FUNCTION_P): Likewise.\r\n\t(DECL_DECLARES_TYPE_P): Likewise.\r\n\t(IDENTIFIER_KIND_BIT_0): Likewise.\r\n\t(IDENTIFIER_KIND_BIT_1): Likewise.\r\n\t(IDENTIFIER_KIND_BIT_2): Likewise.\r\n\t(IDENTIFIER_MARKED): Likewise.\r\n\t(IDENTIFIER_VIRTUAL_P): Likewise.\r\n\t(IDENTIFIER_KEYWORD_P): Likewise.\r\n\t(IDENTIFIER_CDTOR_P): Likewise.\r\n\t(IDENTIFIER_CTOR_P): Likewise.\r\n\t(IDENTIFIER_DTOR_P): Likewise.\r\n\t(IDENTIFIER_ANY_OP_P): Likewise.\r\n\t(IDENTIFIER_OVL_OP_P): Likewise.\r\n\t(IDENTIFIER_ASSIGN_OP_P): Likewise.\r\n\t(IDENTIFIER_CONV_OP_P): Likewise.\r\n\t(IDENTIFIER_NEWDEL_OP_P): Likewise.\r\n\t(IDENTIFIER_NEW_OP_P): Likewise.\r\n\t(CLASSTYPE_DIAMOND_SHAPED_P): Likewise.\r\n\t(CLASSTYPE_REPEATED_BASE_P): Likewise.\r\n\t(CLASSTYPE_KEY_METHOD): Likewise.\r\n\t(CLASSTYPE_MEMBER_VEC): Likewise.\r\n\t(CLASSTYPE_DECL_LIST): Likewise.\r\n\t(CLASSTYPE_DESTRUCTOR): Likewise.\r\n\t(CLASSTYPE_HAS_PRIMARY_BASE_P): Likewise.\r\n\t(CLASSTYPE_PRIMARY_BINFO): Likewise.\r\n\t(CLASSTYPE_VBASECLASSES): Likewise.\r\n\t(CLASSTYPE_AS_BASE): Likewise.\r\n\t(DECL_CONV_FN_P): Likewise.\r\n\t(DECL_CONV_FN_TYPE): Likewise.\r\n\t(same_type_p): Likewise.\r\n\t(WILDCARD_TYPE_P): Likewise.\r\n\t(MAYBE_CLASS_TYPE_P): Likewise.\r\n\t(FUNCTION_REF_QUALIFIED): Likewise.\r\n\t(FUNCTION_RVALUE_QUALIFIED): Likewise.\r\n\t(TYPE_PTRMEMFUNC_FN_TYPE): Likewise.\r\n\t(TYPE_PTRMEMFUNC_FN_TYPE_RAW): Likewise.\r\n\t(TYPE_DEPENDENT_P): Likewise.\r\n\t(TYPE_DEPENDENT_P_VALID): Likewise.\r\n\t(TYPE_HAS_NONTRIVIAL_DESTRUCTOR): Likewise.\r\n\t(TYPE_RAISES_EXCEPTIONS): Likewise.\r\n\t(IDENTIFIER_BINDING): Likewise.\r\n\t(LANG_IDENTIFIER_CAST): Likewise.\r\n\t(IF_COND): Likewise.\r\n\t(THEN_CLAUSE): Likewise.\r\n\t(ELSE_CLAUSE): Likewise.\r\n\t(IF_SCOPE): Likewise.\r\n\t(IF_STMT_CONSTEXPR_P): Likewise.\r\n\t(IF_STMT_CONSTEVAL_P): Likewise.\r\n\t(DECLTYPE_TYPE_EXPR): Likewise.\r\n\t(SET_CLASSTYPE_INTERFACE_UNKNOWN_X): Likewise.\r\n\t(CLASSTYPE_INTERFACE_ONLY): Likewise.\r\n\t(TYPE_NAME_STRING): Likewise.\r\n\t(TYPE_NAME_LENGTH): Likewise.\r\n\t(CONSTRAINT_VAR_P): Likewise.\r\n\t(KOENIG_LOOKUP_P): Likewise.\r\n\t(DECL_PARM_INDEX): Likewise.\r\n\t(DECL_PARM_LEVEL): Likewise.\r\n\t(CONV_IMPLICIT): Likewise.\r\n\t(CONV_STATIC): Likewise.\r\n\t(CONV_CONST): Likewise.\r\n\t(CONV_REINTERPRET): Likewise.\r\n\t(CONV_PRIVATE): Likewise.\r\n\t(CONV_FORCE_TEMP): Likewise.\r\n\t(CONV_FOLD): Likewise.\r\n\t(CONV_OLD_CONVERT): Likewise.\r\n\t(CONV_C_CAST): Likewise.\r\n\t(CONV_BACKEND_CONVERT): Likewise.\r\n\t(WANT_INT): Likewise.\r\n\t(WANT_FLOAT): Likewise.\r\n\t(WANT_ENUM): Likewise.\r\n\t(WANT_POINTER): Likewise.\r\n\t(WANT_NULL): Likewise.\r\n\t(WANT_VECTOR_OR_COMPLEX): Likewise.\r\n\t(WANT_ARITH): Likewise.\r\n\t(COMPARE_STRICT): Likewise.\r\n\t(COMPARE_BASE): Likewise.\r\n\t(COMPARE_DERIVED): Likewise.\r\n\t(COMPARE_REDECLARATION): Likewise.\r\n\t(COMPARE_STRUCTURAL): Likewise.\r\n\t(SF_DEFAULT): Likewise.\r\n\t(SF_PRE_PARSED): Likewise.\r\n\t(SF_INCLASS_INLINE): Likewise.\r\n\t(SD_UNINITIALIZED): Likewise.\r\n\t(SD_INITIALIZED): Likewise.\r\n\t(SD_DECOMPOSITION): Likewise.\r\n\t(SD_DEFAULTED): Likewise.\r\n\t(SD_DELETED): Likewise.\r\n\t(TYPE_PTRDATAMEM_P): Likewise.\r\n\t(RS_TYPE_CONST_P): Likewise.\r\n\t(TYPE_MAIN_DECL): Likewise.\r\n\t(DECL_NONTRIVIALLY_INITIALIZED_P): Likewise.\r\n\t(DECL_DEFAULTED_FN): Likewise.\r\n\t(TYPE_HAS_USER_CONSTRUCTOR): Likewise.\r\n\t(DECL_INITIALIZED_IN_CLASS_P): Likewise.\r\n\t(DECL_DEFAULTED_IN_CLASS_P): Likewise.\r\n\t(DECL_NONSTATIC_MEMBER_FUNCTION_P): Likewise.\r\n\t(DECL_HAS_IN_CHARGE_PARM_P): Likewise.\r\n\t(DECL_HAS_VTT_PARM_P): Likewise.\r\n\t(FUNCTION_FIRST_USER_PARMTYPE): Likewise.\r\n\t(FUNCTION_FIRST_USER_PARM): Likewise.\r\n\t(DECL_CONSTRUCTOR_P): Likewise.\r\n\t(DECL_DELETED_FN): Likewise.\r\n\t(BRACE_ENCLOSED_INITIALIZER_P): Likewise.\r\n\t(DECL_IMMEDIATE_FUNCTION_P): Likewise.\r\n\t(SET_DECL_IMMEDIATE_FUNCTION_P): Likewise.\r\n\t(CONSTRUCTOR_MUTABLE_POISON): Likewise.\r\n\t(PTRMEM_CST_MEMBER): Likewise.\r\n\t(REF_PARENTHESIZED_P): Likewise.\r\n\t(TYPE_PTRMEM_P): Likewise.\r\n\t(TYPE_PTR_OR_PTRMEM_P): Likewise.\r\n\t(DECL_DECOMPOSITION_P): Likewise.\r\n\t(DECL_DECOMP_BASE): Likewise.\r\n\t(DECL_MAYBE_IN_CHARGE_CDTOR_P): Likewise.\r\n\t(DECL_MAYBE_IN_CHARGE_DESTRUCTOR_P): Likewise.\r\n\t(DECL_CLONED_FUNCTION_P): Likewise.\r\n\t(DECL_CLONED_FUNCTION): Likewise.\r\n\t(DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P): Likewise.\r\n\t(cp_function_chain): Likewise.\r\n\t(cdtor_label): Likewise.\r\n\t(current_class_ptr): Likewise.\r\n\t(current_class_ref): Likewise.\r\n\t(current_eh_spec_block): Likewise.\r\n\t(current_in_charge_parm): Likewise.\r\n\t(current_vtt_parm): Likewise.\r\n\t(current_retval_sentinel): Likewise.\r\n\t(current_function_returns_value): Likewise.\r\n\t(current_function_returns_null): Likewise.\r\n\t(current_function_returns_abnormally): Likewise.\r\n\t(current_function_infinite_loop): Likewise.\r\n\t(in_base_initializer): Likewise.\r\n\t(in_function_try_handler): Likewise.\r\n\t(current_function_return_value): Likewise.\r\n\t(current_class_type): Likewise.\r\n\t(TYPE_BEING_DEFINED): Likewise.\r\n\t(DECL_STATIC_FUNCTION_P): Likewise.\r\n\t(DECL_FUNCTION_MEMBER_P): Likewise.\r\n\t(LANG_DECL_MIN_CHECK): Likewise.\r\n\t(LANG_DECL_FN_CHECK): Likewise.\r\n\t(LANG_DECL_NS_CHECK): Likewise.\r\n\t(LANG_DECL_PARM_CHECK): Likewise.\r\n\t(LANG_DECL_DECOMP_CHECK): Likewise.\r\n\t(RS_INTEGRAL_TYPE_P): Likewise.\r\n\t(STAT_HACK_P): Likewise.\r\n\t(STAT_TYPE_VISIBLE_P): Likewise.\r\n\t(STAT_TYPE): Likewise.\r\n\t(STAT_DECL): Likewise.\r\n\t(STAT_VISIBLE): Likewise.\r\n\t(MAYBE_STAT_DECL): Likewise.\r\n\t(MAYBE_STAT_TYPE): Likewise.\r\n\t(STAT_TYPE_HIDDEN_P): Likewise.\r\n\t(STAT_DECL_HIDDEN_P): Likewise.\r\n\t(class warning_sentinel): Likewise.\r\n\t(struct uid_sensitive_constexpr_evaluation_checker): Likewise.\r\n\t(class iloc_sentinel): Likewise.\r\n\t(struct GTY): Likewise.\r\n\t(struct named_decl_hash): Likewise.\r\n\t(enum lang_decl_selector): Likewise.\r\n\t(LANG_DECL_HAS_MIN): Likewise.\r\n\t(struct named_label_entry): Likewise.\r\n\t(struct named_label_hash): Likewise.\r\n\t(enum ref_operator): Likewise.\r\n\t(struct c_fileinfo): Likewise.\r\n\t(class ovl_iterator): Likewise.\r\n\t(class lkp_iterator): Likewise.\r\n\t(enum rs_ref_qualifier): Likewise.\r\n\t(enum tsubst_flags): Likewise.\r\n\t(enum cp_identifier_kind): Likewise.\r\n\t(enum tag_types): Likewise.\r\n\t(enum compare_bounds_t): Likewise.\r\n\t(mark_rvalue_use): Likewise.\r\n\t(type_unknown_p): Likewise.\r\n\t(init_modules): Likewise.\r\n\t(var_in_constexpr_fn): Likewise.\r\n\t(ovl_first): Likewise.\r\n\t(lookup_add): Likewise.\r\n\t(ovl_make): Likewise.\r\n\t(is_overloaded_fn): Likewise.\r\n\t(maybe_add_lang_type_raw): Likewise.\r\n\t(type_memfn_rqual): Likewise.\r\n\t(builtin_pack_fn_p): Likewise.\r\n\t(make_conv_op_name): Likewise.\r\n\t(type_memfn_quals): Likewise.\r\n\t(get_fileinfo): Likewise.\r\n\t(cxx_make_type): Likewise.\r\n\t(build_cplus_array_type): Likewise.\r\n\t(is_byte_access_type): Likewise.\r\n\t(comptypes): Likewise.\r\n\t(canonical_eh_spec): Likewise.\r\n\t(cp_tree_operand_length): Likewise.\r\n\t(rs_tree_equal): Likewise.\r\n\t(compparms): Likewise.\r\n\t(rs_build_qualified_type_real): Likewise.\r\n\t(rs_build_qualified_type): Likewise.\r\n\t(cv_qualified_p): Likewise.\r\n\t(similar_type_p): Likewise.\r\n\t(vector_targets_convertible_p): Likewise.\r\n\t(same_type_ignoring_top_level_qualifiers_p): Likewise.\r\n\t(comp_ptr_ttypes_const): Likewise.\r\n\t(get_class_binding_direct): Likewise.\r\n\t(skip_artificial_parms_for): Likewise.\r\n\t(lang_check_failed): Likewise.\r\n\t(default_init_uninitialized_part): Likewise.\r\n\t(type_has_non_user_provided_default_constructor): Likewise.\r\n\t(default_ctor_p): Likewise.\r\n\t(user_provided_p): Likewise.\r\n\t(sufficient_parms_p): Likewise.\r\n\t(next_initializable_field): Likewise.\r\n\t(in_class_defaulted_default_constructor): Likewise.\r\n\t(is_instantiation_of_constexpr): Likewise.\r\n\t(check_for_uninitialized_const_var): Likewise.\r\n\t(reduced_constant_expression_p): Likewise.\r\n\t(cv_unqualified): Likewise.\r\n\t(cp_get_callee): Likewise.\r\n\t(cp_get_callee_fndecl_nofold): Likewise.\r\n\t(is_nondependent_static_init_expression): Likewise.\r\n\t(maybe_constant_init): Likewise.\r\n\t(build_nop): Likewise.\r\n\t(scalarish_type_p): Likewise.\r\n\t(is_bitfield_expr_with_lowered_type): Likewise.\r\n\t(convert_bitfield_to_declared_type): Likewise.\r\n\t(cp_fold_maybe_rvalue): Likewise.\r\n\t(maybe_undo_parenthesized_ref): Likewise.\r\n\t(fold_offsetof): Likewise.\r\n\t(cp_truthvalue_conversion): Likewise.\r\n\t(fold_non_dependent_expr): Likewise.\r\n\t(char_type_p): Likewise.\r\n\t(instantiation_dependent_expression_p): Likewise.\r\n\t(type_has_nontrivial_copy_init): Likewise.\r\n\t(build_local_temp): Likewise.\r\n\t(is_normal_capture_proxy): Likewise.\r\n\t(reject_gcc_builtin): Likewise.\r\n\t(resolve_nondeduced_context): Likewise.\r\n\t(cxx_incomplete_type_diagnostic): Likewise.\r\n\t(cxx_incomplete_type_error): Likewise.\r\n\t(invalid_nonstatic_memfn_p): Likewise.\r\n\t(really_overloaded_fn): Likewise.\r\n\t(resolve_nondeduced_context_or_error): Likewise.\r\n\t(instantiate_non_dependent_or_null): Likewise.\r\n\t(cxx_incomplete_type_inform): Likewise.\r\n\t(strip_top_quals): Likewise.\r\n\t(undeduced_auto_decl): Likewise.\r\n\t(require_deduced_type): Likewise.\r\n\t(decl_constant_var_p): Likewise.\r\n\t(type_of_this_parm): Likewise.\r\n\t(class_of_this_parm): Likewise.\r\n\t(identifier_p): Likewise.\r\n\t(gnu_vector_type_p): Likewise.\r\n\t(make_tree_vector): Likewise.\r\n\t(release_tree_vector): Likewise.\r\n\t(class releasing_vec): Likewise.\r\n\t(vec_safe_push): Likewise.\r\n\t(null_node_p): Likewise.\r\n\t* backend/rust-compile-base.cc (HIRCompileBase::setup_fndecl): Correctly\r\n\tset fndecl as constexpr from qualifiers.\r\n\t(HIRCompileBase::compile_function): Test if fndecl is constexpr.\r\n\t(HIRCompileBase::compile_constant_item): Set fndecl as constexpr.\r\n\t* backend/rust-compile-intrinsic.cc : Update include.\r\n\t(finalize_intrinsic_block): Set fndecl as constexpr.\r\n\t* backend/rust-constexpr.cc : Update include.\r\n\t(VERIFY_CONSTANT): New.\r\n\t(is_instantiation_of_constexpr): New.\r\n\t(literal_type_p): New.\r\n\t(verify_constant): New.\r\n\t(find_array_ctor_elt): New.\r\n\t(array_index_cmp): New.\r\n\t(potential_constant_expression_1): New.\r\n\t(get_nth_callarg): New.\r\n\t(unshare_constructor): New.\r\n\t(maybe_save_constexpr_fundef): New.\r\n\t(returns): New.\r\n\t(breaks): New.\r\n\t(continues): New.\r\n\t(switches): New.\r\n\t(struct constexpr_global_ctx): Add new fields.\r\n\t(constexpr_fundef): New.\r\n\t(struct constexpr_call): New.\r\n\t(constexpr_call_hasher : ggc_ptr_hash<constexpr_call>): New.\r\n\t(enum constexpr_switch_state): New.\r\n\t(struct constexpr_ctx): Add new fields.\r\n\t(struct constexpr_fundef_hasher): New.\r\n\t(constexpr_fundef_table): New.\r\n\t(constexpr_fundef_hasher::equal): New.\r\n\t(constexpr_fundef_hasher::hash): New.\r\n\t(retrieve_constexpr_fundef): New.\r\n\t(uid_sensitive_constexpr_evaluation_value): New.\r\n\t(uid_sensitive_constexpr_evaluation_true_counter): New.\r\n\t(uid_sensitive_constexpr_evaluation_p): New.\r\n\t(class temp_override): New.\r\n\t(struct uid_sensitive_constexpr_evaluation_sentinel): New.\r\n\t(struct uid_sensitive_constexpr_evaluation_checker): New.\r\n\t(::uid_sensitive_constexpr_evaluation_sentinel): New.\r\n\t(::uid_sensitive_constexpr_evaluation_checker): New.\r\n\t(uid_sensitive_constexpr_evaluation_checker::evaluation_restricted_p): New.\r\n\t(constexpr_call_table): New.\r\n\t(constexpr_call_hasher::hash): New.\r\n\t(constexpr_call_hasher::equal): New.\r\n\t(maybe_initialize_constexpr_call_table): New.\r\n\t(fundef_copies_table): New.\r\n\t(get_fundef_copy): New.\r\n\t(save_fundef_copy): New.\r\n\t(constexpr_expression): Refactor in ...\r\n\t(eval_constant_expression): ...this.\r\n\t(eval_store_expression): Add 3 bool params.\r\n\t(eval_call_expression): Likewise.\r\n\t(eval_binary_expression): Likewise.\r\n\t(eval_statement_list): New.\r\n\t(extract_string_elt): New.\r\n\t(eval_conditional_expression): New.\r\n\t(eval_bit_field_ref): New.\r\n\t(eval_loop_expr): New.\r\n\t(eval_switch_expr): New.\r\n\t(eval_unary_expression): New.\r\n\t(call_stack): New.\r\n\t(call_stack_tick): New.\r\n\t(last_cx_error_tick): New.\r\n\t(push_cx_call_context): New.\r\n\t(pop_cx_call_context): New.\r\n\t(cx_error_context): New.\r\n\t(fold_expr): Adjust call to eval_constant_expression.\r\n\t(same_type_ignoring_tlq_and_bounds_p): New.\r\n\t(union_active_member): Port more for cxx constexpr.\r\n\t(fold_indirect_ref_1): New.\r\n\t(rs_fold_indirect_ref): Likewise.\r\n\t(rs_eval_indirect_ref): New (from corresponding cxx FE file).\r\n\t(eval_logical_expression): Adjust parameter list.\r\n\t(lookup_placeholder): New (from corresponding cxx FE file).\r\n\t(constant_value_1): Remove.\r\n\t(inline_asm_in_constexpr_error): New (from corresponding cxx FE file).\r\n\t(verify_ctor_sanity): New.\r\n\t(get_callee): Remove.\r\n\t(initialized_type): New.\r\n\t(maybe_constexpr_fn): Remove.\r\n\t(init_subob_ctx): New.\r\n\t(base_field_constructor_elt): New.\r\n\t(get_or_insert_ctor_field): New.\r\n\t(eval_vector_conditional_expression): New (from correponding cxx FE file).\r\n\t(eval_bare_aggregate): New.\r\n\t(cxx_eval_trinary_expression): New.\r\n\t(reduced_constant_expression_p): New.\r\n\t(adjust_temp_type): New.\r\n\t(free_constructor): New.\r\n\t(eval_and_check_array_index): New.\r\n\t(eval_array_reference): New.\r\n\t(eval_component_reference): New.\r\n\t(label_matches): New.\r\n\t(eval_constant_expression): New.\r\n\t(modifying_const_object_error): New.\r\n\t(is_empty_field): New.\r\n\t(eval_store_expression): New.\r\n\t(eval_binary_expression): New.\r\n\t(addr_of_non_const_var): New.\r\n\t(rs_bind_parameters_in_call): New.\r\n\t(eval_builtin_function_call): New.\r\n\t(eval_call_expression): New.\r\n\t(build_anon_member_initialization): New.\r\n\t(build_data_member_initialization): New.\r\n\t(constexpr_fn_retval): New.\r\n\t(constant_value_1): New.\r\n\t(decl_constant_value): New.\r\n\t(non_const_var_error): New.\r\n\t(get_callee): New.\r\n\t(get_function_named_in_call): New.\r\n\t(maybe_constexpr_fn): New.\r\n\t(get_nth_callarg): New.\r\n\t(var_in_maybe_constexpr_fn): New.\r\n\t(instantiate_cx_fn_r): New.\r\n\t(instantiate_constexpr_fns): New.\r\n\t(array_index_cmp): New.\r\n\t(unshare_constructor): New.\r\n\t(find_array_ctor_elt): New.\r\n\t(verify_constant): New.\r\n\t(find_heap_var_refs): New.\r\n\t(find_immediate_fndecl): New.\r\n\t(diag_array_subscript): New.\r\n\t(get_array_or_vector_nelts): New.\r\n\t(eval_and_check_array_index): New.\r\n\t(extract_string_elt): New.\r\n\t(is_valid_constexpr_fn): New.\r\n\t(explain_invalid_constexpr_fn): New.\r\n\t(register_constexpr_fundef): New.\r\n\t(maybe_save_constexpr_fundef): New.\r\n\t(eval_statement_list): New.\r\n\t(eval_conditional_expression): New.\r\n\t(eval_bit_field_ref): New.\r\n\t(returns): New.\r\n\t(breaks): New.\r\n\t(continues): New.\r\n\t(switches): New.\r\n\t(eval_loop_expr): New.\r\n\t(eval_switch_expr): New.\r\n\t(eval_unary_expression): New.\r\n\t(cxx_eval_outermost_constant_expr): New.\r\n\t(is_static_init_expression): New.\r\n\t(is_constant_expression): New.\r\n\t(is_nondependent_static_init_expression): New.\r\n\t(maybe_constant_init_1): New.\r\n\t(maybe_constant_init): New.\r\n\t(is_nondependent_constant_expression): New.\r\n\t(cv_cache): New.\r\n\t(maybe_constant_value): New.\r\n\t(potential_constant_expression): New.\r\n\t(struct check_for_return_continue_data): New.\r\n\t(check_for_return_continue): New.\r\n\t(decl_namespace_context): New.\r\n\t(decl_in_std_namespace_p): New.\r\n\t(is_std_construct_at): New.\r\n\t(cxx_dynamic_cast_fn_p): New.\r\n\t(is_std_allocator_allocate): New.\r\n\t(is_std_allocator_allocate): New.\r\n\t(potential_constant_expression_1): New.\r\n\t(potential_constant_expression_1): New.\r\n\t(fold_non_dependent_init): New.\r\n\t* backend/rust-constexpr.h (maybe_save_constexpr_fundef): New.\r\n\r\ngcc/testsuite:\r\n\t* rust/compile/const4.rs: New.\r\n\t* rust/compile/const5.rs: New.\r\n\r\nSigned-off-by: Faisal Abbas <90.abbasfaisal@gmail.com>\r\n```", "created_at": "2023-01-16T21:06:37Z", "updated_at": "2023-01-17T15:30:06Z", "closed_at": "2023-01-17T15:16:13Z", "merged_at": "2023-01-17T15:16:13Z", "merge_commit_sha": "42d081e810aecb2f089510cbdaf9902ae8fbb0b8", "assignee": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [{"login": "abbasfaisal", "id": 9428333, "node_id": "MDQ6VXNlcjk0MjgzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/9428333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abbasfaisal", "html_url": "https://github.com/abbasfaisal", "followers_url": "https://api.github.com/users/abbasfaisal/followers", "following_url": "https://api.github.com/users/abbasfaisal/following{/other_user}", "gists_url": "https://api.github.com/users/abbasfaisal/gists{/gist_id}", "starred_url": "https://api.github.com/users/abbasfaisal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abbasfaisal/subscriptions", "organizations_url": "https://api.github.com/users/abbasfaisal/orgs", "repos_url": "https://api.github.com/users/abbasfaisal/repos", "events_url": "https://api.github.com/users/abbasfaisal/events{/privacy}", "received_events_url": "https://api.github.com/users/abbasfaisal/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [{"id": 4533708765, "node_id": "LA_kwDOANBUbM8AAAABDjrn3Q", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/upstream", "name": "upstream", "color": "25B46F", "default": false, "description": "Issue regarding upstreaming gccrs into GCC"}, {"id": 5016317174, "node_id": "LA_kwDOANBUbM8AAAABKv7s9g", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/changelog", "name": "changelog", "color": "D10EED", "default": false, "description": "Issue regarding GCC ChangeLog entries"}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/14", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/14", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/14/labels", "id": 8817104, "node_id": "MI_kwDOANBUbM4AhonQ", "number": 14, "title": "Update GCC's master branch", "description": "Update GCC's master branch with the most recent gccrs commits. The original merge contains code up to the end of August 2022, so we are missing quite a lot of work.\r\n\r\nThis can be considered a subset of the `Final Upstream Patches` milestone which focuses more on the update side than the development side of things.", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 24, "state": "closed", "created_at": "2023-01-03T16:20:56Z", "updated_at": "2023-03-20T12:42:14Z", "due_on": "2023-03-03T08:00:00Z", "closed_at": "2023-03-20T12:42:14Z"}, "draft": false, "commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/1745/commits", "review_comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/1745/comments", "review_comment_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1745/comments", "statuses_url": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/c1e661f5b939c08eca1167869d550fb4edee0148", "head": {"label": "Rust-GCC:dkm/gcc-patch-dev-constexpr", "ref": "dkm/gcc-patch-dev-constexpr", "sha": "c1e661f5b939c08eca1167869d550fb4edee0148", "user": {"login": "Rust-GCC", "id": 74917047, "node_id": "MDEyOk9yZ2FuaXphdGlvbjc0OTE3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/74917047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rust-GCC", "html_url": "https://github.com/Rust-GCC", "followers_url": "https://api.github.com/users/Rust-GCC/followers", "following_url": "https://api.github.com/users/Rust-GCC/following{/other_user}", "gists_url": "https://api.github.com/users/Rust-GCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rust-GCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rust-GCC/subscriptions", "organizations_url": "https://api.github.com/users/Rust-GCC/orgs", "repos_url": "https://api.github.com/users/Rust-GCC/repos", "events_url": "https://api.github.com/users/Rust-GCC/events{/privacy}", "received_events_url": "https://api.github.com/users/Rust-GCC/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 13653100, "node_id": "MDEwOlJlcG9zaXRvcnkxMzY1MzEwMA==", "name": "gccrs", "full_name": "Rust-GCC/gccrs", "private": false, "owner": {"login": "Rust-GCC", "id": 74917047, "node_id": "MDEyOk9yZ2FuaXphdGlvbjc0OTE3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/74917047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rust-GCC", "html_url": "https://github.com/Rust-GCC", "followers_url": "https://api.github.com/users/Rust-GCC/followers", "following_url": "https://api.github.com/users/Rust-GCC/following{/other_user}", "gists_url": "https://api.github.com/users/Rust-GCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rust-GCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rust-GCC/subscriptions", "organizations_url": "https://api.github.com/users/Rust-GCC/orgs", "repos_url": "https://api.github.com/users/Rust-GCC/repos", "events_url": "https://api.github.com/users/Rust-GCC/events{/privacy}", "received_events_url": "https://api.github.com/users/Rust-GCC/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Rust-GCC/gccrs", "description": "GCC Front-End for Rust", "fork": false, "url": "https://api.github.com/repos/Rust-GCC/gccrs", "forks_url": "https://api.github.com/repos/Rust-GCC/gccrs/forks", "keys_url": "https://api.github.com/repos/Rust-GCC/gccrs/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Rust-GCC/gccrs/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Rust-GCC/gccrs/teams", "hooks_url": "https://api.github.com/repos/Rust-GCC/gccrs/hooks", "issue_events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/events{/number}", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/events", "assignees_url": "https://api.github.com/repos/Rust-GCC/gccrs/assignees{/user}", "branches_url": "https://api.github.com/repos/Rust-GCC/gccrs/branches{/branch}", "tags_url": "https://api.github.com/repos/Rust-GCC/gccrs/tags", "blobs_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/{sha}", "languages_url": "https://api.github.com/repos/Rust-GCC/gccrs/languages", "stargazers_url": "https://api.github.com/repos/Rust-GCC/gccrs/stargazers", "contributors_url": "https://api.github.com/repos/Rust-GCC/gccrs/contributors", "subscribers_url": "https://api.github.com/repos/Rust-GCC/gccrs/subscribers", "subscription_url": "https://api.github.com/repos/Rust-GCC/gccrs/subscription", "commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/{+path}", "compare_url": "https://api.github.com/repos/Rust-GCC/gccrs/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Rust-GCC/gccrs/merges", "archive_url": "https://api.github.com/repos/Rust-GCC/gccrs/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Rust-GCC/gccrs/downloads", "issues_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues{/number}", "pulls_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls{/number}", "milestones_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones{/number}", "notifications_url": "https://api.github.com/repos/Rust-GCC/gccrs/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/labels{/name}", "releases_url": "https://api.github.com/repos/Rust-GCC/gccrs/releases{/id}", "deployments_url": "https://api.github.com/repos/Rust-GCC/gccrs/deployments", "created_at": "2013-10-17T15:30:28Z", "updated_at": "2023-06-20T09:08:24Z", "pushed_at": "2023-06-20T21:29:48Z", "git_url": "git://github.com/Rust-GCC/gccrs.git", "ssh_url": "git@github.com:Rust-GCC/gccrs.git", "clone_url": "https://github.com/Rust-GCC/gccrs.git", "svn_url": "https://github.com/Rust-GCC/gccrs", "homepage": "https://rust-gcc.github.io/", "size": 1252381, "stargazers_count": 2035, "watchers_count": 2035, "language": null, "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": true, "forks_count": 127, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 300, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0", "node_id": "MDc6TGljZW5zZTg="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "gcc", "gcc-rust", "hacktoberfest", "rust", "rust-lang"], "visibility": "public", "forks": 127, "open_issues": 300, "watchers": 2035, "default_branch": "master"}}, "base": {"label": "Rust-GCC:gcc-patch-dev", "ref": "gcc-patch-dev", "sha": "288b3b4f49431f750e5085d5f96144bcec510179", "user": {"login": "Rust-GCC", "id": 74917047, "node_id": "MDEyOk9yZ2FuaXphdGlvbjc0OTE3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/74917047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rust-GCC", "html_url": "https://github.com/Rust-GCC", "followers_url": "https://api.github.com/users/Rust-GCC/followers", "following_url": "https://api.github.com/users/Rust-GCC/following{/other_user}", "gists_url": "https://api.github.com/users/Rust-GCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rust-GCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rust-GCC/subscriptions", "organizations_url": "https://api.github.com/users/Rust-GCC/orgs", "repos_url": "https://api.github.com/users/Rust-GCC/repos", "events_url": "https://api.github.com/users/Rust-GCC/events{/privacy}", "received_events_url": "https://api.github.com/users/Rust-GCC/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 13653100, "node_id": "MDEwOlJlcG9zaXRvcnkxMzY1MzEwMA==", "name": "gccrs", "full_name": "Rust-GCC/gccrs", "private": false, "owner": {"login": "Rust-GCC", "id": 74917047, "node_id": "MDEyOk9yZ2FuaXphdGlvbjc0OTE3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/74917047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rust-GCC", "html_url": "https://github.com/Rust-GCC", "followers_url": "https://api.github.com/users/Rust-GCC/followers", "following_url": "https://api.github.com/users/Rust-GCC/following{/other_user}", "gists_url": "https://api.github.com/users/Rust-GCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rust-GCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rust-GCC/subscriptions", "organizations_url": "https://api.github.com/users/Rust-GCC/orgs", "repos_url": "https://api.github.com/users/Rust-GCC/repos", "events_url": "https://api.github.com/users/Rust-GCC/events{/privacy}", "received_events_url": "https://api.github.com/users/Rust-GCC/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Rust-GCC/gccrs", "description": "GCC Front-End for Rust", "fork": false, "url": "https://api.github.com/repos/Rust-GCC/gccrs", "forks_url": "https://api.github.com/repos/Rust-GCC/gccrs/forks", "keys_url": "https://api.github.com/repos/Rust-GCC/gccrs/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Rust-GCC/gccrs/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Rust-GCC/gccrs/teams", "hooks_url": "https://api.github.com/repos/Rust-GCC/gccrs/hooks", "issue_events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/events{/number}", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/events", "assignees_url": "https://api.github.com/repos/Rust-GCC/gccrs/assignees{/user}", "branches_url": "https://api.github.com/repos/Rust-GCC/gccrs/branches{/branch}", "tags_url": "https://api.github.com/repos/Rust-GCC/gccrs/tags", "blobs_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/{sha}", "languages_url": "https://api.github.com/repos/Rust-GCC/gccrs/languages", "stargazers_url": "https://api.github.com/repos/Rust-GCC/gccrs/stargazers", "contributors_url": "https://api.github.com/repos/Rust-GCC/gccrs/contributors", "subscribers_url": "https://api.github.com/repos/Rust-GCC/gccrs/subscribers", "subscription_url": "https://api.github.com/repos/Rust-GCC/gccrs/subscription", "commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/{+path}", "compare_url": "https://api.github.com/repos/Rust-GCC/gccrs/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Rust-GCC/gccrs/merges", "archive_url": "https://api.github.com/repos/Rust-GCC/gccrs/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Rust-GCC/gccrs/downloads", "issues_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues{/number}", "pulls_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls{/number}", "milestones_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones{/number}", "notifications_url": "https://api.github.com/repos/Rust-GCC/gccrs/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/labels{/name}", "releases_url": "https://api.github.com/repos/Rust-GCC/gccrs/releases{/id}", "deployments_url": "https://api.github.com/repos/Rust-GCC/gccrs/deployments", "created_at": "2013-10-17T15:30:28Z", "updated_at": "2023-06-20T09:08:24Z", "pushed_at": "2023-06-20T21:29:48Z", "git_url": "git://github.com/Rust-GCC/gccrs.git", "ssh_url": "git@github.com:Rust-GCC/gccrs.git", "clone_url": "https://github.com/Rust-GCC/gccrs.git", "svn_url": "https://github.com/Rust-GCC/gccrs", "homepage": "https://rust-gcc.github.io/", "size": 1252381, "stargazers_count": 2035, "watchers_count": 2035, "language": null, "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": true, "forks_count": 127, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 300, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0", "node_id": "MDc6TGljZW5zZTg="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "gcc", "gcc-rust", "hacktoberfest", "rust", "rust-lang"], "visibility": "public", "forks": 127, "open_issues": 300, "watchers": 2035, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/1745"}, "html": {"href": "https://github.com/Rust-GCC/gccrs/pull/1745"}, "issue": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1745"}, "comments": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1745/comments"}, "review_comments": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/1745/comments"}, "review_comment": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/1745/commits"}, "statuses": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/c1e661f5b939c08eca1167869d550fb4edee0148"}}, "author_association": "MEMBER", "auto_merge": null, "active_lock_reason": null, "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "comments": 0, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 14515, "deletions": 295, "changed_files": 8}