{"url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/308", "id": 601778339, "node_id": "MDExOlB1bGxSZXF1ZXN0NjAxNzc4MzM5", "html_url": "https://github.com/Rust-GCC/gccrs/pull/308", "diff_url": "https://github.com/Rust-GCC/gccrs/pull/308.diff", "patch_url": "https://github.com/Rust-GCC/gccrs/pull/308.patch", "issue_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/308", "number": 308, "state": "closed", "locked": false, "title": "Add ICE failing tests", "user": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "body": "As per @philberty 's advice, I've tried finding a few failing test cases for the compiler. In both of those cases, the behaviour is unexpected: `match_self.rs` produces a segfault, while `cfg_feature.rs` ends up in an infinite loop. Would you like me to also open up issues so that they can be documented?\r\n\r\nI'd also love to start hacking at the compiler to try and figure them out \r\n\r\nHere is the log for both files:\r\n\r\n<details><summary>match_self.rs</summary>\r\n<p>\r\n\r\n```sh\r\n>  gccrs ../gccrs/gcc/testsuite/rust.test/compilable/match_self.rs \r\nPreparing to parse files.\r\nAttempting to parse file: ../gccrs/gcc/testsuite/rust.test/compilable/match_self.rs\r\nbeginning null denotation self/self-alias/dollar/crate/super handling\r\ncurrent peek token when starting path pratt parse: '{'\r\ncurrent token (just about to return path to null denotation): '{'\r\njust finished parsing path (going to disambiguate) - peeked token is '{'\r\nabout to start parsing match arm patterns\r\nsuccessfully parsed initial match arm pattern\r\nsuccessfully parsed match arm patterns\r\nsuccessfully parsed match arm\r\nsuccessfully parsed inherent impl\r\nSUCCESSFULLY PARSED CRATE\r\nran register_plugins (with no body)\r\nSUCCESSFULLY REGISTERED PLUGINS\r\nstarted injection\r\nfinished injection\r\nSUCCESSFULLY FINISHED INJECTION\r\nstarted expansion\r\nfinished expansion\r\nSUCCESSFULLY FINISHED EXPANSION\r\nrust1: internal compiler error: Segmentation fault\r\n0xe9170f crash_signal\r\n\t../../gccrs/gcc/toplev.c:330\r\n0x98e2ea Rust::Resolver::TypeCheckExpr::Resolve(Rust::HIR::Expr*, bool)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.h:41\r\n0x98e773 Rust::Resolver::TypeCheckStmt::visit(Rust::HIR::ExprStmtWithBlock&)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check-stmt.h:44\r\n0x989e81 Rust::Resolver::TypeCheckStmt::Resolve(Rust::HIR::Stmt*, bool)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check-stmt.h:38\r\n0x989e81 operator()\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check.cc:93\r\n0x989e81 __invoke_impl<bool, Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::BlockExpr&)::<lambda(Rust::HIR::Stmt*)>&, Rust::HIR::Stmt*>\r\n\t/usr/include/c++/10.2.0/bits/invoke.h:60\r\n0x989e81 __invoke_r<bool, Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::BlockExpr&)::<lambda(Rust::HIR::Stmt*)>&, Rust::HIR::Stmt*>\r\n\t/usr/include/c++/10.2.0/bits/invoke.h:141\r\n0x989e81 _M_invoke\r\n\t/usr/include/c++/10.2.0/bits/std_function.h:291\r\n0x98a4f6 std::function<bool (Rust::HIR::Stmt*)>::operator()(Rust::HIR::Stmt*) const\r\n\t/usr/include/c++/10.2.0/bits/std_function.h:622\r\n0x98a4f6 Rust::HIR::BlockExpr::iterate_stmts(std::function<bool (Rust::HIR::Stmt*)>)\r\n\t../../gccrs/gcc/rust/hir/tree/rust-hir-expr.h:2576\r\n0x98a4f6 Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::BlockExpr&)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check.cc:88\r\n0x98e311 Rust::Resolver::TypeCheckExpr::Resolve(Rust::HIR::Expr*, bool)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.h:41\r\n0x98f489 Rust::Resolver::TypeCheckImplItem::visit(Rust::HIR::Method&)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check-implitem.h:246\r\n0x98c82d Rust::Resolver::TypeCheckImplItem::Resolve(Rust::HIR::InherentImplItem*, Rust::TyTy::BaseType*)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check-implitem.h:187\r\n0x98c82d Rust::Resolver::TypeCheckItem::visit(Rust::HIR::InherentImpl&)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check-item.h:55\r\n0x98a29b Rust::Resolver::TypeCheckItem::Resolve(Rust::HIR::Item*)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check-item.h:40\r\n0x98a29b Rust::Resolver::TypeResolution::Resolve(Rust::HIR::Crate&)\r\n\t../../gccrs/gcc/rust/typecheck/rust-hir-type-check.cc:42\r\n0x8b9661 Rust::Session::parse_file(char const*)\r\n\t../../gccrs/gcc/rust/rust-session-manager.cc:544\r\n0x8b9a7e Rust::Session::parse_files(int, char const**)\r\n\t../../gccrs/gcc/rust/rust-session-manager.cc:434\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nPlease include the complete backtrace with any bug report.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details><summary>cfg_feature.rs</summary>\r\n<p>\r\n\r\n```sh\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\nchecked key-value pair for cfg: 'feature', 'somefeature' - is not in target data\r\nasked to check cfg of attrinputmetaitemcontainer - delegating to first item. container: '(feature = \"somefeature\", attribute = \"someattr\")'\r\n...\r\n```\r\n\r\n</p>\r\n</details>", "created_at": "2021-03-26T17:02:05Z", "updated_at": "2021-04-26T21:25:39Z", "closed_at": "2021-04-26T21:25:39Z", "merged_at": null, "merge_commit_sha": "4467dca704ebf47c214a4adee7fc16b9f2da39c4", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/308/commits", "review_comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/308/comments", "review_comment_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/308/comments", "statuses_url": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/0814c81b127fc3b55e0f3a43d0dc0d7453cde527", "head": {"label": "CohenArthur:add-failing-tests", "ref": "add-failing-tests", "sha": "0814c81b127fc3b55e0f3a43d0dc0d7453cde527", "user": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "repo": {"id": 351759107, "node_id": "MDEwOlJlcG9zaXRvcnkzNTE3NTkxMDc=", "name": "gccrs", "full_name": "CohenArthur/gccrs", "private": false, "owner": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/CohenArthur/gccrs", "description": "GCC Front-End for Rust", "fork": true, "url": "https://api.github.com/repos/CohenArthur/gccrs", "forks_url": "https://api.github.com/repos/CohenArthur/gccrs/forks", "keys_url": "https://api.github.com/repos/CohenArthur/gccrs/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/CohenArthur/gccrs/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/CohenArthur/gccrs/teams", "hooks_url": "https://api.github.com/repos/CohenArthur/gccrs/hooks", "issue_events_url": "https://api.github.com/repos/CohenArthur/gccrs/issues/events{/number}", "events_url": "https://api.github.com/repos/CohenArthur/gccrs/events", "assignees_url": "https://api.github.com/repos/CohenArthur/gccrs/assignees{/user}", "branches_url": "https://api.github.com/repos/CohenArthur/gccrs/branches{/branch}", "tags_url": "https://api.github.com/repos/CohenArthur/gccrs/tags", "blobs_url": "https://api.github.com/repos/CohenArthur/gccrs/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/CohenArthur/gccrs/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/CohenArthur/gccrs/git/refs{/sha}", "trees_url": "https://api.github.com/repos/CohenArthur/gccrs/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/CohenArthur/gccrs/statuses/{sha}", "languages_url": "https://api.github.com/repos/CohenArthur/gccrs/languages", "stargazers_url": "https://api.github.com/repos/CohenArthur/gccrs/stargazers", "contributors_url": "https://api.github.com/repos/CohenArthur/gccrs/contributors", "subscribers_url": "https://api.github.com/repos/CohenArthur/gccrs/subscribers", "subscription_url": "https://api.github.com/repos/CohenArthur/gccrs/subscription", "commits_url": "https://api.github.com/repos/CohenArthur/gccrs/commits{/sha}", "git_commits_url": "https://api.github.com/repos/CohenArthur/gccrs/git/commits{/sha}", "comments_url": "https://api.github.com/repos/CohenArthur/gccrs/comments{/number}", "issue_comment_url": "https://api.github.com/repos/CohenArthur/gccrs/issues/comments{/number}", "contents_url": "https://api.github.com/repos/CohenArthur/gccrs/contents/{+path}", "compare_url": "https://api.github.com/repos/CohenArthur/gccrs/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/CohenArthur/gccrs/merges", "archive_url": "https://api.github.com/repos/CohenArthur/gccrs/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/CohenArthur/gccrs/downloads", "issues_url": "https://api.github.com/repos/CohenArthur/gccrs/issues{/number}", "pulls_url": "https://api.github.com/repos/CohenArthur/gccrs/pulls{/number}", "milestones_url": "https://api.github.com/repos/CohenArthur/gccrs/milestones{/number}", "notifications_url": "https://api.github.com/repos/CohenArthur/gccrs/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/CohenArthur/gccrs/labels{/name}", "releases_url": "https://api.github.com/repos/CohenArthur/gccrs/releases{/id}", "deployments_url": "https://api.github.com/repos/CohenArthur/gccrs/deployments", "created_at": "2021-03-26T11:27:40Z", "updated_at": "2022-01-03T14:09:19Z", "pushed_at": "2023-06-20T08:37:03Z", "git_url": "git://github.com/CohenArthur/gccrs.git", "ssh_url": "git@github.com:CohenArthur/gccrs.git", "clone_url": "https://github.com/CohenArthur/gccrs.git", "svn_url": "https://github.com/CohenArthur/gccrs", "homepage": "https://rust-gcc.github.io/", "size": 1252806, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 7, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0", "node_id": "MDc6TGljZW5zZTg="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 7, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Rust-GCC:master", "ref": "master", "sha": "dd194669e3a43bcfba7183540c77fb1ce56212c0", "user": {"login": "Rust-GCC", "id": 74917047, "node_id": "MDEyOk9yZ2FuaXphdGlvbjc0OTE3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/74917047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rust-GCC", "html_url": "https://github.com/Rust-GCC", "followers_url": "https://api.github.com/users/Rust-GCC/followers", "following_url": "https://api.github.com/users/Rust-GCC/following{/other_user}", "gists_url": "https://api.github.com/users/Rust-GCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rust-GCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rust-GCC/subscriptions", "organizations_url": "https://api.github.com/users/Rust-GCC/orgs", "repos_url": "https://api.github.com/users/Rust-GCC/repos", "events_url": "https://api.github.com/users/Rust-GCC/events{/privacy}", "received_events_url": "https://api.github.com/users/Rust-GCC/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 13653100, "node_id": "MDEwOlJlcG9zaXRvcnkxMzY1MzEwMA==", "name": "gccrs", "full_name": "Rust-GCC/gccrs", "private": false, "owner": {"login": "Rust-GCC", "id": 74917047, "node_id": "MDEyOk9yZ2FuaXphdGlvbjc0OTE3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/74917047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rust-GCC", "html_url": "https://github.com/Rust-GCC", "followers_url": "https://api.github.com/users/Rust-GCC/followers", "following_url": "https://api.github.com/users/Rust-GCC/following{/other_user}", "gists_url": "https://api.github.com/users/Rust-GCC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rust-GCC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rust-GCC/subscriptions", "organizations_url": "https://api.github.com/users/Rust-GCC/orgs", "repos_url": "https://api.github.com/users/Rust-GCC/repos", "events_url": "https://api.github.com/users/Rust-GCC/events{/privacy}", "received_events_url": "https://api.github.com/users/Rust-GCC/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Rust-GCC/gccrs", "description": "GCC Front-End for Rust", "fork": false, "url": "https://api.github.com/repos/Rust-GCC/gccrs", "forks_url": "https://api.github.com/repos/Rust-GCC/gccrs/forks", "keys_url": "https://api.github.com/repos/Rust-GCC/gccrs/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Rust-GCC/gccrs/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Rust-GCC/gccrs/teams", "hooks_url": "https://api.github.com/repos/Rust-GCC/gccrs/hooks", "issue_events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/events{/number}", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/events", "assignees_url": "https://api.github.com/repos/Rust-GCC/gccrs/assignees{/user}", "branches_url": "https://api.github.com/repos/Rust-GCC/gccrs/branches{/branch}", "tags_url": "https://api.github.com/repos/Rust-GCC/gccrs/tags", "blobs_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/{sha}", "languages_url": "https://api.github.com/repos/Rust-GCC/gccrs/languages", "stargazers_url": "https://api.github.com/repos/Rust-GCC/gccrs/stargazers", "contributors_url": "https://api.github.com/repos/Rust-GCC/gccrs/contributors", "subscribers_url": "https://api.github.com/repos/Rust-GCC/gccrs/subscribers", "subscription_url": "https://api.github.com/repos/Rust-GCC/gccrs/subscription", "commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/{+path}", "compare_url": "https://api.github.com/repos/Rust-GCC/gccrs/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Rust-GCC/gccrs/merges", "archive_url": "https://api.github.com/repos/Rust-GCC/gccrs/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Rust-GCC/gccrs/downloads", "issues_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues{/number}", "pulls_url": "https://api.github.com/repos/Rust-GCC/gccrs/pulls{/number}", "milestones_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones{/number}", "notifications_url": "https://api.github.com/repos/Rust-GCC/gccrs/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/labels{/name}", "releases_url": "https://api.github.com/repos/Rust-GCC/gccrs/releases{/id}", "deployments_url": "https://api.github.com/repos/Rust-GCC/gccrs/deployments", "created_at": "2013-10-17T15:30:28Z", "updated_at": "2023-06-20T09:08:24Z", "pushed_at": "2023-06-20T21:29:48Z", "git_url": "git://github.com/Rust-GCC/gccrs.git", "ssh_url": "git@github.com:Rust-GCC/gccrs.git", "clone_url": "https://github.com/Rust-GCC/gccrs.git", "svn_url": "https://github.com/Rust-GCC/gccrs", "homepage": "https://rust-gcc.github.io/", "size": 1252381, "stargazers_count": 2035, "watchers_count": 2035, "language": null, "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": true, "forks_count": 127, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 300, "license": {"key": "gpl-2.0", "name": "GNU General Public License v2.0", "spdx_id": "GPL-2.0", "url": "https://api.github.com/licenses/gpl-2.0", "node_id": "MDc6TGljZW5zZTg="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["compiler", "gcc", "gcc-rust", "hacktoberfest", "rust", "rust-lang"], "visibility": "public", "forks": 127, "open_issues": 300, "watchers": 2035, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/308"}, "html": {"href": "https://github.com/Rust-GCC/gccrs/pull/308"}, "issue": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/issues/308"}, "comments": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/issues/308/comments"}, "review_comments": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/308/comments"}, "review_comment": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/pulls/308/commits"}, "statuses": {"href": "https://api.github.com/repos/Rust-GCC/gccrs/statuses/0814c81b127fc3b55e0f3a43d0dc0d7453cde527"}}, "author_association": "MEMBER", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 22, "review_comments": 7, "maintainer_can_modify": false, "commits": 3, "additions": 24, "deletions": 0, "changed_files": 2}