{"sha": "7bfb3f488a7ec58109a859c66bf4eddc6354065b", "node_id": "C_kwDOANBUbNoAKDdiZmIzZjQ4OGE3ZWM1ODEwOWE4NTljNjZiZjRlZGRjNjM1NDA2NWI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-06-15T08:45:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-06-15T08:45:04Z"}, "message": "openmp: Fix up get-mapped-ptr-1.{c,f90} tests\n\nOn Tue, Jun 14, 2022 at 06:41:37PM +0200, Thomas Schwinge wrote:\n> In an offloading configuration, I'm seeing:\n>\n>     PASS: libgomp.fortran/get-mapped-ptr-1.f90   -O  (test for excess errors)\n>     [-PASS:-]{+FAIL:+} libgomp.fortran/get-mapped-ptr-1.f90   -O  execution test\n>\n> Does that one need similar treatment?\n\nI assume not just that but libgomp.c-c++-common/get-mapped-ptr-1.c too?\n\nIt both needs the same treatment, and in the get-mapped-ptr-1.c\ncase there is even UB, while the Fortran version was using c_loc (q)\nas the host pointer, in C/C++ it was using q which was value of\nuninitialized pointer.\n\n2022-06-15  Jakub Jelinek  <jakub@redhat.com>\n\n\t* testsuite/libgomp.c-c++-common/get-mapped-ptr-1.c (main): Initialize\n\tq to ddress of an automatic variable.  Use -5 instead of -1 in\n\tomp_get_mapped_ptr call.  Add test with omp_initial_device.\n\t* testsuite/libgomp.fortran/get-mapped-ptr-1.f90 (main): Use -5 instead\n\tof -1 in omp_get_mapped_ptr call.  Add test with omp_initial_device.\n\tRenumber stop arguments afterwards.", "tree": {"sha": "26fa99d006bd7db16cf9b7590fa0fe7decce88f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26fa99d006bd7db16cf9b7590fa0fe7decce88f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bfb3f488a7ec58109a859c66bf4eddc6354065b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bfb3f488a7ec58109a859c66bf4eddc6354065b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bfb3f488a7ec58109a859c66bf4eddc6354065b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bfb3f488a7ec58109a859c66bf4eddc6354065b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acb1e6f43dc2bbedd1248ea61c7ab537a11fe59b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb1e6f43dc2bbedd1248ea61c7ab537a11fe59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb1e6f43dc2bbedd1248ea61c7ab537a11fe59b"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "4708ae86bfe45bf58c06677a1dd6c7383a3bd86f", "filename": "libgomp/testsuite/libgomp.c-c++-common/get-mapped-ptr-1.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bfb3f488a7ec58109a859c66bf4eddc6354065b/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fget-mapped-ptr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bfb3f488a7ec58109a859c66bf4eddc6354065b/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fget-mapped-ptr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fget-mapped-ptr-1.c?ref=7bfb3f488a7ec58109a859c66bf4eddc6354065b", "patch": "@@ -6,7 +6,10 @@ main ()\n {\n   int d = omp_get_default_device ();\n   int id = omp_get_initial_device ();\n-  void *p , *q;\n+  int x;\n+  void *p, *q;\n+\n+  q = (void *) &x;\n \n   if (d < 0 || d >= omp_get_num_devices ())\n     d = id;\n@@ -18,7 +21,7 @@ main ()\n   if (omp_target_associate_ptr (q, p, sizeof (int), 0, d) != 0)\n     return 0;\n \n-  if (omp_get_mapped_ptr (q, -1) != NULL)\n+  if (omp_get_mapped_ptr (q, -5) != NULL)\n     abort ();\n \n   if (omp_get_mapped_ptr (q, omp_get_num_devices () + 1) != NULL)\n@@ -27,6 +30,9 @@ main ()\n   if (omp_get_mapped_ptr (q, id) != q)\n     abort ();\n \n+  if (omp_get_mapped_ptr (q, omp_initial_device) != q)\n+    abort ();\n+\n   if (omp_get_mapped_ptr (q, d) != p)\n     abort ();\n "}, {"sha": "9b6334f50d84c1f7983081292d8a51592e6e40a5", "filename": "libgomp/testsuite/libgomp.fortran/get-mapped-ptr-1.f90", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bfb3f488a7ec58109a859c66bf4eddc6354065b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fget-mapped-ptr-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bfb3f488a7ec58109a859c66bf4eddc6354065b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fget-mapped-ptr-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fget-mapped-ptr-1.f90?ref=7bfb3f488a7ec58109a859c66bf4eddc6354065b", "patch": "@@ -19,7 +19,7 @@ program main\n   if (omp_target_associate_ptr (c_loc (q), p, c_sizeof (q), &\n                                 0_c_size_t, d) == 0) then\n \n-    if(c_associated (omp_get_mapped_ptr (c_loc (q), -1))) &\n+    if(c_associated (omp_get_mapped_ptr (c_loc (q), -5))) &\n       stop 1\n \n     if(c_associated (omp_get_mapped_ptr (c_loc (q), &\n@@ -29,14 +29,18 @@ program main\n     if(.not. c_associated (omp_get_mapped_ptr (c_loc (q), id), c_loc (q))) &\n       stop 3\n \n-    if(.not. c_associated (omp_get_mapped_ptr (c_loc (q), d), p)) &\n+    if(.not. c_associated (omp_get_mapped_ptr (c_loc (q), omp_initial_device), &\n+                           c_loc (q))) &\n       stop 4\n \n-    if (omp_target_disassociate_ptr (c_loc (q), d) /= 0) &\n+    if(.not. c_associated (omp_get_mapped_ptr (c_loc (q), d), p)) &\n       stop 5\n \n-    if(c_associated (omp_get_mapped_ptr (c_loc (q), d))) &\n+    if (omp_target_disassociate_ptr (c_loc (q), d) /= 0) &\n       stop 6\n+\n+    if(c_associated (omp_get_mapped_ptr (c_loc (q), d))) &\n+      stop 7\n   end if\n \n   call omp_target_free (p, d)"}]}