{"sha": "86d7449cc673e466a64f2ad6203c3461049596ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZkNzQ0OWNjNjczZTQ2NmE2NGYyYWQ2MjAzYzM0NjEwNDk1OTZiYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-01-30T18:16:12Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-01-30T18:16:12Z"}, "message": "re PR fortran/47042 (ICE with character pointer in function)\n\n2011-01-31  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/47042\n        * interface.c (gfc_procedure_use): Add explicit interface check\n        * for\n        pointer/allocatable functions.\n\n2011-01-31  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/47042\n        * gfortran.dg/interface_34.f90: New.\n\nFrom-SVN: r169414", "tree": {"sha": "f0ca67c79c0c2bcbc505cde082abf425bbe2fdf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0ca67c79c0c2bcbc505cde082abf425bbe2fdf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86d7449cc673e466a64f2ad6203c3461049596ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d7449cc673e466a64f2ad6203c3461049596ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d7449cc673e466a64f2ad6203c3461049596ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d7449cc673e466a64f2ad6203c3461049596ba/comments", "author": null, "committer": null, "parents": [{"sha": "dafdf26963a622e074aeeeab399fbe33521d1baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dafdf26963a622e074aeeeab399fbe33521d1baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dafdf26963a622e074aeeeab399fbe33521d1baa"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "888432ebfbea82f78b25ab6d6928c106e6eaf5d8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d7449cc673e466a64f2ad6203c3461049596ba/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d7449cc673e466a64f2ad6203c3461049596ba/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=86d7449cc673e466a64f2ad6203c3461049596ba", "patch": "@@ -1,3 +1,9 @@\n+2011-01-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/47042\n+\t* interface.c (gfc_procedure_use): Add explicit interface check for\n+\tpointer/allocatable functions.\n+\n 2011-01-30  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/47523"}, {"sha": "1e5df61b5453e241b0d478debd0e1e6c6f9738eb", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d7449cc673e466a64f2ad6203c3461049596ba/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d7449cc673e466a64f2ad6203c3461049596ba/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=86d7449cc673e466a64f2ad6203c3461049596ba", "patch": "@@ -2686,6 +2686,30 @@ gfc_procedure_use (gfc_symbol *sym, gfc_actual_arglist **ap, locus *where)\n   if (sym->attr.if_source == IFSRC_UNKNOWN)\n     {\n       gfc_actual_arglist *a;\n+\n+      if (sym->attr.pointer)\n+\t{\n+\t  gfc_error(\"The pointer object '%s' at %L must have an explicit \"\n+\t\t    \"function interface or be declared as array\",\n+\t\t    sym->name, where);\n+\t  return;\n+\t}\n+\n+      if (sym->attr.allocatable && !sym->attr.external)\n+\t{\n+\t  gfc_error(\"The allocatable object '%s' at %L must have an explicit \"\n+\t\t    \"function interface or be declared as array\",\n+\t\t    sym->name, where);\n+\t  return;\n+\t}\n+\n+      if (sym->attr.allocatable)\n+\t{\n+\t  gfc_error(\"Allocatable function '%s' at %L must have an explicit \"\n+\t\t    \"function interface\", sym->name, where);\n+\t  return;\n+\t}\n+\n       for (a = *ap; a; a = a->next)\n \t{\n \t  /* Skip g77 keyword extensions like %VAL, %REF, %LOC.  */"}, {"sha": "4d432ef6d1710dee4c08b8753ccd6a4f6c796f06", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d7449cc673e466a64f2ad6203c3461049596ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d7449cc673e466a64f2ad6203c3461049596ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86d7449cc673e466a64f2ad6203c3461049596ba", "patch": "@@ -1,7 +1,13 @@\n+2011-01-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/47042\n+\t* gfortran.dg/interface_34.f90: New.\n+\n 2011-01-30  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/47523\n \t* gfortran.dg/realloc_on_assign_5.f03: New test.\n+\t* gfortran.dg/realloc_on_assign_5.f03: New test.\n \n 2011-01-29  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n "}, {"sha": "3e409d5643fae67f41542b2600251e639b5317ab", "filename": "gcc/testsuite/gfortran.dg/interface_34.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d7449cc673e466a64f2ad6203c3461049596ba/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_34.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d7449cc673e466a64f2ad6203c3461049596ba/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_34.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_34.f90?ref=86d7449cc673e466a64f2ad6203c3461049596ba", "patch": "@@ -0,0 +1,33 @@\n+! { dg-compile }\n+!\n+! PR fortran/47042\n+!\n+! Contribued by Jerry DeLisle\n+!\n+\n+program bug\n+\n+contains\n+function get_cstring ()\n+  character              :: get_cstring\n+  character, pointer     :: ptmp\n+  character, allocatable :: atmp\n+\n+  get_cstring = ptmp(i) ! { dg-error \"must have an explicit function interface\" }\n+  get_cstring = atmp(i) ! { dg-error \"must have an explicit function interface\" }\n+end function\n+\n+function get_cstring2 ()\n+  EXTERNAL :: ptmp, atmp\n+  character              :: get_cstring2\n+  character, pointer     :: ptmp\n+  character, allocatable :: atmp\n+\n+  get_cstring2 = atmp(i) ! { dg-error \"must have an explicit function interface\" }\n+\n+  ! The following is regarded as call to a procedure pointer,\n+  ! which is in principle valid:\n+  get_cstring2 = ptmp(i)\n+end function\n+\n+end program"}]}