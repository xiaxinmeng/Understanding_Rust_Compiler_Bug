{"sha": "738f7c2e12de922b91024717429a048b877492ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM4ZjdjMmUxMmRlOTIyYjkxMDI0NzE3NDI5YTA0OGI4Nzc0OTJlZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-07-07T18:49:09Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-07-07T18:49:09Z"}, "message": "libcpp: preserve ranges within macro expansions (PR c++/79300)\n\ngcc/testsuite/ChangeLog:\n\tPR c++/79300\n\t* g++.dg/diagnostic/pr79300.C: New test case.\n\nlibcpp/ChangeLog:\n\tPR c++/79300\n\t* line-map.c (linemap_macro_loc_to_def_point): Preserve range\n\tinformation for macro expansions by delaying resolving ad-hoc\n\tlocations until within the loop.\n\nFrom-SVN: r250058", "tree": {"sha": "1b954335f19a816878f1e5806bb1ecff2760223b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b954335f19a816878f1e5806bb1ecff2760223b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/738f7c2e12de922b91024717429a048b877492ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738f7c2e12de922b91024717429a048b877492ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/738f7c2e12de922b91024717429a048b877492ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738f7c2e12de922b91024717429a048b877492ee/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57f49e990f52ebdd3cb4a5be4e87a2301fed1a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f49e990f52ebdd3cb4a5be4e87a2301fed1a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f49e990f52ebdd3cb4a5be4e87a2301fed1a1a"}], "stats": {"total": 70, "additions": 64, "deletions": 6}, "files": [{"sha": "73db4a70eca6348ca51c04057384d1cf85e7f49a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738f7c2e12de922b91024717429a048b877492ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738f7c2e12de922b91024717429a048b877492ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=738f7c2e12de922b91024717429a048b877492ee", "patch": "@@ -1,3 +1,8 @@\n+2017-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/79300\n+\t* g++.dg/diagnostic/pr79300.C: New test case.\n+\n 2017-07-07  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/clone1.c: Add check to make sure the"}, {"sha": "6805e85873ff2951ee099efe33bd5af3bd76ee5a", "filename": "gcc/testsuite/g++.dg/diagnostic/pr79300.C", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738f7c2e12de922b91024717429a048b877492ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr79300.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738f7c2e12de922b91024717429a048b877492ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr79300.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr79300.C?ref=738f7c2e12de922b91024717429a048b877492ee", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-fdiagnostics-show-caret\" }\n+\n+#define TEST_1_DEPTH_0 throw bad_alloc; // { dg-line define_TEST_1_DEPTH_0 }\n+\n+void test_1 ()\n+{\n+  TEST_1_DEPTH_0 // { dg-line use_TEST_1_DEPTH_0 }\n+}\n+\n+// { dg-error \"'bad_alloc' was not declared in this scope\" \"\" { target *-*-* } define_TEST_1_DEPTH_0 }\n+/* { dg-begin-multiline-output \"\" }\n+ #define TEST_1_DEPTH_0 throw bad_alloc;\n+                              ^~~~~~~~~\n+   { dg-end-multiline-output \"\" } */\n+// { dg-message \"in expansion of macro 'TEST_1_DEPTH_0'\" \"\" { target *-*-* } use_TEST_1_DEPTH_0 }\n+/* { dg-begin-multiline-output \"\" }\n+   TEST_1_DEPTH_0\n+   ^~~~~~~~~~~~~~\n+   { dg-end-multiline-output \"\" } */\n+\n+\n+#define TEST_2_DEPTH_0 throw bad_alloc; // { dg-line define_TEST_2_DEPTH_0 }\n+#define TEST_2_DEPTH_1 TEST_2_DEPTH_0 // { dg-line define_TEST_2_DEPTH_1 }\n+\n+void test_2 ()\n+{\n+  TEST_2_DEPTH_1 // { dg-line use_TEST_2_DEPTH_1 }\n+}\n+\n+// { dg-error \"'bad_alloc' was not declared in this scope\" \"\" { target *-*-* } define_TEST_2_DEPTH_0 }\n+/* { dg-begin-multiline-output \"\" }\n+ #define TEST_2_DEPTH_0 throw bad_alloc;\n+                              ^~~~~~~~~\n+   { dg-end-multiline-output \"\" } */\n+// { dg-message \"in expansion of macro 'TEST_2_DEPTH_0'\" \"\" { target *-*-* } define_TEST_2_DEPTH_1 }\n+/* { dg-begin-multiline-output \"\" }\n+ #define TEST_2_DEPTH_1 TEST_2_DEPTH_0\n+                        ^~~~~~~~~~~~~~\n+   { dg-end-multiline-output \"\" } */\n+// { dg-message \"in expansion of macro 'TEST_2_DEPTH_1'\" \"\" { target *-*-* } use_TEST_2_DEPTH_1 }\n+/* { dg-begin-multiline-output \"\" }\n+   TEST_2_DEPTH_1\n+   ^~~~~~~~~~~~~~\n+   { dg-end-multiline-output \"\" } */"}, {"sha": "cf6f924ac955894cfc8e596238be77c21405e062", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738f7c2e12de922b91024717429a048b877492ee/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738f7c2e12de922b91024717429a048b877492ee/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=738f7c2e12de922b91024717429a048b877492ee", "patch": "@@ -1,3 +1,10 @@\n+2017-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/79300\n+\t* line-map.c (linemap_macro_loc_to_def_point): Preserve range\n+\tinformation for macro expansions by delaying resolving ad-hoc\n+\tlocations until within the loop.\n+\n 2017-07-06  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/79300"}, {"sha": "0e5804b65bc9ae2d1460a83e674bb8242cf20ae3", "filename": "libcpp/line-map.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738f7c2e12de922b91024717429a048b877492ee/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738f7c2e12de922b91024717429a048b877492ee/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=738f7c2e12de922b91024717429a048b877492ee", "patch": "@@ -1440,21 +1440,23 @@ linemap_macro_loc_to_def_point (struct line_maps *set,\n {\n   struct line_map *map;\n \n-  if (IS_ADHOC_LOC (location))\n-    location = set->location_adhoc_data_map.data[location\n-\t\t\t\t\t\t & MAX_SOURCE_LOCATION].locus;\n-\n   linemap_assert (set && location >= RESERVED_LOCATION_COUNT);\n \n   while (true)\n     {\n-      map = const_cast <line_map *> (linemap_lookup (set, location));\n+      source_location caret_loc;\n+      if (IS_ADHOC_LOC (location))\n+\tcaret_loc = get_location_from_adhoc_loc (set, location);\n+      else\n+\tcaret_loc = location;\n+\n+      map = const_cast <line_map *> (linemap_lookup (set, caret_loc));\n       if (!linemap_macro_expansion_map_p (map))\n \tbreak;\n \n       location =\n \tlinemap_macro_map_loc_to_def_point (linemap_check_macro (map),\n-\t\t\t\t\t    location);\n+\t\t\t\t\t    caret_loc);\n     }\n \n   if (original_map)"}]}