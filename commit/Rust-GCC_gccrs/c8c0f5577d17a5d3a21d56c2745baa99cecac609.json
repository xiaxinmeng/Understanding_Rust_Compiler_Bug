{"sha": "c8c0f5577d17a5d3a21d56c2745baa99cecac609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhjMGY1NTc3ZDE3YTVkM2EyMWQ1NmMyNzQ1YmFhOTljZWNhYzYwOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-10-29T21:33:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-10-29T21:33:29Z"}, "message": "re PR libstdc++/58839 (dereferencing void* in shared_ptr(unique_ptr&& u) constructor)\n\n\tPR libstdc++/58839\n\t* include/bits/shared_ptr_base.h\n\t(__shared_ptr<T>::__shared_ptr(unique_ptr<U,D>&&)): Only use addressof\n\twhen unique_ptr<U,D>::pointer is not a built-in pointer type.\n\t* testsuite/20_util/shared_ptr/cons/58839.cc: New.\n\t* testsuite/20_util/enable_shared_from_this/members/assign.cc: New.\n\t* testsuite/20_util/enable_shared_from_this/members/unique_ptr.cc: New.\n\nFrom-SVN: r204184", "tree": {"sha": "0a91ae3bd7a3a6ab1173d9fd2aef6e767e51e482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a91ae3bd7a3a6ab1173d9fd2aef6e767e51e482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8c0f5577d17a5d3a21d56c2745baa99cecac609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c0f5577d17a5d3a21d56c2745baa99cecac609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c0f5577d17a5d3a21d56c2745baa99cecac609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c0f5577d17a5d3a21d56c2745baa99cecac609/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da2e699194f99f7e731ead5d679338b0ad832111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da2e699194f99f7e731ead5d679338b0ad832111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da2e699194f99f7e731ead5d679338b0ad832111"}], "stats": {"total": 151, "additions": 149, "deletions": 2}, "files": [{"sha": "1cc290a650fbb2b5abbae2bcf0f27afccf826118", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c8c0f5577d17a5d3a21d56c2745baa99cecac609", "patch": "@@ -1,3 +1,13 @@\n+2013-10-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/58839\n+\t* include/bits/shared_ptr_base.h\n+\t(__shared_ptr<T>::__shared_ptr(unique_ptr<U,D>&&)): Only use addressof\n+\twhen unique_ptr<U,D>::pointer is not a built-in pointer type.\n+\t* testsuite/20_util/shared_ptr/cons/58839.cc: New.\n+\t* testsuite/20_util/enable_shared_from_this/members/assign.cc: New.\n+\t* testsuite/20_util/enable_shared_from_this/members/unique_ptr.cc: New.\n+\n 2013-10-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/bits/hashtable.cc (__access_protected_ctor): Define and use"}, {"sha": "91b63677b73816e22178090167c7130434c1f44d", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=c8c0f5577d17a5d3a21d56c2745baa99cecac609", "patch": "@@ -855,9 +855,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t: _M_ptr(__r.get()), _M_refcount()\n \t{\n \t  __glibcxx_function_requires(_ConvertibleConcept<_Tp1*, _Tp*>)\n-\t  auto __tmp = std::__addressof(*__r.get());\n+\t  auto __raw = _S_raw_ptr(__r.get());\n \t  _M_refcount = __shared_count<_Lp>(std::move(__r));\n-\t  __enable_shared_from_this_helper(_M_refcount, __tmp, __tmp);\n+\t  __enable_shared_from_this_helper(_M_refcount, __raw, __raw);\n \t}\n \n #if _GLIBCXX_USE_DEPRECATED\n@@ -1048,6 +1048,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _M_get_deleter(const std::type_info& __ti) const noexcept\n       { return _M_refcount._M_get_deleter(__ti); }\n \n+      template<typename _Tp1>\n+\tstatic _Tp1*\n+\t_S_raw_ptr(_Tp1* __ptr)\n+\t{ return __ptr; }\n+\n+      template<typename _Tp1>\n+\tstatic auto\n+\t_S_raw_ptr(_Tp1 __ptr) -> decltype(std::__addressof(*__ptr))\n+\t{ return std::__addressof(*__ptr); }\n+\n       template<typename _Tp1, _Lock_policy _Lp1> friend class __shared_ptr;\n       template<typename _Tp1, _Lock_policy _Lp1> friend class __weak_ptr;\n "}, {"sha": "24ab926ba81ec38153712fe5bbd351ad0a84c197", "filename": "libstdc++-v3/testsuite/20_util/enable_shared_from_this/members/assign.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Fassign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Fassign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Fassign.cc?ref=c8c0f5577d17a5d3a21d56c2745baa99cecac609", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++11\" }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+#include <testsuite_hooks.h>\n+\n+struct X : public std::enable_shared_from_this<X> { };\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  auto x1 = std::make_shared<X>(), x2 = std::make_shared<X>();\n+  *x1 = *x2;\n+  VERIFY( x1->shared_from_this() != x2->shared_from_this() );\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "9f0eaa72a39b9718dec243fb075ecca708b93804", "filename": "libstdc++-v3/testsuite/20_util/enable_shared_from_this/members/unique_ptr.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Funique_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Funique_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2Fmembers%2Funique_ptr.cc?ref=c8c0f5577d17a5d3a21d56c2745baa99cecac609", "patch": "@@ -0,0 +1,62 @@\n+// { dg-options \"-std=gnu++11\" }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+#include <ext/pointer.h>\n+#include <testsuite_hooks.h>\n+\n+struct X : public std::enable_shared_from_this<X> { };\n+\n+void test01()\n+{\n+  std::unique_ptr<X> up(new X);\n+  X* xp = up.get();\n+  std::shared_ptr<X> sp(std::move(up));\n+  VERIFY( xp->shared_from_this() != nullptr );\n+}\n+\n+using __gnu_cxx::_Pointer_adapter;\n+using __gnu_cxx::_Std_pointer_impl;\n+\n+struct Deleter\n+{\n+  struct pointer : _Pointer_adapter<_Std_pointer_impl<X>>\n+  {\n+    using _Pointer_adapter::_Pointer_adapter;\n+    operator X*() const noexcept { return this->get(); }\n+  };\n+\n+  void operator()(pointer p) const noexcept { delete (X*)p; }\n+};\n+\n+void test02()\n+{\n+  std::unique_ptr<X, Deleter> up(new X);\n+  Deleter::pointer xp = up.get();\n+  // Creating shared_ptr from unique_ptr with custom pointer is an extension:\n+  std::shared_ptr<X> sp(std::move(up));\n+  // but enable_shared_from_this should still work:\n+  VERIFY( xp->shared_from_this() != nullptr );\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+}"}, {"sha": "6ad256461ea00e72144bcac3d644895d3125c8e5", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/58839.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F58839.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c0f5577d17a5d3a21d56c2745baa99cecac609/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F58839.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F58839.cc?ref=c8c0f5577d17a5d3a21d56c2745baa99cecac609", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+\n+// libstdc++/58839\n+\n+void test01()\n+{\n+  std::unique_ptr<void> y;\n+  std::shared_ptr<void> x = std::move(y);\n+}"}]}