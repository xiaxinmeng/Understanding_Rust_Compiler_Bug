{"sha": "67f95586afba2756e279f9d59a63a8f35a8d95f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmOTU1ODZhZmJhMjc1NmUyNzlmOWQ1OWE2M2E4ZjM1YThkOTVmMQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-12-11T12:25:05Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-12-11T12:25:05Z"}, "message": "re PR middle-end/59399 (ICE in expand_expr_real_1 with -m64 -fsanitize=signed-integer-overflow)\n\n\tPR sanitizer/59399\n\t* expr.c (expand_expr_real_1): Remove assert dealing with\n\tinternal calls and turn that into a condition instead.\n\nFrom-SVN: r205888", "tree": {"sha": "29a9321e280f6bf8abf05f572386ad4b302eb0d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29a9321e280f6bf8abf05f572386ad4b302eb0d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67f95586afba2756e279f9d59a63a8f35a8d95f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f95586afba2756e279f9d59a63a8f35a8d95f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f95586afba2756e279f9d59a63a8f35a8d95f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f95586afba2756e279f9d59a63a8f35a8d95f1/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e15aa62309c68972b155741ca15c9ac01a9e14a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15aa62309c68972b155741ca15c9ac01a9e14a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15aa62309c68972b155741ca15c9ac01a9e14a9"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "8a8f8a996a2e9a8c167254fa7f580ba2592ac37c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f95586afba2756e279f9d59a63a8f35a8d95f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f95586afba2756e279f9d59a63a8f35a8d95f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67f95586afba2756e279f9d59a63a8f35a8d95f1", "patch": "@@ -1,3 +1,9 @@\n+2013-12-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/59399\n+\t* expr.c (expand_expr_real_1): Remove assert dealing with\n+\tinternal calls and turn that into a condition instead.\n+\n 2013-12-11  Yvan Roux  <yvan.roux@linaro.org>\n \n \t* config/arm/arm.opt (mlra): Enable LRA by default."}, {"sha": "225555eaf3b48d6503c1dbd0f2d91734fcaba262", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f95586afba2756e279f9d59a63a8f35a8d95f1/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f95586afba2756e279f9d59a63a8f35a8d95f1/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=67f95586afba2756e279f9d59a63a8f35a8d95f1", "patch": "@@ -9482,13 +9482,11 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t     the same mode we got when the variable was declared.  */\n \t  if (code == SSA_NAME\n \t      && (g = SSA_NAME_DEF_STMT (ssa_name))\n-\t      && gimple_code (g) == GIMPLE_CALL)\n-\t    {\n-\t      gcc_assert (!gimple_call_internal_p (g));\n-\t      pmode = promote_function_mode (type, mode, &unsignedp,\n-\t\t\t\t\t     gimple_call_fntype (g),\n-\t\t\t\t\t     2);\n-\t    }\n+\t      && gimple_code (g) == GIMPLE_CALL\n+\t      && !gimple_call_internal_p (g))\n+\t    pmode = promote_function_mode (type, mode, &unsignedp,\n+\t\t\t\t\t   gimple_call_fntype (g),\n+\t\t\t\t\t   2);\n \t  else\n \t    pmode = promote_decl_mode (exp, &unsignedp);\n \t  gcc_assert (GET_MODE (decl_rtl) == pmode);"}]}