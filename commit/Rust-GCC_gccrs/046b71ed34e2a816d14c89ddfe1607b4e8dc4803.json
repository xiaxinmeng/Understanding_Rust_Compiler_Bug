{"sha": "046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2YjcxZWQzNGUyYTgxNmQxNGM4OWRkZmUxNjA3YjRlOGRjNDgwMw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-12-09T15:50:13Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-12-09T15:50:13Z"}, "message": "3b1.h (ASM_OUTPUT_ALIGN): Wrap in do-while(0).\n\n\t* m68k/3b1.h (ASM_OUTPUT_ALIGN): Wrap in do-while(0).\n\t* m68k/amix.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t* m68k/atari.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t* m68k/hp320.h (ASM_OUTPUT_ALIGN): Likewise.\n\t* m68k/m68kelf.h (ASM_OUTPUT_ALIGN): Likewise.\n\t* m68k/sgs.h (ASM_OUTPUT_ALIGN): Likewise.\n\t* m68k/tower-as.h (ASM_OUTPUT_ALIGN): Likewise.\n\nFrom-SVN: r47810", "tree": {"sha": "667d5e419c3b9af2349ac0381c3b9e1f0b7db0ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/667d5e419c3b9af2349ac0381c3b9e1f0b7db0ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/comments", "author": null, "committer": null, "parents": [{"sha": "e92210700653a28cd04777f8da304f2ddbfff1ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92210700653a28cd04777f8da304f2ddbfff1ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e92210700653a28cd04777f8da304f2ddbfff1ec"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "558ca3c8294ec595516700b3253cc8bb41b14fa5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "patch": "@@ -1,3 +1,13 @@\n+2001-12-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* m68k/3b1.h (ASM_OUTPUT_ALIGN): Wrap in do-while(0).\n+\t* m68k/amix.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* m68k/atari.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* m68k/hp320.h (ASM_OUTPUT_ALIGN): Likewise.\n+\t* m68k/m68kelf.h (ASM_OUTPUT_ALIGN): Likewise.\n+\t* m68k/sgs.h (ASM_OUTPUT_ALIGN): Likewise.\n+\t* m68k/tower-as.h (ASM_OUTPUT_ALIGN): Likewise.\n+\n 2001-12-08  Tom Rix  <trix@redhat.com>\n \n \t* config/rs6000/aix43.h (NON_POWERPC_MASKS): Delete MASK_STRING."}, {"sha": "936a173c9ddf5ba4845a6a4822e3d28ab0ded057", "filename": "gcc/config/m68k/3b1.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2F3b1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2F3b1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2F3b1.h?ref=046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "patch": "@@ -151,10 +151,12 @@ do { long l;\t\t\t\t\t\\\n    } while (0)\n \n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n+do {\t\t\t\t\t\\\n   if ((LOG) == 1)\t\t\t\\\n     fprintf (FILE, \"\\teven\\n\");\t\\\n   else if ((LOG) != 0)\t\t\t\\\n-    abort ();\n+    abort ();\t\t\t\t\\\n+} while (0)\n \n /* This is how to output an assembler line\n    that says to advance the location counter by SIZE bytes.  */"}, {"sha": "0d440de0e70d446c4bb153e4f2174f3bf1711fce", "filename": "gcc/config/m68k/amix.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Famix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Famix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Famix.h?ref=046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "patch": "@@ -136,10 +136,12 @@ do {\t\t\t\t\t\t\t\t\\\n \n #undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n+do {\t\t\t\t\t\t\t\\\n   if (flag_pic && !strcmp(PREFIX,\"LC\"))\t\t\t\\\n-    sprintf (LABEL, \"*%s%%%ld\", PREFIX, (long)(NUM));\t\t\\\n+    sprintf (LABEL, \"*%s%%%ld\", PREFIX, (long)(NUM));\t\\\n   else\t\t\t\t\t\t\t\\\n-    sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long)(NUM))\n+    sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long)(NUM)); \\\n+} while (0)\n \n #undef ASM_OUTPUT_INTERNAL_LABEL\n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\"}, {"sha": "75511ece43c36b29c6351e480d24d0458c1dd45a", "filename": "gcc/config/m68k/atari.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Fatari.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Fatari.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fatari.h?ref=046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "patch": "@@ -93,10 +93,12 @@ int switch_table_difference_label_flag;\n \n #undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n+do {\t\t\t\t\t\t\t\\\n   if (flag_pic && !strcmp(PREFIX,\"LC\"))\t\t\t\\\n     sprintf (LABEL, \"*%s%%%ld\", PREFIX, (long)(NUM));\t\\\n   else\t\t\t\t\t\t\t\\\n-    sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long)(NUM))\n+    sprintf (LABEL, \"*%s%s%ld\", LOCAL_LABEL_PREFIX, PREFIX, (long)(NUM)); \\\n+} while (0)\n \n #undef ASM_OUTPUT_INTERNAL_LABEL\n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM)\t\\"}, {"sha": "17d9d6a0b323a39431c60ef7eaabc1f6a7f58d2b", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "patch": "@@ -317,10 +317,12 @@ do { long l[3];\t\t\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\tshort L%d-L%d\\n\", VALUE, REL)\n \n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n+do {\t\t\t\t\t\\\n   if ((LOG) == 1)\t\t\t\\\n     fprintf (FILE, \"\\tlalign 2\\n\");\t\\\n   else if ((LOG) != 0)\t\t\t\\\n-    abort ();\n+    abort ();\t\t\t\t\\\n+} while (0)\n \n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n   fprintf (FILE, \"\\tspace %u\\n\", (SIZE))"}, {"sha": "ae47c195dfe43a0af1069be770b7a67d6ce9c226", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "patch": "@@ -98,10 +98,12 @@ Boston, MA 02111-1307, USA.  */\n \n #undef ASM_OUTPUT_ALIGN\n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n   if ((LOG) > 0)\t\t\t\t\t\t\\\n     fprintf ((FILE), \"%s%u\\n\", ALIGN_ASM_OP, 1 << (LOG));\t\\\n   else if ((LOG) > 31)\t\t\t\t\t\t\\\n-    abort ();\n+    abort ();\t\t\t\t\t\t\t\\\n+} while (0)\n \n /* Use proper assembler syntax for these macros.  */\n #undef ASM_OUTPUT_REG_PUSH"}, {"sha": "6f30ee1bba2c8bbfc853763208ddefefdef91f51", "filename": "gcc/config/m68k/sgs.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Fsgs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Fsgs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsgs.h?ref=046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "patch": "@@ -143,10 +143,12 @@ do { long l;\t\t\t\t\t\t\\\n \n #undef ASM_OUTPUT_ALIGN\n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n   if ((LOG) > 0)\t\t\t\t\t\t\\\n     fprintf ((FILE), \"%s%u\\n\", ALIGN_ASM_OP, 1 << (LOG));\t\\\n   else if ((LOG) > 31)\t\t\t\t\t\t\\\n-    abort ();\n+    abort ();\t\t\t\t\t\t\t\\\n+} while (0)\n \n /* The routine used to output null terminated string literals.  We cannot\n    use the \".string\" pseudo op, because it silently truncates strings to"}, {"sha": "5b491af66da2efa6f3f03073547dcefbb071c276", "filename": "gcc/config/m68k/tower-as.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046b71ed34e2a816d14c89ddfe1607b4e8dc4803/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ftower-as.h?ref=046b71ed34e2a816d14c89ddfe1607b4e8dc4803", "patch": "@@ -314,10 +314,12 @@ do { long l;\t\t\t\t\t\\\n \n #undef ASM_OUTPUT_ALIGN\n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n+do {\t\t\t\t\t\\\n   if ((LOG) == 1)\t\t\t\\\n     fprintf (FILE, \"\\teven\\n\");\t        \\\n   else if ((LOG) != 0)\t\t\t\\\n-    abort ();\n+    abort ();\t\t\t\t\\\n+} while (0)\n \n #undef ASM_OUTPUT_SKIP\n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\"}]}