{"sha": "0609b35537e3c1c5677632064635e24bc257ee25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYwOWIzNTUzN2UzYzFjNTY3NzYzMjA2NDYzNWUyNGJjMjU3ZWUyNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-07T14:19:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-07T14:19:17Z"}, "message": "tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Non-aliased decls are only used if passes as parameters or if...\n\n2009-04-07  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Non-aliased\n\tdecls are only used if passes as parameters or if they are\n\tlocal statics and the call is not to a builtin.\n\t(call_may_clobber_ref_p_1): Likewise.\n\nFrom-SVN: r145676", "tree": {"sha": "ec3035cfe629873603d5a1adbd802860a839d078", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec3035cfe629873603d5a1adbd802860a839d078"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0609b35537e3c1c5677632064635e24bc257ee25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0609b35537e3c1c5677632064635e24bc257ee25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0609b35537e3c1c5677632064635e24bc257ee25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0609b35537e3c1c5677632064635e24bc257ee25/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c27f2f15fde7c742e7b6fa996a7b35cf5e8c9f66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c27f2f15fde7c742e7b6fa996a7b35cf5e8c9f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c27f2f15fde7c742e7b6fa996a7b35cf5e8c9f66"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "13c4eb2ffb2fc851976a037a17cc284ffb033024", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0609b35537e3c1c5677632064635e24bc257ee25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0609b35537e3c1c5677632064635e24bc257ee25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0609b35537e3c1c5677632064635e24bc257ee25", "patch": "@@ -1,3 +1,10 @@\n+2009-04-07  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Non-aliased\n+\tdecls are only used if passes as parameters or if they are\n+\tlocal statics and the call is not to a builtin.\n+\t(call_may_clobber_ref_p_1): Likewise.\n+\n 2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* expr.c (do_store_flag): Remove last argument.  Simplify code"}, {"sha": "f97502a606aead61fbf783cc250fb187f6f3fdd6", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0609b35537e3c1c5677632064635e24bc257ee25/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0609b35537e3c1c5677632064635e24bc257ee25/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=0609b35537e3c1c5677632064635e24bc257ee25", "patch": "@@ -737,7 +737,7 @@ refs_may_alias_p (tree ref1, tree ref2)\n static bool\n ref_maybe_used_by_call_p_1 (gimple call, tree ref)\n {\n-  tree base;\n+  tree base, fndecl;\n   unsigned i;\n   int flags = gimple_call_flags (call);\n \n@@ -754,6 +754,20 @@ ref_maybe_used_by_call_p_1 (gimple call, tree ref)\n       || !DECL_P (base))\n     return true;\n \n+  /* If the reference is based on a decl that is not aliased the call\n+     cannot possibly use it.  */\n+  if (DECL_P (base)\n+      && !may_be_aliased (base)\n+      /* But local statics can be used through recursion!  */\n+      && (!is_global_var (base)\n+\t  /* But not via builtins.\n+\t     ???  We just assume that this is true if we are not a\n+\t     builtin function ourself.  */\n+\t  || (!DECL_BUILT_IN (cfun->decl)\n+\t      && (fndecl = gimple_call_fndecl (call))\n+\t      && DECL_BUILT_IN (fndecl))))\n+    goto process_args;\n+\n   /* Check if base is a global static variable that is not read\n      by the function.  */\n   if (TREE_CODE (base) == VAR_DECL\n@@ -851,7 +865,7 @@ ref_maybe_used_by_stmt_p (gimple stmt, tree ref)\n static bool\n call_may_clobber_ref_p_1 (gimple call, tree ref)\n {\n-  tree base;\n+  tree fndecl, base;\n \n   /* If the call is pure or const it cannot clobber anything.  */\n   if (gimple_call_flags (call)\n@@ -866,6 +880,21 @@ call_may_clobber_ref_p_1 (gimple call, tree ref)\n       || CONSTANT_CLASS_P (base))\n     return false;\n \n+  /* If the reference is based on a decl that is not aliased the call\n+     cannot possibly clobber it.  */\n+  if (DECL_P (base)\n+      && !may_be_aliased (base)\n+      /* But local non-readonly statics can be modified through recursion!  */\n+      && (TREE_READONLY (base)\n+\t  || !is_global_var (base)\n+\t  /* But not via builtins.\n+\t     ???  We just assume that this is true if we are not a\n+\t     builtin function ourself.  */\n+\t  || (!DECL_BUILT_IN (cfun->decl)\n+\t      && (fndecl = gimple_call_fndecl (call))\n+\t      && DECL_BUILT_IN (fndecl))))\n+    return false;\n+\n   /* Check if base is a global static variable that is not written\n      by the function.  */\n   if (TREE_CODE (base) == VAR_DECL"}]}