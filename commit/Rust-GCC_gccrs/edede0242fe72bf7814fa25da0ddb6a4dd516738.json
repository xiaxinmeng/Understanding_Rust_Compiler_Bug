{"sha": "edede0242fe72bf7814fa25da0ddb6a4dd516738", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRlZGUwMjQyZmU3MmJmNzgxNGZhMjVkYTBkZGI2YTRkZDUxNjczOA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2007-09-05T14:33:48Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2007-09-05T14:33:48Z"}, "message": "mips.c (mips_legitimize_tls_address): Call sorry if we encounter TLS address in MIPS16 mode.\n\n2007-09-05  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* config/mips/mips.c (mips_legitimize_tls_address): Call sorry\n\tif we encounter TLS address in MIPS16 mode.\n\t(mips_legitimize_const_move):  Check cannot_force_const_mem for\n\tthe (const (plus symbol offset)) case; this forces invalid TLS\n\taddress in MIPS16 mode to be caught by the above call to sorry.\n\t(override_options): Don't reset targetm.have_tls in MIPS16 mode,\n\tbecause that now enables emutls, which is not ABI compatible\n\twith native TLS in non-MIPS16 mode.\n\nFrom-SVN: r128133", "tree": {"sha": "edbc99a79858da6dd3a8b15ed4569cd3fa92a054", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edbc99a79858da6dd3a8b15ed4569cd3fa92a054"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edede0242fe72bf7814fa25da0ddb6a4dd516738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edede0242fe72bf7814fa25da0ddb6a4dd516738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edede0242fe72bf7814fa25da0ddb6a4dd516738", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edede0242fe72bf7814fa25da0ddb6a4dd516738/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db2960f402c407aa41fe09d5195da5c414ae79af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2960f402c407aa41fe09d5195da5c414ae79af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db2960f402c407aa41fe09d5195da5c414ae79af"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "b32119985697da8aa49761ab134c56746a26caf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edede0242fe72bf7814fa25da0ddb6a4dd516738/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edede0242fe72bf7814fa25da0ddb6a4dd516738/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edede0242fe72bf7814fa25da0ddb6a4dd516738", "patch": "@@ -1,3 +1,15 @@\n+2007-09-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tgcc/\n+\t* config/mips/mips.c (mips_legitimize_tls_address): Call sorry\n+\tif we encounter TLS address in MIPS16 mode.\n+\t(mips_legitimize_const_move):  Check cannot_force_const_mem for\n+\tthe (const (plus symbol offset)) case; this forces invalid TLS\n+\taddress in MIPS16 mode to be caught by the above call to sorry.\n+\t(override_options): Don't reset targetm.have_tls in MIPS16 mode,\n+\tbecause that now enables emutls, which is not ABI compatible\n+\twith native TLS in non-MIPS16 mode.\n+\n 2007-09-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tAdd target hook invoked when cfun changes."}, {"sha": "937f5904550c35d4769c3bc24f712f8ee588a888", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edede0242fe72bf7814fa25da0ddb6a4dd516738/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edede0242fe72bf7814fa25da0ddb6a4dd516738/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=edede0242fe72bf7814fa25da0ddb6a4dd516738", "patch": "@@ -2326,6 +2326,12 @@ mips_legitimize_tls_address (rtx loc)\n   rtx dest, insn, v0, v1, tmp1, tmp2, eqv;\n   enum tls_model model;\n \n+  if (TARGET_MIPS16)\n+    {\n+      sorry (\"MIPS16 TLS\");\n+      return gen_reg_rtx (Pmode);\n+    }\n+\n   v0 = gen_rtx_REG (Pmode, GP_RETURN);\n   v1 = gen_rtx_REG (Pmode, GP_RETURN + 1);\n \n@@ -2591,13 +2597,14 @@ mips_legitimize_const_move (enum machine_mode mode, rtx dest, rtx src)\n       return;\n     }\n \n-  /* If we have (const (plus symbol offset)), load the symbol first\n-     and then add in the offset.  This is usually better than forcing\n-     the constant into memory, at least in non-mips16 code.  */\n+  /* If we have (const (plus symbol offset)), and that expression cannot\n+     be forced into memory, load the symbol first and add in the offset.\n+     In non-MIPS16 mode, prefer to do this even if the constant _can_ be\n+     forced into memory, as it usually produces better code.  */\n   split_const (src, &base, &offset);\n-  if (!TARGET_MIPS16\n-      && offset != const0_rtx\n-      && (can_create_pseudo_p () || SMALL_INT (offset)))\n+  if (offset != const0_rtx\n+      && (targetm.cannot_force_const_mem (src)\n+\t  || (!TARGET_MIPS16 && can_create_pseudo_p ())))\n     {\n       base = mips_force_temporary (dest, base);\n       mips_emit_move (dest, mips_add_offset (0, base, INTVAL (offset)));\n@@ -5600,11 +5607,6 @@ override_options (void)\n \n   mips_lo_relocs[SYMBOL_HALF] = \"%half(\";\n \n-  /* We don't have a thread pointer access instruction on MIPS16, or\n-     appropriate TLS relocations.  */\n-  if (TARGET_MIPS16)\n-    targetm.have_tls = false;\n-\n   /* Default to working around R4000 errata only if the processor\n      was selected explicitly.  */\n   if ((target_flags_explicit & MASK_FIX_R4000) == 0"}]}