{"sha": "4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIxZmZkYjE2YzRhNTRhNGY4YWQ5NTcxNDMzMzZlMjc5YjhkNWM2MA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2016-06-10T09:22:38Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2016-06-10T09:22:38Z"}, "message": "[PR c/71381] C/C++ OpenACC cache directive rejects valid syntax\n\n\tgcc/c/\n\tPR c/71381\n\t* c-parser.c (c_parser_omp_variable_list) <OMP_CLAUSE__CACHE_>:\n\tLoosen checking.\n\tgcc/cp/\n\tPR c/71381\n\t* parser.c (cp_parser_omp_var_list_no_open) <OMP_CLAUSE__CACHE_>:\n\tLoosen checking.\n\tgcc/fortran/\n\tPR c/71381\n\t* openmp.c (gfc_match_oacc_cache): Add comment.\n\tgcc/testsuite/\n\tPR c/71381\n\t* c-c++-common/goacc/cache-1.c: Update.  Move invalid usage tests\n\tto...\n\t* c-c++-common/goacc/cache-2.c: ... this new file.\n\t* gfortran.dg/goacc/cache-1.f95: Move invalid usage tests to...\n\t* gfortran.dg/goacc/cache-2.f95: ... this new file.\n\t* gfortran.dg/goacc/coarray.f95: Update OpenACC cache directive\n\tusage.\n\t* gfortran.dg/goacc/cray.f95: Likewise.\n\t* gfortran.dg/goacc/loop-1.f95: Likewise.\n\tlibgomp/\n\tPR c/71381\n\t* testsuite/libgomp.oacc-c-c++-common/cache-1.c: #include\n\t\"../../../gcc/testsuite/c-c++-common/goacc/cache-1.c\".\n\t* testsuite/libgomp.oacc-fortran/cache-1.f95: New file.\n\n\tgcc/\n\t* omp-low.c (scan_sharing_clauses): Don't expect\n\tOMP_CLAUSE__CACHE_.\n\nFrom-SVN: r237290", "tree": {"sha": "094cd6874e2c2c5b7f80f6133130e32544a474c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/094cd6874e2c2c5b7f80f6133130e32544a474c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22d222d2401660d21b8d4f8f2a9b96cee9d852e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22d222d2401660d21b8d4f8f2a9b96cee9d852e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22d222d2401660d21b8d4f8f2a9b96cee9d852e7"}], "stats": {"total": 303, "additions": 159, "deletions": 144}, "files": [{"sha": "6afbae761463b087a940b3d7647834796793d09d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,3 +1,8 @@\n+2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* omp-low.c (scan_sharing_clauses): Don't expect\n+\tOMP_CLAUSE__CACHE_.\n+\n 2016-06-10  Alan Hayward  <alan.hayward@arm.com>\n \n \tPR tree-optimization/71407"}, {"sha": "cd9f230e106ae76d3214515bc57352ce4d8fe222", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,3 +1,9 @@\n+2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR c/71381\n+\t* c-parser.c (c_parser_omp_variable_list) <OMP_CLAUSE__CACHE_>:\n+\tLoosen checking.\n+\n 2016-06-08  Martin Sebor  <msebor@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "94078a91f4cf11bef33c1b7424a6b76964585d41", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -10613,6 +10613,8 @@ c_parser_omp_variable_list (c_parser *parser,\n \t  switch (kind)\n \t    {\n \t    case OMP_CLAUSE__CACHE_:\n+\t      /* The OpenACC cache directive explicitly only allows \"array\n+\t\t elements or subarrays\".  */\n \t      if (c_parser_peek_token (parser)->type != CPP_OPEN_SQUARE)\n \t\t{\n \t\t  c_parser_error (parser, \"expected %<[%>\");\n@@ -10678,25 +10680,6 @@ c_parser_omp_variable_list (c_parser *parser,\n \t\t      break;\n \t\t    }\n \n-\t\t  if (kind == OMP_CLAUSE__CACHE_)\n-\t\t    {\n-\t\t      if (TREE_CODE (low_bound) != INTEGER_CST\n-\t\t\t  && !TREE_READONLY (low_bound))\n-\t\t\t{\n-\t\t\t  error_at (clause_loc,\n-\t\t\t\t    \"%qD is not a constant\", low_bound);\n-\t\t\t  t = error_mark_node;\n-\t\t\t}\n-\n-\t\t      if (TREE_CODE (length) != INTEGER_CST\n-\t\t\t  && !TREE_READONLY (length))\n-\t\t\t{\n-\t\t\t  error_at (clause_loc,\n-\t\t\t\t    \"%qD is not a constant\", length);\n-\t\t\t  t = error_mark_node;\n-\t\t\t}\n-\t\t    }\n-\n \t\t  t = tree_cons (low_bound, length, t);\n \t\t}\n \t      break;"}, {"sha": "53d55d3b3a6203d6250ef1b682e676e3f538b6cc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,3 +1,9 @@\n+2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR c/71381\n+\t* parser.c (cp_parser_omp_var_list_no_open) <OMP_CLAUSE__CACHE_>:\n+\tLoosen checking.\n+\n 2016-06-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/71465"}, {"sha": "632b25fac95411adaf7066d9fbc85e536cff5a9c", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -29984,6 +29984,8 @@ cp_parser_omp_var_list_no_open (cp_parser *parser, enum omp_clause_code kind,\n \t  switch (kind)\n \t    {\n \t    case OMP_CLAUSE__CACHE_:\n+\t      /* The OpenACC cache directive explicitly only allows \"array\n+\t\t elements or subarrays\".  */\n \t      if (cp_lexer_peek_token (parser->lexer)->type != CPP_OPEN_SQUARE)\n \t\t{\n \t\t  error_at (token->location, \"expected %<[%>\");\n@@ -30035,25 +30037,6 @@ cp_parser_omp_var_list_no_open (cp_parser *parser, enum omp_clause_code kind,\n \t\t\t\t\t  RT_CLOSE_SQUARE))\n \t\t    goto skip_comma;\n \n-\t\t  if (kind == OMP_CLAUSE__CACHE_)\n-\t\t    {\n-\t\t      if (TREE_CODE (low_bound) != INTEGER_CST\n-\t\t\t  && !TREE_READONLY (low_bound))\n-\t\t\t{\n-\t\t\t  error_at (token->location,\n-\t\t\t\t    \"%qD is not a constant\", low_bound);\n-\t\t\t  decl = error_mark_node;\n-\t\t\t}\n-\n-\t\t      if (TREE_CODE (length) != INTEGER_CST\n-\t\t\t  && !TREE_READONLY (length))\n-\t\t\t{\n-\t\t\t  error_at (token->location,\n-\t\t\t\t    \"%qD is not a constant\", length);\n-\t\t\t  decl = error_mark_node;\n-\t\t\t}\n-\t\t    }\n-\n \t\t  decl = tree_cons (low_bound, length, decl);\n \t\t}\n \t      break;"}, {"sha": "67bc9e8862151832da950cc1c0b66e56fd437729", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,3 +1,8 @@\n+2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR c/71381\n+\t* openmp.c (gfc_match_oacc_cache): Add comment.\n+\n 2016-06-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/71404"}, {"sha": "2c9279401a296fd0fd289f1cd85926b705d6de2e", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1688,6 +1688,10 @@ match\n gfc_match_oacc_cache (void)\n {\n   gfc_omp_clauses *c = gfc_get_omp_clauses ();\n+  /* The OpenACC cache directive explicitly only allows \"array elements or\n+     subarrays\", which we're currently not checking here.  Either check this\n+     after the call of gfc_match_omp_variable_list, or add something like a\n+     only_sections variant next to its allow_sections parameter.  */\n   match m = gfc_match_omp_variable_list (\" (\",\n \t\t\t\t\t &c->lists[OMP_LIST_CACHE], true,\n \t\t\t\t\t NULL, NULL, true);"}, {"sha": "91d5fcfcab07206044266680902c542368768b02", "filename": "gcc/omp-low.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -2201,9 +2201,6 @@ scan_sharing_clauses (tree clauses, omp_context *ctx,\n \t  break;\n \n \tcase OMP_CLAUSE__CACHE_:\n-\t  sorry (\"Clause not supported yet\");\n-\t  break;\n-\n \tdefault:\n \t  gcc_unreachable ();\n \t}\n@@ -2368,9 +2365,6 @@ scan_sharing_clauses (tree clauses, omp_context *ctx,\n \t  break;\n \n \tcase OMP_CLAUSE__CACHE_:\n-\t  sorry (\"Clause not supported yet\");\n-\t  break;\n-\n \tdefault:\n \t  gcc_unreachable ();\n \t}"}, {"sha": "e15b009b42536114b362b5d704298abb06e7d053", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,3 +1,16 @@\n+2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR c/71381\n+\t* c-c++-common/goacc/cache-1.c: Update.  Move invalid usage tests\n+\tto...\n+\t* c-c++-common/goacc/cache-2.c: ... this new file.\n+\t* gfortran.dg/goacc/cache-1.f95: Move invalid usage tests to...\n+\t* gfortran.dg/goacc/cache-2.f95: ... this new file.\n+\t* gfortran.dg/goacc/coarray.f95: Update OpenACC cache directive\n+\tusage.\n+\t* gfortran.dg/goacc/cray.f95: Likewise.\n+\t* gfortran.dg/goacc/loop-1.f95: Likewise.\n+\n 2016-06-10  Alan Hayward  <alan.hayward@arm.com>\n \n \tPR tree-optimization/71407"}, {"sha": "1d4759e738c78b37c2e792d261785da94132d945", "filename": "gcc/testsuite/c-c++-common/goacc/cache-1.c", "status": "modified", "additions": 22, "deletions": 44, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcache-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcache-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcache-1.c?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,3 +1,7 @@\n+/* OpenACC cache directive: valid usage.  */\n+/* For execution testing, this file is \"#include\"d from\n+   libgomp/testsuite/libgomp.oacc-c-c++-common/cache-1.c.  */\n+\n int\n main (int argc, char **argv)\n {\n@@ -21,57 +25,31 @@ main (int argc, char **argv)\n         int n = 1;\n         const int len = n;\n \n-#pragma acc cache /* { dg-error \"expected '\\\\\\(' before end of line\" } */\n-\n-#pragma acc cache a[0:N] /* { dg-error \"expected '\\\\\\(' before 'a'\" } */\n-\t/* { dg-bogus \"expected end of line before 'a'\" \"\" { xfail c++ } 26 } */\n-\n-#pragma acc cache (a) /* { dg-error \"expected '\\\\\\['\" } */\n-\n-#pragma acc cache ( /* { dg-error \"expected (identifier|unqualified-id) before end of line\" } */\n-\n-#pragma acc cache () /* { dg-error \"expected (identifier|unqualified-id) before '\\\\\\)' token\" } */\n-\n-#pragma acc cache (,) /* { dg-error \"expected (identifier|unqualified-id) before '(,|\\\\\\))' token\" } */\n-\n-#pragma acc cache (a[0:N] /* { dg-error \"expected '\\\\\\)' before end of line\" } */\n-\n-#pragma acc cache (a[0:N],) /* { dg-error \"expected (identifier|unqualified-id) before '(,|\\\\\\))' token\" \"\" { xfail c } } */\n-\n-#pragma acc cache (a[0:N]) copyin (a[0:N]) /* { dg-error \"expected end of line before 'copyin'\" } */\n-\n-#pragma acc cache () /* { dg-error \"expected (identifier|unqualified-id) before '\\\\\\)' token\" } */\n-\n-#pragma acc cache (a[0:N] b[0:N]) /* { dg-error \"expected '\\\\\\)' before 'b'\" } */\n-\n-#pragma acc cache (a[0:N] b[0:N}) /* { dg-error \"expected '\\\\\\)' before 'b'\" } */\n-\t/* { dg-bogus \"expected end of line before '\\\\\\}' token\" \"\" { xfail c++ } 47 } */\n-\n-#pragma acc cache (a[0:N] /* { dg-error \"expected '\\\\\\)' before end of line\" } */\n-\n-#pragma acc cache (a[ii]) /* { dg-error \"'ii' is not a constant\" } */\n-\n-#pragma acc cache (a[idx:n]) /* { dg-error \"'n' is not a constant\" } */\n-\n-#pragma acc cache (a[0:N]) ( /* { dg-error \"expected end of line before '\\\\(' token\" } */\n-\n-#pragma acc cache (a[0:N]) ii /* { dg-error \"expected end of line before 'ii'\" } */\n-\n-#pragma acc cache (a[0:N] ii) /* { dg-error \"expected '\\\\)' before 'ii'\" } */\n-\n+\t/* Have at it, GCC!  */\n #pragma acc cache (a[0:N])\n-\n #pragma acc cache (a[0:N], a[0:N])\n-\n #pragma acc cache (a[0:N], b[0:N])\n-\n #pragma acc cache (a[0])\n-\n #pragma acc cache (a[0], a[1], b[0:N])\n-\n+#pragma acc cache (a[i - 5])\n+#pragma acc cache (a[i + 5:len])\n+#pragma acc cache (a[i + 5:len - 1])\n+#pragma acc cache (b[i])\n+#pragma acc cache (b[i:len])\n+#pragma acc cache (a[ii])\n+#pragma acc cache (a[ii:len])\n+#pragma acc cache (b[ii - 1])\n+#pragma acc cache (b[ii - 1:len])\n+#pragma acc cache (b[i - ii + 1])\n+#pragma acc cache (b[i + ii - 1:len])\n+#pragma acc cache (b[i * ii - 1:len + 1])\n+#pragma acc cache (a[idx + 2])\n+#pragma acc cache (a[idx:len + 2])\n #pragma acc cache (a[idx])\n-\n #pragma acc cache (a[idx:len])\n+#pragma acc cache (a[idx + 2:len])\n+#pragma acc cache (a[idx + 2 + i:len])\n+#pragma acc cache (a[idx + 2 + i + ii:len])\n \n         b[ii] = a[ii];\n     }"}, {"sha": "f717515791578349db89acfbcd5a94365b492dc9", "filename": "gcc/testsuite/c-c++-common/goacc/cache-2.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcache-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcache-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fcache-2.c?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -0,0 +1,57 @@\n+/* OpenACC cache directive: invalid usage.  */\n+\n+int\n+main (int argc, char **argv)\n+{\n+#define N   2\n+    int a[N], b[N];\n+    int i;\n+\n+    for (i = 0; i < N; i++)\n+    {\n+        a[i] = 3;\n+        b[i] = 0;\n+    }\n+\n+#pragma acc parallel copyin (a[0:N]) copyout (b[0:N])\n+{\n+    int ii;\n+\n+    for (ii = 0; ii < N; ii++)\n+    {\n+        const int idx = ii;\n+        int n = 1;\n+        const int len = n;\n+\n+#pragma acc cache /* { dg-error \"expected '\\\\\\(' before end of line\" } */\n+#pragma acc cache a[0:N] /* { dg-error \"expected '\\\\\\(' before 'a'\" } */\n+\t/* { dg-bogus \"expected end of line before 'a'\" \"\" { xfail c++ } 27 } */\n+#pragma acc cache (a) /* { dg-error \"expected '\\\\\\['\" } */\n+#pragma acc cache ( /* { dg-error \"expected (identifier|unqualified-id) before end of line\" } */\n+#pragma acc cache () /* { dg-error \"expected (identifier|unqualified-id) before '\\\\\\)' token\" } */\n+#pragma acc cache (,) /* { dg-error \"expected (identifier|unqualified-id) before '(,|\\\\\\))' token\" } */\n+#pragma acc cache (a[0:N] /* { dg-error \"expected '\\\\\\)' before end of line\" } */\n+#pragma acc cache (a[0:N],) /* { dg-error \"expected (identifier|unqualified-id) before '(,|\\\\\\))' token\" \"\" { xfail c } } */\n+#pragma acc cache (a[0:N]) copyin (a[0:N]) /* { dg-error \"expected end of line before 'copyin'\" } */\n+#pragma acc cache () /* { dg-error \"expected (identifier|unqualified-id) before '\\\\\\)' token\" } */\n+#pragma acc cache (a[0:N] b[0:N]) /* { dg-error \"expected '\\\\\\)' before 'b'\" } */\n+#pragma acc cache (a[0:N] b[0:N}) /* { dg-error \"expected '\\\\\\)' before 'b'\" } */\n+\t/* { dg-bogus \"expected end of line before '\\\\\\}' token\" \"\" { xfail c++ } 38 } */\n+#pragma acc cache (a[0:N] /* { dg-error \"expected '\\\\\\)' before end of line\" } */\n+#pragma acc cache (a[0:N]) ( /* { dg-error \"expected end of line before '\\\\(' token\" } */\n+#pragma acc cache (a[0:N]) ii /* { dg-error \"expected end of line before 'ii'\" } */\n+#pragma acc cache (a[0:N] ii) /* { dg-error \"expected '\\\\)' before 'ii'\" } */\n+\n+        b[ii] = a[ii];\n+    }\n+}\n+\n+\n+    for (i = 0; i < N; i++)\n+    {\n+        if (a[i] != b[i])\n+            __builtin_abort ();\n+    }\n+\n+    return 0;\n+}"}, {"sha": "39fbf2cf55af186d81c6d83bc4e1b477eea11156", "filename": "gcc/testsuite/gfortran.dg/goacc/cache-1.f95", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcache-1.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcache-1.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcache-1.f95?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,16 +1,15 @@\n-! { dg-do compile }\n+! OpenACC cache directive: valid usage.\n+! For execution testing, this file is \"#include\"d from\n+! libgomp/testsuite/libgomp.oacc-fortran/cache-1.f95.\n ! { dg-additional-options \"-std=f2008\" }\n \n program test\n   implicit none\n   integer :: i, d(10), e(5,13)\n \n   do concurrent (i=1:5)\n-    !$acc cache (d)\n     !$acc cache (d(1:3))\n     !$acc cache (d(i:i+2))\n-\n-    !$acc cache (e)\n     !$acc cache (e(1:3,2:4))\n     !$acc cache (e(i:i+2,i+1:i+3))\n   enddo"}, {"sha": "be8187885563ef472d9e134d8404addac903ba89", "filename": "gcc/testsuite/gfortran.dg/goacc/cache-2.f95", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcache-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcache-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcache-2.f95?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -0,0 +1,12 @@\n+! OpenACC cache directive: invalid usage.\n+! { dg-additional-options \"-std=f2008\" }\n+\n+program test\n+  implicit none\n+  integer :: i, d(10), e(5,13)\n+\n+  do concurrent (i=1:5)\n+    !$acc cache (d) ! { dg-error \"\" \"TODO\" { xfail *-*-* } }\n+    !$acc cache (e) ! { dg-error \"\" \"TODO\" { xfail *-*-* } }\n+  enddo\n+end"}, {"sha": "f30917b8a9c42e6b63411d95210713e2347931cb", "filename": "gcc/testsuite/gfortran.dg/goacc/coarray.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcoarray.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcoarray.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcoarray.f95?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -24,7 +24,7 @@ subroutine oacc1(a)\n     !$acc end parallel loop\n     !$acc parallel loop\n     do i = 1,5\n-      !$acc cache (a)\n+      !$acc cache (a) ! { dg-error \"\" \"TODO\" { xfail *-*-* } }\n     enddo\n     !$acc end parallel loop\n     !$acc update device (a)"}, {"sha": "705c18c992d900839e0110796894fd4bdd9e9c0b", "filename": "gcc/testsuite/gfortran.dg/goacc/cray.f95", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcray.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcray.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcray.f95?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -44,7 +44,8 @@ subroutine oacc1\n     !$acc end parallel loop\n     !$acc parallel loop\n     do i = 1,5\n-      !$acc cache (ptr) ! TODO: This must fail, as in openacc-1_0-branch\n+      !TODO: This must fail, as in openacc-1_0-branch.\n+      !$acc cache (ptr) ! { dg-error \"\" \"TODO\" { xfail *-*-* } }\n     enddo\n     !$acc end parallel loop\n     !$acc update device (ptr)"}, {"sha": "a605f038926a9e86802558dc2f232ba2d9661a9c", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-1.f95", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-1.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-1.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-1.f95?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -158,15 +158,16 @@ subroutine test1\n   enddo\n \n \n-  !$acc cache (a) ! { dg-error \"inside of loop\" }\n+  !$acc cache (a(1:10)) ! { dg-error \"ACC CACHE directive must be inside of loop\" }\n \n   do i = 1,10\n-    !$acc cache(a)\n+    !$acc cache(a(i:i+1))\n   enddo\n \n   do i = 1,10\n+    !$acc cache(a(i:i+1))\n     a(i) = i\n-    !$acc cache(a) \n+    !$acc cache(a(i+2:i+2+1))\n   enddo\n \n end subroutine test1"}, {"sha": "5c7f41abf89ddb1fb3bef97ecda4e9d9f429edea", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,3 +1,10 @@\n+2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR c/71381\n+\t* testsuite/libgomp.oacc-c-c++-common/cache-1.c: #include\n+\t\"../../../gcc/testsuite/c-c++-common/goacc/cache-1.c\".\n+\t* testsuite/libgomp.oacc-fortran/cache-1.f95: New file.\n+\n 2016-06-03  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-fortran/reduction-8.f90: New testcase."}, {"sha": "16aaed5df7060d2c57b3e87b418b36ac27201c1f", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/cache-1.c", "status": "modified", "additions": 2, "deletions": 47, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcache-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcache-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcache-1.c?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -1,48 +1,3 @@\n-int\n-main (int argc, char **argv)\n-{\n-#define N   2\n-    int a[N], b[N];\n-    int i;\n+/* OpenACC cache directive.  */\n \n-    for (i = 0; i < N; i++)\n-    {\n-        a[i] = 3;\n-        b[i] = 0;\n-    }\n-\n-#pragma acc parallel copyin (a[0:N]) copyout (b[0:N])\n-{\n-    int ii;\n-\n-    for (ii = 0; ii < N; ii++)\n-    {\n-        const int idx = ii;\n-        int n = 1;\n-        const int len = n;\n-\n-#pragma acc cache (a[0:N])\n-\n-#pragma acc cache (a[0:N], b[0:N])\n-\n-#pragma acc cache (a[0])\n-\n-#pragma acc cache (a[0], a[1], b[0:N])\n-\n-#pragma acc cache (a[idx])\n-\n-#pragma acc cache (a[idx:len])\n-\n-        b[ii] = a[ii];\n-    }\n-}\n-\n-\n-    for (i = 0; i < N; i++)\n-    {\n-        if (a[i] != b[i])\n-            __builtin_abort ();\n-    }\n-\n-    return 0;\n-}\n+#include \"../../../gcc/testsuite/c-c++-common/goacc/cache-1.c\""}, {"sha": "37313d8c44afd285e41ca49d0c1512f82fb222f3", "filename": "libgomp/testsuite/libgomp.oacc-fortran/cache-1.f95", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcache-1.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1ffdb16c4a54a4f8ad957143336e279b8d5c60/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcache-1.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcache-1.f95?ref=4b1ffdb16c4a54a4f8ad957143336e279b8d5c60", "patch": "@@ -0,0 +1,6 @@\n+! OpenACC cache directive.\n+! { dg-do run }\n+! { dg-additional-options \"-std=f2008\" }\n+! { dg-additional-options \"-cpp\" }\n+\n+#include \"../../../gcc/testsuite/gfortran.dg/goacc/cache-1.f95\""}]}