{"sha": "8cd25827df5714010f0b16654765843634e53950", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNkMjU4MjdkZjU3MTQwMTBmMGIxNjY1NDc2NTg0MzYzNGU1Mzk1MA==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2006-02-28T11:12:22Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2006-02-28T11:12:22Z"}, "message": "trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): If the mask expression exists and has rank 0...\n\n2006-02-28  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc):\n\tIf the mask expression exists and has rank 0, enclose the\n\tgenerated loop in an \"if (mask)\".  Put the default\n\tinitialization into the else branch.\n\n2006-02-28  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\t* scalar_mask_1.f90:  Add tests for maxloc with scalar mask.\n\nFrom-SVN: r111562", "tree": {"sha": "8c94267614491656dfbdcdda6ad7e1741238b921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c94267614491656dfbdcdda6ad7e1741238b921"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cd25827df5714010f0b16654765843634e53950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cd25827df5714010f0b16654765843634e53950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cd25827df5714010f0b16654765843634e53950", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cd25827df5714010f0b16654765843634e53950/comments", "author": null, "committer": null, "parents": [{"sha": "b7ded1e0c5667fee48321f1e5c367e2eda964359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ded1e0c5667fee48321f1e5c367e2eda964359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7ded1e0c5667fee48321f1e5c367e2eda964359"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "8ed4f912b80dfe422b4466ea965c34d41e630519", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd25827df5714010f0b16654765843634e53950/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd25827df5714010f0b16654765843634e53950/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8cd25827df5714010f0b16654765843634e53950", "patch": "@@ -1,3 +1,10 @@\n+2006-02-28  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc):\n+\tIf the mask expression exists and has rank 0, enclose the\n+\tgenerated loop in an \"if (mask)\".  Put the default\n+\tinitialization into the else branch.\n+\n 2006-02-25  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR fortran/23092"}, {"sha": "f58a5965299f77d892090887f223b0f6bf7a9be7", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd25827df5714010f0b16654765843634e53950/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd25827df5714010f0b16654765843634e53950/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=8cd25827df5714010f0b16654765843634e53950", "patch": "@@ -1567,9 +1567,11 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, int op)\n   stmtblock_t body;\n   stmtblock_t block;\n   stmtblock_t ifblock;\n+  stmtblock_t elseblock;\n   tree limit;\n   tree type;\n   tree tmp;\n+  tree elsetmp;\n   tree ifbody;\n   tree cond;\n   gfc_loopinfo loop;\n@@ -1602,7 +1604,7 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, int op)\n   actual = actual->next->next;\n   gcc_assert (actual);\n   maskexpr = actual->expr;\n-  if (maskexpr)\n+  if (maskexpr && maskexpr->rank != 0)\n     {\n       maskss = gfc_walk_expr (maskexpr);\n       gcc_assert (maskss != gfc_ss_terminator);\n@@ -1712,8 +1714,39 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, int op)\n \n   gfc_trans_scalarizing_loops (&loop, &body);\n \n-  gfc_add_block_to_block (&se->pre, &loop.pre);\n-  gfc_add_block_to_block (&se->pre, &loop.post);\n+  /* For a scalar mask, enclose the loop in an if statement.  */\n+  if (maskexpr && maskss == NULL)\n+    {\n+      gfc_init_se (&maskse, NULL);\n+      gfc_conv_expr_val (&maskse, maskexpr);\n+      gfc_init_block (&block);\n+      gfc_add_block_to_block (&block, &loop.pre);\n+      gfc_add_block_to_block (&block, &loop.post);\n+      tmp = gfc_finish_block (&block);\n+\n+      /* For the else part of the scalar mask, just initialize\n+\t the pos variable the same way as above.  */\n+\n+      gfc_init_block (&elseblock);\n+\n+      elsetmp = fold_build2 (MINUS_EXPR, gfc_array_index_type,\n+\t\t\t     loop.from[0], gfc_index_one_node);\n+      cond = fold_build2 (GE_EXPR, boolean_type_node,\n+\t\t\t  loop.to[0], loop.from[0]);\n+      elsetmp = fold_build3 (COND_EXPR, gfc_array_index_type, cond,\n+\t\t\t  loop.from[0], elsetmp);\n+      gfc_add_modify_expr (&elseblock, pos, elsetmp);\n+      elsetmp = gfc_finish_block (&elseblock);\n+\n+      tmp = build3_v (COND_EXPR, maskse.expr, tmp, elsetmp);\n+      gfc_add_expr_to_block (&block, tmp);\n+      gfc_add_block_to_block (&se->pre, &block);\n+    }\n+  else\n+    {\n+      gfc_add_block_to_block (&se->pre, &loop.pre);\n+      gfc_add_block_to_block (&se->pre, &loop.post);\n+    }\n   gfc_cleanup_loop (&loop);\n \n   /* Return a value in the range 1..SIZE(array).  */"}, {"sha": "f1ce5694acde358cea7ccab90258d29817d2a647", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd25827df5714010f0b16654765843634e53950/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd25827df5714010f0b16654765843634e53950/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cd25827df5714010f0b16654765843634e53950", "patch": "@@ -1,3 +1,7 @@\n+2006-02-28  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\t* scalar_mask_1.f90:  Add tests for maxloc with scalar mask.\n+\n 2006-02-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/26464"}, {"sha": "01bef2ce5762acdd5e96a75fdc0a871ef4a07bd9", "filename": "gcc/testsuite/gfortran.dg/scalar_mask_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd25827df5714010f0b16654765843634e53950/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_mask_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd25827df5714010f0b16654765843634e53950/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_mask_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_mask_1.f90?ref=8cd25827df5714010f0b16654765843634e53950", "patch": "@@ -10,4 +10,6 @@ program main\n   if (sum (a, .true.) /= 5.0) call abort\n   if (maxval (a, .true.) /= 3.0) call abort\n   if (maxval (a, .false.) > -1e38) call abort\n+  if (maxloc (a, 1, .true.) /= 2) call abort\n+  if (maxloc (a, 1, .false.) /= 1) call abort\n end program main"}]}