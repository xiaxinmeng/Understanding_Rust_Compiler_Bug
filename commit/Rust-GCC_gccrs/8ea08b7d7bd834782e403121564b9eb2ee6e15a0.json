{"sha": "8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVhMDhiN2Q3YmQ4MzQ3ODJlNDAzMTIxNTY0YjllYjJlZTZlMTVhMA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-05-28T23:15:18Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-05-28T23:15:18Z"}, "message": "Makefile.am (noinst_LIBRARIES): New target.\n\n2002-05-28  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* testsuite/Makefile.am (noinst_LIBRARIES):  New target.  Pull in\n\tCXX/INCLUDES.\n\t* testsuite/Makefile.in:  Regenerate.\n\t* testsuite/testsuite_hooks.h (gnu_copy_tracker):  Move from\n\tlist_modifiers.cc and rename from 'T'.  Move code bodies...\n\t* testsuite/testsuite_hooks.cc:  ...to here.  New file.\n\t* testsuite/23_containers/list_modifiers.cc:  Move 'T' class out.\n\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3_target_compile):\n\tAdd libv3test.a to link options.\n\nFrom-SVN: r53977", "tree": {"sha": "a740434efe1293cba35f10ada277aeede1f442b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a740434efe1293cba35f10ada277aeede1f442b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/comments", "author": null, "committer": null, "parents": [{"sha": "64de6c0a5fa388bde4676762adc516001fb462ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64de6c0a5fa388bde4676762adc516001fb462ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64de6c0a5fa388bde4676762adc516001fb462ef"}], "stats": {"total": 508, "additions": 386, "deletions": 122}, "files": [{"sha": "a8e3e701bd149e26b9b197482f2477217596f0c6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "patch": "@@ -1,3 +1,15 @@\n+2002-05-28  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* testsuite/Makefile.am (noinst_LIBRARIES):  New target.  Pull in\n+\tCXX/INCLUDES.\n+\t* testsuite/Makefile.in:  Regenerate.\n+\t* testsuite/testsuite_hooks.h (gnu_copy_tracker):  Move from\n+\tlist_modifiers.cc and rename from 'T'.  Move code bodies...\n+\t* testsuite/testsuite_hooks.cc:  ...to here.  New file.\n+\t* testsuite/23_containers/list_modifiers.cc:  Move 'T' class out.\n+\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3_target_compile):\n+\tAdd libv3test.a to link options.\n+\n 2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/misc-inst.cc: Define unnecessary algorithm"}, {"sha": "14b53657e0596d59441be608b0e19be510913cb2", "filename": "libstdc++-v3/testsuite/23_containers/list_modifiers.cc", "status": "modified", "additions": 3, "deletions": 53, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist_modifiers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist_modifiers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist_modifiers.cc?ref=8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "patch": "@@ -21,59 +21,9 @@\n #include <list>\n #include <testsuite_hooks.h>\n \n-bool test = true;\n-\n-// Here's a class with nontrivial ctor/dtor that provides\n-// the ability to track the number of copy ctors and dtors\n-// and will throw on demand during copy.\n-class T\n-{\n-public:\n-  // default constructor\n-  T(int anId, bool throwOnDemand = false)\n-  : itsId(anId), willThrow(throwOnDemand)\n-  { }\n-\n-  // copy constructor\n-  T(const T& rhs)\n-  : itsId(rhs.id()), willThrow(rhs.willThrow)\n-  {\n-    ++itsCopyCount;\n-    if (willThrow) \n-      throw \"exception\";\n-  }\n-\n-  ~T()\n-  { ++itsDtorCount; }\n-\n-  int\n-  id() const\n-  { return itsId; }\n+typedef gnu_copy_tracker  T;\n \n-private:\n-  const int  itsId;\n-  const bool willThrow;\n-\n-public:\n-  static void\n-  reset()\n-  { itsCopyCount = 0; itsDtorCount = 0; }\n-\n-  static int\n-  copyCount() \n-  { return itsCopyCount; }\n-\n-  static int\n-  dtorCount() \n-  { return itsDtorCount; }\n-\n-private:\n-  static int itsCopyCount;\n-  static int itsDtorCount;\n-};\n-\n-int T::itsCopyCount = 0;\n-int T::itsDtorCount = 0;\n+bool test = true;\n \n \n // This test verifies the following.\n@@ -314,7 +264,7 @@ test03()\n   VERIFY(e == list0301.end());\n }\n \n-main(int argc, char* argv[])\n+int main()\n {\n     test01();\n     test02();"}, {"sha": "dba4ccf20c87e7e7ea4900e84e17d268dbd0cbe5", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the testsuite subdirectory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 2001 Free Software Foundation, Inc.\n+## Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n ## Process this file with automake to produce Makefile.in.\n@@ -35,3 +35,12 @@ RUNTEST = `if [ -f @glibcpp_srcdir@/../dejagnu/runtest ] ; then \\\n \n RUNTESTFLAGS =\n \n+CXX = @glibcpp_CXX@ @GLIBCPP_INCLUDES@\n+# Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n+INCLUDES = @TOPLEVEL_INCLUDES@\n+\n+noinst_LIBRARIES = libv3test.a\n+\n+libv3test_a_SOURCES = testsuite_hooks.cc\n+\n+"}, {"sha": "79c9a4189a3ffd4136f143130b6bce3d7fcb95cd", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 219, "deletions": 25, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -68,6 +68,9 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n+CATALOGS = @CATALOGS@\n+CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n@@ -77,17 +80,27 @@ CPP = @CPP@\n CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n-CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n+DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n+GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n+GMOFILES = @GMOFILES@\n+GMSGFMT = @GMSGFMT@\n+INSTOBJEXT = @INSTOBJEXT@\n+INTLBISON = @INTLBISON@\n+INTLLIBS = @INTLLIBS@\n+INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -98,17 +111,22 @@ LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n+MKINSTALLDIRS = @MKINSTALLDIRS@\n+MSGFMT = @MSGFMT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n PACKAGE = @PACKAGE@\n+POFILES = @POFILES@\n+POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n+USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n@@ -149,36 +167,152 @@ RUNTEST = `if [ -f @glibcpp_srcdir@/../dejagnu/runtest ] ; then \\\n \n \n RUNTESTFLAGS = \n+\n+CXX = @glibcpp_CXX@ @GLIBCPP_INCLUDES@\n+# Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n+INCLUDES = @TOPLEVEL_INCLUDES@\n+\n+noinst_LIBRARIES = libv3test.a\n+\n+libv3test_a_SOURCES = testsuite_hooks.cc\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n+LIBRARIES =  $(noinst_LIBRARIES)\n+\n+\n+DEFS = @DEFS@ -I. -I$(srcdir) -I..\n+CPPFLAGS = @CPPFLAGS@\n+LDFLAGS = @LDFLAGS@\n+LIBS = @LIBS@\n+libv3test_a_LIBADD = \n+libv3test_a_OBJECTS =  testsuite_hooks.$(OBJEXT)\n+CXXFLAGS = @CXXFLAGS@\n+CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+CXXLD = $(CXX)\n+CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@\n DIST_COMMON =  README Makefile.am Makefile.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n TAR = gtar\n GZIP_ENV = --best\n+DEP_FILES =  .deps/testsuite_hooks.P\n+SOURCES = $(libv3test_a_SOURCES)\n+OBJECTS = $(libv3test_a_OBJECTS)\n+\n all: all-redirect\n .SUFFIXES:\n+.SUFFIXES: .S .c .cc .lo .o .obj .s\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n-\tcd $(top_srcdir) && $(AUTOMAKE) --cygnus testsuite/Makefile\n+\tcd $(top_srcdir) && $(AUTOMAKE) --foreign testsuite/Makefile\n \n-Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status\n+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)\n \tcd $(top_builddir) \\\n \t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n \n+\n+mostlyclean-noinstLIBRARIES:\n+\n+clean-noinstLIBRARIES:\n+\t-test -z \"$(noinst_LIBRARIES)\" || rm -f $(noinst_LIBRARIES)\n+\n+distclean-noinstLIBRARIES:\n+\n+maintainer-clean-noinstLIBRARIES:\n+\n+# FIXME: We should only use cygpath when building on Windows,\n+# and only if it is available.\n+.c.obj:\n+\t$(COMPILE) -c `cygpath -w $<`\n+\n+.s.o:\n+\t$(COMPILE) -c $<\n+\n+.S.o:\n+\t$(COMPILE) -c $<\n+\n+mostlyclean-compile:\n+\t-rm -f *.o core *.core\n+\t-rm -f *.$(OBJEXT)\n+\n+clean-compile:\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+maintainer-clean-compile:\n+\n+.s.lo:\n+\t$(LIBTOOL) --mode=compile $(COMPILE) -c $<\n+\n+.S.lo:\n+\t$(LIBTOOL) --mode=compile $(COMPILE) -c $<\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+distclean-libtool:\n+\n+maintainer-clean-libtool:\n+\n+libv3test.a: $(libv3test_a_OBJECTS) $(libv3test_a_DEPENDENCIES)\n+\t-rm -f libv3test.a\n+\t$(AR) cru libv3test.a $(libv3test_a_OBJECTS) $(libv3test_a_LIBADD)\n+\t$(RANLIB) libv3test.a\n+.cc.o:\n+\t$(CXXCOMPILE) -c $<\n+.cc.obj:\n+\t$(CXXCOMPILE) -c `cygpath -w $<`\n+.cc.lo:\n+\t$(LTCXXCOMPILE) -c $<\n+\n tags: TAGS\n-TAGS:\n \n+ID: $(HEADERS) $(SOURCES) $(LISP)\n+\tlist='$(SOURCES) $(HEADERS)'; \\\n+\tunique=`for i in $$list; do echo $$i; done | \\\n+\t  awk '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\there=`pwd` && cd $(srcdir) \\\n+\t  && mkid -f$$here/ID $$unique $(LISP)\n+\n+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)\n+\ttags=; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS)'; \\\n+\tunique=`for i in $$list; do echo $$i; done | \\\n+\t  awk '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\ttest -z \"$(ETAGS_ARGS)$$unique$(LISP)$$tags\" \\\n+\t  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)\n+\n+mostlyclean-tags:\n+\n+clean-tags:\n+\n+distclean-tags:\n+\t-rm -f TAGS ID\n+\n+maintainer-clean-tags:\n \n distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n \n subdir = testsuite\n \n distdir: $(DISTFILES)\n+\there=`cd $(top_builddir) && pwd`; \\\n+\ttop_distdir=`cd $(top_distdir) && pwd`; \\\n+\tdistdir=`cd $(distdir) && pwd`; \\\n+\tcd $(top_srcdir) \\\n+\t  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --foreign testsuite/Makefile\n \t@for file in $(DISTFILES); do \\\n-\t  if test -f $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n \t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n@@ -188,15 +322,62 @@ distdir: $(DISTFILES)\n \t  fi; \\\n \tdone\n \n+DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)\n+\n+-include $(DEP_FILES)\n+\n+mostlyclean-depend:\n+\n+clean-depend:\n+\n+distclean-depend:\n+\t-rm -rf .deps\n+\n+maintainer-clean-depend:\n+\n+%.o: %.c\n+\t@echo '$(COMPILE) -c $<'; \\\n+\t$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<\n+\t@-cp .deps/$(*F).pp .deps/$(*F).P; \\\n+\ttr ' ' '\\012' < .deps/$(*F).pp \\\n+\t  | sed -e 's/^\\\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \\\n+\t    >> .deps/$(*F).P; \\\n+\trm .deps/$(*F).pp\n+\n+%.lo: %.c\n+\t@echo '$(LTCOMPILE) -c $<'; \\\n+\t$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<\n+\t@-sed -e 's/^\\([^:]*\\)\\.o[ \t]*:/\\1.lo \\1.o :/' \\\n+\t  < .deps/$(*F).pp > .deps/$(*F).P; \\\n+\ttr ' ' '\\012' < .deps/$(*F).pp \\\n+\t  | sed -e 's/^\\\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \\\n+\t    >> .deps/$(*F).P; \\\n+\trm -f .deps/$(*F).pp\n+\n+%.o: %.cc\n+\t@echo '$(CXXCOMPILE) -c $<'; \\\n+\t$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<\n+\t@-cp .deps/$(*F).pp .deps/$(*F).P; \\\n+\ttr ' ' '\\012' < .deps/$(*F).pp \\\n+\t  | sed -e 's/^\\\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \\\n+\t    >> .deps/$(*F).P; \\\n+\trm .deps/$(*F).pp\n+\n+%.lo: %.cc\n+\t@echo '$(LTCXXCOMPILE) -c $<'; \\\n+\t$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<\n+\t@-sed -e 's/^\\([^:]*\\)\\.o[ \t]*:/\\1.lo \\1.o :/' \\\n+\t  < .deps/$(*F).pp > .deps/$(*F).P; \\\n+\ttr ' ' '\\012' < .deps/$(*F).pp \\\n+\t  | sed -e 's/^\\\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \\\n+\t    >> .deps/$(*F).P; \\\n+\trm -f .deps/$(*F).pp\n+\n RUNTESTDEFAULTFLAGS = --tool $(DEJATOOL) --srcdir $$srcdir\n \n check-DEJAGNU: site.exp\n \tsrcdir=`cd $(srcdir) && pwd`; export srcdir; \\\n \tEXPECT=$(EXPECT); export EXPECT; \\\n-\tif [ -f $(top_builddir)/../expect/expect ]; then \\\n-\t  TCL_LIBRARY=`cd $(top_srcdir)/../tcl/library && pwd`; \\\n-\t  export TCL_LIBRARY; \\\n-\tfi; \\\n \truntest=$(RUNTEST); \\\n \tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n \t  $$runtest $(RUNTESTDEFAULTFLAGS) $(RUNTESTFLAGS); \\\n@@ -225,13 +406,11 @@ info-am:\n info: info-am\n dvi-am:\n dvi: dvi-am\n-check-am:\n+check-am: all-am\n \t$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU\n check: check-am\n installcheck-am:\n installcheck: installcheck-am\n-install-info-am: \n-install-info: install-info-am\n install-exec-am:\n install-exec: install-exec-am\n \n@@ -243,7 +422,7 @@ install-am: all-am\n install: install-am\n uninstall-am:\n uninstall: uninstall-am\n-all-am: Makefile\n+all-am: Makefile $(LIBRARIES)\n all-redirect: all-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install\n@@ -259,31 +438,46 @@ distclean-generic:\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n \n maintainer-clean-generic:\n-mostlyclean-am:  mostlyclean-generic\n+mostlyclean-am:  mostlyclean-noinstLIBRARIES mostlyclean-compile \\\n+\t\tmostlyclean-libtool mostlyclean-tags mostlyclean-depend \\\n+\t\tmostlyclean-generic\n \n mostlyclean: mostlyclean-am\n \n-clean-am:  clean-generic mostlyclean-am\n+clean-am:  clean-noinstLIBRARIES clean-compile clean-libtool clean-tags \\\n+\t\tclean-depend clean-generic mostlyclean-am\n \n clean: clean-am\n \n-distclean-am:  distclean-generic clean-am\n+distclean-am:  distclean-noinstLIBRARIES distclean-compile \\\n+\t\tdistclean-libtool distclean-tags distclean-depend \\\n+\t\tdistclean-generic clean-am\n \t-rm -f libtool\n \n distclean: distclean-am\n \n-maintainer-clean-am:  maintainer-clean-generic distclean-am\n+maintainer-clean-am:  maintainer-clean-noinstLIBRARIES \\\n+\t\tmaintainer-clean-compile maintainer-clean-libtool \\\n+\t\tmaintainer-clean-tags maintainer-clean-depend \\\n+\t\tmaintainer-clean-generic distclean-am\n \t@echo \"This command is intended for maintainers to use;\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n \n maintainer-clean: maintainer-clean-am\n \n-.PHONY: tags distdir check-DEJAGNU info-am info dvi-am dvi check \\\n-check-am installcheck-am installcheck install-info-am install-info \\\n-install-exec-am install-exec install-data-am install-data install-am \\\n-install uninstall-am uninstall all-redirect all-am all installdirs \\\n-mostlyclean-generic distclean-generic clean-generic \\\n-maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n+.PHONY: mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \\\n+clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \\\n+mostlyclean-compile distclean-compile clean-compile \\\n+maintainer-clean-compile mostlyclean-libtool distclean-libtool \\\n+clean-libtool maintainer-clean-libtool tags mostlyclean-tags \\\n+distclean-tags clean-tags maintainer-clean-tags distdir \\\n+mostlyclean-depend distclean-depend clean-depend \\\n+maintainer-clean-depend check-DEJAGNU info-am info dvi-am dvi check \\\n+check-am installcheck-am installcheck install-exec-am install-exec \\\n+install-data-am install-data install-am install uninstall-am uninstall \\\n+all-redirect all-am all installdirs mostlyclean-generic \\\n+distclean-generic clean-generic maintainer-clean-generic clean \\\n+mostlyclean distclean maintainer-clean\n \n \n # Tell versions [3.59,3.63) of GNU make to not export all variables."}, {"sha": "a9433ef3680d62acc8c22f463d53dd480e5ba5be", "filename": "libstdc++-v3/testsuite/lib/libstdc++-v3-dg.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp?ref=8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "patch": "@@ -196,7 +196,12 @@ proc libstdc++-v3_target_compile { source dest type options } {\n     set cxx_final [concat $cxx_final $cxxflags]\n     set cxx_final [concat $cxx_final $includes]\n \n-    lappend options \"compiler=$cxx_final\";\n+    lappend options \"compiler=$cxx_final\"\n+\n+    # Picks up our local freshly-built testsuite library.  We could just\n+    # name it directly, \"./libv3test.a\" but this is more portable.\n+    lappend options \"ldflags=-L.\"\n+    lappend options \"libs=-lv3test\"\n \n     return [target_compile $source $dest $type $options]\n }"}, {"sha": "53bd753b1a8f57e6aaf6251115965bf51aaf2a9e", "filename": "libstdc++-v3/testsuite/testsuite_hooks.cc", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.cc?ref=8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "patch": "@@ -0,0 +1,77 @@\n+// Utility subroutines for the C++ library testsuite.\n+//\n+// Copyright (C) 2002 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+//\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <testsuite_hooks.h>\n+\n+#ifdef _GLIBCPP_MEM_LIMITS\n+#include <sys/resource.h>\n+#include <unistd.h>\n+\n+void\n+__set_testsuite_memlimit(float __size)\n+{\n+    struct rlimit r;\n+    rlim_t limit = (rlim_t)(__size * 1048576);\n+\n+    // Heap size, seems to be common.\n+#if _GLIBCPP_HAVE_MEMLIMIT_DATA\n+    getrlimit(RLIMIT_DATA, &r);\n+    r.rlim_cur = limit;\n+    setrlimit(RLIMIT_DATA, &r);\n+#endif\n+\n+    // Resident set size.\n+#if _GLIBCPP_HAVE_MEMLIMIT_RSS\n+    getrlimit(RLIMIT_RSS, &r);\n+    r.rlim_cur = limit;\n+    setrlimit(RLIMIT_RSS, &r);\n+#endif\n+\n+    // Mapped memory (brk + mmap).\n+#if _GLIBCPP_HAVE_MEMLIMIT_VMEM\n+    getrlimit(RLIMIT_VMEM, &r);\n+    r.rlim_cur = limit;\n+    setrlimit(RLIMIT_VMEM, &r);\n+#endif\n+\n+    // Virtual memory.\n+#if _GLIBCPP_HAVE_MEMLIMIT_AS\n+    getrlimit(RLIMIT_AS, &r);\n+    r.rlim_cur = limit;\n+    setrlimit(RLIMIT_AS, &r);\n+#endif\n+}\n+#endif /* _GLIBCPP_MEM_LIMITS */\n+\n+\n+gnu_counting_struct::size_type  gnu_counting_struct::count = 0;\n+\n+int gnu_copy_tracker::itsCopyCount = 0;\n+int gnu_copy_tracker::itsDtorCount = 0;\n+"}, {"sha": "4412336d47fbd76bd1acd913cc175023f8bf9a6b", "filename": "libstdc++-v3/testsuite/testsuite_hooks.h", "status": "modified", "additions": 59, "deletions": 42, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ea08b7d7bd834782e403121564b9eb2ee6e15a0/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h?ref=8ea08b7d7bd834782e403121564b9eb2ee6e15a0", "patch": "@@ -46,6 +46,10 @@\n //   which starts at zero, increments on instance construction, and decrements\n //   on instance destruction.  \"assert_count(n)\" can be called to VERIFY()\n //   that the count equals N.\n+//\n+// 4)  gnu_copy_tracker, from Stephen M. Webb <stephen@bregmasoft.com>.\n+//   A class with nontrivial ctor/dtor that provides the ability to track the\n+//   number of copy ctors and dtors, and will throw on demand during copy.\n \n #ifndef _GLIBCPP_TESTSUITE_HOOKS_H\n #define _GLIBCPP_TESTSUITE_HOOKS_H\n@@ -61,64 +65,28 @@\n \n // Defined in GLIBCPP_CONFIGURE_TESTSUITE.\n #ifndef _GLIBCPP_MEM_LIMITS\n-\n // Don't do memory limits.\n-void\n+extern void\n __set_testsuite_memlimit(float x = 0)\n { }\n \n #else\n \n // Do memory limits.\n-#include <sys/resource.h>\n-#include <unistd.h>\n-\n #ifndef MEMLIMIT_MB\n #define MEMLIMIT_MB 16.0\n #endif\n \n-void\n-__set_testsuite_memlimit(float __size = MEMLIMIT_MB)\n-{\n-    struct rlimit r;\n-    rlim_t limit = (rlim_t)(__size * 1048576);\n-\n-    // Heap size, seems to be common.\n-#if _GLIBCPP_HAVE_MEMLIMIT_DATA\n-    getrlimit(RLIMIT_DATA, &r);\n-    r.rlim_cur = limit;\n-    setrlimit(RLIMIT_DATA, &r);\n-#endif\n-\n-    // Resident set size.\n-#if _GLIBCPP_HAVE_MEMLIMIT_RSS\n-    getrlimit(RLIMIT_RSS, &r);\n-    r.rlim_cur = limit;\n-    setrlimit(RLIMIT_RSS, &r);\n-#endif\n-\n-    // Mapped memory (brk + mmap).\n-#if _GLIBCPP_HAVE_MEMLIMIT_VMEM\n-    getrlimit(RLIMIT_VMEM, &r);\n-    r.rlim_cur = limit;\n-    setrlimit(RLIMIT_VMEM, &r);\n-#endif\n-\n-    // Virtual memory.\n-#if _GLIBCPP_HAVE_MEMLIMIT_AS\n-    getrlimit(RLIMIT_AS, &r);\n-    r.rlim_cur = limit;\n-    setrlimit(RLIMIT_AS, &r);\n-#endif\n-}\n+extern void\n+__set_testsuite_memlimit(float __size = MEMLIMIT_MB);\n #endif\n \n \n struct gnu_counting_struct\n {\n     // Specifically and glaringly-obviously marked 'signed' so that when\n-    // count mistakenly goes negative, we can track the patterns of\n-    // deletions easier.\n+    // COUNT mistakenly goes negative, we can track the patterns of\n+    // deletions more easily.\n     typedef  signed int     size_type;\n     static size_type   count;\n     gnu_counting_struct() { ++count; }\n@@ -128,7 +96,56 @@ struct gnu_counting_struct\n \n #define assert_count(n)   VERIFY(gnu_counting_struct::count == n)\n \n-gnu_counting_struct::size_type  gnu_counting_struct::count = 0;\n+\n+class gnu_copy_tracker\n+{\n+  public:\n+    // Cannot be explicit.  Conversion ctor used by list_modifiers.cc's\n+    // test03(), \"range fill at beginning\".\n+    gnu_copy_tracker (int anId, bool throwOnDemand = false)\n+    : itsId(anId), willThrow(throwOnDemand)\n+    {}\n+\n+    gnu_copy_tracker (const gnu_copy_tracker& rhs)\n+    : itsId(rhs.id()), willThrow(rhs.willThrow)\n+    {\n+      ++itsCopyCount;\n+      if (willThrow) throw \"copy tracker exception\";\n+    }\n+\n+    gnu_copy_tracker& operator=(const gnu_copy_tracker& rhs)\n+    {\n+      itsId = rhs.id();\n+      // willThrow must obviously already be false to get this far\n+    }\n+\n+    ~gnu_copy_tracker() { ++itsDtorCount; }\n+\n+    int\n+    id() const\n+    { return itsId; }\n+\n+  private:\n+          int   itsId;\n+    const bool  willThrow;\n+\n+  public:\n+    static void\n+    reset()\n+    { itsCopyCount = 0; itsDtorCount = 0; }\n+\n+    static int\n+    copyCount() \n+    { return itsCopyCount; }\n+\n+    static int\n+    dtorCount() \n+    { return itsDtorCount; }\n+\n+  private:\n+    static int itsCopyCount;\n+    static int itsDtorCount;\n+};\n \n \n #endif // _GLIBCPP_TESTSUITE_HOOKS_H"}]}