{"sha": "0e521c64613e0407bd086a26322402b29daeb370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU1MjFjNjQ2MTNlMDQwN2JkMDg2YTI2MzIyNDAyYjI5ZGFlYjM3MA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-09-05T18:14:34Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-09-05T18:14:34Z"}, "message": "re PR fortran/91660 (Missing error on invalid type declaration)\n\n2019-09-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/91660\n\t* decl.c (gfc_match_decl_type_spec): Improve and restore error\n\tmessage for malformed types-spec.\n\n2019-09-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/91660\n\t* gfortran.dg/pdt_4.f03: Fix invalid code.\n\t* gfortran.dg/pr91660_1.f90: New test.\n\t* gfortran.dg/pr91660_2.f90: Ditto.\n\nFrom-SVN: r275426", "tree": {"sha": "a4f9c3764d80573e09b33875901f2db9e2fee4e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4f9c3764d80573e09b33875901f2db9e2fee4e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e521c64613e0407bd086a26322402b29daeb370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e521c64613e0407bd086a26322402b29daeb370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e521c64613e0407bd086a26322402b29daeb370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e521c64613e0407bd086a26322402b29daeb370/comments", "author": null, "committer": null, "parents": [{"sha": "bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb64bef659dc5b11fe1f8ff1f7df65603c9d8876"}], "stats": {"total": 60, "additions": 53, "deletions": 7}, "files": [{"sha": "129bfdd9ae741f02f6e7f9bb47a3c539c0187931", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0e521c64613e0407bd086a26322402b29daeb370", "patch": "@@ -1,3 +1,9 @@\n+2019-09-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/91660\n+\t* decl.c (gfc_match_decl_type_spec): Improve and restore error\n+\tmessage for malformed types-spec.\n+\n 2019-09-04  Steven G. Kargl  <kargl@gcvc.gnu.org>\n \n \tPR fortran/91650"}, {"sha": "278882d985562bd4ee9a832458af12b3b2543ec7", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=0e521c64613e0407bd086a26322402b29daeb370", "patch": "@@ -4023,7 +4023,6 @@ gfc_match_decl_type_spec (gfc_typespec *ts, int implicit_flag)\n       return MATCH_YES;\n     }\n \n-\n   m = gfc_match (\" type (\");\n   matched_type = (m == MATCH_YES);\n   if (matched_type)\n@@ -4071,7 +4070,10 @@ gfc_match_decl_type_spec (gfc_typespec *ts, int implicit_flag)\n \tm = MATCH_YES;\n \n       if (matched_type && m == MATCH_YES && gfc_match_char (')') != MATCH_YES)\n-\tm = MATCH_ERROR;\n+\t{\n+\t  gfc_error (\"Malformed type-spec at %C\");\n+\t  return MATCH_ERROR;\n+\t}\n \n       return m;\n     }\n@@ -4094,8 +4096,12 @@ gfc_match_decl_type_spec (gfc_typespec *ts, int implicit_flag)\n \t  && !gfc_notify_std (GFC_STD_F2008, \"TYPE with \"\n \t\t\t      \"intrinsic-type-spec at %C\"))\n \treturn MATCH_ERROR;\n+\n       if (matched_type && gfc_match_char (')') != MATCH_YES)\n-\treturn MATCH_ERROR;\n+\t{\n+\t  gfc_error (\"Malformed type-spec at %C\");\n+\t  return MATCH_ERROR;\n+\t}\n \n       ts->type = BT_REAL;\n       ts->kind = gfc_default_double_kind;\n@@ -4125,7 +4131,10 @@ gfc_match_decl_type_spec (gfc_typespec *ts, int implicit_flag)\n \treturn MATCH_ERROR;\n \n       if (matched_type && gfc_match_char (')') != MATCH_YES)\n-\treturn MATCH_ERROR;\n+\t{\n+\t  gfc_error (\"Malformed type-spec at %C\");\n+\t  return MATCH_ERROR;\n+\t}\n \n       ts->type = BT_COMPLEX;\n       ts->kind = gfc_default_double_kind;\n@@ -4146,7 +4155,13 @@ gfc_match_decl_type_spec (gfc_typespec *ts, int implicit_flag)\n       if (m == MATCH_ERROR)\n \treturn m;\n \n-    m = gfc_match_char (')');\n+      gfc_gobble_whitespace ();\n+      if (gfc_peek_ascii_char () != ')')\n+\t{\n+\t  gfc_error (\"Malformed type-spec at %C\");\n+\t  return MATCH_ERROR;\n+\t}\n+      m = gfc_match_char (')'); /* Burn closing ')'.  */\n     }\n \n   if (m != MATCH_YES)"}, {"sha": "a43cec3e282b969c059ae3b1878d25efb940cd36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e521c64613e0407bd086a26322402b29daeb370", "patch": "@@ -1,3 +1,10 @@\n+2019-09-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/91660\n+\t* gfortran.dg/pdt_4.f03: Fix invalid code.\n+        * gfortran.dg/pr91660_1.f90: New test.\n+\t* gfortran.dg/pr91660_2.f90: Ditto.\n+\n 2019-09-05  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91644 - ICE with constinit in function template."}, {"sha": "c1af65a52487361ba9d361a043d3e1fe0d943146", "filename": "gcc/testsuite/gfortran.dg/pdt_4.f03", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpdt_4.f03?ref=0e521c64613e0407bd086a26322402b29daeb370", "patch": "@@ -97,9 +97,9 @@ subroutine foo(arg)\n     type (mytype(4, *)) :: arg      ! OK\n   end subroutine\n   subroutine bar(arg)               ! { dg-error \"is neither allocatable nor a pointer\" }\n-    type (thytype(8, :, 4) :: arg\n+    type (thytype(8, :, 4)) :: arg\n   end subroutine\n   subroutine foobar(arg)            ! OK\n-    type (thytype(8, *, 4) :: arg\n+    type (thytype(8, *, 4)) :: arg\n   end subroutine\n end"}, {"sha": "53a1a808a7b5206aa56d54f2b4b866a5be772ca1", "filename": "gcc/testsuite/gfortran.dg/pr91660_1.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91660_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91660_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91660_1.f90?ref=0e521c64613e0407bd086a26322402b29daeb370", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/91660\n+! Code contributed by Gerhard Steinmetz\n+program p\n+   type t\n+   end type\n+   type (t x    ! { dg-error \"Malformed type-spec\" }\n+   x = t()      ! { dg-error \"Cannot convert\" }\n+end"}, {"sha": "0072aba168025c4ef1c6aef5bb537fbf27b533c9", "filename": "gcc/testsuite/gfortran.dg/pr91660_2.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91660_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e521c64613e0407bd086a26322402b29daeb370/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91660_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91660_2.f90?ref=0e521c64613e0407bd086a26322402b29daeb370", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/91660\n+program foo\n+   type(doubleprecision :: x   ! { dg-error \"Malformed type-spec\" }\n+   type(double precision :: y  ! { dg-error \"Malformed type-spec\" }\n+   type(character(len=3) :: a  ! { dg-error \"Malformed type-spec\" }\n+   type(doublecomplex :: b     ! { dg-error \"Malformed type-spec\" }\n+   type(double complex :: c    ! { dg-error \"Malformed type-spec\" }\n+end program foo"}]}