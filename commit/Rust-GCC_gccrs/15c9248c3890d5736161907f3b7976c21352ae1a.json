{"sha": "15c9248c3890d5736161907f3b7976c21352ae1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjOTI0OGMzODkwZDU3MzYxNjE5MDdmM2I3OTc2YzIxMzUyYWUxYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-22T11:28:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-22T11:28:38Z"}, "message": "(init_emit): Set REGNO_POINTER_FLAG for HARD_FRAME_POINTER_REGNUM.\n\n(ptr_mode): Add definition.\n(init_emit_once): Initialize ptr_mode.\n\nFrom-SVN: r8548", "tree": {"sha": "be3c2bccd89ad1ea376d8e9b61ba003a1c331f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be3c2bccd89ad1ea376d8e9b61ba003a1c331f2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15c9248c3890d5736161907f3b7976c21352ae1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c9248c3890d5736161907f3b7976c21352ae1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c9248c3890d5736161907f3b7976c21352ae1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c9248c3890d5736161907f3b7976c21352ae1a/comments", "author": null, "committer": null, "parents": [{"sha": "6c164c81ed0b1ca990ecd890eae839b06083dbca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c164c81ed0b1ca990ecd890eae839b06083dbca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c164c81ed0b1ca990ecd890eae839b06083dbca"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "270d8d4088be8cd15f8a47e0f2e17b77490bf8d9", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c9248c3890d5736161907f3b7976c21352ae1a/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c9248c3890d5736161907f3b7976c21352ae1a/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=15c9248c3890d5736161907f3b7976c21352ae1a", "patch": "@@ -72,8 +72,9 @@ char *opcode_name[] =\n \n /* Commonly used modes.  */\n \n-enum machine_mode byte_mode;\t/* Mode whose width is BITS_PER_UNIT */\n-enum machine_mode word_mode;\t/* Mode whose width is BITS_PER_WORD */\n+enum machine_mode byte_mode;\t/* Mode whose width is BITS_PER_UNIT. */\n+enum machine_mode word_mode;\t/* Mode whose width is BITS_PER_WORD. */\n+enum machine_mode ptr_mode;\t/* Mode whose width is POINTER_SIZE. */\n \n /* This is reset to LAST_VIRTUAL_REGISTER + 1 at the start of each function.\n    After rtl generation, it is 1 plus the largest register number used.  */\n@@ -3248,6 +3249,7 @@ init_emit ()\n      all pointers.  */\n   REGNO_POINTER_FLAG (STACK_POINTER_REGNUM) = 1;\n   REGNO_POINTER_FLAG (FRAME_POINTER_REGNUM) = 1;\n+  REGNO_POINTER_FLAG (HARD_FRAME_POINTER_REGNUM) = 1;\n   REGNO_POINTER_FLAG (ARG_POINTER_REGNUM) = 1;\n \n   REGNO_POINTER_FLAG (VIRTUAL_INCOMING_ARGS_REGNUM) = 1;\n@@ -3291,6 +3293,8 @@ init_emit_once (line_numbers)\n \tword_mode = mode;\n     }\n \n+  ptr_mode = mode_for_size (POINTER_SIZE, GET_MODE_CLASS (Pmode), 0);\n+\n   /* Create the unique rtx's for certain rtx codes and operand values.  */\n \n   pc_rtx = gen_rtx (PC, VOIDmode);"}]}