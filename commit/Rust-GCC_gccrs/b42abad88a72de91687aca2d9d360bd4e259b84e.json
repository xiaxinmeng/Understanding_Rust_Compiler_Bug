{"sha": "b42abad88a72de91687aca2d9d360bd4e259b84e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQyYWJhZDg4YTcyZGU5MTY4N2FjYTJkOWQzNjBiZDRlMjU5Yjg0ZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2001-06-28T00:14:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-06-28T00:14:23Z"}, "message": "simplify-rtx.c (simplify_rtx): Canonicalize commutative expressions by putting complex operands first and...\n\n        * simplify-rtx.c (simplify_rtx): Canonicalize commutative expressions\n        by putting complex operands first and constants second.\n\nFrom-SVN: r43621", "tree": {"sha": "55584ceccdd01345c451779238b56ecb878546f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55584ceccdd01345c451779238b56ecb878546f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b42abad88a72de91687aca2d9d360bd4e259b84e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42abad88a72de91687aca2d9d360bd4e259b84e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b42abad88a72de91687aca2d9d360bd4e259b84e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42abad88a72de91687aca2d9d360bd4e259b84e/comments", "author": null, "committer": null, "parents": [{"sha": "6dc04dec655a628940545bcceaa656178d1f2040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc04dec655a628940545bcceaa656178d1f2040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc04dec655a628940545bcceaa656178d1f2040"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "3f374681d8457e6344cb3de6e36a0bd63e531a5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42abad88a72de91687aca2d9d360bd4e259b84e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42abad88a72de91687aca2d9d360bd4e259b84e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b42abad88a72de91687aca2d9d360bd4e259b84e", "patch": "@@ -1,3 +1,8 @@\n+Wed Jun 27 18:01:09 2001  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* simplify-rtx.c (simplify_rtx): Canonicalize commutative expressions\n+\tby putting complex operands first and constants second.\n+\n 2001-06-27  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* diagnostic.h: Add documentation. Make macros polymorphic."}, {"sha": "a5ef099360084e3e2e4ea62d126ffb95d726fa01", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42abad88a72de91687aca2d9d360bd4e259b84e/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42abad88a72de91687aca2d9d360bd4e259b84e/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=b42abad88a72de91687aca2d9d360bd4e259b84e", "patch": "@@ -2520,8 +2520,26 @@ simplify_rtx (x)\n     case '1':\n       return simplify_unary_operation (code, mode,\n \t\t\t\t       XEXP (x, 0), GET_MODE (XEXP (x, 0)));\n-    case '2':\n     case 'c':\n+      /* Put complex operands first and constants second if commutative.  */\n+      if (GET_RTX_CLASS (code) == 'c'\n+\t  && ((CONSTANT_P (XEXP (x, 0)) && GET_CODE (XEXP (x, 1)) != CONST_INT)\n+\t      || (GET_RTX_CLASS (GET_CODE (XEXP (x, 0))) == 'o'\n+\t\t  && GET_RTX_CLASS (GET_CODE (XEXP (x, 1))) != 'o')\n+\t      || (GET_CODE (XEXP (x, 0)) == SUBREG\n+\t\t  && GET_RTX_CLASS (GET_CODE (SUBREG_REG (XEXP (x, 0)))) == 'o'\n+\t\t  && GET_RTX_CLASS (GET_CODE (XEXP (x, 1))) != 'o')))\n+\t{\n+\t  rtx tem;\n+\n+\t  tem = XEXP (x, 0);\n+\t  XEXP (x, 0) = XEXP (x, 1);\n+\t  XEXP (x, 1) = tem;\n+\t  return simplify_binary_operation (code, mode,\n+\t\t\t\t\t    XEXP (x, 0), XEXP (x, 1));\n+\t}\n+\n+    case '2':\n       return simplify_binary_operation (code, mode, XEXP (x, 0), XEXP (x, 1));\n \n     case '3':"}]}