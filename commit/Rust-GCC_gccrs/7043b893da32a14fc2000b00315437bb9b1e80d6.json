{"sha": "7043b893da32a14fc2000b00315437bb9b1e80d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0M2I4OTNkYTMyYTE0ZmMyMDAwYjAwMzE1NDM3YmI5YjFlODBkNg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-09-30T14:12:34Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-09-30T14:12:34Z"}, "message": "sched-ebb.c (schedule_ebb): No longer static.\n\n\t* sched-ebb.c (schedule_ebb): No longer static.  Remove declaration.\n\tNew arg modulo_scheduling.  All callers changed.  Move note handling\n\tcode here from schedule_ebbs.\n\t(schedule_ebbs_finish, schedule_ebbs_init): New functions, broken\n\tout of schedule_ebbs.\n\t(schedule_ebbs): Call them.  Remove note handling code moved to\n\tschedule_ebb.\n\t* sched-int.h (schedule_ebb, schedule_ebbs_init,\n\tschedule_ebbs_finish): Declare.\n\nFrom-SVN: r179385", "tree": {"sha": "3905474a77b3c873567f246ace29ac115ff8cf60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3905474a77b3c873567f246ace29ac115ff8cf60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7043b893da32a14fc2000b00315437bb9b1e80d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7043b893da32a14fc2000b00315437bb9b1e80d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7043b893da32a14fc2000b00315437bb9b1e80d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7043b893da32a14fc2000b00315437bb9b1e80d6/comments", "author": null, "committer": null, "parents": [{"sha": "a912d7d96f360f4947d243bef26b4a348d076dd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a912d7d96f360f4947d243bef26b4a348d076dd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a912d7d96f360f4947d243bef26b4a348d076dd8"}], "stats": {"total": 136, "additions": 87, "deletions": 49}, "files": [{"sha": "b0e5c21ca9c4b52924d13d41f57970c183a5a7e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7043b893da32a14fc2000b00315437bb9b1e80d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7043b893da32a14fc2000b00315437bb9b1e80d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7043b893da32a14fc2000b00315437bb9b1e80d6", "patch": "@@ -28,6 +28,16 @@\n \t* params.def (PARAM_MAX_MODULO_BACKTRACK_ATTEMPS): New.\n \t* doc/invoke.texi (--param): Document it.\n \n+\t* sched-ebb.c (schedule_ebb): No longer static.  Remove declaration.\n+\tNew arg modulo_scheduling.  All callers changed.  Move note handling\n+\tcode here from schedule_ebbs.\n+\t(schedule_ebbs_finish, schedule_ebbs_init): New functions, broken\n+\tout of schedule_ebbs.\n+\t(schedule_ebbs): Call them.  Remove note handling code moved to\n+\tschedule_ebb.\n+\t* sched-int.h (schedule_ebb, schedule_ebbs_init,\n+\tschedule_ebbs_finish): Declare.\n+\n 2011-09-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/50574"}, {"sha": "5ec1de017b4e6ac77e99d41955f9c59d39423cba", "filename": "gcc/sched-ebb.c", "status": "modified", "additions": 72, "deletions": 49, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7043b893da32a14fc2000b00315437bb9b1e80d6/gcc%2Fsched-ebb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7043b893da32a14fc2000b00315437bb9b1e80d6/gcc%2Fsched-ebb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-ebb.c?ref=7043b893da32a14fc2000b00315437bb9b1e80d6", "patch": "@@ -66,7 +66,6 @@ static int rank (rtx, rtx);\n static int ebb_contributes_to_priority (rtx, rtx);\n static basic_block earliest_block_with_similiar_load (basic_block, rtx);\n static void add_deps_for_risky_insns (rtx, rtx);\n-static basic_block schedule_ebb (rtx, rtx);\n static void debug_ebb_dependencies (rtx, rtx);\n \n static void ebb_add_remove_insn (rtx, int);\n@@ -476,14 +475,35 @@ add_deps_for_risky_insns (rtx head, rtx tail)\n     }\n }\n \n-/* Schedule a single extended basic block, defined by the boundaries HEAD\n-   and TAIL.  */\n+/* Schedule a single extended basic block, defined by the boundaries\n+   HEAD and TAIL.\n \n-static basic_block\n-schedule_ebb (rtx head, rtx tail)\n+   We change our expectations about scheduler behaviour depending on\n+   whether MODULO_SCHEDULING is true.  If it is, we expect that the\n+   caller has already called set_modulo_params and created delay pairs\n+   as appropriate.  If the modulo schedule failed, we return\n+   NULL_RTX.  */\n+\n+basic_block\n+schedule_ebb (rtx head, rtx tail, bool modulo_scheduling)\n {\n   basic_block first_bb, target_bb;\n   struct deps_desc tmp_deps;\n+  bool success;\n+\n+  /* Blah.  We should fix the rest of the code not to get confused by\n+     a note or two.  */\n+  while (head != tail)\n+    {\n+      if (NOTE_P (head) || DEBUG_INSN_P (head))\n+\thead = NEXT_INSN (head);\n+      else if (NOTE_P (tail) || DEBUG_INSN_P (tail))\n+\ttail = PREV_INSN (tail);\n+      else if (LABEL_P (head))\n+\thead = NEXT_INSN (head);\n+      else\n+\tbreak;\n+    }\n \n   first_bb = BLOCK_FOR_INSN (head);\n   last_bb = BLOCK_FOR_INSN (tail);\n@@ -530,15 +550,17 @@ schedule_ebb (rtx head, rtx tail)\n \n   /* Make ready list big enough to hold all the instructions from the ebb.  */\n   sched_extend_ready_list (rgn_n_insns);\n-  schedule_block (&target_bb);\n+  success = schedule_block (&target_bb);\n+  gcc_assert (success || modulo_scheduling);\n+\n   /* Free ready list.  */\n   sched_finish_ready_list ();\n \n   /* We might pack all instructions into fewer blocks,\n      so we may made some of them empty.  Can't assert (b == last_bb).  */\n \n   /* Sanity check: verify that all region insns were scheduled.  */\n-  gcc_assert (sched_rgn_n_insns == rgn_n_insns);\n+  gcc_assert (modulo_scheduling || sched_rgn_n_insns == rgn_n_insns);\n \n   /* Free dependencies.  */\n   sched_free_deps (current_sched_info->head, current_sched_info->tail, true);\n@@ -555,29 +577,14 @@ schedule_ebb (rtx head, rtx tail)\n       delete_basic_block (last_bb->next_bb);\n     }\n \n-  return last_bb;\n+  return success ? last_bb : NULL;\n }\n \n-/* The one entry point in this file.  */\n-\n+/* Perform initializations before running schedule_ebbs or a single\n+   schedule_ebb.  */\n void\n-schedule_ebbs (void)\n+schedule_ebbs_init (void)\n {\n-  basic_block bb;\n-  int probability_cutoff;\n-  rtx tail;\n-\n-  if (profile_info && flag_branch_probabilities)\n-    probability_cutoff = PARAM_VALUE (TRACER_MIN_BRANCH_PROBABILITY_FEEDBACK);\n-  else\n-    probability_cutoff = PARAM_VALUE (TRACER_MIN_BRANCH_PROBABILITY);\n-  probability_cutoff = REG_BR_PROB_BASE / 100 * probability_cutoff;\n-\n-  /* Taking care of this degenerate case makes the rest of\n-     this code simpler.  */\n-  if (n_basic_blocks == NUM_FIXED_BLOCKS)\n-    return;\n-\n   /* Setup infos.  */\n   {\n     memcpy (&ebb_common_sched_info, &haifa_common_sched_info,\n@@ -599,6 +606,43 @@ schedule_ebbs (void)\n   /* Initialize DONT_CALC_DEPS and ebb-{start, end} markers.  */\n   bitmap_initialize (&dont_calc_deps, 0);\n   bitmap_clear (&dont_calc_deps);\n+}\n+\n+/* Perform cleanups after scheduling using schedules_ebbs or schedule_ebb.  */\n+void\n+schedule_ebbs_finish (void)\n+{\n+  bitmap_clear (&dont_calc_deps);\n+\n+  /* Reposition the prologue and epilogue notes in case we moved the\n+     prologue/epilogue insns.  */\n+  if (reload_completed)\n+    reposition_prologue_and_epilogue_notes ();\n+\n+  haifa_sched_finish ();\n+}\n+\n+/* The main entry point in this file.  */\n+\n+void\n+schedule_ebbs (void)\n+{\n+  basic_block bb;\n+  int probability_cutoff;\n+  rtx tail;\n+\n+  /* Taking care of this degenerate case makes the rest of\n+     this code simpler.  */\n+  if (n_basic_blocks == NUM_FIXED_BLOCKS)\n+    return;\n+\n+  if (profile_info && flag_branch_probabilities)\n+    probability_cutoff = PARAM_VALUE (TRACER_MIN_BRANCH_PROBABILITY_FEEDBACK);\n+  else\n+    probability_cutoff = PARAM_VALUE (TRACER_MIN_BRANCH_PROBABILITY);\n+  probability_cutoff = REG_BR_PROB_BASE / 100 * probability_cutoff;\n+\n+  schedule_ebbs_init ();\n \n   /* Schedule every region in the subroutine.  */\n   FOR_EACH_BB (bb)\n@@ -625,30 +669,9 @@ schedule_ebbs (void)\n \t  bb = bb->next_bb;\n \t}\n \n-      /* Blah.  We should fix the rest of the code not to get confused by\n-\t a note or two.  */\n-      while (head != tail)\n-\t{\n-\t  if (NOTE_P (head) || DEBUG_INSN_P (head))\n-\t    head = NEXT_INSN (head);\n-\t  else if (NOTE_P (tail) || DEBUG_INSN_P (tail))\n-\t    tail = PREV_INSN (tail);\n-\t  else if (LABEL_P (head))\n-\t    head = NEXT_INSN (head);\n-\t  else\n-\t    break;\n-\t}\n-\n-      bb = schedule_ebb (head, tail);\n+      bb = schedule_ebb (head, tail, false);\n     }\n-  bitmap_clear (&dont_calc_deps);\n-\n-  /* Reposition the prologue and epilogue notes in case we moved the\n-     prologue/epilogue insns.  */\n-  if (reload_completed)\n-    reposition_prologue_and_epilogue_notes ();\n-\n-  haifa_sched_finish ();\n+  schedule_ebbs_finish ();\n }\n \n /* INSN has been added to/removed from current ebb.  */"}, {"sha": "02e8c6055ebde66bcf95726efa10ee2faf5a629d", "filename": "gcc/sched-int.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7043b893da32a14fc2000b00315437bb9b1e80d6/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7043b893da32a14fc2000b00315437bb9b1e80d6/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=7043b893da32a14fc2000b00315437bb9b1e80d6", "patch": "@@ -1280,7 +1280,12 @@ extern rtx sched_emit_insn (rtx);\n extern rtx get_ready_element (int);\n extern int number_in_ready (void);\n \f\n+/* Types and functions in sched-ebb.c.  */\n \n+extern basic_block schedule_ebb (rtx, rtx, bool);\n+extern void schedule_ebbs_init (void);\n+extern void schedule_ebbs_finish (void);\n+\f\n /* Types and functions in sched-rgn.c.  */\n \n /* A region is the main entity for interblock scheduling: insns"}]}