{"sha": "f8ea7cb08dc13e3cb78bb3b4017c556c9838263b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhlYTdjYjA4ZGMxM2UzY2I3OGJiM2I0MDE3YzU1NmM5ODM4MjYzYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-21T19:12:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-21T19:12:06Z"}, "message": "re PR target/59003 (profiledbootstrap miscompiles gcc during stagefeedback --with-tune=amdfam10)\n\n\tPR target/59003\n\t* config/i386/i386.c (expand_small_movmem_or_setmem): If mode is\n\tsmaller than size, perform several stores or loads and stores\n\tat dst + count - size to store or copy all of size bytes, rather\n\tthan just last modesize bytes.\n\n\t* gcc.dg/tree-prof/pr59003.c: New test.\n\nFrom-SVN: r206896", "tree": {"sha": "887f120f5543a7885ae30a5f8914a67efcca122c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/887f120f5543a7885ae30a5f8914a67efcca122c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "800d8bd54791c2f94de54e15ab3ae0d07d969787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800d8bd54791c2f94de54e15ab3ae0d07d969787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800d8bd54791c2f94de54e15ab3ae0d07d969787"}], "stats": {"total": 60, "additions": 54, "deletions": 6}, "files": [{"sha": "9efc19abde39271a06d569c3f337628be9722ab5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8ea7cb08dc13e3cb78bb3b4017c556c9838263b", "patch": "@@ -1,3 +1,11 @@\n+2014-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/59003\n+\t* config/i386/i386.c (expand_small_movmem_or_setmem): If mode is\n+\tsmaller than size, perform several stores or loads and stores\n+\tat dst + count - size to store or copy all of size bytes, rather\n+\tthan just last modesize bytes.\n+\n 2014-01-20  DJ Delorie  <dj@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_propogate_register_origins): Verify"}, {"sha": "4629053af79dc06b123e3c1b5df3a0963308face", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f8ea7cb08dc13e3cb78bb3b4017c556c9838263b", "patch": "@@ -23397,16 +23397,24 @@ expand_small_movmem_or_setmem (rtx destmem, rtx srcmem,\n     }\n \n   destmem = offset_address (destmem, count, 1);\n-  destmem = offset_address (destmem, GEN_INT (-size - GET_MODE_SIZE (mode)),\n+  destmem = offset_address (destmem, GEN_INT (-2 * size),\n \t\t\t    GET_MODE_SIZE (mode));\n-  if (issetmem)\n-    emit_move_insn (destmem, gen_lowpart (mode, value));\n-  else\n+  if (!issetmem)\n     {\n       srcmem = offset_address (srcmem, count, 1);\n-      srcmem = offset_address (srcmem, GEN_INT (-size - GET_MODE_SIZE (mode)),\n+      srcmem = offset_address (srcmem, GEN_INT (-2 * size),\n \t\t\t       GET_MODE_SIZE (mode));\n-      emit_move_insn (destmem, srcmem);\n+    }\n+  for (n = 0; n * GET_MODE_SIZE (mode) < size; n++)\n+    {\n+      if (issetmem)\n+\temit_move_insn (destmem, gen_lowpart (mode, value));\n+      else\n+\t{\n+\t  emit_move_insn (destmem, srcmem);\n+\t  srcmem = offset_address (srcmem, modesize, GET_MODE_SIZE (mode));\n+\t}\n+      destmem = offset_address (destmem, modesize, GET_MODE_SIZE (mode));\n     }\n   emit_jump_insn (gen_jump (done_label));\n   emit_barrier ();"}, {"sha": "f7f6f88e26aaa7d2839a502a77aa186e487ff363", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8ea7cb08dc13e3cb78bb3b4017c556c9838263b", "patch": "@@ -1,5 +1,8 @@\n 2014-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/59003\n+\t* gcc.dg/tree-prof/pr59003.c: New test.\n+\n \tPR middle-end/59860\n \t* gcc.dg/strlenopt-4.c: Expect the same counts on s390*-* as on all\n \tother targets."}, {"sha": "b4ca9ea856ec760e878f83db68090461354f6855", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr59003.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr59003.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ea7cb08dc13e3cb78bb3b4017c556c9838263b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr59003.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr59003.c?ref=f8ea7cb08dc13e3cb78bb3b4017c556c9838263b", "patch": "@@ -0,0 +1,29 @@\n+/* PR target/59003 */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -mtune=amdfam10\" { target i?86-*-* x86_64-*-* } } */\n+\n+__attribute__((noinline, noclone)) void *\n+foo (void *p, unsigned int q)\n+{\n+  return __builtin_memset (p, 0, q * 4UL);\n+}\n+\n+char buf[128] __attribute__((aligned (32)));\n+\n+int\n+main ()\n+{\n+  int i;\n+  for (i = 0; i < 100000; i++)\n+    foo (buf + 4, 1 + (i & 1));\n+  for (i = 0; i < 128; i++)\n+    {\n+      buf[i] = 'X';\n+      asm volatile (\"\" : : : \"memory\");\n+    }\n+  foo (buf + 32, 7);\n+  for (i = 0; i < 128; i++)\n+    if (buf[i] != ((i < 32 || i >= 32 + 28) ? 'X' : 0))\n+      __builtin_abort ();\n+  return 0;\n+}"}]}