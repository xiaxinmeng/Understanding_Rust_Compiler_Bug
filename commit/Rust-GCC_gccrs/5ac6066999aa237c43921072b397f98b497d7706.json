{"sha": "5ac6066999aa237c43921072b397f98b497d7706", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFjNjA2Njk5OWFhMjM3YzQzOTIxMDcyYjM5N2Y5OGI0OTdkNzcwNg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-03-28T19:38:28Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-03-28T19:38:28Z"}, "message": "expr.c (emit_group_store): Only create a new pseudo reg if the quantity it needs to hold isn't already a...\n\n\n\t* expr.c (emit_group_store): Only create a new pseudo reg if the\n\tquantity it needs to hold isn't already a suitable pseudo.\n\nFrom-SVN: r112469", "tree": {"sha": "02625edb085b22a09fb9fbbdff1c623e6ea4b7c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02625edb085b22a09fb9fbbdff1c623e6ea4b7c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ac6066999aa237c43921072b397f98b497d7706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ac6066999aa237c43921072b397f98b497d7706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ac6066999aa237c43921072b397f98b497d7706", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ac6066999aa237c43921072b397f98b497d7706/comments", "author": null, "committer": null, "parents": [{"sha": "b6313dcf9644cd51faa48c45da06afcd42751b3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6313dcf9644cd51faa48c45da06afcd42751b3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6313dcf9644cd51faa48c45da06afcd42751b3e"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "58952cdebd01272ce9ed6cdba63d173a74f08a98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ac6066999aa237c43921072b397f98b497d7706/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ac6066999aa237c43921072b397f98b497d7706/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ac6066999aa237c43921072b397f98b497d7706", "patch": "@@ -1,3 +1,8 @@\n+2006-03-28  Roger Sayle   <roger@eyesopen.com>\n+\n+\t* expr.c (emit_group_store): Only create a new pseudo reg if the\n+\tquantity it needs to hold isn't already a suitable pseudo.\n+\n 2006-03-28  Jeff Law  <law@redhat.com>\n \n \t* timevar.def (TV_TREE_PHI_CPROP): New timevar."}, {"sha": "f579e27c865dc03f4760821603752d3c53049a25", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ac6066999aa237c43921072b397f98b497d7706/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ac6066999aa237c43921072b397f98b497d7706/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=5ac6066999aa237c43921072b397f98b497d7706", "patch": "@@ -1890,8 +1890,13 @@ emit_group_store (rtx orig_dst, rtx src, tree type ATTRIBUTE_UNUSED, int ssize)\n   for (i = start; i < XVECLEN (src, 0); i++)\n     {\n       rtx reg = XEXP (XVECEXP (src, 0, i), 0);\n-      tmps[i] = gen_reg_rtx (GET_MODE (reg));\n-      emit_move_insn (tmps[i], reg);\n+      if (!REG_P (reg) || REGNO (reg) < FIRST_PSEUDO_REGISTER)\n+\t{\n+\t  tmps[i] = gen_reg_rtx (GET_MODE (reg));\n+\t  emit_move_insn (tmps[i], reg);\n+\t}\n+      else\n+\ttmps[i] = reg;\n     }\n \n   /* If we won't be storing directly into memory, protect the real destination\n@@ -1918,7 +1923,8 @@ emit_group_store (rtx orig_dst, rtx src, tree type ATTRIBUTE_UNUSED, int ssize)\n     }\n   else if (!MEM_P (dst) && GET_CODE (dst) != CONCAT)\n     {\n-      dst = gen_reg_rtx (GET_MODE (orig_dst));\n+      if (!REG_P (dst) || REGNO (dst) < FIRST_PSEUDO_REGISTER)\n+\tdst = gen_reg_rtx (GET_MODE (orig_dst));\n       /* Make life a bit easier for combine.  */\n       emit_move_insn (dst, CONST0_RTX (GET_MODE (orig_dst)));\n     }"}]}