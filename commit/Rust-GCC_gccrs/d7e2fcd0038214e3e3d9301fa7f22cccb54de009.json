{"sha": "d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdlMmZjZDAwMzgyMTRlM2UzZDkzMDFmYTdmMjJjY2NiNTRkZTAwOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-01-19T15:41:04Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-01-19T15:41:04Z"}, "message": "re PR fortran/34760 (PRIVATE variable not allowed as STAT variable in ALLOCATE)\n\n2008-01-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34760\n        * primary.c (match_variable): Handle FL_UNKNOWN without\n        uneducated guessing.\n        (match_variable): Improve error message.\n\n2008-01-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34760\n        * gfortran.dg/implicit_11.f90: New.\n        * gfortran.dg/allocate_stat.f90: Update dg-error pattern.\n        * gfortran.dg/entry_15.f90: Ditto.\n        * gfortran.dg/func_assign.f90: Ditto.\n        * gfortran.dg/gomp/reduction3.f90: Ditto.\n        * gfortran.dg/proc_assign_1.f90: Ditto.\n\n        * gfortran.dg/interface_proc_end.f90: Use dg-error instead\n        of dg-excess-errors.\n\nFrom-SVN: r131652", "tree": {"sha": "1be5fcc97dfa3af194b49fcac90136b7e4261ed0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1be5fcc97dfa3af194b49fcac90136b7e4261ed0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a84fec6967c3b45c3bf62d5e00d3e8f6cfb6368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a84fec6967c3b45c3bf62d5e00d3e8f6cfb6368", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a84fec6967c3b45c3bf62d5e00d3e8f6cfb6368"}], "stats": {"total": 100, "additions": 84, "deletions": 16}, "files": [{"sha": "46c95e00f26bd751dfcd47e96bf724796e08218f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -1,3 +1,10 @@\n+2008-01-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34760\n+\t* primary.c (match_variable): Handle FL_UNKNOWN without\n+\tuneducated guessing.\n+\t(match_variable): Improve error message.\n+\n 2008-01-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/32616"}, {"sha": "4e7d4a11506dcd598479bc4d25d3ee6c9b6764b6", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -2521,12 +2521,22 @@ match_variable (gfc_expr **result, int equiv_flag, int host_flag)\n       break;\n \n     case FL_UNKNOWN:\n-      if (sym->attr.access == ACCESS_PUBLIC\n-\t  || sym->attr.access == ACCESS_PRIVATE)\n-\tbreak;\n-      if (gfc_add_flavor (&sym->attr, FL_VARIABLE,\n-\t\t\t  sym->name, NULL) == FAILURE)\n-\treturn MATCH_ERROR;\n+      {\n+\tsym_flavor flavor = FL_UNKNOWN;\n+\n+\tgfc_gobble_whitespace ();\n+\n+\tif (sym->attr.external || sym->attr.procedure\n+\t    || sym->attr.function || sym->attr.subroutine)\n+\t  flavor = FL_PROCEDURE;\n+\telse if (gfc_peek_char () != '(' || sym->ts.type != BT_UNKNOWN\n+\t\t || sym->attr.pointer || sym->as != NULL)\n+\t  flavor = FL_VARIABLE;\n+\n+\tif (flavor != FL_UNKNOWN\n+\t    && gfc_add_flavor (&sym->attr, flavor, sym->name, NULL) == FAILURE)\n+\t  return MATCH_ERROR;\n+      }\n       break;\n \n     case FL_PARAMETER:\n@@ -2553,7 +2563,7 @@ match_variable (gfc_expr **result, int equiv_flag, int host_flag)\n       /* Fall through to error */\n \n     default:\n-      gfc_error (\"Expected VARIABLE at %C\");\n+      gfc_error (\"'%s' at %C is not a variable\", sym->name);\n       return MATCH_ERROR;\n     }\n "}, {"sha": "73c1e6084a0c069e5164debad0f4f4171fe5b8cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -1,3 +1,16 @@\n+2008-01-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34760\n+\t* gfortran.dg/implicit_11.f90: New.\n+\t* gfortran.dg/allocate_stat.f90: Update dg-error pattern.\n+\t* gfortran.dg/entry_15.f90: Ditto.\n+\t* gfortran.dg/func_assign.f90: Ditto.\n+\t* gfortran.dg/gomp/reduction3.f90: Ditto.\n+\t* gfortran.dg/proc_assign_1.f90: Ditto.\n+\n+\t* gfortran.dg/interface_proc_end.f90: Use dg-error instead\n+\tof dg-excess-errors.\n+\n 2008-01-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/32616"}, {"sha": "94ec4303f816bebe5fa1de48c27849f2f5b5b9a7", "filename": "gcc/testsuite/gfortran.dg/allocate_stat.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat.f90?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -38,7 +38,7 @@ function func2() result(res)\n   implicit none\n   real, pointer :: gain \n   integer :: res\n-  allocate (gain,STAT=func2) ! { dg-error \"Expected VARIABLE\" }\n+  allocate (gain,STAT=func2) ! { dg-error \"is not a variable\" }\n   deallocate(gain)\n   res = 0\n end function func2"}, {"sha": "0449695e7c86af69f5033888f027f70c9c582383", "filename": "gcc/testsuite/gfortran.dg/entry_15.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_15.f90?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -16,7 +16,7 @@ function func(a)\n   func = a*8\n   return\n entry ent(a) result(func2)\n-  ent = -a*4.0 ! { dg-error \"Expected VARIABLE\" }\n+  ent = -a*4.0 ! { dg-error \"is not a variable\" }\n   return\n end function func\n end module m2\n@@ -31,7 +31,7 @@ function func(a) result(res)\n   res = a*12\n   return\n entry ent(a) result(func2)\n-  ent = -a*6.0 ! { dg-error \"Expected VARIABLE\" }\n+  ent = -a*6.0 ! { dg-error \"is not a variable\" }\n   return\n end function func\n end module m3"}, {"sha": "1f7407c7ccfe892fd2b302ae2d89c6852cf32528", "filename": "gcc/testsuite/gfortran.dg/func_assign.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_assign.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_assign.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_assign.f90?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -23,8 +23,8 @@ function funget(a)\n      subroutine sub()\n      end subroutine sub\n    end interface\n-   sub = 'a'  ! { dg-error \"Expected VARIABLE\" }\n-   fun = 4.4  ! { dg-error \"Expected VARIABLE\" }\n+   sub = 'a'  ! { dg-error \"is not a variable\" }\n+   fun = 4.4  ! { dg-error \"is not a variable\" }\n    funget = 4 ! { dg-error \"is not a VALUE\" }\n    bar = 5    ! { dg-error \"is not a VALUE\" }\n   end subroutine a"}, {"sha": "abd6d04415d23572ed4360c75a807db8bb19c549", "filename": "gcc/testsuite/gfortran.dg/gomp/reduction3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction3.f90?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -48,7 +48,7 @@ subroutine f4\n   integer :: i, ior\n   i = 6\n !$omp parallel reduction (ior:i)\n-  ior = 4\t\t\t ! { dg-error \"Expected VARIABLE\" }\n+  ior = 4\t\t\t ! { dg-error \"is not a variable\" }\n !$omp end parallel\n end subroutine f4\n subroutine f5"}, {"sha": "26cf5ae8795a938463445a1ee967157dead4484e", "filename": "gcc/testsuite/gfortran.dg/implicit_11.f90", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_11.f90?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -0,0 +1,38 @@\n+! { dg-do compile }\n+! \n+! PR fortran/34760\n+! The problem with implict typing is that it is unclear\n+! whether an existing symbol is a variable or a function.\n+! Thus it remains long FL_UNKNOWN, which causes extra \n+! problems; it was failing here since ISTAT was not\n+! FL_VARIABLE but still FL_UNKNOWN.\n+!\n+! Test case contributed by Dick Hendrickson.\n+!\n+     MODULE TESTS\n+       PRIVATE :: ISTAT\n+       PUBLIC :: ISTAT2\n+     CONTAINS\n+     SUBROUTINE AD0001\n+     REAL RLA1(:)\n+     ALLOCATABLE RLA1\n+     ISTAT = -314\n+     ALLOCATE (RLA1(NF10), STAT = ISTAT)\n+     ALLOCATE (RLA1(NF10), STAT = ISTAT2)\n+     END SUBROUTINE\n+     END MODULE\n+\n+     MODULE TESTS2\n+       PRIVATE :: ISTAT2\n+     CONTAINS\n+     function istat2()\n+       istat2 = 0\n+     end function istat2\n+     SUBROUTINE AD0001\n+       REAL RLA1(:)\n+       ALLOCATABLE RLA1\n+       ALLOCATE (RLA1(NF10), STAT = ISTAT2) ! { dg-error \"must be a variable\" }\n+     END SUBROUTINE\n+     END MODULE tests2\n+\n+! { dg-final { cleanup-modules \"TESTS\" } }"}, {"sha": "c6ea2b9e032c70d994918d24ad3729647211e70f", "filename": "gcc/testsuite/gfortran.dg/interface_proc_end.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_proc_end.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_proc_end.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_proc_end.f90?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -16,4 +16,4 @@ SUBROUTINE NGSXDY(TLS1,TLS2)\n       END INTERFACE\n       end ! { dg-error \"END SUBROUTINE statement\" }\n       end module ! { dg-error \"END SUBROUTINE statement\" }\n-! { dg-excess-errors \"Unexpected end of file\" }\n+! { dg-error \"Unexpected end of file\" \"\" { target \"*-*-*\" } 0 }"}, {"sha": "9f2952b5d03d848aa177a32fafbcd600969d413d", "filename": "gcc/testsuite/gfortran.dg/proc_assign_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e2fcd0038214e3e3d9301fa7f22cccb54de009/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_1.f90?ref=d7e2fcd0038214e3e3d9301fa7f22cccb54de009", "patch": "@@ -58,12 +58,12 @@ end function ext2\n     end interface\r\n     stmt_fcn (w) = sin (w)     \r\n     call x (y ())\r\n-    x = 10                   ! { dg-error \"Expected VARIABLE\" }\r\n+    x = 10                   ! { dg-error \"is not a variable\" }\r\n     y = 20                   ! { dg-error \"is not a VALUE\" }\r\n     foo_er = 8               ! { dg-error \"is not a VALUE\" }\r\n     ext1 = 99                ! { dg-error \"is not a VALUE\" }\r\n     ext2 = 99                ! { dg-error \"is not a VALUE\" }\r\n-    stmt_fcn = 1.0           ! { dg-error \"Expected VARIABLE\" }\r\n+    stmt_fcn = 1.0           ! { dg-error \"is not a variable\" }\r\n     w = stmt_fcn (1.0)\r\n contains\r\n     subroutine x (i)\r"}]}