{"sha": "f425a8879b121e9145d9ce6a614cad1fc41bd50e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQyNWE4ODc5YjEyMWU5MTQ1ZDljZTZhNjE0Y2FkMWZjNDFiZDUwZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-31T02:16:34Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-31T02:16:34Z"}, "message": "c-parse.in (language_string): Constify.\n\n\t* c-parse.in (language_string): Constify.\n\n\t* dwarf2out.c (language_string): Remove declaration.\n\n\t* dwarfout.c (language_string): Likewise.\n\n\t* toplev.c (language_string, init_parse, finish_parse): Likewise.\n\n\t* tree.h (language_string, init_parse, finish_parse): Declare.\n\n\t* i386/sun386.h (language_string): Remove declaration.\n\n\t* mips.h (language_string): Likewise.\n\n\t* nextstep.h (language_string): Likewise.\n\n\t* nextstep21.h (language_string): Likewise.\n\n\t* rs6000.c (language_string): Likewise.\n\nIn ch:\n\t* parse.c (language_string): Constify.\nIn cp:\n\t* parse.y (language_string): Constify.\nIn f:\n\t* com.c (language_string): Constify.\nIn java:\n\t* lang.c (language_string): Constify.\n\nFrom-SVN: r29000", "tree": {"sha": "c5f121f7162d639830fbf66008d27bd2f8704e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5f121f7162d639830fbf66008d27bd2f8704e65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f425a8879b121e9145d9ce6a614cad1fc41bd50e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f425a8879b121e9145d9ce6a614cad1fc41bd50e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f425a8879b121e9145d9ce6a614cad1fc41bd50e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f425a8879b121e9145d9ce6a614cad1fc41bd50e/comments", "author": null, "committer": null, "parents": [{"sha": "a2957e1d3ededa4abbfc4bca373d23dd810b6783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2957e1d3ededa4abbfc4bca373d23dd810b6783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2957e1d3ededa4abbfc4bca373d23dd810b6783"}], "stats": {"total": 77, "additions": 56, "deletions": 21}, "files": [{"sha": "0279ec0628959e4e0574d11fd0604e5c6ca449c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -1,3 +1,25 @@\n+Mon Aug 30 22:04:36 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* c-parse.in (language_string): Constify.\n+\n+\t* dwarf2out.c (language_string): Remove declaration.\n+\n+\t* dwarfout.c (language_string): Likewise.\n+\n+\t* toplev.c (language_string, init_parse, finish_parse): Likewise.\n+\n+\t* tree.h (language_string, init_parse, finish_parse): Declare.\n+\n+\t* i386/sun386.h (language_string): Remove declaration.\n+\n+\t* mips.h (language_string): Likewise.\n+\n+\t* nextstep.h (language_string): Likewise.\n+\n+\t* nextstep21.h (language_string): Likewise.\n+\n+\t* rs6000.c (language_string): Likewise.\n+\n Mon Aug 30 20:56:08 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (OBJS, PROTO_OBJS): Remove getpwd.o."}, {"sha": "063d3db006ef017cba495f33a0c092f31ac58851", "filename": "gcc/c-parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -88,7 +88,7 @@\n \n /* Since parsers are distinct for each language, put the language string\n    definition here.  */\n-char *language_string = \"GNU C\";\n+const char * const language_string = \"GNU C\";\n \n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }"}, {"sha": "7bd12990ddc042693195e0c1b96977b06a5a4139", "filename": "gcc/c-parse.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -81,10 +81,10 @@ end ifobjc\n /* Since parsers are distinct for each language, put the language string\n    definition here.  */\n ifobjc\n-char *language_string = \"GNU Obj-C\";\n+const char * const language_string = \"GNU Obj-C\";\n end ifobjc\n ifc\n-char *language_string = \"GNU C\";\n+const char * const language_string = \"GNU C\";\n end ifc\n \n /* Like YYERROR but do call yyerror.  */"}, {"sha": "08d985b0876515eac8026df1e6fd594b5a6769e0", "filename": "gcc/c-parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -73,7 +73,7 @@ State 434 contains 2 shift/reduce conflicts.  (Four ways to parse this.)  */\n \n /* Since parsers are distinct for each language, put the language string\n    definition here.  */\n-char *language_string = \"GNU C\";\n+const char * const language_string = \"GNU C\";\n \n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }"}, {"sha": "09d5c06f2fb5313801786716cb3bb63b22067cae", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -1,3 +1,7 @@\n+1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* parse.c (language_string): Constify.\n+\n 1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (LIBS, LIBDEPS): Link with & depend on libiberty.a."}, {"sha": "36913ce7e4bba31cc8b618cb377c4c177cdea64f", "filename": "gcc/ch/parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fch%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fch%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fparse.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -53,7 +53,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Since parsers are distinct for each language, put the \n    language string definition here.  (fnf) */\n-char *language_string = \"GNU CHILL\";\n+const char * const language_string = \"GNU CHILL\";\n \n /* Common code to be done before expanding any action. */\n #define INIT_ACTION { \\"}, {"sha": "8171b8936fbdea811e54666657191be7cfe77333", "filename": "gcc/config/i386/sun386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Fi386%2Fsun386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Fi386%2Fsun386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun386.h?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -57,7 +57,7 @@ do\t\t\t\t\t\t\t\t\\\n #undef ASM_FILE_START\n #define ASM_FILE_START(FILE) \\\n   do {\t\t\t\t\t\t\t\\\n-    extern char *version_string, *language_string;\t\\\n+    extern char *version_string;\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       int len = strlen (main_input_filename);\t\t\\\n       char *na = main_input_filename + len;\t\t\\"}, {"sha": "e80eb6afeb99efbacf4cdd44ceb27d1fa6839193", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -27,7 +27,6 @@ Boston, MA 02111-1307, USA.  */\n \n extern char    *asm_file_name;\n extern char\tcall_used_regs[];\n-extern char    *language_string;\n extern int\tmay_call_alloca;\n extern char   **save_argv;\n extern int\ttarget_flags;"}, {"sha": "69c3712e25d5615a7cca6302264d8a49db80c9b0", "filename": "gcc/config/nextstep.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Fnextstep.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Fnextstep.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnextstep.h?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -250,7 +250,6 @@ Boston, MA 02111-1307, USA.  */\n #undef\tASM_FILE_END\n #define ASM_FILE_END(FILE)\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n-    extern char *language_string;\t\t\t\t\\\n     if (strcmp (language_string, \"GNU C++\") == 0)\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tconstructor_section ();\t\t\t\t\t\\"}, {"sha": "aa2c443fe02a295e3f8994389f0ceca8fbecf9fe", "filename": "gcc/config/nextstep21.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Fnextstep21.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Fnextstep21.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnextstep21.h?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -43,7 +43,6 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_FILE_END\n #define ASM_FILE_END(FILE)\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n-    extern char *language_string;\t\t\t\t\\\n       if (strcmp (language_string, \"GNU C++\") == 0)\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tASM_OUTPUT_ALIGN (FILE, 1);\t\t\t\t\\"}, {"sha": "700fd3eaea0541c521e419816f2a896b44cc8fc0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -43,7 +43,6 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_NO_PROTOTYPE 0\n #endif\n \n-extern char *language_string;\n extern int profile_block_flag;\n \n #define min(A,B)\t((A) < (B) ? (A) : (B))"}, {"sha": "68c359077304742a97d89b6eb4cb20a61e31545d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -1,3 +1,7 @@\n+1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* parse.y (language_string): Constify.\n+\n 1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* repo.c (getpwd): Don't prototype."}, {"sha": "9725019dbb34a31f5f1900493952e4bc6bd4c01b", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -111,7 +111,7 @@\n \n /* Since parsers are distinct for each language, put the language string\n    definition here.  (fnf) */\n-char *language_string = \"GNU C++\";\n+const char * const language_string = \"GNU C++\";\n \n extern struct obstack permanent_obstack;\n "}, {"sha": "de9c1f3fb80d780063e70f1cfac172de118d0404", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -45,7 +45,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Since parsers are distinct for each language, put the language string\n    definition here.  (fnf) */\n-char *language_string = \"GNU C++\";\n+const char * const language_string = \"GNU C++\";\n \n extern struct obstack permanent_obstack;\n "}, {"sha": "af08bec298f8199be89941c06cfb739e79a3a545", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -2220,7 +2220,6 @@ limbo_die_node;\n \n extern int flag_traditional;\n extern char *version_string;\n-extern char *language_string;\n \n /* Fixed size portion of the DWARF compilation unit header.  */\n #define DWARF_COMPILE_UNIT_HEADER_SIZE (2 * DWARF_OFFSET_SIZE + 3)"}, {"sha": "fbc9f44c1243e43a46dff20330472454c614909c", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -106,7 +106,6 @@ extern time_t time PROTO ((time_t *)); /* FIXME: use NEED_DECLARATION_TIME */\n \n extern int flag_traditional;\n extern char *version_string;\n-extern char *language_string;\n \n /* Maximum size (in bytes) of an artificially generated label.\t*/\n "}, {"sha": "aab7c9aa55cab2e5aa8e6ea6def8c4833d33882a", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -1,3 +1,7 @@\n+Mon Aug 30 22:05:53 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* com.c (language_string): Constify.\n+\n Mon Aug 30 20:29:30 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (LIBS, LIBDEPS): Link with & depend on libiberty.a."}, {"sha": "c57d94abc944fa94062e59a4a73a69c1e38defd9", "filename": "gcc/f/com.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -234,7 +234,7 @@ tree va_list_type_node;\n /* ~~gcc/tree.h *should* declare this, because toplev.c and dwarfout.c\n    reference it.  */\n \n-char *language_string = \"GNU F77\";\n+const char * const language_string = \"GNU F77\";\n \n /* Stream for reading from the input file.  */\n FILE *finput;"}, {"sha": "29bba84b1a29e15f28ec3a7448b7903fd7a34256", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -1,3 +1,7 @@\n+1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* lang.c (language_string): Constify.\n+\n 1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (LIBS): Fix definition so we link with $(CLIB)."}, {"sha": "0a444b4d5e8dbdb8fada7bfa7ad5a35b20122e33", "filename": "gcc/java/lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -81,7 +81,7 @@ const char *java_tree_code_name[] = {\n \n int compiling_from_source;\n \n-char *language_string = \"GNU Java\";\n+const char * const language_string = \"GNU Java\";\n \n /* Nonzero if we want to automatically do array bounds checking;\n    on by default.  Use -fno-bounds-check to disable.  */"}, {"sha": "f34ec91a596836c405df6aca57100e25475f499c", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -89,7 +89,7 @@\n \n /* Since parsers are distinct for each language, put the language string\n    definition here.  */\n-char *language_string = \"GNU Obj-C\";\n+const char * const language_string = \"GNU Obj-C\";\n \n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }"}, {"sha": "a092e1e88bafb076942957fc3ed874b2fdefd5a7", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -51,7 +51,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Since parsers are distinct for each language, put the language string\n    definition here.  */\n-char *language_string = \"GNU Obj-C\";\n+const char * const language_string = \"GNU Obj-C\";\n \n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }"}, {"sha": "532c98b1f74b01586c45dc420b5d9cd8fa1da6e1", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -140,16 +140,14 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #if ! (defined (VMS) || defined (OS2))\n extern char **environ;\n #endif\n-extern char *version_string, *language_string;\n+extern char *version_string;\n \n /* Carry information from ASM_DECLARE_OBJECT_NAME\n    to ASM_FINISH_DECLARE_OBJECT.  */\n \n extern int size_directive_output;\n extern tree last_assemble_variable_decl;\n \n-extern char *init_parse PVPROTO((char *));\n-extern void finish_parse ();\n extern void init_decl_processing ();\n extern void init_obstacks ();\n extern void init_tree_codes ();"}, {"sha": "e5a9ebf0a3055d4e09af0d7384d95ce10a8575a2", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f425a8879b121e9145d9ce6a614cad1fc41bd50e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=f425a8879b121e9145d9ce6a614cad1fc41bd50e", "patch": "@@ -1934,6 +1934,11 @@ extern const char *(*decl_printable_name)\tPROTO((tree, int));\n    end of compilation.  */\n \n extern void (*incomplete_decl_finalize_hook)\tPROTO((tree));\n+\n+extern char *init_parse\t\t\t\tPROTO((char *));\n+extern void finish_parse\t\t\tPROTO((void));\n+\n+extern const char * const language_string;  \n \f\n /* In tree.c */\n extern char *perm_calloc\t\t\tPROTO((int, long));"}]}