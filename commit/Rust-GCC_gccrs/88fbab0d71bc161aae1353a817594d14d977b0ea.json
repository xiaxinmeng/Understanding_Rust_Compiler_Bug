{"sha": "88fbab0d71bc161aae1353a817594d14d977b0ea", "node_id": "C_kwDOANBUbNoAKDg4ZmJhYjBkNzFiYzE2MWFhZTEzNTNhODE3NTk0ZDE0ZDk3N2IwZWE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-02-25T20:52:22Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-05T07:21:00Z"}, "message": "[Ada] Cleanup expansion of attribute Priority\n\nSemantically neutral cleanup after the main fix for expansion of\nattribute Priority.\n\ngcc/ada/\n\n\t* einfo-utils.adb (Number_Entries): Refine type of a local variable.\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Rename Conctyp to\n\tProttyp; refactor repeated calls to New_Occurrence_Of; replace\n\tNumber_Entries with Has_Entries.\n\t* exp_ch5.adb (Expand_N_Assignment_Statement): Likewise; remove Subprg\n\tvariable (apparently copy-pasted from expansion of the attribute).", "tree": {"sha": "1505c6dd4e8936d2585147ca49b2df17febed49e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1505c6dd4e8936d2585147ca49b2df17febed49e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88fbab0d71bc161aae1353a817594d14d977b0ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88fbab0d71bc161aae1353a817594d14d977b0ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88fbab0d71bc161aae1353a817594d14d977b0ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88fbab0d71bc161aae1353a817594d14d977b0ea/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7dd10e8af0e71a901af1f0b06d2216d5e31d586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7dd10e8af0e71a901af1f0b06d2216d5e31d586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7dd10e8af0e71a901af1f0b06d2216d5e31d586"}], "stats": {"total": 71, "additions": 30, "deletions": 41}, "files": [{"sha": "b7c9bdc51cc5fadb9a5e2d61f9986d49c7886c54", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88fbab0d71bc161aae1353a817594d14d977b0ea/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88fbab0d71bc161aae1353a817594d14d977b0ea/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=88fbab0d71bc161aae1353a817594d14d977b0ea", "patch": "@@ -2081,7 +2081,7 @@ package body Einfo.Utils is\n    --------------------\n \n    function Number_Entries (Id : E) return Nat is\n-      N   : Int;\n+      N   : Nat;\n       Ent : Entity_Id;\n \n    begin"}, {"sha": "52d47d98ae66687411fbdab9b42fc4f3fd688ce6", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88fbab0d71bc161aae1353a817594d14d977b0ea/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88fbab0d71bc161aae1353a817594d14d977b0ea/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=88fbab0d71bc161aae1353a817594d14d977b0ea", "patch": "@@ -5667,22 +5667,22 @@ package body Exp_Attr is\n       --  which is illegal, because of the lack of aliasing.\n \n       when Attribute_Priority => Priority : declare\n-         Call           : Node_Id;\n-         Conctyp        : Entity_Id;\n-         New_Itype      : Entity_Id;\n-         Object_Parm    : Node_Id;\n-         Subprg         : Entity_Id;\n-         RT_Subprg_Name : Node_Id;\n+         Call        : Node_Id;\n+         New_Itype   : Entity_Id;\n+         Object_Parm : Node_Id;\n+         Prottyp     : Entity_Id;\n+         RT_Subprg   : RE_Id;\n+         Subprg      : Entity_Id;\n \n       begin\n          --  Look for the enclosing protected type\n \n-         Conctyp := Current_Scope;\n-         while not Is_Protected_Type (Conctyp) loop\n-            Conctyp := Scope (Conctyp);\n+         Prottyp := Current_Scope;\n+         while not Is_Protected_Type (Prottyp) loop\n+            Prottyp := Scope (Prottyp);\n          end loop;\n \n-         pragma Assert (Is_Protected_Type (Conctyp));\n+         pragma Assert (Is_Protected_Type (Prottyp));\n \n          --  Generate the actual of the call\n \n@@ -5710,7 +5710,7 @@ package body Exp_Attr is\n             New_Itype := Create_Itype (E_Access_Type, N);\n             Set_Etype (New_Itype, New_Itype);\n             Set_Directly_Designated_Type (New_Itype,\n-              Corresponding_Record_Type (Conctyp));\n+              Corresponding_Record_Type (Prottyp));\n             Freeze_Itype (New_Itype, N);\n \n             --  Generate:\n@@ -5745,15 +5745,16 @@ package body Exp_Attr is\n \n          --  Select the appropriate run-time subprogram\n \n-         if Number_Entries (Conctyp) = 0 then\n-            RT_Subprg_Name := New_Occurrence_Of (RTE (RE_Get_Ceiling), Loc);\n+         if Has_Entries (Prottyp) then\n+            RT_Subprg := RO_PE_Get_Ceiling;\n          else\n-            RT_Subprg_Name := New_Occurrence_Of (RTE (RO_PE_Get_Ceiling), Loc);\n+            RT_Subprg := RE_Get_Ceiling;\n          end if;\n \n          Call :=\n            Make_Function_Call (Loc,\n-             Name                   => RT_Subprg_Name,\n+             Name                   =>\n+               New_Occurrence_Of (RTE (RT_Subprg), Loc),\n              Parameter_Associations => New_List (Object_Parm));\n \n          Rewrite (N, Call);"}, {"sha": "2e14c97632ae7def400a6d8a9429f138284fedb9", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 13, "deletions": 25, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88fbab0d71bc161aae1353a817594d14d977b0ea/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88fbab0d71bc161aae1353a817594d14d977b0ea/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=88fbab0d71bc161aae1353a817594d14d977b0ea", "patch": "@@ -2392,11 +2392,10 @@ package body Exp_Ch5 is\n \n       if Ada_Version >= Ada_2005 then\n          declare\n-            Call           : Node_Id;\n-            Conctyp        : Entity_Id;\n-            Ent            : Entity_Id;\n-            Subprg         : Entity_Id;\n-            RT_Subprg_Name : Node_Id;\n+            Call      : Node_Id;\n+            Ent       : Entity_Id;\n+            Prottyp   : Entity_Id;\n+            RT_Subprg : RE_Id;\n \n          begin\n             --  Handle chains of renamings\n@@ -2418,36 +2417,25 @@ package body Exp_Ch5 is\n \n                --  Look for the enclosing protected type\n \n-               Conctyp := Current_Scope;\n-               while not Is_Protected_Type (Conctyp) loop\n-                  Conctyp := Scope (Conctyp);\n+               Prottyp := Current_Scope;\n+               while not Is_Protected_Type (Prottyp) loop\n+                  Prottyp := Scope (Prottyp);\n                end loop;\n \n-               pragma Assert (Is_Protected_Type (Conctyp));\n-\n-               --  Generate the first actual of the call\n-\n-               Subprg := Current_Scope;\n-               while\n-                 not (Is_Subprogram_Or_Entry (Subprg)\n-                      and then Present (Protected_Body_Subprogram (Subprg)))\n-               loop\n-                  Subprg := Scope (Subprg);\n-               end loop;\n+               pragma Assert (Is_Protected_Type (Prottyp));\n \n                --  Select the appropriate run-time call\n \n-               if Number_Entries (Conctyp) = 0 then\n-                  RT_Subprg_Name :=\n-                    New_Occurrence_Of (RTE (RE_Set_Ceiling), Loc);\n+               if Has_Entries (Prottyp) then\n+                  RT_Subprg := RO_PE_Set_Ceiling;\n                else\n-                  RT_Subprg_Name :=\n-                    New_Occurrence_Of (RTE (RO_PE_Set_Ceiling), Loc);\n+                  RT_Subprg := RE_Set_Ceiling;\n                end if;\n \n                Call :=\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name => RT_Subprg_Name,\n+                   Name                   =>\n+                     New_Occurrence_Of (RTE (RT_Subprg), Loc),\n                    Parameter_Associations => New_List (\n                      New_Copy_Tree (First (Parameter_Associations (Ent))),\n                      Relocate_Node (Expression (N))));"}]}