{"sha": "10d55907ce825c2231b2421d4d3905f5fd9fc6bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkNTU5MDdjZTgyNWMyMjMxYjI0MjFkNGQzOTA1ZjVmZDlmYzZiYw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2006-12-21T23:23:34Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2006-12-21T23:23:34Z"}, "message": "spu.h (ARG_POINTER_CFA_OFFSET): Define.\n\n\t* config/spu/spu.h (ARG_POINTER_CFA_OFFSET): Define.\n\t* config/spu/spu.c (spu_expand_prologue): Set RTX_FRAME_RELATED_P\n\tfor insn setting up the frame pointer.  Do not set it for insns\n\tsetting up scratch registers or storing the backchain.\n\nFrom-SVN: r120125", "tree": {"sha": "83e456ec5d7c1521431358f693ddf0419f83e38f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83e456ec5d7c1521431358f693ddf0419f83e38f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10d55907ce825c2231b2421d4d3905f5fd9fc6bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d55907ce825c2231b2421d4d3905f5fd9fc6bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d55907ce825c2231b2421d4d3905f5fd9fc6bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d55907ce825c2231b2421d4d3905f5fd9fc6bc/comments", "author": null, "committer": null, "parents": [{"sha": "3721b9e1ee8b73b2e299fb2ce80568a35578e728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3721b9e1ee8b73b2e299fb2ce80568a35578e728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3721b9e1ee8b73b2e299fb2ce80568a35578e728"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "c0b2391de8c9e3e0fa0d13f197524f916add71e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d55907ce825c2231b2421d4d3905f5fd9fc6bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d55907ce825c2231b2421d4d3905f5fd9fc6bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10d55907ce825c2231b2421d4d3905f5fd9fc6bc", "patch": "@@ -1,3 +1,10 @@\n+2006-12-22  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/spu/spu.h (ARG_POINTER_CFA_OFFSET): Define.\n+\t* config/spu/spu.c (spu_expand_prologue): Set RTX_FRAME_RELATED_P\n+\tfor insn setting up the frame pointer.  Do not set it for insns\n+\tsetting up scratch registers or storing the backchain.\n+\n 2006-12-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR other/29639"}, {"sha": "f7b2d080a366aaae36c711c31f860799987e1e96", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d55907ce825c2231b2421d4d3905f5fd9fc6bc/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d55907ce825c2231b2421d4d3905f5fd9fc6bc/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=10d55907ce825c2231b2421d4d3905f5fd9fc6bc", "patch": "@@ -1629,21 +1629,18 @@ spu_expand_prologue (void)\n \t{\n \t  /* In this case we save the back chain first. */\n \t  insn = frame_emit_store (STACK_POINTER_REGNUM, sp_reg, -total_size);\n-\t  RTX_FRAME_RELATED_P (insn) = 1;\n \t  insn =\n \t    frame_emit_add_imm (sp_reg, sp_reg, -total_size, scratch_reg_0);\n \t}\n       else if (satisfies_constraint_K (GEN_INT (-total_size)))\n \t{\n \t  insn = emit_move_insn (scratch_reg_0, sp_reg);\n-\t  RTX_FRAME_RELATED_P (insn) = 1;\n \t  insn =\n \t    emit_insn (gen_addsi3 (sp_reg, sp_reg, GEN_INT (-total_size)));\n \t}\n       else\n \t{\n \t  insn = emit_move_insn (scratch_reg_0, sp_reg);\n-\t  RTX_FRAME_RELATED_P (insn) = 1;\n \t  insn =\n \t    frame_emit_add_imm (sp_reg, sp_reg, -total_size, scratch_reg_1);\n \t}\n@@ -1656,7 +1653,6 @@ spu_expand_prologue (void)\n \t{\n \t  /* Save the back chain ptr */\n \t  insn = frame_emit_store (REGNO (scratch_reg_0), sp_reg, 0);\n-\t  RTX_FRAME_RELATED_P (insn) = 1;\n \t}\n \n       if (frame_pointer_needed)\n@@ -1665,7 +1661,12 @@ spu_expand_prologue (void)\n \t  HOST_WIDE_INT fp_offset = STACK_POINTER_OFFSET\n \t    + current_function_outgoing_args_size;\n \t  /* Set the new frame_pointer */\n-\t  frame_emit_add_imm (fp_reg, sp_reg, fp_offset, scratch_reg_0);\n+\t  insn = frame_emit_add_imm (fp_reg, sp_reg, fp_offset, scratch_reg_0);\n+\t  RTX_FRAME_RELATED_P (insn) = 1;\n+\t  real = gen_addsi3 (fp_reg, sp_reg, GEN_INT (fp_offset));\n+\t  REG_NOTES (insn) = \n+\t    gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR,\n+\t\t\t       real, REG_NOTES (insn));\n \t}\n     }\n "}, {"sha": "74db2244e32f1e46a6ff38d5eba0d5283f2c2b9b", "filename": "gcc/config/spu/spu.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d55907ce825c2231b2421d4d3905f5fd9fc6bc/gcc%2Fconfig%2Fspu%2Fspu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d55907ce825c2231b2421d4d3905f5fd9fc6bc/gcc%2Fconfig%2Fspu%2Fspu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.h?ref=10d55907ce825c2231b2421d4d3905f5fd9fc6bc", "patch": "@@ -265,6 +265,8 @@ targetm.resolve_overloaded_builtin = spu_resolve_overloaded_builtin;\t\\\n \n #define INCOMING_RETURN_ADDR_RTX gen_rtx_REG(Pmode, LINK_REGISTER_REGNUM)\n \n+#define ARG_POINTER_CFA_OFFSET(FNDECL) (-STACK_POINTER_OFFSET)\n+\n \f\n /* Stack Checking */\n "}]}