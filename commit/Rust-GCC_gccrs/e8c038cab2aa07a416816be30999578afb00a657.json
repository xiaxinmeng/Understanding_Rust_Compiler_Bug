{"sha": "e8c038cab2aa07a416816be30999578afb00a657", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThjMDM4Y2FiMmFhMDdhNDE2ODE2YmUzMDk5OTU3OGFmYjAwYTY1Nw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-28T19:05:44Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-28T19:05:44Z"}, "message": "Convert forced_labels from an EXPR_LIST to an INSN_LIST\n\ngcc/\n2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n\n\t* function.h (struct expr_status): Convert field \"x_forced_labels\"\n\tfrom rtx_expr_list * to rtx_insn_list *.\n\n\t* cfgbuild.c (make_edges): Convert local \"x\" from an\n\trtx_expr_list * to an rtx_insn_list *, replacing use of\n\t\"element\" method with \"insn\" method.\n\t* dwarf2cfi.c (create_trace_edges): Likewise for local \"lab\".\n\t* except.c (sjlj_emit_dispatch_table): Replace use of\n\tgen_rtx_EXPR_LIST with gen_rtx_INSN_LIST when prepending to\n\tforced_labels.\n\t* jump.c (rebuild_jump_labels_1): Convert local \"insn\" from an\n\trtx_expr_list * to an rtx_insn_list *, replacing use of\n\t\"element\" method with \"insn\" method.\n\t* reload1.c (set_initial_label_offsets): Likewise for local \"x\".\n\t* stmt.c (label_rtx): Strengthen local \"ref\" from rtx to\n\trtx_insn *, adding a checked cast.  Replace use of\n\tgen_rtx_EXPR_LIST with gen_rtx_INSN_LIST when prepending it to\n\tforced_labels.\n\t(expand_label): Likewise for local \"label_r\".\n\nFrom-SVN: r214688", "tree": {"sha": "d3d01491f8685328e98111d3666549b0c3f27a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3d01491f8685328e98111d3666549b0c3f27a74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8c038cab2aa07a416816be30999578afb00a657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c038cab2aa07a416816be30999578afb00a657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8c038cab2aa07a416816be30999578afb00a657", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c038cab2aa07a416816be30999578afb00a657/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5241a5a9c5e34639b97aa3d488f021d96eafb4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5241a5a9c5e34639b97aa3d488f021d96eafb4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5241a5a9c5e34639b97aa3d488f021d96eafb4d"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "eebe50127f2fdddde78c1f6dcd10916f1d6aad1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c038cab2aa07a416816be30999578afb00a657/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c038cab2aa07a416816be30999578afb00a657/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8c038cab2aa07a416816be30999578afb00a657", "patch": "@@ -1,3 +1,25 @@\n+2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* function.h (struct expr_status): Convert field \"x_forced_labels\"\n+\tfrom rtx_expr_list * to rtx_insn_list *.\n+\n+\t* cfgbuild.c (make_edges): Convert local \"x\" from an\n+\trtx_expr_list * to an rtx_insn_list *, replacing use of\n+\t\"element\" method with \"insn\" method.\n+\t* dwarf2cfi.c (create_trace_edges): Likewise for local \"lab\".\n+\t* except.c (sjlj_emit_dispatch_table): Replace use of\n+\tgen_rtx_EXPR_LIST with gen_rtx_INSN_LIST when prepending to\n+\tforced_labels.\n+\t* jump.c (rebuild_jump_labels_1): Convert local \"insn\" from an\n+\trtx_expr_list * to an rtx_insn_list *, replacing use of\n+\t\"element\" method with \"insn\" method.\n+\t* reload1.c (set_initial_label_offsets): Likewise for local \"x\".\n+\t* stmt.c (label_rtx): Strengthen local \"ref\" from rtx to\n+\trtx_insn *, adding a checked cast.  Replace use of\n+\tgen_rtx_EXPR_LIST with gen_rtx_INSN_LIST when prepending it to\n+\tforced_labels.\n+\t(expand_label): Likewise for local \"label_r\".\n+\n 2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n \n \t* function.h (struct rtl_data): Convert field"}, {"sha": "475739d7a425e2036033a72aedfcd334b647fedd", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=e8c038cab2aa07a416816be30999578afb00a657", "patch": "@@ -284,8 +284,8 @@ make_edges (basic_block min, basic_block max, int update_p)\n \t     everything on the forced_labels list.  */\n \t  else if (computed_jump_p (insn))\n \t    {\n-\t      for (rtx_expr_list *x = forced_labels; x; x = x->next ())\n-\t\tmake_label_edge (edge_cache, bb, x->element (), EDGE_ABNORMAL);\n+\t      for (rtx_insn_list *x = forced_labels; x; x = x->next ())\n+\t\tmake_label_edge (edge_cache, bb, x->insn (), EDGE_ABNORMAL);\n \t    }\n \n \t  /* Returns create an exit out.  */"}, {"sha": "8b00b1e89ed78672dba3f3bc24dd3a4261ad30c9", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=e8c038cab2aa07a416816be30999578afb00a657", "patch": "@@ -2309,8 +2309,8 @@ create_trace_edges (rtx insn)\n \t}\n       else if (computed_jump_p (insn))\n \t{\n-\t  for (rtx_expr_list *lab = forced_labels; lab; lab = lab->next ())\n-\t    maybe_record_trace_start (lab->element (), insn);\n+\t  for (rtx_insn_list *lab = forced_labels; lab; lab = lab->next ())\n+\t    maybe_record_trace_start (lab->insn (), insn);\n \t}\n       else if (returnjump_p (insn))\n \t;"}, {"sha": "99a66a00fef5877d9b74aa09348a230d8abb24ca", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=e8c038cab2aa07a416816be30999578afb00a657", "patch": "@@ -1310,7 +1310,7 @@ sjlj_emit_dispatch_table (rtx_code_label *dispatch_label, int num_dispatch)\n      CFG edges more exactly, we can use the forced_labels list instead.  */\n   LABEL_PRESERVE_P (dispatch_label) = 1;\n   forced_labels\n-    = gen_rtx_EXPR_LIST (VOIDmode, dispatch_label, forced_labels);\n+    = gen_rtx_INSN_LIST (VOIDmode, dispatch_label, forced_labels);\n #endif\n \n   /* Load up exc_ptr and filter values from the function context.  */"}, {"sha": "071f5dd237c1c512111ff3fcf0339674998826da", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=e8c038cab2aa07a416816be30999578afb00a657", "patch": "@@ -135,7 +135,7 @@ struct GTY(()) expr_status {\n   rtx x_apply_args_value;\n \n   /* List of labels that must never be deleted.  */\n-  rtx_expr_list *x_forced_labels;\n+  rtx_insn_list *x_forced_labels;\n };\n \n typedef struct call_site_record_d *call_site_record;"}, {"sha": "a8b7bfb8478005ce17fc3cf8ba074e77d1f6e953", "filename": "gcc/jump.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=e8c038cab2aa07a416816be30999578afb00a657", "patch": "@@ -74,7 +74,7 @@ static int invert_exp_1 (rtx, rtx);\n static void\n rebuild_jump_labels_1 (rtx_insn *f, bool count_forced)\n {\n-  rtx_expr_list *insn;\n+  rtx_insn_list *insn;\n \n   timevar_push (TV_REBUILD_JUMP);\n   init_label_info (f);\n@@ -86,8 +86,8 @@ rebuild_jump_labels_1 (rtx_insn *f, bool count_forced)\n \n   if (count_forced)\n     for (insn = forced_labels; insn; insn = insn->next ())\n-      if (LABEL_P (insn->element ()))\n-\tLABEL_NUSES (insn->element ())++;\n+      if (LABEL_P (insn->insn ()))\n+\tLABEL_NUSES (insn->insn ())++;\n   timevar_pop (TV_REBUILD_JUMP);\n }\n "}, {"sha": "153c284ff1d4ea499136d3c55ce25ec4d06fecca", "filename": "gcc/reload1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=e8c038cab2aa07a416816be30999578afb00a657", "patch": "@@ -3911,9 +3911,9 @@ set_initial_label_offsets (void)\n {\n   memset (offsets_known_at, 0, num_labels);\n \n-  for (rtx_expr_list *x = forced_labels; x; x = x->next ())\n-    if (x->element ())\n-      set_label_offsets (x->element (), NULL, 1);\n+  for (rtx_insn_list *x = forced_labels; x; x = x->next ())\n+    if (x->insn ())\n+      set_label_offsets (x->insn (), NULL, 1);\n \n   for (rtx_insn_list *x = nonlocal_goto_handler_labels; x; x = x->next ())\n     if (x->insn ())"}, {"sha": "70dad0cdb09fc6c93b73e0f34af077a9c4b1dacf", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c038cab2aa07a416816be30999578afb00a657/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=e8c038cab2aa07a416816be30999578afb00a657", "patch": "@@ -141,12 +141,12 @@ label_rtx (tree label)\n rtx\n force_label_rtx (tree label)\n {\n-  rtx ref = label_rtx (label);\n+  rtx_insn *ref = as_a <rtx_insn *> (label_rtx (label));\n   tree function = decl_function_context (label);\n \n   gcc_assert (function);\n \n-  forced_labels = gen_rtx_EXPR_LIST (VOIDmode, ref, forced_labels);\n+  forced_labels = gen_rtx_INSN_LIST (VOIDmode, ref, forced_labels);\n   return ref;\n }\n \n@@ -176,7 +176,7 @@ emit_jump (rtx label)\n void\n expand_label (tree label)\n {\n-  rtx label_r = label_rtx (label);\n+  rtx_insn *label_r = as_a <rtx_insn *> (label_rtx (label));\n \n   do_pending_stack_adjust ();\n   emit_label (label_r);\n@@ -192,7 +192,7 @@ expand_label (tree label)\n     }\n \n   if (FORCED_LABEL (label))\n-    forced_labels = gen_rtx_EXPR_LIST (VOIDmode, label_r, forced_labels);\n+    forced_labels = gen_rtx_INSN_LIST (VOIDmode, label_r, forced_labels);\n \n   if (DECL_NONLOCAL (label) || FORCED_LABEL (label))\n     maybe_set_first_label_num (label_r);"}]}