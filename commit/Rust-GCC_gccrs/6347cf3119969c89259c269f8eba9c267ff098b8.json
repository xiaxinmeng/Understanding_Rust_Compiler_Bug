{"sha": "6347cf3119969c89259c269f8eba9c267ff098b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM0N2NmMzExOTk2OWM4OTI1OWMyNjlmOGViYTljMjY3ZmYwOThiOA==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-08T23:46:28Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-08T23:46:28Z"}, "message": "In gcc/objc/: 2010-12-08 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/objc/:\n2010-12-08  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c (objc_build_throw_stmt): Check that the argument of\n\t@throw is an object and emit an error if not.\n\nIn gcc/testsuite/:\n2010-12-08  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc.dg/exceptions-7.m: New.\n\t* obj-c++.dg/exceptions-7.mm: New.\n\t* obj-c++.dg/exceptions-3.mm: Adjust for new C++ messages.\n\t* obj-c++.dg/exceptions-5.mm: Same change.\n\nFrom-SVN: r167615", "tree": {"sha": "ff57e0beed9ef0ff7353af054bd1a49d3e4061e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff57e0beed9ef0ff7353af054bd1a49d3e4061e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6347cf3119969c89259c269f8eba9c267ff098b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6347cf3119969c89259c269f8eba9c267ff098b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6347cf3119969c89259c269f8eba9c267ff098b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6347cf3119969c89259c269f8eba9c267ff098b8/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e493bdc219725a41e2c9d5a549fac1bf46c31d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e493bdc219725a41e2c9d5a549fac1bf46c31d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e493bdc219725a41e2c9d5a549fac1bf46c31d07"}], "stats": {"total": 63, "additions": 60, "deletions": 3}, "files": [{"sha": "09cc1f6f98468cac3f9260c54fc6775e8f08ff3c", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=6347cf3119969c89259c269f8eba9c267ff098b8", "patch": "@@ -1,3 +1,8 @@\n+2010-12-08  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (objc_build_throw_stmt): Check that the argument of\n+\t@throw is an object and emit an error if not.\n+\n 2010-12-08  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (objc_finish_foreach_loop): Use error_at() instead of"}, {"sha": "1b815df7b61a2a97e56d8c4038672c3f6e5199d7", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=6347cf3119969c89259c269f8eba9c267ff098b8", "patch": "@@ -5528,6 +5528,14 @@ objc_build_throw_stmt (location_t loc, tree throw_expr)\n \t value that we get from the runtime.  */\n       throw_expr = objc_build_exc_ptr ();\n     }\n+  else if (throw_expr != error_mark_node)\n+    {\n+      if (!objc_type_valid_for_messaging (TREE_TYPE (throw_expr), true))\n+\t{\n+\t  error_at (loc, \"%<@throw%> argument is not an object\");\n+\t  return error_mark_node;\n+\t}\n+    }\n \n   /* A throw is just a call to the runtime throw function with the\n      object as a parameter.  */"}, {"sha": "cdddb9a9982d879de903218f106505c291a7806b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6347cf3119969c89259c269f8eba9c267ff098b8", "patch": "@@ -1,3 +1,10 @@\n+2010-12-08  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/exceptions-7.m: New.\n+\t* obj-c++.dg/exceptions-7.mm: New.\n+\t* obj-c++.dg/exceptions-3.mm: Adjust for new C++ messages.\n+\t* obj-c++.dg/exceptions-5.mm: Same change.\n+\t\n 2010-12-08  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/foreach-6.m: Updated location of error messages."}, {"sha": "adae263790f08ec8018a9666b57a6116f4715363", "filename": "gcc/testsuite/obj-c++.dg/exceptions-3.mm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-3.mm?ref=6347cf3119969c89259c269f8eba9c267ff098b8", "patch": "@@ -72,8 +72,8 @@ int test (id object)\n   @catch (MyObject x)     /* { dg-error \"@catch parameter is not a known Objective-C class type\" } */\n     {                     /* { dg-error \"no matching function\" \"\" { target *-*-* } 72 } */\n       dummy++;            /* { dg-warning \"MyObject\" \"\" { target *-*-* } 13 } */\n-    }\n-\n+    }                     /* { dg-warning \"candidate\" \"\" { target *-*-* } 13 } */\n+                          /* { dg-warning \"candidate\" \"\" { target *-*-* } 72 } */\n   @try { @throw object; }\n   @catch (static MyObject *x) /* { dg-error \"storage class\" } */\n     {"}, {"sha": "ba0e543e98af0fa5e34f538511496afd910f701e", "filename": "gcc/testsuite/obj-c++.dg/exceptions-5.mm", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-5.mm?ref=6347cf3119969c89259c269f8eba9c267ff098b8", "patch": "@@ -72,7 +72,8 @@ int test (id object)\n   @catch (MyObject)     /* { dg-error \"@catch parameter is not a known Objective-C class type\" } */\n     {                     /* { dg-error \"no matching function\" \"\" { target *-*-* } 72 } */\n       dummy++;            /* { dg-warning \"MyObject\" \"\" { target *-*-* } 13 } */\n-    }\n+    }                     /* { dg-warning \"candidate\" \"\" { target *-*-* } 13 } */\n+                          /* { dg-warning \"candidate\" \"\" { target *-*-* } 72 } */\n \n   @try { @throw object; }\n   @catch (static MyObject *) /* { dg-error \"storage class\" } */"}, {"sha": "1f5adfc890607a34daf72ebc3a3ff49bfe1f7166", "filename": "gcc/testsuite/obj-c++.dg/exceptions-7.mm", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-7.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-7.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexceptions-7.mm?ref=6347cf3119969c89259c269f8eba9c267ff098b8", "patch": "@@ -0,0 +1,18 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n+/* { dg-options \"-fobjc-exceptions\" } */\n+/* { dg-do compile } */\n+\n+/* Test warnings when the argument of @throw is invalid.  */\n+\n+#include <objc/objc.h>\n+\n+void test (id object)\n+{\n+  struct x { int i; } invalid_1, *invalid_2;\n+\n+  @throw object;    /* Ok */\n+  @throw 1;         /* { dg-error \".@throw. argument is not an object\" } */\n+  @throw \"string\";  /* { dg-error \".@throw. argument is not an object\" } */\n+  @throw invalid_1; /* { dg-error \".@throw. argument is not an object\" } */\n+  @throw invalid_2; /* { dg-error \".@throw. argument is not an object\" } */\n+}"}, {"sha": "1f5adfc890607a34daf72ebc3a3ff49bfe1f7166", "filename": "gcc/testsuite/objc.dg/exceptions-7.m", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-7.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6347cf3119969c89259c269f8eba9c267ff098b8/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-7.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fexceptions-7.m?ref=6347cf3119969c89259c269f8eba9c267ff098b8", "patch": "@@ -0,0 +1,18 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n+/* { dg-options \"-fobjc-exceptions\" } */\n+/* { dg-do compile } */\n+\n+/* Test warnings when the argument of @throw is invalid.  */\n+\n+#include <objc/objc.h>\n+\n+void test (id object)\n+{\n+  struct x { int i; } invalid_1, *invalid_2;\n+\n+  @throw object;    /* Ok */\n+  @throw 1;         /* { dg-error \".@throw. argument is not an object\" } */\n+  @throw \"string\";  /* { dg-error \".@throw. argument is not an object\" } */\n+  @throw invalid_1; /* { dg-error \".@throw. argument is not an object\" } */\n+  @throw invalid_2; /* { dg-error \".@throw. argument is not an object\" } */\n+}"}]}