{"sha": "0ba89f9bb102aaa94308a3a7ec266297fc9825ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJhODlmOWJiMTAyYWFhOTQzMDhhM2E3ZWMyNjYyOTdmYzk4MjVhZA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2012-05-25T13:03:18Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-05-25T13:03:18Z"}, "message": "re PR target/53435 ((ix86_expand_vec_perm) and (ix86_expand_vec_perm) do not pass arguments to avx2_permvar8s[f,i] correctly)\n\n2012-05-21  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n\n       PR target/53435\n       * config/i386/i386.c (ix86_expand_vec_perm): Use correct op.\n       (ix86_expand_vec_perm): Use int mode instead of float.\n       (expand_vec_perm_pshufb): Remove handling of useseless type\n       conversion.\n\nFrom-SVN: r187881", "tree": {"sha": "dbe4b21d5b9bd86e6398740c1acb8df97de2c2e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbe4b21d5b9bd86e6398740c1acb8df97de2c2e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ba89f9bb102aaa94308a3a7ec266297fc9825ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba89f9bb102aaa94308a3a7ec266297fc9825ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba89f9bb102aaa94308a3a7ec266297fc9825ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba89f9bb102aaa94308a3a7ec266297fc9825ad/comments", "author": null, "committer": null, "parents": [{"sha": "c7046906c3ae131726bd03f7841d4617425685d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7046906c3ae131726bd03f7841d4617425685d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7046906c3ae131726bd03f7841d4617425685d2"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "677dcac8f430d54aa0bca6612cba7a79348b3219", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba89f9bb102aaa94308a3a7ec266297fc9825ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba89f9bb102aaa94308a3a7ec266297fc9825ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ba89f9bb102aaa94308a3a7ec266297fc9825ad", "patch": "@@ -1,3 +1,11 @@\n+2012-05-25  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\n+\tPR target/53435\n+\t* config/i386/i386.c (ix86_expand_vec_perm): Use correct op.\n+\t(ix86_expand_vec_perm): Use int mode instead of float.\n+\t(expand_vec_perm_pshufb): Remove handling of useseless type\n+\tconversion.\n+\n 2012-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/52362"}, {"sha": "51deb1a9da1cd4b6823a84c374a64d167eb7e856", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba89f9bb102aaa94308a3a7ec266297fc9825ad/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba89f9bb102aaa94308a3a7ec266297fc9825ad/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0ba89f9bb102aaa94308a3a7ec266297fc9825ad", "patch": "@@ -19921,7 +19921,7 @@ ix86_expand_vec_perm (rtx operands[])\n \t      t1 = gen_reg_rtx (V8SImode);\n \t      t2 = gen_reg_rtx (V8SImode);\n \t      emit_insn (gen_avx2_permvarv8si (t1, op0, mask));\n-\t      emit_insn (gen_avx2_permvarv8si (t2, op0, mask));\n+\t      emit_insn (gen_avx2_permvarv8si (t2, op1, mask));\n \t      goto merge_two;\n \t    }\n \t  return;\n@@ -19954,10 +19954,10 @@ ix86_expand_vec_perm (rtx operands[])\n \n         case V4SFmode:\n \t  t1 = gen_reg_rtx (V8SFmode);\n-\t  t2 = gen_reg_rtx (V8SFmode);\n-\t  mask = gen_lowpart (V4SFmode, mask);\n+\t  t2 = gen_reg_rtx (V8SImode);\n+\t  mask = gen_lowpart (V4SImode, mask);\n \t  emit_insn (gen_avx_vec_concatv8sf (t1, op0, op1));\n-\t  emit_insn (gen_avx_vec_concatv8sf (t2, mask, mask));\n+\t  emit_insn (gen_avx_vec_concatv8si (t2, mask, mask));\n \t  emit_insn (gen_avx2_permvarv8sf (t1, t1, t2));\n \t  emit_insn (gen_avx_vextractf128v8sf (target, t1, const0_rtx));\n \t  return;\n@@ -36474,12 +36474,6 @@ expand_vec_perm_pshufb (struct expand_vec_perm_d *d)\n \t\t\t\tgen_rtvec_v (GET_MODE_NUNITS (vmode), rperm));\n   vperm = force_reg (vmode, vperm);\n \n-  if (vmode == V8SImode && d->vmode == V8SFmode)\n-    {\n-      vmode = V8SFmode;\n-      vperm = gen_lowpart (vmode, vperm);\n-    }\n-\n   target = gen_lowpart (vmode, d->target);\n   op0 = gen_lowpart (vmode, d->op0);\n   if (d->one_operand_p)"}]}