{"sha": "78c2726669d835c1f6e496da8187a450f11fd092", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhjMjcyNjY2OWQ4MzVjMWY2ZTQ5NmRhODE4N2E0NTBmMTFmZDA5Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-02-19T16:47:19Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-02-19T16:47:19Z"}, "message": "mips.c (mips_need_mips16_rdhwr_p): New variable.\n\ngcc/\n\t* config/mips/mips.c (mips_need_mips16_rdhwr_p): New variable.\n\t(mips_get_tp): Set it.  Record that __mips16_rdhwr binds locally.\n\t(mips_start_unique_function, mips_output_mips16_rdhwr)\n\t(mips_code_end): New functions.\n\t(TARGET_ASM_CODE_END): Define.\n\nlibgcc/\n\t* config.host (mips64*-*-linux*, mipsisa64*-*-linux*)\n\t(mips*-*-linux*): Remove t-slibgcc-libgcc.\n\t* config/mips/t-mips16 (LIB1ASMFUNCS): Remove __mips16_rdhwr.\n\t* config/mips/mips16.S (__mips16_rdhwr): Delete.\n\nFrom-SVN: r184380", "tree": {"sha": "23cf9f104000d31d848248e5b9f03b0e4daefc3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23cf9f104000d31d848248e5b9f03b0e4daefc3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78c2726669d835c1f6e496da8187a450f11fd092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78c2726669d835c1f6e496da8187a450f11fd092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78c2726669d835c1f6e496da8187a450f11fd092", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78c2726669d835c1f6e496da8187a450f11fd092/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5adeb246868dba536895e60100ef20162b6d1911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5adeb246868dba536895e60100ef20162b6d1911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5adeb246868dba536895e60100ef20162b6d1911"}], "stats": {"total": 98, "additions": 81, "deletions": 17}, "files": [{"sha": "07635dfbe7950da4fdc4d8b87a2c1fd266528fc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c2726669d835c1f6e496da8187a450f11fd092/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c2726669d835c1f6e496da8187a450f11fd092/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78c2726669d835c1f6e496da8187a450f11fd092", "patch": "@@ -1,3 +1,11 @@\n+2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips_need_mips16_rdhwr_p): New variable.\n+\t(mips_get_tp): Set it.  Record that __mips16_rdhwr binds locally.\n+\t(mips_start_unique_function, mips_output_mips16_rdhwr)\n+\t(mips_code_end): New functions.\n+\t(TARGET_ASM_CODE_END): Define.\n+\n 2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (mips16_build_call_stub): Add CFI information"}, {"sha": "1a262675290f3c1c45f5ff1ee3264d63710b0180", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c2726669d835c1f6e496da8187a450f11fd092/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c2726669d835c1f6e496da8187a450f11fd092/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=78c2726669d835c1f6e496da8187a450f11fd092", "patch": "@@ -592,6 +592,9 @@ struct target_globals *mips16_globals;\n    and returned from mips_sched_reorder2.  */\n static int cached_can_issue_more;\n \n+/* True if the output uses __mips16_rdhwr.  */\n+static bool mips_need_mips16_rdhwr_p;\n+\n /* Index R is the smallest register class that contains register R.  */\n const enum reg_class mips_regno_to_class[FIRST_PSEUDO_REGISTER] = {\n   LEA_REGS,\tLEA_REGS,\tM16_REGS,\tV1_REG,\n@@ -2842,7 +2845,9 @@ mips_get_tp (void)\n   tp = gen_reg_rtx (Pmode);\n   if (TARGET_MIPS16)\n     {\n+      mips_need_mips16_rdhwr_p = true;\n       fn = mips16_stub_function (\"__mips16_rdhwr\");\n+      SYMBOL_REF_FLAGS (fn) |= SYMBOL_FLAG_LOCAL;\n       if (!call_insn_operand (fn, VOIDmode))\n \tfn = force_reg (Pmode, fn);\n       emit_insn (PMODE_INSN (gen_tls_get_tp_mips16, (tp, fn)));\n@@ -5827,6 +5832,33 @@ mips_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p,\n   return addr;\n }\n \f\n+/* Declare a unique, locally-binding function called NAME, then start\n+   its definition.  */\n+\n+static void\n+mips_start_unique_function (const char *name)\n+{\n+  tree decl;\n+\n+  decl = build_decl (BUILTINS_LOCATION, FUNCTION_DECL,\n+\t\t     get_identifier (name),\n+\t\t     build_function_type_list (void_type_node, NULL_TREE));\n+  DECL_RESULT (decl) = build_decl (BUILTINS_LOCATION, RESULT_DECL,\n+\t\t\t\t   NULL_TREE, void_type_node);\n+  TREE_PUBLIC (decl) = 1;\n+  TREE_STATIC (decl) = 1;\n+\n+  DECL_COMDAT_GROUP (decl) = DECL_ASSEMBLER_NAME (decl);\n+\n+  targetm.asm_out.unique_section (decl, 0);\n+  switch_to_section (get_named_section (decl, NULL, 0));\n+\n+  targetm.asm_out.globalize_label (asm_out_file, name);\n+  fputs (\"\\t.hidden\\t\", asm_out_file);\n+  assemble_name (asm_out_file, name);\n+  putc ('\\n', asm_out_file);\n+}\n+\n /* Start a definition of function NAME.  MIPS16_P indicates whether the\n    function contains MIPS16 code.  */\n \n@@ -5865,6 +5897,26 @@ mips_end_function_definition (const char *name)\n     }\n }\n \f\n+/* Output a definition of the __mips16_rdhwr function.  */\n+\n+static void\n+mips_output_mips16_rdhwr (void)\n+{\n+  const char *name;\n+\n+  name = \"__mips16_rdhwr\";\n+  mips_start_unique_function (name);\n+  mips_start_function_definition (name, false);\n+  fprintf (asm_out_file,\n+\t   \"\\t.set\\tpush\\n\"\n+\t   \"\\t.set\\tmips32r2\\n\"\n+\t   \"\\t.set\\tnoreorder\\n\"\n+\t   \"\\trdhwr\\t$3,$29\\n\"\n+\t   \"\\t.set\\tpop\\n\"\n+\t   \"\\tj\\t$31\\n\");\n+  mips_end_function_definition (name);\n+}\n+\f\n /* Return true if calls to X can use R_MIPS_CALL* relocations.  */\n \n static bool\n@@ -8467,6 +8519,15 @@ mips_file_start (void)\n \t     ASM_COMMENT_START,\n \t     mips_small_data_threshold, mips_arch_info->name, mips_isa);\n }\n+\n+/* Implement TARGET_ASM_CODE_END.  */\n+\n+static void\n+mips_code_end (void)\n+{\n+  if (mips_need_mips16_rdhwr_p)\n+    mips_output_mips16_rdhwr ();\n+}\n \f\n /* Make the last instruction frame-related and note that it performs\n    the operation described by FRAME_PATTERN.  */\n@@ -17357,6 +17418,8 @@ mips_expand_vec_minmax (rtx target, rtx op0, rtx op1,\n #define TARGET_ASM_FILE_START mips_file_start\n #undef TARGET_ASM_FILE_START_FILE_DIRECTIVE\n #define TARGET_ASM_FILE_START_FILE_DIRECTIVE true\n+#undef TARGET_ASM_CODE_END\n+#define TARGET_ASM_CODE_END mips_code_end\n \n #undef TARGET_INIT_LIBFUNCS\n #define TARGET_INIT_LIBFUNCS mips_init_libfuncs"}, {"sha": "90edc28fb413e4aaedf31902473c7d9a0b98da32", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c2726669d835c1f6e496da8187a450f11fd092/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c2726669d835c1f6e496da8187a450f11fd092/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=78c2726669d835c1f6e496da8187a450f11fd092", "patch": "@@ -1,3 +1,10 @@\n+2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config.host (mips64*-*-linux*, mipsisa64*-*-linux*)\n+\t(mips*-*-linux*): Remove t-slibgcc-libgcc.\n+\t* config/mips/t-mips16 (LIB1ASMFUNCS): Remove __mips16_rdhwr.\n+\t* config/mips/mips16.S (__mips16_rdhwr): Delete.\n+\n 2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips16.S (CALL_STUB_RET): Add CFI information."}, {"sha": "ee1a62c78bf0d52dbba2c43ff81a729f8e6949fa", "filename": "libgcc/config.host", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c2726669d835c1f6e496da8187a450f11fd092/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c2726669d835c1f6e496da8187a450f11fd092/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=78c2726669d835c1f6e496da8187a450f11fd092", "patch": "@@ -746,12 +746,12 @@ mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \t;;\n mips64*-*-linux* | mipsisa64*-*-linux*)\n \textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"${tmake_file} t-crtfm mips/t-mips16 mips/t-tpbit t-slibgcc-libgcc\"\n+\ttmake_file=\"${tmake_file} t-crtfm mips/t-mips16 mips/t-tpbit\"\n \tmd_unwind_header=mips/linux-unwind.h\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"${tmake_file} t-crtfm mips/t-mips16 t-slibgcc-libgcc\"\n+\ttmake_file=\"${tmake_file} t-crtfm mips/t-mips16\"\n \tmd_unwind_header=mips/linux-unwind.h\n \t;;\n mips*-*-openbsd*)"}, {"sha": "abfd3f6283d5639557a976457e4c3e5eec41dc63", "filename": "libgcc/config/mips/mips16.S", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c2726669d835c1f6e496da8187a450f11fd092/libgcc%2Fconfig%2Fmips%2Fmips16.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c2726669d835c1f6e496da8187a450f11fd092/libgcc%2Fconfig%2Fmips%2Fmips16.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Fmips16.S?ref=78c2726669d835c1f6e496da8187a450f11fd092", "patch": "@@ -718,17 +718,4 @@ CALL_STUB_RET (__mips16_call_stub_dc_10, 10, DC)\n #endif\n #endif /* !__mips_single_float */\n \n-#ifdef L_m16rdhwr\n-STARTFN (__mips16_rdhwr)\n-\t/* Forced always hidden, because the PLT resolver function would\n-\t   not preserve all necessary registers.  */\n-\t.hidden\t__mips16_rdhwr\n-\t.set\tpush\n-\t.set\tmips32r2\n-\t.set\tnoreorder\n-\trdhwr\t$3,$29\n-\t.set\tpop\n-\tj\t$31\n-\tENDFN (__mips16_rdhwr)\n-#endif\n #endif"}, {"sha": "5553ed76e2d5a5602fcea8bdbd8b43a04838155c", "filename": "libgcc/config/mips/t-mips16", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c2726669d835c1f6e496da8187a450f11fd092/libgcc%2Fconfig%2Fmips%2Ft-mips16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c2726669d835c1f6e496da8187a450f11fd092/libgcc%2Fconfig%2Fmips%2Ft-mips16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Ft-mips16?ref=78c2726669d835c1f6e496da8187a450f11fd092", "patch": "@@ -36,8 +36,7 @@ LIB1ASMFUNCS = _m16addsf3 _m16subsf3 _m16mulsf3 _m16divsf3 \\\n \t_m16stubsc0 _m16stubsc1 _m16stubsc2 _m16stubsc5 _m16stubsc6 \\\n \t_m16stubsc9 _m16stubsc10 \\\n \t_m16stubdc0 _m16stubdc1 _m16stubdc2 _m16stubdc5 _m16stubdc6 \\\n-\t_m16stubdc9 _m16stubdc10 \\\n-\t_m16rdhwr\n+\t_m16stubdc9 _m16stubdc10\n \n SYNC = yes\n SYNC_CFLAGS = -mno-mips16"}]}