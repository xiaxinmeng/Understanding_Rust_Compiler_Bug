{"sha": "ac67752d795a9d1289c8e893946dc3b6b3a87057", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM2Nzc1MmQ3OTVhOWQxMjg5YzhlODkzOTQ2ZGMzYjZiM2E4NzA1Nw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2018-11-02T08:29:50Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2018-11-02T08:29:50Z"}, "message": "Fix libgphobos.spec in the wrong place with --enable-version-specific-runtime-libs\n\nlibphobos/ChangeLog:\n\n2018-11-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\tPR d/87827\n\t* Makefile.in: Rebuild.\n\t* configure: Rebuild.\n\t* configure.ac: Properly set MULTISUBDIR.\n\t* d_rules.am: Set toolexecdir and toolexeclibdir.\n\t* libdruntime/Makefile.in: Rebuild.\n\t* m4/druntime.m4 (DRUNTIME_INSTALL_DIRECTORIES): Add\n\t--enable-version-specific-runtime-libs.\n\t* src/Makefile.in: Rebuild.\n\t* testsuite/Makefile.in: Rebuild.\n\nFrom-SVN: r265742", "tree": {"sha": "1f98a9b8ce84e824a3c1c8ca300bb0f43a4947cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f98a9b8ce84e824a3c1c8ca300bb0f43a4947cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac67752d795a9d1289c8e893946dc3b6b3a87057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac67752d795a9d1289c8e893946dc3b6b3a87057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac67752d795a9d1289c8e893946dc3b6b3a87057", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac67752d795a9d1289c8e893946dc3b6b3a87057/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db281b40e41c622c548adbaeff72d9d2316fe006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db281b40e41c622c548adbaeff72d9d2316fe006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db281b40e41c622c548adbaeff72d9d2316fe006"}], "stats": {"total": 307, "additions": 182, "deletions": 125}, "files": [{"sha": "fec421789a114c3645cc33d94bd348b6a8c388c9", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -1,3 +1,16 @@\n+2018-11-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/87827\n+\t* Makefile.in: Rebuild.\n+\t* configure: Rebuild.\n+\t* configure.ac: Properly set MULTISUBDIR.\n+\t* d_rules.am: Set toolexecdir and toolexeclibdir.\n+\t* libdruntime/Makefile.in: Rebuild.\n+\t* m4/druntime.m4 (DRUNTIME_INSTALL_DIRECTORIES): Add\n+\t--enable-version-specific-runtime-libs.\n+\t* src/Makefile.in: Rebuild.\n+\t* testsuite/Makefile.in: Rebuild.\n+\n 2018-10-31  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR bootstrap/82856"}, {"sha": "2f073d64629601da98264bd3d3e280378aad932e", "filename": "libphobos/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.in?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -306,6 +306,8 @@ libdir = @libdir@\n libexecdir = @libexecdir@\n libphobos_builddir = @libphobos_builddir@\n libphobos_srcdir = @libphobos_srcdir@\n+libphobos_toolexecdir = @libphobos_toolexecdir@\n+libphobos_toolexeclibdir = @libphobos_toolexeclibdir@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -318,6 +320,7 @@ phobos_compiler_shared_flag = @phobos_compiler_shared_flag@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -327,8 +330,6 @@ target_alias = @target_alias@\n target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n-toolexecdir = @toolexecdir@\n-toolexeclibdir = @toolexeclibdir@\n top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@"}, {"sha": "9b3dc92ae47afa65918924c2f7348f23b4a24c80", "filename": "libphobos/configure", "status": "modified", "additions": 97, "deletions": 60, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -638,8 +638,8 @@ PHOBOS_SOVERSION\n DRUNTIME_SOVERSION\n SPEC_PHOBOS_DEPS\n gdc_include_dir\n-toolexeclibdir\n-toolexecdir\n+libphobos_toolexeclibdir\n+libphobos_toolexecdir\n gcc_version\n DRUNTIME_ZLIB_SYSTEM_FALSE\n DRUNTIME_ZLIB_SYSTEM_TRUE\n@@ -783,6 +783,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -823,6 +824,7 @@ with_libatomic\n with_libbacktrace\n with_target_system_zlib\n with_cross_host\n+enable_version_specific_runtime_libs\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -867,6 +869,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\n@@ -1119,6 +1122,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1256,7 +1268,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1409,6 +1421,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -1466,6 +1479,9 @@ Optional Features:\n   --enable-thread-lib=<arg>\n                           specify linker option for the system thread library\n                           (default: autodetect)\n+  --enable-version-specific-runtime-libs\n+                          Specify that runtime libraries should be installed\n+                          in a compiler-specific directory\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11493,7 +11509,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11496 \"configure\"\n+#line 11512 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11599,7 +11615,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11602 \"configure\"\n+#line 11618 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14806,30 +14822,44 @@ if test \"${with_cross_host+set}\" = set; then :\n fi\n \n \n-  toolexecdir=no\n-  toolexeclibdir=no\n+  libphobos_toolexecdir=no\n+  libphobos_toolexeclibdir=no\n \n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-version-specific-runtime-libs\" >&5\n+$as_echo_n \"checking for --enable-version-specific-runtime-libs... \" >&6; }\n+  # Check whether --enable-version-specific-runtime-libs was given.\n+if test \"${enable_version_specific_runtime_libs+set}\" = set; then :\n+  enableval=$enable_version_specific_runtime_libs; case \"$enableval\" in\n+      yes) version_specific_libs=yes ;;\n+      no)  version_specific_libs=no ;;\n+      *)   as_fn_error $? \"Unknown argument to enable/disable version-specific libs\" \"$LINENO\" 5;;\n+     esac\n+else\n   version_specific_libs=no\n+fi\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $version_specific_libs\" >&5\n+$as_echo \"$version_specific_libs\" >&6; }\n \n   # Version-specific runtime libs processing.\n   if test $version_specific_libs = yes; then\n-      toolexecdir='${libdir}/gcc/${host_alias}'\n-      toolexeclibdir='${toolexecdir}/${gcc_version}$(MULTISUBDIR)'\n+    libphobos_toolexecdir='${libdir}/gcc/${host_alias}'\n+    libphobos_toolexeclibdir='${toolexecdir}/${gcc_version}$(MULTISUBDIR)'\n   else\n-      # Calculate toolexecdir, toolexeclibdir\n-      # Install a library built with a cross compiler in tooldir, not libdir.\n-      if test -n \"$with_cross_host\" && test x\"$with_cross_host\" != x\"no\"; then\n-          toolexecdir='${exec_prefix}/${host_alias}'\n-          toolexeclibdir='${toolexecdir}/lib'\n-      else\n-          toolexecdir='${libdir}/gcc/${host_alias}'\n-          toolexeclibdir='${libdir}'\n-      fi\n-      multi_os_directory=`$GDC -print-multi-os-directory`\n-      case $multi_os_directory in\n-          .) ;; # Avoid trailing /.\n-          *) toolexeclibdir=${toolexeclibdir}/${multi_os_directory} ;;\n-      esac\n+    # Calculate libphobos_toolexecdir, libphobos_toolexeclibdir\n+    # Install a library built with a cross compiler in tooldir, not libdir.\n+    if test -n \"$with_cross_host\" && test x\"$with_cross_host\" != x\"no\"; then\n+      libphobos_toolexecdir='${exec_prefix}/${host_alias}'\n+      libphobos_toolexeclibdir='${toolexecdir}/lib'\n+    else\n+      libphobos_toolexecdir='${libdir}/gcc/${host_alias}'\n+      libphobos_toolexeclibdir='${libdir}'\n+    fi\n+    multi_os_directory=`$GDC -print-multi-os-directory`\n+    case $multi_os_directory in\n+      .) ;; # Avoid trailing /.\n+      *) libphobos_toolexeclibdir=${libphobos_toolexeclibdir}/${multi_os_directory} ;;\n+    esac\n   fi\n \n \n@@ -14870,7 +14900,7 @@ fi\n \n \n \n-ac_config_files=\"$ac_config_files Makefile src/Makefile libdruntime/Makefile testsuite/Makefile\"\n+ac_config_files=\"$ac_config_files Makefile\"\n \n \n ac_config_files=\"$ac_config_files libdruntime/gcc/config.d libdruntime/gcc/libbacktrace.d\"\n@@ -14880,8 +14910,15 @@ ac_config_files=\"$ac_config_files src/libgphobos.spec\"\n ac_config_files=\"$ac_config_files testsuite/testsuite_flags\"\n \n \n-# We need multilib support, but only if configuring for the target.\n-ac_config_commands=\"$ac_config_commands default\"\n+# Multilibs need MULTISUBDIR defined correctly in certain makefiles so\n+# that multilib installs will end up installed in the correct place.\n+# The testsuite needs it for multilib-aware ABI baseline files.\n+# To work around this not being passed down from config-ml.in ->\n+# srcdir/Makefile.am -> srcdir/{src,libdruntime,...}/Makefile.am, manually\n+# append it here.  Only modify Makefiles that have just been created.\n+#\n+# Also, get rid of this simulated-VPATH thing that automake does.\n+ac_config_files=\"$ac_config_files libdruntime/Makefile src/Makefile testsuite/Makefile\"\n \n \n cat >confcache <<\\_ACEOF\n@@ -16010,11 +16047,6 @@ fi\n \n \n \n-# Variables needed in config.status (file generation) which aren't already\n-# passed by autoconf.\n-SUBDIRS=\"$SUBDIRS\"\n-\n-\n _ACEOF\n \n cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n@@ -16027,14 +16059,13 @@ do\n     \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n-    \"src/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/Makefile\" ;;\n-    \"libdruntime/Makefile\") CONFIG_FILES=\"$CONFIG_FILES libdruntime/Makefile\" ;;\n-    \"testsuite/Makefile\") CONFIG_FILES=\"$CONFIG_FILES testsuite/Makefile\" ;;\n     \"libdruntime/gcc/config.d\") CONFIG_FILES=\"$CONFIG_FILES libdruntime/gcc/config.d\" ;;\n     \"libdruntime/gcc/libbacktrace.d\") CONFIG_FILES=\"$CONFIG_FILES libdruntime/gcc/libbacktrace.d\" ;;\n     \"src/libgphobos.spec\") CONFIG_FILES=\"$CONFIG_FILES src/libgphobos.spec\" ;;\n     \"testsuite/testsuite_flags\") CONFIG_FILES=\"$CONFIG_FILES testsuite/testsuite_flags\" ;;\n-    \"default\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default\" ;;\n+    \"libdruntime/Makefile\") CONFIG_FILES=\"$CONFIG_FILES libdruntime/Makefile\" ;;\n+    \"src/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/Makefile\" ;;\n+    \"testsuite/Makefile\") CONFIG_FILES=\"$CONFIG_FILES testsuite/Makefile\" ;;\n \n   *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n   esac\n@@ -17421,32 +17452,38 @@ _LT_EOF\n \n  ;;\n     \"testsuite/testsuite_flags\":F) chmod +x testsuite/testsuite_flags ;;\n-    \"default\":C) if test -n \"$CONFIG_FILES\"; then\n-   if test -n \"${with_target_subdir}\"; then\n-     # Multilibs need MULTISUBDIR defined correctly in certain makefiles so\n-     # that multilib installs will end up installed in the correct place.\n-     # The testsuite needs it for multilib-aware ABI baseline files.\n-     # To work around this not being passed down from config-ml.in ->\n-     # srcdir/Makefile.am -> srcdir/{src,libdruntime,...}/Makefile.am, manually\n-     # append it here.  Only modify Makefiles that have just been created.\n-     #\n-     # Also, get rid of this simulated-VPATH thing that automake does.\n-     cat > vpsed << \\_EOF\n-  s!`test -f '$<' || echo '$(srcdir)/'`!!\n+    \"libdruntime/Makefile\":F) cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n-     for i in $SUBDIRS; do\n-      case $CONFIG_FILES in\n-       *${i}/Makefile*)\n-\t #echo \"Adding MULTISUBDIR to $i/Makefile\"\n-\t sed -f vpsed $i/Makefile > tmp\n-\t grep '^MULTISUBDIR =' Makefile >> tmp\n-\t mv tmp $i/Makefile\n-\t ;;\n-      esac\n-     done\n-     rm vpsed\n-   fi\n- fi\n+   sed -f vpsed$$ $ac_file > tmp$$\n+   mv tmp$$ $ac_file\n+   rm vpsed$$\n+   echo 'MULTISUBDIR =' >> $ac_file\n+   ml_norecursion=yes\n+   . ${multi_basedir}/config-ml.in\n+   { ml_norecursion=; unset ml_norecursion;}\n+ ;;\n+    \"src/Makefile\":F) cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n+_EOF\n+   sed -f vpsed$$ $ac_file > tmp$$\n+   mv tmp$$ $ac_file\n+   rm vpsed$$\n+   echo 'MULTISUBDIR =' >> $ac_file\n+   ml_norecursion=yes\n+   . ${multi_basedir}/config-ml.in\n+   { ml_norecursion=; unset ml_norecursion;}\n+ ;;\n+    \"testsuite/Makefile\":F) cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n+_EOF\n+   sed -f vpsed$$ $ac_file > tmp$$\n+   mv tmp$$ $ac_file\n+   rm vpsed$$\n+   echo 'MULTISUBDIR =' >> $ac_file\n+   ml_norecursion=yes\n+   . ${multi_basedir}/config-ml.in\n+   { ml_norecursion=; unset ml_norecursion;}\n  ;;\n \n   esac"}, {"sha": "1e931d4395f4925d55b93a166ec548f6dbb21275", "filename": "libphobos/configure.ac", "status": "modified", "additions": 19, "deletions": 33, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -168,45 +168,31 @@ AC_SUBST(GDCFLAGSX)\n AC_CHECK_HEADER(stdio.h,:,\n   [AC_MSG_ERROR([cannot find stdio.h.])])\n \n-AC_CONFIG_FILES(Makefile src/Makefile libdruntime/Makefile testsuite/Makefile)\n+AC_CONFIG_FILES(Makefile)\n \n AC_CONFIG_FILES(libdruntime/gcc/config.d libdruntime/gcc/libbacktrace.d)\n AC_CONFIG_FILES(src/libgphobos.spec)\n AC_CONFIG_FILES([testsuite/testsuite_flags],[chmod +x testsuite/testsuite_flags])\n \n-# We need multilib support, but only if configuring for the target.\n-AC_CONFIG_COMMANDS([default],\n-[if test -n \"$CONFIG_FILES\"; then\n-   if test -n \"${with_target_subdir}\"; then\n-     # Multilibs need MULTISUBDIR defined correctly in certain makefiles so\n-     # that multilib installs will end up installed in the correct place.\n-     # The testsuite needs it for multilib-aware ABI baseline files.\n-     # To work around this not being passed down from config-ml.in ->\n-     # srcdir/Makefile.am -> srcdir/{src,libdruntime,...}/Makefile.am, manually\n-     # append it here.  Only modify Makefiles that have just been created.\n-     #\n-     # Also, get rid of this simulated-VPATH thing that automake does.\n-     cat > vpsed << \\_EOF\n-  s!`test -f '$<' || echo '$(srcdir)/'`!!\n+# Multilibs need MULTISUBDIR defined correctly in certain makefiles so\n+# that multilib installs will end up installed in the correct place.\n+# The testsuite needs it for multilib-aware ABI baseline files.\n+# To work around this not being passed down from config-ml.in ->\n+# srcdir/Makefile.am -> srcdir/{src,libdruntime,...}/Makefile.am, manually\n+# append it here.  Only modify Makefiles that have just been created.\n+#\n+# Also, get rid of this simulated-VPATH thing that automake does.\n+AC_CONFIG_FILES(AC_FOREACH([DIR], [libdruntime src testsuite], [DIR/Makefile ]),\n+  [cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n-     for i in $SUBDIRS; do\n-      case $CONFIG_FILES in\n-       *${i}/Makefile*)\n-\t #echo \"Adding MULTISUBDIR to $i/Makefile\"\n-\t sed -f vpsed $i/Makefile > tmp\n-\t grep '^MULTISUBDIR =' Makefile >> tmp\n-\t mv tmp $i/Makefile\n-\t ;;\n-      esac\n-     done\n-     rm vpsed\n-   fi\n- fi\n-],\n-[\n-# Variables needed in config.status (file generation) which aren't already\n-# passed by autoconf.\n-SUBDIRS=\"$SUBDIRS\"\n+   sed -f vpsed$$ $ac_file > tmp$$\n+   mv tmp$$ $ac_file\n+   rm vpsed$$\n+   echo 'MULTISUBDIR =' >> $ac_file\n+   ml_norecursion=yes\n+   . ${multi_basedir}/config-ml.in\n+   AS_UNSET([ml_norecursion])\n ])\n \n AC_OUTPUT"}, {"sha": "6566230c3017cc0d1ff2f1450742f30797d7e893", "filename": "libphobos/d_rules.am", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fd_rules.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fd_rules.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fd_rules.am?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -19,6 +19,9 @@\n # automake forgets to set this\n CCLD = $(CC)\n \n+toolexecdir = $(libphobos_toolexecdir)\n+toolexeclibdir = $(libphobos_toolexeclibdir)\n+\n # Compile D into normal object files\n .d.o:\n \t$(GDC) $(GDCFLAGS) $(MULTIFLAGS) $(D_EXTRA_DFLAGS) -c -o $@ $<"}, {"sha": "eaa7664c8f14bb39960e931673b1a018a000ee62", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -643,6 +643,8 @@ libdir = @libdir@\n libexecdir = @libexecdir@\n libphobos_builddir = @libphobos_builddir@\n libphobos_srcdir = @libphobos_srcdir@\n+libphobos_toolexecdir = @libphobos_toolexecdir@\n+libphobos_toolexeclibdir = @libphobos_toolexeclibdir@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -655,6 +657,7 @@ phobos_compiler_shared_flag = @phobos_compiler_shared_flag@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -664,15 +667,15 @@ target_alias = @target_alias@\n target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n-toolexecdir = @toolexecdir@\n-toolexeclibdir = @toolexeclibdir@\n top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n \n # If there are no sources with known extension (i.e. only D sources)\n # automake forgets to set this\n CCLD = $(CC)\n+toolexecdir = $(libphobos_toolexecdir)\n+toolexeclibdir = $(libphobos_toolexeclibdir)\n LTDCOMPILE = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=compile $(GDC) $(AM_DFLAGS)\n "}, {"sha": "978c5fe92d2c4199611d83e22d8d35e56f2249a2", "filename": "libphobos/m4/druntime.m4", "status": "modified", "additions": 34, "deletions": 24, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fm4%2Fdruntime.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fm4%2Fdruntime.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fm4%2Fdruntime.m4?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -50,8 +50,8 @@ AC_DEFUN([DRUNTIME_MULTILIB],\n # DRUNTIME_INSTALL_DIRECTORIES\n # ----------------------------\n # Setup various install directories for headers.\n-# Add the cross-host option and substitute the toolexecdir\n-# toolexeclibdir and gdc_include_dir variables.\n+# Add the cross-host option and substitute the libphobos_toolexecdir\n+# libphobos_toolexeclibdir and gdc_include_dir variables.\n AC_DEFUN([DRUNTIME_INSTALL_DIRECTORIES],\n [\n   AC_REQUIRE([AC_PROG_GDC])\n@@ -65,33 +65,43 @@ AC_DEFUN([DRUNTIME_INSTALL_DIRECTORIES],\n     AC_HELP_STRING([--with-cross-host=HOST],\n                    [configuring with a cross compiler]))\n \n-  toolexecdir=no\n-  toolexeclibdir=no\n-\n-  version_specific_libs=no\n+  libphobos_toolexecdir=no\n+  libphobos_toolexeclibdir=no\n+\n+  AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n+  AC_ARG_ENABLE([version-specific-runtime-libs],\n+    AC_HELP_STRING([--enable-version-specific-runtime-libs],\n+\t\t   [Specify that runtime libraries should be installed in a compiler-specific directory]),\n+    [case \"$enableval\" in\n+      yes) version_specific_libs=yes ;;\n+      no)  version_specific_libs=no ;;\n+      *)   AC_MSG_ERROR([Unknown argument to enable/disable version-specific libs]);;\n+     esac],\n+    [version_specific_libs=no])\n+  AC_MSG_RESULT($version_specific_libs)\n \n   # Version-specific runtime libs processing.\n   if test $version_specific_libs = yes; then\n-      toolexecdir='${libdir}/gcc/${host_alias}'\n-      toolexeclibdir='${toolexecdir}/${gcc_version}$(MULTISUBDIR)'\n+    libphobos_toolexecdir='${libdir}/gcc/${host_alias}'\n+    libphobos_toolexeclibdir='${toolexecdir}/${gcc_version}$(MULTISUBDIR)'\n   else\n-      # Calculate toolexecdir, toolexeclibdir\n-      # Install a library built with a cross compiler in tooldir, not libdir.\n-      if test -n \"$with_cross_host\" && test x\"$with_cross_host\" != x\"no\"; then\n-          toolexecdir='${exec_prefix}/${host_alias}'\n-          toolexeclibdir='${toolexecdir}/lib'\n-      else\n-          toolexecdir='${libdir}/gcc/${host_alias}'\n-          toolexeclibdir='${libdir}'\n-      fi\n-      multi_os_directory=`$GDC -print-multi-os-directory`\n-      case $multi_os_directory in\n-          .) ;; # Avoid trailing /.\n-          *) toolexeclibdir=${toolexeclibdir}/${multi_os_directory} ;;\n-      esac\n+    # Calculate libphobos_toolexecdir, libphobos_toolexeclibdir\n+    # Install a library built with a cross compiler in tooldir, not libdir.\n+    if test -n \"$with_cross_host\" && test x\"$with_cross_host\" != x\"no\"; then\n+      libphobos_toolexecdir='${exec_prefix}/${host_alias}'\n+      libphobos_toolexeclibdir='${toolexecdir}/lib'\n+    else\n+      libphobos_toolexecdir='${libdir}/gcc/${host_alias}'\n+      libphobos_toolexeclibdir='${libdir}'\n+    fi\n+    multi_os_directory=`$GDC -print-multi-os-directory`\n+    case $multi_os_directory in\n+      .) ;; # Avoid trailing /.\n+      *) libphobos_toolexeclibdir=${libphobos_toolexeclibdir}/${multi_os_directory} ;;\n+    esac\n   fi\n-  AC_SUBST(toolexecdir)\n-  AC_SUBST(toolexeclibdir)\n+  AC_SUBST(libphobos_toolexecdir)\n+  AC_SUBST(libphobos_toolexeclibdir)\n \n   # Default case for install directory for D sources files.\n   gdc_include_dir='$(libdir)/gcc/${target_alias}/${gcc_version}/include/d'"}, {"sha": "1e2003436eb635406b49ba1ee8e910e7d9ff3161", "filename": "libphobos/src/Makefile.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.in?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -603,6 +603,8 @@ libdir = @libdir@\n libexecdir = @libexecdir@\n libphobos_builddir = @libphobos_builddir@\n libphobos_srcdir = @libphobos_srcdir@\n+libphobos_toolexecdir = @libphobos_toolexecdir@\n+libphobos_toolexeclibdir = @libphobos_toolexeclibdir@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -615,6 +617,7 @@ phobos_compiler_shared_flag = @phobos_compiler_shared_flag@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -624,15 +627,15 @@ target_alias = @target_alias@\n target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n-toolexecdir = @toolexecdir@\n-toolexeclibdir = @toolexeclibdir@\n top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n \n # If there are no sources with known extension (i.e. only D sources)\n # automake forgets to set this\n CCLD = $(CC)\n+toolexecdir = $(libphobos_toolexecdir)\n+toolexeclibdir = $(libphobos_toolexeclibdir)\n LTDCOMPILE = $(LIBTOOL) --tag=D $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=compile $(GDC) $(AM_DFLAGS)\n "}, {"sha": "e3fd03b848a98bd280f87d956397751d3c8cc055", "filename": "libphobos/testsuite/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac67752d795a9d1289c8e893946dc3b6b3a87057/libphobos%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2FMakefile.in?ref=ac67752d795a9d1289c8e893946dc3b6b3a87057", "patch": "@@ -252,6 +252,8 @@ libdir = @libdir@\n libexecdir = @libexecdir@\n libphobos_builddir = @libphobos_builddir@\n libphobos_srcdir = @libphobos_srcdir@\n+libphobos_toolexecdir = @libphobos_toolexecdir@\n+libphobos_toolexeclibdir = @libphobos_toolexeclibdir@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -264,6 +266,7 @@ phobos_compiler_shared_flag = @phobos_compiler_shared_flag@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -273,8 +276,6 @@ target_alias = @target_alias@\n target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n-toolexecdir = @toolexecdir@\n-toolexeclibdir = @toolexeclibdir@\n top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@"}]}