{"sha": "78911e8b93e43c3fb9bb40d5292abe6d92aa2cb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5MTFlOGI5M2U0M2MzZmI5YmI0MGQ1MjkyYWJlNmQ5MmFhMmNiOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-18T18:52:26Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-18T18:52:26Z"}, "message": "(expand_expr, case VAR_DECL, SAVE_EXPR): Use promote_mode.\n\nFrom-SVN: r7069", "tree": {"sha": "8954dcc5835c4788c858fe8294ee15501dfb6c4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8954dcc5835c4788c858fe8294ee15501dfb6c4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78911e8b93e43c3fb9bb40d5292abe6d92aa2cb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78911e8b93e43c3fb9bb40d5292abe6d92aa2cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78911e8b93e43c3fb9bb40d5292abe6d92aa2cb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78911e8b93e43c3fb9bb40d5292abe6d92aa2cb8/comments", "author": null, "committer": null, "parents": [{"sha": "a5a52dbc0976ea588964bd70052c0c9c3f9860c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a52dbc0976ea588964bd70052c0c9c3f9860c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a52dbc0976ea588964bd70052c0c9c3f9860c9"}], "stats": {"total": 41, "additions": 5, "deletions": 36}, "files": [{"sha": "ae23c94577edce165c7dca08b5c399fbc014d47f", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 36, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78911e8b93e43c3fb9bb40d5292abe6d92aa2cb8/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78911e8b93e43c3fb9bb40d5292abe6d92aa2cb8/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=78911e8b93e43c3fb9bb40d5292abe6d92aa2cb8", "patch": "@@ -3829,14 +3829,10 @@ expand_expr (exp, target, tmode, modifier)\n       if (GET_CODE (DECL_RTL (exp)) == REG\n \t  && GET_MODE (DECL_RTL (exp)) != mode)\n \t{\n-\t  enum machine_mode decl_mode = DECL_MODE (exp);\n-\n \t  /* Get the signedness used for this variable.  Ensure we get the\n \t     same mode we got when the variable was declared.  */\n-\n-\t  PROMOTE_MODE (decl_mode, unsignedp, type);\n-\n-\t  if (decl_mode != GET_MODE (DECL_RTL (exp)))\n+\t  if (GET_MODE (DECL_RTL (exp))\n+\t      != promote_mode (type, DECL_MODE (exp), &unsignedp, 0))\n \t    abort ();\n \n \t  temp = gen_rtx (SUBREG, mode, DECL_RTL (exp), 0);\n@@ -3924,22 +3920,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t   || TREE_CODE (type) == ARRAY_TYPE);\n \t    }\n \t  else\n-\t    {\n-\t      enum machine_mode var_mode = mode;\n-\n-\t      if (TREE_CODE (type) == INTEGER_TYPE\n-\t\t  || TREE_CODE (type) == ENUMERAL_TYPE\n-\t\t  || TREE_CODE (type) == BOOLEAN_TYPE\n-\t\t  || TREE_CODE (type) == CHAR_TYPE\n-\t\t  || TREE_CODE (type) == REAL_TYPE\n-\t\t  || TREE_CODE (type) == POINTER_TYPE\n-\t\t  || TREE_CODE (type) == OFFSET_TYPE)\n-\t\t{\n-\t\t  PROMOTE_MODE (var_mode, unsignedp, type);\n-\t\t}\n-\n-\t      temp = gen_reg_rtx (var_mode);\n-\t    }\n+\t    temp = gen_reg_rtx (promote_mode (type, mode, &unsignedp, 0));\n \n \t  SAVE_EXPR_RTL (exp) = temp;\n \t  if (!optimize && GET_CODE (temp) == REG)\n@@ -3969,20 +3950,8 @@ expand_expr (exp, target, tmode, modifier)\n       if (GET_CODE (SAVE_EXPR_RTL (exp)) == REG\n \t  && GET_MODE (SAVE_EXPR_RTL (exp)) != mode)\n \t{\n-\t  enum machine_mode var_mode = mode;\n-\n-\t  if (TREE_CODE (type) == INTEGER_TYPE\n-\t      || TREE_CODE (type) == ENUMERAL_TYPE\n-\t      || TREE_CODE (type) == BOOLEAN_TYPE\n-\t      || TREE_CODE (type) == CHAR_TYPE\n-\t      || TREE_CODE (type) == REAL_TYPE\n-\t      || TREE_CODE (type) == POINTER_TYPE\n-\t      || TREE_CODE (type) == OFFSET_TYPE)\n-\t    {\n-\t      PROMOTE_MODE (var_mode, unsignedp, type);\n-\t    }\n-\n-\t  temp = gen_rtx (SUBREG, mode, SAVE_EXPR_RTL (exp), 0);\n+\t  temp = gen_rtx (SUBREG, promote_mode (type, mode, &unsignedp, 0),\n+\t\t\t  SAVE_EXPR_RTL (exp), 0);\n \t  SUBREG_PROMOTED_VAR_P (temp) = 1;\n \t  SUBREG_PROMOTED_UNSIGNED_P (temp) = unsignedp;\n \t  return temp;"}]}