{"sha": "ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEyYWYyNmFjOWQzZWQ1N2ZmYmQ0YWUyODUzOGM4ZjUxYmE2MzUzNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-30T15:17:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-30T15:17:50Z"}, "message": "[multiple changes]\n\n2012-07-30  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch12.adb (Earlier): Add local variables T1 and T2. Minor code\n\trefactoring.\n\n2012-07-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* gnatcmd.adb, make.adb, makeutl.adb, makeutl.ads\n\t(Test_If_Relative_Path): Rename to Ensure_Absolute_Path to better\n\treflect what this subprogram does. Rename argument Including_L_Switch\n\tto For_Gnatbind, and also exempt -A from rewriting.\n\t* bindusg.adb: Document optional =file argument to gnatbind -A.\n\n2012-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Do no apply restriction check on\n\tstorage pools to access to subprogram types.\n\nFrom-SVN: r189978", "tree": {"sha": "cc310e9db2f48762bb7ae1fb5ca93405bbe61466", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc310e9db2f48762bb7ae1fb5ca93405bbe61466"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/comments", "author": null, "committer": null, "parents": [{"sha": "29ba9f52eee2ab585349ba71850bf9e0e5c86d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ba9f52eee2ab585349ba71850bf9e0e5c86d3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ba9f52eee2ab585349ba71850bf9e0e5c86d3c"}], "stats": {"total": 129, "additions": 79, "deletions": 50}, "files": [{"sha": "aa72155f1e4ecc800841cb48ee01e14e91d711aa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "patch": "@@ -1,3 +1,21 @@\n+2012-07-30  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch12.adb (Earlier): Add local variables T1 and T2. Minor code\n+\trefactoring.\n+\n+2012-07-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gnatcmd.adb, make.adb, makeutl.adb, makeutl.ads\n+\t(Test_If_Relative_Path): Rename to Ensure_Absolute_Path to better\n+\treflect what this subprogram does. Rename argument Including_L_Switch\n+\tto For_Gnatbind, and also exempt -A from rewriting.\n+\t* bindusg.adb: Document optional =file argument to gnatbind -A.\n+\n+2012-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Do no apply restriction check on\n+\tstorage pools to access to subprogram types.\n+\n 2012-07-30  Robert Dewar  <dewar@adacore.com>\n \n \t* par_sco.adb, a-cihama.adb, a-coinve.adb, exp_ch7.adb, a-ciorse.adb,"}, {"sha": "6b1751bcadc3657e63327c0b1bc5b3a04d0862dd", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,7 +78,7 @@ package body Bindusg is\n \n       --  Line for -A switch\n \n-      Write_Line (\"  -A        Give list of ALI files in partition\");\n+      Write_Line (\"  -A[=file] Give list of ALI files in partition\");\n \n       --  Line for -b switch\n "}, {"sha": "bd677d997f790c8a1cac7c6743e42561e40b6cc1", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "patch": "@@ -4201,12 +4201,16 @@ package body Freeze is\n                Check_Suspicious_Modulus (E);\n             end if;\n \n-         elsif Is_Access_Type (E) then\n+         elsif Is_Access_Type (E)\n+           and then not Is_Access_Subprogram_Type (E)\n+         then\n \n             --  If a pragma Default_Storage_Pool applies, and this type has no\n             --  Storage_Pool or Storage_Size clause (which must have occurred\n             --  before the freezing point), then use the default. This applies\n             --  only to base types.\n+            --  None of this applies to access to subprogramss, for which there\n+            --  are clearly no pools.\n \n             if Present (Default_Pool)\n               and then Is_Base_Type (E)"}, {"sha": "bf3bfcf28729cdb7b156d197f1650abdfdf89af7", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "patch": "@@ -273,7 +273,7 @@ procedure GNATCmd is\n    --  Add the -L and -l switches to the linker for all of the library\n    --  projects.\n \n-   procedure Test_If_Relative_Path\n+   procedure Ensure_Absolute_Path\n      (Switch : in out String_Access;\n       Parent : String);\n    --  Test if Switch is a relative search path switch. If it is and it\n@@ -1303,20 +1303,20 @@ procedure GNATCmd is\n    end Set_Library_For;\n \n    ---------------------------\n-   -- Test_If_Relative_Path --\n+   -- Ensure_Absolute_Path --\n    ---------------------------\n \n-   procedure Test_If_Relative_Path\n+   procedure Ensure_Absolute_Path\n      (Switch : in out String_Access;\n       Parent : String)\n    is\n    begin\n-      Makeutl.Test_If_Relative_Path\n+      Makeutl.Ensure_Absolute_Path\n         (Switch, Parent,\n          Do_Fail              => Osint.Fail'Access,\n          Including_Non_Switch => False,\n          Including_RTS        => True);\n-   end Test_If_Relative_Path;\n+   end Ensure_Absolute_Path;\n \n    -------------------\n    -- Non_VMS_Usage --\n@@ -2387,7 +2387,7 @@ begin\n             --  arguments.\n \n             for J in 1 .. Last_Switches.Last loop\n-               GNATCmd.Test_If_Relative_Path\n+               GNATCmd.Ensure_Absolute_Path\n                  (Last_Switches.Table (J), Current_Work_Dir);\n             end loop;\n \n@@ -2397,7 +2397,7 @@ begin\n                Project_Dir : constant String := Name_Buffer (1 .. Name_Len);\n             begin\n                for J in 1 .. First_Switches.Last loop\n-                  GNATCmd.Test_If_Relative_Path\n+                  GNATCmd.Ensure_Absolute_Path\n                     (First_Switches.Table (J), Project_Dir);\n                end loop;\n             end;"}, {"sha": "d45ee140b115158b67305fa172100cf4e82aafa5", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "patch": "@@ -2366,7 +2366,7 @@ package body Make is\n                                  Last_New := Last_New + 1;\n                                  New_Args (Last_New) :=\n                                    new String'(Name_Buffer (1 .. Name_Len));\n-                                 Test_If_Relative_Path\n+                                 Ensure_Absolute_Path\n                                    (New_Args (Last_New),\n                                     Do_Fail              => Make_Failed'Access,\n                                     Parent               => Dir_Path,\n@@ -2399,7 +2399,7 @@ package body Make is\n                                         Directory.Display_Name);\n \n                      begin\n-                        Test_If_Relative_Path\n+                        Ensure_Absolute_Path\n                           (New_Args (1),\n                            Do_Fail              => Make_Failed'Access,\n                            Parent               => Dir_Path,\n@@ -5028,44 +5028,44 @@ package body Make is\n                       Get_Name_String (Main_Project.Directory.Display_Name);\n       begin\n          for J in 1 .. Binder_Switches.Last loop\n-            Test_If_Relative_Path\n+            Ensure_Absolute_Path\n               (Binder_Switches.Table (J),\n                Do_Fail => Make_Failed'Access,\n-               Parent => Dir_Path, Including_L_Switch => False);\n+               Parent => Dir_Path, For_Gnatbind => True);\n          end loop;\n \n          for J in 1 .. Saved_Binder_Switches.Last loop\n-            Test_If_Relative_Path\n+            Ensure_Absolute_Path\n               (Saved_Binder_Switches.Table (J),\n-               Do_Fail            => Make_Failed'Access,\n-               Parent             => Current_Work_Dir,\n-               Including_L_Switch => False);\n+               Do_Fail             => Make_Failed'Access,\n+               Parent              => Current_Work_Dir,\n+               For_Gnatbind        => True);\n          end loop;\n \n          for J in 1 .. Linker_Switches.Last loop\n-            Test_If_Relative_Path\n+            Ensure_Absolute_Path\n               (Linker_Switches.Table (J),\n                Parent  => Dir_Path,\n                Do_Fail => Make_Failed'Access);\n          end loop;\n \n          for J in 1 .. Saved_Linker_Switches.Last loop\n-            Test_If_Relative_Path\n+            Ensure_Absolute_Path\n               (Saved_Linker_Switches.Table (J),\n                Do_Fail => Make_Failed'Access,\n                Parent  => Current_Work_Dir);\n          end loop;\n \n          for J in 1 .. Gcc_Switches.Last loop\n-            Test_If_Relative_Path\n+            Ensure_Absolute_Path\n               (Gcc_Switches.Table (J),\n                Do_Fail              => Make_Failed'Access,\n                Parent               => Dir_Path,\n                Including_Non_Switch => False);\n          end loop;\n \n          for J in 1 .. Saved_Gcc_Switches.Last loop\n-            Test_If_Relative_Path\n+            Ensure_Absolute_Path\n               (Saved_Gcc_Switches.Table (J),\n                Parent               => Current_Work_Dir,\n                Do_Fail              => Make_Failed'Access,\n@@ -5387,14 +5387,14 @@ package body Make is\n                  Get_Name_String (Main_Project.Directory.Display_Name);\n             begin\n                for J in Last_Binder_Switch + 1 .. Binder_Switches.Last loop\n-                  Test_If_Relative_Path\n+                  Ensure_Absolute_Path\n                     (Binder_Switches.Table (J),\n                      Do_Fail => Make_Failed'Access,\n-                     Parent  => Dir_Path, Including_L_Switch => False);\n+                     Parent  => Dir_Path, For_Gnatbind => True);\n                end loop;\n \n                for J in Last_Linker_Switch + 1 .. Linker_Switches.Last loop\n-                  Test_If_Relative_Path\n+                  Ensure_Absolute_Path\n                     (Linker_Switches.Table (J),\n                      Parent  => Dir_Path,\n                      Do_Fail => Make_Failed'Access);"}, {"sha": "253e8db814cad56161397bad71c2c92d89ce7b88", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "patch": "@@ -1316,11 +1316,12 @@ package body Makeutl is\n                   --  Object files and -L switches specified with relative\n                   --  paths must be converted to absolute paths.\n \n-                  Test_If_Relative_Path\n-                    (Switch  => Linker_Options_Buffer (Last_Linker_Option),\n-                     Parent  => Dir_Path,\n-                     Do_Fail => Do_Fail,\n-                     Including_L_Switch => True);\n+                  Ensure_Absolute_Path\n+                    (Switch       =>\n+                       Linker_Options_Buffer (Last_Linker_Option),\n+                     Parent       => Dir_Path,\n+                     Do_Fail      => Do_Fail,\n+                     For_Gnatbind => False);\n                end if;\n \n                Options := In_Tree.Shared.String_Elements.Table (Options).Next;\n@@ -1936,14 +1937,14 @@ package body Makeutl is\n    end Path_Or_File_Name;\n \n    ---------------------------\n-   -- Test_If_Relative_Path --\n+   -- Ensure_Absolute_Path --\n    ---------------------------\n \n-   procedure Test_If_Relative_Path\n+   procedure Ensure_Absolute_Path\n      (Switch               : in out String_Access;\n       Parent               : String;\n       Do_Fail              : Fail_Proc;\n-      Including_L_Switch   : Boolean := True;\n+      For_Gnatbind         : Boolean := False;\n       Including_Non_Switch : Boolean := True;\n       Including_RTS        : Boolean := False)\n    is\n@@ -1958,9 +1959,10 @@ package body Makeutl is\n \n             if Sw (1) = '-' then\n                if Sw'Length >= 3\n-                 and then (Sw (2) = 'A'\n-                            or else Sw (2) = 'I'\n-                            or else (Including_L_Switch and then Sw (2) = 'L'))\n+                 and then (Sw (2) = 'I'\n+                            or else (not For_Gnatbind\n+                                       and then (Sw (2) = 'L'\n+                                         or else Sw (2) = 'A')))\n                then\n                   Start := 3;\n \n@@ -1973,7 +1975,9 @@ package body Makeutl is\n                              or else\n                            Sw (2 .. 3) = \"aO\"\n                              or else\n-                           Sw (2 .. 3) = \"aI\")\n+                           Sw (2 .. 3) = \"aI\"\n+                             or else\n+                           (For_Gnatbind and then Sw (2 .. 3) = \"A=\"))\n                then\n                   Start := 4;\n \n@@ -2033,7 +2037,7 @@ package body Makeutl is\n             end if;\n          end;\n       end if;\n-   end Test_If_Relative_Path;\n+   end Ensure_Absolute_Path;\n \n    -------------------\n    -- Unit_Index_Of --"}, {"sha": "693fafcd2661ddd9236b396dc4304a23efbe589d", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "patch": "@@ -235,20 +235,19 @@ package Makeutl is\n    --  Find the index of a unit in a source file. Return zero if the file is\n    --  not a multi-unit source file.\n \n-   procedure Test_If_Relative_Path\n+   procedure Ensure_Absolute_Path\n      (Switch               : in out String_Access;\n       Parent               : String;\n       Do_Fail              : Fail_Proc;\n-      Including_L_Switch   : Boolean := True;\n+      For_Gnatbind         : Boolean := False;\n       Including_Non_Switch : Boolean := True;\n       Including_RTS        : Boolean := False);\n-   --  Test if Switch is a relative search path switch. If so, fail if Parent\n-   --  is the empty string, otherwise prepend the path with Parent. This\n-   --  subprogram is only used when using project files. For gnatbind switches,\n-   --  Including_L_Switch is False, because the argument of the -L switch is\n-   --  not a path. If Including_RTS is True, process also switches --RTS=.\n-   --  Do_Fail is called in case of error. Using Osint.Fail might be\n-   --  appropriate.\n+   --  Do nothing if Switch is an absolute path switch. If relative, fail if\n+   --  Parent is the empty string, otherwise prepend the path with Parent. This\n+   --  subprogram is only used when using project files. If For_Gnatbind is\n+   --  True, gnatbind switches that are not paths (-L, -A) are left unchaned.\n+   --  If Including_RTS is True, process also switches --RTS=. Do_Fail is\n+   --  called in case of error. Using Osint.Fail might be appropriate.\n \n    function Path_Or_File_Name (Path : Path_Name_Type) return String;\n    --  Returns a file name if -df is used, otherwise return a path name"}, {"sha": "60edce32f2dac51af5121b3bff74634e007d8f86", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ea2af26ac9d3ed57ffbd4ae28538c8f51ba63536", "patch": "@@ -7068,6 +7068,8 @@ package body Sem_Ch12 is\n       D2 : Integer := 0;\n       P1 : Node_Id := N1;\n       P2 : Node_Id := N2;\n+      T1 : Source_Ptr;\n+      T2 : Source_Ptr;\n \n    --  Start of processing for Earlier\n \n@@ -7208,19 +7210,21 @@ package body Sem_Ch12 is\n       --  At this point either both nodes came from source or we approximated\n       --  their source locations through neighbouring source statements.\n \n+      T1 := Top_Level_Location (Sloc (P1));\n+      T2 := Top_Level_Location (Sloc (P2));\n+\n       --  When two nodes come from the same instance, they have identical top\n       --  level locations. To determine proper relation within the tree, check\n       --  their locations within the template.\n \n-      if Top_Level_Location (Sloc (P1)) = Top_Level_Location (Sloc (P2)) then\n+      if T1 = T2 then\n          return Sloc (P1) < Sloc (P2);\n \n       --  The two nodes either come from unrelated instances or do not come\n       --  from instantiated code at all.\n \n       else\n-         return Top_Level_Location (Sloc (P1))\n-              < Top_Level_Location (Sloc (P2));\n+         return T1 < T2;\n       end if;\n    end Earlier;\n "}]}