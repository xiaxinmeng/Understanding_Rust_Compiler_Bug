{"sha": "28d711bf640d069aff010c0ac91d6f60dbedefc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhkNzExYmY2NDBkMDY5YWZmMDEwYzBhYzkxZDZmNjBkYmVkZWZjOA==", "commit": {"author": {"name": "Nicolas Roche", "email": "roche@adacore.com", "date": "2011-08-05T15:57:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-05T15:57:05Z"}, "message": "Makefile.in: Don't use directly ../xgcc to build shared libgnat.\n\n2011-08-05  Nicolas Roche  <roche@adacore.com>\n\n\t* gcc-interface/Makefile.in: Don't use directly ../xgcc to build shared \n\tlibgnat. Use rather the value of GCC_FOR_TARGET. Fix issue with         \n\tcanadian cross.\n\t* gcc-interface/Make-lang.in: Add support for canadian cross setting.\n\nFrom-SVN: r177462", "tree": {"sha": "b9da19095cd786ef259dead7ba5af5d02a0e0480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9da19095cd786ef259dead7ba5af5d02a0e0480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28d711bf640d069aff010c0ac91d6f60dbedefc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28d711bf640d069aff010c0ac91d6f60dbedefc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28d711bf640d069aff010c0ac91d6f60dbedefc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28d711bf640d069aff010c0ac91d6f60dbedefc8/comments", "author": {"login": "Nikokrock", "id": 7796165, "node_id": "MDQ6VXNlcjc3OTYxNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7796165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nikokrock", "html_url": "https://github.com/Nikokrock", "followers_url": "https://api.github.com/users/Nikokrock/followers", "following_url": "https://api.github.com/users/Nikokrock/following{/other_user}", "gists_url": "https://api.github.com/users/Nikokrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nikokrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nikokrock/subscriptions", "organizations_url": "https://api.github.com/users/Nikokrock/orgs", "repos_url": "https://api.github.com/users/Nikokrock/repos", "events_url": "https://api.github.com/users/Nikokrock/events{/privacy}", "received_events_url": "https://api.github.com/users/Nikokrock/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "993f8920f402a8292fae58b22c03e31f3a308cf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/993f8920f402a8292fae58b22c03e31f3a308cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/993f8920f402a8292fae58b22c03e31f3a308cf8"}], "stats": {"total": 83, "additions": 76, "deletions": 7}, "files": [{"sha": "5fc09eca0877f161573d66bab983d4420e64110a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28d711bf640d069aff010c0ac91d6f60dbedefc8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28d711bf640d069aff010c0ac91d6f60dbedefc8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=28d711bf640d069aff010c0ac91d6f60dbedefc8", "patch": "@@ -1,3 +1,10 @@\n+2011-08-05  Nicolas Roche  <roche@adacore.com>\n+\n+\t* gcc-interface/Makefile.in: Don't use directly ../xgcc to build shared\n+\tlibgnat. Use rather the value of GCC_FOR_TARGET. Fix issue with\n+\tcanadian cross.\n+\t* gcc-interface/Make-lang.in: Add support for canadian cross setting.\n+\n 2011-08-05  Matthew Heaney  <heaney@adacore.com>\n \n \t* a-comutr.adb, a-cimutr.adb, a-cbmutr.adb (Child_Count, Child_Depth):"}, {"sha": "98f142ec628d16792e609fd29802e7b20e73a69d", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 57, "deletions": 1, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28d711bf640d069aff010c0ac91d6f60dbedefc8/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28d711bf640d069aff010c0ac91d6f60dbedefc8/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=28d711bf640d069aff010c0ac91d6f60dbedefc8", "patch": "@@ -94,7 +94,11 @@ ada: gnat1$(exeext) gnatbind$(exeext)\n \n # There are too many Ada sources to check against here.  Let's\n # always force the recursive make.\n-ADA_TOOLS_FLAGS_TO_PASS=\\\n+ifeq ($(build), $(host))\n+  ifeq ($(host), $(target))\n+    # This is a regular native. So use the compiler from our current build\n+    # tree.\n+    ADA_TOOLS_FLAGS_TO_PASS=\\\n         \"CC=../../xgcc -B../../\"\t\\\n         \"CFLAGS=$(CFLAGS)\"\t\t\\\n \t\"exeext=$(exeext)\"              \\\n@@ -103,6 +107,58 @@ ADA_TOOLS_FLAGS_TO_PASS=\\\n \t\"GNATMAKE=../../gnatmake\"\t\\\n \t\"GNATLINK=../../gnatlink\"\t\\\n \t\"GNATBIND=../../gnatbind\"\n+  else\n+    # This is a regular cross compiler. Use the native compiler to compile\n+    # the tools.\n+\n+    # put the host RTS dir first in the PATH to hide the default runtime\n+    # files that are among the sources\n+    RTS_DIR:=$(strip $(subst \\,/,$(shell gnatls -v | grep adalib )))\n+\n+    ADA_TOOLS_FLAGS_TO_PASS=\\\n+        CC=\"$(CC)\" \\\n+        $(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS) \\\n+        ADA_INCLUDES=\"-I$(RTS_DIR)../adainclude -I$(RTS_DIR)\" \\\n+        GNATMAKE=\"gnatmake\" \\\n+        GNATBIND=\"gnatbind\" \\\n+        GNATLINK=\"gnatlink\" \\\n+        LIBGNAT=\"\"\n+  endif\n+else\n+  # Build is different from host so we are either building a canadian cross\n+  # or a cross-native compiler. We provide defaults for tools targeting the\n+  # host platform, but they can be overriden by just setting <tool>_FOR_HOST\n+  # variables. \n+  GNATMAKE_FOR_HOST=$(host)-gnatmake\n+  GNATBIND_FOR_HOST=$(host)-gnatbind\n+  GNATLINK_FOR_HOST=$(host)-gnatlink\n+  GNATLS_FOR_HOST=$(host)-gnatls\n+\n+  ifeq ($(host), $(target))\n+    # This is a cross native. All the sources are taken from the currently\n+    # built runtime.\n+    ADA_TOOLS_FLAGS_TO_PASS=\\\n+        CC=\"$(CC)\" \\\n+        $(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS)  \\\n+        ADA_INCLUDES=\"-I../rts\"                \\\n+        GNATMAKE=\"$(GNATMAKE_FOR_HOST)\"      \\\n+        GNATBIND=\"$(GNATBIND_FOR_HOST)\"      \\\n+        GNATLINK=\"$(GNATLINK_FOR_HOST)\"      \\\n+        LIBGNAT=\"\"\n+  else\n+    # This is a canadian cross. We should use a toolchain running on the\n+    # build platform and targeting the host platform.\n+    RTS_DIR:=$(strip $(subst \\,/,$(shell $(GNATLS_FOR_HOST) -v | grep adalib )))\n+    ADA_TOOLS_FLAGS_TO_PASS=\\\n+        CC=\"$(CC)\" \\\n+        $(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS)  \\\n+        ADA_INCLUDES=\"-I$(RTS_DIR)../adainclude -I$(RTS_DIR)\" \\\n+        GNATMAKE=\"$(GNATMAKE_FOR_HOST)\"      \\\n+        GNATBIND=\"$(GNATBIND_FOR_HOST)\"      \\\n+        GNATLINK=\"$(GNATLINK_FOR_HOST)\"      \\\n+        LIBGNAT=\"\"\n+  endif\n+endif\n \n GCC_LINK=$(LINKER) $(ALL_LINKERFLAGS) -static-libgcc $(LDFLAGS)\n "}, {"sha": "f877417b7004248c2bd16ab8e80fdd7080110929", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28d711bf640d069aff010c0ac91d6f60dbedefc8/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28d711bf640d069aff010c0ac91d6f60dbedefc8/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=28d711bf640d069aff010c0ac91d6f60dbedefc8", "patch": "@@ -2488,13 +2488,15 @@ gnatlib-shared-default:\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n \t$(RM) $(RTSDIR)/libgna*$(soext)\n-\tcd $(RTSDIR); ../../xgcc -B../../ -shared $(GNATLIBCFLAGS) \\\n+\tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n+                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared $(GNATLIBCFLAGS) \\\n \t\t$(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(MISCLIB) -lm\n-\tcd $(RTSDIR); ../../xgcc -B../../ -shared $(GNATLIBCFLAGS) \\\n+\tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n+                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared $(GNATLIBCFLAGS) \\\n \t\t$(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n@@ -2556,12 +2558,14 @@ gnatlib-shared-win32:\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n \t$(RM) $(RTSDIR)/libgna*$(soext)\n-\tcd $(RTSDIR); ../../xgcc -B../../ -shared -shared-libgcc \\\n+\tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n+                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared -shared-libgcc \\\n \t\t$(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) $(MISCLIB)\n-\tcd $(RTSDIR); ../../xgcc -B../../ -shared -shared-libgcc \\\n+\tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n+                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared -shared-libgcc \\\n \t\t$(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n@@ -2577,13 +2581,15 @@ gnatlib-shared-darwin:\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n \t     gnatlib\n \t$(RM) $(RTSDIR)/libgnat$(soext) $(RTSDIR)/libgnarl$(soext)\n-\tcd $(RTSDIR); ../../xgcc -B../../ -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n+\tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n+                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS) \\\n \t\t-Wl,-install_name,@rpath/libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(MISCLIB) -lm\n-\tcd $(RTSDIR); ../../xgcc -B../../ -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n+\tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n+                | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS) \\"}]}