{"sha": "93dd6255c208d0fe680741183b724124455c7c19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkZDYyNTVjMjA4ZDBmZTY4MDc0MTE4M2I3MjQxMjQ0NTVjN2MxOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@redhat.com", "date": "2001-04-11T20:19:43Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2001-04-11T20:19:43Z"}, "message": "Fix PR 2520, a problem with structure parameter passing.\n\n\t* config/ia64/ia64.h (FUNCTION_ARG_BOUNDARY): Return 128 if argument\n\trequires more than 64 bits of alignment.\n\nFrom-SVN: r41269", "tree": {"sha": "3a111464089d720e561e8813beab895ad45f1ab2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a111464089d720e561e8813beab895ad45f1ab2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93dd6255c208d0fe680741183b724124455c7c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93dd6255c208d0fe680741183b724124455c7c19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93dd6255c208d0fe680741183b724124455c7c19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93dd6255c208d0fe680741183b724124455c7c19/comments", "author": null, "committer": null, "parents": [{"sha": "9b7949d5ffff47d657935da2ea6ec5aa3e77f9a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7949d5ffff47d657935da2ea6ec5aa3e77f9a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7949d5ffff47d657935da2ea6ec5aa3e77f9a7"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "9ff706e653242c26d809a627582aa7080d4ee982", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd6255c208d0fe680741183b724124455c7c19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd6255c208d0fe680741183b724124455c7c19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93dd6255c208d0fe680741183b724124455c7c19", "patch": "@@ -1,3 +1,8 @@\n+2001-04-11  Jim Wilson  <wilson@redhat.com>\n+\n+\t* config/ia64/ia64.h (FUNCTION_ARG_BOUNDARY): Return 128 if argument\n+\trequires more than 64 bits of alignment.\n+\n 2001-04-11  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpplib.c (do_line): Sanity check iff enable checking."}, {"sha": "956abd02a327dee96192f7ff16b3990934d70d2a", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dd6255c208d0fe680741183b724124455c7c19/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dd6255c208d0fe680741183b724124455c7c19/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=93dd6255c208d0fe680741183b724124455c7c19", "patch": "@@ -1382,11 +1382,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* If defined, a C expression that gives the alignment boundary, in bits, of an\n    argument with the specified mode and type.  */\n \n-/* Arguments larger than 64 bits require 128 bit alignment.  */\n+/* Arguments with alignment larger than 8 bytes start at the next even\n+   boundary.  See ia64_function_arg.  */\n \n #define FUNCTION_ARG_BOUNDARY(MODE, TYPE) \\\n-  (((((MODE) == BLKmode ? int_size_in_bytes (TYPE) : GET_MODE_SIZE (MODE)) \\\n-     + UNITS_PER_WORD - 1) / UNITS_PER_WORD) > 1 ? 128 : PARM_BOUNDARY)\n+  (((TYPE) ? (TYPE_ALIGN (TYPE) > 8 * BITS_PER_UNIT)\t\t\\\n+    : (((((MODE) == BLKmode\t\t\t\t\t\\\n+\t  ? int_size_in_bytes (TYPE) : GET_MODE_SIZE (MODE))\t\\\n+\t + UNITS_PER_WORD - 1) / UNITS_PER_WORD) > 1))\t\t\\\n+    ? 128 : PARM_BOUNDARY)\n \n /* A C expression that is nonzero if REGNO is the number of a hard register in\n    which function arguments are sometimes passed.  This does *not* include"}]}