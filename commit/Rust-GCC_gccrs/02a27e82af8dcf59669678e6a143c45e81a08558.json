{"sha": "02a27e82af8dcf59669678e6a143c45e81a08558", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhMjdlODJhZjhkY2Y1OTY2OTY3OGU2YTE0M2M0NWU4MWEwODU1OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-18T20:58:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-18T20:58:48Z"}, "message": "(get_unwidened): Don't crash if FIELD_DECL not layed out.\n\nFrom-SVN: r13508", "tree": {"sha": "37e6ceb752205a901f325fb11129c369cf8a66e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37e6ceb752205a901f325fb11129c369cf8a66e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a27e82af8dcf59669678e6a143c45e81a08558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a27e82af8dcf59669678e6a143c45e81a08558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a27e82af8dcf59669678e6a143c45e81a08558", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a27e82af8dcf59669678e6a143c45e81a08558/comments", "author": null, "committer": null, "parents": [{"sha": "a9d07d6e65f690431a892903c89404a9ed291000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9d07d6e65f690431a892903c89404a9ed291000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9d07d6e65f690431a892903c89404a9ed291000"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "d9b5abe0aa3df725bb5e56a01011524f8f84a6de", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a27e82af8dcf59669678e6a143c45e81a08558/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a27e82af8dcf59669678e6a143c45e81a08558/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=02a27e82af8dcf59669678e6a143c45e81a08558", "patch": "@@ -4181,7 +4181,9 @@ get_unwidened (op, for_type)\n \n   if (TREE_CODE (op) == COMPONENT_REF\n       /* Since type_for_size always gives an integer type.  */\n-      && TREE_CODE (type) != REAL_TYPE)\n+      && TREE_CODE (type) != REAL_TYPE\n+      /* Don't crash if field not layed out yet.  */\n+      && DECL_SIZE (TREE_OPERAND (op, 1)) != 0)\n     {\n       unsigned innerprec = TREE_INT_CST_LOW (DECL_SIZE (TREE_OPERAND (op, 1)));\n       type = type_for_size (innerprec, TREE_UNSIGNED (TREE_OPERAND (op, 1)));"}]}