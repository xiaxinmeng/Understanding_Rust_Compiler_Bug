{"sha": "3f7776ea33a6ba9dac28bff8a521de04a728e19f", "node_id": "C_kwDOANBUbNoAKDNmNzc3NmVhMzNhNmJhOWRhYzI4YmZmOGE1MjFkZTA0YTcyOGUxOWY", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-12-17T12:16:35Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2023-01-05T14:30:01Z"}, "message": "ada: Do not use decimal approximation in -gnatRj output\n\nThis avoids an unnecessary loss of precision for real values.\n\ngcc/ada/\n\n\t* repinfo.ads (The JSON output format): Document change.\n\t* urealp.adb (UR_Write_To_JSON): Output a fraction instead of a\n\tdecimal approximation.", "tree": {"sha": "292ecead69d2a112dad860cbedb38980f379040b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/292ecead69d2a112dad860cbedb38980f379040b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f7776ea33a6ba9dac28bff8a521de04a728e19f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7776ea33a6ba9dac28bff8a521de04a728e19f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f7776ea33a6ba9dac28bff8a521de04a728e19f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7776ea33a6ba9dac28bff8a521de04a728e19f/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "133a8e6339ff5d4c695cd1c4ee0f4958386d46bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/133a8e6339ff5d4c695cd1c4ee0f4958386d46bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/133a8e6339ff5d4c695cd1c4ee0f4958386d46bd"}], "stats": {"total": 43, "additions": 15, "deletions": 28}, "files": [{"sha": "f9200ee04e4bdf148ed89988716a6e9099ab667a", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f7776ea33a6ba9dac28bff8a521de04a728e19f/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f7776ea33a6ba9dac28bff8a521de04a728e19f/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=3f7776ea33a6ba9dac28bff8a521de04a728e19f", "patch": "@@ -196,8 +196,8 @@ package Repinfo is\n    --    \"Object_Size\"          :  numerical expression\n    --    \"Value_Size\"           :  numerical expression\n    --    \"Component_Size\"       :  numerical expression\n-   --    \"Range\"                :  array of numbers\n-   --    \"Small\"                :  number\n+   --    \"Range\"                :  array of numerical expressions\n+   --    \"Small\"                :  numerical expression\n    --    \"Alignment\"            :  number\n    --    \"Convention\"           :  string\n    --    \"Linker_Section\"       :  string"}, {"sha": "37bf3a7cb795d04e50c89fd10d490fae11e57309", "filename": "gcc/ada/urealp.adb", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f7776ea33a6ba9dac28bff8a521de04a728e19f/gcc%2Fada%2Furealp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f7776ea33a6ba9dac28bff8a521de04a728e19f/gcc%2Fada%2Furealp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.adb?ref=3f7776ea33a6ba9dac28bff8a521de04a728e19f", "patch": "@@ -1518,14 +1518,11 @@ package body Urealp is\n    -- UR_Write_To_JSON --\n    ----------------------\n \n-   --  We defer to the implementation of UR_Write in all cases, either directly\n-   --  for values that are naturally written in a JSON compatible format, or by\n-   --  first computing a decimal approximation for other values.\n+   --  We defer to the implementation of UR_Write for values that are naturally\n+   --  written in a JSON compatible format and write a fraction for the others.\n \n    procedure UR_Write_To_JSON (Real : Ureal) is\n-      Val  : constant Ureal_Entry      := Ureals.Table (Real);\n-      Imrk : constant Uintp.Save_Mark  := Mark;\n-      Rmrk : constant Urealp.Save_Mark := Mark;\n+      Val : constant Ureal_Entry := Ureals.Table (Real);\n \n       T : Ureal;\n \n@@ -1561,31 +1558,21 @@ package body Urealp is\n       elsif Val.Rbase = 0 and then Val.Num mod Val.Den = 0 then\n          T := Real;\n \n-      --  For other constants, compute an approximation in base 10\n+      --  Other non-based (rational) constants are written in num/den style\n \n       else\n-         declare\n-            A : constant Ureal := UR_Abs (Real);\n-            --  The absolute value\n-\n-            E : constant Uint  :=\n-                  (if A < Ureal_1\n-                   then UI_From_Int (3 - Decimal_Exponent_Lo (Real))\n-                   else Uint_3);\n-            --  The exponent for at least 3 digits after the decimal point\n-\n-            Num : constant Uint :=\n-                    UR_To_Uint (UR_Mul (A, UR_Exponentiate (Ureal_10, E)));\n-            --  The numerator appropriately rounded\n-\n-         begin\n-            T := UR_From_Components (Num, E, 10, Val.Negative);\n-         end;\n+         Write_Str (\"{ \"\"code\"\": \"\"/\"\", \"\"operands\"\": [ \");\n+         if Val.Negative then\n+            Write_Char ('-');\n+         end if;\n+         UI_Write (Val.Num, Decimal);\n+         Write_Str (\".0, \");\n+         UI_Write (Val.Den, Decimal);\n+         Write_Str (\".0 ] }\");\n+         return;\n       end if;\n \n       UR_Write (T);\n-      Release (Imrk);\n-      Release (Rmrk);\n    end UR_Write_To_JSON;\n \n    -------------"}]}