{"sha": "842901d0ca0baa25ea510089a21162a6e8ae8f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQyOTAxZDBjYTBiYWEyNWVhNTEwMDg5YTIxMTYyYTZlOGFlOGYyOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-08-07T17:32:12Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-08-07T17:32:12Z"}, "message": "PR c++/81429 - wrong parsing of constructor with C++11 attribute.\n\n\t* parser.c (cp_parser_constructor_declarator_p): Handle the scenario\n\twhen a parameter declaration begins with [[attribute]].\n\n\t* g++.dg/cpp0x/gen-attrs-68.C: New test.\n\t* g++.dg/cpp0x/gen-attrs-69.C: New test.\n\nFrom-SVN: r274181", "tree": {"sha": "5a8afe56299429972de78b7dcff8b844ddb47e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a8afe56299429972de78b7dcff8b844ddb47e4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/842901d0ca0baa25ea510089a21162a6e8ae8f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842901d0ca0baa25ea510089a21162a6e8ae8f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842901d0ca0baa25ea510089a21162a6e8ae8f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842901d0ca0baa25ea510089a21162a6e8ae8f29/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c822ac7daa0d0c920bbb87cdba847fed6331ba73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c822ac7daa0d0c920bbb87cdba847fed6331ba73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c822ac7daa0d0c920bbb87cdba847fed6331ba73"}], "stats": {"total": 96, "additions": 95, "deletions": 1}, "files": [{"sha": "bae5147fca956e85c3ee6169a4e35a4142170368", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=842901d0ca0baa25ea510089a21162a6e8ae8f29", "patch": "@@ -1,3 +1,9 @@\n+2019-08-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/81429 - wrong parsing of constructor with C++11 attribute.\n+\t* parser.c (cp_parser_constructor_declarator_p): Handle the scenario\n+\twhen a parameter declaration begins with [[attribute]].\n+\n 2019-08-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91346 - Implement P1668R1, allow unevaluated asm in constexpr."}, {"sha": "14b724095c4d6c3949b4be6018293fd2dfb714af", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=842901d0ca0baa25ea510089a21162a6e8ae8f29", "patch": "@@ -27857,7 +27857,9 @@ cp_parser_constructor_declarator_p (cp_parser *parser, cp_parser_flags flags,\n \t  /* A parameter declaration begins with a decl-specifier,\n \t     which is either the \"attribute\" keyword, a storage class\n \t     specifier, or (usually) a type-specifier.  */\n-\t  && !cp_lexer_next_token_is_decl_specifier_keyword (parser->lexer))\n+\t  && !cp_lexer_next_token_is_decl_specifier_keyword (parser->lexer)\n+\t  /* A parameter declaration can also begin with [[attribute]].  */\n+\t  && !cp_next_tokens_can_be_std_attribute_p (parser))\n \t{\n \t  tree type;\n \t  tree pushed_scope = NULL_TREE;"}, {"sha": "e69e59be069922e9680fe0c9ceca142cf4bfb462", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=842901d0ca0baa25ea510089a21162a6e8ae8f29", "patch": "@@ -1,3 +1,9 @@\n+2019-08-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/81429 - wrong parsing of constructor with C++11 attribute.\n+\t* g++.dg/cpp0x/gen-attrs-68.C: New test.\n+\t* g++.dg/cpp0x/gen-attrs-69.C: New test.\n+\n 2019-08-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91346 - Implement P1668R1, allow unevaluated asm in constexpr."}, {"sha": "6bede0659db584aac18e0fea59c2fa0fdae47591", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-68.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-68.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-68.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-68.C?ref=842901d0ca0baa25ea510089a21162a6e8ae8f29", "patch": "@@ -0,0 +1,40 @@\n+// PR c++/81429 - wrong parsing of constructor with C++11 attribute.\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-Wunused-parameter -Wno-pedantic\" }\n+\n+void fn1([[maybe_unused]] int a) { }\n+void fn2(int a [[maybe_unused]]) { }\n+void fn3(__attribute__((unused)) int a) { }\n+void fn4(int a __attribute__((unused))) { }\n+\n+struct S1 {\n+  S1([[maybe_unused]] int a) { }\n+};\n+\n+struct S2 {\n+  S2([[maybe_unused]] int f, [[maybe_unused]] int a) { }\n+};\n+\n+struct S3 {\n+  S3(int a [[maybe_unused]]) { }\n+};\n+\n+struct S4 {\n+  S4(int f [[maybe_unused]], int a [[maybe_unused]]) { }\n+};\n+\n+struct S5 {\n+  S5(__attribute__((unused)) int a) { }\n+};\n+\n+struct S6 {\n+  S6(__attribute__((unused)) int f, __attribute__((unused)) int a) { }\n+};\n+\n+struct S7 {\n+  S7(int a __attribute__((unused))) { }\n+};\n+\n+struct S8 {\n+  S8(int f __attribute__((unused)), int a __attribute__((unused))) { }\n+};"}, {"sha": "43173dbbdf443b23065239c36ce3e994fa931932", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-69.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/842901d0ca0baa25ea510089a21162a6e8ae8f29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-69.C?ref=842901d0ca0baa25ea510089a21162a6e8ae8f29", "patch": "@@ -0,0 +1,40 @@\n+// PR c++/81429 - wrong parsing of constructor with C++11 attribute.\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-Wno-pedantic\" }\n+\n+void fn1([[maybe_unused]] int);\n+void fn2(int a [[maybe_unused]]);\n+void fn3(__attribute__((unused)) int);\n+void fn4(int __attribute__((unused)));\n+\n+struct S1 {\n+  S1([[maybe_unused]] int);\n+};\n+\n+struct S2 {\n+  S2([[maybe_unused]] int, [[maybe_unused]] int);\n+};\n+\n+struct S3 {\n+  S3(int a [[maybe_unused]]);\n+};\n+\n+struct S4 {\n+  S4(int a [[maybe_unused]], int b [[maybe_unused]]);\n+};\n+\n+struct S5 {\n+  S5(__attribute__((unused)) int);\n+};\n+\n+struct S6 {\n+  S6(__attribute__((unused)) int, __attribute__((unused)) int);\n+};\n+\n+struct S7 {\n+  S7(int __attribute__((unused)));\n+};\n+\n+struct S8 {\n+  S8(int __attribute__((unused)), int __attribute__((unused)));\n+};"}]}