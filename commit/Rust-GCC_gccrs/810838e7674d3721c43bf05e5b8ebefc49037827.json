{"sha": "810838e7674d3721c43bf05e5b8ebefc49037827", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEwODM4ZTc2NzRkMzcyMWM0M2JmMDVlNWI4ZWJlZmM0OTAzNzgyNw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-12-02T00:05:15Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-12-02T00:05:15Z"}, "message": "gcc-dg.exp (dg-process-target): Wrapper for dg function to handle effective-target-keyword.\n\n\t* lib/gcc-dg.exp (dg-process-target): Wrapper for dg function to\n\thandle effective-target-keyword.\n\t(dg-skip-if): Support effective-target keyword as target list.\n\t(dg-xfail-if): Ditto.\n\t* lib/target-supports.exp (is-effective-target-keyword): New proc.\n\nFrom-SVN: r91592", "tree": {"sha": "6709570ebff617bccc18cc27d62e4f98da4bb029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6709570ebff617bccc18cc27d62e4f98da4bb029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/810838e7674d3721c43bf05e5b8ebefc49037827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810838e7674d3721c43bf05e5b8ebefc49037827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810838e7674d3721c43bf05e5b8ebefc49037827", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810838e7674d3721c43bf05e5b8ebefc49037827/comments", "author": null, "committer": null, "parents": [{"sha": "ee67636177f451bb371cd11310fd3aa37334f309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee67636177f451bb371cd11310fd3aa37334f309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee67636177f451bb371cd11310fd3aa37334f309"}], "stats": {"total": 88, "additions": 84, "deletions": 4}, "files": [{"sha": "5a5d84a7f15b9278a323c684708a6503c701ef69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810838e7674d3721c43bf05e5b8ebefc49037827/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810838e7674d3721c43bf05e5b8ebefc49037827/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=810838e7674d3721c43bf05e5b8ebefc49037827", "patch": "@@ -1,3 +1,11 @@\n+2004-12-01  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/gcc-dg.exp (dg-process-target): Wrapper for dg function to\n+\thandle effective-target-keyword.\n+\t(dg-skip-if): Support effective-target keyword as target list.\n+\t(dg-xfail-if): Ditto.\n+\t* lib/target-supports.exp (is-effective-target-keyword): New proc.\n+\n 2004-12-01  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR tree-optimization/18291"}, {"sha": "a0162d2f0b0d9a6adb8d2b7001f8318d14c6a5c4", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 60, "deletions": 4, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810838e7674d3721c43bf05e5b8ebefc49037827/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810838e7674d3721c43bf05e5b8ebefc49037827/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=810838e7674d3721c43bf05e5b8ebefc49037827", "patch": "@@ -429,9 +429,16 @@ proc dg-require-effective-target { args } {\n \n proc dg-skip-if { args } {\n     set args [lreplace $args 0 0]\n-    if [check_conditional_xfail $args] {\n-\tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+\n+    # The target list might be an effective-target keyword, so replace\n+    # the original list with \"*-*-*\" if it is matched.\n+    set selector \"target [join [lindex $args 1]]\"\n+    if { [dg-process-target $selector] == \"S\" } {\n+\t# The target list matched; now check the flags.\n+\tif [check_conditional_xfail [lreplace $args 1 1 \"*-*-*\"]] {\n+\t    upvar dg-do-what dg-do-what\n+\t    skip_test_and_clear_xfail\n+\t}\n     }\n }\n \n@@ -460,7 +467,7 @@ proc dg-xfail-if { args } {\n     set selector \"target [join [lindex $args 1]]\"\n     if { [dg-process-target $selector] == \"S\" } {\n \tglobal compiler_conditional_xfail_data\n-\tset compiler_conditional_xfail_data $args\n+\tset compiler_conditional_xfail_data [lreplace $args 1 1 \"*-*-*\"]\n     }\n }\n \n@@ -493,4 +500,53 @@ if { [info procs saved-dg-test] == [list] } {\n \tset additional_prunes \"\"\n     }\n }\n+\n+# Intercept the call to the DejaGnu version of dg-process-target to\n+# support use of an effective-target keyword in place of a list of\n+# target triplets to xfail or skip a test.\n+#\n+# selector is one of:\n+#    xfail target-triplet-1 ...\n+#    xfail effective-target-keyword\n+#    target target-triplet-1 ...\n+#    target effective-target-keyword\n+#\n+# For a target list the result is \"S\" if the target is selected, \"N\" otherwise.\n+# For an xfail list the result is \"F\" if the target is affected, \"P\" otherwise.\n+\n+if { [info procs saved-dg-process-target] == [list] } {\n+    rename dg-process-target saved-dg-process-target\n+\n+    proc dg-process-target { args } {\n+        verbose \"replacement dg-process-target\" 2\n+\t\n+\t# Extract the 'what' keyword from the argument list.\n+\tset selector [string trim [lindex $args 0]]\n+\tif [regexp \"^xfail \" $selector] {\n+\t    set what \"xfail\"\n+\t} elseif [regexp \"^target \" $selector] {\n+\t    set what \"target\"\n+\t} else {\n+\t    error \"syntax error in target selector \\\"$selector\\\"\"\n+\t}\n+\n+\t# Extract the rest of the list, which might be a keyword.\n+\tregsub \"^${what}\" $selector \"\" rest\n+\tset rest [string trim $rest]\n+\n+\tif [is-effective-target-keyword $rest] {\n+\t    # The selector is an effective target keyword.\n+\t    if [is-effective-target $rest] {\n+\t\treturn [expr { $what == \"xfail\" ? \"F\" : \"S\" }]\n+\t    } else {\n+\t\treturn [expr { $what == \"xfail\" ? \"P\" : \"N\" }]\n+\t    }\n+\t}\n+\n+\t# The selector is not an effective-target keyword, so process\n+\t# the list of target triplets.\n+\treturn [saved-dg-process-target $selector]\n+    }\n+}\n+\n set additional_prunes \"\""}, {"sha": "2e1bde6474880b2ffc32f82233cb18422b253a41", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810838e7674d3721c43bf05e5b8ebefc49037827/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810838e7674d3721c43bf05e5b8ebefc49037827/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=810838e7674d3721c43bf05e5b8ebefc49037827", "patch": "@@ -538,3 +538,19 @@ proc is-effective-target { arg } {\n     verbose \"is-effective-target: $arg $selected\" 2\n     return $selected\n }\n+\n+# Return 1 if the argument is an effective-target keyword, 0 otherwise.\n+\n+proc is-effective-target-keyword { arg } {\n+    if { [info procs check_effective_target_${arg}] != [list] } {\n+\treturn 1\n+    } else {\n+\t# These have different names for their check_* procs.\n+\tswitch $arg {\n+\t  \"vmx_hw\"         { return 1 }\n+\t  \"named_sections\" { return 1 }\n+\t  \"gc_sections\"    { return 1 }\n+\t  default          { return 0 }\n+\t}\n+    }\n+}"}]}