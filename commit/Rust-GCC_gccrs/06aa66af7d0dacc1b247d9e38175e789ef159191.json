{"sha": "06aa66af7d0dacc1b247d9e38175e789ef159191", "node_id": "C_kwDOANBUbNoAKDA2YWE2NmFmN2QwZGFjYzFiMjQ3ZDllMzgxNzVlNzg5ZWYxNTkxOTE", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-10-03T10:26:03Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-10-03T13:13:10Z"}, "message": "arm: Add missing early clobber to MVE vrev64q_m patterns\n\nLike the non-predicated vrev64q patterns, mve_vrev64q_m_<supf><mode>\nand mve_vrev64q_m_f<mode> need an early clobber constraint, otherwise\nwe can generate an unpredictable instruction:\n\nWarning: 64-bit element size and same destination and source operands makes instruction UNPREDICTABLE\nwhen calling vrevq64_m* with the same first and second arguments.\n\nOK for trunk?\n\nThanks,\n\nChristophe\n\ngcc/ChangeLog:\n\n\t* config/arm/mve.md (mve_vrev64q_m_<supf><mode>): Add early\n\tclobber.\n\t(mve_vrev64q_m_f<mode>): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vrev64q_m_s16-clobber.c: New test.", "tree": {"sha": "39b31f394cd4e06953f9043295a0148399b68c3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39b31f394cd4e06953f9043295a0148399b68c3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06aa66af7d0dacc1b247d9e38175e789ef159191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06aa66af7d0dacc1b247d9e38175e789ef159191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06aa66af7d0dacc1b247d9e38175e789ef159191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06aa66af7d0dacc1b247d9e38175e789ef159191/comments", "author": null, "committer": null, "parents": [{"sha": "53acc10ee81116536d4eb6fbba62a90f329b75ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53acc10ee81116536d4eb6fbba62a90f329b75ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53acc10ee81116536d4eb6fbba62a90f329b75ce"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "62186f124da183fe1b1eb57a1aea1e8fff680a22", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06aa66af7d0dacc1b247d9e38175e789ef159191/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06aa66af7d0dacc1b247d9e38175e789ef159191/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=06aa66af7d0dacc1b247d9e38175e789ef159191", "patch": "@@ -3503,7 +3503,7 @@\n ;;\n (define_insn \"mve_vrev64q_m_<supf><mode>\"\n   [\n-   (set (match_operand:MVE_2 0 \"s_register_operand\" \"=w\")\n+   (set (match_operand:MVE_2 0 \"s_register_operand\" \"=&w\")\n \t(unspec:MVE_2 [(match_operand:MVE_2 1 \"s_register_operand\" \"0\")\n \t\t       (match_operand:MVE_2 2 \"s_register_operand\" \"w\")\n \t\t       (match_operand:<MVE_VPRED> 3 \"vpr_register_operand\" \"Up\")]\n@@ -4598,7 +4598,7 @@\n ;;\n (define_insn \"mve_vrev64q_m_f<mode>\"\n   [\n-   (set (match_operand:MVE_0 0 \"s_register_operand\" \"=w\")\n+   (set (match_operand:MVE_0 0 \"s_register_operand\" \"=&w\")\n \t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"0\")\n \t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")\n \t\t       (match_operand:<MVE_VPRED> 3 \"vpr_register_operand\" \"Up\")]"}, {"sha": "6464c96181dbad67d388efcd554f054a92a240cc", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vrev64q_m_s16-clobber.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06aa66af7d0dacc1b247d9e38175e789ef159191/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrev64q_m_s16-clobber.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06aa66af7d0dacc1b247d9e38175e789ef159191/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrev64q_m_s16-clobber.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrev64q_m_s16-clobber.c?ref=06aa66af7d0dacc1b247d9e38175e789ef159191", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n+/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-O2\" } */\n+\n+#include \"arm_mve.h\"\n+\n+int16x8_t\n+foo (int16x8_t a, mve_pred16_t p)\n+{\n+  return vrev64q_m_s16 (a, a, p);\n+}\n+\n+float16x8_t\n+foo2 (float16x8_t a, mve_pred16_t p)\n+{\n+  return vrev64q_m_f16 (a, a, p);\n+}"}]}