{"sha": "9313a26a9ad02e45a1b75d9274f5025015356669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMxM2EyNmE5YWQwMmU0NWExYjc1ZDkyNzRmNTAyNTAxNTM1NjY2OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-23T13:24:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-23T13:24:47Z"}, "message": "[multiple changes]\n\n2017-01-23  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_strm.ads: Minor reformatting and typo fixes.\n\n2017-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_aggr.adb, par_sco.adb, exp_util.adb, sem.adb, sem_ch4.adb,\n\texp_aggr.adb: Minor reformatting.\n\t* g-diopit.adb: minor grammar/punctuation fix in comment.\n\t* g-byorma.ads: minor fix of unbalanced parens in comment.\n\n2017-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* par.adb: Update the documentation of component Labl.\n\t* par-ch6.adb (P_Return_Statement): Set the expected label of\n\tan extended return statement to Error.\n\n2017-01-23  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-boustr.ads, s-boustr.adb (Is_Full): New function.\n\n2017-01-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* expander.adb: Handle N_Delta_Aggregate.\n\n2017-01-23  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch6.adb (Expand_Call): Improve the code that\n\tchecks if some formal of the called subprogram is a class-wide\n\tinterface, to handle subtypes of class-wide interfaces.\n\n2017-01-23  Javier Miranda  <miranda@adacore.com>\n\n\t* checks.adb (Apply_Parameter_Aliasing_Checks):\n\tRemove side effects of the actuals before generating the overlap\n\tcheck.\n\nFrom-SVN: r244806", "tree": {"sha": "93acdab7460f98cc9ac128236578eb6e952d1e94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93acdab7460f98cc9ac128236578eb6e952d1e94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9313a26a9ad02e45a1b75d9274f5025015356669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9313a26a9ad02e45a1b75d9274f5025015356669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9313a26a9ad02e45a1b75d9274f5025015356669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9313a26a9ad02e45a1b75d9274f5025015356669/comments", "author": null, "committer": null, "parents": [{"sha": "4b7fd13182946da2c33fc2c1df6614122e217b59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b7fd13182946da2c33fc2c1df6614122e217b59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b7fd13182946da2c33fc2c1df6614122e217b59"}], "stats": {"total": 314, "additions": 221, "deletions": 93}, "files": [{"sha": "2ab1f234c5523dd435278f41d733b3c983218861", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -1,3 +1,40 @@\n+2017-01-23  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_strm.ads: Minor reformatting and typo fixes.\n+\n+2017-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_aggr.adb, par_sco.adb, exp_util.adb, sem.adb, sem_ch4.adb,\n+\texp_aggr.adb: Minor reformatting.\n+\t* g-diopit.adb: minor grammar/punctuation fix in comment.\n+\t* g-byorma.ads: minor fix of unbalanced parens in comment.\n+\n+2017-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* par.adb: Update the documentation of component Labl.\n+\t* par-ch6.adb (P_Return_Statement): Set the expected label of\n+\tan extended return statement to Error.\n+\n+2017-01-23  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-boustr.ads, s-boustr.adb (Is_Full): New function.\n+\n+2017-01-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* expander.adb: Handle N_Delta_Aggregate.\n+\n+2017-01-23  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Call): Improve the code that\n+\tchecks if some formal of the called subprogram is a class-wide\n+\tinterface, to handle subtypes of class-wide interfaces.\n+\n+2017-01-23  Javier Miranda  <miranda@adacore.com>\n+\n+\t* checks.adb (Apply_Parameter_Aliasing_Checks):\n+\tRemove side effects of the actuals before generating the overlap\n+\tcheck.\n+\n 2017-01-23  Justin Squirek  <squirek@adacore.com>\n \n \t* exp_strm.ads, exp_strm.ads"}, {"sha": "f0ba9a8ad9e41bab0cd7f067f819e8c228377ab4", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -2360,6 +2360,9 @@ package body Checks is\n                  and then not Is_Elementary_Type (Etype (Orig_Act_2))\n                  and then May_Cause_Aliasing (Formal_1, Formal_2)\n                then\n+                  Remove_Side_Effects (Actual_1);\n+                  Remove_Side_Effects (Actual_2);\n+\n                   Overlap_Check\n                     (Actual_1 => Actual_1,\n                      Actual_2 => Actual_2,"}, {"sha": "6a0b0d53244f81bd89ff9cb03ec58cdc74232a56", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 47, "deletions": 33, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -6444,16 +6444,16 @@ package body Exp_Aggr is\n    ------------------------------\n \n    procedure Expand_N_Delta_Aggregate (N : Node_Id) is\n-      Loc :  constant Source_Ptr := Sloc (N);\n-      Temp : constant Entity_Id := Make_Temporary (Loc, 'T');\n-      Typ  : constant Entity_Id := Etype (N);\n+      Loc  : constant Source_Ptr := Sloc (N);\n+      Typ  : constant Entity_Id  := Etype (N);\n       Decl : Node_Id;\n \n    begin\n-      Decl := Make_Object_Declaration (Loc,\n-         Defining_Identifier => Temp,\n-         Object_Definition => New_Occurrence_Of (Typ, Loc),\n-         Expression => New_Copy_Tree (Expression (N)));\n+      Decl :=\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Make_Temporary (Loc, 'T'),\n+          Object_Definition   => New_Occurrence_Of (Typ, Loc),\n+          Expression          => New_Copy_Tree (Expression (N)));\n \n       if Is_Array_Type (Etype (N)) then\n          Expand_Delta_Array_Aggregate (N, New_List (Decl));\n@@ -6467,15 +6467,19 @@ package body Exp_Aggr is\n    ----------------------------------\n \n    procedure Expand_Delta_Array_Aggregate (N : Node_Id; Deltas : List_Id) is\n-      Loc    : constant Source_Ptr := Sloc (N);\n-      Temp   : constant Entity_Id  := Defining_Identifier (First (Deltas));\n-      Assoc  : Node_Id;\n-      Choice : Node_Id;\n+      Loc   : constant Source_Ptr := Sloc (N);\n+      Temp  : constant Entity_Id  := Defining_Identifier (First (Deltas));\n+      Assoc : Node_Id;\n+\n       function Generate_Loop (C : Node_Id) return Node_Id;\n       --  Generate a loop containing individual component assignments for\n       --  choices that are ranges, subtype indications, subtype names, and\n       --  iterated component associations.\n \n+      -------------------\n+      -- Generate_Loop --\n+      -------------------\n+\n       function Generate_Loop (C : Node_Id) return Node_Id is\n          Sl : constant Source_Ptr := Sloc (C);\n          Ix : Entity_Id;\n@@ -6491,21 +6495,29 @@ package body Exp_Aggr is\n \n          return\n            Make_Loop_Statement (Loc,\n-              Iteration_Scheme => Make_Iteration_Scheme (Sl,\n-                Loop_Parameter_Specification =>\n-                Make_Loop_Parameter_Specification (Sl,\n-                  Defining_Identifier => Ix,\n-                  Discrete_Subtype_Definition => New_Copy_Tree (C))),\n-              End_Label => Empty,\n-              Statements =>\n-                New_List (\n-                  Make_Assignment_Statement (Sl,\n-                    Name       => Make_Indexed_Component (Sl,\n+             Iteration_Scheme =>\n+               Make_Iteration_Scheme (Sl,\n+                 Loop_Parameter_Specification =>\n+                   Make_Loop_Parameter_Specification (Sl,\n+                     Defining_Identifier         => Ix,\n+                     Discrete_Subtype_Definition => New_Copy_Tree (C))),\n+\n+              Statements      => New_List (\n+                Make_Assignment_Statement (Sl,\n+                  Name       =>\n+                    Make_Indexed_Component (Sl,\n                       Prefix      => New_Occurrence_Of (Temp, Sl),\n                       Expressions => New_List (New_Occurrence_Of (Ix, Sl))),\n-                    Expression => New_Copy_Tree (Expression (Assoc)))));\n+                  Expression => New_Copy_Tree (Expression (Assoc)))),\n+              End_Label       => Empty);\n       end Generate_Loop;\n \n+      --  Local variables\n+\n+      Choice : Node_Id;\n+\n+   --  Start of processing for Expand_Delta_Array_Aggregate\n+\n    begin\n       Assoc := First (Component_Associations (N));\n       while Present (Assoc) loop\n@@ -6524,7 +6536,7 @@ package body Exp_Aggr is\n \n                if Nkind (Choice) = N_Range\n                  or else (Is_Entity_Name (Choice)\n-                   and then Is_Type (Entity (Choice)))\n+                           and then Is_Type (Entity (Choice)))\n                then\n                   Append_To (Deltas, Generate_Loop (Choice));\n \n@@ -6534,11 +6546,12 @@ package body Exp_Aggr is\n \n                else\n                   Append_To (Deltas,\n-                     Make_Assignment_Statement (Sloc (Choice),\n-                       Name => Make_Indexed_Component (Sloc (Choice),\n-                         Prefix => New_Occurrence_Of (Temp, Loc),\n-                         Expressions => New_List (New_Copy_Tree (Choice))),\n-                       Expression => New_Copy_Tree (Expression (Assoc))));\n+                    Make_Assignment_Statement (Sloc (Choice),\n+                      Name       =>\n+                        Make_Indexed_Component (Sloc (Choice),\n+                          Prefix      => New_Occurrence_Of (Temp, Loc),\n+                          Expressions => New_List (New_Copy_Tree (Choice))),\n+                      Expression => New_Copy_Tree (Expression (Assoc))));\n                end if;\n \n                Next (Choice);\n@@ -6569,11 +6582,12 @@ package body Exp_Aggr is\n          Choice := First (Choice_List (Assoc));\n          while Present (Choice) loop\n             Append_To (Deltas,\n-               Make_Assignment_Statement (Sloc (Choice),\n-                 Name => Make_Selected_Component (Sloc (Choice),\n-                   Prefix => New_Occurrence_Of (Temp, Loc),\n-                   Selector_Name => Make_Identifier (Loc, Chars (Choice))),\n-                 Expression => New_Copy_Tree (Expression (Assoc))));\n+              Make_Assignment_Statement (Sloc (Choice),\n+                Name       =>\n+                  Make_Selected_Component (Sloc (Choice),\n+                    Prefix        => New_Occurrence_Of (Temp, Loc),\n+                    Selector_Name => Make_Identifier (Loc, Chars (Choice))),\n+                Expression => New_Copy_Tree (Expression (Assoc))));\n             Next (Choice);\n          end loop;\n "}, {"sha": "e9f13319ed51505464a7c959f517245cc6f61194", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -2832,10 +2832,12 @@ package body Exp_Ch6 is\n          CW_Interface_Formals_Present :=\n            CW_Interface_Formals_Present\n              or else\n-               (Ekind (Etype (Formal)) = E_Class_Wide_Type\n+               (Is_Class_Wide_Type (Etype (Formal))\n                  and then Is_Interface (Etype (Etype (Formal))))\n              or else\n                (Ekind (Etype (Formal)) = E_Anonymous_Access_Type\n+                 and then Is_Class_Wide_Type (Directly_Designated_Type\n+                                               (Etype (Etype (Formal))))\n                  and then Is_Interface (Directly_Designated_Type\n                                          (Etype (Etype (Formal)))));\n "}, {"sha": "e3b859f1564ca2db242d454a77fed1d7f9547564", "filename": "gcc/ada/exp_strm.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexp_strm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexp_strm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.ads?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -111,10 +111,10 @@ package Exp_Strm is\n       Fnam           : out Entity_Id;\n       Use_Underlying : Boolean := True);\n    --  Build function for Input attribute for record type or for an elementary\n-   --  type (the latter is used only in the case where a user defined Read\n-   --  routine is defined, since in other cases, Input calls the appropriate\n-   --  runtime library routine directly. The flag Use_Underlying controls\n-   --  weither the base type or the underlying type of the base type of Typ is\n+   --  type (the latter is used only in the case where a user-defined Read\n+   --  routine is defined, since, in other cases, Input calls the appropriate\n+   --  runtime library routine directly). The flag Use_Underlying controls\n+   --  whether the base type or the underlying type of the base type of Typ is\n    --  used during construction.\n \n    procedure Build_Record_Or_Elementary_Output_Procedure"}, {"sha": "67a6c64a1d464ffc0c9eedd9e7c687044a4fa3b6", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -3783,8 +3783,8 @@ package body Exp_Util is\n          --  Nothing to be done if no underlying record view available\n \n          --  If this is a limited type derived from a type with unknown\n-         --  discriminants, do not expand either, so that subsequent\n-         --  expansion of the call can add build-in-place parameters to call.\n+         --  discriminants, do not expand either, so that subsequent expansion\n+         --  of the call can add build-in-place parameters to call.\n \n          if No (Underlying_Record_View (Unc_Type))\n            or else Is_Limited_Type (Unc_Type)"}, {"sha": "23dd91971565c8845c73aadb0f1e38ec0e04e17b", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -215,6 +215,9 @@ package body Expander is\n                when N_Delay_Until_Statement =>\n                   Expand_N_Delay_Until_Statement (N);\n \n+               when N_Delta_Aggregate =>\n+                  Expand_N_Delta_Aggregate (N);\n+\n                when N_Entry_Body =>\n                   Expand_N_Entry_Body (N);\n "}, {"sha": "a58006e6dcc15df1e33149dbbe19a9d4e0dc43a2", "filename": "gcc/ada/g-byorma.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fg-byorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fg-byorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-byorma.ads?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2006-2013, AdaCore                     --\n+--                     Copyright (C) 2006-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n --  This package provides a procedure for reading and interpreting the BOM\n --  (byte order mark) used to publish the encoding method for a string (for\n --  example, a UTF-8 encoded file in windows will start with the appropriate\n---  BOM sequence to signal UTF-8 encoding.\n+--  BOM sequence to signal UTF-8 encoding).\n \n --  There are two cases\n "}, {"sha": "65bd65c02295b028e7e07a182de9ca9c35ee382f", "filename": "gcc/ada/g-diopit.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fg-diopit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fg-diopit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-diopit.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2015, AdaCore                     --\n+--                     Copyright (C) 2001-2016, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -140,9 +140,9 @@ package body GNAT.Directory_Operations.Iteration is\n         (Directory      : String;\n          File_Pattern   : String;\n          Suffix_Pattern : String);\n-      --  Read entries in Directory and call user's callback if the entry\n-      --  match File_Pattern and Suffix_Pattern is empty otherwise it will go\n-      --  down one more directory level by calling Next_Level routine above.\n+      --  Read entries in Directory and call user's callback if the entry match\n+      --  File_Pattern and Suffix_Pattern is empty; otherwise go down one more\n+      --  directory level by calling Next_Level routine below.\n \n       procedure Next_Level\n         (Current_Path : String;"}, {"sha": "5c846645e9d00679730775bb3b063b68d43f11a3", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -1898,6 +1898,11 @@ package body Ch3 is\n                  (\"aspect specifications must come after initialization \"\n                   & \"expression\",\n                   Sloc (First (Aspect_Specifications (Decl_Node))));\n+\n+            else\n+               --  In any case, the assignment symbol doesn't belong.\n+\n+               Error_Msg (\"misplaced assignment symbol\", Scan_Ptr);\n             end if;\n \n             Set_Expression (Decl_Node, Init_Expr_Opt);"}, {"sha": "a1733d99bf1be49bf16708792a66d5b080345dd5", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1909,8 +1909,9 @@ package body Ch6 is\n \n             if Token = Tok_Do then\n                Push_Scope_Stack;\n-               Scope.Table (Scope.Last).Etyp := E_Return;\n                Scope.Table (Scope.Last).Ecol := Ret_Strt;\n+               Scope.Table (Scope.Last).Etyp := E_Return;\n+               Scope.Table (Scope.Last).Labl := Error;\n                Scope.Table (Scope.Last).Sloc := Ret_Sloc;\n \n                Scan; -- past DO"}, {"sha": "d3c069a04a9577461bdcfbc07d5a4870af290e7f", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -476,8 +476,8 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       --  subprogram specifications and bodies the field holds the correponding\n       --  program unit name. For task declarations and bodies, protected types\n       --  and bodies, and accept statements the field hold the name of the type\n-      --  or operation. For if-statements, case-statements, and selects, the\n-      --  field is initialized to Error.\n+      --  or operation. For if-statements, case-statements, return statements,\n+      --  and selects, the field is initialized to Error.\n \n       --  Note: this is a bit of an odd (mis)use of Error, since there is no\n       --  Error, but we use this value as a place holder to indicate that it"}, {"sha": "3747605a29eed04181016b93fefae25210d21ec9", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -1431,9 +1431,9 @@ package body Par_SCO is\n       --  Record first entries used in SC/SD at this recursive level\n \n       procedure Extend_Statement_Sequence (N : Node_Id; Typ : Character);\n-      --  Extend the current statement sequence to encompass the node N. Typ\n-      --  is the letter that identifies the type of statement/declaration that\n-      --  is being added to the sequence.\n+      --  Extend the current statement sequence to encompass the node N. Typ is\n+      --  the letter that identifies the type of statement/declaration that is\n+      --  being added to the sequence.\n \n       procedure Process_Decisions_Defer (N : Node_Id; T : Character);\n       pragma Inline (Process_Decisions_Defer);\n@@ -1461,8 +1461,8 @@ package body Par_SCO is\n       --  Helper for Traverse_One: traverse N's aspect specifications\n \n       procedure Traverse_Degenerate_Subprogram (N : Node_Id);\n-      --  Common code to handle null procedures and expression functions.\n-      --  Emit a SCO of the given Kind and N outside of the dominance flow.\n+      --  Common code to handle null procedures and expression functions. Emit\n+      --  a SCO of the given Kind and N outside of the dominance flow.\n \n       -------------------------------\n       -- Extend_Statement_Sequence --\n@@ -1745,9 +1745,9 @@ package body Par_SCO is\n             --  Save last statement in current sequence as dominant\n \n          begin\n-            --  Output statement SCO for degenerate subprogram body\n-            --  (null statement or freestanding expression) outside of\n-            --  the dominance chain.\n+            --  Output statement SCO for degenerate subprogram body (null\n+            --  statement or freestanding expression) outside of the dominance\n+            --  chain.\n \n             Current_Dominant := No_Dominant;\n             Extend_Statement_Sequence (N, Typ => ' ');\n@@ -1758,11 +1758,12 @@ package body Par_SCO is\n             if Nkind (N) in N_Subexpr then\n                Process_Decisions_Defer (N, 'X');\n             end if;\n+\n             Set_Statement_Entry;\n \n-            --  Restore current dominant information designating last\n-            --  statement in previous sequence (i.e. make the dominance\n-            --  chain skip over the degenerate body).\n+            --  Restore current dominant information designating last statement\n+            --  in previous sequence (i.e. make the dominance chain skip over\n+            --  the degenerate body).\n \n             Current_Dominant := Saved_Dominant;\n          end;\n@@ -1801,9 +1802,9 @@ package body Par_SCO is\n \n             --  Subprogram declaration or subprogram body stub\n \n-            when N_Subprogram_Body_Stub\n+            when N_Expression_Function\n+               | N_Subprogram_Body_Stub\n                | N_Subprogram_Declaration\n-               | N_Expression_Function\n             =>\n                declare\n                   Spec : constant Node_Id := Specification (N);\n@@ -1819,9 +1820,9 @@ package body Par_SCO is\n                   then\n                      Traverse_Degenerate_Subprogram (N);\n \n-                  --  Case of an expression function: generate a statement\n-                  --  SCO for the expression (and then decision SCOs for any\n-                  --  nested decisions).\n+                  --  Case of an expression function: generate a statement SCO\n+                  --  for the expression (and then decision SCOs for any nested\n+                  --  decisions).\n \n                   elsif Nkind (N) = N_Expression_Function then\n                      Traverse_Degenerate_Subprogram (Expression (N));"}, {"sha": "1eb168d95a8d00e9458675ccd2ccbfca47eb018d", "filename": "gcc/ada/s-boustr.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fs-boustr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fs-boustr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-boustr.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -83,6 +83,15 @@ package body System.Bounded_Strings is\n       Append (X, S (P - 1 .. S'Last));\n    end Append_Address;\n \n+   -------------\n+   -- Is_Full --\n+   -------------\n+\n+   function Is_Full (X : Bounded_String) return Boolean is\n+   begin\n+      return X.Length >= X.Max_Length;\n+   end Is_Full;\n+\n    ---------------\n    -- To_String --\n    ---------------"}, {"sha": "0cc2ccec8b4c87a3ebccfe5ad7d198fca17c0985", "filename": "gcc/ada/s-boustr.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fs-boustr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fs-boustr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-boustr.ads?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -48,6 +48,9 @@ package System.Bounded_Strings is\n    procedure Append_Address (X : in out Bounded_String; A : Address);\n    --  Append an address to X\n \n+   function Is_Full (X : Bounded_String) return Boolean;\n+   --  Return True iff X is full and any character or string will be dropped\n+   --  if appended.\n private\n    type Bounded_String (Max_Length : Natural) is limited record\n       Length : Natural := 0;"}, {"sha": "ee1809e2ec13c1041624cfa940ff5b10aff54243", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -270,6 +270,7 @@ package System.OS_Interface is\n    pragma Import (C, getpid, \"getpid\");\n \n    PR_SET_NAME : constant := 15;\n+   PR_GET_NAME : constant := 16;\n \n    function prctl\n      (option                 : int;"}, {"sha": "ad603d8e58d68627a3c00aa5c1e53134b98c8d30", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 44, "deletions": 3, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -755,14 +755,55 @@ package body System.Task_Primitives.Operations is\n       Self_ID.Common.LL.Thread := pthread_self;\n       Self_ID.Common.LL.LWP := lwp_self;\n \n-      if Self_ID.Common.Task_Image_Len > 0 then\n+      --  Set thread name to ease debugging. If the name of the task is\n+      --  \"foreign thread\" (as set by Register_Foreign_Thread) retrieve\n+      --  the name of the thread and update the name of the task instead.\n+\n+      if Self_ID.Common.Task_Image_Len = 14\n+        and then Self_ID.Common.Task_Image (1 .. 14) = \"foreign thread\"\n+      then\n+         declare\n+            Thread_Name : String (1 .. 16);\n+            --  PR_GET_NAME returns a string of up to 16 bytes\n+\n+            Len    : Natural := 0;\n+            --  Length of the task name contained in Task_Name\n+\n+            Result : int;\n+            --  Result from the prctl call\n+         begin\n+            Result := prctl (PR_GET_NAME, unsigned_long (Thread_Name'Address));\n+            pragma Assert (Result = 0);\n+\n+            --  Find the length of the given name\n+\n+            for J in Thread_Name'Range loop\n+               if Thread_Name (J) /= ASCII.NUL then\n+                  Len := Len + 1;\n+               else\n+                  exit;\n+               end if;\n+            end loop;\n+\n+            --  Cover the odd situtation if someone decides to change\n+            --  Parameters.Max_Task_Image_Length to less than 16 characters\n+\n+            if Len > Parameters.Max_Task_Image_Length then\n+               Len := Parameters.Max_Task_Image_Length;\n+            end if;\n+\n+            --  Copy the name of the thread to the task's ATCB\n+\n+            Self_ID.Common.Task_Image (1 .. Len) := Thread_Name (1 .. Len);\n+            Self_ID.Common.Task_Image_Len := Len;\n+         end;\n+\n+      elsif Self_ID.Common.Task_Image_Len > 0 then\n          declare\n             Task_Name : String (1 .. Parameters.Max_Task_Image_Length + 1);\n             Result    : int;\n \n          begin\n-            --  Set thread name to ease debugging\n-\n             Task_Name (1 .. Self_ID.Common.Task_Image_Len) :=\n               Self_ID.Common.Task_Image (1 .. Self_ID.Common.Task_Image_Len);\n             Task_Name (Self_ID.Common.Task_Image_Len + 1) := ASCII.NUL;"}, {"sha": "9b7c4903974b5dfd0a6f153d69740b7d5639078b", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -196,12 +196,12 @@ package body Sem is\n          when N_Delay_Relative_Statement =>\n             Analyze_Delay_Relative (N);\n \n-         when N_Delta_Aggregate =>\n-            Analyze_Aggregate (N);\n-\n          when N_Delay_Until_Statement =>\n             Analyze_Delay_Until (N);\n \n+         when N_Delta_Aggregate =>\n+            Analyze_Aggregate (N);\n+\n          when N_Entry_Body =>\n             Analyze_Entry_Body (N);\n "}, {"sha": "efa5d60b6aff80788a37da7e33097d94d7ff8686", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -2740,12 +2740,8 @@ package body Sem_Aggr is\n    -----------------------------\n \n    procedure Resolve_Delta_Aggregate (N : Node_Id; Typ : Entity_Id) is\n-      Base       : constant Node_Id   := Expression (N);\n-      Deltas     : constant List_Id   := Component_Associations (N);\n-      Assoc      : Node_Id;\n-      Choice     : Node_Id;\n-      Comp_Type  : Entity_Id;\n-      Index_Type : Entity_Id;\n+      Base   : constant Node_Id := Expression (N);\n+      Deltas : constant List_Id := Component_Associations (N);\n \n       function Get_Component_Type (Nam : Node_Id) return Entity_Id;\n \n@@ -2775,12 +2771,22 @@ package body Sem_Aggr is\n          return Any_Type;\n       end Get_Component_Type;\n \n+      --  Local variables\n+\n+      Assoc      : Node_Id;\n+      Choice     : Node_Id;\n+      Comp_Type  : Entity_Id;\n+      Index_Type : Entity_Id;\n+\n+   --  Start of processing for Resolve_Delta_Aggregate\n+\n    begin\n       if not Is_Composite_Type (Typ) then\n          Error_Msg_N (\"not a composite type\", N);\n       end if;\n \n       Analyze_And_Resolve (Base, Typ);\n+\n       if Is_Array_Type (Typ) then\n          Index_Type := Etype (First_Index (Typ));\n          Assoc := First (Deltas);\n@@ -2800,10 +2806,10 @@ package body Sem_Aggr is\n                end loop;\n \n                declare\n-                  Id  : constant Entity_Id  := Defining_Identifier (Assoc);\n-                  Ent : constant Entity_Id  :=\n-                    New_Internal_Entity\n-                      (E_Loop, Current_Scope, Sloc (Assoc), 'L');\n+                  Id  : constant Entity_Id := Defining_Identifier (Assoc);\n+                  Ent : constant Entity_Id :=\n+                          New_Internal_Entity\n+                            (E_Loop, Current_Scope, Sloc (Assoc), 'L');\n \n                begin\n                   Set_Etype  (Ent, Standard_Void_Type);\n@@ -2838,8 +2844,9 @@ package body Sem_Aggr is\n                         if Base_Type (Entity (Choice)) /=\n                            Base_Type (Index_Type)\n                         then\n-                           Error_Msg_NE (\"choice does mat match index type of\",\n-                             Choice, Typ);\n+                           Error_Msg_NE\n+                             (\"choice does mat match index type of\",\n+                              Choice, Typ);\n                         end if;\n                      else\n                         Resolve (Choice, Index_Type);"}, {"sha": "ef4206b9b30cc05cf203b7cf1c73b10c0fe14841", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9313a26a9ad02e45a1b75d9274f5025015356669/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=9313a26a9ad02e45a1b75d9274f5025015356669", "patch": "@@ -9287,28 +9287,29 @@ package body Sem_Ch4 is\n                Typ := Corresponding_Record_Type (Typ);\n             end if;\n \n-            --  Simple case. Object may be a subtype of the tagged type or\n-            --  may be the corresponding record of a synchronized type.\n+            --  Simple case. Object may be a subtype of the tagged type or may\n+            --  be the corresponding record of a synchronized type.\n \n             return Obj_Type = Typ\n               or else Base_Type (Obj_Type) = Typ\n               or else Corr_Type = Typ\n \n               --  Object may be of a derived type whose parent has unknown\n-              --  discriminants, in which case the type matches the\n-              --  underlying record view of its base.\n+              --  discriminants, in which case the type matches the underlying\n+              --  record view of its base.\n \n-              or else (Has_Unknown_Discriminants (Typ)\n-                and then Typ = Underlying_Record_View (Base_Type (Obj_Type)))\n+              or else\n+                (Has_Unknown_Discriminants (Typ)\n+                  and then Typ = Underlying_Record_View (Base_Type (Obj_Type)))\n \n                --  Prefix can be dereferenced\n \n               or else\n                 (Is_Access_Type (Corr_Type)\n                   and then Designated_Type (Corr_Type) = Typ)\n \n-               --  Formal is an access parameter, for which the object\n-               --  can provide an access.\n+               --  Formal is an access parameter, for which the object can\n+               --  provide an access.\n \n               or else\n                 (Ekind (Typ) = E_Anonymous_Access_Type"}]}