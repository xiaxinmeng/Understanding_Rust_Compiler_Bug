{"sha": "755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU1ZTUyOGY5NjllMGY5ZWY5MDYxNDc5ZTBlZDJiMTNiY2YwZjlmMg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-05-07T22:14:27Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-05-07T22:14:27Z"}, "message": "re PR c/64918 (invalid (?) warning when initializing structure)\n\n\tPR c/64918\n\t* c.opt (Woverride-init-side-effects): New option.\n\n\t* c-typeck.c (add_pending_init): Use OPT_Woverride_init_side_effects.\n\t(output_init_element): Likewise.\n\n\t* doc/invoke.texi: Document -Woverride-init-side-effects.\n\n\t* gcc.dg/Woverride-init-side-effects-1.c: New test.\n\t* gcc.dg/Woverride-init-side-effects-2.c: New test.\n\nFrom-SVN: r222894", "tree": {"sha": "a4a9c2c021afac07acf40e5d31b847542a1e7816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4a9c2c021afac07acf40e5d31b847542a1e7816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0173bd2a038cbeef871b22b312a6856ab1dcda2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0173bd2a038cbeef871b22b312a6856ab1dcda2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0173bd2a038cbeef871b22b312a6856ab1dcda2a"}], "stats": {"total": 90, "additions": 87, "deletions": 3}, "files": [{"sha": "d38918de3a7141e1846a3fb8eaf7d3fd024fd981", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -1,3 +1,8 @@\n+2015-05-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/64918\n+\t* doc/invoke.texi: Document -Woverride-init-side-effects.\n+\n 2015-05-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65179"}, {"sha": "57f83c977004282ce9b1b75f51bd56ef1c0e75d6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -1,3 +1,8 @@\n+2015-05-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/64918\n+\t* c.opt (Woverride-init-side-effects): New option.\n+\n 2015-05-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65179"}, {"sha": "3774a89088b3a7816d064f1848ef2bf65649ca87", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -709,6 +709,10 @@ Woverride-init\n C ObjC Var(warn_override_init) Warning EnabledBy(Wextra)\n Warn about overriding initializers without side effects\n \n+Woverride-init-side-effects\n+C ObjC Var(warn_override_init_side_effects) Init(1) Warning\n+Warn about overriding initializers with side effects\n+\n Wpacked-bitfield-compat\n C ObjC C++ ObjC++ Var(warn_packed_bitfield_compat) Init(-1) Warning\n Warn about packed bit-fields whose offset changed in GCC 4.4"}, {"sha": "3b8f491ff841837c5c20c318b358b1f5d4bd5715", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -1,3 +1,9 @@\n+2015-05-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/64918\n+\t* c-typeck.c (add_pending_init): Use OPT_Woverride_init_side_effects.\n+\t(output_init_element): Likewise.\n+\n 2015-05-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65179"}, {"sha": "3fcb7c2c5e7d67766a0b8a5999c0a0ba87e7bb92", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -7968,7 +7968,7 @@ add_pending_init (location_t loc, tree purpose, tree value, tree origtype,\n \t      if (!implicit)\n \t\t{\n \t\t  if (TREE_SIDE_EFFECTS (p->value))\n-\t\t    warning_init (loc, 0,\n+\t\t    warning_init (loc, OPT_Woverride_init_side_effects,\n \t\t\t\t  \"initialized field with side-effects \"\n \t\t\t\t  \"overwritten\");\n \t\t  else if (warn_override_init)\n@@ -7998,7 +7998,7 @@ add_pending_init (location_t loc, tree purpose, tree value, tree origtype,\n \t      if (!implicit)\n \t\t{\n \t\t  if (TREE_SIDE_EFFECTS (p->value))\n-\t\t    warning_init (loc, 0,\n+\t\t    warning_init (loc, OPT_Woverride_init_side_effects,\n \t\t\t\t  \"initialized field with side-effects \"\n \t\t\t\t  \"overwritten\");\n \t\t  else if (warn_override_init)\n@@ -8530,7 +8530,7 @@ output_init_element (location_t loc, tree value, tree origtype,\n       if (!implicit)\n \t{\n \t  if (TREE_SIDE_EFFECTS (constructor_elements->last ().value))\n-\t    warning_init (loc, 0,\n+\t    warning_init (loc, OPT_Woverride_init_side_effects,\n \t\t\t  \"initialized field with side-effects overwritten\");\n \t  else if (warn_override_init)\n \t    warning_init (loc, OPT_Woverride_init,"}, {"sha": "cb5ae17311b9ccb0942a90e6b83b9da4d9d738d3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -266,6 +266,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wmissing-field-initializers -Wmissing-include-dirs @gol\n -Wno-multichar  -Wnonnull  -Wnormalized=@r{[}none@r{|}id@r{|}nfc@r{|}nfkc@r{]} @gol\n -Wodr  -Wno-overflow  -Wopenmp-simd @gol\n+-Woverride-init-side-effects @gol\n -Woverlength-strings  -Wpacked  -Wpacked-bitfield-compat  -Wpadded @gol\n -Wparentheses  -Wpedantic-ms-format -Wno-pedantic-ms-format @gol\n -Wpointer-arith  -Wno-pointer-to-int-cast @gol\n@@ -5197,6 +5198,13 @@ This warning is included in @option{-Wextra}.  To get other\n @option{-Wextra} warnings without this one, use @option{-Wextra\n -Wno-override-init}.\n \n+@item -Woverride-init-side-effects @r{(C and Objective-C only)}\n+@opindex Woverride-init-side-effects\n+@opindex Wno-override-init-side-effects\n+Warn if an initialized field with side effects is overridden when\n+using designated initializers (@pxref{Designated Inits, , Designated\n+Initializers}).  This warning is enabled by default.\n+\n @item -Wpacked\n @opindex Wpacked\n @opindex Wno-packed"}, {"sha": "79b2aa262f21ece1be2ba1b1cce2c5b6b2360b4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -1,3 +1,9 @@\n+2015-05-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/64918\n+\t* gcc.dg/Woverride-init-side-effects-1.c: New test.\n+\t* gcc.dg/Woverride-init-side-effects-2.c: New test.\n+\n 2015-05-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65179"}, {"sha": "50f198d7fa0750c5450ed17238ca64068f91557e", "filename": "gcc/testsuite/gcc.dg/Woverride-init-side-effects-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Ftestsuite%2Fgcc.dg%2FWoverride-init-side-effects-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Ftestsuite%2Fgcc.dg%2FWoverride-init-side-effects-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWoverride-init-side-effects-1.c?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -0,0 +1,25 @@\n+/* PR c/64918 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct S { int m, n; };\n+union U { short s; long int l; };\n+\n+void\n+foo (int i)\n+{\n+  int a[] = {\n+    [0] = ++i,\n+    [1] = i,\n+    [0] = 42\t/* { dg-warning \"initialized field with side-effects overwritten\" } */\n+  };\n+  struct S s = {\n+    .n = ++i,\n+    .m = i,\n+    .n = i\t/* { dg-warning \"initialized field with side-effects overwritten\" } */\n+  };\n+  union U u = {\n+    .s = i--,\n+    .l = 42\t/* { dg-warning \"initialized field with side-effects overwritten\" } */\n+  };\n+}"}, {"sha": "5927189f00b378c25c1ea46a16e7e935084eaa14", "filename": "gcc/testsuite/gcc.dg/Woverride-init-side-effects-2.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Ftestsuite%2Fgcc.dg%2FWoverride-init-side-effects-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/755e528f969e0f9ef9061479e0ed2b13bcf0f9f2/gcc%2Ftestsuite%2Fgcc.dg%2FWoverride-init-side-effects-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWoverride-init-side-effects-2.c?ref=755e528f969e0f9ef9061479e0ed2b13bcf0f9f2", "patch": "@@ -0,0 +1,25 @@\n+/* PR c/64918 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-override-init-side-effects\" } */\n+\n+struct S { int m, n; };\n+union U { short s; long int l; };\n+\n+void\n+foo (int i)\n+{\n+  int a[] = {\n+    [0] = ++i,\n+    [1] = i,\n+    [0] = 42\n+  };\n+  struct S s = {\n+    .n = ++i,\n+    .m = i,\n+    .n = i\n+  };\n+  union U u = {\n+    .s = i--,\n+    .l = 42\n+  };\n+}"}]}