{"sha": "66d83eeea9a150217ce3e5ed4fd30aff8a063716", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZkODNlZWVhOWExNTAyMTdjZTNlNWVkNGZkMzBhZmY4YTA2MzcxNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-23T22:55:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-23T22:55:56Z"}, "message": "re PR c++/49105 ([C++0x][SFINAE] ICE during list-initialization of rvalue-references to const)\n\n\tPR c++/49105\n\t* typeck.c (build_const_cast_1): Handle rvalue references.\n\nFrom-SVN: r174092", "tree": {"sha": "980bef33f0fd5e2e075d46ce522f0798c192c441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/980bef33f0fd5e2e075d46ce522f0798c192c441"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66d83eeea9a150217ce3e5ed4fd30aff8a063716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d83eeea9a150217ce3e5ed4fd30aff8a063716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66d83eeea9a150217ce3e5ed4fd30aff8a063716", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d83eeea9a150217ce3e5ed4fd30aff8a063716/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "828fb3ba9958f3117680efb9ade199fc7e98f462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828fb3ba9958f3117680efb9ade199fc7e98f462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/828fb3ba9958f3117680efb9ade199fc7e98f462"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "2a4ffe09cd88e1df6fa7e50715096627db27c768", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d83eeea9a150217ce3e5ed4fd30aff8a063716/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d83eeea9a150217ce3e5ed4fd30aff8a063716/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=66d83eeea9a150217ce3e5ed4fd30aff8a063716", "patch": "@@ -1,5 +1,8 @@\n 2011-05-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49105\n+\t* typeck.c (build_const_cast_1): Handle rvalue references.\n+\n \tPR c++/47263\n \t* decl.c (use_eh_spec_block): Do use an EH spec block for a\n \tlambda op()."}, {"sha": "13b919ca37ffe25c99c0ca7c00360d4665a51e7b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d83eeea9a150217ce3e5ed4fd30aff8a063716/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d83eeea9a150217ce3e5ed4fd30aff8a063716/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=66d83eeea9a150217ce3e5ed4fd30aff8a063716", "patch": "@@ -6241,14 +6241,29 @@ build_const_cast_1 (tree dst_type, tree expr, tsubst_flags_t complain,\n \n   /* [expr.const.cast]\n \n-     An lvalue of type T1 can be explicitly converted to an lvalue of\n-     type T2 using the cast const_cast<T2&> (where T1 and T2 are object\n-     types) if a pointer to T1 can be explicitly converted to the type\n-     pointer to T2 using a const_cast.  */\n+     For two object types T1 and T2, if a pointer to T1 can be explicitly\n+     converted to the type \"pointer to T2\" using a const_cast, then the\n+     following conversions can also be made:\n+\n+     -- an lvalue of type T1 can be explicitly converted to an lvalue of\n+     type T2 using the cast const_cast<T2&>;\n+\n+     -- a glvalue of type T1 can be explicitly converted to an xvalue of\n+     type T2 using the cast const_cast<T2&&>; and\n+\n+     -- if T1 is a class type, a prvalue of type T1 can be explicitly\n+     converted to an xvalue of type T2 using the cast const_cast<T2&&>.  */\n+\n   if (TREE_CODE (dst_type) == REFERENCE_TYPE)\n     {\n       reference_type = dst_type;\n-      if (! real_lvalue_p (expr))\n+      if (!TYPE_REF_IS_RVALUE (dst_type)\n+\t  ? real_lvalue_p (expr)\n+\t  : (CLASS_TYPE_P (TREE_TYPE (dst_type))\n+\t     ? lvalue_p (expr)\n+\t     : lvalue_or_rvalue_with_address_p (expr)))\n+\t/* OK.  */;\n+      else\n \t{\n \t  if (complain & tf_error)\n \t    error (\"invalid const_cast of an rvalue of type %qT to type %qT\","}, {"sha": "ea4466c54edb7c74900d9fbbc3fbe26b9f637ead", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d83eeea9a150217ce3e5ed4fd30aff8a063716/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d83eeea9a150217ce3e5ed4fd30aff8a063716/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66d83eeea9a150217ce3e5ed4fd30aff8a063716", "patch": "@@ -1,5 +1,7 @@\n 2011-05-23  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/rv-cast2.C: New.\n+\n \t* g++.dg/cpp0x/enum14.C: New.\n \n 2011-05-23  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "94ee4ca849e26af4596aa73fb2268de660489ed6", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-cast2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d83eeea9a150217ce3e5ed4fd30aff8a063716/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d83eeea9a150217ce3e5ed4fd30aff8a063716/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast2.C?ref=66d83eeea9a150217ce3e5ed4fd30aff8a063716", "patch": "@@ -0,0 +1,21 @@\n+// Test for const_cast to reference (5.2.11/4).\n+// { dg-options -std=c++0x }\n+\n+template <class T> T&& xval();\n+template <class T> T& lval();\n+template <class T> T prval();\n+\n+struct A { };\n+\n+int main()\n+{\n+  const_cast<int&>(lval<int>());\n+  const_cast<int&>(xval<int>());   // { dg-error \"\" }\n+  const_cast<int&>(prval<int>());  // { dg-error \"\" }\n+  const_cast<int&&>(lval<int>());\n+  const_cast<int&&>(xval<int>());\n+  const_cast<int&&>(prval<int>()); // { dg-error \"\" }\n+  const_cast<A&&>(lval<A>());\n+  const_cast<A&&>(xval<A>());\n+  const_cast<A&&>(prval<A>());\n+}"}]}