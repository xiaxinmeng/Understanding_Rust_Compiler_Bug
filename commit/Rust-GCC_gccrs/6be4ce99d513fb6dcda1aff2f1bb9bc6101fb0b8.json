{"sha": "6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJlNGNlOTlkNTEzZmI2ZGNkYTFhZmYyZjFiYjliYzYxMDFmYjBiOA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-03-25T13:33:53Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-03-25T17:37:14Z"}, "message": "Add missing location info into TypePath\n\nThis improves errors messages with the source location info for the error.", "tree": {"sha": "4e462320e7803956a5197b3c053e54014fb9d28d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e462320e7803956a5197b3c053e54014fb9d28d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08b49a3e526b7991802323c54eca5e810abb500a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b49a3e526b7991802323c54eca5e810abb500a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08b49a3e526b7991802323c54eca5e810abb500a"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "86b8d94c2dc3553aaf4c1b04113a169e2556b872", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=6be4ce99d513fb6dcda1aff2f1bb9bc6101fb0b8", "patch": "@@ -6126,6 +6126,7 @@ AST::TypePath\n Parser<ManagedTokenSource>::parse_type_path ()\n {\n   bool has_opening_scope_resolution = false;\n+  Location locus = lexer.peek_token ()->get_locus ();\n   if (lexer.peek_token ()->get_id () == SCOPE_RESOLUTION)\n     {\n       has_opening_scope_resolution = true;\n@@ -6172,7 +6173,7 @@ Parser<ManagedTokenSource>::parse_type_path ()\n \n   segments.shrink_to_fit ();\n \n-  return AST::TypePath (std::move (segments), Linemap::unknown_location (),\n+  return AST::TypePath (std::move (segments), locus,\n \t\t\thas_opening_scope_resolution);\n }\n "}]}