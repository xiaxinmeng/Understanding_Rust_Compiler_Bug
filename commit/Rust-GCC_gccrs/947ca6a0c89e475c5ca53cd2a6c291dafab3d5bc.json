{"sha": "947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ3Y2E2YTBjODllNDc1YzVjYTUzY2QyYTZjMjkxZGFmYWIzZDViYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-06-05T09:53:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-06-05T09:53:19Z"}, "message": "gimplify.c (create_tmp_from_val): Remove is_formal parameter and set DECL_GIMPLE_REG_P unconditionally if appropriate.\n\n2014-06-05  Richard Biener  <rguenther@suse.de>\n\n\t* gimplify.c (create_tmp_from_val): Remove is_formal parameter\n\tand set DECL_GIMPLE_REG_P unconditionally if appropriate.\n\t(lookup_tmp_var): Adjust.\n\t(prepare_gimple_addressable): Unset DECL_GIMPLE_REG_P here.\n\nFrom-SVN: r211262", "tree": {"sha": "72a3bb0ab4a36d92cdef313a2eb27b8007f924cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72a3bb0ab4a36d92cdef313a2eb27b8007f924cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ffcdea85552836f18e4a7473fa1cea31feb3944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ffcdea85552836f18e4a7473fa1cea31feb3944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ffcdea85552836f18e4a7473fa1cea31feb3944"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "3366197ff5d451779376d63ed9dd8b5d6618a5b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc", "patch": "@@ -1,3 +1,10 @@\n+2014-06-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimplify.c (create_tmp_from_val): Remove is_formal parameter\n+\tand set DECL_GIMPLE_REG_P unconditionally if appropriate.\n+\t(lookup_tmp_var): Adjust.\n+\t(prepare_gimple_addressable): Unset DECL_GIMPLE_REG_P here.\n+\n 2014-06-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* config/arm/arm.md (enabled): Disable opt_enabled attribute."}, {"sha": "1635b96cd690fbe2b5d11ebc3fc65ff0d0e61d8d", "filename": "gcc/gimplify.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=947ca6a0c89e475c5ca53cd2a6c291dafab3d5bc", "patch": "@@ -451,14 +451,13 @@ is_gimple_mem_rhs_or_call (tree t)\n    lookup_tmp_var; nobody else should call this function.  */\n \n static inline tree\n-create_tmp_from_val (tree val, bool is_formal)\n+create_tmp_from_val (tree val)\n {\n   /* Drop all qualifiers and address-space information from the value type.  */\n   tree type = TYPE_MAIN_VARIANT (TREE_TYPE (val));\n   tree var = create_tmp_var (type, get_name (val));\n-  if (is_formal\n-      && (TREE_CODE (TREE_TYPE (var)) == COMPLEX_TYPE\n-\t  || TREE_CODE (TREE_TYPE (var)) == VECTOR_TYPE))\n+  if (TREE_CODE (TREE_TYPE (var)) == COMPLEX_TYPE\n+      || TREE_CODE (TREE_TYPE (var)) == VECTOR_TYPE)\n     DECL_GIMPLE_REG_P (var) = 1;\n   return var;\n }\n@@ -477,7 +476,7 @@ lookup_tmp_var (tree val, bool is_formal)\n      work in reload and final and poorer code generation, outweighing\n      the extra memory allocation here.  */\n   if (!optimize || !is_formal || TREE_SIDE_EFFECTS (val))\n-    ret = create_tmp_from_val (val, is_formal);\n+    ret = create_tmp_from_val (val);\n   else\n     {\n       elt_t elt, *elt_p;\n@@ -491,7 +490,7 @@ lookup_tmp_var (tree val, bool is_formal)\n \t{\n \t  elt_p = XNEW (elt_t);\n \t  elt_p->val = val;\n-\t  elt_p->temp = ret = create_tmp_from_val (val, is_formal);\n+\t  elt_p->temp = ret = create_tmp_from_val (val);\n \t  *slot = elt_p;\n \t}\n       else\n@@ -3154,7 +3153,11 @@ prepare_gimple_addressable (tree *expr_p, gimple_seq *seq_p)\n   while (handled_component_p (*expr_p))\n     expr_p = &TREE_OPERAND (*expr_p, 0);\n   if (is_gimple_reg (*expr_p))\n-    *expr_p = get_initialized_tmp_var (*expr_p, seq_p, NULL);\n+    {\n+      tree var = get_initialized_tmp_var (*expr_p, seq_p, NULL);\n+      DECL_GIMPLE_REG_P (var) = 0;\n+      *expr_p = var;\n+    }\n }\n \n /* A subroutine of gimplify_modify_expr.  Replace a MODIFY_EXPR with"}]}