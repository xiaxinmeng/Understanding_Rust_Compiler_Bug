{"sha": "ad7bac31307f16060dbb7ce4a36d44698ca2be76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ3YmFjMzEzMDdmMTYwNjBkYmI3Y2U0YTM2ZDQ0Njk4Y2EyYmU3Ng==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2012-11-09T15:24:25Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2012-11-09T15:24:25Z"}, "message": "Handle target specific memory models in C frontend\n\nget_atomic_generic_size would error out for\n__atomic_store(...,__ATOMIC_HLE_RELEASE)\n\nJust mask it out. All the memory orders are checked completely\nin builtins.c anyways.\n\nI'm not sure what that check is for, it could be removed in theory.\n\nPassed bootstrap and test suite on x86-64\n\ngcc/c-family/:\n2012-11-09  Andi Kleen  <ak@linux.intel.com>\n\n\tPR 55139\n\t* c-common.c (get_atomic_generic_size): Mask with\n        MEMMODEL_MASK\n\nFrom-SVN: r193363", "tree": {"sha": "7eb028a1a6f1da03283226a754c2f33692bf6666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb028a1a6f1da03283226a754c2f33692bf6666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad7bac31307f16060dbb7ce4a36d44698ca2be76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7bac31307f16060dbb7ce4a36d44698ca2be76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7bac31307f16060dbb7ce4a36d44698ca2be76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7bac31307f16060dbb7ce4a36d44698ca2be76/comments", "author": null, "committer": null, "parents": [{"sha": "962e3ae2aa51b4e2024c6fc3b9bf0ade8c64de7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962e3ae2aa51b4e2024c6fc3b9bf0ade8c64de7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/962e3ae2aa51b4e2024c6fc3b9bf0ade8c64de7d"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "20ef315ea7443c60609dcc5114b96bb5ddf3b4df", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7bac31307f16060dbb7ce4a36d44698ca2be76/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7bac31307f16060dbb7ce4a36d44698ca2be76/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ad7bac31307f16060dbb7ce4a36d44698ca2be76", "patch": "@@ -1,3 +1,9 @@\n+2012-11-09  Andi Kleen  <ak@linux.intel.com>\n+\n+\tPR 55139\n+\t* c-common.c (get_atomic_generic_size): Mask with\n+        MEMMODEL_MASK\n+\n 2012-11-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c/53063"}, {"sha": "7828d210507620bcce5eaf357c7ac364061531cb", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7bac31307f16060dbb7ce4a36d44698ca2be76/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7bac31307f16060dbb7ce4a36d44698ca2be76/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=ad7bac31307f16060dbb7ce4a36d44698ca2be76", "patch": "@@ -10097,7 +10097,7 @@ get_atomic_generic_size (location_t loc, tree function, VEC(tree,gc) *params)\n       if (TREE_CODE (p) == INTEGER_CST)\n         {\n \t  int i = tree_low_cst (p, 1);\n-\t  if (i < 0 || i >= MEMMODEL_LAST)\n+\t  if (i < 0 || (i & MEMMODEL_MASK) >= MEMMODEL_LAST)\n \t    {\n \t      warning_at (loc, OPT_Winvalid_memory_model,\n \t\t\t  \"invalid memory model argument %d of %qE\", x + 1,"}]}