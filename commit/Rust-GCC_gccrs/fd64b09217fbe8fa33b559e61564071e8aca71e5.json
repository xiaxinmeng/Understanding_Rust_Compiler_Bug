{"sha": "fd64b09217fbe8fa33b559e61564071e8aca71e5", "node_id": "C_kwDOANBUbNoAKGZkNjRiMDkyMTdmYmU4ZmEzM2I1NTllNjE1NjQwNzFlOGFjYTcxZTU", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-10T10:26:16Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-11T07:43:14Z"}, "message": "[nvptx] Handle asm insn in prevent_branch_around_nothing\n\nWith GOMP_NVPTX_JIT=-00 and -mptx=3.1, I run into:\n...\nFAIL: libgomp.oacc-c/../libgomp.oacc-c-c++-common/acc_prof-version-1.c \\\n  -DACC_DEVICE_TYPE_nvidia=1 -DACC_MEM_SHARED=0 -foffload=nvptx-none  -O2 \\\n  execution test\n...\n\nThe problem is that we're generating a diverging branch around nothing:\n...\n        {\n                .reg.u32        %x;\n                mov.u32 %x, %tid.x;\n                setp.ne.u32     %r23, %x, 0;\n        }\n        @%r23   bra     $L2;\n$L2:\n...\nwhich the driver JIT has problems with at -O0, so consequently we run into the\nnvptx_uniform_warp_check.\n\nFix this by handling asm (\"\") and alike in prevent_branch_around_nothing.\n\nTested on x86_64 with nvptx accelerator.\n\ngcc/ChangeLog:\n\n2022-02-10  Tom de Vries  <tdevries@suse.de>\n\n\tPR target/104456\n\t* config/nvptx/nvptx.cc (prevent_branch_around_nothing): Handle asm\n\tinsn.", "tree": {"sha": "a73ba9f38e02cfbb6485b12afa071ed1738b3c67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a73ba9f38e02cfbb6485b12afa071ed1738b3c67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd64b09217fbe8fa33b559e61564071e8aca71e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd64b09217fbe8fa33b559e61564071e8aca71e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd64b09217fbe8fa33b559e61564071e8aca71e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd64b09217fbe8fa33b559e61564071e8aca71e5/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a645583d4d68eecdd9101e1013e7bf01907ea786", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a645583d4d68eecdd9101e1013e7bf01907ea786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a645583d4d68eecdd9101e1013e7bf01907ea786"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "afbad5bdde639510f178c5dd514c07e40cd9d0ea", "filename": "gcc/config/nvptx/nvptx.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd64b09217fbe8fa33b559e61564071e8aca71e5/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd64b09217fbe8fa33b559e61564071e8aca71e5/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc?ref=fd64b09217fbe8fa33b559e61564071e8aca71e5", "patch": "@@ -5257,6 +5257,14 @@ prevent_branch_around_nothing (void)\n \t    case CODE_FOR_nvptx_join:\n \t    case CODE_FOR_nop:\n \t      continue;\n+\t    case -1:\n+\t      /* Handle asm (\"\") and similar.  */\n+\t      if (GET_CODE (PATTERN (insn)) == ASM_INPUT\n+\t\t  || GET_CODE (PATTERN (insn)) == ASM_OPERANDS\n+\t\t  || (GET_CODE (PATTERN (insn)) == PARALLEL\n+\t\t      && asm_noperands (PATTERN (insn)) >= 0))\n+\t\tcontinue;\n+\t      /* FALLTHROUGH.  */\n \t    default:\n \t      seen_label = NULL;\n \t      continue;"}]}