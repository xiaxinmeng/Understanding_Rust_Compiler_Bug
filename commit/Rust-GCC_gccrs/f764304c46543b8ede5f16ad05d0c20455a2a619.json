{"sha": "f764304c46543b8ede5f16ad05d0c20455a2a619", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc2NDMwNGM0NjU0M2I4ZWRlNWYxNmFkMDVkMGMyMDQ1NWEyYTYxOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-09-29T10:42:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-09-29T10:42:16Z"}, "message": "typeck.c (enum_cast_to_int): Use CONVERT_EXPR_P to check for conversions.\n\n2014-09-29  Richard Biener  <rguenther@suse.de>\n\n\tcp/\n\t* typeck.c (enum_cast_to_int): Use CONVERT_EXPR_P to check\n\tfor conversions.\n\nFrom-SVN: r215681", "tree": {"sha": "323f8f1c431d290d01eb39872636ac0cb54bd2fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/323f8f1c431d290d01eb39872636ac0cb54bd2fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f764304c46543b8ede5f16ad05d0c20455a2a619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f764304c46543b8ede5f16ad05d0c20455a2a619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f764304c46543b8ede5f16ad05d0c20455a2a619", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f764304c46543b8ede5f16ad05d0c20455a2a619/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1d6f494666f6fb9ee061d21a1a190e45c2ea83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d6f494666f6fb9ee061d21a1a190e45c2ea83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1d6f494666f6fb9ee061d21a1a190e45c2ea83c"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "0beb9974521c3081992746b24d17a56a8ab9a4d7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f764304c46543b8ede5f16ad05d0c20455a2a619/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f764304c46543b8ede5f16ad05d0c20455a2a619/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f764304c46543b8ede5f16ad05d0c20455a2a619", "patch": "@@ -1,3 +1,8 @@\n+2014-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* typeck.c (enum_cast_to_int): Use CONVERT_EXPR_P to check\n+\tfor conversions.\n+\n 2014-09-26  Jason Merrill  <jason@redhat.com>\n \n \t* mangle.c (find_substitution): Use write_abi_tags."}, {"sha": "61d52bdb8332a6c70a9110f3f98c5c17e7d2af23", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f764304c46543b8ede5f16ad05d0c20455a2a619/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f764304c46543b8ede5f16ad05d0c20455a2a619/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f764304c46543b8ede5f16ad05d0c20455a2a619", "patch": "@@ -3835,7 +3835,7 @@ build_x_array_ref (location_t loc, tree arg1, tree arg2,\n static bool\n enum_cast_to_int (tree op)\n {\n-  if (TREE_CODE (op) == NOP_EXPR\n+  if (CONVERT_EXPR_P (op)\n       && TREE_TYPE (op) == integer_type_node\n       && TREE_CODE (TREE_TYPE (TREE_OPERAND (op, 0))) == ENUMERAL_TYPE\n       && TYPE_UNSIGNED (TREE_TYPE (TREE_OPERAND (op, 0))))"}]}