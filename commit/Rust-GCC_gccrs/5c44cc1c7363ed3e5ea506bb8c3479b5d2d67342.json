{"sha": "5c44cc1c7363ed3e5ea506bb8c3479b5d2d67342", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM0NGNjMWM3MzYzZWQzZTVlYTUwNmJiOGMzNDc5YjVkMmQ2NzM0Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-02-23T11:50:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-16T08:42:59Z"}, "message": "[Ada] Do not perform useless work in Check_No_Parts_Violations\n\ngcc/ada/\n\n\t* freeze.adb (Check_No_Parts_Violations): Return earlier if the\n\ttype is elementary or does not come from source.", "tree": {"sha": "27febf2c2748f7ff43edd63d3ad41329d22470a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27febf2c2748f7ff43edd63d3ad41329d22470a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c44cc1c7363ed3e5ea506bb8c3479b5d2d67342", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c44cc1c7363ed3e5ea506bb8c3479b5d2d67342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c44cc1c7363ed3e5ea506bb8c3479b5d2d67342", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c44cc1c7363ed3e5ea506bb8c3479b5d2d67342/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ac6fcf57c55ec2cac914b64d5d56a341a5aa4f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac6fcf57c55ec2cac914b64d5d56a341a5aa4f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac6fcf57c55ec2cac914b64d5d56a341a5aa4f0"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "fd8216969a7274cd794f42325bfec06c1e6bf69b", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c44cc1c7363ed3e5ea506bb8c3479b5d2d67342/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c44cc1c7363ed3e5ea506bb8c3479b5d2d67342/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=5c44cc1c7363ed3e5ea506bb8c3479b5d2d67342", "patch": "@@ -2584,27 +2584,30 @@ package body Freeze is\n \n          --  Local declarations\n \n-         Types_With_Aspect : Elist_Id :=\n-           Get_Types_With_Aspect_In_Hierarchy (Typ);\n-\n-         Aspect_Value     : Entity_Id;\n-         Curr_Value       : Entity_Id;\n-         Curr_Typ_Elmt    : Elmt_Id;\n-         Curr_Body_Elmt   : Elmt_Id;\n-         Curr_Formal_Elmt : Elmt_Id;\n-         Gen_Bodies       : Elist_Id;\n-         Gen_Formals      : Elist_Id;\n-         Scop             : Entity_Id;\n+         Aspect_Value      : Entity_Id;\n+         Curr_Value        : Entity_Id;\n+         Curr_Typ_Elmt     : Elmt_Id;\n+         Curr_Body_Elmt    : Elmt_Id;\n+         Curr_Formal_Elmt  : Elmt_Id;\n+         Gen_Bodies        : Elist_Id;\n+         Gen_Formals       : Elist_Id;\n+         Scop              : Entity_Id;\n+         Types_With_Aspect : Elist_Id;\n \n       --  Start of processing for Check_No_Parts_Violations\n \n       begin\n-         --  There are no types with No_Parts specified, so there\n-         --  is nothing to check.\n+         --  Nothing to check if the type is elementary or artificial\n \n-         if Is_Empty_Elmt_List (Types_With_Aspect)\n-           or else not Comes_From_Source (Typ)\n-         then\n+         if Is_Elementary_Type (Typ) or else not Comes_From_Source (Typ) then\n+            return;\n+         end if;\n+\n+         Types_With_Aspect := Get_Types_With_Aspect_In_Hierarchy (Typ);\n+\n+         --  Nothing to check if there are no types with No_Parts specified\n+\n+         if Is_Empty_Elmt_List (Types_With_Aspect) then\n             return;\n          end if;\n "}]}