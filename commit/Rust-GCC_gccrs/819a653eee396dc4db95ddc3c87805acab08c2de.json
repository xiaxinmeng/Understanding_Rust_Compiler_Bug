{"sha": "819a653eee396dc4db95ddc3c87805acab08c2de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5YTY1M2VlZTM5NmRjNGRiOTVkZGMzYzg3ODA1YWNhYjA4YzJkZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-09-11T18:56:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-09-11T18:56:40Z"}, "message": "decl.c (maybe_pad_type): Do not try to change the form of an addressable type.\n\n\t* gcc-interface/decl.c (maybe_pad_type): Do not try to change the form\n\tof an addressable type.\n\t* gcc-interface/trans.c (gnat_gimplify_expr) <VIEW_CONVERT_EXPR>: New.\n\tDeal with those cases for which creating a temporary is mandatory.\n\nFrom-SVN: r178764", "tree": {"sha": "516e2c4887e847582eb84e0f887fc435be474f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/516e2c4887e847582eb84e0f887fc435be474f8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/819a653eee396dc4db95ddc3c87805acab08c2de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819a653eee396dc4db95ddc3c87805acab08c2de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819a653eee396dc4db95ddc3c87805acab08c2de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819a653eee396dc4db95ddc3c87805acab08c2de/comments", "author": null, "committer": null, "parents": [{"sha": "c946adde12fa27f4572f3b23917b143e1767e475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c946adde12fa27f4572f3b23917b143e1767e475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c946adde12fa27f4572f3b23917b143e1767e475"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "d9095295b29a1f996285067d8a637822c59e054a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=819a653eee396dc4db95ddc3c87805acab08c2de", "patch": "@@ -1,3 +1,10 @@\n+2011-09-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (maybe_pad_type): Do not try to change the form\n+\tof an addressable type.\n+\t* gcc-interface/trans.c (gnat_gimplify_expr) <VIEW_CONVERT_EXPR>: New.\n+\tDeal with those cases for which creating a temporary is mandatory.\n+\n 2011-09-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (call_to_gnu): Use local variable.  Make sure"}, {"sha": "0854d5da89be8e523378e5dd205261d75f231b84", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=819a653eee396dc4db95ddc3c87805acab08c2de", "patch": "@@ -6521,6 +6521,7 @@ maybe_pad_type (tree type, tree size, unsigned int align,\n   if (align != 0\n       && TREE_CODE (type) == RECORD_TYPE\n       && TYPE_MODE (type) == BLKmode\n+      && !TREE_ADDRESSABLE (type)\n       && TREE_CODE (orig_size) == INTEGER_CST\n       && !TREE_OVERFLOW (orig_size)\n       && compare_tree_int (orig_size, MAX_FIXED_MODE_SIZE) <= 0"}, {"sha": "27e240226c0a59c96b05f42261a7d7e810291a5b", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=819a653eee396dc4db95ddc3c87805acab08c2de", "patch": "@@ -6446,6 +6446,28 @@ gnat_gimplify_expr (tree *expr_p, gimple_seq *pre_p,\n \n       return GS_UNHANDLED;\n \n+    case VIEW_CONVERT_EXPR:\n+      op = TREE_OPERAND (expr, 0);\n+\n+      /* If we are view-converting a CONSTRUCTOR or a call from an aggregate\n+\t type to a scalar one, explicitly create the local temporary.  That's\n+\t required if the type is passed by reference.  */\n+      if ((TREE_CODE (op) == CONSTRUCTOR || TREE_CODE (op) == CALL_EXPR)\n+\t  && AGGREGATE_TYPE_P (TREE_TYPE (op))\n+\t  && !AGGREGATE_TYPE_P (TREE_TYPE (expr)))\n+\t{\n+\t  tree mod, new_var = create_tmp_var_raw (TREE_TYPE (op), \"C\");\n+\t  gimple_add_tmp_var (new_var);\n+\n+\t  mod = build2 (INIT_EXPR, TREE_TYPE (new_var), new_var, op);\n+\t  gimplify_and_add (mod, pre_p);\n+\n+\t  TREE_OPERAND (expr, 0) = new_var;\n+\t  return GS_OK;\n+\t}\n+\n+      return GS_UNHANDLED;\n+\n     case DECL_EXPR:\n       op = DECL_EXPR_DECL (expr);\n "}, {"sha": "1a298b1b55b7ae9b09ce61d3b49a6fac40522691", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=819a653eee396dc4db95ddc3c87805acab08c2de", "patch": "@@ -1,3 +1,7 @@\n+2011-09-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/atomic5.ad[sb]: New test.\n+\n 2011-09-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.dg/sibcall-6.c: Check ia32 instead of ilp32."}, {"sha": "efbed4e34ac0f02b39af5ff88b6704354153b9a2", "filename": "gcc/testsuite/gnat.dg/atomic5.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic5.adb?ref=819a653eee396dc4db95ddc3c87805acab08c2de", "patch": "@@ -0,0 +1,20 @@\n+package body Atomic5 is\n+\n+  function Create return R is\n+  begin\n+    return (A => 0, B => 1, C => 2, D => 4);\n+  end;\n+\n+  procedure Proc1 is\n+    I : Unsigned_32;\n+  begin\n+    I := Conv(Create);\n+  end;\n+\n+  procedure Proc2 is\n+    I : Unsigned_32;\n+  begin\n+    I := Conv(R'(A => 0, B => 1, C => 2, D => 4));\n+  end;\n+\n+end Atomic5;"}, {"sha": "3f653fa1151a6ba5b042af2684fda2114a80dc61", "filename": "gcc/testsuite/gnat.dg/atomic5.ads", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819a653eee396dc4db95ddc3c87805acab08c2de/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic5.ads?ref=819a653eee396dc4db95ddc3c87805acab08c2de", "patch": "@@ -0,0 +1,25 @@\n+-- { dg-do compile }\n+\n+with Unchecked_Conversion;\n+\n+package Atomic5 is\n+\n+  type Byte is mod 2 ** 8;\n+  for Byte'Size use 8;\n+\n+  type Unsigned_32 is mod 2 ** 32;\n+  for Unsigned_32'Size use 32;\n+\n+  type R is record\n+    A,B,C,D : Byte;\n+  end record;\n+  for R'Alignment use 4;\n+  pragma Atomic (R);\n+\n+  function Conv is new Unchecked_Conversion (R, Unsigned_32);\n+\n+  procedure Proc1;\n+\n+  procedure Proc2;\n+\n+end Atomic5;"}]}