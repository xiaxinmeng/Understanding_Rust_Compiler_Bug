{"sha": "caef4e579db9d9ab0cc7eba35e58b04e4ac65649", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FlZjRlNTc5ZGI5ZDlhYjBjYzdlYmEzNWU1OGIwNGU0YWM2NTY0OQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2015-05-22T12:34:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T12:34:33Z"}, "message": "einfo.adb (Default_Init_Cond_Procedure): Code cleanup.\n\n2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb (Default_Init_Cond_Procedure): Code cleanup. The\n\tattribute now applies to the base type.\n\t(Has_Default_Init_Cond): Now applies to the base type.\n\t(Has_Inherited_Default_Init_Cond): Now applies to the base type.\n\t(Set_Default_Init_Cond_Procedure): Code cleanup. The attribute now\n\tapplies to the base type.\n\t(Set_Has_Default_Init_Cond): Now applies to the base type.\n\t(Set_Has_Inherited_Default_Init_Cond): Now applies to the base type.\n\t* exp_ch3.adb (Expand_N_Object_Declaration): No need to use the\n\tbase type when adding a call to the Default_Initial_Condition.\n\nFrom-SVN: r223551", "tree": {"sha": "fecab926a75acda729596dff428497a54c909fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fecab926a75acda729596dff428497a54c909fdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caef4e579db9d9ab0cc7eba35e58b04e4ac65649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caef4e579db9d9ab0cc7eba35e58b04e4ac65649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caef4e579db9d9ab0cc7eba35e58b04e4ac65649", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caef4e579db9d9ab0cc7eba35e58b04e4ac65649/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57ae790f79b9710229ec9c791bc0e05775f8e71b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57ae790f79b9710229ec9c791bc0e05775f8e71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57ae790f79b9710229ec9c791bc0e05775f8e71b"}], "stats": {"total": 68, "additions": 42, "deletions": 26}, "files": [{"sha": "87519d850c2bd8e84239bc7a8b3a9f025ece3a77", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caef4e579db9d9ab0cc7eba35e58b04e4ac65649/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caef4e579db9d9ab0cc7eba35e58b04e4ac65649/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=caef4e579db9d9ab0cc7eba35e58b04e4ac65649", "patch": "@@ -1,6 +1,19 @@\n 2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n \n-\t* einfo.adb Node36 is now used as Anonymous_Master. Flag253\n+\t* einfo.adb (Default_Init_Cond_Procedure): Code cleanup. The\n+\tattribute now applies to the base type.\n+\t(Has_Default_Init_Cond): Now applies to the base type.\n+\t(Has_Inherited_Default_Init_Cond): Now applies to the base type.\n+\t(Set_Default_Init_Cond_Procedure): Code cleanup. The attribute now\n+\tapplies to the base type.\n+\t(Set_Has_Default_Init_Cond): Now applies to the base type.\n+\t(Set_Has_Inherited_Default_Init_Cond): Now applies to the base type.\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): No need to use the\n+\tbase type when adding a call to the Default_Initial_Condition.\n+\n+2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb: Node36 is now used as Anonymous_Master. Flag253\n \tis now unused.\n \t(Anonymous_Master): New routine.\n \t(Has_Anonymous_Master): Removed."}, {"sha": "ce0eb4a63be2e21286eebeb3cfb6eddd0fa68ea5", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 25, "deletions": 22, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caef4e579db9d9ab0cc7eba35e58b04e4ac65649/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caef4e579db9d9ab0cc7eba35e58b04e4ac65649/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=caef4e579db9d9ab0cc7eba35e58b04e4ac65649", "patch": "@@ -1448,7 +1448,8 @@ package body Einfo is\n \n    function Has_Default_Init_Cond (Id : E) return B is\n    begin\n-      return Flag3 (Id);\n+      pragma Assert (Is_Type (Id));\n+      return Flag3 (Base_Type (Id));\n    end Has_Default_Init_Cond;\n \n    function Has_Delayed_Aspects (Id : E) return B is\n@@ -1543,7 +1544,7 @@ package body Einfo is\n    function Has_Inherited_Default_Init_Cond (Id : E) return B is\n    begin\n       pragma Assert (Is_Type (Id));\n-      return Flag133 (Id);\n+      return Flag133 (Base_Type (Id));\n    end Has_Inherited_Default_Init_Cond;\n \n    function Has_Initial_Value (Id : E) return B is\n@@ -4326,7 +4327,7 @@ package body Einfo is\n    procedure Set_Has_Default_Init_Cond (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Type (Id));\n-      Set_Flag3 (Id, V);\n+      Set_Flag3 (Base_Type (Id), V);\n    end Set_Has_Default_Init_Cond;\n \n    procedure Set_Has_Delayed_Aspects (Id : E; V : B := True) is\n@@ -4426,7 +4427,7 @@ package body Einfo is\n    procedure Set_Has_Inherited_Default_Init_Cond (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Type (Id));\n-      Set_Flag133 (Id, V);\n+      Set_Flag133 (Base_Type (Id), V);\n    end Set_Has_Inherited_Default_Init_Cond;\n \n    procedure Set_Has_Initial_Value (Id : E; V : B := True) is\n@@ -6727,21 +6728,21 @@ package body Einfo is\n    ---------------------------------\n \n    function Default_Init_Cond_Procedure (Id : E) return E is\n-      S : Entity_Id;\n+      Subp_Id : Entity_Id;\n \n    begin\n       pragma Assert\n         (Is_Type (Id)\n-           and then (Has_Default_Init_Cond (Id)\n-                       or Has_Inherited_Default_Init_Cond (Id)));\n+          and then (Has_Default_Init_Cond (Id)\n+                     or Has_Inherited_Default_Init_Cond (Id)));\n \n-      S := Subprograms_For_Type (Id);\n-      while Present (S) loop\n-         if Is_Default_Init_Cond_Procedure (S) then\n-            return S;\n+      Subp_Id := Subprograms_For_Type (Base_Type (Id));\n+      while Present (Subp_Id) loop\n+         if Is_Default_Init_Cond_Procedure (Subp_Id) then\n+            return Subp_Id;\n          end if;\n \n-         S := Subprograms_For_Type (S);\n+         Subp_Id := Subprograms_For_Type (Subp_Id);\n       end loop;\n \n       return Empty;\n@@ -8282,26 +8283,28 @@ package body Einfo is\n    -------------------------------------\n \n    procedure Set_Default_Init_Cond_Procedure (Id : E; V : E) is\n-      S : Entity_Id;\n+      Base_Typ : Entity_Id;\n+      Subp_Id  : Entity_Id;\n \n    begin\n       pragma Assert\n-        (Is_Type (Id) and then (Has_Default_Init_Cond           (Id)\n-                                  or\n-                                Has_Inherited_Default_Init_Cond (Id)));\n+        (Is_Type (Id)\n+          and then (Has_Default_Init_Cond (Id)\n+                     or Has_Inherited_Default_Init_Cond (Id)));\n+      Base_Typ := Base_Type (Id);\n \n-      S := Subprograms_For_Type (Id);\n-      Set_Subprograms_For_Type (Id, V);\n-      Set_Subprograms_For_Type (V, S);\n+      Subp_Id := Subprograms_For_Type (Base_Typ);\n+      Set_Subprograms_For_Type (Base_Typ, V);\n+      Set_Subprograms_For_Type (V, Subp_Id);\n \n       --  Check for a duplicate procedure\n \n-      while Present (S) loop\n-         if Is_Default_Init_Cond_Procedure (S) then\n+      while Present (Subp_Id) loop\n+         if Is_Default_Init_Cond_Procedure (Subp_Id) then\n             raise Program_Error;\n          end if;\n \n-         S := Subprograms_For_Type (S);\n+         Subp_Id := Subprograms_For_Type (Subp_Id);\n       end loop;\n    end Set_Default_Init_Cond_Procedure;\n "}, {"sha": "6223c970fca329b095fa5df3ed159b57ffc63334", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caef4e579db9d9ab0cc7eba35e58b04e4ac65649/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caef4e579db9d9ab0cc7eba35e58b04e4ac65649/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=caef4e579db9d9ab0cc7eba35e58b04e4ac65649", "patch": "@@ -6147,14 +6147,14 @@ package body Exp_Ch3 is\n       --  Note that the check is generated for source objects only\n \n       if Comes_From_Source (Def_Id)\n-        and then (Has_Default_Init_Cond           (Base_Typ)\n+        and then (Has_Default_Init_Cond (Typ)\n                     or else\n-                  Has_Inherited_Default_Init_Cond (Base_Typ))\n+                  Has_Inherited_Default_Init_Cond (Typ))\n         and then not Has_Init_Expression (N)\n       then\n          declare\n             DIC_Call : constant Node_Id :=\n-                         Build_Default_Init_Cond_Call (Loc, Def_Id, Base_Typ);\n+                         Build_Default_Init_Cond_Call (Loc, Def_Id, Typ);\n          begin\n             if Present (Next_N) then\n                Insert_Before_And_Analyze (Next_N, DIC_Call);"}]}