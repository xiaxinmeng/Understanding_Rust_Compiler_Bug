{"sha": "25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViYjBiYjViMGQ2ZjViMGUyM2NkMjBmNzdjYmRkZmNiNDFjYTkyYQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-02-08T21:59:11Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2013-02-08T21:59:11Z"}, "message": "re PR rtl-optimization/56246 (ICE in assign_by_spills, at lra-assigns.c:1262)\n\n2013-02-08  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/56246\n\t* lra-constraints.c (simplify_operand_subreg): Try tor reuse\n\treload pseudo.\n\t* lra.c (lra): Clear lra_optional_reload_pseudos only when all\n\tconstraints are satisfied.\n\n2013-02-08  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/56246\n\t* gcc.target/i386/pr56246.c: New test.\n\nFrom-SVN: r195902", "tree": {"sha": "093ae21eea3793a243815803b375c53a1efbd413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/093ae21eea3793a243815803b375c53a1efbd413"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a698cc0308468029029e0501815747284194e407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a698cc0308468029029e0501815747284194e407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a698cc0308468029029e0501815747284194e407"}], "stats": {"total": 58, "additions": 40, "deletions": 18}, "files": [{"sha": "1b24e78915448ac3b61dab8377b119547e04d4b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "patch": "@@ -1,3 +1,11 @@\n+2013-02-08  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/56246\n+\t* lra-constraints.c (simplify_operand_subreg): Try tor reuse\n+\treload pseudo.\n+\t* lra.c (lra): Clear lra_optional_reload_pseudos only when all\n+\tconstraints are satisfied.\n+\n 2013-02-08  Jeff Law  <law@redhat.com>\n \n \tPR debug/53948"}, {"sha": "49c9723fc485199edb561049ef58d68207579a24", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "patch": "@@ -1213,24 +1213,26 @@ simplify_operand_subreg (int nop, enum machine_mode reg_mode)\n       enum reg_class rclass\n \t= (enum reg_class) targetm.preferred_reload_class (reg, ALL_REGS);\n \n-      new_reg = lra_create_new_reg_with_unique_value (reg_mode, reg, rclass,\n-\t\t\t\t\t\t      \"subreg reg\");\n-      bitmap_set_bit (&lra_optional_reload_pseudos, REGNO (new_reg));\n-      if (type != OP_OUT\n-\t  || GET_MODE_SIZE (GET_MODE (reg)) > GET_MODE_SIZE (mode))\n+      if (get_reload_reg (curr_static_id->operand[nop].type, reg_mode, reg,\n+\t\t\t  rclass, \"subreg reg\", &new_reg))\n \t{\n-\t  push_to_sequence (before);\n-\t  lra_emit_move (new_reg, reg);\n-\t  before = get_insns ();\n-\t  end_sequence ();\n-\t}\n-      if (type != OP_IN)\n-\t{\n-\t  start_sequence ();\n-\t  lra_emit_move (reg, new_reg);\n-\t  emit_insn (after);\n-\t  after = get_insns ();\n-\t  end_sequence ();\n+\t  bitmap_set_bit (&lra_optional_reload_pseudos, REGNO (new_reg));\n+\t  if (type != OP_OUT\n+\t      || GET_MODE_SIZE (GET_MODE (reg)) > GET_MODE_SIZE (mode))\n+\t    {\n+\t      push_to_sequence (before);\n+\t      lra_emit_move (new_reg, reg);\n+\t      before = get_insns ();\n+\t      end_sequence ();\n+\t    }\n+\t  if (type != OP_IN)\n+\t    {\n+\t      start_sequence ();\n+\t      lra_emit_move (reg, new_reg);\n+\t      emit_insn (after);\n+\t      after = get_insns ();\n+\t      end_sequence ();\n+\t    }\n \t}\n       SUBREG_REG (operand) = new_reg;\n       lra_process_new_insns (curr_insn, before, after,"}, {"sha": "875c7afddabcc322510433d063cb3fb0b0fd69be", "filename": "gcc/lra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "patch": "@@ -2272,7 +2272,6 @@ lra (FILE *f)\n     {\n       for (;;)\n \t{\n-\t  bitmap_clear (&lra_optional_reload_pseudos);\n \t  /* We should try to assign hard registers to scratches even\n \t     if there were no RTL transformations in\n \t     lra_constraints.  */\n@@ -2311,6 +2310,7 @@ lra (FILE *f)\n \t\tlive_p = false;\n \t    }\n \t}\n+      bitmap_clear (&lra_optional_reload_pseudos);\n       bitmap_clear (&lra_inheritance_pseudos);\n       bitmap_clear (&lra_split_regs);\n       if (! lra_need_for_spills_p ())"}, {"sha": "56299003f675dfb5ce286e7c4efd095cd54d1904", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "patch": "@@ -1,3 +1,8 @@\n+2013-02-08  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/56246\n+\t* gcc.target/i386/pr56246.c: New test.\n+\n 2013-02-08  Jeff Law  <law@redhat.com>\n \n \tPR debug/53948"}, {"sha": "64a2527a549622e0713cda42ad28d6030eef3825", "filename": "gcc/testsuite/gcc.target/i386/pr56246.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr56246.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr56246.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr56246.c?ref=25bb0bb5b0d6f5b0e23cd20f77cbddfcb41ca92a", "patch": "@@ -0,0 +1,7 @@\n+/* PR target/56225 */\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O2 -fno-omit-frame-pointer -march=i686 -fpic\" } */\n+\n+void NoBarrier_AtomicExchange (long long *ptr) {\n+  while (__sync_val_compare_and_swap (ptr, 1, 0) );\n+}"}]}