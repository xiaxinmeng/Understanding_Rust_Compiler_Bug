{"sha": "60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "node_id": "C_kwDOANBUbNoAKDYwMTQ3YzJiN2Q5ODdmNjE0MmJkYzFkMmFlODNlMDkxZmM2YTVhNDU", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-12-07T05:18:57Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-12-08T17:50:54Z"}, "message": "testsuite: Use attribute \"noipa\" in sibcall tests\n\n...instead of attribute \"noinline\".\n\nFor cris-elf, testsuite/gcc.dg/sibcall-3.c and sibcall-4.c \"XPASS\",\nwithout sibcalls being implemented.  On inspection, recurser_void2 is\nset to be an assembly-level alias for recurser_void1 as in\n\".set _recurser_void2,_recurser_void1\" for both these cases.\n\nIOW, those \"__attribute__((noinline))\" should be\n\"__attribute__((noipa))\".  The astute reader will notice that I also\nadjust test-cases where self-recursion should occur: as mentioned in\nsibcall-1.c \"self-recursion tail calls are optimized for all targets,\nregardless of presence of sibcall patterns\".  But, that optimization\nhappens even with \"noipa\", as observed by the test-cases still passing\nfor cris-elf after patching.  Being of a small mind, I like\nconsistency, but not all the time, so there's hope.\n\ntestsuite:\n\t* gcc.dg/sibcall-1.c, gcc.dg/sibcall-10.c,\n\tgcc.dg/sibcall-2.c, gcc.dg/sibcall-3.c,\n\tgcc.dg/sibcall-4.c, gcc.dg/sibcall-9.c: Replace\n\tattribute \"noinline\" with \"noipa\".", "tree": {"sha": "eec90d69131e3d769d49ad40d599d51ce7eeaa8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eec90d69131e3d769d49ad40d599d51ce7eeaa8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c0399378e77d02962e5d49f7b72d6fa8ebe5e07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0399378e77d02962e5d49f7b72d6fa8ebe5e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0399378e77d02962e5d49f7b72d6fa8ebe5e07"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "f2bd3ade217674c345037ddda66d45368f9575be", "filename": "gcc/testsuite/gcc.dg/sibcall-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-1.c?ref=60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "patch": "@@ -47,7 +47,7 @@ recurser_void (int n)\n \n void *trackpoint;\n \n-void __attribute__ ((noinline))\n+void __attribute__ ((noipa))\n track (int n)\n {\n   char stackpos[1];"}, {"sha": "dcb3e6a5ba207b859585fb4066123dfea6ae38f0", "filename": "gcc/testsuite/gcc.dg/sibcall-10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-10.c?ref=60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "patch": "@@ -46,7 +46,7 @@ int main ()\n    reasonably sure is to make them have the same contents (regarding the\n    n tests).  */\n \n-static void __attribute__((noinline)) ATTR\n+static void __attribute__((noipa)) ATTR\n recurser_void1 (void)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -58,7 +58,7 @@ recurser_void1 (void)\n   recurser_void2 ();\n }\n \n-static void __attribute__((noinline)) ATTR\n+static void __attribute__((noipa)) ATTR\n recurser_void2 (void)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -73,7 +73,7 @@ recurser_void2 (void)\n \n void *trackpoint;\n \n-void __attribute__ ((noinline))\n+void __attribute__ ((noipa))\n track ()\n {\n   char stackpos[1];"}, {"sha": "0d4df82b0ca41f196e122a9294d54ebd2c4fdc52", "filename": "gcc/testsuite/gcc.dg/sibcall-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-2.c?ref=60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "patch": "@@ -38,7 +38,7 @@ recurser_void (void)\n \n void *trackpoint;\n \n-void __attribute__ ((noinline))\n+void __attribute__ ((noipa))\n track ()\n {\n   char stackpos[1];"}, {"sha": "80555cf0640110446fec71d6bf322d7b030b6fc4", "filename": "gcc/testsuite/gcc.dg/sibcall-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c?ref=60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "patch": "@@ -40,7 +40,7 @@ int main ()\n    reasonably sure is to make them have the same contents (regarding the\n    n tests).  */\n \n-static void __attribute__((noinline)) ATTR\n+static void __attribute__((noipa)) ATTR\n recurser_void1 (int n)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -52,7 +52,7 @@ recurser_void1 (int n)\n   recurser_void2 (n + 1);\n }\n \n-static void __attribute__((noinline)) ATTR\n+static void __attribute__((noipa)) ATTR\n recurser_void2 (int n)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -66,7 +66,7 @@ recurser_void2 (int n)\n \n void *trackpoint;\n \n-void __attribute__ ((noinline))\n+void __attribute__ ((noipa))\n track (int n)\n {\n   char stackpos[1];"}, {"sha": "97086bb510604ae3e7b3a56f65003ba913c28690", "filename": "gcc/testsuite/gcc.dg/sibcall-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c?ref=60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "patch": "@@ -41,7 +41,7 @@ int main ()\n    reasonably sure is to make them have the same contents (regarding the\n    n tests).  */\n \n-static void __attribute__((noinline)) ATTR\n+static void __attribute__((noipa)) ATTR\n recurser_void1 (void)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -53,7 +53,7 @@ recurser_void1 (void)\n   recurser_void2 ();\n }\n \n-static void __attribute__((noinline)) ATTR\n+static void __attribute__((noipa)) ATTR\n recurser_void2 (void)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -67,7 +67,7 @@ recurser_void2 (void)\n \n void *trackpoint;\n \n-void __attribute__ ((noinline))\n+void __attribute__ ((noipa))\n track ()\n {\n   char stackpos[1];"}, {"sha": "006dc0d28f8eeeec931b75cff3a2b04467d2b59d", "filename": "gcc/testsuite/gcc.dg/sibcall-9.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60147c2b7d987f6142bdc1d2ae83e091fc6a5a45/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-9.c?ref=60147c2b7d987f6142bdc1d2ae83e091fc6a5a45", "patch": "@@ -45,7 +45,7 @@ int main ()\n    reasonably sure is to make them have the same contents (regarding the\n    n tests).  */\n \n-static void __attribute__((noinline)) ATTR\n+static void __attribute__((noipa)) ATTR\n recurser_void1 (int n)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -57,7 +57,7 @@ recurser_void1 (int n)\n   recurser_void2 (n + 1);\n }\n \n-static void __attribute__((noinline)) ATTR\n+static void __attribute__((noipa)) ATTR\n recurser_void2 (int n)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -72,7 +72,7 @@ recurser_void2 (int n)\n \n void *trackpoint;\n \n-void __attribute__ ((noinline))\n+void __attribute__ ((noipa))\n track (int n)\n {\n   char stackpos[1];"}]}