{"sha": "b62cc13a208075e7853d29438eb68cd1456c017d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYyY2MxM2EyMDgwNzVlNzg1M2QyOTQzOGViNjhjZDE0NTZjMDE3ZA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-06-21T14:36:37Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-06-21T14:36:37Z"}, "message": "Object.m (forward, [...]): Fix unused parameter warnings.\n\n\t* Object.m (forward, read, write): Fix unused parameter warnings.\n\t* encoding.c: Include <stdlib.h>.\n\t(target_flags): Mark with attribute unused.\n\t(atoi): Delete.\n\t* runtime.h (__objc_selector_max_index): Change to unsigned int.\n\t(__objc_generate_gc_type_description): Prototype.\n\t* selector.c (__objc_selector_max_index): Change to unsigned int.\n\nFrom-SVN: r54884", "tree": {"sha": "d24924d0ab18e08862172b48ce646fbe00c762da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d24924d0ab18e08862172b48ce646fbe00c762da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b62cc13a208075e7853d29438eb68cd1456c017d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b62cc13a208075e7853d29438eb68cd1456c017d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b62cc13a208075e7853d29438eb68cd1456c017d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b62cc13a208075e7853d29438eb68cd1456c017d/comments", "author": null, "committer": null, "parents": [{"sha": "4ae361ecf2339a26c1d785925ffc1f1054ab5310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae361ecf2339a26c1d785925ffc1f1054ab5310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ae361ecf2339a26c1d785925ffc1f1054ab5310"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "0cc7b55e172c7e32cb7d218f4ff283232d901920", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=b62cc13a208075e7853d29438eb68cd1456c017d", "patch": "@@ -1,3 +1,13 @@\n+2002-06-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Object.m (forward, read, write): Fix unused parameter warnings.\n+\t* encoding.c: Include <stdlib.h>.\n+\t(target_flags): Mark with attribute unused.\n+\t(atoi): Delete.\n+\t* runtime.h (__objc_selector_max_index): Change to unsigned int.\n+\t(__objc_generate_gc_type_description): Prototype.\n+\t* selector.c (__objc_selector_max_index): Change to unsigned int.\n+\n Mon Jun 17 18:37:42 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n \t* sendmsg.c (__objc_get_forward_imp): Fix warning by making sure"}, {"sha": "1882754d605ef4a75b98c7dcb622eb44b41d61ac", "filename": "libobjc/Object.m", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FObject.m?ref=b62cc13a208075e7853d29438eb68cd1456c017d", "patch": "@@ -1,5 +1,5 @@\n /* The implementation of class Object for Objective-C.\n-   Copyright (C) 1993, 1994, 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1997, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -271,6 +271,7 @@ - (struct objc_method_description *)descriptionForMethod:(SEL)aSel\n \n - (retval_t)forward:(SEL)aSel :(arglist_t)argFrame\n {\n+  (void) argFrame; /* UNUSED */\n   return (retval_t)[self doesNotRecognize: aSel];\n }\n \n@@ -364,12 +365,14 @@ + (int)streamVersion: (TypedStream*)aStream\n \n - read: (TypedStream*)aStream\n {\n+  (void) aStream; /* UNUSED */\n   // [super read: aStream];  \n   return self;\n }\n \n - write: (TypedStream*)aStream\n {\n+  (void) aStream; /* UNUSED */\n   // [super write: aStream];\n   return self;\n }"}, {"sha": "8fd6e5b26c27d2d4f881d664fefa9d25a4e874b3", "filename": "libobjc/encoding.c", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fencoding.c?ref=b62cc13a208075e7853d29438eb68cd1456c017d", "patch": "@@ -30,6 +30,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"tconfig.h\"\n #include \"objc-api.h\"\n #include \"encoding.h\"\n+#include <stdlib.h>\n \n #undef  MAX\n #define MAX(X, Y)                    \\\n@@ -79,19 +80,9 @@ Boston, MA 02111-1307, USA.  */\n \n /* Some ROUND_TYPE_ALIGN macros use TARGET_foo, and consequently\n    target_flags.  Define a dummy entry here to so we don't die.  */\n-\n-static int target_flags = 0;\n-\n-static inline int\n-atoi (const char* str)\n-{\n-  int res = 0;\n-\n-  while (isdigit ((unsigned char)*str))\n-    res *= 10, res += (*str++ - '0');\n-\n-  return res;\n-}\n+/* ??? FIXME: As of 2002-06-21, the attribute `unused' doesn't seem to\n+   eliminate the warning.  */\n+static int __attribute__ ((__unused__)) target_flags = 0;\n \n /*\n   return the size of an object specified by type"}, {"sha": "bea9253a8be10d31f6d163a61339c60ac36656ea", "filename": "libobjc/objc/runtime.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fruntime.h?ref=b62cc13a208075e7853d29438eb68cd1456c017d", "patch": "@@ -1,5 +1,5 @@\n /* GNU Objective C Runtime internal declarations\n-   Copyright (C) 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 1997, 2002 Free Software Foundation, Inc.\n    Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n@@ -65,7 +65,7 @@ extern Method_t search_for_method_in_list(MethodList_t list, SEL op);\n extern BOOL __objc_class_links_resolved;\n \n /* Number of selectors stored in each of the selector  tables */\n-extern int __objc_selector_max_index;\n+extern unsigned int __objc_selector_max_index;\n \n /* Mutex locking __objc_selector_max_index and its arrays. */\n extern objc_mutex_t __objc_runtime_mutex;\n@@ -82,6 +82,7 @@ extern int __objc_runtime_threads_alive;\n BOOL __objc_responds_to (id object, SEL sel); /* for internal use only! */\n SEL  __sel_register_typed_name (const char*, const char*, \n \t\t\t\tstruct objc_selector*, BOOL is_const);\n+extern void __objc_generate_gc_type_description (Class);\n \n #endif /* not __objc_runtime_INCLUDE_GNU */\n "}, {"sha": "13a2afd181275af6fb0416267746eae60130b0e8", "filename": "libobjc/selector.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2Fselector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62cc13a208075e7853d29438eb68cd1456c017d/libobjc%2Fselector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fselector.c?ref=b62cc13a208075e7853d29438eb68cd1456c017d", "patch": "@@ -1,5 +1,5 @@\n /* GNU Objective C Runtime selector related functions\n-   Copyright (C) 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 1997, 2002 Free Software Foundation, Inc.\n    Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n@@ -38,7 +38,7 @@ static cache_ptr      __objc_selector_hash  = 0; /* name -> uid !T:MUTEX */\n static void register_selectors_from_list(MethodList_t);\n \n /* Number of selectors stored in each of the above tables */\n-int __objc_selector_max_index = 0;              /* !T:MUTEX */\n+unsigned int __objc_selector_max_index = 0;     /* !T:MUTEX */\n \n void __objc_init_selector_tables()\n {"}]}