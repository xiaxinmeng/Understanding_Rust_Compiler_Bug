{"sha": "0c847d7db5dcd64ba8dc85ef425dc98f40d7df5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM4NDdkN2RiNWRjZDY0YmE4ZGM4NWVmNDI1ZGM5OGY0MGQ3ZGY1YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-25T17:37:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-25T17:37:10Z"}, "message": "(check_dbra_loop): Fix error in previous change.\n\nFrom-SVN: r6316", "tree": {"sha": "8edb34e0202f68bb8d82d95b7f31d72667f1ed84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8edb34e0202f68bb8d82d95b7f31d72667f1ed84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c847d7db5dcd64ba8dc85ef425dc98f40d7df5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c847d7db5dcd64ba8dc85ef425dc98f40d7df5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c847d7db5dcd64ba8dc85ef425dc98f40d7df5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c847d7db5dcd64ba8dc85ef425dc98f40d7df5a/comments", "author": null, "committer": null, "parents": [{"sha": "9e69be8c656d6bc4a6159e546c2297d28b844572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e69be8c656d6bc4a6159e546c2297d28b844572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e69be8c656d6bc4a6159e546c2297d28b844572"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "60243f7755f6c986853f35335b15d014382e92fb", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c847d7db5dcd64ba8dc85ef425dc98f40d7df5a/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c847d7db5dcd64ba8dc85ef425dc98f40d7df5a/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=0c847d7db5dcd64ba8dc85ef425dc98f40d7df5a", "patch": "@@ -5731,7 +5731,9 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \t case, the insn should have been moved out of the loop.  */\n \n       if (num_mem_sets == 1)\n-\treversible_mem_store = ! invariant_p (XEXP (loop_store_mems[0], 0));\n+\treversible_mem_store\n+\t  = (! unknown_address_altered\n+\t     && ! invariant_p (XEXP (loop_store_mems[0], 0)));\n \n       /* This code only acts for innermost loops.  Also it simplifies\n \t the memory address check by only reversing loops with"}]}