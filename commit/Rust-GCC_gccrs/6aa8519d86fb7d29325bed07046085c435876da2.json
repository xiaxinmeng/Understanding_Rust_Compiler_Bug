{"sha": "6aa8519d86fb7d29325bed07046085c435876da2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhODUxOWQ4NmZiN2QyOTMyNWJlZDA3MDQ2MDg1YzQzNTg3NmRhMg==", "commit": {"author": {"name": "Johannes Singler", "email": "singler@ira.uka.de", "date": "2009-09-11T16:33:58Z"}, "committer": {"name": "Johannes Singler", "email": "singler@gcc.gnu.org", "date": "2009-09-11T16:33:58Z"}, "message": "2009-09-11  Johannes Singler  <singler@ira.uka.de>\n\n        * include/parallel/multiway_merge.h\n        (multiway_merge_exact_splitting): Deallocate borders correctly.\n        (parallel_multiway_merge): Remove unnecessarily complicated\n        allocation, random access iterators are default-constructible;\n        deallocate ne_seqs correctly.\n\nFrom-SVN: r151640", "tree": {"sha": "e66ee8c7079c6d2eef74cb35f63999670c0de35f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e66ee8c7079c6d2eef74cb35f63999670c0de35f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aa8519d86fb7d29325bed07046085c435876da2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa8519d86fb7d29325bed07046085c435876da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa8519d86fb7d29325bed07046085c435876da2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa8519d86fb7d29325bed07046085c435876da2/comments", "author": null, "committer": null, "parents": [{"sha": "603bb63effce598498cdec596afb4860a64935f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603bb63effce598498cdec596afb4860a64935f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603bb63effce598498cdec596afb4860a64935f2"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "8cb9560b54f6cbd87d16864b617c5ae822b06e1b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa8519d86fb7d29325bed07046085c435876da2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa8519d86fb7d29325bed07046085c435876da2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6aa8519d86fb7d29325bed07046085c435876da2", "patch": "@@ -1,3 +1,11 @@\n+2009-09-11  Johannes Singler  <singler@ira.uka.de>\n+\n+        * include/parallel/multiway_merge.h\n+        (multiway_merge_exact_splitting): Deallocate borders correctly.\n+        (parallel_multiway_merge): Remove unnecessarily complicated\n+        allocation, random access iterators are default-constructible;\n+        deallocate ne_seqs correctly.\n+\n 2009-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/41316"}, {"sha": "fe32053d6c1fc6061900d61119db0b85c52148e2", "filename": "libstdc++-v3/include/parallel/multiway_merge.h", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa8519d86fb7d29325bed07046085c435876da2/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa8519d86fb7d29325bed07046085c435876da2/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h?ref=6aa8519d86fb7d29325bed07046085c435876da2", "patch": "@@ -1224,7 +1224,7 @@ void multiway_merge_exact_splitting(\n                 offsets[num_threads - 1].begin(),  comp);\n         }\n     }\n-\n+  delete[] borders;\n \n   for (int slab = 0; slab < num_threads; ++slab)\n     {\n@@ -1305,11 +1305,8 @@ template<\n         std::iterator_traits<RandomAccessIterator1>::value_type value_type;\n \n       // Leave only non-empty sequences.\n-      std::pair<RandomAccessIterator1, RandomAccessIterator1>* ne_seqs =\n-        static_cast<std::pair<RandomAccessIterator1, RandomAccessIterator1>*>(\n-        ::operator new(\n-            sizeof(std::pair<RandomAccessIterator1, RandomAccessIterator1>)\n-              * (seqs_end - seqs_begin)));\n+      typedef std::pair<RandomAccessIterator1, RandomAccessIterator1> seq_type;\n+      seq_type* ne_seqs = new seq_type[seqs_end - seqs_begin];\n       int k = 0;\n       difference_type total_length = 0;\n       for (RandomAccessIteratorIterator raii = seqs_begin;\n@@ -1319,9 +1316,7 @@ template<\n           if(seq_length > 0)\n             {\n               total_length += seq_length;\n-              //ne_seqs[k] = *raii;\n-              new(&(ne_seqs[k++]))\n-                std::pair<RandomAccessIterator1, RandomAccessIterator1>(*raii);\n+              ne_seqs[k++] = *raii;\n             }\n         }\n \n@@ -1331,7 +1326,7 @@ template<\n \n       if (total_length == 0 || k == 0)\n       {\n-        ::operator delete(ne_seqs);\n+        delete[] ne_seqs;\n         return target;\n       }\n \n@@ -1366,8 +1361,7 @@ template<\n           for (int c = 0; c < k; ++c)\n             target_position += pieces[iam][c].first;\n \n-          std::pair<RandomAccessIterator1, RandomAccessIterator1>* chunks\n-            = new std::pair<RandomAccessIterator1, RandomAccessIterator1>[k];\n+          seq_type* chunks = new seq_type[k];\n \n           for (int s = 0; s < k; ++s)\n             {\n@@ -1399,6 +1393,7 @@ template<\n         }\n \n       delete[] pieces;\n+      delete[] ne_seqs;\n \n       return target + length;\n     }"}]}