{"sha": "e9ec5c6b5e65990251fa71ea6e885823d50f3df3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTllYzVjNmI1ZTY1OTkwMjUxZmE3MWVhNmU4ODU4MjNkNTBmM2RmMw==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-11-30T07:22:04Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-11-30T07:22:04Z"}, "message": "cgraphunit.c (cgraph_finalize_compilation_unit): Add a newline at the end of a diagnostics message.\n\n\t* cgraphunit.c (cgraph_finalize_compilation_unit): Add a newline\n\tat the end of a diagnostics message.\n\n\t* alloc-pool.c (pool_free): Postpone clearing the pool entry\n\tuntil after asserting that it was allocated in the right pool.\n\n\t* cfgrtl.c (print_rtl_with_bb): Print predecessor and\n\tsuccessor edge information as well.  Make output of live regs\n\ton exit consistent with live regs on entry.\n\nFrom-SVN: r119357", "tree": {"sha": "04dc45214d4649859b92961c61d2bbdae2f5499d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04dc45214d4649859b92961c61d2bbdae2f5499d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9ec5c6b5e65990251fa71ea6e885823d50f3df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ec5c6b5e65990251fa71ea6e885823d50f3df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9ec5c6b5e65990251fa71ea6e885823d50f3df3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/comments", "author": null, "committer": null, "parents": [{"sha": "e26feb2c6033e706c1b56e33e38e530adb06aabe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26feb2c6033e706c1b56e33e38e530adb06aabe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e26feb2c6033e706c1b56e33e38e530adb06aabe"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "dd83c8e84ccb8bbc3d78c4021617393a8058fa0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9ec5c6b5e65990251fa71ea6e885823d50f3df3", "patch": "@@ -1,3 +1,15 @@\n+2006-11-30  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* cgraphunit.c (cgraph_finalize_compilation_unit): Add a newline\n+\tat the end of a diagnostics message.\n+\n+\t* alloc-pool.c (pool_free): Postpone clearing the pool entry\n+\tuntil after asserting that it was allocated in the right pool.\n+\n+\t* cfgrtl.c (print_rtl_with_bb): Print predecessor and\n+\tsuccessor edge information as well.  Make output of live regs\n+\ton exit consistent with live regs on entry.\n+\n 2006-11-30  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/29852"}, {"sha": "0a58f37bebc2da94a977b51f7107d7443319abce", "filename": "gcc/alloc-pool.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/gcc%2Falloc-pool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/gcc%2Falloc-pool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falloc-pool.c?ref=e9ec5c6b5e65990251fa71ea6e885823d50f3df3", "patch": "@@ -292,11 +292,11 @@ pool_free (alloc_pool pool, void *ptr)\n   gcc_assert (ptr);\n \n #ifdef ENABLE_CHECKING\n-  memset (ptr, 0xaf, pool->elt_size - offsetof (allocation_object, u.data));\n-\n   /* Check whether the PTR was allocated from POOL.  */\n   gcc_assert (pool->id == ALLOCATION_OBJECT_PTR_FROM_USER_PTR (ptr)->id);\n \n+  memset (ptr, 0xaf, pool->elt_size - offsetof (allocation_object, u.data));\n+\n   /* Mark the element to be free.  */\n   ALLOCATION_OBJECT_PTR_FROM_USER_PTR (ptr)->id = 0;\n #else"}, {"sha": "4ff3058e102ba4205394424b11dcb5c423eb3d90", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=e9ec5c6b5e65990251fa71ea6e885823d50f3df3", "patch": "@@ -1646,13 +1646,21 @@ print_rtl_with_bb (FILE *outf, rtx rtx_first)\n       for (tmp_rtx = rtx_first; NULL != tmp_rtx; tmp_rtx = NEXT_INSN (tmp_rtx))\n \t{\n \t  int did_output;\n+\t  edge_iterator ei;\n+\t  edge e;\n \n \t  if ((bb = start[INSN_UID (tmp_rtx)]) != NULL)\n \t    {\n \t      fprintf (outf, \";; Start of basic block %d, registers live:\",\n \t\t       bb->index);\n \t      dump_regset (bb->il.rtl->global_live_at_start, outf);\n \t      putc ('\\n', outf);\n+\t      FOR_EACH_EDGE (e, ei, bb->preds)\n+\t\t{\n+\t\t  fputs (\";; Pred edge \", outf);\n+\t\t  dump_edge_info (outf, e, 0);\n+\t\t  fputc ('\\n', outf);\n+\t\t}\n \t    }\n \n \t  if (in_bb_p[INSN_UID (tmp_rtx)] == NOT_IN_BB\n@@ -1666,10 +1674,16 @@ print_rtl_with_bb (FILE *outf, rtx rtx_first)\n \n \t  if ((bb = end[INSN_UID (tmp_rtx)]) != NULL)\n \t    {\n-\t      fprintf (outf, \";; End of basic block %d, registers live:\\n\",\n+\t      fprintf (outf, \";; End of basic block %d, registers live:\",\n \t\t       bb->index);\n \t      dump_regset (bb->il.rtl->global_live_at_end, outf);\n \t      putc ('\\n', outf);\n+\t      FOR_EACH_EDGE (e, ei, bb->succs)\n+\t\t{\n+\t\t  fputs (\";; Succ edge \", outf);\n+\t\t  dump_edge_info (outf, e, 1);\n+\t\t  fputc ('\\n', outf);\n+\t\t}\n \t    }\n \n \t  if (did_output)"}, {"sha": "1e76777d663585a4393ee8744d2c3c05590766dd", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ec5c6b5e65990251fa71ea6e885823d50f3df3/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=e9ec5c6b5e65990251fa71ea6e885823d50f3df3", "patch": "@@ -1076,7 +1076,7 @@ cgraph_finalize_compilation_unit (void)\n \n   if (!quiet_flag)\n     {\n-      fprintf (stderr, \"\\nAnalyzing compilation unit\");\n+      fprintf (stderr, \"\\nAnalyzing compilation unit\\n\");\n       fflush (stderr);\n     }\n "}]}