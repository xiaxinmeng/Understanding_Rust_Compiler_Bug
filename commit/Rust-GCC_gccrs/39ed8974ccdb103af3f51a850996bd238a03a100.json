{"sha": "39ed8974ccdb103af3f51a850996bd238a03a100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzllZDg5NzRjY2RiMTAzYWYzZjUxYTg1MDk5NmJkMjM4YTAzYTEwMA==", "commit": {"author": {"name": "Lars Brinkhoff", "email": "lars@nocrew.org", "date": "2001-02-03T02:12:16Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2001-02-03T02:12:16Z"}, "message": "* md.texi (Standard Names): remove reference to spur.md.\n\nFrom-SVN: r39422", "tree": {"sha": "aac1914c3d531187a3664efa1f2742b7ff580c60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aac1914c3d531187a3664efa1f2742b7ff580c60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39ed8974ccdb103af3f51a850996bd238a03a100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ed8974ccdb103af3f51a850996bd238a03a100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ed8974ccdb103af3f51a850996bd238a03a100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ed8974ccdb103af3f51a850996bd238a03a100/comments", "author": {"login": "larsbrinkhoff", "id": 775050, "node_id": "MDQ6VXNlcjc3NTA1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/775050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsbrinkhoff", "html_url": "https://github.com/larsbrinkhoff", "followers_url": "https://api.github.com/users/larsbrinkhoff/followers", "following_url": "https://api.github.com/users/larsbrinkhoff/following{/other_user}", "gists_url": "https://api.github.com/users/larsbrinkhoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsbrinkhoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsbrinkhoff/subscriptions", "organizations_url": "https://api.github.com/users/larsbrinkhoff/orgs", "repos_url": "https://api.github.com/users/larsbrinkhoff/repos", "events_url": "https://api.github.com/users/larsbrinkhoff/events{/privacy}", "received_events_url": "https://api.github.com/users/larsbrinkhoff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b53f0396c95cef8c5246b01b4b756298511aa64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b53f0396c95cef8c5246b01b4b756298511aa64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b53f0396c95cef8c5246b01b4b756298511aa64"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "70d67de7a2b8ca62f5c11ad97c3d3cc1b6fb4762", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ed8974ccdb103af3f51a850996bd238a03a100/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ed8974ccdb103af3f51a850996bd238a03a100/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39ed8974ccdb103af3f51a850996bd238a03a100", "patch": "@@ -1,3 +1,7 @@\n+2001-02-02  lars brinkhoff  <lars@nocrew.org>\n+\n+\t* md.texi (Standard Names): remove reference to spur.md.\n+\n 2001-02-03  Michael Hayes  <m.hayes@elec.canterbury.ac.nz)\n \n \t* c4x.h (IS_INT_CALL_SAVED_REG, IS_FLOAT_CALL_SAVED_REG): Define."}, {"sha": "b87b87797a7d70b7c4a97c9dc033b3e5264c4d87", "filename": "gcc/md.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ed8974ccdb103af3f51a850996bd238a03a100/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ed8974ccdb103af3f51a850996bd238a03a100/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=39ed8974ccdb103af3f51a850996bd238a03a100", "patch": "@@ -1960,8 +1960,7 @@ function which might generate new pseudo registers.\n \n This requirement exists even for subword modes on a RISC machine where\n fetching those modes from memory normally requires several insns and\n-some temporary registers.  Look in @file{spur.md} to see how the\n-requirement can be satisfied.\n+some temporary registers.\n \n @findex change_address\n During reload a memory reference with an invalid address may be passed"}]}