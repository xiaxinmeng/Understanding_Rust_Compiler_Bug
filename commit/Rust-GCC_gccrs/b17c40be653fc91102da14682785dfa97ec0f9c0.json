{"sha": "b17c40be653fc91102da14682785dfa97ec0f9c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE3YzQwYmU2NTNmYzkxMTAyZGExNDY4Mjc4NWRmYTk3ZWMwZjljMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-10-14T17:51:55Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-10-14T17:51:55Z"}, "message": "re PR c++/37650 (ICE with broken default template parameter)\n\n/cp\n2008-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/37650\n\t* pt.c (push_template_decl_real): Check that current_template_parms\n\tis not null.\n\t(process_partial_specialization): Assert current_template_parms not\n\tnull.\n\n/testsuite\n2008-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/37650\n\t* g++.dg/template/crash83.C: New.\n\nFrom-SVN: r141115", "tree": {"sha": "4d9733ef67af48d5098d4835438915c1bd65c39e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d9733ef67af48d5098d4835438915c1bd65c39e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b17c40be653fc91102da14682785dfa97ec0f9c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b17c40be653fc91102da14682785dfa97ec0f9c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b17c40be653fc91102da14682785dfa97ec0f9c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b17c40be653fc91102da14682785dfa97ec0f9c0/comments", "author": null, "committer": null, "parents": [{"sha": "c841843f9ec213349ecfdf80b0e1a0a6e9b1872a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c841843f9ec213349ecfdf80b0e1a0a6e9b1872a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c841843f9ec213349ecfdf80b0e1a0a6e9b1872a"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "73a1656522d265bf6037d4813cac5380e3148fa7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b17c40be653fc91102da14682785dfa97ec0f9c0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b17c40be653fc91102da14682785dfa97ec0f9c0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b17c40be653fc91102da14682785dfa97ec0f9c0", "patch": "@@ -1,3 +1,11 @@\n+2008-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/37650\n+\t* pt.c (push_template_decl_real): Check that current_template_parms\n+\tis not null.\n+\t(process_partial_specialization): Assert current_template_parms not\n+\tnull.\n+\n 2008-10-13  Doug Evans  <dje@google.com>\n \n \t* cp-tree.h (DECL_MAIN_P): Fix parentheses around expression."}, {"sha": "13a236101b524f8eb363f36224667b9cc3f4fe9b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b17c40be653fc91102da14682785dfa97ec0f9c0/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b17c40be653fc91102da14682785dfa97ec0f9c0/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b17c40be653fc91102da14682785dfa97ec0f9c0", "patch": "@@ -3292,15 +3292,20 @@ process_partial_specialization (tree decl)\n   tree maintmpl = CLASSTYPE_TI_TEMPLATE (type);\n   tree specargs = CLASSTYPE_TI_ARGS (type);\n   tree inner_args = INNERMOST_TEMPLATE_ARGS (specargs);\n-  tree inner_parms = INNERMOST_TEMPLATE_PARMS (current_template_parms);\n   tree main_inner_parms = DECL_INNERMOST_TEMPLATE_PARMS (maintmpl);\n+  tree inner_parms;\n   int nargs = TREE_VEC_LENGTH (inner_args);\n-  int ntparms = TREE_VEC_LENGTH (inner_parms);\n+  int ntparms;\n   int  i;\n   int did_error_intro = 0;\n   struct template_parm_data tpd;\n   struct template_parm_data tpd2;\n \n+  gcc_assert (current_template_parms);\n+\n+  inner_parms = INNERMOST_TEMPLATE_PARMS (current_template_parms);\n+  ntparms = TREE_VEC_LENGTH (inner_parms);\n+\n   /* We check that each of the template parameters given in the\n      partial specialization is used in the argument list to the\n      specialization.  For example:\n@@ -3749,8 +3754,8 @@ push_template_decl_real (tree decl, bool is_friend)\n      [temp.mem].  */\n   bool member_template_p = false;\n \n-  if (decl == error_mark_node)\n-    return decl;\n+  if (decl == error_mark_node || !current_template_parms)\n+    return error_mark_node;\n \n   /* See if this is a partial specialization.  */\n   is_partial = (DECL_IMPLICIT_TYPEDEF_P (decl)"}, {"sha": "8f3e7b4ae4f923d3c8201cd075c82f1fb7537965", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b17c40be653fc91102da14682785dfa97ec0f9c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b17c40be653fc91102da14682785dfa97ec0f9c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b17c40be653fc91102da14682785dfa97ec0f9c0", "patch": "@@ -1,3 +1,8 @@\n+2008-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/37650\n+\t* g++.dg/template/crash83.C: New.\n+\n 2008-10-14  Douglas Gregor  <doug.gregor@gmail.com>\n \n        PR c++/37553"}, {"sha": "b83dd213971447fde477fc78448d14ffa3b25478", "filename": "gcc/testsuite/g++.dg/template/crash83.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b17c40be653fc91102da14682785dfa97ec0f9c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash83.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b17c40be653fc91102da14682785dfa97ec0f9c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash83.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash83.C?ref=b17c40be653fc91102da14682785dfa97ec0f9c0", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/37650\n+\n+template<int> struct A {};\n+\n+template<typename = class A<0>: > struct B {}; // { dg-error \"explicit specialization|expected\" }"}]}