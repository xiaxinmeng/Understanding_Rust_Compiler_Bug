{"sha": "f05eec4a0d41f9b9b5ef0131407581c5edb6f79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA1ZWVjNGEwZDQxZjliOWI1ZWYwMTMxNDA3NTgxYzVlZGI2Zjc5Yw==", "commit": {"author": {"name": "Ed Smith-Rowland", "email": "3dw4rd@verizon.net", "date": "2011-11-11T16:51:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-11T16:51:41Z"}, "message": "re PR c++/50976 ([C++0x] literal operator with unsigned long long parameter not accepted)\n\n\tPR c++/50976\n\t* typeck.c (check_literal_operator_args): Reorganize test for string\n\toperators so size_t search depends on finding string first.\n\nFrom-SVN: r181292", "tree": {"sha": "39c88c83ae08349e05c6c67fad20ad9e549d1539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39c88c83ae08349e05c6c67fad20ad9e549d1539"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f05eec4a0d41f9b9b5ef0131407581c5edb6f79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05eec4a0d41f9b9b5ef0131407581c5edb6f79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f05eec4a0d41f9b9b5ef0131407581c5edb6f79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05eec4a0d41f9b9b5ef0131407581c5edb6f79c/comments", "author": {"login": "emsr", "id": 1936479, "node_id": "MDQ6VXNlcjE5MzY0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1936479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emsr", "html_url": "https://github.com/emsr", "followers_url": "https://api.github.com/users/emsr/followers", "following_url": "https://api.github.com/users/emsr/following{/other_user}", "gists_url": "https://api.github.com/users/emsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/emsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emsr/subscriptions", "organizations_url": "https://api.github.com/users/emsr/orgs", "repos_url": "https://api.github.com/users/emsr/repos", "events_url": "https://api.github.com/users/emsr/events{/privacy}", "received_events_url": "https://api.github.com/users/emsr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "902828f01c0ea4c987dd227e0c11be8f2eb8dc9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902828f01c0ea4c987dd227e0c11be8f2eb8dc9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/902828f01c0ea4c987dd227e0c11be8f2eb8dc9e"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "291487fad63ef746a6b3a0add9bd469c834cb2d2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f05eec4a0d41f9b9b5ef0131407581c5edb6f79c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f05eec4a0d41f9b9b5ef0131407581c5edb6f79c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f05eec4a0d41f9b9b5ef0131407581c5edb6f79c", "patch": "@@ -1,3 +1,9 @@\n+2011-11-11  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\tPR c++/50976\n+\t* typeck.c (check_literal_operator_args): Reorganize test for string\n+\toperators so size_t search depends on finding string first.\n+\n 2011-11-10  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50372"}, {"sha": "722cec5b5b98b5c78e26d389532804b6d35ef160", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f05eec4a0d41f9b9b5ef0131407581c5edb6f79c/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f05eec4a0d41f9b9b5ef0131407581c5edb6f79c/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f05eec4a0d41f9b9b5ef0131407581c5edb6f79c", "patch": "@@ -8425,9 +8425,6 @@ check_literal_operator_args (const_tree decl,\n       tree argtype;\n       int arity;\n       int max_arity = 2;\n-      bool found_string_p = false;\n-      bool maybe_raw_p = false;\n-      bool found_size_p = false;\n \n       *long_long_unsigned_p = false;\n       *long_double_p = false;\n@@ -8442,29 +8439,30 @@ check_literal_operator_args (const_tree decl,\n \n \t  if (TREE_CODE (t) == POINTER_TYPE)\n \t    {\n+\t      bool maybe_raw_p = false;\n \t      t = TREE_TYPE (t);\n \t      if (cp_type_quals (t) != TYPE_QUAL_CONST)\n \t\treturn false;\n \t      t = TYPE_MAIN_VARIANT (t);\n-\t      if (same_type_p (t, char_type_node))\n+\t      if ((maybe_raw_p = same_type_p (t, char_type_node))\n+\t\t  || same_type_p (t, wchar_type_node)\n+\t\t  || same_type_p (t, char16_type_node)\n+\t\t  || same_type_p (t, char32_type_node))\n \t\t{\n-\t\t  found_string_p = true;\n-\t\t  maybe_raw_p = true;\n+\t\t  argtype = TREE_CHAIN (argtype);\n+\t\t  if (!argtype)\n+\t\t    return false;\n+\t\t  t = TREE_VALUE (argtype);\n+\t\t  if (maybe_raw_p && argtype == void_list_node)\n+\t\t    return true;\n+\t\t  else if (same_type_p (t, size_type_node))\n+\t\t    {\n+\t\t      ++arity;\n+\t\t      continue;\n+\t\t    }\n+\t\t  else\n+\t\t    return false;\n \t\t}\n-\t      else if (same_type_p (t, wchar_type_node))\n-\t\tfound_string_p = true;\n-\t      else if (same_type_p (t, char16_type_node))\n-\t\tfound_string_p = true;\n-\t      else if (same_type_p (t, char32_type_node))\n-\t\tfound_string_p = true;\n-\t      else\n-\t\treturn false;\n-\t    }\n-\t  else if (same_type_p (t, size_type_node))\n-\t    {\n-\t      if (!found_string_p)\n-\t\treturn false;\n-\t      found_size_p = true;\n \t    }\n \t  else if (same_type_p (t, long_long_unsigned_type_node))\n \t    {\n@@ -8493,9 +8491,6 @@ check_literal_operator_args (const_tree decl,\n       if (arity > max_arity)\n \treturn false;\n \n-      if (found_string_p && !maybe_raw_p && !found_size_p)\n-\treturn false;\n-\n       return true;\n     }\n }"}]}