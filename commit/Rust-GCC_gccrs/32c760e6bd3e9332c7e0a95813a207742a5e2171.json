{"sha": "32c760e6bd3e9332c7e0a95813a207742a5e2171", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJjNzYwZTZiZDNlOTMzMmM3ZTBhOTU4MTNhMjA3NzQyYTVlMjE3MQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2007-12-19T16:23:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-19T16:23:55Z"}, "message": "freeze.adb (Freeze_Record_Type, [...]): Implement properly the Ada2005 rules concerning when...\n\n2007-12-19  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Record_Type, Check_Current_Instance): Implement\n\tproperly the Ada2005 rules concerning when the current instance of a\n\trecord type is aliased.\n\nFrom-SVN: r131076", "tree": {"sha": "3732959e913744063b98cc5174226905a7511702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3732959e913744063b98cc5174226905a7511702"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32c760e6bd3e9332c7e0a95813a207742a5e2171", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c760e6bd3e9332c7e0a95813a207742a5e2171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32c760e6bd3e9332c7e0a95813a207742a5e2171", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c760e6bd3e9332c7e0a95813a207742a5e2171/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5aa8dd31e0abac5dcfb3da086ff8a5316ea3fc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5aa8dd31e0abac5dcfb3da086ff8a5316ea3fc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5aa8dd31e0abac5dcfb3da086ff8a5316ea3fc0"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "f977e7a0e02471202d793788c884a43882cb4bd7", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c760e6bd3e9332c7e0a95813a207742a5e2171/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c760e6bd3e9332c7e0a95813a207742a5e2171/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=32c760e6bd3e9332c7e0a95813a207742a5e2171", "patch": "@@ -1452,6 +1452,11 @@ package body Freeze is\n \n       procedure Check_Current_Instance (Comp_Decl : Node_Id) is\n \n+         Rec_Type : constant Entity_Id :=\n+                      Scope (Defining_Identifier (Comp_Decl));\n+\n+         Decl : constant Node_Id := Parent (Rec_Type);\n+\n          function Process (N : Node_Id) return Traverse_Result;\n          --  Process routine to apply check to given node\n \n@@ -1486,7 +1491,25 @@ package body Freeze is\n       --  Start of processing for Check_Current_Instance\n \n       begin\n-         Traverse (Comp_Decl);\n+         --  In Ada95, the (imprecise) rule is that the current instance of a\n+         --  limited type is aliased. In Ada2005, limitedness must be explicit:\n+         --  either a tagged type, or a limited record.\n+\n+         if Is_Limited_Type (Rec_Type)\n+           and then\n+             (Ada_Version < Ada_05\n+               or else Is_Tagged_Type (Rec_Type))\n+         then\n+            return;\n+\n+         elsif Nkind (Decl) = N_Full_Type_Declaration\n+           and then Limited_Present (Type_Definition (Decl))\n+         then\n+            return;\n+\n+         else\n+            Traverse (Comp_Decl);\n+         end if;\n       end Check_Current_Instance;\n \n       ------------------------\n@@ -2028,9 +2051,8 @@ package body Freeze is\n                   Set_Has_Unchecked_Union (Rec);\n                end if;\n \n-               if Has_Per_Object_Constraint (Comp)\n-                 and then not Is_Limited_Type (Rec)\n-               then\n+               if Has_Per_Object_Constraint (Comp) then\n+\n                   --  Scan component declaration for likely misuses of current\n                   --  instance, either in a constraint or a default expression.\n "}]}