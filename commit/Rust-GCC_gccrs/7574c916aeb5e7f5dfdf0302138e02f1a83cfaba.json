{"sha": "7574c916aeb5e7f5dfdf0302138e02f1a83cfaba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU3NGM5MTZhZWI1ZTdmNWRmZGYwMzAyMTM4ZTAyZjFhODNjZmFiYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-02-29T14:25:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-02-29T14:25:57Z"}, "message": "re PR c++/69995 ([C++14] Invalid result when evaluating constexpr function)\n\n\tPR c++/69995\n\t* constexpr.c (cxx_eval_store_expression): Unshare init.\n\nFrom-SVN: r233810", "tree": {"sha": "6ad3af10a204a96d688eaf14bc5c07cdef306bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ad3af10a204a96d688eaf14bc5c07cdef306bfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cbd400b43e4068a886b7297e4da8599732ef6813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd400b43e4068a886b7297e4da8599732ef6813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd400b43e4068a886b7297e4da8599732ef6813"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "49ca2f273fda63bf5c1d4ea05e7adda667f8c7ba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7574c916aeb5e7f5dfdf0302138e02f1a83cfaba", "patch": "@@ -1,3 +1,8 @@\n+2016-02-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/69995\n+\t* constexpr.c (cxx_eval_store_expression): Unshare init.\n+\n 2016-02-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/69958"}, {"sha": "5e359404c8d64462f64d0bc18fdb37b67c1dbf37", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=7574c916aeb5e7f5dfdf0302138e02f1a83cfaba", "patch": "@@ -2925,6 +2925,8 @@ cxx_eval_store_expression (const constexpr_ctx *ctx, tree t,\n \n   init = cxx_eval_constant_expression (&new_ctx, init, false,\n \t\t\t\t       non_constant_p, overflow_p);\n+  /* Don't share a CONSTRUCTOR that might be changed later.  */\n+  init = unshare_expr (init);\n   if (target == object)\n     {\n       /* The hash table might have moved since the get earlier.  */"}, {"sha": "8cea41a1cb7184c8ce40bace983e9d679f49deda", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-array3.C", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7574c916aeb5e7f5dfdf0302138e02f1a83cfaba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array3.C?ref=7574c916aeb5e7f5dfdf0302138e02f1a83cfaba", "patch": "@@ -0,0 +1,43 @@\n+// PR c++/69995\n+// { dg-do compile { target c++14 } }\n+\n+#define assert(X) static_assert((X),#X)\n+\n+#define CONSTEXPR constexpr\n+\n+template <typename T, unsigned long Size>\n+struct array {\n+    T elems_[Size];\n+\n+    constexpr T const& operator[](unsigned long n) const\n+    { return elems_[n]; }\n+\n+    constexpr T& operator[](unsigned long n)\n+    { return elems_[n]; }\n+};\n+\n+template <typename T>\n+CONSTEXPR void my_swap(T& a, T& b) {\n+    T tmp = a;\n+    a = b;\n+    b = tmp;\n+}\n+\n+CONSTEXPR auto rotate2() {\n+    array<array<int, 2>, 2> result{};\n+    array<int, 2> a{{0, 1}};\n+\n+    result[0] = a;\n+    my_swap(a[0], a[1]);\n+    result[1] = a;\n+\n+    return result;\n+}\n+\n+int main() {\n+    CONSTEXPR auto indices = rotate2();\n+    assert(indices[0][0] == 0);\n+    assert(indices[0][1] == 1);\n+    assert(indices[1][0] == 1);\n+    assert(indices[1][1] == 0);\n+}"}]}