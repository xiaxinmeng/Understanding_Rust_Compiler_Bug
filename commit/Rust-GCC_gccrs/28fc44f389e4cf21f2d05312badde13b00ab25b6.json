{"sha": "28fc44f389e4cf21f2d05312badde13b00ab25b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhmYzQ0ZjM4OWU0Y2YyMWYyZDA1MzEyYmFkZGUxM2IwMGFiMjViNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-01-20T12:02:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-01-20T12:02:33Z"}, "message": "re PR tree-optimization/46130 (ICE: SIGSEGV in walk_stmt_load_store_addr_ops (gimple.c:4894) with -O2 -fno-tree-dce)\n\n\tPR tree-optimization/46130\n\t* ipa-split.c (consider_split): If return_bb contains non-virtual\n\tPHIs other than for retval or if split_function would not adjust it,\n\trefuse to split.\n\n\t* gcc.dg/pr46130-1.c: New test.\n\t* gcc.dg/pr46130-2.c: New test.\n\nFrom-SVN: r169052", "tree": {"sha": "9d88e1e3f15ab9bfda1ee6aa938b99bb599b7bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d88e1e3f15ab9bfda1ee6aa938b99bb599b7bb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28fc44f389e4cf21f2d05312badde13b00ab25b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28fc44f389e4cf21f2d05312badde13b00ab25b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28fc44f389e4cf21f2d05312badde13b00ab25b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28fc44f389e4cf21f2d05312badde13b00ab25b6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddd268f2e96ce171c774df8707d4b32feb4961e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd268f2e96ce171c774df8707d4b32feb4961e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd268f2e96ce171c774df8707d4b32feb4961e7"}], "stats": {"total": 95, "additions": 92, "deletions": 3}, "files": [{"sha": "466579a1792e8cbca850255e468e236cad4f842d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28fc44f389e4cf21f2d05312badde13b00ab25b6", "patch": "@@ -1,3 +1,10 @@\n+2011-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/46130\n+\t* ipa-split.c (consider_split): If return_bb contains non-virtual\n+\tPHIs other than for retval or if split_function would not adjust it,\n+\trefuse to split.\n+\n 2011-01-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/47167"}, {"sha": "30060440fe273b66c5248b50798064abb7f9c1fa", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=28fc44f389e4cf21f2d05312badde13b00ab25b6", "patch": "@@ -411,9 +411,6 @@ consider_split (struct split_point *current, bitmap non_ssa_vars,\n \t\t \"  Refused: split part has non-ssa uses\\n\");\n       return;\n     }\n-  if (dump_file && (dump_flags & TDF_DETAILS))\n-    fprintf (dump_file, \"  Accepted!\\n\");\n-\n   /* See if retval used by return bb is computed by header or split part.\n      When it is computed by split part, we need to produce return statement\n      in the split part and add code to header to pass it around.\n@@ -451,6 +448,30 @@ consider_split (struct split_point *current, bitmap non_ssa_vars,\n   else\n     current->split_part_set_retval = true;\n \n+  /* split_function fixes up at most one PHI non-virtual PHI node in return_bb,\n+     for the return value.  If there are other PHIs, give up.  */\n+  if (return_bb != EXIT_BLOCK_PTR)\n+    {\n+      gimple_stmt_iterator psi;\n+\n+      for (psi = gsi_start_phis (return_bb); !gsi_end_p (psi); gsi_next (&psi))\n+\tif (is_gimple_reg (gimple_phi_result (gsi_stmt (psi)))\n+\t    && !(retval\n+\t\t && current->split_part_set_retval\n+\t\t && TREE_CODE (retval) == SSA_NAME\n+\t\t && !DECL_BY_REFERENCE (DECL_RESULT (current_function_decl))\n+\t\t && SSA_NAME_DEF_STMT (retval) == gsi_stmt (psi)))\n+\t  {\n+\t    if (dump_file && (dump_flags & TDF_DETAILS))\n+\t      fprintf (dump_file,\n+\t\t       \"  Refused: return bb has extra PHIs\\n\");\n+\t    return;\n+\t  }\n+    }\n+\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    fprintf (dump_file, \"  Accepted!\\n\");\n+\n   /* At the moment chose split point with lowest frequency and that leaves\n      out smallest size of header.\n      In future we might re-consider this heuristics.  */"}, {"sha": "c4880506aec48e3e4f8be7dcbce562780b78154f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28fc44f389e4cf21f2d05312badde13b00ab25b6", "patch": "@@ -1,3 +1,9 @@\n+2011-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/46130\n+\t* gcc.dg/pr46130-1.c: New test.\n+\t* gcc.dg/pr46130-2.c: New test.\n+\n 2011-01-19  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/47291"}, {"sha": "a0a582d2784c7a93e110916b329641b39619fa9e", "filename": "gcc/testsuite/gcc.dg/pr46130-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46130-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46130-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46130-1.c?ref=28fc44f389e4cf21f2d05312badde13b00ab25b6", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/46130 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-dce\" } */\n+\n+#include <stdarg.h>\n+\n+static void\n+foo (va_list ap)\n+{\n+  va_arg (ap, char *)[0];\n+}\n+\n+void\n+bar (va_list ap)\n+{\n+  foo (ap);\n+}\n+\n+void\n+baz (va_list ap)\n+{\n+  foo (ap);\n+}"}, {"sha": "991e5dd18353e7717dba5fcafd5a69f3eb62b018", "filename": "gcc/testsuite/gcc.dg/pr46130-2.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46130-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fc44f389e4cf21f2d05312badde13b00ab25b6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46130-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46130-2.c?ref=28fc44f389e4cf21f2d05312badde13b00ab25b6", "patch": "@@ -0,0 +1,32 @@\n+/* PR tree-optimization/46130 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-dce\" } */\n+\n+extern int bar (int);\n+\n+static int foo (int x)\n+{\n+  int z, w;\n+  if (x <= 1024)\n+    {\n+      z = 16;\n+      w = 17;\n+    }\n+  else\n+    {\n+      bar (bar (bar (bar (bar (bar (bar (bar (bar (16)))))))));\n+      if (x > 131072)\n+\tw = 19;\n+      else\n+\tw = 21;\n+      z = 32;\n+    }\n+  w = w + 121;\n+  return z;\n+}\n+\n+int\n+baz (int x)\n+{\n+  return foo (x + 6) + foo (x + 15) + foo (x + 24);\n+}"}]}