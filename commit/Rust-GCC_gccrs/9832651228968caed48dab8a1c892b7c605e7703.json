{"sha": "9832651228968caed48dab8a1c892b7c605e7703", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgzMjY1MTIyODk2OGNhZWQ0OGRhYjhhMWM4OTJiN2M2MDVlNzcwMw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2014-07-24T17:15:12Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2014-07-24T17:15:12Z"}, "message": "rs6000-protos.h (rs6000_special_adjust_field_align_p): Add prototype.\n\ngcc/\n\n\t* config/rs6000/rs6000-protos.h (rs6000_special_adjust_field_align_p):\n\tAdd prototype.\n\t* config/rs6000/rs6000.c (rs6000_special_adjust_field_align_p): New\n\tfunction.\n\t* config/rs6000/sysv4.h (ADJUST_FIELD_ALIGN): Call it.\n\t* config/rs6000/linux64.h (ADJUST_FIELD_ALIGN): Likewise.\n\t* config/rs6000/freebsd64.h (ADJUST_FIELD_ALIGN): Likewise.\n\ngcc/testsuite/\n\n\t* gcc.target/powerpc/ppc64-abi-warn-3.c: New test.\n\n\t* gcc.c-torture/execute/20050316-1.x: Add -Wno-psabi.\n\t* gcc.c-torture/execute/20050604-1.x: Add -Wno-psabi.\n\t* gcc.c-torture/execute/20050316-3.x: New file.  Add -Wno-psabi.\n\t* gcc.c-torture/execute/pr23135.x: Likewise.\n\nFrom-SVN: r213017", "tree": {"sha": "0a562ea81d75119f66c3d52308785919bbd0d5c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a562ea81d75119f66c3d52308785919bbd0d5c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9832651228968caed48dab8a1c892b7c605e7703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9832651228968caed48dab8a1c892b7c605e7703", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9832651228968caed48dab8a1c892b7c605e7703", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9832651228968caed48dab8a1c892b7c605e7703/comments", "author": null, "committer": null, "parents": [{"sha": "e1089c7a5caebffb0986d87435d2bfaf6bb55d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1089c7a5caebffb0986d87435d2bfaf6bb55d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1089c7a5caebffb0986d87435d2bfaf6bb55d89"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "8343c897408617224e8740f2c3e6dc88562df183", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -1,3 +1,13 @@\n+2014-07-24  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/rs6000/rs6000-protos.h (rs6000_special_adjust_field_align_p):\n+\tAdd prototype.\n+\t* config/rs6000/rs6000.c (rs6000_special_adjust_field_align_p): New\n+\tfunction.\n+\t* config/rs6000/sysv4.h (ADJUST_FIELD_ALIGN): Call it.\n+\t* config/rs6000/linux64.h (ADJUST_FIELD_ALIGN): Likewise.\n+\t* config/rs6000/freebsd64.h (ADJUST_FIELD_ALIGN): Likewise.\n+\n 2014-07-24  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_function_arg_boundary): In the AIX"}, {"sha": "1f3ef199e867d03466d93d92bd13616f7ff371c8", "filename": "gcc/config/rs6000/freebsd64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -367,7 +367,7 @@ extern int dot_symbols;\n /* PowerPC64 Linux word-aligns FP doubles when -malign-power is given.  */\n #undef  ADJUST_FIELD_ALIGN\n #define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n-  ((TARGET_ALTIVEC && TREE_CODE (TREE_TYPE (FIELD)) == VECTOR_TYPE)     \\\n+  (rs6000_special_adjust_field_align_p ((FIELD), (COMPUTED))\t\t\\\n    ? 128                                                                \\\n    : (TARGET_64BIT                                                      \\\n       && TARGET_ALIGN_NATURAL == 0                                      \\"}, {"sha": "0ca05d2f6a24c7f70eb4279558a8ef647ee9e778", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -246,7 +246,7 @@ extern int dot_symbols;\n /* PowerPC64 Linux word-aligns FP doubles when -malign-power is given.  */\n #undef  ADJUST_FIELD_ALIGN\n #define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n-  ((TARGET_ALTIVEC && TREE_CODE (TREE_TYPE (FIELD)) == VECTOR_TYPE)\t\\\n+  (rs6000_special_adjust_field_align_p ((FIELD), (COMPUTED))\t\t\\\n    ? 128\t\t\t\t\t\t\t\t\\\n    : (TARGET_64BIT\t\t\t\t\t\t\t\\\n       && TARGET_ALIGN_NATURAL == 0\t\t\t\t\t\\"}, {"sha": "82564db5c905dc063d7758b1a076c0653cea89ee", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -155,6 +155,7 @@ extern void rs6000_split_logical (rtx [], enum rtx_code, bool, bool, bool, rtx);\n \n #ifdef TREE_CODE\n extern unsigned int rs6000_data_alignment (tree, unsigned int, enum data_align);\n+extern bool rs6000_special_adjust_field_align_p (tree, unsigned int);\n extern unsigned int rs6000_special_round_type_align (tree, unsigned int,\n \t\t\t\t\t\t     unsigned int);\n extern unsigned int darwin_rs6000_special_round_type_align (tree, unsigned int,"}, {"sha": "b52b8a1af1a388d4bb34ee89b078ba31d7128708", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -5880,6 +5880,32 @@ rs6000_data_alignment (tree type, unsigned int align, enum data_align how)\n   return align;\n }\n \n+/* Previous GCC releases forced all vector types to have 16-byte alignment.  */\n+\n+bool\n+rs6000_special_adjust_field_align_p (tree field, unsigned int computed)\n+{\n+  if (TARGET_ALTIVEC && TREE_CODE (TREE_TYPE (field)) == VECTOR_TYPE)\n+    {\n+      if (computed != 128)\n+\t{\n+\t  static bool warned;\n+\t  if (!warned && warn_psabi)\n+\t    {\n+\t      warned = true;\n+\t      inform (input_location,\n+\t\t      \"the layout of aggregates containing vectors with\"\n+\t\t      \" %d-byte alignment has changed in GCC 4.10\",\n+\t\t      computed / BITS_PER_UNIT);\n+\t    }\n+\t}\n+      /* In current GCC there is no special case.  */\n+      return false;\n+    }\n+\n+  return false;\n+}\n+\n /* AIX increases natural record alignment to doubleword if the first\n    field is an FP double while the FP fields remain word aligned.  */\n "}, {"sha": "b96c5d933176dcf8ba54c893fc30108cc0cc1479", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -292,7 +292,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* An expression for the alignment of a structure field FIELD if the\n    alignment computed in the usual way is COMPUTED.  */\n #define ADJUST_FIELD_ALIGN(FIELD, COMPUTED)\t\t\t\t      \\\n-\t((TARGET_ALTIVEC && TREE_CODE (TREE_TYPE (FIELD)) == VECTOR_TYPE)     \\\n+\t(rs6000_special_adjust_field_align_p ((FIELD), (COMPUTED))\t      \\\n \t ? 128 : COMPUTED)\n \n #undef  BIGGEST_FIELD_ALIGNMENT"}, {"sha": "17daa074a940ef7f36f0e07f528e42436505b9f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -1,3 +1,12 @@\n+2014-07-24  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* gcc.target/powerpc/ppc64-abi-warn-3.c: New test.\n+\n+\t* gcc.c-torture/execute/20050316-1.x: Add -Wno-psabi.\n+\t* gcc.c-torture/execute/20050604-1.x: Add -Wno-psabi.\n+\t* gcc.c-torture/execute/20050316-3.x: New file.  Add -Wno-psabi.\n+\t* gcc.c-torture/execute/pr23135.x: Likewise.\n+\n 2014-07-24  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* gcc.target/powerpc/ppc64-abi-warn-2.c: New test."}, {"sha": "cb2d28fd9fc9f71196a860a34e9189664064134d", "filename": "gcc/testsuite/gcc.c-torture/execute/20050316-1.x", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-1.x?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -4,4 +4,5 @@ if { [check_effective_target_int16] } {\n \treturn 1\n }\n \n+set additional_flags \"-Wno-psabi\"\n return 0;"}, {"sha": "cb7b119b8cb171c2882eb5f6f6073ebf806f1b71", "filename": "gcc/testsuite/gcc.c-torture/execute/20050316-3.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050316-3.x?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -0,0 +1,2 @@\n+set additional_flags \"-Wno-psabi\"\n+return 0"}, {"sha": "756242d23450da0daff95528b6c912b9b3581707", "filename": "gcc/testsuite/gcc.c-torture/execute/20050604-1.x", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050604-1.x?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -6,4 +6,5 @@ if { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n \tset additional_flags \"-mno-mmx\"\n }\n \n+set additional_flags \"-Wno-psabi\"\n return 0"}, {"sha": "cb7b119b8cb171c2882eb5f6f6073ebf806f1b71", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23135.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.x?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -0,0 +1,2 @@\n+set additional_flags \"-Wno-psabi\"\n+return 0"}, {"sha": "22cad0ccd5c55f352520d16765919dc09fde510f", "filename": "gcc/testsuite/gcc.target/powerpc/ppc64-abi-warn-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-warn-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9832651228968caed48dab8a1c892b7c605e7703/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-warn-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-warn-3.c?ref=9832651228968caed48dab8a1c892b7c605e7703", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { powerpc*-*-linux* && lp64 } } } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec\" } */\n+\n+struct test\n+  {\n+    int a __attribute__((vector_size (8)));\n+  }; /* { dg-message \"note: the layout of aggregates containing vectors with 8-byte alignment has changed\" } */\n+"}]}