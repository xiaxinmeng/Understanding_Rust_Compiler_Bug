{"sha": "754d67d5ba4a1f9994210d402893a4cf49ce6a71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU0ZDY3ZDViYTRhMWY5OTk0MjEwZDQwMjg5M2E0Y2Y0OWNlNmE3MQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-06-12T16:37:28Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-06-12T16:37:28Z"}, "message": "PR libstdc++/55917 do not handle exceptions in std::thread\n\n\tPR libstdc++/55917\n\t* src/c++11/thread.cc (execute_native_thread_routine): Remove\n\ttry-block so that exceptions propagate out of the thread and terminate\n\tis called by the exception-handling runtime.\n\t(execute_native_thread_routine_compat): Likewise.\n\t* testsuite/30_threads/thread/cons/terminate.cc: New.\n\nFrom-SVN: r249130", "tree": {"sha": "c6cb9b0e945fa058d0d59c766b3472eab868a3d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6cb9b0e945fa058d0d59c766b3472eab868a3d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/754d67d5ba4a1f9994210d402893a4cf49ce6a71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754d67d5ba4a1f9994210d402893a4cf49ce6a71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754d67d5ba4a1f9994210d402893a4cf49ce6a71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754d67d5ba4a1f9994210d402893a4cf49ce6a71/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "196ed8eae5698eaa2f4b7d77e3d9b3d753d01c8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196ed8eae5698eaa2f4b7d77e3d9b3d753d01c8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196ed8eae5698eaa2f4b7d77e3d9b3d753d01c8a"}], "stats": {"total": 87, "additions": 59, "deletions": 28}, "files": [{"sha": "9e0a5908e65176ddd7e89a778788162ae51c28ce", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754d67d5ba4a1f9994210d402893a4cf49ce6a71/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754d67d5ba4a1f9994210d402893a4cf49ce6a71/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=754d67d5ba4a1f9994210d402893a4cf49ce6a71", "patch": "@@ -1,3 +1,12 @@\n+2017-06-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/55917\n+\t* src/c++11/thread.cc (execute_native_thread_routine): Remove\n+\ttry-block so that exceptions propagate out of the thread and terminate\n+\tis called by the exception-handling runtime.\n+\t(execute_native_thread_routine_compat): Likewise.\n+\t* testsuite/30_threads/thread/cons/terminate.cc: New.\n+\n 2017-06-09  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/intro.xml: Document LWG 2802, 2873 and 2942 changes."}, {"sha": "4a94bdd2f8c277f5594edad65022ab7a7c76f119", "filename": "libstdc++-v3/src/c++11/thread.cc", "status": "modified", "additions": 2, "deletions": 28, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754d67d5ba4a1f9994210d402893a4cf49ce6a71/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754d67d5ba4a1f9994210d402893a4cf49ce6a71/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc?ref=754d67d5ba4a1f9994210d402893a4cf49ce6a71", "patch": "@@ -77,20 +77,7 @@ namespace std _GLIBCXX_VISIBILITY(default)\n     execute_native_thread_routine(void* __p)\n     {\n       thread::_State_ptr __t{ static_cast<thread::_State*>(__p) };\n-\n-      __try\n-\t{\n-\t  __t->_M_run();\n-\t}\n-      __catch(const __cxxabiv1::__forced_unwind&)\n-\t{\n-\t  __throw_exception_again;\n-\t}\n-      __catch(...)\n-\t{\n-\t  std::terminate();\n-\t}\n-\n+      __t->_M_run();\n       return nullptr;\n     }\n \n@@ -104,20 +91,7 @@ namespace std _GLIBCXX_VISIBILITY(default)\n       // the thread state to a local object, breaking the reference cycle\n       // created in thread::_M_start_thread.\n       __local.swap(__t->_M_this_ptr);\n-\n-      __try\n-\t{\n-\t  __t->_M_run();\n-\t}\n-      __catch(const __cxxabiv1::__forced_unwind&)\n-\t{\n-\t  __throw_exception_again;\n-\t}\n-      __catch(...)\n-\t{\n-\t  std::terminate();\n-\t}\n-\n+      __t->_M_run();\n       return nullptr;\n     }\n #endif"}, {"sha": "4b35b6c6024f3dbc6121217ab057e7c493a88e28", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/terminate.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754d67d5ba4a1f9994210d402893a4cf49ce6a71/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fterminate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754d67d5ba4a1f9994210d402893a4cf49ce6a71/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fterminate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fterminate.cc?ref=754d67d5ba4a1f9994210d402893a4cf49ce6a71", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* *-*-cygwin *-*-rtems* *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-dragonfly* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* powerpc-ibm-aix* } }\n+// { dg-require-effective-target c++11 }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+#include <thread>\n+#include <exception>\n+#include <cstdlib>\n+\n+void handle_terminate()\n+{\n+  std::_Exit(0);\n+}\n+\n+void f() { throw 1; }\n+\n+void\n+test01()\n+{\n+  std::set_terminate(handle_terminate);\n+  std::thread t(f);\n+  t.join();\n+  std::abort();\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}