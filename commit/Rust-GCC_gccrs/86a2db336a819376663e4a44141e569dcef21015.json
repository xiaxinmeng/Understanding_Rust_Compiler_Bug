{"sha": "86a2db336a819376663e4a44141e569dcef21015", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZhMmRiMzM2YTgxOTM3NjY2M2U0YTQ0MTQxZTU2OWRjZWYyMTAxNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-03T09:47:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-03T09:47:48Z"}, "message": "ChangeLog rotation.\n\nFrom-SVN: r194840", "tree": {"sha": "a7e0dd19492d146ef91293541c8f09d39359ff7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7e0dd19492d146ef91293541c8f09d39359ff7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86a2db336a819376663e4a44141e569dcef21015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a2db336a819376663e4a44141e569dcef21015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a2db336a819376663e4a44141e569dcef21015", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a2db336a819376663e4a44141e569dcef21015/comments", "author": null, "committer": null, "parents": [{"sha": "f09b77caca9f023cf007fed9746490ba1e7bd774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f09b77caca9f023cf007fed9746490ba1e7bd774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f09b77caca9f023cf007fed9746490ba1e7bd774"}], "stats": {"total": 134803, "additions": 67462, "deletions": 67341}, "files": [{"sha": "da7cc295e71c5453f7da597f8901398b4bb78f06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 35420, "changes": 35421, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "ae21e02ff38a235a8a0247ee3659a3198113435b", "filename": "gcc/ChangeLog-2012", "status": "added", "additions": 35424, "deletions": 0, "changes": 35424, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2012?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "5416e12e7e296e58e64db139e117c6f7e7bfd2ca", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1, "deletions": 8690, "changes": 8691, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "2bb659a52debcb7a5913825602909ccb71435e63", "filename": "gcc/ada/ChangeLog-2012", "status": "added", "additions": 8694, "deletions": 0, "changes": 8694, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2Fada%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2Fada%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog-2012?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "1690aebbfc91fe38e49ef2a0f707053a66ac6d9d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 1, "deletions": 3063, "changes": 3064, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "a57051ebf5fa1587b7f44929b9bc714ada1a9865", "filename": "gcc/cp/ChangeLog-2012", "status": "added", "additions": 3067, "deletions": 0, "changes": 3067, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2Fcp%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2Fcp%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog-2012?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "1fc88f22e070318ef64a83195fe627f9312693c0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 1, "deletions": 2794, "changes": 2795, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -2,2801 +2,8 @@\n \n \t* gfortranspec.c (lang_specific_driver): Update copyright notice\n \tdates.\n-\n-2012-12-28  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55692\n-\t* check.c (gfc_check_associated): Remove a \"gcc_assert (0)\".\n-\n-2012-12-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55763\n-\t* check.c (gfc_check_move_alloc): Handle unlimited polymorphic.\n-\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Ditto.\n-\n-2012-12-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR fortran/48976\n-\t* gfortran.h (gfc_inquire struct): Add pointer for inquire stream.\n-\t* io.c (io_tag): Add tag for inquire stream. (match_inquire_element):\n-\tAdd matcher for new tag. (gfc_resolve_inquire): Resolve new tag.\n-\t* ioparm.def: Add new parameter for inquire stream.\n-\t* trans-io.c (gfc_trans_inquire): Add tranlste code for inquire\n-\tstream.\n-\n-2012-12-23  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54884\n-\t* module.c (write_symbol1_recursion): Set attr.public_use.\n-\t* interface.c (check_sym_interfaces, check_uop_interfaces,\n-\tgfc_check_interfaces): Remove attr.public_use code.\n-\t* resolve.c (resolve_function, resolve_variable,\n-\tresolve_typebound_procedure): Ditto.\n-\n-2012-12-22  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55763\n-\t* module.c (mio_component): Don't skip _hash's initializer.\n-\t* resolve.c (resolve_select_type): Add an assert.\n-\t* trans-expr.c (gfc_conv_procedure_call): Handle\n-\tINTENT(OUT) for UNLIMIT_POLY.\n-\n-2012-12-21  Richard Biener  <rguenther@suse.de>\n-\n-\tPR bootstrap/54659\n-\t* gfortran.h: Do not include gmp.h here.\n-\n-2012-12-21  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/55763\n-\t* match.c (select_type_set_tmp): Return is a derived type or\n-\tclass typespec has no derived type.\n-\t* resolve.c (resolve_fl_var_and_proc): Exclude select type\n-\ttemporaries from 'pointer'.\n-\t(resolve_symbol): Exclude select type temporaries from tests\n-\tfor assumed size and assumed rank.\n-\n-2012-12-20  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/36044\n-\t* gfortran.h (gfc_isym_id): Add GFC_ISYM_BACKTRACE.\n-\t* intrinsic.c (add_subroutines): Add \"backtrace\".\n-\t* intrinsic.texi (BACKTRACE): Document BACKTRACE intrinsic.\n-\n-2012-12-20  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54818\n-\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer): Ensure that\n-\tthe string length is of type gfc_charlen_type_node.\n-\n-2012-12-19  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\t* array.c (resolve_array_list): Apply C4106.\n-\t* check.c (gfc_check_same_type_as): Exclude polymorphic\n-\tentities from check for extensible types. Improved error\n-\tfor disallowed argument types to name the offending type.\n-\t* class.c : Update copyright date.\n-\t(gfc_class_null_initializer): Add argument for initialization\n-\texpression and deal with unlimited polymorphic typespecs.\n-\t(get_unique_type_string): Give unlimited polymorphic\n-\tentities a type string.\n-\t(gfc_intrinsic_hash_value): New function.\n-\t(gfc_build_class_symbol): Incorporate unlimited polymorphic\n-\tentities.\n-\t(gfc_find_derived_vtab): Deal with unlimited polymorphic\n-\tentities.\n-\t(gfc_find_intrinsic_vtab): New function.\n-\t* decl.c (gfc_match_decl_type_spec): Match typespec for\n-\tunlimited polymorphic type.\n-\t(gfc_match_data_decl): Skip to 'ok' if unlimited polymorphic.\n-\texpr.c (gfc_check_pointer_assign): Apply C717.  If unlimited\n-\tpolymorphic lvalue, find rvalue vtable for all typespecs,\n-\texcept unlimited polymorphic expressions.\n-\t(gfc_check_vardef_context): Handle unlimited polymorphic\n-\tentities.\n-\t* gfortran.h : Add unlimited polymorphic attribute. Add\n-\tsecond arg to gfc_class_null_initializer primitive and\n-\tprimitive for gfc_find_intrinsic_vtab.  Add UNLIMITED_POLY\n-\tto detect unlimited polymorphic expressions.\n-\t* interface.c (gfc_compare_types): If expr1 is unlimited\n-\tpolymorphic, always return 1. If expr2 is unlimited polymorphic\n-\tenforce C717.\n-\t(gfc_compare_interfaces): Skip past conditions that do not\n-\tapply for unlimited polymorphic entities.\n-\t(compare_parameter): Make sure that an unlimited polymorphic,\n-\tallocatable or pointer, formal argument is matched by an\n-\tunlimited polymorphic actual argument.\n-\t(compare_actual_formal): Ensure that an intrinsic vtable exists\n-\tto match an unlimited polymorphic formal argument.\n-\t* match.c (gfc_match_allocate): Type kind parameter does not\n-\tneed to match an unlimited polymorphic allocate-object.\n-\t(alloc_opt_list): An unlimited polymorphic allocate-object\n-\trequires a typespec or a SOURCE tag.\n-\t(select_intrinsic_set_tmp): New function.\n-\t(select_type_set_tmp): Call new function.  If it returns NULL,\n-\tbuild a derived type or class temporary instead.\n-\t(gfc_match_type_is): Remove restriction to derived types only.\n-\tBind(C) or sequence derived types not permitted.\n-\t* misc (gfc_typename):  Printed CLASS(*) for unlimited\n-\tpolymorphism.\n-\t* module.c : Add AB_UNLIMITED_POLY to pass unlimited\n-\tpolymorphic attribute to and from modules.\n-\t* resolve.c (resolve_common_vars): Unlimited polymorphic\n-\tentities cannot appear in common blocks.\n-\t(resolve_deallocate_expr): Deallocate unlimited polymorphic\n-\tenities.\n-\t(resolve_allocate_expr): Likewise for allocation.  Make sure\n-\tvtable exists.\n-\t(gfc_type_is_extensible): Unlimited polymorphic entities are\n-\tnot extensible.\n-\t(resolve_select_type): Handle unlimited polymorphic selectors.\n-\tEnsure that length type parameters are assumed and that names\n-\tfor intrinsic types are generated.\n-\t(resolve_fl_var_and_proc): Exclude select type temporaries\n-\tfrom test of extensibility of type.\n-\t(resolve_fl_variable): Likewise for test that assumed character\n-\tlength must be a dummy or a parameter.\n-\t(resolve_fl_derived0): Return SUCCESS unconditionally for\n-\tunlimited polymorphic entities. Also, allow unlimited\n-\tpolymorphic components.\n-\t(resolve_fl_derived): Return SUCCESS unconditionally for\n-\tunlimited polymorphic entities.\n-\t(resolve_symbol): Return early with unlimited polymorphic\n-\tentities.\n-\t* simplifiy.c : Update copyright year.\n-\t(gfc_simplify_extends_type_of): No simplification possible\n-\tfor unlimited polymorphic arguments.\n-\t* symbol.c (gfc_use_derived): Nothing to do for unlimited\n-\tpolymorphic \"derived type\".\n-\t(gfc_type_compatible): Return unity if ts1 is unlimited\n-\tpolymorphic.\n-\t* trans-decl.c (create_function_arglist) Formal arguments\n-\twithout a character length should be treated in the same way\n-\tas passed lengths.\n-\t(gfc_trans_deferred_vars): Nullify the vptr of unlimited\n-\tpolymorphic pointers. Avoid unlimited polymorphic entities\n-\ttriggering gcc_unreachable.\n-\t* trans-expr.c (gfc_conv_intrinsic_to_class): New function.\n-\t(gfc_trans_class_init_assign): Make indirect reference of\n-\tsrc.expr.\n-\t(gfc_trans_class_assign): Expression NULL of unknown type\n-\tshould set NULL vptr on lhs. Treat C717 cases where lhs is\n-\ta derived type and the rhs is unlimited polymorphic.\n-\t(gfc_conv_procedure_call): Handle the conversion of a non-class\n-\tactual argument to match an unlimited polymorphic formal\n-\targument.  Suppress the passing of a character string length\n-\tin this case.  Make sure that calls to the character __copy\n-\tfunction have two character string length arguments.\n-\t(gfc_conv_initializer): Pass the initialization expression to\n-\tgfc_class_null_initializer.\n-\t(gfc_trans_subcomponent_assign): Ditto.\n-\t(gfc_conv_structure): Move handling of _size component.\n-\ttrans-intrinsic.c: (gfc_conv_same_type_as): Handle conditions\n-\twhere unlimited polymorphic arguments have null vptr.\n-\t* trans-stmt.c (trans_associate_var): Correctly treat array\n-\ttemporaries associated with unlimited polymorphic selectors.\n-\tRecover the overwritten dtype for the descriptor. Use the _size\n-\tfield of the vptr for character string lengths.\n-\t(gfc_trans_allocate): Cope with unlimited polymorphic allocate\n-\tobjects; especially with character source tags.\n-\t(reset_vptr): New function.\n-\t(gfc_trans_deallocate): Call it.\n-\t* trans-types.c (gfc_get_derived_type): Detect unlimited\n-\tpolymorphic types and deal with cases where the derived type of\n-\tcomponents is null.\n-\t* trans.c : Update copyright year.\n-\t(trans_code): Call gfc_trans_class_assign for C717 cases where\n-\tthe lhs is not unlimited polymorphic.\n-\n-2012-12-19  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55733\n-\t* trans-decl.c (gfc_create_string_length): Avoid setting\n-\tTREE_STATIC for automatic variables with -fno-automatic.\n-\n-2012-12-19  Tobias Burnus  <burnus@net-b.de>\n-\t    Jakub Jelinek  <jakub@redhat.com>\n-\t    Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55636\n-\tPR fortran/55733\n-\t* gfortran.h (GFC_PREFIX): Define.\n-\t* trans-decl.c (gfc_create_string_length): For VAR_DECLs that\n-\twill be TREE_STATIC, use GFC_PREFIX to mangle the names. Handle\n-\t-fno-automatic\n-\t(gfc_trans_deferred_vars): Don't free variables SAVEd via\n-\t-fno-automatic.\n-\n-2012-12-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55197\n-\t* module.c (gfc_use_module): Free rename list only for\n-\tinternally generated intrinsic modules.\n-\n-2012-12-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Set dynamic\n-\ttype of the FROM variable to the declared type.\n-\n-2012-12-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55638\n-\t* resolve.c (resolve_formal_arglist): Allow VALUE without\n-\tINTENT for ELEMENTAL procedures.\n-\n-2012-12-10  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/52909\n-\t* trans-decl.c (get_proc_pointer_decl): Apply name mangling.\n-\n-2012-12-09  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-array.c (structure_alloc_comps): Use NULL_TREE in the\n-\tcall to gfc_deallocate_scalar_with_status.\n-\t* trans-decl.c (gfc_trans_deferred_vars): Pass symbol.\n-\t* trans-stmt.c (gfc_trans_deallocate): Pass polymorphic variable.\n-\n-2012-12-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/55593\n-\t* frontend-passes.c (doloop_code):  Use resolved_sym\n-\tinstead of n.sym->formal for formal argument list\n-\tto get the correct version for all generic subroutines.\n-\n-2012-12-05  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* resolve.c (generate_component_assignments): Fix memleak.\n-\n-2012-12-03  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55548\n-\t* intrinsic.texi (SYSTEM_CLOCK): Update documentation of SYSTEM_CLOCK.\n-\n-2012-12-03  Tobias Burnus  <burnus@net-b.de>\n-\t    Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/37336\n-\t* class.c (gfc_is_finalizable): New function.\n-\t* gfortran.h (gfc_is_finalizable): Its prototype.\n-\t* module.c (mio_component): Read initializer for vtype's _final.\n-\t* resolve.c (resolve_fl_derived0): Call gfc_is_finalizable.\n-\t* trans-expr.c (gfc_vtable_final_get): New function.\n-\t(conv_parent_component_references): Fix comment.\n-\t(gfc_conv_variable): Fix for scalar coarray components.\n-\t* trans-intrinsic.c (conv_intrinsic_move_alloc): For BT_CLASS,\n-\tpass the BT_CLASS type and not the declared type to\n-\tgfc_deallocate_scalar_with_status.\n-\t* trans.h (gfc_vtable_final_get): New prototype.\n-\n-2012-12-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55475\n-\t* scanner.c (gfc_next_char_literal): Fix setting locus\n-\tto free_line_length for the error message.\n-\t* error.c (show_locus): Fix potential out-of-bounds\n-\tread.\n-\n-2012-12-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/37336\n-\t* class.c (finalizer_insert_packed_call): New static function.\n-\t(finalize_component, generate_finalization_wrapper):\n-\tFix coarray handling and packing.\n-\n-2012-12-02  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\t* resolve.c (resolve_allocate_deallocate,\n-\tresolve_typebound_intrinsic_op): Recover revisions 193568 and\n-\t193778, which were accidentally reverted by the previous patch.\n-\n-2012-12-01   Alessandro Fanfarillo <alessandro.fanfarillo@gmail.com>\n-\t     Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/46897\n-\t* gfortran.h : Add bit field 'defined_assign_comp' to\n-\tsymbol_attribute structure.\n-\tAdd primitive for gfc_add_full_array_ref.\n-\t* expr.c (gfc_add_full_array_ref): New function.\n-\t(gfc_lval_expr_from_sym): Call new function.\n-\t* resolve.c (add_comp_ref): New function.\n-\t(build_assignment): New function.\n-\t(get_temp_from_expr): New function\n-\t(add_code_to_chain): New function\n-\t(generate_component_assignments): New function that calls all\n-\tthe above new functions.\n-\t(resolve_code): Call generate_component_assignments.\n-\t(check_defined_assignments): New function.\n-\t(resolve_fl_derived0): Call check_defined_assignments.\n-\t(gfc_resolve): Reset component_assignment_level in case it is\n-\tleft in a bad state by errors.\n-\n-\n-\t* resolve.c (is_sym_host_assoc, resolve_procedure_interface,\n-\tresolve_contained_fntype, resolve_procedure_expression,\n-\tresolve_elemental_actual, resolve_global_procedure,\n-\tis_scalar_expr_ptr, gfc_iso_c_func_interface, resolve_function,\n-\tset_name_and_label, gfc_iso_c_sub_interface,\n-\tresolve_specific_s0, resolve_operator, compare_bound_mpz_t,\n-\tgfc_resolve_character_operator, resolve_typebound_function,\n-\tgfc_resolve_expr, forall_index, remove_last_array_ref,\n-\tconformable_arrays, resolve_allocate_expr,\n-\tresolve_allocate_deallocate, resolve_select_type,\n-\tresolve_transfer, resolve_where,\n-\tgfc_resolve_where_code_in_forall, gfc_resolve_forall_body,\n-\tgfc_count_forall_iterators, resolve_values,\n-\tresolve_bind_c_comms, resolve_bind_c_derived_types,\n-\tgfc_verify_binding_labels, apply_default_init,\n-\tbuild_default_init_expr, apply_default_init_local,\n-\tresolve_fl_var_and_proc, resolve_fl_procedure,\n-\tgfc_resolve_finalizers, check_generic_tbp_ambiguity,\n-\tresolve_typebound_intrinsic_op, resolve_typebound_procedure,\n-\tresolve_typebound_procedures, ensure_not_abstract,\n-\tresolve_fl_derived0, resolve_fl_parameter, resolve_symbol,\n-\tresolve_equivalence_derived): Remove trailing white space.\n-\t* gfortran.h : Remove trailing white space.\n-\n-2012-11-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52161\n-\t* trans-stmt.c (gfc_trans_sync): Fix bound checking\n-\tfor -fcoarray=lib.\n-\n-2012-11-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52161\n-\t* trans-stmt.c (gfc_trans_sync): Fix bound checking.\n-\n-2012-11-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55476\n-\t* expr.c (gfc_check_pointer_assign): Fix check\n-\tpointer-might-outlive-target check for host_assoc.\n-\n-2012-11-26  Eric Botcazou  <ebotcazou@adacore.com>\n-\n-\t* trans-decl.c (gfc_finish_var_decl): Do not set DECL_RESTRICTED_P.\n-\n-2012-11-26  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54997\n-\t* decl.c (match_procedure_decl): Don't set 'referenced' attribute\n-\tfor PROCEDURE declarations.\n-\t* parse.c (gfc_fixup_sibling_symbols,parse_contained): Don't set\n-\t'referenced' attribute for all contained procedures.\n-\t* trans-decl.c (gfc_get_symbol_decl): Allow for unreferenced procedures.\n-\t(build_function_decl): Set TREE_USED for referenced procedures.\n-\n-2012-11-26  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54881\n-\t* match.c (select_derived_set_tmp,select_class_set_tmp): Removed and\n-\tunified into ...\n-\t(select_type_set_tmp): ... this one. Set POINTER argument according to\n-\tselector.\n-\t* trans-intrinsic.c (gfc_conv_associated): Use 'gfc_class_data_get'\n-\tinstead of 'gfc_add_data_component'.\n-\n-2012-11-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/30146\n-\t* frontend-passes.c (doloop_warn):  New function.\n-\t(doloop_list):  New static variable.\n-\t(doloop_size):  New static variable.\n-\t(doloop_level):  New static variable.\n-\t(gfc_run_passes): Call doloop_warn.\n-\t(doloop_code):  New function.\n-\t(doloop_function):  New function.\n-\t(gfc_code_walker):  Keep track of DO level.\n-\n-2012-11-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/55314\n-\t* resolve.c (resolve_allocate_deallocate):  Compare all\n-\tsubscripts when deciding if to reject a (de)allocate\n-\tstatement.\n-\n-2012-11-21  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55352\n-\t* trans-decl.c (generate_local_decl): Don't warn for explicitly imported\n-\tbut unused module variables which are in a namelist or common block.\n-\n-2012-11-20  Diego Novillo  <dnovillo@google.com>\n-\t    Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* trans-openmp.c: Replace all vec<T, A>() initializers\n-\twith vNULL.\n-\n-2012-11-17  Diego Novillo  <dnovillo@google.com>\n-\n-\tAdjust for new vec API (http://gcc.gnu.org/wiki/cxx-conversion/cxx-vec)\n-\n-\t* frontend-passes.c: Use new vec API in vec.h.\n-\t* trans-array.c: Likewise.\n-\t* trans-common.c: Likewise.\n-\t* trans-decl.c: Likewise.\n-\t* trans-expr.c: Likewise.\n-\t* trans-intrinsic.c: Likewise.\n-\t* trans-openmp.c: Likewise.\n-\t* trans-stmt.c: Likewise.\n-\t* trans-types.c: Likewise.\n-\t* trans.h: Likewise.\n-\n-2012-11-17  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tPR fortran/55341\n-\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer): Convert last\n-\targument to memcpy to size_type_node type.\n-\t* trans-stmt.c (gfc_conv_elemental_dependencies): Likewise.\n-\t* trasn-array.c (duplicate_allocatable): Likewise.\n-\n-2012-11-16  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55297\n-\t* resolve.c (resolve_typebound_intrinsic_op): Only add typebound\n-\toperators to the operator list in the namespace of the derived type.\n-\n-\n-2012-11-12  Jan Hubicka  <jh@suse.cz>\n-\n-\t* f95-lang.c (ATTR_NOTHROW_LEAF_MALLOC_LIST): New macro.\n-\t(gfc_define_builtin): Use set_call_expr_flags.\n-\t(gfc_init_builtin_functions): Update.\n-\n-2012-11-12  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55272\n-\t* module.c (mio_array_spec): Correctly handle coarray\n-\tscalars.\n-\n-2012-11-07  Tobias Schl\u00fcter  <tobi@gcc.gnu.org>\n-\n-\tPR fortran/51727\n-\t* module.c (sorted_pointer_info): New.\n-\t(gfc_get_sorted_pointer_info): New.\n-\t(free_sorted_pointer_info_tree): New.\n-\t(compare_sorted_pointer_info): New.\n-\t(find_symbols_to_write): New.\n-\t(write_symbol1_recursion): New.\n-\t(write_symbol1): Collect symbols that need writing, output in order.\n-\t(write_generic): Traverse tree in order.\n-\n-2012-11-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n-\n-\tPR c/53063\n-\t* options.c (set_Wall): Do not set warn_switch here.\n-\n-2012-11-06  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54917\n-\t* target-memory.c (gfc_target_expr_size,gfc_target_interpret_expr):\n-\tHandle BT_CLASS.\n-\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer): Add support for\n-\tpolymorphic arguments.\n-\n-2012-11-04  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55199\n-\t* primary.c (gfc_match_varspec): Clear typespec if it cannot be\n-\tdetermined at this point.\n-\n-2012-10-31  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/53718\n-\t* trans.h (GFC_DECL_PUSH_TOPLEVEL): Removed.\n-\t* trans-decl.c (gfc_get_symbol_decl,gfc_generate_function_code): Remove\n-\tGFC_DECL_PUSH_TOPLEVEL.\n-\t(build_function_decl): Do not push __copy procedure to toplevel.\n-\n-2012-10-31  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/55134\n-\t* trans-array.c (gfc_conv_array_parameter): Regard AS_DEFERRED as\n-\tarray with descriptor.\n-\n-2012-10-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54958\n-\t* gfortran.h (gfc_resolve_iterator_expr,\n-\tgfc_check_vardef_context): Update prototype.\n-\t* expr.c (gfc_check_vardef_context): Add own_scope\n-\targument and honour it.\n-\t* resolve.c (gfc_resolve_iterator_expr): Add own_scope\n-\targument and honour it.\n-\t(resolve_deallocate_expr, resolve_allocate_expr,\n-\tresolve_data_variables, resolve_transfer\n-\tresolve_lock_unlock, resolve_code): Update calls.\n-\t* array.c (resolve_array_list): Ditto.\n-\t* check.c (gfc_check_atomic_def, gfc_check_atomic_ref): Ditto.\n-\t* interface.c (compare_actual_formal): Ditto.\n-\t* intrinsic.c (check_arglist): Ditto.\n-\t* io.c (resolve_tag, gfc_resolve_dt, gfc_resolve_inquire): Ditto.\n-\n-2012-10-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\t* trans.c (gfc_allocate_allocatable):  Revert accidental\n-\tcommit.\n-\n-2012-10-24  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55037\n-\t* trans-expr.c (gfc_conv_procedure_call): Move a piece of code and\n-\tremove an assert.\n-\n-2012-10-21  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54725\n-\t* Make-lang.in (CFLAGS-cpp.o): Use TARGET_SYSTEM_ROOT_DEFINE.\n-\t* cpp.o (gfc_cpp_init_options): Use it for\n-\tsetting gfc_cpp_option.sysroot.\n-\n-2012-10-21  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/54465\n-\t* lang.opt (Wextra):  Add.\n-\t* invoke.texi:  Document that -Wc-binding-type, -Wconversion\n-\tand -Wline-truncation are implied by -Wall.  Document that\n-\t-Wcompare-reals is implied by -Wextra.  Document -Wextra.\n-\t* options.c (set_Wextra):  New function.\n-\t(gfc_handle_option):  Handle -Wextra.\n-\n-2012-10-19  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54224\n-\t* trans-expr.c (conv_function_val): Set TREE_USED.\n-\n-2012-10-18  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54884\n-\t* resolve.c (specification_expr): Change to bool.\n-\t(resolve_formal_arglist, resolve_symbol): Set\n-\tspecification_expr to true before resolving the array spec.\n-\t(resolve_variable, resolve_charlen, resolve_fl_variable):\n-\tProperly reset specification_expr.\n-\t(resolve_function): Set public_use when used in\n-\ta specification expr.\n-\n-2012-10-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/50981\n-\tPR fortran/54618\n-\t* trans.h (gfc_conv_derived_to_class, gfc_conv_class_to_class):\n-\tUpdate prototype.\n-\t* trans-stmt.c (trans_associate_var,gfc_trans_allocate): Update\n-\tcalls to those functions.\n-\t* trans-expr.c (gfc_conv_derived_to_class, gfc_conv_class_to_class,\n-\tgfc_conv_expr_present): Handle absent polymorphic arguments.\n-\t(class_scalar_coarray_to_class): New function.\n-\t(gfc_conv_procedure_call): Update calls.\n-\n-2012-10-12  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/40453\n-\t* interface.c (check_dummy_characteristics): Recursively check dummy\n-\tprocedures.\n-\n-2012-10-11  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54784\n-\t* trans-stmt.c (gfc_trans_allocate): Correctly determine the reference\n-\tto the _data component for polymorphic allocation with SOURCE.\n-\n-2012-10-06  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54832\n-\t* resolve.c (resolve_fl_derived0): Correctly copy the 'class_ok'\n-\tattribute for proc-ptr components with RESULT variable.\n-\n-2012-10-06  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/45521\n-\t* interface.c (generic_correspondence): Implement additional\n-\tdistinguishability criteria of F08.\n-\t(compare_actual_formal): Reject data object as actual argument for\n-\tprocedure formal argument.\n-\n-2012-10-04  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* expr.c (scalarize_intrinsic_call): Plug memory leak.\n-\t* frontend-passes.c (gcc_assert): Extend assert.\n-\t* interface.c (gfc_compare_derived_types): Fix comparison.\n-\t(gfc_check_operator_interface): Move up to make this error\n-\tmessage reachable.\n-\t(get_sym_storage_size): Remove always-true checks.\n-\t* io.c (format_lex): Add comment.\n-\t(gfc_free_wait): Free memory.\n-\t* match.c (gfc_match_select_type): Ditto.\n-\t* matchexpr.c (match_level_3): Ditto.\n-\t* primary.c (match_string_constant): Ditto.\n-\t(match_actual_arg): Check return value.\n-\t* resolve.c (gfc_resolve_substring_charlen,\n-\tresolve_typebound_generic_call, resolve_typebound_function,\n-\tresolve_typebound_subroutine): Free memory.\n-\t* trans-types.c (gfc_get_derived_type): Remove always-true check.\n-\n-2012-10-02  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54778\n-\t* interface.c (matching_typebound_op): Check for 'class_ok' attribute.\n-\n-2012-09-30  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54667\n-\t* intrinsic.texi (C_F_POINTER): Fix description.\n-\t* resolve.c (gfc_iso_c_sub_interface): Add a check for FPTR argument\n-\tof C_F_POINTER. Modify two error messages. Cleanup.\n-\n-2012-09-24  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54618\n-\tPR fortran/54690\n-\t* trans-expr.c (gfc_conv_procedure_call): Fix INTENT(OUT)\n-\thandling for allocatable BT_CLASS.\n-\n-2012-09-24  Lawrence Crowl  <crowl@google.com>\n-\n-\t* trans-expr.c (gfc_conv_cst_int_power): Change to new double_int API.\n-\t* target-memory.c (gfc_interpret_logical): Likewise.\n-\n-2012-09-23  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* parse.c (parse_derived): Don't set attr.alloc_comp\n-\tfor pointer components with allocatable subcomps.\n-\n-\tPR fortran/54599\n-\t* resolve.c (resolve_fl_namelist): Remove superfluous\n-\tNULL check.\n-\t* simplify.c (simplify_min_max): Remove unreachable code.\n-\t* trans-array.c (gfc_trans_create_temp_array): Change\n-\ta condition into an assert.\n-\n-\tPR fortran/54618\n-\t* trans-expr.c (gfc_trans_class_init_assign): Guard\n-\tre-setting of the _data by gfc_conv_expr_present.\n-\t(gfc_conv_procedure_call): Fix INTENT(OUT) handling\n-\tfor allocatable BT_CLASS.\n-\n-2012-09-22  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/54599\n-\t* dependency.c (gfc_dep_compare_expr):  Clarify logic,\n-\tremove dead code.\n-\n-2012-09-20  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54599\n-\t* cpp.c (print_line): Properly handle extern C.\n-\n-2012-09-20  Martin Jambor  <mjambor@suse.cz>\n-\n-\t* trans-decl.c (gfc_get_extern_function_decl): Push NULL cfun.  Do not\n-\tset and restore current_function_decl.\n-\t(gfc_init_coarray_decl): Do not set and restore current_function_decl.\n-\n-2012-09-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54608\n-\t* simplify.c (gfc_simplify_scan, gfc_simplify_verify):\n-\tFix handling of BACK=variable.\n-\n-2012-09-17  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54285\n-\t* expr.c (gfc_check_pointer_assign): Correctly handle procedure pointers\n-\tas function results.\n-\t* primary.c (gfc_match_varspec): Allow to call a PPC with proc-ptr\n-\tresult.\n-\n-2012-09-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54603\n-\t* trans-expr.c (gfc_trans_subcomponent_assign): Handle\n-\tproc-pointer components.\n-\n-2012-09-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54599\n-\t* error.c (error_print): Move increment out of the assert.\n-\t* interface.c (gfc_compare_derived_types): Add assert.\n-\t(get_expr_storage_size): Remove always-true logical condition.\n-\t* resolve.c (resolve_allocate_expr): Fix looping logic.\n-\t* target-memory.c (gfc_target_expr_size): Add assert.\n-\n-2012-09-16  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54594\n-\t* resolve.c (get_checked_tb_operator_target): Add a reference to the\n-\trelevant quote from the F08 standard.\n-\n-2012-09-16  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54594\n-\t* interface.c (compare_type_rank): Handle CLASS arrays.\n-\n-2012-09-16  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54387\n-\t* expr.c (gfc_check_pointer_assign): Check for result of embracing\n-\tfunction.\n-\n-2012-09-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-decl.c (gfc_generate_function_code): Fix\n-\tgfc_option.coarray check.\n-\t* trans-stmt.c (compute_inner_temp_size): Fix handling\n-\tof gfc_option.rtcheck.\n-\n-2012-09-16  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* symbol.c (gfc_undo_symbols): Correctly undo namelists.\n-\n-2012-09-15  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-io.c (gfc_trans_transfer): Add an assert.\n-\n-2012-09-15  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* arith.c (arith_power): Call gfc_free_expr in case of error.\n-\t* array.c (gfc_match_array_constructor): Initialize variable.\n-\t(gfc_resolve_character_array_constructor): Remove superfluous check.\n-\t(gfc_array_dimen_size): Add assert.\n-\t* check.c (numeric_check): Fix implicit typing.\n-\t* class.c (gfc_build_class_symbol): Add assert.\n-\t(finalize_component): Free memory.\n-\t* dump-parse-tree.c (show_namespace): Add assert.\n-\t* trans-io.c (transfer_namelist_element, transfer_expr): Avoid\n-\tmemory leakage.\n-\t(gfc_trans_transfer): Add assert.\n-\t* trans.c (gfc_trans_runtime_check): Call va_end\n-\n-2012-09-15  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* match.c (lock_unlock_statement, sync_statement): Fix potential\n-\tdouble freeing.\n-\t(sync_statement): Remove unreachable code.\n-\t* simplify.c (gfc_simplify_bessel_n2): Avoid double freeing.\n-\t(gfc_simplify_repeat): Remove bogus code.\n-\t* target-memory.h (gfc_target_encode_expr): Update prototype.\n-\t* target-memory.c (gfc_target_encode_expr, encode_array,\n-\tencode_derived): Return unsigned HOST_WIDE_INT.\n-\t(gfc_target_interpret_expr): Add assert.\n-\t(gfc_merge_initializers): Fix \"== 0\" check for mpz_t.\n-\t* symbol.c (gfc_get_typebound_proc): Add assert.\n-\t(gfc_merge_initializers): Remove unreachable check.\n-\n-2012-09-13  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54556\n-\t* resolve.c (resolve_formal_arglist): Allow VALUE arguments\n-\twith implicit_pure.\n-\t(gfc_impure_variable): Don't check gfc_pure such that the\n-\tfunction also works for gfc_implicit_pure procedures.\n-\n-2012-09-12  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54225\n-\tPR fortran/53306\n-\t* array.c (match_subscript, gfc_match_array_ref): Fix\n-\tdiagnostic of coarray's '*'.\n-\n-2012-09-07  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/54208\n-\t* simplify.c (simplify_bound_dim): Resolve array spec before\n-\tproceeding with simplification.\n-\n-2012-09-06  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54463\n-\t* trans-intrinsic.c (gfc_conv_intrinsic_funcall): Fix matmul\n-\tcall to BLAS if the default-kind has been promoted.\n-\n-2012-09-05  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54462\n-\t* symbol.c (gfc_undo_symbols): Avoid NULL pointer dereference.\n-\n-2012-09-04  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54435\n-\tPR fortran/54443\n-\t* match.c (gfc_match_select_type): Make sure to only access CLASS_DATA\n-\tfor BT_CLASS.\n-\n-2012-09-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54467\n-\t* class.c (gfc_find_derived_vtab): Fix disabling of _final\n-\tby continuing to generate normal type-bound procedures.\n-\n-2012-09-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* class.c (gfc_find_derived_vtab): Disable ABI-breaking\n-\tgeneration of the \"_final\" subroutine for now.\n-\n-2012-09-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* class.c (finalize_component): Fixes to the comment.\n-\n-2012-09-03  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n-\t    Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/37336\n-\t* gfortran.h (symbol_attribute): Add artificial.\n-\t* module.c (mio_symbol_attribute): Handle attr.artificial\n-\t* class.c (gfc_build_class_symbol): Defer creation of the vtab\n-\tif the DT has finalizers, mark generated symbols as\n-\tattr.artificial.\n-\t(has_finalizer_component, finalize_component,\n-\tfinalization_scalarizer, generate_finalization_wrapper):\n-\tNew static functions.\n-\t(gfc_find_derived_vtab): Add _final component and call\n-\tgenerate_finalization_wrapper.\n-\t* dump-parse-tree.c (show_f2k_derived): Use resolved\n-\tproc_tree->n.sym rather than unresolved proc_sym.\n-\t(show_attr): Handle attr.artificial.\n-\t* resolve.c (gfc_resolve_finalizers): Ensure that the vtab exists.\n-\t(resolve_fl_derived): Resolve finalizers before\n-\tgenerating the vtab.\n-\t(resolve_symbol): Also allow assumed-rank arrays with CONTIGUOUS;\n-\tskip artificial symbols.\n-\t(resolve_fl_derived0): Skip artificial symbols.\n-\n-2012-09-02  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54426\n-\t* symbol.c (find_common_symtree): New function.\n-\t(gfc_undo_symbols): Use it; free common_head if needed.\n-\n-2012-08-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54389\n-\t* trans-decl.c (gfc_get_extern_function_decl,\n-\tbuild_function_decl): Don't mark impure elemental\n-\tfunctions as DECL_PURE_P and honour implicit_pure.\n-\n-2012-08-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54382\n-\t* error.c (show_locus): Avoid out of bound access.\n-\n-2012-08-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54384\n-\t* decl.c (match_data_constant): Add missing gfc_free_expr.\n-\t(top_val_list): Remove always-true condition.\n-\t* data.c (get_array_index, create_character_initializer):\n-\tFree temporary expressions.\n-\t(gfc_assign_data_value): Free expression when aborting.\n-\n-2012-08-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54384\n-\t* symbol.c (gfc_copy_formal_args): Set also sym->formal_ns.\n-\n-2012-08-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54384\n-\t* resolve.c (gfc_resolve_character_operator): Free temporary\n-\tvariables.\n-\t* trans-expr.c (gfc_conv_statement_function): Ditto.\n-\n-2012-08-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54384\n-\t* dependency.c (check_section_vs_section): Use gfc_free_expr\n-\tinstead of free.\n-\t* trans-intrinsic.c (conv_generic_with_optional_char_arg): Use\n-\tgfc_free_symbol instead of free.\n-\n-2012-08-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54384\n-\t* trans-expr.c (gfc_trans_arrayfunc_assign): Free se.ss\n-\tand loop.\n-\n-2012-08-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/41093\n-\t* gfortran.h (gfc_common_head): Add \"int refs\".\n-\t* match.c (gfc_match_common): Increment refs.\n-\t* resolve.c (resolve_symbol): Only increment formal_ns->refs\n-\tif formal_ns is not sym->ns.\n-\t* symbol.c (gfc_free_symbol): Only free formal_ns if\n-\tif formal_ns is not sym->ns. Free common_block if refs is one.\n-\t(gfc_release_symbol): Release formal_ns only if the\n-\tsymbol is not ENTRY of a module.\n-\t* decl.c (get_proc_name): Don't increment gfc_current_ns->refs.\n-\t* parse.c (parse_interface): Incement proc_unit->refs++ for\n-\tproc-pointer result variables.\n-\t* module.c (mio_symbol): Don't increase sym->refs for its\n-\tuse in sym->formal_ns->proc_name.\n-\n-2012-08-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54370\n-\t* trans-stmt.c (gfc_trans_do_while): Don't change the logical\n-\tkind for negation of the condition.\n-\n-2012-08-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* options.c (set_Wall): Don't set for -Wcompare-reals.\n-\t* invoke.texi (-Wall, -Wcompare-reals): -Wall no longer\n-\timplies -Wcompare-reals.\n-\n-2012-08-24  Simon Baldwin  <simonb@google.com>\n-\n-\t* lang.opt (-cpp=): Mark flag NoDWARFRecord.\n-\n-2012-08-23  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54350\n-\t* trans-array.c (free_ss_info): Free data.array.subscript.\n-\t(gfc_free_ss): No longer free data.array.subscript.\n-\t(walk_coarray): New function, moved from trans-intrinsic.c\n-\t(gfc_conv_expr_descriptor): Walk array descriptor instead\n-\tof taking passed \"ss\".\n-\t(get_array_ctor_all_strlen, gfc_add_loop_ss_code,\n-\tgfc_conv_array_parameter): Update call and cleanup ss handling.\n-\t* trans-array.h (gfc_conv_expr_descriptor,\n-\tgfc_conv_array_parameter): Update prototype.\n-\t* trans-expr.c (gfc_conv_derived_to_class,\n-\tconv_isocbinding_procedure, gfc_conv_procedure_call,\n-\tgfc_trans_alloc_subarray_assign, gfc_trans_subcomponent_assign,\n-\tgfc_trans_pointer_assignment, gfc_trans_arrayfunc_assign): Update\n-\tcall to gfc_conv_expr_descriptor and gfc_conv_array_parameter, and\n-\tclean up.\n-\t* trans-intrinsic.c (walk_coarray): Moved to trans-array.c\n-\t(trans_this_image, trans_image_index, gfc_conv_intrinsic_rank\n-\tgfc_conv_intrinsic_bound, gfc_conv_intrinsic_cobound,\n-\tgfc_conv_intrinsic_len, gfc_conv_intrinsic_size,\n-\tgfc_conv_intrinsic_sizeof, gfc_conv_intrinsic_storage_size,\n-\tgfc_conv_intrinsic_transfer, gfc_conv_allocated,\n-\tgfc_conv_associated, gfc_conv_intrinsic_loc,\n-\tconv_intrinsic_move_alloc): Update calls.\n-\t* trans-io.c (gfc_convert_array_to_string, set_internal_unit,\n-\tgfc_trans_transfer): Ditto.\n-\t* trans-stmt.c (gfc_conv_elemental_dependencies,\n-\tgfc_trans_sync, trans_associate_var,\n-\tgfc_trans_pointer_assign_need_temp): Ditto.\n-\n-2012-08-23  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* trans-decl.c (trans_function_start, generate_coarray_init,\n-\tcreate_main_function, gfc_generate_constructors): Call\n-\tallocate_struct_function instead of init_function_start.\n-\n-2012-08-22  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-expr.c (gfc_copy_class_to_class,\n-\tgfc_trans_arrayfunc_assign): Free loop and ss data.\n-\t* trans-intrinsic.c (gfc_trans_arrayfunc_assign): Free ss data.\n-\n-2012-08-21  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* parse.c (parse_contained): Include EXEC_END_PROCEDURE\n-\tin ns->code to make sure the gfc_code is freed.\n-\n-2012-08-20  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54301\n-\t* expr.c (gfc_check_pointer_assign): Warn when a pointer,\n-\twhich is a function result, might outlive its target.\n-\n-2012-08-20  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54301\n-\t* expr.c (gfc_check_pointer_assign): Warn when the pointer\n-\tmight outlive its target.\n-\t* gfortran.h (struct gfc_option_t): Add warn_target_lifetime.\n-\t* options.c (gfc_init_options, set_wall, gfc_handle_option):\n-\thandle it.\n-\t* invoke.texi (-Wtarget-lifetime): Document it.\n-\t(-Wall): Implied it.\n-\t* lang.opt (-Wtarget-lifetime): New flag.\n-\n-2012-08-19  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/54298\n-\t* gfortran.h (struct gfc_option_t): Add warn_compare_reals.\n-\t* lang.opt:  Add Wcompare-reals.\n-\t* invoke.texi:  Document -Wcompare-reals.\n-\t* resolve.c (resolve_operator):  If -Wcompare-reals is in effect,\n-\twarn about equality/inequality comparisions for REAL and COMPLEX.\n-\t* options.c (gfc_init_options):  Set warn_compare_reals.\n-\t(set_Wall):  Include warn_compare_reals in Wall.\n-\t(gfc_handle_option):  Handle Wcompare_reals.\n-\n-2012-08-17  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* array.c (gfc_match_array_ref): Fix up memset arguments.\n-\n-2012-08-16   Diego Novillo  <dnovillo@google.com>\n-\n-\tRevert\n-\n-\tPR bootstrap/54281\n-\t* gfortran.h: Do not include gmp.h.\n-\n-2012-08-16   Diego Novillo  <dnovillo@google.com>\n-\n-\tPR bootstrap/54281\n-\t* gfortran.h: Do not include gmp.h.\n-\n-2012-08-15  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54243\n-\tPR fortran/54244\n-\t* resolve.c (check_typebound_baseobject): Check for class_ok attribute.\n-\t(resolve_procedure_interface,resolve_fl_derived0): Copy class_ok\n-\tattribute.\n-\n-2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/47586\n-\t* trans-expr.c (expr_is_variable): Handle regular, procedure pointer,\n-\tand typebound functions returning a data pointer.\n-\n-2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* decl.c (match_ppc_decl): Copy the procedure interface's symbol\n-\tas procedure interface's result.\n-\n-2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* trans-expr.c (gfc_trans_scalar_assign): Rename argument,\n-\textend comment.\n-\n-2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* gfortran.h (gfc_get_proc_ptr_comp): New prototype.\n-\t(gfc_is_proc_ptr_comp): Update prototype.\n-\t* expr.c (gfc_get_proc_ptr_comp): New function based on the old\n-\tgfc_is_proc_ptr_comp.\n-\t(gfc_is_proc_ptr_comp): Call gfc_get_proc_ptr_comp.\n-\t(gfc_specification_expr, gfc_check_pointer_assign): Use\n-\tgfc_get_proc_ptr_comp.\n-\t* trans-array.c (gfc_walk_function_expr): Likewise.\n-\t* resolve.c (resolve_structure_cons, update_ppc_arglist,\n-\tresolve_ppc_call, resolve_expr_ppc): Likewise.\n-\t(resolve_function): Update call to gfc_is_proc_ptr_comp.\n-\t* dump-parse-tree.c (show_expr): Likewise.\n-\t* interface.c (compare_actual_formal): Likewise.\n-\t* match.c (gfc_match_pointer_assignment): Likewise.\n-\t* primary.c (gfc_match_varspec): Likewise.\n-\t* trans-io.c (gfc_trans_transfer): Likewise.\n-\t* trans-expr.c (gfc_conv_variable, conv_function_val,\n-\tconv_isocbinding_procedure, gfc_conv_procedure_call,\n-\tgfc_trans_pointer_assignment): Likewise.\n-\t(gfc_conv_procedure_call, gfc_trans_array_func_assign):\n-\tUse gfc_get_proc_ptr_comp.\n-\n-2012-08-14  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/40881\n-\t* error.c (gfc_notify_std): Reset cur_error_buffer->flag flag\n-\twhen the error/warning has been printed.\n-\t* gfortran.h (gfc_sl_type): Add ST_LABEL_DO_TARGET.\n-\t* match.c (gfc_match_do): Use ST_LABEL_DO_TARGET.\n-\t* parse.c (check_statement_label): Use ST_LABEL_DO_TARGET.\n-\t(parse_executable): Add obsolescence check for DATA.\n-\t* resolve.c (resolve_branch): Handle ST_LABEL_DO_TARGET.\n-\t* symbol.c (gfc_define_st_label, gfc_reference_st_label):\n-\tAdd obsolescence diagnostics.\n-\t* trans-stmt.c (gfc_trans_label_assign): Handle ST_LABEL_DO_TARGET.\n-\n-2012-08-14  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54234\n-\t* check.c (gfc_check_cmplx): Add -Wconversion warning\n-\twhen converting higher-precision REAL to default-precision\n-\tCMPLX without kind= parameter.\n-\n-2012-08-12  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54221\n-\t* trans-decl.c (gfc_finish_var_decl, build_function_decl):\n-\tFix setting private module vars/procs as TREE_PUBLIC(...) = 0.\n-\n-2012-08-09  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54199\n-\t* intrinsic.c (gfc_warn_intrinsic_shadow): Better warning\n-\tfor internal procedures.\n-\n-2012-08-06  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/35831\n-\t* interface.c (check_result_characteristics): New function, which checks\n-\tthe characteristics of function results.\n-\t(gfc_compare_interfaces,gfc_check_typebound_override): Call it.\n-\n-2012-08-02  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\t PR fortran/54033\n-\t * scanner.c (add_path_to_list):  New argument warn.  Don't\n-\t warn if it is true.\n-\t (gfc_add_include_path):  Warn if directory is missing.\n-\t (gfc_add_intrinsic_modules_path):  Do not warn if directory\n-\t is missing.\n-\t * optinons.c (gfc_handle_option):  Do not add directory\n-\t for intrinsic modules to normal include path.\n-\n-2012-08-03  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/54166\n-\t* trans-array.c (set_loop_bounds): Access specinfo using spec_dim.\n-\n-2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/48820\n-\t* trans-array.c (gfc_conv_ss_startstride): Set the intrinsic\n-\tresult's lower and upper bounds according to the rank.\n-\t(set_loop_bounds): Set the loop upper bound in the intrinsic case.\n-\n-2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* trans-array.c (set_loop_bounds): Allow non-array-section to be\n-\tchosen using the stride and lower bound criteria.\n-\n-2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* trans-array.c (set_loop_bounds): Remove useless dimension check.\n-\tDon't update loopspec if it would loose the wanted stride criterion.\n-\n-2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* trans-array.h (gfc_conv_descriptor_rank): New prototype.\n-\t* trans-array.c (gfc_conv_descriptor_rank): New function moved and\n-\trenamed ...\n-\t* trans-intrinsic.c (get_rank_from_desc): ... from this one.\n-\t(gfc_conv_intrinsic_rank, gfc_conv_intrinsic_bound,\n-\tgfc_conv_associated): Also rename function calls.\n-\n-2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* iresolve.c (resolve_bound, gfc_resolve_shape):\n-\tDon't set the shape for assumed rank arrays.\n-\t* simplify.c (gfc_simplify_shape): Don't try to simplify if the\n-\targument is assumed rank.\n-\n-2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* array.c (gfc_copy_array_ref): Don't copy the offset field.\n-\t* expr.c (find_array_section): Ignore the offset field.\n-\t* trans-expr.c (gfc_find_interface_mapping_to_ref): Don't apply\n-\tany interface mapping to the offset field.\n-\t* gfortran.h (struct gfc_array_ref): Remove the offset field.\n-\n-2012-08-02  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54147\n-\t* resolve.c (check_proc_interface): New routine for PROCEDURE interface\n-\tchecks.\n-\t(resolve_procedure_interface,resolve_typebound_procedure,\n-\tresolve_fl_derived0): Call it.\n-\n-2012-08-01  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/54033\n-\t* scanner.c (add_path_to_list): Emit warning if an error occurs\n-\tfor an include path, if it is not present or if it is not a\n-\tdirectory.  Do not add the path in these cases.\n-\n-2012-07-31  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/42418\n-\t* decl.c (match_procedure_interface): Move some checks to\n-\t'resolve_procedure_interface'. Set flavor if appropriate.\n-\t* expr.c (gfc_check_pointer_assign): Cleanup of 'gfc_is_intrinsic'.\n-\t* intrinsic.c (gfc_is_intrinsic): Additional checks for attributes which\n-\tidentify a procedure as being non-intrinsic.\n-\t* resolve.c (resolve_procedure_interface): Checks moved here from\n-\t'match_procedure_interface'. Minor cleanup.\n-\t(resolve_formal_arglist,resolve_symbol): Cleanup of\n-\t'resolve_procedure_interface'\n-\t(resolve_actual_arglist,is_external_proc): Cleanup of\n-\t'gfc_is_intrinsic'.\n-\n-2012-07-31  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/54134\n-\t* dependency.c (gfc_dep_compare_expr): Check if arguments are NULL.\n-\n-2012-07-31  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* interface.c (gfc_procedure_use): Return gfc_try instead of void.\n-\t* gfortran.h (gfc_procedure_use): Update prototype.\n-\t* resolve.c (gfc_iso_c_func_interface): Allow noninteroperable\n-\tprocedures for c_funloc for TS29113.\n-\t* (gfc_iso_c_sub_interface): Ditto for c_f_procpointer. Add\n-\tdiagnostic for c_ptr vs. c_funptr for c_f_(proc)pointer.\n-\n-2012-07-30  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/51081\n-\t* gfortran.h (gfc_resolve_intrinsic): Add prototype.\n-\t* expr.c (gfc_check_pointer_assign): Set INTRINSIC attribute if needed.\n-\tCheck for invalid intrinsics.\n-\t* primary.c (gfc_match_rvalue): Check for intrinsics came too early.\n-\tSet procedure flavor if appropriate.\n-\t* resolve.c (resolve_intrinsic): Renamed to gfc_resolve_intrinsic.\n-\t(resolve_procedure_interface,resolve_procedure_expression,\n-\tresolve_function,resolve_fl_derived0,resolve_symbol): Ditto.\n-\n-2012-07-26  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/44354\n-\t* trans-array.c (gfc_trans_array_constructor_value):\n-\tEvaluate the iteration bounds before the inner variable shadows\n-\tthe outer.\n-\n-2012-07-26  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/44354\n-\t* array.c (sought_symbol): New variable.\n-\t(expr_is_sought_symbol_ref, find_symbol_in_expr): New functions.\n-\t(resolve_array_list): Check for references to the induction\n-\tvariable in the iteration bounds and issue a diagnostic if some\n-\tare found.\n-\n-2012-07-26  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n-\t    Tobias Burnus  <burnus@net-b.de>\n-\n-\t* module.c (mio_array_spec): Don't read as->lower for\n-\tassumed-rank arrays.\n-\n-2012-07-25  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-types.c (gfc_real16_is_float128): Fix spelling\n-\tin a comment.\n-\t* trans.h (struct gfc_array_info): Ditto.\n-\t* gfortran.h (gfc_expr): Ditto.\n-\t* simplify.c (gfc_count): Ditto.\n-\t* trans-expr.c (gfc_copy_class_to_class,\n-\tconv_parent_component_references,\n-\tgfc_trans_pointer_assignment): Ditto.\n-\t* expr.c (check_pointer_assign): Fix diagnostic spelling.\n-\t* interface.c (compare_parameter): Ditto.\n-\t* parse.c (use_modules, parse_associate): Ditto.\n-\t* decl.c (match_char_length): Fix spelling of the\n-\tan function argument.\n-\n-2012-07-21  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* iso-c-binding.def (C_PTRDIFF_T): New TS29113 parameter.\n-\t* intrinsic.texi (ISO_C_BINDING): Document it.\n-\n-2012-07-21  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/48820\n-\t* trans-intrinsic.c (gfc_conv_intrinsic_bound): Support\n-\tlbound/ubound with dim= for assumed-rank arrays.\n-\t* array.c (gfc_set_array_spec): Reject coarrays with\n-\tassumed shape.\n-\t* decl.c (merge_array_spec): Ditto. Return gfc_try.\n-\t(match_attr_spec, match_attr_spec): Update call.\n-\n-2012-07-21  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* resolve.c (resolve_formal_arglist): Put variable\n-\tdeclaration before the first assignment.\n-\n-2012-07-21  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-expr.c (gfc_conv_derived_to_class): Fix argument passed\n-\tto class_array_data_assign.\n-\n-2012-07-20  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* decl.c (gfc_verify_c_interop_param): Allow assumed-shape\n-\twith -std=f2008ts.\n-\n-2012-07-20  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/48820\n-\t* array.c (match_array_element_spec, gfc_match_array_spec,\n-\tspec_size, gfc_array_dimen_size): Add support for\n-\tassumed-rank arrays.\n-\t* check.c (dim_rank_check): Ditto.\n-\t* class.c (gfc_add_component_ref): Ditto.\n-\t(gfc_build_class_symbol): Regard assumed-rank arrays\n-\tas having GFC_MAX_DIMENSIONS. And build extra class\n-\tcontainer for a scalar pointer class.\n-\t* decl.c (merge_array_spec): Add assert.\n-\t* dump-parse-tree.c (show_array_spec): Add support for\n-\tassumed-rank arrays.\n-\t* expr.c (gfc_is_simply_contiguous): Ditto.\n-\t* gfortran.h (array_type): Ditto.\n-\t(gfc_array_spec, gfc_expr): Add comment to \"rank\" field.\n-\t* interface.c (compare_type_rank, argument_rank_mismatch,\n-\tcompare_parameter, gfc_procedure_use): Ditto.\n-\t(compare_actual_formal): Fix NULL() to optional-dummy\n-\thandling for polymorphic dummies.\n-\t* module.c (mio_typespec): Add support for\n-\tassumed-rank arrays.\n-\t* resolve.c (resolve_formal_arglist, resolve_actual_arglist,\n-\tresolve_elemental_actual, resolve_global_procedure,\n-\texpression_shape, resolve_variable, update_ppc_arglist,\n-\tcheck_typebound_baseobject, gfc_resolve_expr,\n-\tresolve_fl_var_and_proc, gfc_resolve_finalizers,\n-\tresolve_typebound_procedure, resolve_symbol): Ditto.\n-\t(assumed_type_expr_allowed): Remove static variable.\n-\t(actual_arg, first_actual_arg): New static variables.\n-\t* simplify.c (simplify_bound, gfc_simplify_range): Add\n-\tsupport for assumed-rank arrays.\n-\t* trans-array.c (gfc_conv_array_parameter): Ditto.\n-\t(gfc_get_descriptor_dimension): New function, which returns\n-\tthe descriptor.\n-\t(gfc_conv_descriptor_dimension): Use it.\n-\t(gfc_conv_descriptor_stride_get, gfc_conv_array_parameter):\n-\tHandle GFC_ARRAY_ASSUMED_RANK_CONT and AS_ASSUMED_RANK.\n-\t* trans-array.h (gfc_get_descriptor_dimension): New prototype.\n-\t* trans-decl. (gfc_build_dummy_array_decl,\n-\tgfc_trans_deferred_vars, add_argument_checking): Add\n-\tsupport for assumed-rank arrays.\n-\t* trans-expr.c (gfc_conv_expr_present, gfc_conv_variable,\n-\tgfc_conv_procedure_call): Ditto.\n-\t(get_scalar_to_descriptor_type, class_array_data_assign,\n-\tconv_scalar_to_descriptor): New static functions.\n-\t(gfc_conv_derived_to_class, gfc_conv_class_to_class): Use\n-\tthem.\n-\t* trans-intrinsic.c (get_rank_from_desc): New function.\n-\t(gfc_conv_intrinsic_rank, gfc_conv_associated): Use it.\n-\t* trans-types.c (gfc_array_descriptor_base_caf,\n-\tgfc_array_descriptor_base): Make space for scalar array.\n-\t(gfc_is_nodesc_array, gfc_is_nodesc_array,\n-\tgfc_build_array_type, gfc_get_array_descriptor_base): Add\n-\tsupport for assumed-rank arrays.\n-\t* trans.h (gfc_array_kind): Add GFC_ARRAY_ASSUMED_RANK and\n-\tGFC_ARRAY_ASSUMED_RANK_CONT.\n-\n-2012-07-19  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-expr.c (gfc_conv_procedure_call): Fix handling\n-\tof polymorphic arguments.\n-\t* resolve.c (resolve_formal_arglist): Ditto, mark polymorphic\n-\tassumed-shape arrays as such.\n-\n-2012-07-19  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* interface.c (compare_parameter, compare_actual_formal): Fix\n-\thandling of polymorphic arguments.\n-\n-2012-07-17  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/51081\n-\t* error.c (gfc_notify_std): Automatically print the relevant Fortran\n-\tstandard version.\n-\t* arith.c (arith_power): Remove explicit standard reference string.\n-\t* array.c (gfc_match_array_spec, gfc_match_array_constructor): Ditto.\n-\t* check.c (gfc_check_a_p, gfc_check_besn, gfc_check_count,\n-\tgfc_check_float, gfc_check_fn_rc2008, gfc_check_iand,\n-\tgfc_check_ichar_iachar, gfc_check_ieor, gfc_check_index, gfc_check_ior,\n-\tgfc_check_lbound, gfc_check_len_lentrim, check_rest, gfc_check_min_max,\n-\tgfc_check_null, gfc_check_scan, gfc_check_selected_real_kind,\n-\tgfc_check_shape, gfc_check_size, gfc_check_sngl, gfc_check_ubound,\n-\tgfc_check_verify): Ditto.\n-\t* data.c (gfc_assign_data_value): Ditto.\n-\t* decl.c (var_element, char_len_param_value, match_char_length,\n-\tgfc_verify_c_interop_param, match_pointer_init, variable_decl,\n-\tgfc_match_decl_type_spec, gfc_match_import, match_attr_spec,\n-\tgfc_match_prefix, gfc_match_suffix, match_ppc_decl,\n-\tmatch_procedure_in_interface, gfc_match_procedure,gfc_match_entry,\n-\tgfc_match_subroutine, gfc_match_end, gfc_match_codimension,\n-\tgfc_match_protected, gfc_match_value, gfc_match_volatile,\n-\tgfc_match_asynchronous, gfc_match_modproc, gfc_get_type_attr_spec,\n-\tgfc_match_enum, match_procedure_in_type): Ditto.\n-\t* expr.c (check_elemental, gfc_check_assign, gfc_check_pointer_assign):\n-\tDitto.\n-\t* interface.c (gfc_match_abstract_interface, check_interface0): Ditto.\n-\t* intrinsic.c (gfc_intrinsic_func_interface): Ditto.\n-\t* io.c (format_lex, resolve_tag_format, resolve_tag,\n-\tcompare_to_allowed_values, gfc_match_open, gfc_match_rewind,\n-\tgfc_resolve_dt, gfc_match_wait): Ditto.\n-\t* match.c (match_arithmetic_if, gfc_match_if, gfc_match_critical,\n-\tgfc_match_do, match_exit_cycle, gfc_match_pause, gfc_match_stop,\n-\tgfc_match_lock, sync_statement, gfc_match_assign, gfc_match_goto,\n-\tgfc_match_allocate, gfc_match_return, gfc_match_st_function): Ditto.\n-\t* module.c (gfc_match_use, gfc_use_module): Ditto.\n-\t* parse.c (parse_derived_contains, parse_block_construct,\n-\tparse_associate, parse_contained): Ditto.\n-\t* primary.c (match_hollerith_constant, match_boz_constant,\n-\tmatch_real_constant, match_sym_complex_part, match_arg_list_function,\n-\tbuild_actual_constructor, gfc_convert_to_structure_constructor): Ditto.\n-\t* resolve.c (resolve_formal_arglist, resolve_entries,\n-\tresolve_common_blocks, resolve_actual_arglist, gfc_resolve_index_1,\n-\tgfc_resolve_iterator_expr, resolve_ordinary_assign,\n-\tresolve_fl_var_and_proc, resolve_fl_variable_derived,\n-\tresolve_fl_procedure, resolve_fl_derived0, resolve_fl_derived,\n-\tresolve_fl_namelist, resolve_symbol, resolve_fntype): Ditto.\n-\t* symbol.c (check_conflict, conflict, gfc_add_is_bind_c,\n-\tgfc_add_extension, gfc_check_symbol_typed): Ditto.\n-\n-2012-07-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53985\n-\t* decl.c (gfc_verify_c_interop_param): Make warning conditional\n-\ton -Wc-binding-type works and improve the wording.\n-\n-2012-07-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52101\n-\t* decl.c (match_char_length): Extra argument, show obsolenscent\n-\twarning only if *length is used after the typename.\n-\t(variable_decl, gfc_match_char_spec): Update call\n-\n-2012-07-17  Tobias Burnus  <burnus@net-b.de>\n-\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\tPR fortran/49265\n-\t* decl.c (match_procedure_in_interface): Support \"::\" for\n-\tFortran 2008 and later.\n-\n-2012-07-16  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/53824\n-\t* resolve.c (resolve_allocate_deallocate):  If both\n-\tstart indices are NULL, skip the test for equality.\n-\n-2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* f95-lang.c: Include dumpfile.h instead of tree-dump.h.\n-\t* Make-lang.in: Fix dependencies.\n-\n-2012-07-16  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/53956\n-\t* gfortran.h (gfc_copy_formal_args,gfc_copy_formal_args_ppc): Modified\n-\tprototypes.\n-\t* symbol.c (gfc_copy_formal_args): New argument 'if_src'. Copy if_source\n-\tof dummy procedures.\n-\t(gfc_copy_formal_args_ppc): Ditto.\n-\t* resolve.c (resolve_procedure_interface): Pass IFSRC_DECL to\n-\tgfc_copy_formal_args.\n-\t(resolve_fl_derived0): Pass IFSRC_DECL to gfc_copy_formal_args_ppc.\n-\n-2012-07-12  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* trans-expr.c (conv_isocbinding_procedure): Generate c_f_pointer code\n-\tinline.\n-\n-2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* trans.c: Do not include defaults.h.\n-\t* trans-intrinsic.c: Likewise.\n-\n-2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* gfortran.h: Do not include coretypes.h here.\n-\tMake it an error to include this before coretypes.h\n-\t* openmp.c: Include coretypes.h.\n-\t* interface.c: Likewise.\n-\t* intrinsic.c: Likewise.\n-\t* symbol.c: Likewise.\n-\t* class.c: Likewise.\n-\t* decl.c: Likewise.\n-\t* matchexp.c: Likewise.\n-\t* dump-parse-tree.c: Likewise.\n-\t* array.c: Likewise.\n-\t* constructor.c: Likewise.\n-\t* error.c: Likewise.\n-\t* data.c: Likewise.\n-\t* expr.c: Likewise.\n-\t* module.c: Likewise.\n-\t* scanner.c: Likewise.\n-\t* bbt.c: Likewise.\n-\t* io.c: Likewise.\n-\t* frontend-passes.c: Likewise.\n-\t* resolve.c: Likewise.\n-\t* st.c: Likewise.\n-\t* target-memory.c: Likewise.\n-\t* match.c: Likewise.\n-\t* arith.c: Likewise.\n-\t* parse.c: Likewise.\n-\t* check.c: Likewise.\n-\t* dependency.c: Likewise.\n-\t* primary.c: Likewise.\n-\t* misc.c: Likewise.\n-\t* simplify.c: Likewise.\n-\n-2012-07-05  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/53732\n-\t* trans-array.c (gfc_add_loop_ss_code): Disable self recursive calls\n-\thandling nested loop(s) if the subscript flag is true.\n-\n-2012-07-05  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\tPR fortran/53449\n-\t* parse.c (gfc_parse_file): Initialize errors_before.\n-\n-2012-06-27  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/41951\n-\tPR fortran/49591\n-\t* interface.c (check_new_interface): Rename, add 'loc' argument,\n-\tmake non-static.\n-\t(gfc_add_interface): Rename 'check_new_interface'\n-\t* gfortran.h (gfc_check_new_interface): Add prototype.\n-\t* resolve.c (resolve_typebound_intrinsic_op): Add typebound operator\n-\ttargets to non-typebound operator list.\n-\n-2012-06-22  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/47710\n-\tPR fortran/53328\n-\t* interface.c (count_types_test, generic_correspondence,\n-\tgfc_compare_interfaces): Ignore PASS arguments.\n-\t(check_interface1, compare_parameter): Pass NULL arguments to\n-\tgfc_compare_interfaces.\n-\t* gfortran.h (gfc_compare_interfaces): Modified prototype.\n-\t* expr.c (gfc_check_pointer_assign): Pass NULL arguments to\n-\tgfc_compare_interfaces.\n-\t* resolve.c (resolve_structure_cons): Ditto.\n-\t(check_generic_tbp_ambiguity): Determine PASS arguments and pass them\n-\tto gfc_compare_interfaces.\n-\n-2012-06-21  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/39654\n-\t* iresolve.c (gfc_resolve_ftell): Fix result kind and use new\n-\tlibrary function.\n-\n-2012-06-18  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* intrinsic.h (gfc_resolve_rank): New prototype.\n-\t* intrinsic.c (add_functions): Use gfc_resolve_rank.\n-\t* iresolve.c (add_functions): New function.\n-\t* trans-intrinsic.c (gfc_conv_intrinsic_rank): New function.\n-\t(gfc_conv_intrinsic_function): Call it.\n-\n-2012-06-18  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53692\n-\t* trans-array.c (set_loop_bounds): Don't scalarize via absent\n-\toptional arrays.\n-\t* resolve.c (resolve_elemental_actual): Don't stop resolving after printing\n-\ta warning.\n-\n-2012-06-18  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53526\n-\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Handle coarrays.\n-\n-2012-06-18  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53526\n-\t* check.c (gfc_check_move_alloc): Reject coindexed actual arguments\n-\tand those with different corank.\n-\n-2012-06-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53691\n-\tPR fortran/53685\n-\t* check.c (gfc_calculate_transfer_sizes): Return if\n-\tSIZE= is not constant or source-size cannot be determined.\n-\n-2012-06-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53642\n-\tPR fortran/45170\n-\t* frontend-passes.c (optimize_assignment): Don't remove RHS's\n-\ttrim when assigning to a deferred-length string.\n-\t* trans-expr.c (gfc_trans_assignment_1): Ensure that the RHS string\n-\tlength is evaluated before the deferred-length LHS is reallocated.\n-\n-2012-06-13  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53643\n-\t* trans-decl.c (init_intent_out_dt): Fix for polymorphic arrays.\n-\t* trans-array.c (structure_alloc_comps): Don't loop for\n-\tscalar coarrays.\n-\n-2012-06-13  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53597\n-\t* decl.c (match_attr_spec): Only mark module variables\n-\tas SAVE_IMPLICIT for Fortran 2008 and later.\n-\n-2012-06-08  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/52552\n-\t* match.c (gfc_match_allocate): Modify order of checks. Change wording\n-\tof error message. Remove FIXME note.\n-\t* resolve.c (resolve_allocate_expr): Add a comment.\n-\n-2012-06-07  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/52861\n-\t* frontend-passes.c (optimize_assignment):  Don't set the\n-\tlength of an empty string for deferred-length character\n-\tvariables.\n-\n-2012-06-07  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/52861\n-\t* frontend-passes.c (empty_string):  Add prototype.\n-\t(optimize_assignment):  Set the length of an empty string\n-\tconstant to zero.\n-\n-2012-06-04  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/50619\n-\t* resolve.c (build_default_init_expr): Don't initialize\n-\tASSOCIATE names.\n-\n-2012-06-03  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n-\t    Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/48831\n-\t* gfortran.h (gfc_check_init_expr): Add prototype declaration\n-\tof function.\n-\t* check.c (kind_check): Change if condition to use\n-\tto gfc_check_init_expr.\n-\t* expr.c (check_init_expr): Remove forward declaration\n-\tand static keyword. Change name in gfc_check_init_expr.\n-\t(scalarize_intrinsic_call, check_init_expr_arguments,\n-\tcheck_inquiry, check_conversion, gfc_reduce_init_expr): Update\n-\tcall to gfc_check_init_expr.\n-\n-2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* trans-common.c: Do not include output.h.\n-\t* trans-decl.c: Likewise.\n-\n-2012-05-31  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53521\n-\t* trans.c (gfc_deallocate_scalar_with_status): Properly\n-\thandle the case size == 0.\n-\n-2012-05-30  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR c/53502\n-\t* decl.c (match_attr_spec): Remove \"typedef\".\n-\n-2012-05-30  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* decl.c: Fix comment typos.\n-\t* expr.c: Ditto.\n-\t* frontend-passes.c: Ditto.\n-\t* match.c: Ditto.\n-\t* resolve.c: Ditto.\n-\t* trans-array.c: Ditto.\n-\t* trans-common.c: Ditto.\n-\t* trans-intrinsic.c: Ditto.\n-\t* trans-types.c: Ditto.\n-\n-2012-05-23  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51055\n-\tPR fortran/45170\n-\t* match.c (gfc_match_allocate): Set length_from_typespec\n-\tfor characters.\n-\t* resolve.c (resolve_charlen): If set, don't check whether\n-\tthe len is a specification expression.\n-\n-2012-05-22  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53389\n-\t* trans-array.c (gfc_add_loop_ss_code): Don't evaluate expression, if\n-\tss->is_alloc_lhs is set.\n-\n-2012-05-22  Dodji Seketeli  <dodji@redhat.com>\n-\n-\tPR c++/53322\n-\t* f95-lang.c (gfc_init_builtin_functions): Remove the unused\n-\ttypedef builtin_type.\n-\n-2012-05-14  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/52428\n-\t* gfortran.texi: Update _gfortran_set_options documentation.\n-\t* invoke.texi: Remove runtime behavior description of\n-\t-fno-range-check.\n-\t* trans-decl.c (create_main_function): Don't pass the range-check\n-\tsetting to the library.\n-\n-2012-05-14  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/49110\n-\tPR fortran/51055\n-\tPR fortran/53329\n-\t* trans-expr.c (gfc_trans_assignment_1): Fix allocation\n-\thandling for assignment of function results to allocatable\n-\tdeferred-length strings.\n-\t* trans-decl.c (gfc_create_string_length): For deferred-length\n-\tmodule variables, include module name in the assembler name.\n-\t(gfc_get_symbol_decl): Don't override the assembler name.\n-\n-2012-05-14  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n-\n-\tPR 53063\n-\t* options.c (gfc_handle_option): Call lang-specific generated function.\n-\n-2012-05-13  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n-\t    Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52158\n-\tPR fortran/45170\n-\tPR fortran/49430\n-\t* resolve.c (resolve_fl_derived0): Deferred character length\n-\tprocedure components are supported.\n-\t* trans-expr.c (gfc_conv_procedure_call): Handle TBP with\n-\tdeferred-length results.\n-\t(gfc_string_to_single_character): Add a new check to prevent\n-\tNULL read.\n-\t(gfc_conv_procedure_call): Remove unuseful checks on\n-\tsymbol's attributes. Add new checks to prevent NULL read on\n-\tstring length.\n-\n-2012-05-12  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/49110\n-\tPR fortran/52843\n-\t* resolve.c (resolve_fl_procedure): Don't regard\n-\tcharacter(len=:) as character(*) in the diagnostic.\n-\n-2012-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/52537\n-\t* frontend-passes.c (optimize_op):  Change\n-\told-style comparison operators to new-style, simplify\n-\tswitch as a result.\n-\t(empty_string):  New function.\n-\t(get_len_trim_call):  New function.\n-\t(optimize_comparison):  If comparing to an empty string,\n-\tuse comparison of len_trim to zero.\n-\tUse new-style comparison operators only.\n-\t(optimize_trim):  Use get_len_trim_call.\n-\n-2012-05-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n-\n-\tPR 53063\n-\t* options.c: Include diagnostics.h instead of\n-\tdiagnostics-core.h.\n-\t(set_Wall): Do not see warn_unused here.\n-\t(gfc_handle_option): Set it here using handle_generated_option.\n-\n-2012-05-08  Jan Hubicka  <jh@suse.cz>\n-\n-\t* trans-common.c (create_common): Do not fake TREE_ASM_WRITTEN.\n-\t* trans-decl.c (gfc_finish_cray_pointee): Likewise.\n-\n-2012-05-07  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53255\n-\t* resolve.c (resolve_typebound_static): Fix handling\n-\tof overridden specific to generic operator.\n-\n-2012-05-06  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/41587\n-\t* decl.c (build_struct): Don't ignore FAILED status.\n-\n-2012-05-05  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/41600\n-\t* trans-array.c (build_array_ref): New static function.\n-\t(gfc_conv_array_ref, gfc_get_dataptr_offset): Call it.\n-\t* trans-expr.c (gfc_get_vptr_from_expr): New function.\n-\t(gfc_conv_derived_to_class): Add a new argument for a caller\n-\tsupplied vptr and use it if it is not NULL.\n-\t(gfc_conv_procedure_call): Add NULL to call to above.\n-\tsymbol.c (gfc_is_associate_pointer): Return true if symbol is\n-\ta class object.\n-\t* trans-stmt.c (trans_associate_var): Handle class associate-\n-\tnames.\n-\t* expr.c (gfc_get_variable_expr): Supply the array-spec if\n-\tpossible.\n-\t* trans-types.c (gfc_typenode_for_spec): Set GFC_CLASS_TYPE_P\n-\tfor class types.\n-\t* trans.h : Add prototypes for gfc_get_vptr_from_expr and\n-\tgfc_conv_derived_to_class. Define GFC_CLASS_TYPE_P.\n-\t* resolve.c (resolve_variable): For class arrays, ensure that\n-\tthe target expression has all the necessary _data references.\n-\t(resolve_assoc_var): Throw a \"not yet implemented\" error for\n-\tclass array selectors that need a temporary.\n-\t* match.c (copy_ts_from_selector_to_associate,\n-\tselect_derived_set_tmp, select_class_set_tmp): New functions.\n-\t(select_type_set_tmp): Call one of last two new functions.\n-\t(gfc_match_select_type): Copy_ts_from_selector_to_associate is\n-\tcalled if associate-name is typed.\n-\n-\tPR fortran/53191\n-\t* resolve.c (resolve_ref): C614 applied to class expressions.\n-\n-2012-05-05  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/49010\n-\tPR fortran/24518\n-\t* intrinsic.texi (MOD, MODULO): Mention sign and magnitude of result.\n-\t* simplify.c (gfc_simplify_mod): Use mpfr_fmod.\n-\t(gfc_simplify_modulo): Likewise, use copysign to fix the result if\n-\tzero.\n-\t* trans-intrinsic.c (gfc_conv_intrinsic_mod): Remove fallback as\n-\tbuiltin_fmod is always available. For modulo, call copysign to fix\n-\tthe result when signed zeros are enabled.\n-\n-2012-05-05  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* gfortran.texi (GFORTRAN_TMPDIR): Rename to TMPDIR, explain\n-\talgorithm for choosing temp directory.\n-\n-2012-05-04  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53175\n-\t* resolve.c (resolve_variable): Set public_used\n-\tif a private module variable is used in a (public)\n-\tspecification expression.\n-\t* trans-decl.c (gfc_finish_var_decl): Mark those\n-\tTREE_PUBLIC.\n-\n-2012-05-04  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53111\n-\t* resolve.c (resolve_fl_derived): Fix -std=f95\n-\tdiagnostic for generic vs. DT names.\n-\n-2012-05-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52864\n-\t* interface.c (compare_parameter_intent): Remove.\n-\t(check_intents): Remove call, handle CLASS pointer.\n-\t(compare_actual_formal): Handle CLASS pointer.\n-\n-2012-04-30  Jan Hubicka  <jh@suse.cz>\n-\n-\t* f95-lang.c (gfc_finish): Update comments.\n-\n-2012-04-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/53148\n-\t* frontend-passes.c (create_var):  If the statement has a label,\n-\tput the label around the block.\n-\n-2012-04-25  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52196\n-\t* lang.opt (Wrealloc-lhs, Wrealloc-lhs-all): New flags.\n-\t* gfortran.h (gfc_option_t): Add them.\n-\t* options.c (gfc_init_options, gfc_post_options,\n-\tgfc_handle_option): Handle them.\n-\t* invoke.texi: Document them.\n-\t* trans-expr.c (realloc_lhs_warning): New function.\n-\t(gfc_trans_arrayfunc_assign,\n-\talloc_scalar_allocatable_for_assignment,\n-\tgfc_trans_assignment_1): Use it.\n-\n-2012-04-18  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* trans-decl.c (gfc_trans_entry_master_switch): Build SWITCH_EXPR\n-\twith NULL_TREE type instead of void_type_node.\n-\t* trans-io.c (io_result): Likewise.\n-\t* trans-stmt.c (gfc_trans_integer_select,\n-\tgfc_trans_character_select): Likewise.\n-\n-2012-04-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52864\n-\t* expr.c (gfc_check_vardef_context): Fix assignment check for\n-\tpointer components.\n-\n-2012-04-16  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/52968\n-\t* class.c (gfc_build_class_symbol): Make sure the 'f2k_derived'\n-\tnamespace is present.\n-\n-2012-04-15  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/51082\n-\t* trans-expr.c (gfc_conv_expr_reference): Check if the expression is a\n-\tsimple function call (or a more involved PPC reference).\n-\n-2012-04-15  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52916\n-\tPR fortran/40973\n-\t* gfortran.h (symbol_attribute): Add public_used.\n-\t* interface.c (check_sym_interfaces, check_uop_interfaces,\n-\tgfc_check_interfaces): Set it.\n-\t* resolve.c (resolve_typebound_procedure): Ditto.\n-\t* trans-decl.c (build_function_decl): Use it.\n-\n-2012-04-11  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52729\n-\t* resolve.c (resolve_symbol): Fix searching for parent NS decl.\n-\n-2012-04-08  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52751\n-\t* trans-decl.c (gfc_finish_var_decl): Don't set TREE_PUBLIC\n-\tfor PRIVATE module variables without C-binding label.\n-\n-\tPR fortran/40973\n-\t* trans-decl.c (build_function_decl): Ditto for procedures.\n-\n-2012-04-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/52893\n-\t* frontend-passes.c:  Keep track of wether we are in an implicit\n-\tDO loop; do not do function elimination if we are.\n-\n-2012-04-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/52668\n-\t* module.c:  Only mark symbols as use_only if they have been\n-\timported via an only list.\n-\n-2012-03-28  Paul Thomas  <pault@gcc.gnu.org>\n-\tTobias Burnus  <burnus@gcc.gnu.org>\n-\n-\tPR fortran/52652\n-\t* match.c (gfc_match_allocate, gfc_match_deallocate): Change\n-\t\"not.. or\" to \"neither.. nor\".\n-\t* parse.c (decode_specification_statement): Correct error in\n-\tchpice of matching function for \"allocatable\".\n-\n-2012-03-23  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* gfortran.h (GFC_MAX_LINE): Remove unused macro.\n-\n-2012-03-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n-\n-\tPR fortran/52559\n-\t* error.c (gfc_widechar_display_length): Consider tabs as\n-\tone character wide, as they're displayed as spaces.\n-\t(show_locus): Move tab handling to...\n-\t(print_wide_char_into_buffer): ... here.\n-\n-2012-03-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52585\n-\t* trans-intrinsic.c (gfc_conv_associated): Fix handling of\n-\tprocpointer dummy arguments.\n-\n-2012-03-16  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* trans-intrinsic.c (build_round_expr): Don't use BUILT_IN_IROUND\n-\tfor __float128.\n-\n-2012-03-15  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* f95-lang.c (gfc_init_builtin_functions): Initialize\n-\tBUILT_IN_IROUND.\n-\t* mathbuiltins.def: Add IROUND.\n-\t* trans-intrinsic.c (build_round_expr): Use BUILT_IN_IROUND if\n-\ttype size matches.\n-\t(gfc_build_intrinsic_lib_fndecls): Build iround functions.\n-\n-2012-03-12  Richard Guenther  <rguenther@suse.de>\n-\n-\t* f95-lang.c (builtin_type_for_size): Use gfc_type_for_size.\n-\n-2012-03-12  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52542\n-\t* decl.c (match_procedure_decl): If the interface\n-\tis bind(C), the procedure is as well.\n-\n-2012-03-10  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* convert.c (convert): Fold BOOLEAN_TYPE types to the proper variant.\n-\n-2012-03-09  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* Make-lang.in (convert.o): Depend on convert.h.\n-\t* convert.c: Header and comment cleanups.\n-\t(gfc_thruthvalue_conversion): Rename static function\n-\tto truthvalue_conversion.  Do not use 'internal_error' from here,\n-\tuse 'gcc_unreachable' instead.\n-\t(convert): Do not use 'error' for conversions to void, use\n-\t'gcc_unreachable' instead.  Likewise for conversions to non-scalar\n-\ttypes.  Do not hanlde ENUMERAL_TYPE, the front end never creates them.\n-\tClean up #if 0 code.\n-\n-2012-03-08  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52469\n-\t* trans-types.c (gfc_get_function_type): Handle backend_decl\n-\tof a procedure pointer.\n-\n-2012-03-06  Steven Bosscher  <steven@gcc.gnu.org>\n-\n-\t* f95-lang.c (yyerror, yylex): Remove.\n-\t(clear_binding_stack): Remove, fold into its only user.\n-\t(LANG_HOOKS_PRINT_IDENTIFIER): Do not re-define.\n-\t(ridpointers): Remove.\n-\t(gfc_eh_initialized_p): Make static.\n-\t(gfc_truthvalue_conversion): Move to convert.c.\n-\t(gfc_be_parse_file): Clear binding level stack when done.\n-\t(gfc_print_identifier): Remove.\n-\t(pushlevel): Remove ignored 'ignore' argument.  Update all callers.\n-\t(poplevel): Remove unused 'reverse' argument.  Update all callers.\n-\t(ggc_p): Remove.\n-\t(gfc_builtin_function): Make static. Do not attempt to make RTL for\n-\tbuiltin functions.\n-\t* convert.c (gfc_truthvalue_conversion): Moved here from f95-lang.c,\n-\tand made static.\n-\t* trans.h (pushlevel, poplevel): Adjust prototypes.\n-\t(gfc_truthvalue_conversion, gfc_builtin_function): Remove prototypes.\n-\t* trans-openmp.c: Update calls to pushlevel and poplevel.\n-\t* trans.c: Likewise.\n-\t* trans-decl.c: Likewise.\n-\n-2012-03-04  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/50981\n-\t* gfortran.h (gfc_is_class_container_ref): New prototype.\n-\t* class.c (gfc_is_class_container_ref): New function.\n-\t* trans-expr.c (gfc_conv_procedure_call): Add a \"_data\" component\n-\treference to polymorphic actual arguments.\n-\n-2012-03-04  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/50981\n-\t* trans-expr.c (gfc_conv_procedure_call): Save se->ss's value.\n-\tHandle the case of unallocated arrays passed to elemental procedures.\n-\n-2012-03-04  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* trans.h (struct gfc_ss_info): Move can_be_null_ref component from\n-\tthe data::scalar subcomponent to the toplevel.\n-\t* trans-expr.c (gfc_conv_expr): Update component reference.\n-\t* trans-array.c (gfc_add_loop_ss_code): Ditto.\n-\t(gfc_walk_elemental_function_args): Ditto.  Move the conditional setting\n-\tthe field out of the scalar-only block.\n-\n-2012-03-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n-\n-\tPR fortran/36160\n-\t* error.c (gfc_widechar_display_length, gfc_wide_display_length):\n-\tNew functions.\n-\t(print_wide_char_into_buffer): Return length written.\n-\t(show_locus): Fix locus displayed when wide characters are present.\n-\n-2012-03-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n-\n-\t* module.c (gfc_use_module): Improve error message some more.\n-\n-2012-03-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n-\n-\tPR fortran/52313\n-\t* module.c (gfc_use_module): Improve error messages.\n-\n-2012-03-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/48820\n-\t* resolve.c (resolve_actual_arglist): Properly reset\n-\tassumed_type_expr_allowed.\n-\n-2012-03-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* lang.opt (Wc-binding-type): New flag.\n-\t* options.c (gfc_init_options, gfc_handle_option): Handle it.\n-\t* invoke.texi (Wc-binding-type): Document it.\n-\t* gfortran.h (gfc_option_t): Add warn_c_binding_type.\n-\t* decl.c (verify_bind_c_sym): Handle -Wc-binding-type.\n-\t* symbol.c (gfc_set_default_type, verify_bind_c_derived_type):\n-\tDitto.\n-\n-2012-03-03  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/48820\n-\t* decl.c (gfc_match_decl_type_spec): Support type(*).\n-\t(gfc_verify_c_interop): Allow type(*).\n-\t* dump-parse-tree.c (show_typespec): Handle type(*).\n-\t* expr.c (gfc_copy_expr): Ditto.\n-\t* interface.c (compare_type_rank, compare_parameter,\n-\tcompare_actual_formal, gfc_procedure_use): Ditto.\n-\t* libgfortran.h (bt): Add BT_ASSUMED.\n-\t* misc.c (gfc_basic_typename, gfc_typename): Handle type(*).\n-\t* module.c (bt_types): Ditto.\n-\t* resolve.c (assumed_type_expr_allowed): New static variable.\n-\t(resolve_actual_arglist, resolve_variable, resolve_symbol):\n-\tHandle type(*).\n-\t* trans-expr.c (gfc_conv_procedure_call): Ditto.\n-\t* trans-types.c (gfc_typenode_for_spec, gfc_get_dtype): Ditto.\n-\n-2012-03-02  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52325\n-\t* primary.c (gfc_match_varspec): Add missing ;.\n-\n-2012-03-02  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52325\n-\t* primary.c (gfc_match_varspec): Add diagnostic for % with\n-\tnonderived types.\n-\n-2012-03-02  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52270\n-\t* expr.c (gfc_check_vardef_context): Fix check for\n-\tintent-in polymorphic pointer .\n-\t* interface.c (compare_parameter): Allow passing TYPE to\n-\tintent-in polymorphic pointer.\n-\n-2012-03-02  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52452\n-\t* resolve.c (resolve_intrinsic): Don't search for a\n-\tfunction if we know that it is a subroutine.\n-\n-2012-02-29  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/52386\n-\t* trans-expr.c (fcncall_realloc_result): Dereference the\n-\tdescriptor if needed.\n-\n-2012-02-22  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52335\n-\t* io.c (gfc_match_open): Remove bogus F2003 DELIM= check.\n-\n-2012-02-18  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52295\n-\t* interface.c (check_interface0): Internal procs in\n-\tgeneric interfaces are allowed in Fortran 2008.\n-\n-2012-02-17  Tobias Burnus  <burnus@net-b.de>\n-\t    Roland Stigge  <stigge@antcom.de>\n-\n-\tPR translation/52273\n-\t* interface.c (compare_actual_formal): Fix typo \"at at\".\n-\n-2012-02-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* gfortran.texi (Q exponent-letter): Fix grammar.\n-\n-2012-02-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* gfortran.texi (Status): Fix typos.\n-\t* invoke.texi (ffixed-form, fstack-arrays): Spell Fortran with\n-\ta majuscule.\n-\n-2012-02-17  Tobias Burnus  <burnus@net-b.de>\n-\t    Roland Stigge  <stigge@antcom.de>\n-\n-\tPR translation/52232\n-\tPR translation/52234\n-\tPR translation/52245\n-\tPR translation/52246\n-\tPR translation/52262\n-\tPR translation/52273\n-\t* io.c (gfc_match_open): Fix typo.\n-\t* interface.c (compare_actual_formal): Ditto.\n-\t* lang.opt (freal-4-real-8, freal-4-real-16, freal-8-real-16): Ditto.\n-\t* match.c (alloc_opt_list, gfc_match_nullify): Ditto.\n-\t* check.c (gfc_check_associated, gfc_check_null): Ditto.\n-\n-2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/50981\n-\t* trans-stmt.c (gfc_get_proc_ifc_for_call): New function.\n-\t(gfc_trans_call): Use gfc_get_proc_ifc_for_call.\n-\n-2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* trans-array.c (gfc_walk_elemental_function_args,\n-\tgfc_walk_function_expr): Move call to gfc_get_proc_ifc_for_expr out\n-\tof gfc_walk_elemental_function_args.\n-\t* trans-stmt.c (gfc_trans_call): Ditto.\n-\t* trans-array.h (gfc_get_proc_ifc_for_expr): New prototype.\n-\t(gfc_walk_elemental_function_args): Update prototype.\n-\n-2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* trans-array.c (gfc_get_proc_ifc_for_expr): New function.\n-\t(gfc_walk_elemental_function_args): Move code to\n-\tgfc_get_proc_ifc_for_expr and call it.\n-\n-2012-02-08  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52151\n-\t* trans-expr.c (fcncall_realloc_result): Set also the stride.\n-\n-2012-02-07  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51514\n-\t* trans-expr.c (gfc_conv_procedure_call): Add _data component\n-\tfor calls of scalar CLASS actuals to TYPE dummies.\n-\n-2012-02-05  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/48847\n-\t* trans-decl.c:  Warn about unused dummy procedure arguments\n-\tif -Wunused-dummy-argument is specified.  Suppress middle-end\n-\twarnings about procedure arguments.\n-\n-2012-02-05  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\t* trans-array.c (gfc_array_allocate): Zero memory for all class\n-\tarray allocations.\n-\t* trans-stmt.c (gfc_trans_allocate): Ditto for class scalars.\n-\n-\tPR fortran/52102\n-\t* trans-stmt.c (gfc_trans_allocate): Before correcting a class\n-\tarray reference, ensure that 'dataref' points to the _data\n-\tcomponent that is followed by the array reference..\n-\n-2012-02-02  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/41587\n-\tPR fortran/46356\n-\tPR fortran/51754\n-\tPR fortran/50981\n-\t* class.c (insert_component_ref, class_data_ref_missing,\n-\tgfc_fix_class_refs): New functions.\n-\t* gfortran.h (gfc_fix_class_refs): New prototype.\n-\t* trans-expr.c (gfc_conv_expr): Remove special case handling and call\n-\tgfc_fix_class_refs instead.\n-\n-2012-02-02  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/52012\n-\t* trans-expr.c (fcncall_realloc_result): If variable shape is\n-\tcorrect, retain the bounds, whatever they are.\n-\n-2012-02-02  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52093\n-\t* simplify.c (gfc_simplify_size): Handle INTRINSIC_PARENTHESES.\n-\n-2012-02-01  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/51958\n-\t* frontend-passes.c (convert_elseif):  New function.\n-\t(optimize_namespace):  Call it.\n-\n-2012-02-01  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52024\n-\t* module.c (MOD_VERSION): Bump.\n-\t(mio_typebound_proc): Read/write is_operator from/to the\n-\t.mod file.\n-\n-2012-02-01  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52059\n-\t* trans-expr.c (gfc_conv_procedure_call): Add array ref\n-\tonly to variables.\n-\n-2012-01-31  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52024\n-\t* gfortran.h (gfc_tbp_generic): Store whether the\n-\tgeneric is an operator.\n-\t* decl.c (gfc_match_generic): Set that flag.\n-\t* resolve.c (check_generic_tbp_ambiguity): Use it in the\n-\tgfc_compare_interfaces check.\n-\n-2012-01-31  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52029\n-\t* class.c (gfc_find_derived_vtab): Mark _copy function as pure.\n-\n-2012-01-31  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52013\n-\t* class.c (get_unique_hashed_string): Adapt trim length.\n-\t(gfc_build_class_symbol) Encode also corank in the container name.\n-\n-2012-01-31  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/52012\n-\t* trans-expr.c (fcncall_realloc_result): Correct calculation of\n-\tresult offset.\n-\n-2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* module.c (pointer_info): Make true_name and module pointers\n-\trather than arrays, order pointers before other fields.\n-\t(free_pi_tree): free true_name and module as well.\n-\t(mio_read_string): Rename to read_string.\n-\t(mio_write_string): Remove.\n-\t(load_commons): Use read_string.\n-\t(read_module): Use read_string rather than mio_internal_string.\n-\t(write_blank_common): Call write_atom directly.\n-\t(write_symbol): Likewise.\n-\n-2012-01-29  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/41600\n-\t* expr.c (gfc_default_initializer): Convert the values if\n-\tthe type does not match.\n-\n-2012-01-29  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51972\n-\t* trans-array.c (structure_alloc_comps): Fix assignment of\n-\tpolymorphic components (polymorphic deep copying).\n-\n-2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/51808\n-\t* decl.c (set_binding_label): Make binding_label argument const.\n-\t(curr_binding_label): Constify.\n-\t* gfortran.h (gfc_symbol): Constify binding_label.\n-\t(gfc_common_head): Likewise.\n-\t(get_iso_c_sym): Likewise.\n-\t* match.c (gfc_match_name_C): Constify buffer argument.\n-\t* match.h (gfc_match_name_C): Likewise.\n-\t* resolve.c (set_name_and_label): Constify binding_label argument.\n-\t(gfc_iso_c_sub_interface): Constify binding_label variable.\n-\t* symbol.c (get_iso_c_sym): Constify binding_label argument.\n-\n-2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/51808\n-\t* decl.c (set_binding_label): Move prototype from match.h to here.\n-\t(curr_binding_label): Make a pointer rather than static array.\n-\t(build_sym): Check sym->binding_label pointer rather than array,\n-\tupdate set_binding_label call, handle curr_binding_label changes.\n-\t(set_binding_label): Handle new curr_binding_label, dest_label\n-\tdouble ptr, and sym->binding_label.\n-\t(verify_bind_c_sym): Handle sym->binding_label being a pointer.\n-\t(set_verify_bind_c_sym): Check sym->binding_label pointer rather\n-\tthan array, update set_binding_label call.\n-\t(gfc_match_bind_c_stmt): Handle curr_binding_label change.\n-\t(match_procedure_decl): Update set_binding_label call.\n-\t(gfc_match_bind_c): Change binding_label to pointer, update\n-\tgfc_match_name_C call.\n-\t* gfortran.h (GFC_MAX_BINDING_LABEL_LEN): Remove macro.\n-\t(gfc_symbol): Make binding_label a pointer.\n-\t(gfc_common_head): Likewise.\n-\t* match.c (gfc_match_name_C): Heap allocate bind(C) name.\n-\t* match.h (gfc_match_name_C): Change prototype argument.\n-\t(set_binding_label): Move prototype to decl.c.\n-\t* module.c (struct pointer_info): Make binding_label a pointer.\n-\t(free_pi_tree): Free unused binding_label.\n-\t(mio_read_string): New function.\n-\t(mio_write_string): New function.\n-\t(load_commons): Redo reading of binding_label.\n-\t(read_module): Likewise.\n-\t(write_common_0): Change to write empty string instead of name if\n-\tno binding_label.\n-\t(write_blank_common): Write empty string for binding label.\n-\t(write_symbol): Change to write empty string instead of name if no\n-\tbinding_label.\n-\t* resolve.c (gfc_iso_c_func_interface): Don't set binding_label.\n-\t(set_name_and_label): Make binding_label double pointer, use\n-\tasprintf.\n-\t(gfc_iso_c_sub_interface): Make binding_label a pointer.\n-\t(resolve_bind_c_comms): Handle cases if\n-\tgfc_common_head->binding_label is NULL.\n-\t(gfc_verify_binding_labels): sym->binding_label is a pointer.\n-\t* symbol.c (gfc_new_symbol): Rely on XCNEW zero init for\n-\tbinding_label.\n-\t(gen_special_c_interop_ptr): Don't set binding label.\n-\t(generate_isocbinding_symbol): Insert binding_label into symbol\n-\ttable.\n-\t(get_iso_c_sym): Use pointer assignment instead of strcpy.\n-\t* trans-common.c (gfc_sym_mangled_common_id): Handle\n-\tcom->binding_label being a pointer.\n-\t* trans-decl.c (gfc_sym_mangled_identifier): Handle\n-\tsym->binding_label being a pointer.\n-\t(gfc_sym_mangled_function_id): Likewise.\n-\n-2012-01-29  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52038\n-\t* resolve.c (symbol_as): Remove unused, accidentally\n-\tadded function.\n-\n-2012-01-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51972\n-\t* trans-stmt.c (gfc_trans_allocate): Properly check whether\n-\twe have a BT_CLASS which needs to be memset.\n-\n-2012-01-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52022\n-\t* trans-expr.c (gfc_conv_procedure_call): Fix passing\n-\tof functions, which return allocatables.\n-\n-2012-01-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52016\n-\t* resolve.c (resolve_formal_arglist): Fix elemental\n-\tconstraint checks for polymorphic dummies also for\n-\tpointers.\n-\n-2012-01-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51970\n-\tPR fortran/51977\n-\t* primary.c (gfc_match_varspec. gfc_match_rvalue): Set\n-\thandle array spec for BT_CLASS.\n-\t* expr.c (gfc_get_variable_expr, gfc_lval_expr_from_sym)\n-\t* frontend-passes.c (create_var): Ditto.\n-\t* resolve.c (resolve_actual_arglist, resolve_assoc_var): Ditto.\n-\t* trans-decl.c (gfc_trans_deferred_vars): Use class_pointer\n-\tinstead of attr.pointer.\n-\t(gfc_generate_function_code): Use CLASS_DATA (sym) for BT_CLASS.\n-\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Move assert.\n-\t* trans-stmt.c (trans_associate_var): Ask for the descriptor.\n-\n-2012-01-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51953\n-\t* match.c (gfc_match_allocate): Allow more than allocate\n-\tobject with SOURCE=.\n-\n-2012-01-27  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/52016\n-\t* resolve.c (resolve_formal_arglist): Fix elemental\n-\tconstraint checks for polymorphic dummies.\n-\n-2012-01-27  Paul Thomas  <pault@gcc.gnu.org>\n-\t    Tobias Burnus <burnus@gcc.gnu.org>\n-\n-\tPR fortran/48705\n-\tPR fortran/51870\n-\tPR fortran/51943\n-\tPR fortran/51946\n-\t* trans-array.c (gfc_array_init_size): Add two extra arguments\n-\tto convey the dynamic element size of a calls object and to\n-\treturn the number of elements that have been allocated.\n-\t(gfc_array_allocate): Add the same arguments and use them to\n-\tcall gfc_array_init_size.  Before the allocation dereference\n-\tthe data pointer, if necessary. Set the allocated array to zero\n-\tif the class element size or expr3 are non-null.\n-\t* trans-expr.c (gfc_conv_class_to_class): Give this function\n-\tglobal scope.\n-\t(get_class_array_ref): New function.\n-\t(gfc_copy_class_to_class): New function.\n-\t* trans-array.h : Update prototype for gfc_array_allocate.\n-\t* trans-stmt.c (gfc_trans_allocate): For non-variable class\n-\tSTATUS expressions extract the class object and the dynamic\n-\telement size. Use the latter to call gfc_array_allocate and\n-\tthe former for setting the vptr and, via\n-\tgfc_copy_class_to_clasfc_cs, to copy to the allocated data.\n-\t* trans.h : Prototypes for gfc_get_class_array_ref,\n-\tgfc_copy_class_to_class and gfc_conv_class_to_class.\n-\n-2012-01-25  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* resolve.c (symbol_as): Check also for attr.class_ok.\n-\n-2012-01-25  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51995\n-\t* class.c (gfc_build_class_symbol): Fix invalid freeing\n-\tissue with fclass->f2k_derived.\n-\n-2012-01-25  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51995\n-\t* class.c (gfc_build_class_symbol): Ensure that\n-\tfclass->f2k_derived is set.\n-\n-2012-01-25  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51966\n-\t* resolve.c (resolve_structure_cons): Only create an\n-\tarray constructors for nonscalars.\n-\n-2012-01-23  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51948\n-\t* check.c (variable_check): Fix checking for\n-\t variables and deeply nested BLOCKs.\n-\n-2012-01-21  Tobias Burnus  <burnus@net-b.de>\n-\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\tPR fortran/50556\n-\t* symbol.c (check_conflict): namelist-group-name cannot have the SAVE\n-\tattribute.\n-\n-2012-01-21  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51913\n-\t* interface.c (compare_parameter): Fix CLASS comparison.\n-\n-2012-01-20  Tobias Burnus  <burnus@net-b.de>\n-\t    Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/51056\n-\t* module.c (load_needed, read_module): Don't mark __vtab etc.\n-\tas use_only.\n-\n-2012-01-19  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51904\n-\t* expr.c (gfc_build_intrinsic_call): Also set the symtree.\n-\n-2012-01-18  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/51634\n-\t* trans-expr.c (gfc_conv_procedure_call): Deallocate allocatable\n-\tcomponents of temporary class arguments.\n-\n-2012-01-17  Tobias Burnus  <burnus@net-b.de>\n-\t    Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/51869\n-\t* trans-expr.c (alloc_scalar_allocatable_for_assignment): Nullify\n-\tLHS after allocation, if it has allocatable components.\n-\t* f95-lang.c (gfc_init_builtin_functions): Add BUILT_IN_CALLOC.\n-\n-2012-01-16  Mikael Morin  <mikael@gcc.gnu.org>\n-\t    Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/50981\n-\t* trans-array.c (gfc_walk_elemental_function_args): Fix\n-\tpassing of deallocated allocatables/pointers as absent argument.\n-\n-2012-01-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51809\n-\t* class.c (gfc_find_derived_vtab): Mark __vtab and\n-\t__def_init as FL_VARIABLE not as FL_PARAMETER.\n-\t* expr.c (gfc_simplify_expr): Remove special\n-\thandling of __vtab.\n-\t* resolve.c (resolve_values): Ditto.\n-\t* trans-decl.c (gfc_get_symbol_decl): Mark __vtab\n-\tand __def_init as TREE_READONLY.\n-\n-2012-01-16  Zydrunas Gimbutas  <gimbutas@cims.nyu.edu>\n-\tAndreas Kloeckner  <kloeckner@cims.nyu.edu>\n-\tSteven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\tPR fortran/48426\n-\t* gfortran.h (gfc_option_t): Add members flag_*_kind to store kind.\n-\t* lang.opt: Add options -freal-4-real-8, -freal-4-real-10,\n-\t-freal-4-real-16, -freal-8-real-4, -freal-8-real-10, -freal-8-real-16\n-\tand -finteger-4-integer-8. User-desired type conversion information.\n-\t* decl.c (gfc_match_old_kind_spec,kind_expr): Type conversions\n-\tin declaration parsing.\n-\t* trans-types.c (gfc_init_kinds): User-specified type conversion\n-\tchecked for current backend.\n-\t* primary.c (match_integer_constant,match_real_constant): Implement\n-\ttype conversion in constant parsing.\n-\t* options.c (gfc_init_options,gfc_handle_option): Translate input\n-\toptions to flags in internal options data structure.\n-\t* invoke.texi: Document new options.  Re-order options in Options\n-\tsummary section.\n-\n-2012-01-16  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\t* trans-array.c (gfc_trans_create_temp_array): In the case of a\n-\tclass array temporary, detect a null 'eltype' on entry and use\n-\t'initial' to provde the class reference and so, through the\n-\tvtable, the element size for the dynamic type.\n-\t* trans-stmt.c (gfc_conv_elemental_dependencies): For class\n-\texpressions, set 'eltype' to null and pass the values via the\n-\t'initial' expression.\n-\n-2012-01-14  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51800\n-\t* resolve.c (build_default_init_expr): Also initialize\n-\tnonconstant-length strings with -finit-character=<n>.\n-\n-2011-01-14  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51816\n-\t* module.c (read_module): Don't make nonexisting\n-\tintrinsic operators as found.\n-\t(rename_list_remove_duplicate): New function.\n-\t(gfc_use_modules): Use it.\n-\n-2012-01-13  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/48351\n-\t* trans-array.c (structure_alloc_comps): Suppress interative\n-\tcall to self, when current component is deallocated using\n-\tgfc_trans_dealloc_allocated.\n-\t* class.c (gfc_build_class_symbol): Copy the 'alloc_comp'\n-\tattribute from the declared type to the class structure.\n-\n-2012-01-13  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51842\n-\t* fortran/trans-types.c (gfc_init_kinds): Use PTRDIFF_TYPE\n-\tinstead of a signed int of size POINTER_SIZE for\n-\tgfc_index_integer_kind.\n-\n-2012-01-12  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/36755\n-\t* intrinsic.texi (CHMOD): Extend a bit and remove statement\n-\tthat /bin/chmod is called.\n-\n-2012-01-10  Gerald Pfeifer  <gerald@pfeifer.com>\n-\n-\t* gfortran.texi (Fortran 2003 Status): Fix grammar.\n-\n-2012-01-10  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51652\n-\t* resolve.c (resolve_allocate_expr): For non-deferred char lengths,\n-\tcheck whether type-spec matches declaration.\n-\n-2012-01-10  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* resolve.c (resolve_ordinary_assign): Improve error wording.\n-\n-2012-01-09  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/51791\n-\t* interface.c (matching_typebound_op): Drill down through\n-\tpossible parentheses to obtain base expression. Do not test for\n-\t'class_ok' but, instead for the class structure components.\n-\t* resolve.c (resolve_ordinary_assign): Extend error message for\n-\tpolymorphic assignment to advise checking for specific\n-\tsubroutine.\n-\n-\tPR fortran/51792\n-\t* resolve.c (resolve_typebound_function): Restore 'static' to\n-\tdeclaration.\n-\n-2012-01-09  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/51758\n-\t* trans-array.c (gfc_walk_elemental_function_args):\n-\tSkip over NULL() actual arguments.\n-\n-2012-01-09  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* gfortran.texi: Bump copyright year.\n-\t(Fortran 2003 Status): Update polymorphism item, add\n-\titem for generic interface with DT name.\n-\n-2012-01-09  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51578\n-\t* gfortran.h (gfc_use_list):\n-\t* match.h (gfc_use_module): Rename to ...\n-\t(gfc_use_modules): ... this.\n-\t* module.c (use_locus, specified_nonint, specified_int): Remove\n-\tglobal variable.\n-\t(module_name): Change type to const char*, used with gfc_get_string.\n-\t(module_list): New global variable.\n-\t(free_rename): Free argument not global var.\n-\t(gfc_match_use): Save match to module_list.\n-\t(load_generic_interfaces, read_module): Don't free symtree.\n-\t(write_dt_extensions, gfc_dump_module): Fix module-name I/O due to the\n-\ttype change of module_name.\n-\t(write_symbol0, write_generic): Optimize due to the type change.\n-\t(import_iso_c_binding_module, use_iso_fortran_env_module): Use\n-\tlocus of rename->where.\n-\t(gfc_use_module): Take module_list as argument.\n-\t(gfc_use_modules): New function.\n-\t(gfc_module_init_2, gfc_module_done_2): Init module_list, rename_list.\n-\t* parse.c (last_was_use_stmt): New global variable.\n-\t(use_modules): New function.\n-\t(decode_specification_statement, decode_statement): Move USE match up\n-\tand call use_modules.\n-\t(next_free, next_fixed): Call use_modules.\n-\t(accept_statement): Don't call gfc_module_use.\n-\n-2012-01-06  Tobias Burnus <burnus@net-b.de>\n-\n-\t* trans-openmp.c (gfc_omp_clause_dtor, gfc_trans_omp_array_reduction):\n-\tUpdate call to gfc_trans_dealloc_allocated.\n-\t* trans.c (gfc_allocate_using_malloc): Fix spacing.\n-\t(gfc_allocate_allocatable): For gfc_allocate_using_lib, jump to\n-\tlabel_finish when an error occurs.\n-\t(gfc_deallocate_with_status): Call caf_deregister for -fcoarray=lib.\n-\t* trans.h (gfc_allocate_allocatable, gfc_deallocate_with_status):\n-\tUpdate prototype.\n-\t(gfor_fndecl_caf_deregister): New tree symbol.\n-\t* trans-expr.c (gfc_conv_procedure_call): Update\n-\tgfc_deallocate_with_status and gfc_trans_dealloc_allocated calls.\n-\t* trans-array.c (gfc_array_allocate, gfc_trans_dealloc_allocated,\n-\tstructure_alloc_comps, gfc_trans_deferred_array): Ditto.\n-\t(gfc_array_deallocate): Handle coarrays with -fcoarray=lib.\n-\t* trans-array.h (gfc_array_deallocate, gfc_array_allocate,\n-\tgfc_trans_dealloc_allocated): Update prototypes.\n-\t* trans-stmt.c (gfc_trans_sync): Fix indentation.\n-\t(gfc_trans_allocate): Fix errmsg padding and label handling.\n-\t(gfc_trans_deallocate): Ditto and handle -fcoarray=lib.\n-\t* expr.c (gfc_is_coarray): Fix algorithm for BT_CLASS.\n-\t* libgfortran.h (GFC_STAT_STOPPED_IMAGE): Use large value\n-\tto avoid other stats accidentally matching this one.\n-\t* trans-decl.c (gfor_fndecl_caf_deregister): New global var.\n-\t(gfc_build_builtin_function_decls): Fix prototype decl of caf_register\n-\tand add decl for caf_deregister.\n-\t(gfc_trans_deferred_vars): Handle CAF vars with -fcoarrays=lib.\n-\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Update call to\n-\tgfc_deallocate_with_status.\n-\n-2012-01-05  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/PR48946\n-\t* resolve.c (resolve_typebound_static): If the typebound\n-\tprocedure is 'deferred' try to find the correct specific\n-\tprocedure in the derived type operator space itself.\n-\n-2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/50981\n-\t* trans-array.h (gfc_walk_elemental_function_args): New argument.\n-\t* trans-intrinsic.c (gfc_walk_intrinsic_function): Update call.\n-\t* trans-stmt.c (gfc_trans_call): Ditto.\n-\t* trans-array.c (gfc_walk_function_expr): Ditto.\n-\t(gfc_walk_elemental_function_args): Get the dummy argument list\n-\tif possible.  Check that the dummy and the actual argument are both\n-\toptional, and set can_be_null_ref accordingly.\n-\n-2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\tPR fortran/50981\n-\t* trans.h (struct gfc_ss_info): New field data::scalar::can_be_null_ref\n-\t* trans-array.c: If the reference can be NULL, save the reference\n-\tinstead of the value.\n-\t* trans-expr.c (gfc_conv_expr): If we have saved a reference,\n-\tdereference it.\n-\n-2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>\n-\n-\t* trans-expr.c (gfc_conv_expr): Move address taking...\n-\t(gfc_conv_expr_reference): ... here.\n-\n-2012-01-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/49693\n-\t* trans-common.c (create_common): Update copyright years.  Mark\n-\tvariables as used to avoid warnings about unused variables in\n-\tcommon blocks.\n-\n-2012-01-03  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* gfortran.h (struct gfc_expr): Add missing \"struct\"\n-\tqualifier for member base_expr.\n-\n-2012-01-02  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/51529\n-\t* trans-array.c (gfc_array_allocate): Null allocated memory of\n-\tnewly allocted class arrays.\n-\n-\tPR fortran/46262\n-\tPR fortran/46328\n-\tPR fortran/51052\n-\t* interface.c(build_compcall_for_operator): Add a type to the\n-\texpression.\n-\t* trans-expr.c (conv_base_obj_fcn_val): New function.\n-\t(gfc_conv_procedure_call): Use base_expr to detect non-variable\n-\tbase objects and, ensuring that there is a temporary variable,\n-\tbuild up the typebound call using conv_base_obj_fcn_val.\n-\t(gfc_trans_class_assign): Pick out class procedure pointer\n-\tassignments and do the assignment with no further prcessing.\n-\t(gfc_trans_class_array_init_assign, gfc_trans_class_init_assign\n-\tgfc_trans_class_assign): Move to top of file.\n-\t* gfortran.h : Add 'base_expr' field to gfc_expr.\n-\t* resolve.c (get_declared_from_expr): Add 'types' argument to\n-\tswitch checking of derived types on or off.\n-\t(resolve_typebound_generic_call): Set the new argument.\n-\t(resolve_typebound_function, resolve_typebound_subroutine):\n-\tSet 'types' argument for get_declared_from_expr appropriately.\n-\tIdentify base expression, if not a variable, in the argument\n-\tlist of class valued calls. Assign it to the 'base_expr' field\n-\tof the final expression. Strip away all references after the\n-\tlast class reference.\n-\n-2012-01-02  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51682\n-\t* trans-intrinsic.c (trans_this_image, trans_image_index,\n-\ttrans_num_images, conv_intrinsic_cobound): Fold_convert the\n-\tcaf_num_images/caf_this_images variables to the correct int kind.\n-\n-2012-01-01  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* gfortranspec.c (lang_specific_driver): Update copyright notice\n-\tdates.\n \f\n-Copyright (C) 2012 Free Software Foundation, Inc.\n+Copyright (C) 2013 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "5045220f03828028724f66b2103e73079f53c01e", "filename": "gcc/fortran/ChangeLog-2012", "status": "added", "additions": 2798, "deletions": 0, "changes": 2798, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2Ffortran%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2Ffortran%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog-2012?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -0,0 +1,2798 @@\n+2012-12-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55692\n+\t* check.c (gfc_check_associated): Remove a \"gcc_assert (0)\".\n+\n+2012-12-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55763\n+\t* check.c (gfc_check_move_alloc): Handle unlimited polymorphic.\n+\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Ditto.\n+\n+2012-12-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/48976\n+\t* gfortran.h (gfc_inquire struct): Add pointer for inquire stream.\n+\t* io.c (io_tag): Add tag for inquire stream. (match_inquire_element):\n+\tAdd matcher for new tag. (gfc_resolve_inquire): Resolve new tag.\n+\t* ioparm.def: Add new parameter for inquire stream.\n+\t* trans-io.c (gfc_trans_inquire): Add tranlste code for inquire\n+\tstream.\n+\n+2012-12-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54884\n+\t* module.c (write_symbol1_recursion): Set attr.public_use.\n+\t* interface.c (check_sym_interfaces, check_uop_interfaces,\n+\tgfc_check_interfaces): Remove attr.public_use code.\n+\t* resolve.c (resolve_function, resolve_variable,\n+\tresolve_typebound_procedure): Ditto.\n+\n+2012-12-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55763\n+\t* module.c (mio_component): Don't skip _hash's initializer.\n+\t* resolve.c (resolve_select_type): Add an assert.\n+\t* trans-expr.c (gfc_conv_procedure_call): Handle\n+\tINTENT(OUT) for UNLIMIT_POLY.\n+\n+2012-12-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR bootstrap/54659\n+\t* gfortran.h: Do not include gmp.h here.\n+\n+2012-12-21  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/55763\n+\t* match.c (select_type_set_tmp): Return is a derived type or\n+\tclass typespec has no derived type.\n+\t* resolve.c (resolve_fl_var_and_proc): Exclude select type\n+\ttemporaries from 'pointer'.\n+\t(resolve_symbol): Exclude select type temporaries from tests\n+\tfor assumed size and assumed rank.\n+\n+2012-12-20  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/36044\n+\t* gfortran.h (gfc_isym_id): Add GFC_ISYM_BACKTRACE.\n+\t* intrinsic.c (add_subroutines): Add \"backtrace\".\n+\t* intrinsic.texi (BACKTRACE): Document BACKTRACE intrinsic.\n+\n+2012-12-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54818\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer): Ensure that\n+\tthe string length is of type gfc_charlen_type_node.\n+\n+2012-12-19  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* array.c (resolve_array_list): Apply C4106.\n+\t* check.c (gfc_check_same_type_as): Exclude polymorphic\n+\tentities from check for extensible types. Improved error\n+\tfor disallowed argument types to name the offending type.\n+\t* class.c : Update copyright date.\n+\t(gfc_class_null_initializer): Add argument for initialization\n+\texpression and deal with unlimited polymorphic typespecs.\n+\t(get_unique_type_string): Give unlimited polymorphic\n+\tentities a type string.\n+\t(gfc_intrinsic_hash_value): New function.\n+\t(gfc_build_class_symbol): Incorporate unlimited polymorphic\n+\tentities.\n+\t(gfc_find_derived_vtab): Deal with unlimited polymorphic\n+\tentities.\n+\t(gfc_find_intrinsic_vtab): New function.\n+\t* decl.c (gfc_match_decl_type_spec): Match typespec for\n+\tunlimited polymorphic type.\n+\t(gfc_match_data_decl): Skip to 'ok' if unlimited polymorphic.\n+\texpr.c (gfc_check_pointer_assign): Apply C717.  If unlimited\n+\tpolymorphic lvalue, find rvalue vtable for all typespecs,\n+\texcept unlimited polymorphic expressions.\n+\t(gfc_check_vardef_context): Handle unlimited polymorphic\n+\tentities.\n+\t* gfortran.h : Add unlimited polymorphic attribute. Add\n+\tsecond arg to gfc_class_null_initializer primitive and\n+\tprimitive for gfc_find_intrinsic_vtab.  Add UNLIMITED_POLY\n+\tto detect unlimited polymorphic expressions.\n+\t* interface.c (gfc_compare_types): If expr1 is unlimited\n+\tpolymorphic, always return 1. If expr2 is unlimited polymorphic\n+\tenforce C717.\n+\t(gfc_compare_interfaces): Skip past conditions that do not\n+\tapply for unlimited polymorphic entities.\n+\t(compare_parameter): Make sure that an unlimited polymorphic,\n+\tallocatable or pointer, formal argument is matched by an\n+\tunlimited polymorphic actual argument.\n+\t(compare_actual_formal): Ensure that an intrinsic vtable exists\n+\tto match an unlimited polymorphic formal argument.\n+\t* match.c (gfc_match_allocate): Type kind parameter does not\n+\tneed to match an unlimited polymorphic allocate-object.\n+\t(alloc_opt_list): An unlimited polymorphic allocate-object\n+\trequires a typespec or a SOURCE tag.\n+\t(select_intrinsic_set_tmp): New function.\n+\t(select_type_set_tmp): Call new function.  If it returns NULL,\n+\tbuild a derived type or class temporary instead.\n+\t(gfc_match_type_is): Remove restriction to derived types only.\n+\tBind(C) or sequence derived types not permitted.\n+\t* misc (gfc_typename):  Printed CLASS(*) for unlimited\n+\tpolymorphism.\n+\t* module.c : Add AB_UNLIMITED_POLY to pass unlimited\n+\tpolymorphic attribute to and from modules.\n+\t* resolve.c (resolve_common_vars): Unlimited polymorphic\n+\tentities cannot appear in common blocks.\n+\t(resolve_deallocate_expr): Deallocate unlimited polymorphic\n+\tenities.\n+\t(resolve_allocate_expr): Likewise for allocation.  Make sure\n+\tvtable exists.\n+\t(gfc_type_is_extensible): Unlimited polymorphic entities are\n+\tnot extensible.\n+\t(resolve_select_type): Handle unlimited polymorphic selectors.\n+\tEnsure that length type parameters are assumed and that names\n+\tfor intrinsic types are generated.\n+\t(resolve_fl_var_and_proc): Exclude select type temporaries\n+\tfrom test of extensibility of type.\n+\t(resolve_fl_variable): Likewise for test that assumed character\n+\tlength must be a dummy or a parameter.\n+\t(resolve_fl_derived0): Return SUCCESS unconditionally for\n+\tunlimited polymorphic entities. Also, allow unlimited\n+\tpolymorphic components.\n+\t(resolve_fl_derived): Return SUCCESS unconditionally for\n+\tunlimited polymorphic entities.\n+\t(resolve_symbol): Return early with unlimited polymorphic\n+\tentities.\n+\t* simplifiy.c : Update copyright year.\n+\t(gfc_simplify_extends_type_of): No simplification possible\n+\tfor unlimited polymorphic arguments.\n+\t* symbol.c (gfc_use_derived): Nothing to do for unlimited\n+\tpolymorphic \"derived type\".\n+\t(gfc_type_compatible): Return unity if ts1 is unlimited\n+\tpolymorphic.\n+\t* trans-decl.c (create_function_arglist) Formal arguments\n+\twithout a character length should be treated in the same way\n+\tas passed lengths.\n+\t(gfc_trans_deferred_vars): Nullify the vptr of unlimited\n+\tpolymorphic pointers. Avoid unlimited polymorphic entities\n+\ttriggering gcc_unreachable.\n+\t* trans-expr.c (gfc_conv_intrinsic_to_class): New function.\n+\t(gfc_trans_class_init_assign): Make indirect reference of\n+\tsrc.expr.\n+\t(gfc_trans_class_assign): Expression NULL of unknown type\n+\tshould set NULL vptr on lhs. Treat C717 cases where lhs is\n+\ta derived type and the rhs is unlimited polymorphic.\n+\t(gfc_conv_procedure_call): Handle the conversion of a non-class\n+\tactual argument to match an unlimited polymorphic formal\n+\targument.  Suppress the passing of a character string length\n+\tin this case.  Make sure that calls to the character __copy\n+\tfunction have two character string length arguments.\n+\t(gfc_conv_initializer): Pass the initialization expression to\n+\tgfc_class_null_initializer.\n+\t(gfc_trans_subcomponent_assign): Ditto.\n+\t(gfc_conv_structure): Move handling of _size component.\n+\ttrans-intrinsic.c: (gfc_conv_same_type_as): Handle conditions\n+\twhere unlimited polymorphic arguments have null vptr.\n+\t* trans-stmt.c (trans_associate_var): Correctly treat array\n+\ttemporaries associated with unlimited polymorphic selectors.\n+\tRecover the overwritten dtype for the descriptor. Use the _size\n+\tfield of the vptr for character string lengths.\n+\t(gfc_trans_allocate): Cope with unlimited polymorphic allocate\n+\tobjects; especially with character source tags.\n+\t(reset_vptr): New function.\n+\t(gfc_trans_deallocate): Call it.\n+\t* trans-types.c (gfc_get_derived_type): Detect unlimited\n+\tpolymorphic types and deal with cases where the derived type of\n+\tcomponents is null.\n+\t* trans.c : Update copyright year.\n+\t(trans_code): Call gfc_trans_class_assign for C717 cases where\n+\tthe lhs is not unlimited polymorphic.\n+\n+2012-12-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55733\n+\t* trans-decl.c (gfc_create_string_length): Avoid setting\n+\tTREE_STATIC for automatic variables with -fno-automatic.\n+\n+2012-12-19  Tobias Burnus  <burnus@net-b.de>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\t    Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55636\n+\tPR fortran/55733\n+\t* gfortran.h (GFC_PREFIX): Define.\n+\t* trans-decl.c (gfc_create_string_length): For VAR_DECLs that\n+\twill be TREE_STATIC, use GFC_PREFIX to mangle the names. Handle\n+\t-fno-automatic\n+\t(gfc_trans_deferred_vars): Don't free variables SAVEd via\n+\t-fno-automatic.\n+\n+2012-12-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55197\n+\t* module.c (gfc_use_module): Free rename list only for\n+\tinternally generated intrinsic modules.\n+\n+2012-12-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Set dynamic\n+\ttype of the FROM variable to the declared type.\n+\n+2012-12-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55638\n+\t* resolve.c (resolve_formal_arglist): Allow VALUE without\n+\tINTENT for ELEMENTAL procedures.\n+\n+2012-12-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/52909\n+\t* trans-decl.c (get_proc_pointer_decl): Apply name mangling.\n+\n+2012-12-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-array.c (structure_alloc_comps): Use NULL_TREE in the\n+\tcall to gfc_deallocate_scalar_with_status.\n+\t* trans-decl.c (gfc_trans_deferred_vars): Pass symbol.\n+\t* trans-stmt.c (gfc_trans_deallocate): Pass polymorphic variable.\n+\n+2012-12-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/55593\n+\t* frontend-passes.c (doloop_code):  Use resolved_sym\n+\tinstead of n.sym->formal for formal argument list\n+\tto get the correct version for all generic subroutines.\n+\n+2012-12-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (generate_component_assignments): Fix memleak.\n+\n+2012-12-03  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55548\n+\t* intrinsic.texi (SYSTEM_CLOCK): Update documentation of SYSTEM_CLOCK.\n+\n+2012-12-03  Tobias Burnus  <burnus@net-b.de>\n+\t    Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/37336\n+\t* class.c (gfc_is_finalizable): New function.\n+\t* gfortran.h (gfc_is_finalizable): Its prototype.\n+\t* module.c (mio_component): Read initializer for vtype's _final.\n+\t* resolve.c (resolve_fl_derived0): Call gfc_is_finalizable.\n+\t* trans-expr.c (gfc_vtable_final_get): New function.\n+\t(conv_parent_component_references): Fix comment.\n+\t(gfc_conv_variable): Fix for scalar coarray components.\n+\t* trans-intrinsic.c (conv_intrinsic_move_alloc): For BT_CLASS,\n+\tpass the BT_CLASS type and not the declared type to\n+\tgfc_deallocate_scalar_with_status.\n+\t* trans.h (gfc_vtable_final_get): New prototype.\n+\n+2012-12-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55475\n+\t* scanner.c (gfc_next_char_literal): Fix setting locus\n+\tto free_line_length for the error message.\n+\t* error.c (show_locus): Fix potential out-of-bounds\n+\tread.\n+\n+2012-12-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/37336\n+\t* class.c (finalizer_insert_packed_call): New static function.\n+\t(finalize_component, generate_finalization_wrapper):\n+\tFix coarray handling and packing.\n+\n+2012-12-02  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* resolve.c (resolve_allocate_deallocate,\n+\tresolve_typebound_intrinsic_op): Recover revisions 193568 and\n+\t193778, which were accidentally reverted by the previous patch.\n+\n+2012-12-01   Alessandro Fanfarillo <alessandro.fanfarillo@gmail.com>\n+\t     Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/46897\n+\t* gfortran.h : Add bit field 'defined_assign_comp' to\n+\tsymbol_attribute structure.\n+\tAdd primitive for gfc_add_full_array_ref.\n+\t* expr.c (gfc_add_full_array_ref): New function.\n+\t(gfc_lval_expr_from_sym): Call new function.\n+\t* resolve.c (add_comp_ref): New function.\n+\t(build_assignment): New function.\n+\t(get_temp_from_expr): New function\n+\t(add_code_to_chain): New function\n+\t(generate_component_assignments): New function that calls all\n+\tthe above new functions.\n+\t(resolve_code): Call generate_component_assignments.\n+\t(check_defined_assignments): New function.\n+\t(resolve_fl_derived0): Call check_defined_assignments.\n+\t(gfc_resolve): Reset component_assignment_level in case it is\n+\tleft in a bad state by errors.\n+\n+\n+\t* resolve.c (is_sym_host_assoc, resolve_procedure_interface,\n+\tresolve_contained_fntype, resolve_procedure_expression,\n+\tresolve_elemental_actual, resolve_global_procedure,\n+\tis_scalar_expr_ptr, gfc_iso_c_func_interface, resolve_function,\n+\tset_name_and_label, gfc_iso_c_sub_interface,\n+\tresolve_specific_s0, resolve_operator, compare_bound_mpz_t,\n+\tgfc_resolve_character_operator, resolve_typebound_function,\n+\tgfc_resolve_expr, forall_index, remove_last_array_ref,\n+\tconformable_arrays, resolve_allocate_expr,\n+\tresolve_allocate_deallocate, resolve_select_type,\n+\tresolve_transfer, resolve_where,\n+\tgfc_resolve_where_code_in_forall, gfc_resolve_forall_body,\n+\tgfc_count_forall_iterators, resolve_values,\n+\tresolve_bind_c_comms, resolve_bind_c_derived_types,\n+\tgfc_verify_binding_labels, apply_default_init,\n+\tbuild_default_init_expr, apply_default_init_local,\n+\tresolve_fl_var_and_proc, resolve_fl_procedure,\n+\tgfc_resolve_finalizers, check_generic_tbp_ambiguity,\n+\tresolve_typebound_intrinsic_op, resolve_typebound_procedure,\n+\tresolve_typebound_procedures, ensure_not_abstract,\n+\tresolve_fl_derived0, resolve_fl_parameter, resolve_symbol,\n+\tresolve_equivalence_derived): Remove trailing white space.\n+\t* gfortran.h : Remove trailing white space.\n+\n+2012-11-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52161\n+\t* trans-stmt.c (gfc_trans_sync): Fix bound checking\n+\tfor -fcoarray=lib.\n+\n+2012-11-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52161\n+\t* trans-stmt.c (gfc_trans_sync): Fix bound checking.\n+\n+2012-11-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55476\n+\t* expr.c (gfc_check_pointer_assign): Fix check\n+\tpointer-might-outlive-target check for host_assoc.\n+\n+2012-11-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* trans-decl.c (gfc_finish_var_decl): Do not set DECL_RESTRICTED_P.\n+\n+2012-11-26  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54997\n+\t* decl.c (match_procedure_decl): Don't set 'referenced' attribute\n+\tfor PROCEDURE declarations.\n+\t* parse.c (gfc_fixup_sibling_symbols,parse_contained): Don't set\n+\t'referenced' attribute for all contained procedures.\n+\t* trans-decl.c (gfc_get_symbol_decl): Allow for unreferenced procedures.\n+\t(build_function_decl): Set TREE_USED for referenced procedures.\n+\n+2012-11-26  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54881\n+\t* match.c (select_derived_set_tmp,select_class_set_tmp): Removed and\n+\tunified into ...\n+\t(select_type_set_tmp): ... this one. Set POINTER argument according to\n+\tselector.\n+\t* trans-intrinsic.c (gfc_conv_associated): Use 'gfc_class_data_get'\n+\tinstead of 'gfc_add_data_component'.\n+\n+2012-11-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/30146\n+\t* frontend-passes.c (doloop_warn):  New function.\n+\t(doloop_list):  New static variable.\n+\t(doloop_size):  New static variable.\n+\t(doloop_level):  New static variable.\n+\t(gfc_run_passes): Call doloop_warn.\n+\t(doloop_code):  New function.\n+\t(doloop_function):  New function.\n+\t(gfc_code_walker):  Keep track of DO level.\n+\n+2012-11-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/55314\n+\t* resolve.c (resolve_allocate_deallocate):  Compare all\n+\tsubscripts when deciding if to reject a (de)allocate\n+\tstatement.\n+\n+2012-11-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55352\n+\t* trans-decl.c (generate_local_decl): Don't warn for explicitly imported\n+\tbut unused module variables which are in a namelist or common block.\n+\n+2012-11-20  Diego Novillo  <dnovillo@google.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-openmp.c: Replace all vec<T, A>() initializers\n+\twith vNULL.\n+\n+2012-11-17  Diego Novillo  <dnovillo@google.com>\n+\n+\tAdjust for new vec API (http://gcc.gnu.org/wiki/cxx-conversion/cxx-vec)\n+\n+\t* frontend-passes.c: Use new vec API in vec.h.\n+\t* trans-array.c: Likewise.\n+\t* trans-common.c: Likewise.\n+\t* trans-decl.c: Likewise.\n+\t* trans-expr.c: Likewise.\n+\t* trans-intrinsic.c: Likewise.\n+\t* trans-openmp.c: Likewise.\n+\t* trans-stmt.c: Likewise.\n+\t* trans-types.c: Likewise.\n+\t* trans.h: Likewise.\n+\n+2012-11-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/55341\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer): Convert last\n+\targument to memcpy to size_type_node type.\n+\t* trans-stmt.c (gfc_conv_elemental_dependencies): Likewise.\n+\t* trasn-array.c (duplicate_allocatable): Likewise.\n+\n+2012-11-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55297\n+\t* resolve.c (resolve_typebound_intrinsic_op): Only add typebound\n+\toperators to the operator list in the namespace of the derived type.\n+\n+\n+2012-11-12  Jan Hubicka  <jh@suse.cz>\n+\n+\t* f95-lang.c (ATTR_NOTHROW_LEAF_MALLOC_LIST): New macro.\n+\t(gfc_define_builtin): Use set_call_expr_flags.\n+\t(gfc_init_builtin_functions): Update.\n+\n+2012-11-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55272\n+\t* module.c (mio_array_spec): Correctly handle coarray\n+\tscalars.\n+\n+2012-11-07  Tobias Schl\u00fcter  <tobi@gcc.gnu.org>\n+\n+\tPR fortran/51727\n+\t* module.c (sorted_pointer_info): New.\n+\t(gfc_get_sorted_pointer_info): New.\n+\t(free_sorted_pointer_info_tree): New.\n+\t(compare_sorted_pointer_info): New.\n+\t(find_symbols_to_write): New.\n+\t(write_symbol1_recursion): New.\n+\t(write_symbol1): Collect symbols that need writing, output in order.\n+\t(write_generic): Traverse tree in order.\n+\n+2012-11-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c/53063\n+\t* options.c (set_Wall): Do not set warn_switch here.\n+\n+2012-11-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54917\n+\t* target-memory.c (gfc_target_expr_size,gfc_target_interpret_expr):\n+\tHandle BT_CLASS.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer): Add support for\n+\tpolymorphic arguments.\n+\n+2012-11-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55199\n+\t* primary.c (gfc_match_varspec): Clear typespec if it cannot be\n+\tdetermined at this point.\n+\n+2012-10-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/53718\n+\t* trans.h (GFC_DECL_PUSH_TOPLEVEL): Removed.\n+\t* trans-decl.c (gfc_get_symbol_decl,gfc_generate_function_code): Remove\n+\tGFC_DECL_PUSH_TOPLEVEL.\n+\t(build_function_decl): Do not push __copy procedure to toplevel.\n+\n+2012-10-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55134\n+\t* trans-array.c (gfc_conv_array_parameter): Regard AS_DEFERRED as\n+\tarray with descriptor.\n+\n+2012-10-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54958\n+\t* gfortran.h (gfc_resolve_iterator_expr,\n+\tgfc_check_vardef_context): Update prototype.\n+\t* expr.c (gfc_check_vardef_context): Add own_scope\n+\targument and honour it.\n+\t* resolve.c (gfc_resolve_iterator_expr): Add own_scope\n+\targument and honour it.\n+\t(resolve_deallocate_expr, resolve_allocate_expr,\n+\tresolve_data_variables, resolve_transfer\n+\tresolve_lock_unlock, resolve_code): Update calls.\n+\t* array.c (resolve_array_list): Ditto.\n+\t* check.c (gfc_check_atomic_def, gfc_check_atomic_ref): Ditto.\n+\t* interface.c (compare_actual_formal): Ditto.\n+\t* intrinsic.c (check_arglist): Ditto.\n+\t* io.c (resolve_tag, gfc_resolve_dt, gfc_resolve_inquire): Ditto.\n+\n+2012-10-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* trans.c (gfc_allocate_allocatable):  Revert accidental\n+\tcommit.\n+\n+2012-10-24  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55037\n+\t* trans-expr.c (gfc_conv_procedure_call): Move a piece of code and\n+\tremove an assert.\n+\n+2012-10-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54725\n+\t* Make-lang.in (CFLAGS-cpp.o): Use TARGET_SYSTEM_ROOT_DEFINE.\n+\t* cpp.o (gfc_cpp_init_options): Use it for\n+\tsetting gfc_cpp_option.sysroot.\n+\n+2012-10-21  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/54465\n+\t* lang.opt (Wextra):  Add.\n+\t* invoke.texi:  Document that -Wc-binding-type, -Wconversion\n+\tand -Wline-truncation are implied by -Wall.  Document that\n+\t-Wcompare-reals is implied by -Wextra.  Document -Wextra.\n+\t* options.c (set_Wextra):  New function.\n+\t(gfc_handle_option):  Handle -Wextra.\n+\n+2012-10-19  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54224\n+\t* trans-expr.c (conv_function_val): Set TREE_USED.\n+\n+2012-10-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54884\n+\t* resolve.c (specification_expr): Change to bool.\n+\t(resolve_formal_arglist, resolve_symbol): Set\n+\tspecification_expr to true before resolving the array spec.\n+\t(resolve_variable, resolve_charlen, resolve_fl_variable):\n+\tProperly reset specification_expr.\n+\t(resolve_function): Set public_use when used in\n+\ta specification expr.\n+\n+2012-10-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/50981\n+\tPR fortran/54618\n+\t* trans.h (gfc_conv_derived_to_class, gfc_conv_class_to_class):\n+\tUpdate prototype.\n+\t* trans-stmt.c (trans_associate_var,gfc_trans_allocate): Update\n+\tcalls to those functions.\n+\t* trans-expr.c (gfc_conv_derived_to_class, gfc_conv_class_to_class,\n+\tgfc_conv_expr_present): Handle absent polymorphic arguments.\n+\t(class_scalar_coarray_to_class): New function.\n+\t(gfc_conv_procedure_call): Update calls.\n+\n+2012-10-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40453\n+\t* interface.c (check_dummy_characteristics): Recursively check dummy\n+\tprocedures.\n+\n+2012-10-11  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54784\n+\t* trans-stmt.c (gfc_trans_allocate): Correctly determine the reference\n+\tto the _data component for polymorphic allocation with SOURCE.\n+\n+2012-10-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54832\n+\t* resolve.c (resolve_fl_derived0): Correctly copy the 'class_ok'\n+\tattribute for proc-ptr components with RESULT variable.\n+\n+2012-10-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/45521\n+\t* interface.c (generic_correspondence): Implement additional\n+\tdistinguishability criteria of F08.\n+\t(compare_actual_formal): Reject data object as actual argument for\n+\tprocedure formal argument.\n+\n+2012-10-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* expr.c (scalarize_intrinsic_call): Plug memory leak.\n+\t* frontend-passes.c (gcc_assert): Extend assert.\n+\t* interface.c (gfc_compare_derived_types): Fix comparison.\n+\t(gfc_check_operator_interface): Move up to make this error\n+\tmessage reachable.\n+\t(get_sym_storage_size): Remove always-true checks.\n+\t* io.c (format_lex): Add comment.\n+\t(gfc_free_wait): Free memory.\n+\t* match.c (gfc_match_select_type): Ditto.\n+\t* matchexpr.c (match_level_3): Ditto.\n+\t* primary.c (match_string_constant): Ditto.\n+\t(match_actual_arg): Check return value.\n+\t* resolve.c (gfc_resolve_substring_charlen,\n+\tresolve_typebound_generic_call, resolve_typebound_function,\n+\tresolve_typebound_subroutine): Free memory.\n+\t* trans-types.c (gfc_get_derived_type): Remove always-true check.\n+\n+2012-10-02  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54778\n+\t* interface.c (matching_typebound_op): Check for 'class_ok' attribute.\n+\n+2012-09-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54667\n+\t* intrinsic.texi (C_F_POINTER): Fix description.\n+\t* resolve.c (gfc_iso_c_sub_interface): Add a check for FPTR argument\n+\tof C_F_POINTER. Modify two error messages. Cleanup.\n+\n+2012-09-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54618\n+\tPR fortran/54690\n+\t* trans-expr.c (gfc_conv_procedure_call): Fix INTENT(OUT)\n+\thandling for allocatable BT_CLASS.\n+\n+2012-09-24  Lawrence Crowl  <crowl@google.com>\n+\n+\t* trans-expr.c (gfc_conv_cst_int_power): Change to new double_int API.\n+\t* target-memory.c (gfc_interpret_logical): Likewise.\n+\n+2012-09-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* parse.c (parse_derived): Don't set attr.alloc_comp\n+\tfor pointer components with allocatable subcomps.\n+\n+\tPR fortran/54599\n+\t* resolve.c (resolve_fl_namelist): Remove superfluous\n+\tNULL check.\n+\t* simplify.c (simplify_min_max): Remove unreachable code.\n+\t* trans-array.c (gfc_trans_create_temp_array): Change\n+\ta condition into an assert.\n+\n+\tPR fortran/54618\n+\t* trans-expr.c (gfc_trans_class_init_assign): Guard\n+\tre-setting of the _data by gfc_conv_expr_present.\n+\t(gfc_conv_procedure_call): Fix INTENT(OUT) handling\n+\tfor allocatable BT_CLASS.\n+\n+2012-09-22  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/54599\n+\t* dependency.c (gfc_dep_compare_expr):  Clarify logic,\n+\tremove dead code.\n+\n+2012-09-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54599\n+\t* cpp.c (print_line): Properly handle extern C.\n+\n+2012-09-20  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* trans-decl.c (gfc_get_extern_function_decl): Push NULL cfun.  Do not\n+\tset and restore current_function_decl.\n+\t(gfc_init_coarray_decl): Do not set and restore current_function_decl.\n+\n+2012-09-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54608\n+\t* simplify.c (gfc_simplify_scan, gfc_simplify_verify):\n+\tFix handling of BACK=variable.\n+\n+2012-09-17  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54285\n+\t* expr.c (gfc_check_pointer_assign): Correctly handle procedure pointers\n+\tas function results.\n+\t* primary.c (gfc_match_varspec): Allow to call a PPC with proc-ptr\n+\tresult.\n+\n+2012-09-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54603\n+\t* trans-expr.c (gfc_trans_subcomponent_assign): Handle\n+\tproc-pointer components.\n+\n+2012-09-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54599\n+\t* error.c (error_print): Move increment out of the assert.\n+\t* interface.c (gfc_compare_derived_types): Add assert.\n+\t(get_expr_storage_size): Remove always-true logical condition.\n+\t* resolve.c (resolve_allocate_expr): Fix looping logic.\n+\t* target-memory.c (gfc_target_expr_size): Add assert.\n+\n+2012-09-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54594\n+\t* resolve.c (get_checked_tb_operator_target): Add a reference to the\n+\trelevant quote from the F08 standard.\n+\n+2012-09-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54594\n+\t* interface.c (compare_type_rank): Handle CLASS arrays.\n+\n+2012-09-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54387\n+\t* expr.c (gfc_check_pointer_assign): Check for result of embracing\n+\tfunction.\n+\n+2012-09-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-decl.c (gfc_generate_function_code): Fix\n+\tgfc_option.coarray check.\n+\t* trans-stmt.c (compute_inner_temp_size): Fix handling\n+\tof gfc_option.rtcheck.\n+\n+2012-09-16  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* symbol.c (gfc_undo_symbols): Correctly undo namelists.\n+\n+2012-09-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-io.c (gfc_trans_transfer): Add an assert.\n+\n+2012-09-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* arith.c (arith_power): Call gfc_free_expr in case of error.\n+\t* array.c (gfc_match_array_constructor): Initialize variable.\n+\t(gfc_resolve_character_array_constructor): Remove superfluous check.\n+\t(gfc_array_dimen_size): Add assert.\n+\t* check.c (numeric_check): Fix implicit typing.\n+\t* class.c (gfc_build_class_symbol): Add assert.\n+\t(finalize_component): Free memory.\n+\t* dump-parse-tree.c (show_namespace): Add assert.\n+\t* trans-io.c (transfer_namelist_element, transfer_expr): Avoid\n+\tmemory leakage.\n+\t(gfc_trans_transfer): Add assert.\n+\t* trans.c (gfc_trans_runtime_check): Call va_end\n+\n+2012-09-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* match.c (lock_unlock_statement, sync_statement): Fix potential\n+\tdouble freeing.\n+\t(sync_statement): Remove unreachable code.\n+\t* simplify.c (gfc_simplify_bessel_n2): Avoid double freeing.\n+\t(gfc_simplify_repeat): Remove bogus code.\n+\t* target-memory.h (gfc_target_encode_expr): Update prototype.\n+\t* target-memory.c (gfc_target_encode_expr, encode_array,\n+\tencode_derived): Return unsigned HOST_WIDE_INT.\n+\t(gfc_target_interpret_expr): Add assert.\n+\t(gfc_merge_initializers): Fix \"== 0\" check for mpz_t.\n+\t* symbol.c (gfc_get_typebound_proc): Add assert.\n+\t(gfc_merge_initializers): Remove unreachable check.\n+\n+2012-09-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54556\n+\t* resolve.c (resolve_formal_arglist): Allow VALUE arguments\n+\twith implicit_pure.\n+\t(gfc_impure_variable): Don't check gfc_pure such that the\n+\tfunction also works for gfc_implicit_pure procedures.\n+\n+2012-09-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54225\n+\tPR fortran/53306\n+\t* array.c (match_subscript, gfc_match_array_ref): Fix\n+\tdiagnostic of coarray's '*'.\n+\n+2012-09-07  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/54208\n+\t* simplify.c (simplify_bound_dim): Resolve array spec before\n+\tproceeding with simplification.\n+\n+2012-09-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54463\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_funcall): Fix matmul\n+\tcall to BLAS if the default-kind has been promoted.\n+\n+2012-09-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54462\n+\t* symbol.c (gfc_undo_symbols): Avoid NULL pointer dereference.\n+\n+2012-09-04  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54435\n+\tPR fortran/54443\n+\t* match.c (gfc_match_select_type): Make sure to only access CLASS_DATA\n+\tfor BT_CLASS.\n+\n+2012-09-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54467\n+\t* class.c (gfc_find_derived_vtab): Fix disabling of _final\n+\tby continuing to generate normal type-bound procedures.\n+\n+2012-09-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* class.c (gfc_find_derived_vtab): Disable ABI-breaking\n+\tgeneration of the \"_final\" subroutine for now.\n+\n+2012-09-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* class.c (finalize_component): Fixes to the comment.\n+\n+2012-09-03  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/37336\n+\t* gfortran.h (symbol_attribute): Add artificial.\n+\t* module.c (mio_symbol_attribute): Handle attr.artificial\n+\t* class.c (gfc_build_class_symbol): Defer creation of the vtab\n+\tif the DT has finalizers, mark generated symbols as\n+\tattr.artificial.\n+\t(has_finalizer_component, finalize_component,\n+\tfinalization_scalarizer, generate_finalization_wrapper):\n+\tNew static functions.\n+\t(gfc_find_derived_vtab): Add _final component and call\n+\tgenerate_finalization_wrapper.\n+\t* dump-parse-tree.c (show_f2k_derived): Use resolved\n+\tproc_tree->n.sym rather than unresolved proc_sym.\n+\t(show_attr): Handle attr.artificial.\n+\t* resolve.c (gfc_resolve_finalizers): Ensure that the vtab exists.\n+\t(resolve_fl_derived): Resolve finalizers before\n+\tgenerating the vtab.\n+\t(resolve_symbol): Also allow assumed-rank arrays with CONTIGUOUS;\n+\tskip artificial symbols.\n+\t(resolve_fl_derived0): Skip artificial symbols.\n+\n+2012-09-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54426\n+\t* symbol.c (find_common_symtree): New function.\n+\t(gfc_undo_symbols): Use it; free common_head if needed.\n+\n+2012-08-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54389\n+\t* trans-decl.c (gfc_get_extern_function_decl,\n+\tbuild_function_decl): Don't mark impure elemental\n+\tfunctions as DECL_PURE_P and honour implicit_pure.\n+\n+2012-08-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54382\n+\t* error.c (show_locus): Avoid out of bound access.\n+\n+2012-08-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54384\n+\t* decl.c (match_data_constant): Add missing gfc_free_expr.\n+\t(top_val_list): Remove always-true condition.\n+\t* data.c (get_array_index, create_character_initializer):\n+\tFree temporary expressions.\n+\t(gfc_assign_data_value): Free expression when aborting.\n+\n+2012-08-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54384\n+\t* symbol.c (gfc_copy_formal_args): Set also sym->formal_ns.\n+\n+2012-08-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54384\n+\t* resolve.c (gfc_resolve_character_operator): Free temporary\n+\tvariables.\n+\t* trans-expr.c (gfc_conv_statement_function): Ditto.\n+\n+2012-08-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54384\n+\t* dependency.c (check_section_vs_section): Use gfc_free_expr\n+\tinstead of free.\n+\t* trans-intrinsic.c (conv_generic_with_optional_char_arg): Use\n+\tgfc_free_symbol instead of free.\n+\n+2012-08-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54384\n+\t* trans-expr.c (gfc_trans_arrayfunc_assign): Free se.ss\n+\tand loop.\n+\n+2012-08-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41093\n+\t* gfortran.h (gfc_common_head): Add \"int refs\".\n+\t* match.c (gfc_match_common): Increment refs.\n+\t* resolve.c (resolve_symbol): Only increment formal_ns->refs\n+\tif formal_ns is not sym->ns.\n+\t* symbol.c (gfc_free_symbol): Only free formal_ns if\n+\tif formal_ns is not sym->ns. Free common_block if refs is one.\n+\t(gfc_release_symbol): Release formal_ns only if the\n+\tsymbol is not ENTRY of a module.\n+\t* decl.c (get_proc_name): Don't increment gfc_current_ns->refs.\n+\t* parse.c (parse_interface): Incement proc_unit->refs++ for\n+\tproc-pointer result variables.\n+\t* module.c (mio_symbol): Don't increase sym->refs for its\n+\tuse in sym->formal_ns->proc_name.\n+\n+2012-08-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54370\n+\t* trans-stmt.c (gfc_trans_do_while): Don't change the logical\n+\tkind for negation of the condition.\n+\n+2012-08-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* options.c (set_Wall): Don't set for -Wcompare-reals.\n+\t* invoke.texi (-Wall, -Wcompare-reals): -Wall no longer\n+\timplies -Wcompare-reals.\n+\n+2012-08-24  Simon Baldwin  <simonb@google.com>\n+\n+\t* lang.opt (-cpp=): Mark flag NoDWARFRecord.\n+\n+2012-08-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54350\n+\t* trans-array.c (free_ss_info): Free data.array.subscript.\n+\t(gfc_free_ss): No longer free data.array.subscript.\n+\t(walk_coarray): New function, moved from trans-intrinsic.c\n+\t(gfc_conv_expr_descriptor): Walk array descriptor instead\n+\tof taking passed \"ss\".\n+\t(get_array_ctor_all_strlen, gfc_add_loop_ss_code,\n+\tgfc_conv_array_parameter): Update call and cleanup ss handling.\n+\t* trans-array.h (gfc_conv_expr_descriptor,\n+\tgfc_conv_array_parameter): Update prototype.\n+\t* trans-expr.c (gfc_conv_derived_to_class,\n+\tconv_isocbinding_procedure, gfc_conv_procedure_call,\n+\tgfc_trans_alloc_subarray_assign, gfc_trans_subcomponent_assign,\n+\tgfc_trans_pointer_assignment, gfc_trans_arrayfunc_assign): Update\n+\tcall to gfc_conv_expr_descriptor and gfc_conv_array_parameter, and\n+\tclean up.\n+\t* trans-intrinsic.c (walk_coarray): Moved to trans-array.c\n+\t(trans_this_image, trans_image_index, gfc_conv_intrinsic_rank\n+\tgfc_conv_intrinsic_bound, gfc_conv_intrinsic_cobound,\n+\tgfc_conv_intrinsic_len, gfc_conv_intrinsic_size,\n+\tgfc_conv_intrinsic_sizeof, gfc_conv_intrinsic_storage_size,\n+\tgfc_conv_intrinsic_transfer, gfc_conv_allocated,\n+\tgfc_conv_associated, gfc_conv_intrinsic_loc,\n+\tconv_intrinsic_move_alloc): Update calls.\n+\t* trans-io.c (gfc_convert_array_to_string, set_internal_unit,\n+\tgfc_trans_transfer): Ditto.\n+\t* trans-stmt.c (gfc_conv_elemental_dependencies,\n+\tgfc_trans_sync, trans_associate_var,\n+\tgfc_trans_pointer_assign_need_temp): Ditto.\n+\n+2012-08-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-decl.c (trans_function_start, generate_coarray_init,\n+\tcreate_main_function, gfc_generate_constructors): Call\n+\tallocate_struct_function instead of init_function_start.\n+\n+2012-08-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-expr.c (gfc_copy_class_to_class,\n+\tgfc_trans_arrayfunc_assign): Free loop and ss data.\n+\t* trans-intrinsic.c (gfc_trans_arrayfunc_assign): Free ss data.\n+\n+2012-08-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* parse.c (parse_contained): Include EXEC_END_PROCEDURE\n+\tin ns->code to make sure the gfc_code is freed.\n+\n+2012-08-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54301\n+\t* expr.c (gfc_check_pointer_assign): Warn when a pointer,\n+\twhich is a function result, might outlive its target.\n+\n+2012-08-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54301\n+\t* expr.c (gfc_check_pointer_assign): Warn when the pointer\n+\tmight outlive its target.\n+\t* gfortran.h (struct gfc_option_t): Add warn_target_lifetime.\n+\t* options.c (gfc_init_options, set_wall, gfc_handle_option):\n+\thandle it.\n+\t* invoke.texi (-Wtarget-lifetime): Document it.\n+\t(-Wall): Implied it.\n+\t* lang.opt (-Wtarget-lifetime): New flag.\n+\n+2012-08-19  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/54298\n+\t* gfortran.h (struct gfc_option_t): Add warn_compare_reals.\n+\t* lang.opt:  Add Wcompare-reals.\n+\t* invoke.texi:  Document -Wcompare-reals.\n+\t* resolve.c (resolve_operator):  If -Wcompare-reals is in effect,\n+\twarn about equality/inequality comparisions for REAL and COMPLEX.\n+\t* options.c (gfc_init_options):  Set warn_compare_reals.\n+\t(set_Wall):  Include warn_compare_reals in Wall.\n+\t(gfc_handle_option):  Handle Wcompare_reals.\n+\n+2012-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* array.c (gfc_match_array_ref): Fix up memset arguments.\n+\n+2012-08-16   Diego Novillo  <dnovillo@google.com>\n+\n+\tRevert\n+\n+\tPR bootstrap/54281\n+\t* gfortran.h: Do not include gmp.h.\n+\n+2012-08-16   Diego Novillo  <dnovillo@google.com>\n+\n+\tPR bootstrap/54281\n+\t* gfortran.h: Do not include gmp.h.\n+\n+2012-08-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54243\n+\tPR fortran/54244\n+\t* resolve.c (check_typebound_baseobject): Check for class_ok attribute.\n+\t(resolve_procedure_interface,resolve_fl_derived0): Copy class_ok\n+\tattribute.\n+\n+2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/47586\n+\t* trans-expr.c (expr_is_variable): Handle regular, procedure pointer,\n+\tand typebound functions returning a data pointer.\n+\n+2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* decl.c (match_ppc_decl): Copy the procedure interface's symbol\n+\tas procedure interface's result.\n+\n+2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-expr.c (gfc_trans_scalar_assign): Rename argument,\n+\textend comment.\n+\n+2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* gfortran.h (gfc_get_proc_ptr_comp): New prototype.\n+\t(gfc_is_proc_ptr_comp): Update prototype.\n+\t* expr.c (gfc_get_proc_ptr_comp): New function based on the old\n+\tgfc_is_proc_ptr_comp.\n+\t(gfc_is_proc_ptr_comp): Call gfc_get_proc_ptr_comp.\n+\t(gfc_specification_expr, gfc_check_pointer_assign): Use\n+\tgfc_get_proc_ptr_comp.\n+\t* trans-array.c (gfc_walk_function_expr): Likewise.\n+\t* resolve.c (resolve_structure_cons, update_ppc_arglist,\n+\tresolve_ppc_call, resolve_expr_ppc): Likewise.\n+\t(resolve_function): Update call to gfc_is_proc_ptr_comp.\n+\t* dump-parse-tree.c (show_expr): Likewise.\n+\t* interface.c (compare_actual_formal): Likewise.\n+\t* match.c (gfc_match_pointer_assignment): Likewise.\n+\t* primary.c (gfc_match_varspec): Likewise.\n+\t* trans-io.c (gfc_trans_transfer): Likewise.\n+\t* trans-expr.c (gfc_conv_variable, conv_function_val,\n+\tconv_isocbinding_procedure, gfc_conv_procedure_call,\n+\tgfc_trans_pointer_assignment): Likewise.\n+\t(gfc_conv_procedure_call, gfc_trans_array_func_assign):\n+\tUse gfc_get_proc_ptr_comp.\n+\n+2012-08-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40881\n+\t* error.c (gfc_notify_std): Reset cur_error_buffer->flag flag\n+\twhen the error/warning has been printed.\n+\t* gfortran.h (gfc_sl_type): Add ST_LABEL_DO_TARGET.\n+\t* match.c (gfc_match_do): Use ST_LABEL_DO_TARGET.\n+\t* parse.c (check_statement_label): Use ST_LABEL_DO_TARGET.\n+\t(parse_executable): Add obsolescence check for DATA.\n+\t* resolve.c (resolve_branch): Handle ST_LABEL_DO_TARGET.\n+\t* symbol.c (gfc_define_st_label, gfc_reference_st_label):\n+\tAdd obsolescence diagnostics.\n+\t* trans-stmt.c (gfc_trans_label_assign): Handle ST_LABEL_DO_TARGET.\n+\n+2012-08-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54234\n+\t* check.c (gfc_check_cmplx): Add -Wconversion warning\n+\twhen converting higher-precision REAL to default-precision\n+\tCMPLX without kind= parameter.\n+\n+2012-08-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54221\n+\t* trans-decl.c (gfc_finish_var_decl, build_function_decl):\n+\tFix setting private module vars/procs as TREE_PUBLIC(...) = 0.\n+\n+2012-08-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54199\n+\t* intrinsic.c (gfc_warn_intrinsic_shadow): Better warning\n+\tfor internal procedures.\n+\n+2012-08-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/35831\n+\t* interface.c (check_result_characteristics): New function, which checks\n+\tthe characteristics of function results.\n+\t(gfc_compare_interfaces,gfc_check_typebound_override): Call it.\n+\n+2012-08-02  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\t PR fortran/54033\n+\t * scanner.c (add_path_to_list):  New argument warn.  Don't\n+\t warn if it is true.\n+\t (gfc_add_include_path):  Warn if directory is missing.\n+\t (gfc_add_intrinsic_modules_path):  Do not warn if directory\n+\t is missing.\n+\t * optinons.c (gfc_handle_option):  Do not add directory\n+\t for intrinsic modules to normal include path.\n+\n+2012-08-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/54166\n+\t* trans-array.c (set_loop_bounds): Access specinfo using spec_dim.\n+\n+2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/48820\n+\t* trans-array.c (gfc_conv_ss_startstride): Set the intrinsic\n+\tresult's lower and upper bounds according to the rank.\n+\t(set_loop_bounds): Set the loop upper bound in the intrinsic case.\n+\n+2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (set_loop_bounds): Allow non-array-section to be\n+\tchosen using the stride and lower bound criteria.\n+\n+2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (set_loop_bounds): Remove useless dimension check.\n+\tDon't update loopspec if it would loose the wanted stride criterion.\n+\n+2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.h (gfc_conv_descriptor_rank): New prototype.\n+\t* trans-array.c (gfc_conv_descriptor_rank): New function moved and\n+\trenamed ...\n+\t* trans-intrinsic.c (get_rank_from_desc): ... from this one.\n+\t(gfc_conv_intrinsic_rank, gfc_conv_intrinsic_bound,\n+\tgfc_conv_associated): Also rename function calls.\n+\n+2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* iresolve.c (resolve_bound, gfc_resolve_shape):\n+\tDon't set the shape for assumed rank arrays.\n+\t* simplify.c (gfc_simplify_shape): Don't try to simplify if the\n+\targument is assumed rank.\n+\n+2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* array.c (gfc_copy_array_ref): Don't copy the offset field.\n+\t* expr.c (find_array_section): Ignore the offset field.\n+\t* trans-expr.c (gfc_find_interface_mapping_to_ref): Don't apply\n+\tany interface mapping to the offset field.\n+\t* gfortran.h (struct gfc_array_ref): Remove the offset field.\n+\n+2012-08-02  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54147\n+\t* resolve.c (check_proc_interface): New routine for PROCEDURE interface\n+\tchecks.\n+\t(resolve_procedure_interface,resolve_typebound_procedure,\n+\tresolve_fl_derived0): Call it.\n+\n+2012-08-01  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/54033\n+\t* scanner.c (add_path_to_list): Emit warning if an error occurs\n+\tfor an include path, if it is not present or if it is not a\n+\tdirectory.  Do not add the path in these cases.\n+\n+2012-07-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42418\n+\t* decl.c (match_procedure_interface): Move some checks to\n+\t'resolve_procedure_interface'. Set flavor if appropriate.\n+\t* expr.c (gfc_check_pointer_assign): Cleanup of 'gfc_is_intrinsic'.\n+\t* intrinsic.c (gfc_is_intrinsic): Additional checks for attributes which\n+\tidentify a procedure as being non-intrinsic.\n+\t* resolve.c (resolve_procedure_interface): Checks moved here from\n+\t'match_procedure_interface'. Minor cleanup.\n+\t(resolve_formal_arglist,resolve_symbol): Cleanup of\n+\t'resolve_procedure_interface'\n+\t(resolve_actual_arglist,is_external_proc): Cleanup of\n+\t'gfc_is_intrinsic'.\n+\n+2012-07-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54134\n+\t* dependency.c (gfc_dep_compare_expr): Check if arguments are NULL.\n+\n+2012-07-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* interface.c (gfc_procedure_use): Return gfc_try instead of void.\n+\t* gfortran.h (gfc_procedure_use): Update prototype.\n+\t* resolve.c (gfc_iso_c_func_interface): Allow noninteroperable\n+\tprocedures for c_funloc for TS29113.\n+\t* (gfc_iso_c_sub_interface): Ditto for c_f_procpointer. Add\n+\tdiagnostic for c_ptr vs. c_funptr for c_f_(proc)pointer.\n+\n+2012-07-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/51081\n+\t* gfortran.h (gfc_resolve_intrinsic): Add prototype.\n+\t* expr.c (gfc_check_pointer_assign): Set INTRINSIC attribute if needed.\n+\tCheck for invalid intrinsics.\n+\t* primary.c (gfc_match_rvalue): Check for intrinsics came too early.\n+\tSet procedure flavor if appropriate.\n+\t* resolve.c (resolve_intrinsic): Renamed to gfc_resolve_intrinsic.\n+\t(resolve_procedure_interface,resolve_procedure_expression,\n+\tresolve_function,resolve_fl_derived0,resolve_symbol): Ditto.\n+\n+2012-07-26  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/44354\n+\t* trans-array.c (gfc_trans_array_constructor_value):\n+\tEvaluate the iteration bounds before the inner variable shadows\n+\tthe outer.\n+\n+2012-07-26  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/44354\n+\t* array.c (sought_symbol): New variable.\n+\t(expr_is_sought_symbol_ref, find_symbol_in_expr): New functions.\n+\t(resolve_array_list): Check for references to the induction\n+\tvariable in the iteration bounds and issue a diagnostic if some\n+\tare found.\n+\n+2012-07-26  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\t* module.c (mio_array_spec): Don't read as->lower for\n+\tassumed-rank arrays.\n+\n+2012-07-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-types.c (gfc_real16_is_float128): Fix spelling\n+\tin a comment.\n+\t* trans.h (struct gfc_array_info): Ditto.\n+\t* gfortran.h (gfc_expr): Ditto.\n+\t* simplify.c (gfc_count): Ditto.\n+\t* trans-expr.c (gfc_copy_class_to_class,\n+\tconv_parent_component_references,\n+\tgfc_trans_pointer_assignment): Ditto.\n+\t* expr.c (check_pointer_assign): Fix diagnostic spelling.\n+\t* interface.c (compare_parameter): Ditto.\n+\t* parse.c (use_modules, parse_associate): Ditto.\n+\t* decl.c (match_char_length): Fix spelling of the\n+\tan function argument.\n+\n+2012-07-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* iso-c-binding.def (C_PTRDIFF_T): New TS29113 parameter.\n+\t* intrinsic.texi (ISO_C_BINDING): Document it.\n+\n+2012-07-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48820\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_bound): Support\n+\tlbound/ubound with dim= for assumed-rank arrays.\n+\t* array.c (gfc_set_array_spec): Reject coarrays with\n+\tassumed shape.\n+\t* decl.c (merge_array_spec): Ditto. Return gfc_try.\n+\t(match_attr_spec, match_attr_spec): Update call.\n+\n+2012-07-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (resolve_formal_arglist): Put variable\n+\tdeclaration before the first assignment.\n+\n+2012-07-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-expr.c (gfc_conv_derived_to_class): Fix argument passed\n+\tto class_array_data_assign.\n+\n+2012-07-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* decl.c (gfc_verify_c_interop_param): Allow assumed-shape\n+\twith -std=f2008ts.\n+\n+2012-07-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48820\n+\t* array.c (match_array_element_spec, gfc_match_array_spec,\n+\tspec_size, gfc_array_dimen_size): Add support for\n+\tassumed-rank arrays.\n+\t* check.c (dim_rank_check): Ditto.\n+\t* class.c (gfc_add_component_ref): Ditto.\n+\t(gfc_build_class_symbol): Regard assumed-rank arrays\n+\tas having GFC_MAX_DIMENSIONS. And build extra class\n+\tcontainer for a scalar pointer class.\n+\t* decl.c (merge_array_spec): Add assert.\n+\t* dump-parse-tree.c (show_array_spec): Add support for\n+\tassumed-rank arrays.\n+\t* expr.c (gfc_is_simply_contiguous): Ditto.\n+\t* gfortran.h (array_type): Ditto.\n+\t(gfc_array_spec, gfc_expr): Add comment to \"rank\" field.\n+\t* interface.c (compare_type_rank, argument_rank_mismatch,\n+\tcompare_parameter, gfc_procedure_use): Ditto.\n+\t(compare_actual_formal): Fix NULL() to optional-dummy\n+\thandling for polymorphic dummies.\n+\t* module.c (mio_typespec): Add support for\n+\tassumed-rank arrays.\n+\t* resolve.c (resolve_formal_arglist, resolve_actual_arglist,\n+\tresolve_elemental_actual, resolve_global_procedure,\n+\texpression_shape, resolve_variable, update_ppc_arglist,\n+\tcheck_typebound_baseobject, gfc_resolve_expr,\n+\tresolve_fl_var_and_proc, gfc_resolve_finalizers,\n+\tresolve_typebound_procedure, resolve_symbol): Ditto.\n+\t(assumed_type_expr_allowed): Remove static variable.\n+\t(actual_arg, first_actual_arg): New static variables.\n+\t* simplify.c (simplify_bound, gfc_simplify_range): Add\n+\tsupport for assumed-rank arrays.\n+\t* trans-array.c (gfc_conv_array_parameter): Ditto.\n+\t(gfc_get_descriptor_dimension): New function, which returns\n+\tthe descriptor.\n+\t(gfc_conv_descriptor_dimension): Use it.\n+\t(gfc_conv_descriptor_stride_get, gfc_conv_array_parameter):\n+\tHandle GFC_ARRAY_ASSUMED_RANK_CONT and AS_ASSUMED_RANK.\n+\t* trans-array.h (gfc_get_descriptor_dimension): New prototype.\n+\t* trans-decl. (gfc_build_dummy_array_decl,\n+\tgfc_trans_deferred_vars, add_argument_checking): Add\n+\tsupport for assumed-rank arrays.\n+\t* trans-expr.c (gfc_conv_expr_present, gfc_conv_variable,\n+\tgfc_conv_procedure_call): Ditto.\n+\t(get_scalar_to_descriptor_type, class_array_data_assign,\n+\tconv_scalar_to_descriptor): New static functions.\n+\t(gfc_conv_derived_to_class, gfc_conv_class_to_class): Use\n+\tthem.\n+\t* trans-intrinsic.c (get_rank_from_desc): New function.\n+\t(gfc_conv_intrinsic_rank, gfc_conv_associated): Use it.\n+\t* trans-types.c (gfc_array_descriptor_base_caf,\n+\tgfc_array_descriptor_base): Make space for scalar array.\n+\t(gfc_is_nodesc_array, gfc_is_nodesc_array,\n+\tgfc_build_array_type, gfc_get_array_descriptor_base): Add\n+\tsupport for assumed-rank arrays.\n+\t* trans.h (gfc_array_kind): Add GFC_ARRAY_ASSUMED_RANK and\n+\tGFC_ARRAY_ASSUMED_RANK_CONT.\n+\n+2012-07-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-expr.c (gfc_conv_procedure_call): Fix handling\n+\tof polymorphic arguments.\n+\t* resolve.c (resolve_formal_arglist): Ditto, mark polymorphic\n+\tassumed-shape arrays as such.\n+\n+2012-07-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* interface.c (compare_parameter, compare_actual_formal): Fix\n+\thandling of polymorphic arguments.\n+\n+2012-07-17  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/51081\n+\t* error.c (gfc_notify_std): Automatically print the relevant Fortran\n+\tstandard version.\n+\t* arith.c (arith_power): Remove explicit standard reference string.\n+\t* array.c (gfc_match_array_spec, gfc_match_array_constructor): Ditto.\n+\t* check.c (gfc_check_a_p, gfc_check_besn, gfc_check_count,\n+\tgfc_check_float, gfc_check_fn_rc2008, gfc_check_iand,\n+\tgfc_check_ichar_iachar, gfc_check_ieor, gfc_check_index, gfc_check_ior,\n+\tgfc_check_lbound, gfc_check_len_lentrim, check_rest, gfc_check_min_max,\n+\tgfc_check_null, gfc_check_scan, gfc_check_selected_real_kind,\n+\tgfc_check_shape, gfc_check_size, gfc_check_sngl, gfc_check_ubound,\n+\tgfc_check_verify): Ditto.\n+\t* data.c (gfc_assign_data_value): Ditto.\n+\t* decl.c (var_element, char_len_param_value, match_char_length,\n+\tgfc_verify_c_interop_param, match_pointer_init, variable_decl,\n+\tgfc_match_decl_type_spec, gfc_match_import, match_attr_spec,\n+\tgfc_match_prefix, gfc_match_suffix, match_ppc_decl,\n+\tmatch_procedure_in_interface, gfc_match_procedure,gfc_match_entry,\n+\tgfc_match_subroutine, gfc_match_end, gfc_match_codimension,\n+\tgfc_match_protected, gfc_match_value, gfc_match_volatile,\n+\tgfc_match_asynchronous, gfc_match_modproc, gfc_get_type_attr_spec,\n+\tgfc_match_enum, match_procedure_in_type): Ditto.\n+\t* expr.c (check_elemental, gfc_check_assign, gfc_check_pointer_assign):\n+\tDitto.\n+\t* interface.c (gfc_match_abstract_interface, check_interface0): Ditto.\n+\t* intrinsic.c (gfc_intrinsic_func_interface): Ditto.\n+\t* io.c (format_lex, resolve_tag_format, resolve_tag,\n+\tcompare_to_allowed_values, gfc_match_open, gfc_match_rewind,\n+\tgfc_resolve_dt, gfc_match_wait): Ditto.\n+\t* match.c (match_arithmetic_if, gfc_match_if, gfc_match_critical,\n+\tgfc_match_do, match_exit_cycle, gfc_match_pause, gfc_match_stop,\n+\tgfc_match_lock, sync_statement, gfc_match_assign, gfc_match_goto,\n+\tgfc_match_allocate, gfc_match_return, gfc_match_st_function): Ditto.\n+\t* module.c (gfc_match_use, gfc_use_module): Ditto.\n+\t* parse.c (parse_derived_contains, parse_block_construct,\n+\tparse_associate, parse_contained): Ditto.\n+\t* primary.c (match_hollerith_constant, match_boz_constant,\n+\tmatch_real_constant, match_sym_complex_part, match_arg_list_function,\n+\tbuild_actual_constructor, gfc_convert_to_structure_constructor): Ditto.\n+\t* resolve.c (resolve_formal_arglist, resolve_entries,\n+\tresolve_common_blocks, resolve_actual_arglist, gfc_resolve_index_1,\n+\tgfc_resolve_iterator_expr, resolve_ordinary_assign,\n+\tresolve_fl_var_and_proc, resolve_fl_variable_derived,\n+\tresolve_fl_procedure, resolve_fl_derived0, resolve_fl_derived,\n+\tresolve_fl_namelist, resolve_symbol, resolve_fntype): Ditto.\n+\t* symbol.c (check_conflict, conflict, gfc_add_is_bind_c,\n+\tgfc_add_extension, gfc_check_symbol_typed): Ditto.\n+\n+2012-07-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53985\n+\t* decl.c (gfc_verify_c_interop_param): Make warning conditional\n+\ton -Wc-binding-type works and improve the wording.\n+\n+2012-07-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52101\n+\t* decl.c (match_char_length): Extra argument, show obsolenscent\n+\twarning only if *length is used after the typename.\n+\t(variable_decl, gfc_match_char_spec): Update call\n+\n+2012-07-17  Tobias Burnus  <burnus@net-b.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/49265\n+\t* decl.c (match_procedure_in_interface): Support \"::\" for\n+\tFortran 2008 and later.\n+\n+2012-07-16  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/53824\n+\t* resolve.c (resolve_allocate_deallocate):  If both\n+\tstart indices are NULL, skip the test for equality.\n+\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* f95-lang.c: Include dumpfile.h instead of tree-dump.h.\n+\t* Make-lang.in: Fix dependencies.\n+\n+2012-07-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/53956\n+\t* gfortran.h (gfc_copy_formal_args,gfc_copy_formal_args_ppc): Modified\n+\tprototypes.\n+\t* symbol.c (gfc_copy_formal_args): New argument 'if_src'. Copy if_source\n+\tof dummy procedures.\n+\t(gfc_copy_formal_args_ppc): Ditto.\n+\t* resolve.c (resolve_procedure_interface): Pass IFSRC_DECL to\n+\tgfc_copy_formal_args.\n+\t(resolve_fl_derived0): Pass IFSRC_DECL to gfc_copy_formal_args_ppc.\n+\n+2012-07-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-expr.c (conv_isocbinding_procedure): Generate c_f_pointer code\n+\tinline.\n+\n+2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* trans.c: Do not include defaults.h.\n+\t* trans-intrinsic.c: Likewise.\n+\n+2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* gfortran.h: Do not include coretypes.h here.\n+\tMake it an error to include this before coretypes.h\n+\t* openmp.c: Include coretypes.h.\n+\t* interface.c: Likewise.\n+\t* intrinsic.c: Likewise.\n+\t* symbol.c: Likewise.\n+\t* class.c: Likewise.\n+\t* decl.c: Likewise.\n+\t* matchexp.c: Likewise.\n+\t* dump-parse-tree.c: Likewise.\n+\t* array.c: Likewise.\n+\t* constructor.c: Likewise.\n+\t* error.c: Likewise.\n+\t* data.c: Likewise.\n+\t* expr.c: Likewise.\n+\t* module.c: Likewise.\n+\t* scanner.c: Likewise.\n+\t* bbt.c: Likewise.\n+\t* io.c: Likewise.\n+\t* frontend-passes.c: Likewise.\n+\t* resolve.c: Likewise.\n+\t* st.c: Likewise.\n+\t* target-memory.c: Likewise.\n+\t* match.c: Likewise.\n+\t* arith.c: Likewise.\n+\t* parse.c: Likewise.\n+\t* check.c: Likewise.\n+\t* dependency.c: Likewise.\n+\t* primary.c: Likewise.\n+\t* misc.c: Likewise.\n+\t* simplify.c: Likewise.\n+\n+2012-07-05  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/53732\n+\t* trans-array.c (gfc_add_loop_ss_code): Disable self recursive calls\n+\thandling nested loop(s) if the subscript flag is true.\n+\n+2012-07-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR fortran/53449\n+\t* parse.c (gfc_parse_file): Initialize errors_before.\n+\n+2012-06-27  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41951\n+\tPR fortran/49591\n+\t* interface.c (check_new_interface): Rename, add 'loc' argument,\n+\tmake non-static.\n+\t(gfc_add_interface): Rename 'check_new_interface'\n+\t* gfortran.h (gfc_check_new_interface): Add prototype.\n+\t* resolve.c (resolve_typebound_intrinsic_op): Add typebound operator\n+\ttargets to non-typebound operator list.\n+\n+2012-06-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47710\n+\tPR fortran/53328\n+\t* interface.c (count_types_test, generic_correspondence,\n+\tgfc_compare_interfaces): Ignore PASS arguments.\n+\t(check_interface1, compare_parameter): Pass NULL arguments to\n+\tgfc_compare_interfaces.\n+\t* gfortran.h (gfc_compare_interfaces): Modified prototype.\n+\t* expr.c (gfc_check_pointer_assign): Pass NULL arguments to\n+\tgfc_compare_interfaces.\n+\t* resolve.c (resolve_structure_cons): Ditto.\n+\t(check_generic_tbp_ambiguity): Determine PASS arguments and pass them\n+\tto gfc_compare_interfaces.\n+\n+2012-06-21  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/39654\n+\t* iresolve.c (gfc_resolve_ftell): Fix result kind and use new\n+\tlibrary function.\n+\n+2012-06-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* intrinsic.h (gfc_resolve_rank): New prototype.\n+\t* intrinsic.c (add_functions): Use gfc_resolve_rank.\n+\t* iresolve.c (add_functions): New function.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_rank): New function.\n+\t(gfc_conv_intrinsic_function): Call it.\n+\n+2012-06-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53692\n+\t* trans-array.c (set_loop_bounds): Don't scalarize via absent\n+\toptional arrays.\n+\t* resolve.c (resolve_elemental_actual): Don't stop resolving after printing\n+\ta warning.\n+\n+2012-06-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53526\n+\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Handle coarrays.\n+\n+2012-06-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53526\n+\t* check.c (gfc_check_move_alloc): Reject coindexed actual arguments\n+\tand those with different corank.\n+\n+2012-06-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53691\n+\tPR fortran/53685\n+\t* check.c (gfc_calculate_transfer_sizes): Return if\n+\tSIZE= is not constant or source-size cannot be determined.\n+\n+2012-06-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53642\n+\tPR fortran/45170\n+\t* frontend-passes.c (optimize_assignment): Don't remove RHS's\n+\ttrim when assigning to a deferred-length string.\n+\t* trans-expr.c (gfc_trans_assignment_1): Ensure that the RHS string\n+\tlength is evaluated before the deferred-length LHS is reallocated.\n+\n+2012-06-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53643\n+\t* trans-decl.c (init_intent_out_dt): Fix for polymorphic arrays.\n+\t* trans-array.c (structure_alloc_comps): Don't loop for\n+\tscalar coarrays.\n+\n+2012-06-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53597\n+\t* decl.c (match_attr_spec): Only mark module variables\n+\tas SAVE_IMPLICIT for Fortran 2008 and later.\n+\n+2012-06-08  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/52552\n+\t* match.c (gfc_match_allocate): Modify order of checks. Change wording\n+\tof error message. Remove FIXME note.\n+\t* resolve.c (resolve_allocate_expr): Add a comment.\n+\n+2012-06-07  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52861\n+\t* frontend-passes.c (optimize_assignment):  Don't set the\n+\tlength of an empty string for deferred-length character\n+\tvariables.\n+\n+2012-06-07  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52861\n+\t* frontend-passes.c (empty_string):  Add prototype.\n+\t(optimize_assignment):  Set the length of an empty string\n+\tconstant to zero.\n+\n+2012-06-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/50619\n+\t* resolve.c (build_default_init_expr): Don't initialize\n+\tASSOCIATE names.\n+\n+2012-06-03  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48831\n+\t* gfortran.h (gfc_check_init_expr): Add prototype declaration\n+\tof function.\n+\t* check.c (kind_check): Change if condition to use\n+\tto gfc_check_init_expr.\n+\t* expr.c (check_init_expr): Remove forward declaration\n+\tand static keyword. Change name in gfc_check_init_expr.\n+\t(scalarize_intrinsic_call, check_init_expr_arguments,\n+\tcheck_inquiry, check_conversion, gfc_reduce_init_expr): Update\n+\tcall to gfc_check_init_expr.\n+\n+2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* trans-common.c: Do not include output.h.\n+\t* trans-decl.c: Likewise.\n+\n+2012-05-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53521\n+\t* trans.c (gfc_deallocate_scalar_with_status): Properly\n+\thandle the case size == 0.\n+\n+2012-05-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR c/53502\n+\t* decl.c (match_attr_spec): Remove \"typedef\".\n+\n+2012-05-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* decl.c: Fix comment typos.\n+\t* expr.c: Ditto.\n+\t* frontend-passes.c: Ditto.\n+\t* match.c: Ditto.\n+\t* resolve.c: Ditto.\n+\t* trans-array.c: Ditto.\n+\t* trans-common.c: Ditto.\n+\t* trans-intrinsic.c: Ditto.\n+\t* trans-types.c: Ditto.\n+\n+2012-05-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51055\n+\tPR fortran/45170\n+\t* match.c (gfc_match_allocate): Set length_from_typespec\n+\tfor characters.\n+\t* resolve.c (resolve_charlen): If set, don't check whether\n+\tthe len is a specification expression.\n+\n+2012-05-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53389\n+\t* trans-array.c (gfc_add_loop_ss_code): Don't evaluate expression, if\n+\tss->is_alloc_lhs is set.\n+\n+2012-05-22  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/53322\n+\t* f95-lang.c (gfc_init_builtin_functions): Remove the unused\n+\ttypedef builtin_type.\n+\n+2012-05-14  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/52428\n+\t* gfortran.texi: Update _gfortran_set_options documentation.\n+\t* invoke.texi: Remove runtime behavior description of\n+\t-fno-range-check.\n+\t* trans-decl.c (create_main_function): Don't pass the range-check\n+\tsetting to the library.\n+\n+2012-05-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/49110\n+\tPR fortran/51055\n+\tPR fortran/53329\n+\t* trans-expr.c (gfc_trans_assignment_1): Fix allocation\n+\thandling for assignment of function results to allocatable\n+\tdeferred-length strings.\n+\t* trans-decl.c (gfc_create_string_length): For deferred-length\n+\tmodule variables, include module name in the assembler name.\n+\t(gfc_get_symbol_decl): Don't override the assembler name.\n+\n+2012-05-14  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR 53063\n+\t* options.c (gfc_handle_option): Call lang-specific generated function.\n+\n+2012-05-13  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52158\n+\tPR fortran/45170\n+\tPR fortran/49430\n+\t* resolve.c (resolve_fl_derived0): Deferred character length\n+\tprocedure components are supported.\n+\t* trans-expr.c (gfc_conv_procedure_call): Handle TBP with\n+\tdeferred-length results.\n+\t(gfc_string_to_single_character): Add a new check to prevent\n+\tNULL read.\n+\t(gfc_conv_procedure_call): Remove unuseful checks on\n+\tsymbol's attributes. Add new checks to prevent NULL read on\n+\tstring length.\n+\n+2012-05-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/49110\n+\tPR fortran/52843\n+\t* resolve.c (resolve_fl_procedure): Don't regard\n+\tcharacter(len=:) as character(*) in the diagnostic.\n+\n+2012-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52537\n+\t* frontend-passes.c (optimize_op):  Change\n+\told-style comparison operators to new-style, simplify\n+\tswitch as a result.\n+\t(empty_string):  New function.\n+\t(get_len_trim_call):  New function.\n+\t(optimize_comparison):  If comparing to an empty string,\n+\tuse comparison of len_trim to zero.\n+\tUse new-style comparison operators only.\n+\t(optimize_trim):  Use get_len_trim_call.\n+\n+2012-05-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR 53063\n+\t* options.c: Include diagnostics.h instead of\n+\tdiagnostics-core.h.\n+\t(set_Wall): Do not see warn_unused here.\n+\t(gfc_handle_option): Set it here using handle_generated_option.\n+\n+2012-05-08  Jan Hubicka  <jh@suse.cz>\n+\n+\t* trans-common.c (create_common): Do not fake TREE_ASM_WRITTEN.\n+\t* trans-decl.c (gfc_finish_cray_pointee): Likewise.\n+\n+2012-05-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53255\n+\t* resolve.c (resolve_typebound_static): Fix handling\n+\tof overridden specific to generic operator.\n+\n+2012-05-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41587\n+\t* decl.c (build_struct): Don't ignore FAILED status.\n+\n+2012-05-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/41600\n+\t* trans-array.c (build_array_ref): New static function.\n+\t(gfc_conv_array_ref, gfc_get_dataptr_offset): Call it.\n+\t* trans-expr.c (gfc_get_vptr_from_expr): New function.\n+\t(gfc_conv_derived_to_class): Add a new argument for a caller\n+\tsupplied vptr and use it if it is not NULL.\n+\t(gfc_conv_procedure_call): Add NULL to call to above.\n+\tsymbol.c (gfc_is_associate_pointer): Return true if symbol is\n+\ta class object.\n+\t* trans-stmt.c (trans_associate_var): Handle class associate-\n+\tnames.\n+\t* expr.c (gfc_get_variable_expr): Supply the array-spec if\n+\tpossible.\n+\t* trans-types.c (gfc_typenode_for_spec): Set GFC_CLASS_TYPE_P\n+\tfor class types.\n+\t* trans.h : Add prototypes for gfc_get_vptr_from_expr and\n+\tgfc_conv_derived_to_class. Define GFC_CLASS_TYPE_P.\n+\t* resolve.c (resolve_variable): For class arrays, ensure that\n+\tthe target expression has all the necessary _data references.\n+\t(resolve_assoc_var): Throw a \"not yet implemented\" error for\n+\tclass array selectors that need a temporary.\n+\t* match.c (copy_ts_from_selector_to_associate,\n+\tselect_derived_set_tmp, select_class_set_tmp): New functions.\n+\t(select_type_set_tmp): Call one of last two new functions.\n+\t(gfc_match_select_type): Copy_ts_from_selector_to_associate is\n+\tcalled if associate-name is typed.\n+\n+\tPR fortran/53191\n+\t* resolve.c (resolve_ref): C614 applied to class expressions.\n+\n+2012-05-05  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/49010\n+\tPR fortran/24518\n+\t* intrinsic.texi (MOD, MODULO): Mention sign and magnitude of result.\n+\t* simplify.c (gfc_simplify_mod): Use mpfr_fmod.\n+\t(gfc_simplify_modulo): Likewise, use copysign to fix the result if\n+\tzero.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_mod): Remove fallback as\n+\tbuiltin_fmod is always available. For modulo, call copysign to fix\n+\tthe result when signed zeros are enabled.\n+\n+2012-05-05  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* gfortran.texi (GFORTRAN_TMPDIR): Rename to TMPDIR, explain\n+\talgorithm for choosing temp directory.\n+\n+2012-05-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53175\n+\t* resolve.c (resolve_variable): Set public_used\n+\tif a private module variable is used in a (public)\n+\tspecification expression.\n+\t* trans-decl.c (gfc_finish_var_decl): Mark those\n+\tTREE_PUBLIC.\n+\n+2012-05-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53111\n+\t* resolve.c (resolve_fl_derived): Fix -std=f95\n+\tdiagnostic for generic vs. DT names.\n+\n+2012-05-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52864\n+\t* interface.c (compare_parameter_intent): Remove.\n+\t(check_intents): Remove call, handle CLASS pointer.\n+\t(compare_actual_formal): Handle CLASS pointer.\n+\n+2012-04-30  Jan Hubicka  <jh@suse.cz>\n+\n+\t* f95-lang.c (gfc_finish): Update comments.\n+\n+2012-04-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/53148\n+\t* frontend-passes.c (create_var):  If the statement has a label,\n+\tput the label around the block.\n+\n+2012-04-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52196\n+\t* lang.opt (Wrealloc-lhs, Wrealloc-lhs-all): New flags.\n+\t* gfortran.h (gfc_option_t): Add them.\n+\t* options.c (gfc_init_options, gfc_post_options,\n+\tgfc_handle_option): Handle them.\n+\t* invoke.texi: Document them.\n+\t* trans-expr.c (realloc_lhs_warning): New function.\n+\t(gfc_trans_arrayfunc_assign,\n+\talloc_scalar_allocatable_for_assignment,\n+\tgfc_trans_assignment_1): Use it.\n+\n+2012-04-18  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* trans-decl.c (gfc_trans_entry_master_switch): Build SWITCH_EXPR\n+\twith NULL_TREE type instead of void_type_node.\n+\t* trans-io.c (io_result): Likewise.\n+\t* trans-stmt.c (gfc_trans_integer_select,\n+\tgfc_trans_character_select): Likewise.\n+\n+2012-04-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52864\n+\t* expr.c (gfc_check_vardef_context): Fix assignment check for\n+\tpointer components.\n+\n+2012-04-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/52968\n+\t* class.c (gfc_build_class_symbol): Make sure the 'f2k_derived'\n+\tnamespace is present.\n+\n+2012-04-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/51082\n+\t* trans-expr.c (gfc_conv_expr_reference): Check if the expression is a\n+\tsimple function call (or a more involved PPC reference).\n+\n+2012-04-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52916\n+\tPR fortran/40973\n+\t* gfortran.h (symbol_attribute): Add public_used.\n+\t* interface.c (check_sym_interfaces, check_uop_interfaces,\n+\tgfc_check_interfaces): Set it.\n+\t* resolve.c (resolve_typebound_procedure): Ditto.\n+\t* trans-decl.c (build_function_decl): Use it.\n+\n+2012-04-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52729\n+\t* resolve.c (resolve_symbol): Fix searching for parent NS decl.\n+\n+2012-04-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52751\n+\t* trans-decl.c (gfc_finish_var_decl): Don't set TREE_PUBLIC\n+\tfor PRIVATE module variables without C-binding label.\n+\n+\tPR fortran/40973\n+\t* trans-decl.c (build_function_decl): Ditto for procedures.\n+\n+2012-04-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52893\n+\t* frontend-passes.c:  Keep track of wether we are in an implicit\n+\tDO loop; do not do function elimination if we are.\n+\n+2012-04-06  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52668\n+\t* module.c:  Only mark symbols as use_only if they have been\n+\timported via an only list.\n+\n+2012-03-28  Paul Thomas  <pault@gcc.gnu.org>\n+\tTobias Burnus  <burnus@gcc.gnu.org>\n+\n+\tPR fortran/52652\n+\t* match.c (gfc_match_allocate, gfc_match_deallocate): Change\n+\t\"not.. or\" to \"neither.. nor\".\n+\t* parse.c (decode_specification_statement): Correct error in\n+\tchpice of matching function for \"allocatable\".\n+\n+2012-03-23  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* gfortran.h (GFC_MAX_LINE): Remove unused macro.\n+\n+2012-03-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/52559\n+\t* error.c (gfc_widechar_display_length): Consider tabs as\n+\tone character wide, as they're displayed as spaces.\n+\t(show_locus): Move tab handling to...\n+\t(print_wide_char_into_buffer): ... here.\n+\n+2012-03-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52585\n+\t* trans-intrinsic.c (gfc_conv_associated): Fix handling of\n+\tprocpointer dummy arguments.\n+\n+2012-03-16  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* trans-intrinsic.c (build_round_expr): Don't use BUILT_IN_IROUND\n+\tfor __float128.\n+\n+2012-03-15  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* f95-lang.c (gfc_init_builtin_functions): Initialize\n+\tBUILT_IN_IROUND.\n+\t* mathbuiltins.def: Add IROUND.\n+\t* trans-intrinsic.c (build_round_expr): Use BUILT_IN_IROUND if\n+\ttype size matches.\n+\t(gfc_build_intrinsic_lib_fndecls): Build iround functions.\n+\n+2012-03-12  Richard Guenther  <rguenther@suse.de>\n+\n+\t* f95-lang.c (builtin_type_for_size): Use gfc_type_for_size.\n+\n+2012-03-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52542\n+\t* decl.c (match_procedure_decl): If the interface\n+\tis bind(C), the procedure is as well.\n+\n+2012-03-10  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* convert.c (convert): Fold BOOLEAN_TYPE types to the proper variant.\n+\n+2012-03-09  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Make-lang.in (convert.o): Depend on convert.h.\n+\t* convert.c: Header and comment cleanups.\n+\t(gfc_thruthvalue_conversion): Rename static function\n+\tto truthvalue_conversion.  Do not use 'internal_error' from here,\n+\tuse 'gcc_unreachable' instead.\n+\t(convert): Do not use 'error' for conversions to void, use\n+\t'gcc_unreachable' instead.  Likewise for conversions to non-scalar\n+\ttypes.  Do not hanlde ENUMERAL_TYPE, the front end never creates them.\n+\tClean up #if 0 code.\n+\n+2012-03-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52469\n+\t* trans-types.c (gfc_get_function_type): Handle backend_decl\n+\tof a procedure pointer.\n+\n+2012-03-06  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* f95-lang.c (yyerror, yylex): Remove.\n+\t(clear_binding_stack): Remove, fold into its only user.\n+\t(LANG_HOOKS_PRINT_IDENTIFIER): Do not re-define.\n+\t(ridpointers): Remove.\n+\t(gfc_eh_initialized_p): Make static.\n+\t(gfc_truthvalue_conversion): Move to convert.c.\n+\t(gfc_be_parse_file): Clear binding level stack when done.\n+\t(gfc_print_identifier): Remove.\n+\t(pushlevel): Remove ignored 'ignore' argument.  Update all callers.\n+\t(poplevel): Remove unused 'reverse' argument.  Update all callers.\n+\t(ggc_p): Remove.\n+\t(gfc_builtin_function): Make static. Do not attempt to make RTL for\n+\tbuiltin functions.\n+\t* convert.c (gfc_truthvalue_conversion): Moved here from f95-lang.c,\n+\tand made static.\n+\t* trans.h (pushlevel, poplevel): Adjust prototypes.\n+\t(gfc_truthvalue_conversion, gfc_builtin_function): Remove prototypes.\n+\t* trans-openmp.c: Update calls to pushlevel and poplevel.\n+\t* trans.c: Likewise.\n+\t* trans-decl.c: Likewise.\n+\n+2012-03-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/50981\n+\t* gfortran.h (gfc_is_class_container_ref): New prototype.\n+\t* class.c (gfc_is_class_container_ref): New function.\n+\t* trans-expr.c (gfc_conv_procedure_call): Add a \"_data\" component\n+\treference to polymorphic actual arguments.\n+\n+2012-03-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/50981\n+\t* trans-expr.c (gfc_conv_procedure_call): Save se->ss's value.\n+\tHandle the case of unallocated arrays passed to elemental procedures.\n+\n+2012-03-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans.h (struct gfc_ss_info): Move can_be_null_ref component from\n+\tthe data::scalar subcomponent to the toplevel.\n+\t* trans-expr.c (gfc_conv_expr): Update component reference.\n+\t* trans-array.c (gfc_add_loop_ss_code): Ditto.\n+\t(gfc_walk_elemental_function_args): Ditto.  Move the conditional setting\n+\tthe field out of the scalar-only block.\n+\n+2012-03-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/36160\n+\t* error.c (gfc_widechar_display_length, gfc_wide_display_length):\n+\tNew functions.\n+\t(print_wide_char_into_buffer): Return length written.\n+\t(show_locus): Fix locus displayed when wide characters are present.\n+\n+2012-03-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* module.c (gfc_use_module): Improve error message some more.\n+\n+2012-03-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/52313\n+\t* module.c (gfc_use_module): Improve error messages.\n+\n+2012-03-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48820\n+\t* resolve.c (resolve_actual_arglist): Properly reset\n+\tassumed_type_expr_allowed.\n+\n+2012-03-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* lang.opt (Wc-binding-type): New flag.\n+\t* options.c (gfc_init_options, gfc_handle_option): Handle it.\n+\t* invoke.texi (Wc-binding-type): Document it.\n+\t* gfortran.h (gfc_option_t): Add warn_c_binding_type.\n+\t* decl.c (verify_bind_c_sym): Handle -Wc-binding-type.\n+\t* symbol.c (gfc_set_default_type, verify_bind_c_derived_type):\n+\tDitto.\n+\n+2012-03-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48820\n+\t* decl.c (gfc_match_decl_type_spec): Support type(*).\n+\t(gfc_verify_c_interop): Allow type(*).\n+\t* dump-parse-tree.c (show_typespec): Handle type(*).\n+\t* expr.c (gfc_copy_expr): Ditto.\n+\t* interface.c (compare_type_rank, compare_parameter,\n+\tcompare_actual_formal, gfc_procedure_use): Ditto.\n+\t* libgfortran.h (bt): Add BT_ASSUMED.\n+\t* misc.c (gfc_basic_typename, gfc_typename): Handle type(*).\n+\t* module.c (bt_types): Ditto.\n+\t* resolve.c (assumed_type_expr_allowed): New static variable.\n+\t(resolve_actual_arglist, resolve_variable, resolve_symbol):\n+\tHandle type(*).\n+\t* trans-expr.c (gfc_conv_procedure_call): Ditto.\n+\t* trans-types.c (gfc_typenode_for_spec, gfc_get_dtype): Ditto.\n+\n+2012-03-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52325\n+\t* primary.c (gfc_match_varspec): Add missing ;.\n+\n+2012-03-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52325\n+\t* primary.c (gfc_match_varspec): Add diagnostic for % with\n+\tnonderived types.\n+\n+2012-03-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52270\n+\t* expr.c (gfc_check_vardef_context): Fix check for\n+\tintent-in polymorphic pointer .\n+\t* interface.c (compare_parameter): Allow passing TYPE to\n+\tintent-in polymorphic pointer.\n+\n+2012-03-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52452\n+\t* resolve.c (resolve_intrinsic): Don't search for a\n+\tfunction if we know that it is a subroutine.\n+\n+2012-02-29  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/52386\n+\t* trans-expr.c (fcncall_realloc_result): Dereference the\n+\tdescriptor if needed.\n+\n+2012-02-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52335\n+\t* io.c (gfc_match_open): Remove bogus F2003 DELIM= check.\n+\n+2012-02-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52295\n+\t* interface.c (check_interface0): Internal procs in\n+\tgeneric interfaces are allowed in Fortran 2008.\n+\n+2012-02-17  Tobias Burnus  <burnus@net-b.de>\n+\t    Roland Stigge  <stigge@antcom.de>\n+\n+\tPR translation/52273\n+\t* interface.c (compare_actual_formal): Fix typo \"at at\".\n+\n+2012-02-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.texi (Q exponent-letter): Fix grammar.\n+\n+2012-02-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.texi (Status): Fix typos.\n+\t* invoke.texi (ffixed-form, fstack-arrays): Spell Fortran with\n+\ta majuscule.\n+\n+2012-02-17  Tobias Burnus  <burnus@net-b.de>\n+\t    Roland Stigge  <stigge@antcom.de>\n+\n+\tPR translation/52232\n+\tPR translation/52234\n+\tPR translation/52245\n+\tPR translation/52246\n+\tPR translation/52262\n+\tPR translation/52273\n+\t* io.c (gfc_match_open): Fix typo.\n+\t* interface.c (compare_actual_formal): Ditto.\n+\t* lang.opt (freal-4-real-8, freal-4-real-16, freal-8-real-16): Ditto.\n+\t* match.c (alloc_opt_list, gfc_match_nullify): Ditto.\n+\t* check.c (gfc_check_associated, gfc_check_null): Ditto.\n+\n+2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/50981\n+\t* trans-stmt.c (gfc_get_proc_ifc_for_call): New function.\n+\t(gfc_trans_call): Use gfc_get_proc_ifc_for_call.\n+\n+2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_walk_elemental_function_args,\n+\tgfc_walk_function_expr): Move call to gfc_get_proc_ifc_for_expr out\n+\tof gfc_walk_elemental_function_args.\n+\t* trans-stmt.c (gfc_trans_call): Ditto.\n+\t* trans-array.h (gfc_get_proc_ifc_for_expr): New prototype.\n+\t(gfc_walk_elemental_function_args): Update prototype.\n+\n+2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_get_proc_ifc_for_expr): New function.\n+\t(gfc_walk_elemental_function_args): Move code to\n+\tgfc_get_proc_ifc_for_expr and call it.\n+\n+2012-02-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52151\n+\t* trans-expr.c (fcncall_realloc_result): Set also the stride.\n+\n+2012-02-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51514\n+\t* trans-expr.c (gfc_conv_procedure_call): Add _data component\n+\tfor calls of scalar CLASS actuals to TYPE dummies.\n+\n+2012-02-05  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/48847\n+\t* trans-decl.c:  Warn about unused dummy procedure arguments\n+\tif -Wunused-dummy-argument is specified.  Suppress middle-end\n+\twarnings about procedure arguments.\n+\n+2012-02-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_array_allocate): Zero memory for all class\n+\tarray allocations.\n+\t* trans-stmt.c (gfc_trans_allocate): Ditto for class scalars.\n+\n+\tPR fortran/52102\n+\t* trans-stmt.c (gfc_trans_allocate): Before correcting a class\n+\tarray reference, ensure that 'dataref' points to the _data\n+\tcomponent that is followed by the array reference..\n+\n+2012-02-02  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/41587\n+\tPR fortran/46356\n+\tPR fortran/51754\n+\tPR fortran/50981\n+\t* class.c (insert_component_ref, class_data_ref_missing,\n+\tgfc_fix_class_refs): New functions.\n+\t* gfortran.h (gfc_fix_class_refs): New prototype.\n+\t* trans-expr.c (gfc_conv_expr): Remove special case handling and call\n+\tgfc_fix_class_refs instead.\n+\n+2012-02-02  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/52012\n+\t* trans-expr.c (fcncall_realloc_result): If variable shape is\n+\tcorrect, retain the bounds, whatever they are.\n+\n+2012-02-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52093\n+\t* simplify.c (gfc_simplify_size): Handle INTRINSIC_PARENTHESES.\n+\n+2012-02-01  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/51958\n+\t* frontend-passes.c (convert_elseif):  New function.\n+\t(optimize_namespace):  Call it.\n+\n+2012-02-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52024\n+\t* module.c (MOD_VERSION): Bump.\n+\t(mio_typebound_proc): Read/write is_operator from/to the\n+\t.mod file.\n+\n+2012-02-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52059\n+\t* trans-expr.c (gfc_conv_procedure_call): Add array ref\n+\tonly to variables.\n+\n+2012-01-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52024\n+\t* gfortran.h (gfc_tbp_generic): Store whether the\n+\tgeneric is an operator.\n+\t* decl.c (gfc_match_generic): Set that flag.\n+\t* resolve.c (check_generic_tbp_ambiguity): Use it in the\n+\tgfc_compare_interfaces check.\n+\n+2012-01-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52029\n+\t* class.c (gfc_find_derived_vtab): Mark _copy function as pure.\n+\n+2012-01-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52013\n+\t* class.c (get_unique_hashed_string): Adapt trim length.\n+\t(gfc_build_class_symbol) Encode also corank in the container name.\n+\n+2012-01-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/52012\n+\t* trans-expr.c (fcncall_realloc_result): Correct calculation of\n+\tresult offset.\n+\n+2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* module.c (pointer_info): Make true_name and module pointers\n+\trather than arrays, order pointers before other fields.\n+\t(free_pi_tree): free true_name and module as well.\n+\t(mio_read_string): Rename to read_string.\n+\t(mio_write_string): Remove.\n+\t(load_commons): Use read_string.\n+\t(read_module): Use read_string rather than mio_internal_string.\n+\t(write_blank_common): Call write_atom directly.\n+\t(write_symbol): Likewise.\n+\n+2012-01-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41600\n+\t* expr.c (gfc_default_initializer): Convert the values if\n+\tthe type does not match.\n+\n+2012-01-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51972\n+\t* trans-array.c (structure_alloc_comps): Fix assignment of\n+\tpolymorphic components (polymorphic deep copying).\n+\n+2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/51808\n+\t* decl.c (set_binding_label): Make binding_label argument const.\n+\t(curr_binding_label): Constify.\n+\t* gfortran.h (gfc_symbol): Constify binding_label.\n+\t(gfc_common_head): Likewise.\n+\t(get_iso_c_sym): Likewise.\n+\t* match.c (gfc_match_name_C): Constify buffer argument.\n+\t* match.h (gfc_match_name_C): Likewise.\n+\t* resolve.c (set_name_and_label): Constify binding_label argument.\n+\t(gfc_iso_c_sub_interface): Constify binding_label variable.\n+\t* symbol.c (get_iso_c_sym): Constify binding_label argument.\n+\n+2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/51808\n+\t* decl.c (set_binding_label): Move prototype from match.h to here.\n+\t(curr_binding_label): Make a pointer rather than static array.\n+\t(build_sym): Check sym->binding_label pointer rather than array,\n+\tupdate set_binding_label call, handle curr_binding_label changes.\n+\t(set_binding_label): Handle new curr_binding_label, dest_label\n+\tdouble ptr, and sym->binding_label.\n+\t(verify_bind_c_sym): Handle sym->binding_label being a pointer.\n+\t(set_verify_bind_c_sym): Check sym->binding_label pointer rather\n+\tthan array, update set_binding_label call.\n+\t(gfc_match_bind_c_stmt): Handle curr_binding_label change.\n+\t(match_procedure_decl): Update set_binding_label call.\n+\t(gfc_match_bind_c): Change binding_label to pointer, update\n+\tgfc_match_name_C call.\n+\t* gfortran.h (GFC_MAX_BINDING_LABEL_LEN): Remove macro.\n+\t(gfc_symbol): Make binding_label a pointer.\n+\t(gfc_common_head): Likewise.\n+\t* match.c (gfc_match_name_C): Heap allocate bind(C) name.\n+\t* match.h (gfc_match_name_C): Change prototype argument.\n+\t(set_binding_label): Move prototype to decl.c.\n+\t* module.c (struct pointer_info): Make binding_label a pointer.\n+\t(free_pi_tree): Free unused binding_label.\n+\t(mio_read_string): New function.\n+\t(mio_write_string): New function.\n+\t(load_commons): Redo reading of binding_label.\n+\t(read_module): Likewise.\n+\t(write_common_0): Change to write empty string instead of name if\n+\tno binding_label.\n+\t(write_blank_common): Write empty string for binding label.\n+\t(write_symbol): Change to write empty string instead of name if no\n+\tbinding_label.\n+\t* resolve.c (gfc_iso_c_func_interface): Don't set binding_label.\n+\t(set_name_and_label): Make binding_label double pointer, use\n+\tasprintf.\n+\t(gfc_iso_c_sub_interface): Make binding_label a pointer.\n+\t(resolve_bind_c_comms): Handle cases if\n+\tgfc_common_head->binding_label is NULL.\n+\t(gfc_verify_binding_labels): sym->binding_label is a pointer.\n+\t* symbol.c (gfc_new_symbol): Rely on XCNEW zero init for\n+\tbinding_label.\n+\t(gen_special_c_interop_ptr): Don't set binding label.\n+\t(generate_isocbinding_symbol): Insert binding_label into symbol\n+\ttable.\n+\t(get_iso_c_sym): Use pointer assignment instead of strcpy.\n+\t* trans-common.c (gfc_sym_mangled_common_id): Handle\n+\tcom->binding_label being a pointer.\n+\t* trans-decl.c (gfc_sym_mangled_identifier): Handle\n+\tsym->binding_label being a pointer.\n+\t(gfc_sym_mangled_function_id): Likewise.\n+\n+2012-01-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52038\n+\t* resolve.c (symbol_as): Remove unused, accidentally\n+\tadded function.\n+\n+2012-01-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51972\n+\t* trans-stmt.c (gfc_trans_allocate): Properly check whether\n+\twe have a BT_CLASS which needs to be memset.\n+\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52022\n+\t* trans-expr.c (gfc_conv_procedure_call): Fix passing\n+\tof functions, which return allocatables.\n+\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52016\n+\t* resolve.c (resolve_formal_arglist): Fix elemental\n+\tconstraint checks for polymorphic dummies also for\n+\tpointers.\n+\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51970\n+\tPR fortran/51977\n+\t* primary.c (gfc_match_varspec. gfc_match_rvalue): Set\n+\thandle array spec for BT_CLASS.\n+\t* expr.c (gfc_get_variable_expr, gfc_lval_expr_from_sym)\n+\t* frontend-passes.c (create_var): Ditto.\n+\t* resolve.c (resolve_actual_arglist, resolve_assoc_var): Ditto.\n+\t* trans-decl.c (gfc_trans_deferred_vars): Use class_pointer\n+\tinstead of attr.pointer.\n+\t(gfc_generate_function_code): Use CLASS_DATA (sym) for BT_CLASS.\n+\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Move assert.\n+\t* trans-stmt.c (trans_associate_var): Ask for the descriptor.\n+\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51953\n+\t* match.c (gfc_match_allocate): Allow more than allocate\n+\tobject with SOURCE=.\n+\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52016\n+\t* resolve.c (resolve_formal_arglist): Fix elemental\n+\tconstraint checks for polymorphic dummies.\n+\n+2012-01-27  Paul Thomas  <pault@gcc.gnu.org>\n+\t    Tobias Burnus <burnus@gcc.gnu.org>\n+\n+\tPR fortran/48705\n+\tPR fortran/51870\n+\tPR fortran/51943\n+\tPR fortran/51946\n+\t* trans-array.c (gfc_array_init_size): Add two extra arguments\n+\tto convey the dynamic element size of a calls object and to\n+\treturn the number of elements that have been allocated.\n+\t(gfc_array_allocate): Add the same arguments and use them to\n+\tcall gfc_array_init_size.  Before the allocation dereference\n+\tthe data pointer, if necessary. Set the allocated array to zero\n+\tif the class element size or expr3 are non-null.\n+\t* trans-expr.c (gfc_conv_class_to_class): Give this function\n+\tglobal scope.\n+\t(get_class_array_ref): New function.\n+\t(gfc_copy_class_to_class): New function.\n+\t* trans-array.h : Update prototype for gfc_array_allocate.\n+\t* trans-stmt.c (gfc_trans_allocate): For non-variable class\n+\tSTATUS expressions extract the class object and the dynamic\n+\telement size. Use the latter to call gfc_array_allocate and\n+\tthe former for setting the vptr and, via\n+\tgfc_copy_class_to_clasfc_cs, to copy to the allocated data.\n+\t* trans.h : Prototypes for gfc_get_class_array_ref,\n+\tgfc_copy_class_to_class and gfc_conv_class_to_class.\n+\n+2012-01-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (symbol_as): Check also for attr.class_ok.\n+\n+2012-01-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51995\n+\t* class.c (gfc_build_class_symbol): Fix invalid freeing\n+\tissue with fclass->f2k_derived.\n+\n+2012-01-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51995\n+\t* class.c (gfc_build_class_symbol): Ensure that\n+\tfclass->f2k_derived is set.\n+\n+2012-01-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51966\n+\t* resolve.c (resolve_structure_cons): Only create an\n+\tarray constructors for nonscalars.\n+\n+2012-01-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51948\n+\t* check.c (variable_check): Fix checking for\n+\t variables and deeply nested BLOCKs.\n+\n+2012-01-21  Tobias Burnus  <burnus@net-b.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/50556\n+\t* symbol.c (check_conflict): namelist-group-name cannot have the SAVE\n+\tattribute.\n+\n+2012-01-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51913\n+\t* interface.c (compare_parameter): Fix CLASS comparison.\n+\n+2012-01-20  Tobias Burnus  <burnus@net-b.de>\n+\t    Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/51056\n+\t* module.c (load_needed, read_module): Don't mark __vtab etc.\n+\tas use_only.\n+\n+2012-01-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51904\n+\t* expr.c (gfc_build_intrinsic_call): Also set the symtree.\n+\n+2012-01-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/51634\n+\t* trans-expr.c (gfc_conv_procedure_call): Deallocate allocatable\n+\tcomponents of temporary class arguments.\n+\n+2012-01-17  Tobias Burnus  <burnus@net-b.de>\n+\t    Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/51869\n+\t* trans-expr.c (alloc_scalar_allocatable_for_assignment): Nullify\n+\tLHS after allocation, if it has allocatable components.\n+\t* f95-lang.c (gfc_init_builtin_functions): Add BUILT_IN_CALLOC.\n+\n+2012-01-16  Mikael Morin  <mikael@gcc.gnu.org>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/50981\n+\t* trans-array.c (gfc_walk_elemental_function_args): Fix\n+\tpassing of deallocated allocatables/pointers as absent argument.\n+\n+2012-01-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51809\n+\t* class.c (gfc_find_derived_vtab): Mark __vtab and\n+\t__def_init as FL_VARIABLE not as FL_PARAMETER.\n+\t* expr.c (gfc_simplify_expr): Remove special\n+\thandling of __vtab.\n+\t* resolve.c (resolve_values): Ditto.\n+\t* trans-decl.c (gfc_get_symbol_decl): Mark __vtab\n+\tand __def_init as TREE_READONLY.\n+\n+2012-01-16  Zydrunas Gimbutas  <gimbutas@cims.nyu.edu>\n+\tAndreas Kloeckner  <kloeckner@cims.nyu.edu>\n+\tSteven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/48426\n+\t* gfortran.h (gfc_option_t): Add members flag_*_kind to store kind.\n+\t* lang.opt: Add options -freal-4-real-8, -freal-4-real-10,\n+\t-freal-4-real-16, -freal-8-real-4, -freal-8-real-10, -freal-8-real-16\n+\tand -finteger-4-integer-8. User-desired type conversion information.\n+\t* decl.c (gfc_match_old_kind_spec,kind_expr): Type conversions\n+\tin declaration parsing.\n+\t* trans-types.c (gfc_init_kinds): User-specified type conversion\n+\tchecked for current backend.\n+\t* primary.c (match_integer_constant,match_real_constant): Implement\n+\ttype conversion in constant parsing.\n+\t* options.c (gfc_init_options,gfc_handle_option): Translate input\n+\toptions to flags in internal options data structure.\n+\t* invoke.texi: Document new options.  Re-order options in Options\n+\tsummary section.\n+\n+2012-01-16  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_trans_create_temp_array): In the case of a\n+\tclass array temporary, detect a null 'eltype' on entry and use\n+\t'initial' to provde the class reference and so, through the\n+\tvtable, the element size for the dynamic type.\n+\t* trans-stmt.c (gfc_conv_elemental_dependencies): For class\n+\texpressions, set 'eltype' to null and pass the values via the\n+\t'initial' expression.\n+\n+2012-01-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51800\n+\t* resolve.c (build_default_init_expr): Also initialize\n+\tnonconstant-length strings with -finit-character=<n>.\n+\n+2011-01-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51816\n+\t* module.c (read_module): Don't make nonexisting\n+\tintrinsic operators as found.\n+\t(rename_list_remove_duplicate): New function.\n+\t(gfc_use_modules): Use it.\n+\n+2012-01-13  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/48351\n+\t* trans-array.c (structure_alloc_comps): Suppress interative\n+\tcall to self, when current component is deallocated using\n+\tgfc_trans_dealloc_allocated.\n+\t* class.c (gfc_build_class_symbol): Copy the 'alloc_comp'\n+\tattribute from the declared type to the class structure.\n+\n+2012-01-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51842\n+\t* fortran/trans-types.c (gfc_init_kinds): Use PTRDIFF_TYPE\n+\tinstead of a signed int of size POINTER_SIZE for\n+\tgfc_index_integer_kind.\n+\n+2012-01-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36755\n+\t* intrinsic.texi (CHMOD): Extend a bit and remove statement\n+\tthat /bin/chmod is called.\n+\n+2012-01-10  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* gfortran.texi (Fortran 2003 Status): Fix grammar.\n+\n+2012-01-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51652\n+\t* resolve.c (resolve_allocate_expr): For non-deferred char lengths,\n+\tcheck whether type-spec matches declaration.\n+\n+2012-01-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (resolve_ordinary_assign): Improve error wording.\n+\n+2012-01-09  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/51791\n+\t* interface.c (matching_typebound_op): Drill down through\n+\tpossible parentheses to obtain base expression. Do not test for\n+\t'class_ok' but, instead for the class structure components.\n+\t* resolve.c (resolve_ordinary_assign): Extend error message for\n+\tpolymorphic assignment to advise checking for specific\n+\tsubroutine.\n+\n+\tPR fortran/51792\n+\t* resolve.c (resolve_typebound_function): Restore 'static' to\n+\tdeclaration.\n+\n+2012-01-09  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/51758\n+\t* trans-array.c (gfc_walk_elemental_function_args):\n+\tSkip over NULL() actual arguments.\n+\n+2012-01-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.texi: Bump copyright year.\n+\t(Fortran 2003 Status): Update polymorphism item, add\n+\titem for generic interface with DT name.\n+\n+2012-01-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51578\n+\t* gfortran.h (gfc_use_list):\n+\t* match.h (gfc_use_module): Rename to ...\n+\t(gfc_use_modules): ... this.\n+\t* module.c (use_locus, specified_nonint, specified_int): Remove\n+\tglobal variable.\n+\t(module_name): Change type to const char*, used with gfc_get_string.\n+\t(module_list): New global variable.\n+\t(free_rename): Free argument not global var.\n+\t(gfc_match_use): Save match to module_list.\n+\t(load_generic_interfaces, read_module): Don't free symtree.\n+\t(write_dt_extensions, gfc_dump_module): Fix module-name I/O due to the\n+\ttype change of module_name.\n+\t(write_symbol0, write_generic): Optimize due to the type change.\n+\t(import_iso_c_binding_module, use_iso_fortran_env_module): Use\n+\tlocus of rename->where.\n+\t(gfc_use_module): Take module_list as argument.\n+\t(gfc_use_modules): New function.\n+\t(gfc_module_init_2, gfc_module_done_2): Init module_list, rename_list.\n+\t* parse.c (last_was_use_stmt): New global variable.\n+\t(use_modules): New function.\n+\t(decode_specification_statement, decode_statement): Move USE match up\n+\tand call use_modules.\n+\t(next_free, next_fixed): Call use_modules.\n+\t(accept_statement): Don't call gfc_module_use.\n+\n+2012-01-06  Tobias Burnus <burnus@net-b.de>\n+\n+\t* trans-openmp.c (gfc_omp_clause_dtor, gfc_trans_omp_array_reduction):\n+\tUpdate call to gfc_trans_dealloc_allocated.\n+\t* trans.c (gfc_allocate_using_malloc): Fix spacing.\n+\t(gfc_allocate_allocatable): For gfc_allocate_using_lib, jump to\n+\tlabel_finish when an error occurs.\n+\t(gfc_deallocate_with_status): Call caf_deregister for -fcoarray=lib.\n+\t* trans.h (gfc_allocate_allocatable, gfc_deallocate_with_status):\n+\tUpdate prototype.\n+\t(gfor_fndecl_caf_deregister): New tree symbol.\n+\t* trans-expr.c (gfc_conv_procedure_call): Update\n+\tgfc_deallocate_with_status and gfc_trans_dealloc_allocated calls.\n+\t* trans-array.c (gfc_array_allocate, gfc_trans_dealloc_allocated,\n+\tstructure_alloc_comps, gfc_trans_deferred_array): Ditto.\n+\t(gfc_array_deallocate): Handle coarrays with -fcoarray=lib.\n+\t* trans-array.h (gfc_array_deallocate, gfc_array_allocate,\n+\tgfc_trans_dealloc_allocated): Update prototypes.\n+\t* trans-stmt.c (gfc_trans_sync): Fix indentation.\n+\t(gfc_trans_allocate): Fix errmsg padding and label handling.\n+\t(gfc_trans_deallocate): Ditto and handle -fcoarray=lib.\n+\t* expr.c (gfc_is_coarray): Fix algorithm for BT_CLASS.\n+\t* libgfortran.h (GFC_STAT_STOPPED_IMAGE): Use large value\n+\tto avoid other stats accidentally matching this one.\n+\t* trans-decl.c (gfor_fndecl_caf_deregister): New global var.\n+\t(gfc_build_builtin_function_decls): Fix prototype decl of caf_register\n+\tand add decl for caf_deregister.\n+\t(gfc_trans_deferred_vars): Handle CAF vars with -fcoarrays=lib.\n+\t* trans-intrinsic.c (conv_intrinsic_move_alloc): Update call to\n+\tgfc_deallocate_with_status.\n+\n+2012-01-05  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/PR48946\n+\t* resolve.c (resolve_typebound_static): If the typebound\n+\tprocedure is 'deferred' try to find the correct specific\n+\tprocedure in the derived type operator space itself.\n+\n+2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/50981\n+\t* trans-array.h (gfc_walk_elemental_function_args): New argument.\n+\t* trans-intrinsic.c (gfc_walk_intrinsic_function): Update call.\n+\t* trans-stmt.c (gfc_trans_call): Ditto.\n+\t* trans-array.c (gfc_walk_function_expr): Ditto.\n+\t(gfc_walk_elemental_function_args): Get the dummy argument list\n+\tif possible.  Check that the dummy and the actual argument are both\n+\toptional, and set can_be_null_ref accordingly.\n+\n+2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/50981\n+\t* trans.h (struct gfc_ss_info): New field data::scalar::can_be_null_ref\n+\t* trans-array.c: If the reference can be NULL, save the reference\n+\tinstead of the value.\n+\t* trans-expr.c (gfc_conv_expr): If we have saved a reference,\n+\tdereference it.\n+\n+2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-expr.c (gfc_conv_expr): Move address taking...\n+\t(gfc_conv_expr_reference): ... here.\n+\n+2012-01-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/49693\n+\t* trans-common.c (create_common): Update copyright years.  Mark\n+\tvariables as used to avoid warnings about unused variables in\n+\tcommon blocks.\n+\n+2012-01-03  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gfortran.h (struct gfc_expr): Add missing \"struct\"\n+\tqualifier for member base_expr.\n+\n+2012-01-02  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/51529\n+\t* trans-array.c (gfc_array_allocate): Null allocated memory of\n+\tnewly allocted class arrays.\n+\n+\tPR fortran/46262\n+\tPR fortran/46328\n+\tPR fortran/51052\n+\t* interface.c(build_compcall_for_operator): Add a type to the\n+\texpression.\n+\t* trans-expr.c (conv_base_obj_fcn_val): New function.\n+\t(gfc_conv_procedure_call): Use base_expr to detect non-variable\n+\tbase objects and, ensuring that there is a temporary variable,\n+\tbuild up the typebound call using conv_base_obj_fcn_val.\n+\t(gfc_trans_class_assign): Pick out class procedure pointer\n+\tassignments and do the assignment with no further prcessing.\n+\t(gfc_trans_class_array_init_assign, gfc_trans_class_init_assign\n+\tgfc_trans_class_assign): Move to top of file.\n+\t* gfortran.h : Add 'base_expr' field to gfc_expr.\n+\t* resolve.c (get_declared_from_expr): Add 'types' argument to\n+\tswitch checking of derived types on or off.\n+\t(resolve_typebound_generic_call): Set the new argument.\n+\t(resolve_typebound_function, resolve_typebound_subroutine):\n+\tSet 'types' argument for get_declared_from_expr appropriately.\n+\tIdentify base expression, if not a variable, in the argument\n+\tlist of class valued calls. Assign it to the 'base_expr' field\n+\tof the final expression. Strip away all references after the\n+\tlast class reference.\n+\n+2012-01-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51682\n+\t* trans-intrinsic.c (trans_this_image, trans_image_index,\n+\ttrans_num_images, conv_intrinsic_cobound): Fold_convert the\n+\tcaf_num_images/caf_this_images variables to the correct int kind.\n+\n+2012-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gfortranspec.c (lang_specific_driver): Update copyright notice\n+\tdates.\n+\f\n+Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "0b77bdd0ba843486a6e91e578a684680c1c0c905", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 11179, "changes": 11180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "6687189a22f2b91cd8aefbf110c6f3291d8564c8", "filename": "gcc/testsuite/ChangeLog-2012", "status": "added", "additions": 11183, "deletions": 0, "changes": 11183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/gcc%2Ftestsuite%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/gcc%2Ftestsuite%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog-2012?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "e7142d8f354daffee221459ac23ff167c11c8931", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 1, "deletions": 1272, "changes": 1273, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -7,1279 +7,8 @@\n \t(read_logical): Likewise.\n \t(read_character): Likewise.\n \t(read_complex): Likewise.\n-\n-2012-12-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libfortran/48976\n-\t* io/inquire.c (inquire_via_unit): Set user stream inquiry variable to\n-\tappropriate value based on unit access method. (inquire_via_filename):\n-\tSince filename is not associated with an open unit, set stream inquiry\n-\tto UNKNOWN.\n-\t* io/io.h: Define inquire stream parameters.\n-\n-2012-12-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libfortran/48960\n-\t* io/open.c (st_parameter_open):  Assign newunit number to user\n-\tvariable only if the the associated open statement is successful. \n-\n-2012-12-26  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/55539\n-\t* io/write_float.def (output_float): Take into account decimal\n-\tdot.\n-\n-2012-12-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR libfortran/30162\n-\t* io/unix.c (raw_tell):  If the lseek is done on a\n-\tnon-seekable file, return 0.\n-\n-2012-12-20  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/36044\n-\t* gfortran.map: Add _gfortran_backtrace.\n-\t* libgfortran.h: Rename 'show_backtrace' and export.\n-\t* runtime/backtrace.c (show_backtrace): Rename to 'backtrace'.\n-\tDon't show message. Close file descriptor. Export.\n-\t* runtime/compile_options.c (backtrace_handler): Renamed\n-\t'show_backtrace'. Move message outside.\n-\t* runtime/error.c (sys_abort): Ditto.\n-\n-2012-12-19  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\t* intrinsics/extends_type_of.c : Return correct results for\n-\tnull vptrs.\n-\n-2012-12-03  Janus Weil  <janus@gcc.gnu.org>\n-\n-\tPR fortran/55548\n-\t* intrinsics/system_clock.c (gf_gettime_mono): Add argument 'tck',\n-\twhich returns the clock resolution.\n-\t(system_clock_4): Get resolution from gf_gettime_mono, but limit to\n-\t1000/s.\n-\t(system_clock_8): Get resolution from gf_gettime_mono.\n-\n-2012-10-28  Tobias Burnus  <burnus@net-b.de>\n-\n-\t * m4/bessel.m4: Remove useless statement.\n-\t * m4/ifunction.m4: Remove unreachable code.\n-\t * generated/bessel_r10.c: Regenerated.\n-\t * generated/bessel_r16.c: Regenerated.\n-\t * generated/bessel_r4.c: Regenerated.\n-\t * generated/bessel_r8.c: Regenerated.\n-\t * generated/iall_i1.c: Regenerated.\n-\t * generated/iall_i16.c: Regenerated.\n-\t * generated/iall_i2.c: Regenerated.\n-\t * generated/iall_i4.c: Regenerated.\n-\t * generated/iall_i8.c: Regenerated.\n-\t * generated/iany_i1.c: Regenerated.\n-\t * generated/iany_i16.c: Regenerated.\n-\t * generated/iany_i2.c: Regenerated.\n-\t * generated/iany_i4.c: Regenerated.\n-\t * generated/iany_i8.c: Regenerated.\n-\t * generated/iparity_i1.c: Regenerated.\n-\t * generated/iparity_i16.c: Regenerated.\n-\t * generated/iparity_i2.c: Regenerated.\n-\t * generated/iparity_i4.c: Regenerated.\n-\t * generated/iparity_i8.c: Regenerated.\n-\t * generated/maxloc1_16_i1.c: Regenerated.\n-\t * generated/maxloc1_16_i16.c: Regenerated.\n-\t * generated/maxloc1_16_i2.c: Regenerated.\n-\t * generated/maxloc1_16_i4.c: Regenerated.\n-\t * generated/maxloc1_16_i8.c: Regenerated.\n-\t * generated/maxloc1_16_r10.c: Regenerated.\n-\t * generated/maxloc1_16_r16.c: Regenerated.\n-\t * generated/maxloc1_16_r4.c: Regenerated.\n-\t * generated/maxloc1_16_r8.c: Regenerated.\n-\t * generated/maxloc1_4_i1.c: Regenerated.\n-\t * generated/maxloc1_4_i16.c: Regenerated.\n-\t * generated/maxloc1_4_i2.c: Regenerated.\n-\t * generated/maxloc1_4_i4.c: Regenerated.\n-\t * generated/maxloc1_4_i8.c: Regenerated.\n-\t * generated/maxloc1_4_r10.c: Regenerated.\n-\t * generated/maxloc1_4_r16.c: Regenerated.\n-\t * generated/maxloc1_4_r4.c: Regenerated.\n-\t * generated/maxloc1_4_r8.c: Regenerated.\n-\t * generated/maxloc1_8_i1.c: Regenerated.\n-\t * generated/maxloc1_8_i16.c: Regenerated.\n-\t * generated/maxloc1_8_i2.c: Regenerated.\n-\t * generated/maxloc1_8_i4.c: Regenerated.\n-\t * generated/maxloc1_8_i8.c: Regenerated.\n-\t * generated/maxloc1_8_r10.c: Regenerated.\n-\t * generated/maxloc1_8_r16.c: Regenerated.\n-\t * generated/maxloc1_8_r4.c: Regenerated.\n-\t * generated/maxloc1_8_r8.c: Regenerated.\n-\t * generated/maxval_i1.c: Regenerated.\n-\t * generated/maxval_i16.c: Regenerated.\n-\t * generated/maxval_i2.c: Regenerated.\n-\t * generated/maxval_i4.c: Regenerated.\n-\t * generated/maxval_i8.c: Regenerated.\n-\t * generated/maxval_r10.c: Regenerated.\n-\t * generated/maxval_r16.c: Regenerated.\n-\t * generated/maxval_r4.c: Regenerated.\n-\t * generated/maxval_r8.c: Regenerated.\n-\t * generated/minloc1_16_i1.c: Regenerated.\n-\t * generated/minloc1_16_i16.c: Regenerated.\n-\t * generated/minloc1_16_i2.c: Regenerated.\n-\t * generated/minloc1_16_i4.c: Regenerated.\n-\t * generated/minloc1_16_i8.c: Regenerated.\n-\t * generated/minloc1_16_r10.c: Regenerated.\n-\t * generated/minloc1_16_r16.c: Regenerated.\n-\t * generated/minloc1_16_r4.c: Regenerated.\n-\t * generated/minloc1_16_r8.c: Regenerated.\n-\t * generated/minloc1_4_i1.c: Regenerated.\n-\t * generated/minloc1_4_i16.c: Regenerated.\n-\t * generated/minloc1_4_i2.c: Regenerated.\n-\t * generated/minloc1_4_i4.c: Regenerated.\n-\t * generated/minloc1_4_i8.c: Regenerated.\n-\t * generated/minloc1_4_r10.c: Regenerated.\n-\t * generated/minloc1_4_r16.c: Regenerated.\n-\t * generated/minloc1_4_r4.c: Regenerated.\n-\t * generated/minloc1_4_r8.c: Regenerated.\n-\t * generated/minloc1_8_i1.c: Regenerated.\n-\t * generated/minloc1_8_i16.c: Regenerated.\n-\t * generated/minloc1_8_i2.c: Regenerated.\n-\t * generated/minloc1_8_i4.c: Regenerated.\n-\t * generated/minloc1_8_i8.c: Regenerated.\n-\t * generated/minloc1_8_r10.c: Regenerated.\n-\t * generated/minloc1_8_r16.c: Regenerated.\n-\t * generated/minloc1_8_r4.c: Regenerated.\n-\t * generated/minloc1_8_r8.c: Regenerated.\n-\t * generated/minval_i1.c: Regenerated.\n-\t * generated/minval_i16.c: Regenerated.\n-\t * generated/minval_i2.c: Regenerated.\n-\t * generated/minval_i4.c: Regenerated.\n-\t * generated/minval_i8.c: Regenerated.\n-\t * generated/minval_r10.c: Regenerated.\n-\t * generated/minval_r16.c: Regenerated.\n-\t * generated/minval_r4.c: Regenerated.\n-\t * generated/minval_r8.c: Regenerated.\n-\t * generated/product_c10.c: Regenerated.\n-\t * generated/product_c16.c: Regenerated.\n-\t * generated/product_c4.c: Regenerated.\n-\t * generated/product_c8.c: Regenerated.\n-\t * generated/product_i1.c: Regenerated.\n-\t * generated/product_i16.c: Regenerated.\n-\t * generated/product_i2.c: Regenerated.\n-\t * generated/product_i4.c: Regenerated.\n-\t * generated/product_i8.c: Regenerated.\n-\t * generated/product_r10.c: Regenerated.\n-\t * generated/product_r16.c: Regenerated.\n-\t * generated/product_r4.c: Regenerated.\n-\t * generated/product_r8.c: Regenerated.\n-\t * generated/sum_c10.c: Regenerated.\n-\t * generated/sum_c16.c: Regenerated.\n-\t * generated/sum_c4.c: Regenerated.\n-\t * generated/sum_c8.c: Regenerated.\n-\t * generated/sum_i1.c: Regenerated.\n-\t * generated/sum_i16.c: Regenerated.\n-\t * generated/sum_i2.c: Regenerated.\n-\t * generated/sum_i4.c: Regenerated.\n-\t * generated/sum_i8.c: Regenerated.\n-\t * generated/sum_r10.c: Regenerated.\n-\t * generated/sum_r16.c: Regenerated.\n-\t * generated/sum_r4.c: Regenerated.\n-\t * generated/sum_r8.c: Regenerated.\n-\n-2012-10-10  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/54878\n-\t* io/unix.c (tempfile_open): Set umask before calling mkstemp.\n-\n-2012-10-06  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* configure.ac: Check for presence of secure_getenv.\n-\t* libgfortran.h: Use HAVE_SECURE_GETENV.\n-\t* Makefile.in: Regenerated.\n-\t* aclocal.m4: Regenerated.\n-\t* config.h.in: Regenerated.\n-\t* configure: Regenerated.\n-\n-2012-10-06  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR libfortran/54736\n-\t* runtime/environ.c (search_unit):  Correct logic\n-\tfor binary search.\n-\t(mark_single):  Fix index errors.\n-\n-2012-09-29  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n-\n-\tPR fortran/52724\n-\t* list_read.c (next_char):  Handle kind=4 characters.\n-\t* unix.c (open_internal4):  Correct lenth of internal file.\n-\n-2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n-\n-\t* configure: Regenerated.\n-\n-2012-09-05  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\t* config/fpu-387.h (set_fpu): Prefix stmxcsr and ldmxcsr with %v.\n-\n-2012-07-25  Andreas Schwab  <schwab@linux-m68k.org>\n-\n-\t* io/list_read.c (list_formatted_read_scalar): Fix copying real\n-\tvalue back to temporary.\n-\n-2012-06-21  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/39654\n-\t* io/intrinsics.c (ftell2): New function.\n-\t* gfortran.map (_gfortran_ftell2): Export function.\n-\n-2012-06-04  Robert Mason  <rbmj@verizon.net>\n-\t    Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/53456\n-\t* intrinsics/time_1.h (gf_cputime): Fix typo in clock_gettime branch.\n-\n-2012-06-01  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* intrinsics/chmod.c (chmod_func): On MinGW, don't set is_dir and\n-\tfix octal-mode handling.\n-\t* io/unit.c (get_internal_unit): Add cast.\n-\t* io/unix.c (min): Undef \"min\" before defining it.\n-\t* runtime/backtrace.c (show_backtrace): Move label into\n-\tifndef __MINGW__ block.\n-\n-2012-05-31  Benjamin Kosnik  <bkoz@redhat.com>\n-\n-\tPR libstdc++/51007\n-\t* configure.ac: Allow gnu, gnu* variants for --enable-symvers argument.\n-\t* configure: Regenerated.\n-\n-2012-05-31  Tobias Burnus  <burnus@net-b.de>\n-\n-\tRevert:\n-\t2012-05-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* io/unix.c (tempfile_open): Pass mode to \"open\" for O_CREAT.\n-\n-2012-05-30  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* io/io.h: Fix comment typos.\n-\t* io/list_read.c: Ditto.\n-\n-2012-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* intrinsics/time_1.h (gf_cputime): Don't reevaluate HZ expression\n-\tfor times fallback, clarify operation ordering for times and clock\n-\tfallbacks.\n-\t(gf_gettime): Fix comment typo.\n-\n-2012-05-24  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/53456\n-\t* intrinsics/time_1.h (gf_cputime): Fallback for clock_gettime.\n-\n-2012-05-23  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/53456\n-\t* intrinsics/time_1.h (gf_gettime): Fallback for clock_gettime.\n-\n-2012-05-23  Robert Mason  <rbmj@verizon.net>\n-\t    Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR libfortran/53445\n-\t* intrinsics/chmod.c (chmod_func): Ignore S_ISVTX on VxWorks.\n-\n-2012-05-23  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR libfortran/53444\n-\t* acinclude.m4 (LIBGFOR_CHECK_STRERROR_R): Add configure checks for\n-\ttwo- and three-argument versions of strerror_r.\n-\t* configure.ac (LIBGFOR_CHECK_STRERROR_R): Use it.\n-\t* runtime/error.c (gf_strerror): Handle two-argument version\n-\tof strerror_r.\n-\t* config.h.in: Regenerate.\n-\t* configure: Regenerate.\n-\n-2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* configure: Regenerated.\n-\n-2012-05-16  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* io/unix.c (tempfile_open): Pass mode to \"open\" for O_CREAT.\n-\n-2012-05-14  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/52428\n-\t* io/io.h (max_value): Rename to si_max, remove second argument.\n-\t* io/list_read.c (convert_integer): Use unsigned types when\n-\tparsing the digits, set max value depending on the sign.\n-\t* io/read.c (max_value): Rename to si_max, remove second argument,\n-\tsimplify.\n-\t(read_decimal): Set max value depending on sign, always check\n-\toverflow.\n-\t(read_radix): Calculate max unsigned value directly.\n-\t* libgfortran.h (struct compile_options_t): Remove range_check\n-\tfield.\n-\t* runtime/compile_options.c (set_options): Skip handling\n-\toptions[7].\n-\t(init_compile_options): Don't set removed field.\n-\n-2012-05-11  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53310\n-\t* intrinsics/eoshift2.c (eoshift2): Do not leak\n-\tmemory by allocating it in the loop.\n-\n-2012-05-05  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* config.h.in: Regenerated.\n-\t* configure: Regenerated.\n-\t* configure.ac: Add checks for getegid and __secure_getenv.\n-\t* io/unix.c (P_tmpdir): Fallback definition for macro.\n-\t(tempfile_open): New function.\n-\t(tempfile): Use secure_getenv, call tempfile_open to try each\n-\tdirectory in turn.\n-\t* libgfortran.h (DEFAULT_TMPDIR): Remove macro.\n-\t(secure_getenv): New macro/prototype.\n-\t* runtime/environ.c (secure_getenv): New function.\n-\t(variable_table): Rename GFORTRAN_TMPDIR to TMPDIR.\n-\t* runtime/main.c (find_addr2line): Use secure_getenv.\n-\n-2012-04-22  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/53051\n-\t* io/list_read.c (parse_real): Support \"q\" for the\n-\texponential.\n-\t* io/read.c (read_f): Ditto.\n-\n-2012-04-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR libfortran/38199\n-\tPR libfortran/50673\n-\t* io/unit.c (get_internal_unit): Properly check for the presence\n-\tof the format string.\n-\n-2012-04-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\n-\tPR libfortran/38199\n-\tPR libfortran/50673\n-\t* intrinsics/string_intriniscs_inc.c (string_len_trim):\n-\tRemove prototypes for string_len_trim and move to...\n-\t* libgfortran.h (string_len_trim): ... here and\n-\t(string_len_trim_char4): ...here.\n-\t* io/unit.c: For non-array internal arrays where we do reading,\n-\tadjust the record length to the last non-blank character.\n-\t* io/unix.c:  Fix typo.\n-\n-2012-04-10  Michael Matz  <matz@suse.de>\n-\n-\t* m4/cshift0.m4 (cshift0_'rtype_code`): Guard use of modulo.\n-\n-\t* generated/cshift0_c10.c: Regenerated.\n-\t* generated/cshift0_c16.c: Regenerated.\n-\t* generated/cshift0_c4.c: Regenerated.\n-\t* generated/cshift0_c8.c: Regenerated.\n-\t* generated/cshift0_i16.c: Regenerated.\n-\t* generated/cshift0_i1.c: Regenerated.\n-\t* generated/cshift0_i2.c: Regenerated.\n-\t* generated/cshift0_i4.c: Regenerated.\n-\t* generated/cshift0_i8.c: Regenerated.\n-\t* generated/cshift0_r10.c: Regenerated.\n-\t* generated/cshift0_r16.c: Regenerated.\n-\t* generated/cshift0_r4.c: Regenerated.\n-\t* generated/cshift0_r8.c: Regenerated.\n-\n-2012-04-04  Tristan Gingold  <gingold@adacore.com>\n-\n-\t* libgfortran.h: Include complex.h before math.h\n-\n-2012-04-02  Tristan Gingold  <gingold@adacore.com>\n-\n-\t* configure.ac: Use new version of GCC_CHECK_MATH_FUNC.\n-\t* configure: Regenerate\n-\t* config.h.in: Regenerate.\n-\n-2012-03-30  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\tPR libgfortran/52758\n-\t* intrinsics/chmod.c (chmod_func): Remove out-of-bounds\n-\tinitialization of rwxXstugo.\n-\n-2012-03-27  Tristan Gingold  <gingold@adacore.com>\n-\n-\t* configure.ac: Add description to AC_DEFINE in\n-\tGCC_CHECK_MATH_FUNC.\n-\t* configure: Regenerate\n-\t* config.h.in: Regenerate.\n-\n-2012-03-26  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* runtime/memory.c (get_mem): Rename to xmalloc, check for zero\n-\tsize.\n-\t(internal_malloc_size): Remove.\n-\t* libgfortran.h (get_mem): Rename to xmalloc.\n-\t(internal_malloc_size): Remove prototype.\n-\t* Makefile.am (i_iall_c): Fix dependency.\n-\t(i_iany_c): Likewise.\n-\t(i_iparity_c): Likewise.\n-\t(i_norm2_c): Likewise.\n-\t(i_parity_c): Likewise.\n-\t* Makefile.in: Regenerated.\n-\t* m4/parity.m4: Fix typo in comment.\n-\t* generated/all_l1.c: Regenerated.\n-\t* generated/all_l16.c: Regenerated.\n-\t* generated/all_l2.c: Regenerated.\n-\t* generated/all_l4.c: Regenerated.\n-\t* generated/all_l8.c: Regenerated.\n-\t* generated/any_l1.c: Regenerated.\n-\t* generated/any_l16.c: Regenerated.\n-\t* generated/any_l2.c: Regenerated.\n-\t* generated/any_l4.c: Regenerated.\n-\t* generated/any_l8.c: Regenerated.\n-\t* generated/bessel_r10.c: Regenerated.\n-\t* generated/bessel_r16.c: Regenerated.\n-\t* generated/bessel_r4.c: Regenerated.\n-\t* generated/bessel_r8.c: Regenerated.\n-\t* generated/count_16_l.c: Regenerated.\n-\t* generated/count_1_l.c: Regenerated.\n-\t* generated/count_2_l.c: Regenerated.\n-\t* generated/count_4_l.c: Regenerated.\n-\t* generated/count_8_l.c: Regenerated.\n-\t* generated/cshift1_16.c: Regenerated.\n-\t* generated/cshift1_4.c: Regenerated.\n-\t* generated/cshift1_8.c: Regenerated.\n-\t* generated/eoshift1_16.c: Regenerated.\n-\t* generated/eoshift1_4.c: Regenerated.\n-\t* generated/eoshift1_8.c: Regenerated.\n-\t* generated/eoshift3_16.c: Regenerated.\n-\t* generated/eoshift3_4.c: Regenerated.\n-\t* generated/eoshift3_8.c: Regenerated.\n-\t* generated/iall_i1.c: Regenerated.\n-\t* generated/iall_i16.c: Regenerated.\n-\t* generated/iall_i2.c: Regenerated.\n-\t* generated/iall_i4.c: Regenerated.\n-\t* generated/iall_i8.c: Regenerated.\n-\t* generated/iany_i1.c: Regenerated.\n-\t* generated/iany_i16.c: Regenerated.\n-\t* generated/iany_i2.c: Regenerated.\n-\t* generated/iany_i4.c: Regenerated.\n-\t* generated/iany_i8.c: Regenerated.\n-\t* generated/in_pack_c10.c: Regenerated.\n-\t* generated/in_pack_c16.c: Regenerated.\n-\t* generated/in_pack_c4.c: Regenerated.\n-\t* generated/in_pack_c8.c: Regenerated.\n-\t* generated/in_pack_i1.c: Regenerated.\n-\t* generated/in_pack_i16.c: Regenerated.\n-\t* generated/in_pack_i2.c: Regenerated.\n-\t* generated/in_pack_i4.c: Regenerated.\n-\t* generated/in_pack_i8.c: Regenerated.\n-\t* generated/in_pack_r10.c: Regenerated.\n-\t* generated/in_pack_r16.c: Regenerated.\n-\t* generated/in_pack_r4.c: Regenerated.\n-\t* generated/in_pack_r8.c: Regenerated.\n-\t* generated/iparity_i1.c: Regenerated.\n-\t* generated/iparity_i16.c: Regenerated.\n-\t* generated/iparity_i2.c: Regenerated.\n-\t* generated/iparity_i4.c: Regenerated.\n-\t* generated/iparity_i8.c: Regenerated.\n-\t* generated/matmul_c10.c: Regenerated.\n-\t* generated/matmul_c16.c: Regenerated.\n-\t* generated/matmul_c4.c: Regenerated.\n-\t* generated/matmul_c8.c: Regenerated.\n-\t* generated/matmul_i1.c: Regenerated.\n-\t* generated/matmul_i16.c: Regenerated.\n-\t* generated/matmul_i2.c: Regenerated.\n-\t* generated/matmul_i4.c: Regenerated.\n-\t* generated/matmul_i8.c: Regenerated.\n-\t* generated/matmul_l16.c: Regenerated.\n-\t* generated/matmul_l4.c: Regenerated.\n-\t* generated/matmul_l8.c: Regenerated.\n-\t* generated/matmul_r10.c: Regenerated.\n-\t* generated/matmul_r16.c: Regenerated.\n-\t* generated/matmul_r4.c: Regenerated.\n-\t* generated/matmul_r8.c: Regenerated.\n-\t* generated/maxloc0_16_i1.c: Regenerated.\n-\t* generated/maxloc0_16_i16.c: Regenerated.\n-\t* generated/maxloc0_16_i2.c: Regenerated.\n-\t* generated/maxloc0_16_i4.c: Regenerated.\n-\t* generated/maxloc0_16_i8.c: Regenerated.\n-\t* generated/maxloc0_16_r10.c: Regenerated.\n-\t* generated/maxloc0_16_r16.c: Regenerated.\n-\t* generated/maxloc0_16_r4.c: Regenerated.\n-\t* generated/maxloc0_16_r8.c: Regenerated.\n-\t* generated/maxloc0_4_i1.c: Regenerated.\n-\t* generated/maxloc0_4_i16.c: Regenerated.\n-\t* generated/maxloc0_4_i2.c: Regenerated.\n-\t* generated/maxloc0_4_i4.c: Regenerated.\n-\t* generated/maxloc0_4_i8.c: Regenerated.\n-\t* generated/maxloc0_4_r10.c: Regenerated.\n-\t* generated/maxloc0_4_r16.c: Regenerated.\n-\t* generated/maxloc0_4_r4.c: Regenerated.\n-\t* generated/maxloc0_4_r8.c: Regenerated.\n-\t* generated/maxloc0_8_i1.c: Regenerated.\n-\t* generated/maxloc0_8_i16.c: Regenerated.\n-\t* generated/maxloc0_8_i2.c: Regenerated.\n-\t* generated/maxloc0_8_i4.c: Regenerated.\n-\t* generated/maxloc0_8_i8.c: Regenerated.\n-\t* generated/maxloc0_8_r10.c: Regenerated.\n-\t* generated/maxloc0_8_r16.c: Regenerated.\n-\t* generated/maxloc0_8_r4.c: Regenerated.\n-\t* generated/maxloc0_8_r8.c: Regenerated.\n-\t* generated/maxloc1_16_i1.c: Regenerated.\n-\t* generated/maxloc1_16_i16.c: Regenerated.\n-\t* generated/maxloc1_16_i2.c: Regenerated.\n-\t* generated/maxloc1_16_i4.c: Regenerated.\n-\t* generated/maxloc1_16_i8.c: Regenerated.\n-\t* generated/maxloc1_16_r10.c: Regenerated.\n-\t* generated/maxloc1_16_r16.c: Regenerated.\n-\t* generated/maxloc1_16_r4.c: Regenerated.\n-\t* generated/maxloc1_16_r8.c: Regenerated.\n-\t* generated/maxloc1_4_i1.c: Regenerated.\n-\t* generated/maxloc1_4_i16.c: Regenerated.\n-\t* generated/maxloc1_4_i2.c: Regenerated.\n-\t* generated/maxloc1_4_i4.c: Regenerated.\n-\t* generated/maxloc1_4_i8.c: Regenerated.\n-\t* generated/maxloc1_4_r10.c: Regenerated.\n-\t* generated/maxloc1_4_r16.c: Regenerated.\n-\t* generated/maxloc1_4_r4.c: Regenerated.\n-\t* generated/maxloc1_4_r8.c: Regenerated.\n-\t* generated/maxloc1_8_i1.c: Regenerated.\n-\t* generated/maxloc1_8_i16.c: Regenerated.\n-\t* generated/maxloc1_8_i2.c: Regenerated.\n-\t* generated/maxloc1_8_i4.c: Regenerated.\n-\t* generated/maxloc1_8_i8.c: Regenerated.\n-\t* generated/maxloc1_8_r10.c: Regenerated.\n-\t* generated/maxloc1_8_r16.c: Regenerated.\n-\t* generated/maxloc1_8_r4.c: Regenerated.\n-\t* generated/maxloc1_8_r8.c: Regenerated.\n-\t* generated/maxval_i1.c: Regenerated.\n-\t* generated/maxval_i16.c: Regenerated.\n-\t* generated/maxval_i2.c: Regenerated.\n-\t* generated/maxval_i4.c: Regenerated.\n-\t* generated/maxval_i8.c: Regenerated.\n-\t* generated/maxval_r10.c: Regenerated.\n-\t* generated/maxval_r16.c: Regenerated.\n-\t* generated/maxval_r4.c: Regenerated.\n-\t* generated/maxval_r8.c: Regenerated.\n-\t* generated/minloc0_16_i1.c: Regenerated.\n-\t* generated/minloc0_16_i16.c: Regenerated.\n-\t* generated/minloc0_16_i2.c: Regenerated.\n-\t* generated/minloc0_16_i4.c: Regenerated.\n-\t* generated/minloc0_16_i8.c: Regenerated.\n-\t* generated/minloc0_16_r10.c: Regenerated.\n-\t* generated/minloc0_16_r16.c: Regenerated.\n-\t* generated/minloc0_16_r4.c: Regenerated.\n-\t* generated/minloc0_16_r8.c: Regenerated.\n-\t* generated/minloc0_4_i1.c: Regenerated.\n-\t* generated/minloc0_4_i16.c: Regenerated.\n-\t* generated/minloc0_4_i2.c: Regenerated.\n-\t* generated/minloc0_4_i4.c: Regenerated.\n-\t* generated/minloc0_4_i8.c: Regenerated.\n-\t* generated/minloc0_4_r10.c: Regenerated.\n-\t* generated/minloc0_4_r16.c: Regenerated.\n-\t* generated/minloc0_4_r4.c: Regenerated.\n-\t* generated/minloc0_4_r8.c: Regenerated.\n-\t* generated/minloc0_8_i1.c: Regenerated.\n-\t* generated/minloc0_8_i16.c: Regenerated.\n-\t* generated/minloc0_8_i2.c: Regenerated.\n-\t* generated/minloc0_8_i4.c: Regenerated.\n-\t* generated/minloc0_8_i8.c: Regenerated.\n-\t* generated/minloc0_8_r10.c: Regenerated.\n-\t* generated/minloc0_8_r16.c: Regenerated.\n-\t* generated/minloc0_8_r4.c: Regenerated.\n-\t* generated/minloc0_8_r8.c: Regenerated.\n-\t* generated/minloc1_16_i1.c: Regenerated.\n-\t* generated/minloc1_16_i16.c: Regenerated.\n-\t* generated/minloc1_16_i2.c: Regenerated.\n-\t* generated/minloc1_16_i4.c: Regenerated.\n-\t* generated/minloc1_16_i8.c: Regenerated.\n-\t* generated/minloc1_16_r10.c: Regenerated.\n-\t* generated/minloc1_16_r16.c: Regenerated.\n-\t* generated/minloc1_16_r4.c: Regenerated.\n-\t* generated/minloc1_16_r8.c: Regenerated.\n-\t* generated/minloc1_4_i1.c: Regenerated.\n-\t* generated/minloc1_4_i16.c: Regenerated.\n-\t* generated/minloc1_4_i2.c: Regenerated.\n-\t* generated/minloc1_4_i4.c: Regenerated.\n-\t* generated/minloc1_4_i8.c: Regenerated.\n-\t* generated/minloc1_4_r10.c: Regenerated.\n-\t* generated/minloc1_4_r16.c: Regenerated.\n-\t* generated/minloc1_4_r4.c: Regenerated.\n-\t* generated/minloc1_4_r8.c: Regenerated.\n-\t* generated/minloc1_8_i1.c: Regenerated.\n-\t* generated/minloc1_8_i16.c: Regenerated.\n-\t* generated/minloc1_8_i2.c: Regenerated.\n-\t* generated/minloc1_8_i4.c: Regenerated.\n-\t* generated/minloc1_8_i8.c: Regenerated.\n-\t* generated/minloc1_8_r10.c: Regenerated.\n-\t* generated/minloc1_8_r16.c: Regenerated.\n-\t* generated/minloc1_8_r4.c: Regenerated.\n-\t* generated/minloc1_8_r8.c: Regenerated.\n-\t* generated/minval_i1.c: Regenerated.\n-\t* generated/minval_i16.c: Regenerated.\n-\t* generated/minval_i2.c: Regenerated.\n-\t* generated/minval_i4.c: Regenerated.\n-\t* generated/minval_i8.c: Regenerated.\n-\t* generated/minval_r10.c: Regenerated.\n-\t* generated/minval_r16.c: Regenerated.\n-\t* generated/minval_r4.c: Regenerated.\n-\t* generated/minval_r8.c: Regenerated.\n-\t* generated/norm2_r10.c: Regenerated.\n-\t* generated/norm2_r16.c: Regenerated.\n-\t* generated/norm2_r4.c: Regenerated.\n-\t* generated/norm2_r8.c: Regenerated.\n-\t* generated/pack_c10.c: Regenerated.\n-\t* generated/pack_c16.c: Regenerated.\n-\t* generated/pack_c4.c: Regenerated.\n-\t* generated/pack_c8.c: Regenerated.\n-\t* generated/pack_i1.c: Regenerated.\n-\t* generated/pack_i16.c: Regenerated.\n-\t* generated/pack_i2.c: Regenerated.\n-\t* generated/pack_i4.c: Regenerated.\n-\t* generated/pack_i8.c: Regenerated.\n-\t* generated/pack_r10.c: Regenerated.\n-\t* generated/pack_r16.c: Regenerated.\n-\t* generated/pack_r4.c: Regenerated.\n-\t* generated/pack_r8.c: Regenerated.\n-\t* generated/parity_l1.c: Regenerated.\n-\t* generated/parity_l16.c: Regenerated.\n-\t* generated/parity_l2.c: Regenerated.\n-\t* generated/parity_l4.c: Regenerated.\n-\t* generated/parity_l8.c: Regenerated.\n-\t* generated/product_c10.c: Regenerated.\n-\t* generated/product_c16.c: Regenerated.\n-\t* generated/product_c4.c: Regenerated.\n-\t* generated/product_c8.c: Regenerated.\n-\t* generated/product_i1.c: Regenerated.\n-\t* generated/product_i16.c: Regenerated.\n-\t* generated/product_i2.c: Regenerated.\n-\t* generated/product_i4.c: Regenerated.\n-\t* generated/product_i8.c: Regenerated.\n-\t* generated/product_r10.c: Regenerated.\n-\t* generated/product_r16.c: Regenerated.\n-\t* generated/product_r4.c: Regenerated.\n-\t* generated/product_r8.c: Regenerated.\n-\t* generated/reshape_c10.c: Regenerated.\n-\t* generated/reshape_c16.c: Regenerated.\n-\t* generated/reshape_c4.c: Regenerated.\n-\t* generated/reshape_c8.c: Regenerated.\n-\t* generated/reshape_i16.c: Regenerated.\n-\t* generated/reshape_i4.c: Regenerated.\n-\t* generated/reshape_i8.c: Regenerated.\n-\t* generated/reshape_r10.c: Regenerated.\n-\t* generated/reshape_r16.c: Regenerated.\n-\t* generated/reshape_r4.c: Regenerated.\n-\t* generated/reshape_r8.c: Regenerated.\n-\t* generated/shape_i16.c: Regenerated.\n-\t* generated/shape_i4.c: Regenerated.\n-\t* generated/shape_i8.c: Regenerated.\n-\t* generated/spread_c10.c: Regenerated.\n-\t* generated/spread_c16.c: Regenerated.\n-\t* generated/spread_c4.c: Regenerated.\n-\t* generated/spread_c8.c: Regenerated.\n-\t* generated/spread_i1.c: Regenerated.\n-\t* generated/spread_i16.c: Regenerated.\n-\t* generated/spread_i2.c: Regenerated.\n-\t* generated/spread_i4.c: Regenerated.\n-\t* generated/spread_i8.c: Regenerated.\n-\t* generated/spread_r10.c: Regenerated.\n-\t* generated/spread_r16.c: Regenerated.\n-\t* generated/spread_r4.c: Regenerated.\n-\t* generated/spread_r8.c: Regenerated.\n-\t* generated/sum_c10.c: Regenerated.\n-\t* generated/sum_c16.c: Regenerated.\n-\t* generated/sum_c4.c: Regenerated.\n-\t* generated/sum_c8.c: Regenerated.\n-\t* generated/sum_i1.c: Regenerated.\n-\t* generated/sum_i16.c: Regenerated.\n-\t* generated/sum_i2.c: Regenerated.\n-\t* generated/sum_i4.c: Regenerated.\n-\t* generated/sum_i8.c: Regenerated.\n-\t* generated/sum_r10.c: Regenerated.\n-\t* generated/sum_r16.c: Regenerated.\n-\t* generated/sum_r4.c: Regenerated.\n-\t* generated/sum_r8.c: Regenerated.\n-\t* generated/transpose_c10.c: Regenerated.\n-\t* generated/transpose_c16.c: Regenerated.\n-\t* generated/transpose_c4.c: Regenerated.\n-\t* generated/transpose_c8.c: Regenerated.\n-\t* generated/transpose_i16.c: Regenerated.\n-\t* generated/transpose_i4.c: Regenerated.\n-\t* generated/transpose_i8.c: Regenerated.\n-\t* generated/transpose_r10.c: Regenerated.\n-\t* generated/transpose_r16.c: Regenerated.\n-\t* generated/transpose_r4.c: Regenerated.\n-\t* generated/transpose_r8.c: Regenerated.\n-\t* generated/unpack_c10.c: Regenerated.\n-\t* generated/unpack_c16.c: Regenerated.\n-\t* generated/unpack_c4.c: Regenerated.\n-\t* generated/unpack_c8.c: Regenerated.\n-\t* generated/unpack_i1.c: Regenerated.\n-\t* generated/unpack_i16.c: Regenerated.\n-\t* generated/unpack_i2.c: Regenerated.\n-\t* generated/unpack_i4.c: Regenerated.\n-\t* generated/unpack_i8.c: Regenerated.\n-\t* generated/unpack_r10.c: Regenerated.\n-\t* generated/unpack_r16.c: Regenerated.\n-\t* generated/unpack_r4.c: Regenerated.\n-\t* generated/unpack_r8.c: Regenerated.\n-\t* intrinsics/cshift0.c: Use xmalloc.\n-\t* intrinsics/ctime.c: Likewise.\n-\t* intrinsics/date_and_time.c: Likewise.\n-\t* intrinsics/eoshift0.c: Likewise.\n-\t* intrinsics/eoshift2.c: Likewise.\n-\t* intrinsics/getlog.c: Likewise.\n-\t* intrinsics/pack_generic.c: Likewise.\n-\t* intrinsics/reshape_generic.c: Likewise.\n-\t* intrinsics/spread_generic.c: Likewise.\n-\t* intrinsics/string_intrinsics_inc.c: Likewise.\n-\t* intrinsics/transpose_generic.c: Likewise.\n-\t* intrinsics/unpack_generic.c: Likewise.\n-\t* io/fbuf.c: Likewise.\n-\t* io/format.c: Likewise.\n-\t* io/intrinsics.c: Likewise.\n-\t* io/list_read.c: Likewise.\n-\t* io/open.c: Likewise.\n-\t* io/transfer.c: Likewise.\n-\t* io/unit.c: Likewise.\n-\t* io/unix.c: Likewise.\n-\t* io/write.c: Likewise.\n-\t* m4/bessel.m4: Likewise.\n-\t* m4/cshift1.m4: Likewise.\n-\t* m4/eoshift1.m4: Likewise.\n-\t* m4/eoshift3.m4: Likewise.\n-\t* m4/iforeach.m4: Likewise.\n-\t* m4/ifunction.m4: Likewise.\n-\t* m4/ifunction_logical.m4: Likewise.\n-\t* m4/in_pack.m4: Likewise.\n-\t* m4/matmul.m4: Likewise.\n-\t* m4/matmull.m4: Likewise.\n-\t* m4/pack.m4: Likewise.\n-\t* m4/reshape.m4: Likewise.\n-\t* m4/shape.m4: Likewise.\n-\t* m4/spread.m4: Likewise.\n-\t* m4/transpose.m4: Likewise.\n-\t* m4/unpack.m4: Likewise.\n-\t* runtime/convert_char.c: Likewise.\n-\t* runtime/environ.c: Likewise.\n-\t* runtime/in_pack_generic.c: Likewise.\n-\n-2012-03-26  Tristan Gingold  <gingold@adacore.com>\n-\n-\t* configure.ac: Use GCC_CHECK_MATH_FUNC for math functions.\n-\t* acinclude.m4: Include ../config/math.m4\n-\t* configure: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\n-2012-03-25  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* runtime/memory.c (xcalloc): New function.\n-\t* libgfortran.h (xcalloc): New prototype.\n-\t* io/list_read.c (push_char): Use xcalloc instead of get_mem and\n-\tmemset.\n-\t(l_push_char): Likewise.\n-\t* io/unit.c (insert_unit): Likewise.\n-\t(get_internal_unit): Likewise.\n-\t* io/unix.c (open_internal): Likewise.\n-\t(open_internal4): Likewise.\n-\t(fd_to_stream): Likewise.\n-\n-2012-03-17  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR libfortran/52608\n-\t* io/write_float.def (output_float): Move removal of initial zeros\n-\tuntil after the scale factor has been applied.\n-\n-2012-03-16  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* io/unix.h (struct stream): Rename to stream_vtable.\n-\t(struct stream): New struct definition.\n-\t(sread): Dereference vtable pointer.\n-\t(swrite): Likewise.\n-\t(sseek): Likewise.\n-\t(struncate): Likewise.\n-\t(sflush): Likewise.\n-\t(sclose): Likewise.\n-\t* io/unix.c (raw_vtable): New variable.\n-\t(buf_vtable): Likewise.\n-\t(mem_vtable): Likewise.\n-\t(mem4_vtable): Likewise.\n-\t(raw_init): Assign vtable pointer.\n-\t(buf_init): Likewise.\n-\t(open_internal): Likewise.\n-\t(open_internal4): Likewise.\n-\n-2012-03-15  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR libfortran/52434\n-\tPR libfortran/48878\n-\tPR libfortran/38199\n-\t* io/unit.c (get_internal_unit): Default to ROUND_UNSPECIFIED.\n-\t(init_units): Likewise.\n-\t* io/write_float.def (determine_precision): New function.\n-\t(output_float): Take into account buffer with %f format, no need\n-\tfor our own rounding if unspecified or processor specified\n-\trounding.\n-\t(DTOA): Simplify format string, add parameters.\n-\t(FDTOA): New macros similar to DTOA, but using %f format.\n-\t(OUTPUT_FLOAT_FMT_G): Stack allocate newf, determine correct\n-\tprecision and fill buffer.\n-\t(EN_PREC): New macro.\n-\t(determine_en_precision): New function.\n-\t(WRITE_FLOAT): For G format, move buffer filling into\n-\toutput_float_FMT_G, use FDTOA for F format.\n-\t(write_float): Increase buffer due to F format.\n-\n-2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* intrinsics/c99_functions.c [__sgi__ && !HAVE_COMPLEX_H]: Remove.\n-\n-2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* configure.ac: Remove Tru64 reference.\n-\t* acinclude.m4 (LIBGFOR_GTHREAD_WEAK): Remove alpha*-dec-osf*\n-\thandling.\n-\t* configure: Regenerate.\n-\t* intrinsics/c99_functions.c [__osf__]: Remove.\n-\n-2012-03-10  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* libgfortran.h (descriptor_dimension, GFC_DIMENSION_LBOUND,\n-\tGFC_DIMENSION_EXTENT, GFC_DIMENSION_SET, GFC_DESCRIPTOR_DATA,\n-\tGFC_ARRAY_DESCRIPTOR): Rename _lbound to lower_bound and\n-\tdata to base_addr.\n-\t* intrinsics/cshift0.c (size0, cshift0): Handle data to\n-\tbase_addr rename.\n-\t* intrinsics/date_and_time.c (date_and_time, secnds, itime_i4,\n-\titime_i8, gmtime_i4, gmtime_i8, ltime_i4, ltime_i8): Ditto.\n-\t* intrinsics/dtime.c (dtime_sub): Ditto.\n-\t* intrinsics/eoshift0.c (eoshift0): Ditto.\n-\t* intrinsics/eoshift2.c (eoshift2): Ditto.\n-\t* intrinsics/etime.c (etime_sub): Ditto.\n-\t* intrinsics/iso_c_binding.c (c_f_pointer_u0): Ditto.\n-\t* intrinsics/move_alloc.c (move_alloc): Ditto.\n-\t* intrinsics/pack_generic.c (pack_internal, pack,\n-\tpack_s_internal): Ditto.\n-\t* intrinsics/random.c (arandom_r4, arandom_r8, arandom_r10,\n-\tarandom_r16, random_seed_i4, random_seed_i8): Ditto.\n-\t* intrinsics/reshape_generic.c (reshape_internal): Ditto.\n-\t* intrinsics/spread_generic.c (spread_internal,\n-\tspread_internal_scalar, spread, spread_scalar): Ditto.\n-\t* intrinsics/stat.c (stat_i4_sub_0, stat_i8_sub_0, fstat_i4_sub,\n-\tfstat_i8_sub): Ditto.\n-\t* intrinsics/transpose_generic.c (transpose_internal): Ditto.\n-\t* intrinsics/unpack_generic.c (unpack_bounds, unpack_internal,\n-\tunpack1, unpack0, unpack0_char4): Ditto.\n-\t* m4/bessel.m4 (bessel_jn_r'rtype_kind`, bessel_yn_r'rtype_kind`):\n-\tDitto.\n-\t* m4/cshift0.m4 (cshift0_'rtype_code`): Ditto.\n-\t* m4/cshift1.m4 (cshift1): Ditto.\n-\t* m4/eoshift1.m4 (eoshift1): Ditto.\n-\t* m4/eoshift3.m4 (eoshift3): Ditto.\n-\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code): Ditto.\n-\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code): Ditto.\n-\t* m4/ifunction_logical.m4 (name`'rtype_qual`_'atype_code): Ditto.\n-\t* m4/in_pack.m4 (internal_pack_'rtype_ccode`): Ditto.\n-\t* m4/in_unpack.m4 (internal_unpack_'rtype_ccode`): Ditto.\n-\t* m4/matmul.m4 (matmul_'rtype_code`): Ditto.\n-\t* m4/matmull.m4 (matmul_'rtype_code`): Ditto.\n-\t* m4/pack.m4 (pack_'rtype_code`): Ditto.\n-\t* m4/reshape.m4 (reshape_'rtype_ccode`): Ditto.\n-\t* m4/shape.m4 (shape_'rtype_kind`): Ditto.\n-\t* m4/spread.m4 (spread_'rtype_code`): Ditto.\n-\t* m4/transpose.m4 (transpose_'rtype_code`): Ditto.\n-\t* m4/unpack.m4 (unpack0_'rtype_code`, unpack1_'rtype_code`): Ditto.\n-\t* runtime/bounds.c (count_0): Ditto.\n-\t* runtime/in_pack_generic.c (internal_pack): Ditto.\n-\t* runtime/in_unpack_generic.c (internal_unpack): Ditto.\n-\t* generated/cshift0_r4.c: Regenerated.\n-\t* generated/unpack_r8.c: Regenerated.\n-\t* generated/cshift0_c10.c: Regenerated.\n-\t* generated/in_unpack_i1.c: Regenerated.\n-\t* generated/eoshift1_16.c: Regenerated.\n-\t* generated/iany_i16.c: Regenerated.\n-\t* generated/reshape_i4.c: Regenerated.\n-\t* generated/parity_l16.c: Regenerated.\n-\t* generated/in_unpack_r16.c: Regenerated.\n-\t* generated/iparity_i1.c: Regenerated.\n-\t* generated/minloc0_16_r10.c: Regenerated.\n-\t* generated/minloc1_16_i8.c: Regenerated.\n-\t* generated/bessel_r8.c: Regenerated.\n-\t* generated/maxloc0_4_i8.c: Regenerated.\n-\t* generated/maxloc1_8_i1.c: Regenerated.\n-\t* generated/sum_c10.c: Regenerated.\n-\t* generated/maxloc0_8_r10.c: Regenerated.\n-\t* generated/unpack_r16.c: Regenerated.\n-\t* generated/maxloc1_16_i1.c: Regenerated.\n-\t* generated/minloc1_4_i1.c: Regenerated.\n-\t* generated/unpack_i4.c: Regenerated.\n-\t* generated/in_pack_i1.c: Regenerated.\n-\t* generated/cshift0_i1.c: Regenerated.\n-\t* generated/minloc0_16_i4.c: Regenerated.\n-\t* generated/minloc1_8_r8.c: Regenerated.\n-\t* generated/maxval_r8.c: Regenerated.\n-\t* generated/unpack_i2.c: Regenerated.\n-\t* generated/matmul_r16.c: Regenerated.\n-\t* generated/maxloc0_16_r8.c: Regenerated.\n-\t* generated/maxloc1_8_i16.c: Regenerated.\n-\t* generated/maxloc0_4_r4.c: Regenerated.\n-\t* generated/pack_c10.c: Regenerated.\n-\t* generated/in_unpack_c8.c: Regenerated.\n-\t* generated/maxloc1_8_i8.c: Regenerated.\n-\t* generated/in_pack_c16.c: Regenerated.\n-\t* generated/parity_l1.c: Regenerated.\n-\t* generated/in_pack_i2.c: Regenerated.\n-\t* generated/maxloc0_4_r8.c: Regenerated.\n-\t* generated/pack_r4.c: Regenerated.\n-\t* generated/matmul_r8.c: Regenerated.\n-\t* generated/pack_i1.c: Regenerated.\n-\t* generated/minloc0_16_r16.c: Regenerated.\n-\t* generated/cshift0_c8.c: Regenerated.\n-\t* generated/minloc1_4_i16.c: Regenerated.\n-\t* generated/minloc0_4_r4.c: Regenerated.\n-\t* generated/product_i2.c: Regenerated.\n-\t* generated/maxval_r10.c: Regenerated.\n-\t* generated/minloc0_16_r8.c: Regenerated.\n-\t* generated/in_pack_i8.c: Regenerated.\n-\t* generated/all_l8.c: Regenerated.\n-\t* generated/minloc0_8_i16.c: Regenerated.\n-\t* generated/minloc1_8_i2.c: Regenerated.\n-\t* generated/matmul_l8.c: Regenerated.\n-\t* generated/spread_r10.c: Regenerated.\n-\t* generated/product_c4.c: Regenerated.\n-\t* generated/reshape_r16.c: Regenerated.\n-\t* generated/cshift0_i16.c: Regenerated.\n-\t* generated/minloc1_8_r10.c: Regenerated.\n-\t* generated/iparity_i8.c: Regenerated.\n-\t* generated/minloc0_16_i8.c: Regenerated.\n-\t* generated/minloc1_8_i1.c: Regenerated.\n-\t* generated/maxloc0_16_r10.c: Regenerated.\n-\t* generated/maxloc1_8_i4.c: Regenerated.\n-\t* generated/maxloc0_16_i8.c: Regenerated.\n-\t* generated/maxloc1_16_i16.c: Regenerated.\n-\t* generated/reshape_i8.c: Regenerated.\n-\t* generated/all_l16.c: Regenerated.\n-\t* generated/cshift1_8.c: Regenerated.\n-\t* generated/matmul_c10.c: Regenerated.\n-\t* generated/pack_r16.c: Regenerated.\n-\t* generated/transpose_r10.c: Regenerated.\n-\t* generated/maxloc1_16_i2.c: Regenerated.\n-\t* generated/minloc1_4_r4.c: Regenerated.\n-\t* generated/reshape_r8.c: Regenerated.\n-\t* generated/product_r10.c: Regenerated.\n-\t* generated/spread_c10.c: Regenerated.\n-\t* generated/reshape_r4.c: Regenerated.\n-\t* generated/in_unpack_i4.c: Regenerated.\n-\t* generated/minval_r4.c: Regenerated.\n-\t* generated/minloc1_16_r16.c: Regenerated.\n-\t* generated/norm2_r8.c: Regenerated.\n-\t* generated/iany_i2.c: Regenerated.\n-\t* generated/eoshift3_8.c: Regenerated.\n-\t* generated/maxloc1_16_r8.c: Regenerated.\n-\t* generated/maxloc0_16_r16.c: Regenerated.\n-\t* generated/cshift0_i8.c: Regenerated.\n-\t* generated/all_l1.c: Regenerated.\n-\t* generated/minloc1_16_r10.c: Regenerated.\n-\t* generated/spread_i16.c: Regenerated.\n-\t* generated/minloc1_8_r16.c: Regenerated.\n-\t* generated/spread_r16.c: Regenerated.\n-\t* generated/matmul_c8.c: Regenerated.\n-\t* generated/pack_r10.c: Regenerated.\n-\t* generated/reshape_r10.c: Regenerated.\n-\t* generated/sum_r10.c: Regenerated.\n-\t* generated/count_8_l.c: Regenerated.\n-\t* generated/minloc1_16_i16.c: Regenerated.\n-\t* generated/maxloc0_16_i2.c: Regenerated.\n-\t* generated/count_1_l.c: Regenerated.\n-\t* generated/unpack_c16.c: Regenerated.\n-\t* generated/any_l8.c: Regenerated.\n-\t* generated/minloc1_16_i1.c: Regenerated.\n-\t* generated/sum_r4.c: Regenerated.\n-\t* generated/in_unpack_r8.c: Regenerated.\n-\t* generated/product_r8.c: Regenerated.\n-\t* generated/in_unpack_r4.c: Regenerated.\n-\t* generated/unpack_i1.c: Regenerated.\n-\t* generated/cshift0_r8.c: Regenerated.\n-\t* generated/spread_i2.c: Regenerated.\n-\t* generated/minloc1_4_r10.c: Regenerated.\n-\t* generated/minloc1_16_i2.c: Regenerated.\n-\t* generated/minloc0_16_i2.c: Regenerated.\n-\t* generated/eoshift3_16.c: Regenerated.\n-\t* generated/maxloc0_8_i4.c: Regenerated.\n-\t* generated/maxloc1_16_r10.c: Regenerated.\n-\t* generated/maxloc1_4_i16.c: Regenerated.\n-\t* generated/maxloc1_4_r8.c: Regenerated.\n-\t* generated/parity_l2.c: Regenerated.\n-\t* generated/maxloc0_16_i16.c: Regenerated.\n-\t* generated/product_r4.c: Regenerated.\n-\t* generated/in_unpack_r10.c: Regenerated.\n-\t* generated/maxloc1_8_i2.c: Regenerated.\n-\t* generated/iparity_i2.c: Regenerated.\n-\t* generated/maxloc1_8_r4.c: Regenerated.\n-\t* generated/maxloc1_8_r8.c: Regenerated.\n-\t* generated/iall_i4.c: Regenerated.\n-\t* generated/maxloc0_4_i16.c: Regenerated.\n-\t* generated/cshift0_i4.c: Regenerated.\n-\t* generated/in_unpack_c10.c: Regenerated.\n-\t* generated/unpack_c8.c: Regenerated.\n-\t* generated/transpose_c8.c: Regenerated.\n-\t* generated/in_unpack_c16.c: Regenerated.\n-\t* generated/product_c16.c: Regenerated.\n-\t* generated/minval_r8.c: Regenerated.\n-\t* generated/minloc0_4_i1.c: Regenerated.\n-\t* generated/minloc0_8_r16.c: Regenerated.\n-\t* generated/in_unpack_i16.c: Regenerated.\n-\t* generated/reshape_c16.c: Regenerated.\n-\t* generated/pack_i4.c: Regenerated.\n-\t* generated/minval_r10.c: Regenerated.\n-\t* generated/maxloc0_4_r10.c: Regenerated.\n-\t* generated/unpack_i8.c: Regenerated.\n-\t* generated/minloc1_16_r8.c: Regenerated.\n-\t* generated/pack_c16.c: Regenerated.\n-\t* generated/maxval_r4.c: Regenerated.\n-\t* generated/spread_r8.c: Regenerated.\n-\t* generated/minloc0_16_r4.c: Regenerated.\n-\t* generated/maxval_i4.c: Regenerated.\n-\t* generated/matmul_r4.c: Regenerated.\n-\t* generated/product_c8.c: Regenerated.\n-\t* generated/maxloc1_4_i4.c: Regenerated.\n-\t* generated/any_l4.c: Regenerated.\n-\t* generated/cshift0_r16.c: Regenerated.\n-\t* generated/maxloc1_16_r4.c: Regenerated.\n-\t* generated/in_pack_r10.c: Regenerated.\n-\t* generated/iall_i1.c: Regenerated.\n-\t* generated/product_i1.c: Regenerated.\n-\t* generated/maxloc0_4_i1.c: Regenerated.\n-\t* generated/maxloc0_8_r16.c: Regenerated.\n-\t* generated/minloc1_8_i16.c: Regenerated.\n-\t* generated/reshape_c10.c: Regenerated.\n-\t* generated/matmul_l4.c: Regenerated.\n-\t* generated/cshift0_c16.c: Regenerated.\n-\t* generated/spread_r4.c: Regenerated.\n-\t* generated/sum_r16.c: Regenerated.\n-\t* generated/in_unpack_c4.c: Regenerated.\n-\t* generated/maxval_i8.c: Regenerated.\n-\t* generated/maxloc0_8_r8.c: Regenerated.\n-\t* generated/unpack_i16.c: Regenerated.\n-\t* generated/norm2_r4.c: Regenerated.\n-\t* generated/maxloc1_4_r16.c: Regenerated.\n-\t* generated/in_pack_r4.c: Regenerated.\n-\t* generated/sum_c8.c: Regenerated.\n-\t* generated/parity_l8.c: Regenerated.\n-\t* generated/minval_i2.c: Regenerated.\n-\t* generated/transpose_c10.c: Regenerated.\n-\t* generated/cshift0_r10.c: Regenerated.\n-\t* generated/cshift0_i2.c: Regenerated.\n-\t* generated/spread_c4.c: Regenerated.\n-\t* generated/maxval_r16.c: Regenerated.\n-\t* generated/unpack_c10.c: Regenerated.\n-\t* generated/bessel_r4.c: Regenerated.\n-\t* generated/minloc0_8_i1.c: Regenerated.\n-\t* generated/product_c10.c: Regenerated.\n-\t* generated/minloc1_4_i4.c: Regenerated.\n-\t* generated/minloc1_4_i2.c: Regenerated.\n-\t* generated/transpose_c4.c: Regenerated.\n-\t* generated/in_pack_c8.c: Regenerated.\n-\t* generated/minval_i8.c: Regenerated.\n-\t* generated/maxloc1_4_i2.c: Regenerated.\n-\t* generated/maxloc1_4_i1.c: Regenerated.\n-\t* generated/iall_i8.c: Regenerated.\n-\t* generated/iany_i8.c: Regenerated.\n-\t* generated/sum_c16.c: Regenerated.\n-\t* generated/spread_i8.c: Regenerated.\n-\t* generated/sum_i8.c: Regenerated.\n-\t* generated/pack_i2.c: Regenerated.\n-\t* generated/unpack_r10.c: Regenerated.\n-\t* generated/minloc0_4_i4.c: Regenerated.\n-\t* generated/iany_i4.c: Regenerated.\n-\t* generated/maxloc0_4_i4.c: Regenerated.\n-\t* generated/in_pack_r8.c: Regenerated.\n-\t* generated/spread_i1.c: Regenerated.\n-\t* generated/maxval_i16.c: Regenerated.\n-\t* generated/pack_c8.c: Regenerated.\n-\t* generated/iparity_i16.c: Regenerated.\n-\t* generated/matmul_c16.c: Regenerated.\n-\t* generated/eoshift1_8.c: Regenerated.\n-\t* generated/any_l16.c: Regenerated.\n-\t* generated/maxloc1_4_i8.c: Regenerated.\n-\t* generated/minloc0_8_r4.c: Regenerated.\n-\t* generated/transpose_c16.c: Regenerated.\n-\t* generated/reshape_c4.c: Regenerated.\n-\t* generated/minloc0_8_r8.c: Regenerated.\n-\t* generated/count_16_l.c: Regenerated.\n-\t* generated/minloc0_16_i1.c: Regenerated.\n-\t* generated/minloc1_16_r4.c: Regenerated.\n-\t* generated/maxloc0_8_i1.c: Regenerated.\n-\t* generated/matmul_i1.c: Regenerated.\n-\t* generated/sum_i2.c: Regenerated.\n-\t* generated/cshift1_4.c: Regenerated.\n-\t* generated/minloc0_4_i2.c: Regenerated.\n-\t* generated/bessel_r10.c: Regenerated.\n-\t* generated/matmul_c4.c: Regenerated.\n-\t* generated/parity_l4.c: Regenerated.\n-\t* generated/in_unpack_i2.c: Regenerated.\n-\t* generated/product_i16.c: Regenerated.\n-\t* generated/maxloc0_16_i4.c: Regenerated.\n-\t* generated/minloc0_4_r10.c: Regenerated.\n-\t* generated/transpose_i16.c: Regenerated.\n-\t* generated/matmul_l16.c: Regenerated.\n-\t* generated/any_l1.c: Regenerated.\n-\t* generated/minval_r16.c: Regenerated.\n-\t* generated/shape_i16.c: Regenerated.\n-\t* generated/in_pack_c4.c: Regenerated.\n-\t* generated/minloc1_8_r4.c: Regenerated.\n-\t* generated/iany_i1.c: Regenerated.\n-\t* generated/matmul_i16.c: Regenerated.\n-\t* generated/maxloc0_16_r4.c: Regenerated.\n-\t* generated/spread_c8.c: Regenerated.\n-\t* generated/product_i8.c: Regenerated.\n-\t* generated/minloc1_8_i4.c: Regenerated.\n-\t* generated/product_i4.c: Regenerated.\n-\t* generated/minval_i16.c: Regenerated.\n-\t* generated/pack_r8.c: Regenerated.\n-\t* generated/matmul_r10.c: Regenerated.\n-\t* generated/shape_i8.c: Regenerated.\n-\t* generated/eoshift1_4.c: Regenerated.\n-\t* generated/minloc1_16_i4.c: Regenerated.\n-\t* generated/transpose_r16.c: Regenerated.\n-\t* generated/spread_c16.c: Regenerated.\n-\t* generated/maxloc0_8_i16.c: Regenerated.\n-\t* generated/minval_i1.c: Regenerated.\n-\t* generated/sum_i4.c: Regenerated.\n-\t* generated/in_pack_r16.c: Regenerated.\n-\t* generated/iall_i16.c: Regenerated.\n-\t* generated/minloc0_8_r10.c: Regenerated.\n-\t* generated/maxloc0_8_i8.c: Regenerated.\n-\t* generated/transpose_i4.c: Regenerated.\n-\t* generated/maxloc0_4_i2.c: Regenerated.\n-\t* generated/iall_i2.c: Regenerated.\n-\t* generated/maxloc0_8_r4.c: Regenerated.\n-\t* generated/minloc0_4_r16.c: Regenerated.\n-\t* generated/minloc1_4_r8.c: Regenerated.\n-\t* generated/minloc0_4_i8.c: Regenerated.\n-\t* generated/minval_i4.c: Regenerated.\n-\t* generated/minloc1_8_i8.c: Regenerated.\n-\t* generated/in_pack_i16.c: Regenerated.\n-\t* generated/spread_i4.c: Regenerated.\n-\t* generated/cshift0_c4.c: Regenerated.\n-\t* generated/minloc0_4_i16.c: Regenerated.\n-\t* generated/sum_r8.c: Regenerated.\n-\t* generated/minloc0_16_i16.c: Regenerated.\n-\t* generated/sum_i1.c: Regenerated.\n-\t* generated/all_l2.c: Regenerated.\n-\t* generated/sum_c4.c: Regenerated.\n-\t* generated/shape_i4.c: Regenerated.\n-\t* generated/maxval_i1.c: Regenerated.\n-\t* generated/norm2_r10.c: Regenerated.\n-\t* generated/unpack_c4.c: Regenerated.\n-\t* generated/maxloc0_16_i1.c: Regenerated.\n-\t* generated/all_l4.c: Regenerated.\n-\t* generated/maxloc1_16_i8.c: Regenerated.\n-\t* generated/sum_i16.c: Regenerated.\n-\t* generated/maxloc1_8_r16.c: Regenerated.\n-\t* generated/minloc1_4_r16.c: Regenerated.\n-\t* generated/maxloc1_16_r16.c: Regenerated.\n-\t* generated/transpose_i8.c: Regenerated.\n-\t* generated/minloc0_8_i2.c: Regenerated.\n-\t* generated/product_r16.c: Regenerated.\n-\t* generated/in_pack_c10.c: Regenerated.\n-\t* generated/maxloc0_4_r16.c: Regenerated.\n-\t* generated/pack_c4.c: Regenerated.\n-\t* generated/bessel_r16.c: Regenerated.\n-\t* generated/norm2_r16.c: Regenerated.\n-\t* generated/in_unpack_i8.c: Regenerated.\n-\t* generated/maxloc1_16_i4.c: Regenerated.\n-\t* generated/minloc1_4_i8.c: Regenerated.\n-\t* generated/eoshift3_4.c: Regenerated.\n-\t* generated/maxloc1_8_r10.c: Regenerated.\n-\t* generated/matmul_i8.c: Regenerated.\n-\t* generated/matmul_i4.c: Regenerated.\n-\t* generated/reshape_i16.c: Regenerated.\n-\t* generated/matmul_i2.c: Regenerated.\n-\t* generated/transpose_r8.c: Regenerated.\n-\t* generated/transpose_r4.c: Regenerated.\n-\t* generated/cshift1_16.c: Regenerated.\n-\t* generated/maxloc1_4_r10.c: Regenerated.\n-\t* generated/iparity_i4.c: Regenerated.\n-\t* generated/in_pack_i4.c: Regenerated.\n-\t* generated/maxloc0_8_i2.c: Regenerated.\n-\t* generated/unpack_r4.c: Regenerated.\n-\t* generated/count_4_l.c: Regenerated.\n-\t* generated/maxloc1_4_r4.c: Regenerated.\n-\t* generated/minloc0_8_i8.c: Regenerated.\n-\t* generated/any_l2.c: Regenerated.\n-\t* generated/minloc0_8_i4.c: Regenerated.\n-\t* generated/pack_i8.c: Regenerated.\n-\t* generated/count_2_l.c: Regenerated.\n-\t* generated/reshape_c8.c: Regenerated.\n-\t* generated/maxval_i2.c: Regenerated.\n-\t* generated/minloc0_4_r8.c: Regenerated.\n-\n-2012-01-20  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR libgfortran/51899\n-\t* configure.ac: Check whether umask is available.\n-\t* intrinsics/chmod.c (chmod_func): Make compile with MinGW.\n-\t* configure: Regenerate.\n-\t* config.h.in: Regenerate.\n-\n-2012-01-12  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/36755\n-\t* intrinsics/chmod.c (chmod_func): Replace call to /bin/chmod\n-\n-2012-01-12  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* configure.ac: Remove check for fdopen.\n-\t* runtime/backtrace.c (CAN_PIPE): Fix comment, remove check for\n-\tfdopen.\n-\t* configure: Regenerated.\n-\t* config.h.in: Regenerated.\n-\n-2012-01-12  Janne Blomqvist  <jb@gcc.gnu.org>\n-\t    Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR libfortran/51803\n-\t* runtime/main.c (store_exe_path): Avoid malloc if getcwd fails or\n-\tis not available.\n-\n-2012-01-11  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* runtime/main.c (store_exe_path): Fix absolute path\n-\tdetection for Windows.\n-\n-2012-01-11  Janne Blomqvist  <jb@gcc.gnu.org>\n-\t    Mike Stump  <mikestump@comcast.net>\n-\n-\tPR libfortran/51803\n-\t* runtime/main.c (store_exe_path): Handle getcwd failure and lack\n-\tof the function better.\n-\n-2012-01-10  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51197\n-\t* runtime/compile_options.c (show_signal): List\n-\tmore signals.\n-\n-2012-01-09  Harald Anlauf  <anlauf@gmx.de>\n-\t    Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/51197\n-\t* runtime/backtrace.c (show_backtrace): Modify wording written\n-\tbefore the backtrace.\n-\t* runtime/compile_options.c (show_signal): New function.\n-\t(backtrace_handler): Use it.\n-\n-2012-01-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* Makefile.am (libgfortran_la_LDFLAGS): Add -Wc,-shared-libgcc.\n-\t* Makefile.in: Regenerate.\n-\n-2012-01-06  Tobias Burnus <burnus@net-b.de>\n-\n-\t* caf/single.c (_gfortran_caf_register, _gfortran_caf_deregister):\n-\tFix token handling.\n-\t* caf/mpi.c  (_gfortran_caf_register, _gfortran_caf_deregister): Ditto.\n-\t* caf/libcaf.h (STAT_STOPPED_IMAGE): Sync with libgfortran.h.\n-\t(_gfortran_caf_register, _gfortran_caf_deregister): Update prototype.\n \f\n-Copyright (C) 2012 Free Software Foundation, Inc.\n+Copyright (C) 2013 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "fa651f9264c4c3c3c07fcaf71dae125510efc29e", "filename": "libgfortran/ChangeLog-2012", "status": "added", "additions": 1276, "deletions": 0, "changes": 1276, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libgfortran%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libgfortran%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2012?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -0,0 +1,1276 @@\n+2012-12-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/48976\n+\t* io/inquire.c (inquire_via_unit): Set user stream inquiry variable to\n+\tappropriate value based on unit access method. (inquire_via_filename):\n+\tSince filename is not associated with an open unit, set stream inquiry\n+\tto UNKNOWN.\n+\t* io/io.h: Define inquire stream parameters.\n+\n+2012-12-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/48960\n+\t* io/open.c (st_parameter_open):  Assign newunit number to user\n+\tvariable only if the the associated open statement is successful. \n+\n+2012-12-26  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/55539\n+\t* io/write_float.def (output_float): Take into account decimal\n+\tdot.\n+\n+2012-12-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/30162\n+\t* io/unix.c (raw_tell):  If the lseek is done on a\n+\tnon-seekable file, return 0.\n+\n+2012-12-20  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/36044\n+\t* gfortran.map: Add _gfortran_backtrace.\n+\t* libgfortran.h: Rename 'show_backtrace' and export.\n+\t* runtime/backtrace.c (show_backtrace): Rename to 'backtrace'.\n+\tDon't show message. Close file descriptor. Export.\n+\t* runtime/compile_options.c (backtrace_handler): Renamed\n+\t'show_backtrace'. Move message outside.\n+\t* runtime/error.c (sys_abort): Ditto.\n+\n+2012-12-19  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* intrinsics/extends_type_of.c : Return correct results for\n+\tnull vptrs.\n+\n+2012-12-03  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55548\n+\t* intrinsics/system_clock.c (gf_gettime_mono): Add argument 'tck',\n+\twhich returns the clock resolution.\n+\t(system_clock_4): Get resolution from gf_gettime_mono, but limit to\n+\t1000/s.\n+\t(system_clock_8): Get resolution from gf_gettime_mono.\n+\n+2012-10-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\t * m4/bessel.m4: Remove useless statement.\n+\t * m4/ifunction.m4: Remove unreachable code.\n+\t * generated/bessel_r10.c: Regenerated.\n+\t * generated/bessel_r16.c: Regenerated.\n+\t * generated/bessel_r4.c: Regenerated.\n+\t * generated/bessel_r8.c: Regenerated.\n+\t * generated/iall_i1.c: Regenerated.\n+\t * generated/iall_i16.c: Regenerated.\n+\t * generated/iall_i2.c: Regenerated.\n+\t * generated/iall_i4.c: Regenerated.\n+\t * generated/iall_i8.c: Regenerated.\n+\t * generated/iany_i1.c: Regenerated.\n+\t * generated/iany_i16.c: Regenerated.\n+\t * generated/iany_i2.c: Regenerated.\n+\t * generated/iany_i4.c: Regenerated.\n+\t * generated/iany_i8.c: Regenerated.\n+\t * generated/iparity_i1.c: Regenerated.\n+\t * generated/iparity_i16.c: Regenerated.\n+\t * generated/iparity_i2.c: Regenerated.\n+\t * generated/iparity_i4.c: Regenerated.\n+\t * generated/iparity_i8.c: Regenerated.\n+\t * generated/maxloc1_16_i1.c: Regenerated.\n+\t * generated/maxloc1_16_i16.c: Regenerated.\n+\t * generated/maxloc1_16_i2.c: Regenerated.\n+\t * generated/maxloc1_16_i4.c: Regenerated.\n+\t * generated/maxloc1_16_i8.c: Regenerated.\n+\t * generated/maxloc1_16_r10.c: Regenerated.\n+\t * generated/maxloc1_16_r16.c: Regenerated.\n+\t * generated/maxloc1_16_r4.c: Regenerated.\n+\t * generated/maxloc1_16_r8.c: Regenerated.\n+\t * generated/maxloc1_4_i1.c: Regenerated.\n+\t * generated/maxloc1_4_i16.c: Regenerated.\n+\t * generated/maxloc1_4_i2.c: Regenerated.\n+\t * generated/maxloc1_4_i4.c: Regenerated.\n+\t * generated/maxloc1_4_i8.c: Regenerated.\n+\t * generated/maxloc1_4_r10.c: Regenerated.\n+\t * generated/maxloc1_4_r16.c: Regenerated.\n+\t * generated/maxloc1_4_r4.c: Regenerated.\n+\t * generated/maxloc1_4_r8.c: Regenerated.\n+\t * generated/maxloc1_8_i1.c: Regenerated.\n+\t * generated/maxloc1_8_i16.c: Regenerated.\n+\t * generated/maxloc1_8_i2.c: Regenerated.\n+\t * generated/maxloc1_8_i4.c: Regenerated.\n+\t * generated/maxloc1_8_i8.c: Regenerated.\n+\t * generated/maxloc1_8_r10.c: Regenerated.\n+\t * generated/maxloc1_8_r16.c: Regenerated.\n+\t * generated/maxloc1_8_r4.c: Regenerated.\n+\t * generated/maxloc1_8_r8.c: Regenerated.\n+\t * generated/maxval_i1.c: Regenerated.\n+\t * generated/maxval_i16.c: Regenerated.\n+\t * generated/maxval_i2.c: Regenerated.\n+\t * generated/maxval_i4.c: Regenerated.\n+\t * generated/maxval_i8.c: Regenerated.\n+\t * generated/maxval_r10.c: Regenerated.\n+\t * generated/maxval_r16.c: Regenerated.\n+\t * generated/maxval_r4.c: Regenerated.\n+\t * generated/maxval_r8.c: Regenerated.\n+\t * generated/minloc1_16_i1.c: Regenerated.\n+\t * generated/minloc1_16_i16.c: Regenerated.\n+\t * generated/minloc1_16_i2.c: Regenerated.\n+\t * generated/minloc1_16_i4.c: Regenerated.\n+\t * generated/minloc1_16_i8.c: Regenerated.\n+\t * generated/minloc1_16_r10.c: Regenerated.\n+\t * generated/minloc1_16_r16.c: Regenerated.\n+\t * generated/minloc1_16_r4.c: Regenerated.\n+\t * generated/minloc1_16_r8.c: Regenerated.\n+\t * generated/minloc1_4_i1.c: Regenerated.\n+\t * generated/minloc1_4_i16.c: Regenerated.\n+\t * generated/minloc1_4_i2.c: Regenerated.\n+\t * generated/minloc1_4_i4.c: Regenerated.\n+\t * generated/minloc1_4_i8.c: Regenerated.\n+\t * generated/minloc1_4_r10.c: Regenerated.\n+\t * generated/minloc1_4_r16.c: Regenerated.\n+\t * generated/minloc1_4_r4.c: Regenerated.\n+\t * generated/minloc1_4_r8.c: Regenerated.\n+\t * generated/minloc1_8_i1.c: Regenerated.\n+\t * generated/minloc1_8_i16.c: Regenerated.\n+\t * generated/minloc1_8_i2.c: Regenerated.\n+\t * generated/minloc1_8_i4.c: Regenerated.\n+\t * generated/minloc1_8_i8.c: Regenerated.\n+\t * generated/minloc1_8_r10.c: Regenerated.\n+\t * generated/minloc1_8_r16.c: Regenerated.\n+\t * generated/minloc1_8_r4.c: Regenerated.\n+\t * generated/minloc1_8_r8.c: Regenerated.\n+\t * generated/minval_i1.c: Regenerated.\n+\t * generated/minval_i16.c: Regenerated.\n+\t * generated/minval_i2.c: Regenerated.\n+\t * generated/minval_i4.c: Regenerated.\n+\t * generated/minval_i8.c: Regenerated.\n+\t * generated/minval_r10.c: Regenerated.\n+\t * generated/minval_r16.c: Regenerated.\n+\t * generated/minval_r4.c: Regenerated.\n+\t * generated/minval_r8.c: Regenerated.\n+\t * generated/product_c10.c: Regenerated.\n+\t * generated/product_c16.c: Regenerated.\n+\t * generated/product_c4.c: Regenerated.\n+\t * generated/product_c8.c: Regenerated.\n+\t * generated/product_i1.c: Regenerated.\n+\t * generated/product_i16.c: Regenerated.\n+\t * generated/product_i2.c: Regenerated.\n+\t * generated/product_i4.c: Regenerated.\n+\t * generated/product_i8.c: Regenerated.\n+\t * generated/product_r10.c: Regenerated.\n+\t * generated/product_r16.c: Regenerated.\n+\t * generated/product_r4.c: Regenerated.\n+\t * generated/product_r8.c: Regenerated.\n+\t * generated/sum_c10.c: Regenerated.\n+\t * generated/sum_c16.c: Regenerated.\n+\t * generated/sum_c4.c: Regenerated.\n+\t * generated/sum_c8.c: Regenerated.\n+\t * generated/sum_i1.c: Regenerated.\n+\t * generated/sum_i16.c: Regenerated.\n+\t * generated/sum_i2.c: Regenerated.\n+\t * generated/sum_i4.c: Regenerated.\n+\t * generated/sum_i8.c: Regenerated.\n+\t * generated/sum_r10.c: Regenerated.\n+\t * generated/sum_r16.c: Regenerated.\n+\t * generated/sum_r4.c: Regenerated.\n+\t * generated/sum_r8.c: Regenerated.\n+\n+2012-10-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54878\n+\t* io/unix.c (tempfile_open): Set umask before calling mkstemp.\n+\n+2012-10-06  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* configure.ac: Check for presence of secure_getenv.\n+\t* libgfortran.h: Use HAVE_SECURE_GETENV.\n+\t* Makefile.in: Regenerated.\n+\t* aclocal.m4: Regenerated.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\n+2012-10-06  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/54736\n+\t* runtime/environ.c (search_unit):  Correct logic\n+\tfor binary search.\n+\t(mark_single):  Fix index errors.\n+\n+2012-09-29  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52724\n+\t* list_read.c (next_char):  Handle kind=4 characters.\n+\t* unix.c (open_internal4):  Correct lenth of internal file.\n+\n+2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* configure: Regenerated.\n+\n+2012-09-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/fpu-387.h (set_fpu): Prefix stmxcsr and ldmxcsr with %v.\n+\n+2012-07-25  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* io/list_read.c (list_formatted_read_scalar): Fix copying real\n+\tvalue back to temporary.\n+\n+2012-06-21  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/39654\n+\t* io/intrinsics.c (ftell2): New function.\n+\t* gfortran.map (_gfortran_ftell2): Export function.\n+\n+2012-06-04  Robert Mason  <rbmj@verizon.net>\n+\t    Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/53456\n+\t* intrinsics/time_1.h (gf_cputime): Fix typo in clock_gettime branch.\n+\n+2012-06-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* intrinsics/chmod.c (chmod_func): On MinGW, don't set is_dir and\n+\tfix octal-mode handling.\n+\t* io/unit.c (get_internal_unit): Add cast.\n+\t* io/unix.c (min): Undef \"min\" before defining it.\n+\t* runtime/backtrace.c (show_backtrace): Move label into\n+\tifndef __MINGW__ block.\n+\n+2012-05-31  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/51007\n+\t* configure.ac: Allow gnu, gnu* variants for --enable-symvers argument.\n+\t* configure: Regenerated.\n+\n+2012-05-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tRevert:\n+\t2012-05-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* io/unix.c (tempfile_open): Pass mode to \"open\" for O_CREAT.\n+\n+2012-05-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* io/io.h: Fix comment typos.\n+\t* io/list_read.c: Ditto.\n+\n+2012-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/time_1.h (gf_cputime): Don't reevaluate HZ expression\n+\tfor times fallback, clarify operation ordering for times and clock\n+\tfallbacks.\n+\t(gf_gettime): Fix comment typo.\n+\n+2012-05-24  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/53456\n+\t* intrinsics/time_1.h (gf_cputime): Fallback for clock_gettime.\n+\n+2012-05-23  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/53456\n+\t* intrinsics/time_1.h (gf_gettime): Fallback for clock_gettime.\n+\n+2012-05-23  Robert Mason  <rbmj@verizon.net>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/53445\n+\t* intrinsics/chmod.c (chmod_func): Ignore S_ISVTX on VxWorks.\n+\n+2012-05-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/53444\n+\t* acinclude.m4 (LIBGFOR_CHECK_STRERROR_R): Add configure checks for\n+\ttwo- and three-argument versions of strerror_r.\n+\t* configure.ac (LIBGFOR_CHECK_STRERROR_R): Use it.\n+\t* runtime/error.c (gf_strerror): Handle two-argument version\n+\tof strerror_r.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* configure: Regenerated.\n+\n+2012-05-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* io/unix.c (tempfile_open): Pass mode to \"open\" for O_CREAT.\n+\n+2012-05-14  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/52428\n+\t* io/io.h (max_value): Rename to si_max, remove second argument.\n+\t* io/list_read.c (convert_integer): Use unsigned types when\n+\tparsing the digits, set max value depending on the sign.\n+\t* io/read.c (max_value): Rename to si_max, remove second argument,\n+\tsimplify.\n+\t(read_decimal): Set max value depending on sign, always check\n+\toverflow.\n+\t(read_radix): Calculate max unsigned value directly.\n+\t* libgfortran.h (struct compile_options_t): Remove range_check\n+\tfield.\n+\t* runtime/compile_options.c (set_options): Skip handling\n+\toptions[7].\n+\t(init_compile_options): Don't set removed field.\n+\n+2012-05-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53310\n+\t* intrinsics/eoshift2.c (eoshift2): Do not leak\n+\tmemory by allocating it in the loop.\n+\n+2012-05-05  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* configure.ac: Add checks for getegid and __secure_getenv.\n+\t* io/unix.c (P_tmpdir): Fallback definition for macro.\n+\t(tempfile_open): New function.\n+\t(tempfile): Use secure_getenv, call tempfile_open to try each\n+\tdirectory in turn.\n+\t* libgfortran.h (DEFAULT_TMPDIR): Remove macro.\n+\t(secure_getenv): New macro/prototype.\n+\t* runtime/environ.c (secure_getenv): New function.\n+\t(variable_table): Rename GFORTRAN_TMPDIR to TMPDIR.\n+\t* runtime/main.c (find_addr2line): Use secure_getenv.\n+\n+2012-04-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53051\n+\t* io/list_read.c (parse_real): Support \"q\" for the\n+\texponential.\n+\t* io/read.c (read_f): Ditto.\n+\n+2012-04-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/38199\n+\tPR libfortran/50673\n+\t* io/unit.c (get_internal_unit): Properly check for the presence\n+\tof the format string.\n+\n+2012-04-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/38199\n+\tPR libfortran/50673\n+\t* intrinsics/string_intriniscs_inc.c (string_len_trim):\n+\tRemove prototypes for string_len_trim and move to...\n+\t* libgfortran.h (string_len_trim): ... here and\n+\t(string_len_trim_char4): ...here.\n+\t* io/unit.c: For non-array internal arrays where we do reading,\n+\tadjust the record length to the last non-blank character.\n+\t* io/unix.c:  Fix typo.\n+\n+2012-04-10  Michael Matz  <matz@suse.de>\n+\n+\t* m4/cshift0.m4 (cshift0_'rtype_code`): Guard use of modulo.\n+\n+\t* generated/cshift0_c10.c: Regenerated.\n+\t* generated/cshift0_c16.c: Regenerated.\n+\t* generated/cshift0_c4.c: Regenerated.\n+\t* generated/cshift0_c8.c: Regenerated.\n+\t* generated/cshift0_i16.c: Regenerated.\n+\t* generated/cshift0_i1.c: Regenerated.\n+\t* generated/cshift0_i2.c: Regenerated.\n+\t* generated/cshift0_i4.c: Regenerated.\n+\t* generated/cshift0_i8.c: Regenerated.\n+\t* generated/cshift0_r10.c: Regenerated.\n+\t* generated/cshift0_r16.c: Regenerated.\n+\t* generated/cshift0_r4.c: Regenerated.\n+\t* generated/cshift0_r8.c: Regenerated.\n+\n+2012-04-04  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* libgfortran.h: Include complex.h before math.h\n+\n+2012-04-02  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* configure.ac: Use new version of GCC_CHECK_MATH_FUNC.\n+\t* configure: Regenerate\n+\t* config.h.in: Regenerate.\n+\n+2012-03-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR libgfortran/52758\n+\t* intrinsics/chmod.c (chmod_func): Remove out-of-bounds\n+\tinitialization of rwxXstugo.\n+\n+2012-03-27  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* configure.ac: Add description to AC_DEFINE in\n+\tGCC_CHECK_MATH_FUNC.\n+\t* configure: Regenerate\n+\t* config.h.in: Regenerate.\n+\n+2012-03-26  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* runtime/memory.c (get_mem): Rename to xmalloc, check for zero\n+\tsize.\n+\t(internal_malloc_size): Remove.\n+\t* libgfortran.h (get_mem): Rename to xmalloc.\n+\t(internal_malloc_size): Remove prototype.\n+\t* Makefile.am (i_iall_c): Fix dependency.\n+\t(i_iany_c): Likewise.\n+\t(i_iparity_c): Likewise.\n+\t(i_norm2_c): Likewise.\n+\t(i_parity_c): Likewise.\n+\t* Makefile.in: Regenerated.\n+\t* m4/parity.m4: Fix typo in comment.\n+\t* generated/all_l1.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/all_l2.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l1.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/any_l2.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/bessel_r10.c: Regenerated.\n+\t* generated/bessel_r16.c: Regenerated.\n+\t* generated/bessel_r4.c: Regenerated.\n+\t* generated/bessel_r8.c: Regenerated.\n+\t* generated/count_16_l.c: Regenerated.\n+\t* generated/count_1_l.c: Regenerated.\n+\t* generated/count_2_l.c: Regenerated.\n+\t* generated/count_4_l.c: Regenerated.\n+\t* generated/count_8_l.c: Regenerated.\n+\t* generated/cshift1_16.c: Regenerated.\n+\t* generated/cshift1_4.c: Regenerated.\n+\t* generated/cshift1_8.c: Regenerated.\n+\t* generated/eoshift1_16.c: Regenerated.\n+\t* generated/eoshift1_4.c: Regenerated.\n+\t* generated/eoshift1_8.c: Regenerated.\n+\t* generated/eoshift3_16.c: Regenerated.\n+\t* generated/eoshift3_4.c: Regenerated.\n+\t* generated/eoshift3_8.c: Regenerated.\n+\t* generated/iall_i1.c: Regenerated.\n+\t* generated/iall_i16.c: Regenerated.\n+\t* generated/iall_i2.c: Regenerated.\n+\t* generated/iall_i4.c: Regenerated.\n+\t* generated/iall_i8.c: Regenerated.\n+\t* generated/iany_i1.c: Regenerated.\n+\t* generated/iany_i16.c: Regenerated.\n+\t* generated/iany_i2.c: Regenerated.\n+\t* generated/iany_i4.c: Regenerated.\n+\t* generated/iany_i8.c: Regenerated.\n+\t* generated/in_pack_c10.c: Regenerated.\n+\t* generated/in_pack_c16.c: Regenerated.\n+\t* generated/in_pack_c4.c: Regenerated.\n+\t* generated/in_pack_c8.c: Regenerated.\n+\t* generated/in_pack_i1.c: Regenerated.\n+\t* generated/in_pack_i16.c: Regenerated.\n+\t* generated/in_pack_i2.c: Regenerated.\n+\t* generated/in_pack_i4.c: Regenerated.\n+\t* generated/in_pack_i8.c: Regenerated.\n+\t* generated/in_pack_r10.c: Regenerated.\n+\t* generated/in_pack_r16.c: Regenerated.\n+\t* generated/in_pack_r4.c: Regenerated.\n+\t* generated/in_pack_r8.c: Regenerated.\n+\t* generated/iparity_i1.c: Regenerated.\n+\t* generated/iparity_i16.c: Regenerated.\n+\t* generated/iparity_i2.c: Regenerated.\n+\t* generated/iparity_i4.c: Regenerated.\n+\t* generated/iparity_i8.c: Regenerated.\n+\t* generated/matmul_c10.c: Regenerated.\n+\t* generated/matmul_c16.c: Regenerated.\n+\t* generated/matmul_c4.c: Regenerated.\n+\t* generated/matmul_c8.c: Regenerated.\n+\t* generated/matmul_i1.c: Regenerated.\n+\t* generated/matmul_i16.c: Regenerated.\n+\t* generated/matmul_i2.c: Regenerated.\n+\t* generated/matmul_i4.c: Regenerated.\n+\t* generated/matmul_i8.c: Regenerated.\n+\t* generated/matmul_l16.c: Regenerated.\n+\t* generated/matmul_l4.c: Regenerated.\n+\t* generated/matmul_l8.c: Regenerated.\n+\t* generated/matmul_r10.c: Regenerated.\n+\t* generated/matmul_r16.c: Regenerated.\n+\t* generated/matmul_r4.c: Regenerated.\n+\t* generated/matmul_r8.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/norm2_r10.c: Regenerated.\n+\t* generated/norm2_r16.c: Regenerated.\n+\t* generated/norm2_r4.c: Regenerated.\n+\t* generated/norm2_r8.c: Regenerated.\n+\t* generated/pack_c10.c: Regenerated.\n+\t* generated/pack_c16.c: Regenerated.\n+\t* generated/pack_c4.c: Regenerated.\n+\t* generated/pack_c8.c: Regenerated.\n+\t* generated/pack_i1.c: Regenerated.\n+\t* generated/pack_i16.c: Regenerated.\n+\t* generated/pack_i2.c: Regenerated.\n+\t* generated/pack_i4.c: Regenerated.\n+\t* generated/pack_i8.c: Regenerated.\n+\t* generated/pack_r10.c: Regenerated.\n+\t* generated/pack_r16.c: Regenerated.\n+\t* generated/pack_r4.c: Regenerated.\n+\t* generated/pack_r8.c: Regenerated.\n+\t* generated/parity_l1.c: Regenerated.\n+\t* generated/parity_l16.c: Regenerated.\n+\t* generated/parity_l2.c: Regenerated.\n+\t* generated/parity_l4.c: Regenerated.\n+\t* generated/parity_l8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\t* generated/shape_i16.c: Regenerated.\n+\t* generated/shape_i4.c: Regenerated.\n+\t* generated/shape_i8.c: Regenerated.\n+\t* generated/spread_c10.c: Regenerated.\n+\t* generated/spread_c16.c: Regenerated.\n+\t* generated/spread_c4.c: Regenerated.\n+\t* generated/spread_c8.c: Regenerated.\n+\t* generated/spread_i1.c: Regenerated.\n+\t* generated/spread_i16.c: Regenerated.\n+\t* generated/spread_i2.c: Regenerated.\n+\t* generated/spread_i4.c: Regenerated.\n+\t* generated/spread_i8.c: Regenerated.\n+\t* generated/spread_r10.c: Regenerated.\n+\t* generated/spread_r16.c: Regenerated.\n+\t* generated/spread_r4.c: Regenerated.\n+\t* generated/spread_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\t* generated/transpose_c10.c: Regenerated.\n+\t* generated/transpose_c16.c: Regenerated.\n+\t* generated/transpose_c4.c: Regenerated.\n+\t* generated/transpose_c8.c: Regenerated.\n+\t* generated/transpose_i16.c: Regenerated.\n+\t* generated/transpose_i4.c: Regenerated.\n+\t* generated/transpose_i8.c: Regenerated.\n+\t* generated/transpose_r10.c: Regenerated.\n+\t* generated/transpose_r16.c: Regenerated.\n+\t* generated/transpose_r4.c: Regenerated.\n+\t* generated/transpose_r8.c: Regenerated.\n+\t* generated/unpack_c10.c: Regenerated.\n+\t* generated/unpack_c16.c: Regenerated.\n+\t* generated/unpack_c4.c: Regenerated.\n+\t* generated/unpack_c8.c: Regenerated.\n+\t* generated/unpack_i1.c: Regenerated.\n+\t* generated/unpack_i16.c: Regenerated.\n+\t* generated/unpack_i2.c: Regenerated.\n+\t* generated/unpack_i4.c: Regenerated.\n+\t* generated/unpack_i8.c: Regenerated.\n+\t* generated/unpack_r10.c: Regenerated.\n+\t* generated/unpack_r16.c: Regenerated.\n+\t* generated/unpack_r4.c: Regenerated.\n+\t* generated/unpack_r8.c: Regenerated.\n+\t* intrinsics/cshift0.c: Use xmalloc.\n+\t* intrinsics/ctime.c: Likewise.\n+\t* intrinsics/date_and_time.c: Likewise.\n+\t* intrinsics/eoshift0.c: Likewise.\n+\t* intrinsics/eoshift2.c: Likewise.\n+\t* intrinsics/getlog.c: Likewise.\n+\t* intrinsics/pack_generic.c: Likewise.\n+\t* intrinsics/reshape_generic.c: Likewise.\n+\t* intrinsics/spread_generic.c: Likewise.\n+\t* intrinsics/string_intrinsics_inc.c: Likewise.\n+\t* intrinsics/transpose_generic.c: Likewise.\n+\t* intrinsics/unpack_generic.c: Likewise.\n+\t* io/fbuf.c: Likewise.\n+\t* io/format.c: Likewise.\n+\t* io/intrinsics.c: Likewise.\n+\t* io/list_read.c: Likewise.\n+\t* io/open.c: Likewise.\n+\t* io/transfer.c: Likewise.\n+\t* io/unit.c: Likewise.\n+\t* io/unix.c: Likewise.\n+\t* io/write.c: Likewise.\n+\t* m4/bessel.m4: Likewise.\n+\t* m4/cshift1.m4: Likewise.\n+\t* m4/eoshift1.m4: Likewise.\n+\t* m4/eoshift3.m4: Likewise.\n+\t* m4/iforeach.m4: Likewise.\n+\t* m4/ifunction.m4: Likewise.\n+\t* m4/ifunction_logical.m4: Likewise.\n+\t* m4/in_pack.m4: Likewise.\n+\t* m4/matmul.m4: Likewise.\n+\t* m4/matmull.m4: Likewise.\n+\t* m4/pack.m4: Likewise.\n+\t* m4/reshape.m4: Likewise.\n+\t* m4/shape.m4: Likewise.\n+\t* m4/spread.m4: Likewise.\n+\t* m4/transpose.m4: Likewise.\n+\t* m4/unpack.m4: Likewise.\n+\t* runtime/convert_char.c: Likewise.\n+\t* runtime/environ.c: Likewise.\n+\t* runtime/in_pack_generic.c: Likewise.\n+\n+2012-03-26  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* configure.ac: Use GCC_CHECK_MATH_FUNC for math functions.\n+\t* acinclude.m4: Include ../config/math.m4\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n+2012-03-25  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* runtime/memory.c (xcalloc): New function.\n+\t* libgfortran.h (xcalloc): New prototype.\n+\t* io/list_read.c (push_char): Use xcalloc instead of get_mem and\n+\tmemset.\n+\t(l_push_char): Likewise.\n+\t* io/unit.c (insert_unit): Likewise.\n+\t(get_internal_unit): Likewise.\n+\t* io/unix.c (open_internal): Likewise.\n+\t(open_internal4): Likewise.\n+\t(fd_to_stream): Likewise.\n+\n+2012-03-17  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/52608\n+\t* io/write_float.def (output_float): Move removal of initial zeros\n+\tuntil after the scale factor has been applied.\n+\n+2012-03-16  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/unix.h (struct stream): Rename to stream_vtable.\n+\t(struct stream): New struct definition.\n+\t(sread): Dereference vtable pointer.\n+\t(swrite): Likewise.\n+\t(sseek): Likewise.\n+\t(struncate): Likewise.\n+\t(sflush): Likewise.\n+\t(sclose): Likewise.\n+\t* io/unix.c (raw_vtable): New variable.\n+\t(buf_vtable): Likewise.\n+\t(mem_vtable): Likewise.\n+\t(mem4_vtable): Likewise.\n+\t(raw_init): Assign vtable pointer.\n+\t(buf_init): Likewise.\n+\t(open_internal): Likewise.\n+\t(open_internal4): Likewise.\n+\n+2012-03-15  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/52434\n+\tPR libfortran/48878\n+\tPR libfortran/38199\n+\t* io/unit.c (get_internal_unit): Default to ROUND_UNSPECIFIED.\n+\t(init_units): Likewise.\n+\t* io/write_float.def (determine_precision): New function.\n+\t(output_float): Take into account buffer with %f format, no need\n+\tfor our own rounding if unspecified or processor specified\n+\trounding.\n+\t(DTOA): Simplify format string, add parameters.\n+\t(FDTOA): New macros similar to DTOA, but using %f format.\n+\t(OUTPUT_FLOAT_FMT_G): Stack allocate newf, determine correct\n+\tprecision and fill buffer.\n+\t(EN_PREC): New macro.\n+\t(determine_en_precision): New function.\n+\t(WRITE_FLOAT): For G format, move buffer filling into\n+\toutput_float_FMT_G, use FDTOA for F format.\n+\t(write_float): Increase buffer due to F format.\n+\n+2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* intrinsics/c99_functions.c [__sgi__ && !HAVE_COMPLEX_H]: Remove.\n+\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac: Remove Tru64 reference.\n+\t* acinclude.m4 (LIBGFOR_GTHREAD_WEAK): Remove alpha*-dec-osf*\n+\thandling.\n+\t* configure: Regenerate.\n+\t* intrinsics/c99_functions.c [__osf__]: Remove.\n+\n+2012-03-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* libgfortran.h (descriptor_dimension, GFC_DIMENSION_LBOUND,\n+\tGFC_DIMENSION_EXTENT, GFC_DIMENSION_SET, GFC_DESCRIPTOR_DATA,\n+\tGFC_ARRAY_DESCRIPTOR): Rename _lbound to lower_bound and\n+\tdata to base_addr.\n+\t* intrinsics/cshift0.c (size0, cshift0): Handle data to\n+\tbase_addr rename.\n+\t* intrinsics/date_and_time.c (date_and_time, secnds, itime_i4,\n+\titime_i8, gmtime_i4, gmtime_i8, ltime_i4, ltime_i8): Ditto.\n+\t* intrinsics/dtime.c (dtime_sub): Ditto.\n+\t* intrinsics/eoshift0.c (eoshift0): Ditto.\n+\t* intrinsics/eoshift2.c (eoshift2): Ditto.\n+\t* intrinsics/etime.c (etime_sub): Ditto.\n+\t* intrinsics/iso_c_binding.c (c_f_pointer_u0): Ditto.\n+\t* intrinsics/move_alloc.c (move_alloc): Ditto.\n+\t* intrinsics/pack_generic.c (pack_internal, pack,\n+\tpack_s_internal): Ditto.\n+\t* intrinsics/random.c (arandom_r4, arandom_r8, arandom_r10,\n+\tarandom_r16, random_seed_i4, random_seed_i8): Ditto.\n+\t* intrinsics/reshape_generic.c (reshape_internal): Ditto.\n+\t* intrinsics/spread_generic.c (spread_internal,\n+\tspread_internal_scalar, spread, spread_scalar): Ditto.\n+\t* intrinsics/stat.c (stat_i4_sub_0, stat_i8_sub_0, fstat_i4_sub,\n+\tfstat_i8_sub): Ditto.\n+\t* intrinsics/transpose_generic.c (transpose_internal): Ditto.\n+\t* intrinsics/unpack_generic.c (unpack_bounds, unpack_internal,\n+\tunpack1, unpack0, unpack0_char4): Ditto.\n+\t* m4/bessel.m4 (bessel_jn_r'rtype_kind`, bessel_yn_r'rtype_kind`):\n+\tDitto.\n+\t* m4/cshift0.m4 (cshift0_'rtype_code`): Ditto.\n+\t* m4/cshift1.m4 (cshift1): Ditto.\n+\t* m4/eoshift1.m4 (eoshift1): Ditto.\n+\t* m4/eoshift3.m4 (eoshift3): Ditto.\n+\t* m4/iforeach.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/ifunction_logical.m4 (name`'rtype_qual`_'atype_code): Ditto.\n+\t* m4/in_pack.m4 (internal_pack_'rtype_ccode`): Ditto.\n+\t* m4/in_unpack.m4 (internal_unpack_'rtype_ccode`): Ditto.\n+\t* m4/matmul.m4 (matmul_'rtype_code`): Ditto.\n+\t* m4/matmull.m4 (matmul_'rtype_code`): Ditto.\n+\t* m4/pack.m4 (pack_'rtype_code`): Ditto.\n+\t* m4/reshape.m4 (reshape_'rtype_ccode`): Ditto.\n+\t* m4/shape.m4 (shape_'rtype_kind`): Ditto.\n+\t* m4/spread.m4 (spread_'rtype_code`): Ditto.\n+\t* m4/transpose.m4 (transpose_'rtype_code`): Ditto.\n+\t* m4/unpack.m4 (unpack0_'rtype_code`, unpack1_'rtype_code`): Ditto.\n+\t* runtime/bounds.c (count_0): Ditto.\n+\t* runtime/in_pack_generic.c (internal_pack): Ditto.\n+\t* runtime/in_unpack_generic.c (internal_unpack): Ditto.\n+\t* generated/cshift0_r4.c: Regenerated.\n+\t* generated/unpack_r8.c: Regenerated.\n+\t* generated/cshift0_c10.c: Regenerated.\n+\t* generated/in_unpack_i1.c: Regenerated.\n+\t* generated/eoshift1_16.c: Regenerated.\n+\t* generated/iany_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/parity_l16.c: Regenerated.\n+\t* generated/in_unpack_r16.c: Regenerated.\n+\t* generated/iparity_i1.c: Regenerated.\n+\t* generated/minloc0_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/bessel_r8.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc1_8_i1.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/maxloc0_8_r10.c: Regenerated.\n+\t* generated/unpack_r16.c: Regenerated.\n+\t* generated/maxloc1_16_i1.c: Regenerated.\n+\t* generated/minloc1_4_i1.c: Regenerated.\n+\t* generated/unpack_i4.c: Regenerated.\n+\t* generated/in_pack_i1.c: Regenerated.\n+\t* generated/cshift0_i1.c: Regenerated.\n+\t* generated/minloc0_16_i4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/unpack_i2.c: Regenerated.\n+\t* generated/matmul_r16.c: Regenerated.\n+\t* generated/maxloc0_16_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/pack_c10.c: Regenerated.\n+\t* generated/in_unpack_c8.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/in_pack_c16.c: Regenerated.\n+\t* generated/parity_l1.c: Regenerated.\n+\t* generated/in_pack_i2.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/pack_r4.c: Regenerated.\n+\t* generated/matmul_r8.c: Regenerated.\n+\t* generated/pack_i1.c: Regenerated.\n+\t* generated/minloc0_16_r16.c: Regenerated.\n+\t* generated/cshift0_c8.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/product_i2.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/minloc0_16_r8.c: Regenerated.\n+\t* generated/in_pack_i8.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/minloc0_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i2.c: Regenerated.\n+\t* generated/matmul_l8.c: Regenerated.\n+\t* generated/spread_r10.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/cshift0_i16.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/iparity_i8.c: Regenerated.\n+\t* generated/minloc0_16_i8.c: Regenerated.\n+\t* generated/minloc1_8_i1.c: Regenerated.\n+\t* generated/maxloc0_16_r10.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc0_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/cshift1_8.c: Regenerated.\n+\t* generated/matmul_c10.c: Regenerated.\n+\t* generated/pack_r16.c: Regenerated.\n+\t* generated/transpose_r10.c: Regenerated.\n+\t* generated/maxloc1_16_i2.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/spread_c10.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/in_unpack_i4.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/norm2_r8.c: Regenerated.\n+\t* generated/iany_i2.c: Regenerated.\n+\t* generated/eoshift3_8.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc0_16_r16.c: Regenerated.\n+\t* generated/cshift0_i8.c: Regenerated.\n+\t* generated/all_l1.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/spread_i16.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/spread_r16.c: Regenerated.\n+\t* generated/matmul_c8.c: Regenerated.\n+\t* generated/pack_r10.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/count_8_l.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i2.c: Regenerated.\n+\t* generated/count_1_l.c: Regenerated.\n+\t* generated/unpack_c16.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/minloc1_16_i1.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/in_unpack_r8.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/in_unpack_r4.c: Regenerated.\n+\t* generated/unpack_i1.c: Regenerated.\n+\t* generated/cshift0_r8.c: Regenerated.\n+\t* generated/spread_i2.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_16_i2.c: Regenerated.\n+\t* generated/minloc0_16_i2.c: Regenerated.\n+\t* generated/eoshift3_16.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/parity_l2.c: Regenerated.\n+\t* generated/maxloc0_16_i16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/in_unpack_r10.c: Regenerated.\n+\t* generated/maxloc1_8_i2.c: Regenerated.\n+\t* generated/iparity_i2.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/iall_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i16.c: Regenerated.\n+\t* generated/cshift0_i4.c: Regenerated.\n+\t* generated/in_unpack_c10.c: Regenerated.\n+\t* generated/unpack_c8.c: Regenerated.\n+\t* generated/transpose_c8.c: Regenerated.\n+\t* generated/in_unpack_c16.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/minloc0_4_i1.c: Regenerated.\n+\t* generated/minloc0_8_r16.c: Regenerated.\n+\t* generated/in_unpack_i16.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/pack_i4.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/maxloc0_4_r10.c: Regenerated.\n+\t* generated/unpack_i8.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/pack_c16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/spread_r8.c: Regenerated.\n+\t* generated/minloc0_16_r4.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/matmul_r4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/cshift0_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/in_pack_r10.c: Regenerated.\n+\t* generated/iall_i1.c: Regenerated.\n+\t* generated/product_i1.c: Regenerated.\n+\t* generated/maxloc0_4_i1.c: Regenerated.\n+\t* generated/maxloc0_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/matmul_l4.c: Regenerated.\n+\t* generated/cshift0_c16.c: Regenerated.\n+\t* generated/spread_r4.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/in_unpack_c4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/unpack_i16.c: Regenerated.\n+\t* generated/norm2_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/in_pack_r4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/parity_l8.c: Regenerated.\n+\t* generated/minval_i2.c: Regenerated.\n+\t* generated/transpose_c10.c: Regenerated.\n+\t* generated/cshift0_r10.c: Regenerated.\n+\t* generated/cshift0_i2.c: Regenerated.\n+\t* generated/spread_c4.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/unpack_c10.c: Regenerated.\n+\t* generated/bessel_r4.c: Regenerated.\n+\t* generated/minloc0_8_i1.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i2.c: Regenerated.\n+\t* generated/transpose_c4.c: Regenerated.\n+\t* generated/in_pack_c8.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/maxloc1_4_i2.c: Regenerated.\n+\t* generated/maxloc1_4_i1.c: Regenerated.\n+\t* generated/iall_i8.c: Regenerated.\n+\t* generated/iany_i8.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/spread_i8.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/pack_i2.c: Regenerated.\n+\t* generated/unpack_r10.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/iany_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/in_pack_r8.c: Regenerated.\n+\t* generated/spread_i1.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/pack_c8.c: Regenerated.\n+\t* generated/iparity_i16.c: Regenerated.\n+\t* generated/matmul_c16.c: Regenerated.\n+\t* generated/eoshift1_8.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/transpose_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/count_16_l.c: Regenerated.\n+\t* generated/minloc0_16_i1.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc0_8_i1.c: Regenerated.\n+\t* generated/matmul_i1.c: Regenerated.\n+\t* generated/sum_i2.c: Regenerated.\n+\t* generated/cshift1_4.c: Regenerated.\n+\t* generated/minloc0_4_i2.c: Regenerated.\n+\t* generated/bessel_r10.c: Regenerated.\n+\t* generated/matmul_c4.c: Regenerated.\n+\t* generated/parity_l4.c: Regenerated.\n+\t* generated/in_unpack_i2.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/maxloc0_16_i4.c: Regenerated.\n+\t* generated/minloc0_4_r10.c: Regenerated.\n+\t* generated/transpose_i16.c: Regenerated.\n+\t* generated/matmul_l16.c: Regenerated.\n+\t* generated/any_l1.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/shape_i16.c: Regenerated.\n+\t* generated/in_pack_c4.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/iany_i1.c: Regenerated.\n+\t* generated/matmul_i16.c: Regenerated.\n+\t* generated/maxloc0_16_r4.c: Regenerated.\n+\t* generated/spread_c8.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/pack_r8.c: Regenerated.\n+\t* generated/matmul_r10.c: Regenerated.\n+\t* generated/shape_i8.c: Regenerated.\n+\t* generated/eoshift1_4.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/transpose_r16.c: Regenerated.\n+\t* generated/spread_c16.c: Regenerated.\n+\t* generated/maxloc0_8_i16.c: Regenerated.\n+\t* generated/minval_i1.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/in_pack_r16.c: Regenerated.\n+\t* generated/iall_i16.c: Regenerated.\n+\t* generated/minloc0_8_r10.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/transpose_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i2.c: Regenerated.\n+\t* generated/iall_i2.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/in_pack_i16.c: Regenerated.\n+\t* generated/spread_i4.c: Regenerated.\n+\t* generated/cshift0_c4.c: Regenerated.\n+\t* generated/minloc0_4_i16.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\t* generated/minloc0_16_i16.c: Regenerated.\n+\t* generated/sum_i1.c: Regenerated.\n+\t* generated/all_l2.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/shape_i4.c: Regenerated.\n+\t* generated/maxval_i1.c: Regenerated.\n+\t* generated/norm2_r10.c: Regenerated.\n+\t* generated/unpack_c4.c: Regenerated.\n+\t* generated/maxloc0_16_i1.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/transpose_i8.c: Regenerated.\n+\t* generated/minloc0_8_i2.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/in_pack_c10.c: Regenerated.\n+\t* generated/maxloc0_4_r16.c: Regenerated.\n+\t* generated/pack_c4.c: Regenerated.\n+\t* generated/bessel_r16.c: Regenerated.\n+\t* generated/norm2_r16.c: Regenerated.\n+\t* generated/in_unpack_i8.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/eoshift3_4.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/matmul_i8.c: Regenerated.\n+\t* generated/matmul_i4.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/matmul_i2.c: Regenerated.\n+\t* generated/transpose_r8.c: Regenerated.\n+\t* generated/transpose_r4.c: Regenerated.\n+\t* generated/cshift1_16.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/iparity_i4.c: Regenerated.\n+\t* generated/in_pack_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i2.c: Regenerated.\n+\t* generated/unpack_r4.c: Regenerated.\n+\t* generated/count_4_l.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/any_l2.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/pack_i8.c: Regenerated.\n+\t* generated/count_2_l.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/maxval_i2.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\n+2012-01-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libgfortran/51899\n+\t* configure.ac: Check whether umask is available.\n+\t* intrinsics/chmod.c (chmod_func): Make compile with MinGW.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n+2012-01-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36755\n+\t* intrinsics/chmod.c (chmod_func): Replace call to /bin/chmod\n+\n+2012-01-12  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* configure.ac: Remove check for fdopen.\n+\t* runtime/backtrace.c (CAN_PIPE): Fix comment, remove check for\n+\tfdopen.\n+\t* configure: Regenerated.\n+\t* config.h.in: Regenerated.\n+\n+2012-01-12  Janne Blomqvist  <jb@gcc.gnu.org>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/51803\n+\t* runtime/main.c (store_exe_path): Avoid malloc if getcwd fails or\n+\tis not available.\n+\n+2012-01-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* runtime/main.c (store_exe_path): Fix absolute path\n+\tdetection for Windows.\n+\n+2012-01-11  Janne Blomqvist  <jb@gcc.gnu.org>\n+\t    Mike Stump  <mikestump@comcast.net>\n+\n+\tPR libfortran/51803\n+\t* runtime/main.c (store_exe_path): Handle getcwd failure and lack\n+\tof the function better.\n+\n+2012-01-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51197\n+\t* runtime/compile_options.c (show_signal): List\n+\tmore signals.\n+\n+2012-01-09  Harald Anlauf  <anlauf@gmx.de>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51197\n+\t* runtime/backtrace.c (show_backtrace): Modify wording written\n+\tbefore the backtrace.\n+\t* runtime/compile_options.c (show_signal): New function.\n+\t(backtrace_handler): Use it.\n+\n+2012-01-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.am (libgfortran_la_LDFLAGS): Add -Wc,-shared-libgcc.\n+\t* Makefile.in: Regenerate.\n+\n+2012-01-06  Tobias Burnus <burnus@net-b.de>\n+\n+\t* caf/single.c (_gfortran_caf_register, _gfortran_caf_deregister):\n+\tFix token handling.\n+\t* caf/mpi.c  (_gfortran_caf_register, _gfortran_caf_deregister): Ditto.\n+\t* caf/libcaf.h (STAT_STOPPED_IMAGE): Sync with libgfortran.h.\n+\t(_gfortran_caf_register, _gfortran_caf_deregister): Update prototype.\n+\f\n+Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "412ccd948289f1920940843a3ea47f903b603190", "filename": "libjava/ChangeLog", "status": "modified", "additions": 1, "deletions": 236, "changes": 237, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -3,243 +3,8 @@\n \t* gnu/gcj/convert/Convert.java (version): Update copyright notice\n \tdates.\n \t* gnu/gcj/tools/gcj_dbtool/Main.java (main): Likewise.\n-\n-2012-12-19  Matthias Klose  <doko@ubuntu.com>\n-\n-        Import GNU Classpath (20121202).\n-\n-\t* Regenerate class and header files.\n-\t* Regenerate auto* files.\n-\t* sources.am, gcj/javaprims.h: Regenerate.\n-\t* gnu/java/nio/FileLockImpl.java (close): New override.\n-\n-2012-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* Makefile.am (lib_gnu_awt_xlib_la_CPPFLAGS): Use\n-\t$(LIBSTDCXX_RAW_CXX_CXXLAGS).\n-\t(lib_gnu_awt_xlib_la_LDFLAGS): Use $(LIBSTDCXX_RAW_CXX_LDLAGS).\n-\t* configure.ac (GCC_LIBSTDCXX_RAW_CXX_FLAGS): New.\n-\t* aclocal.m4: Regenerated.\n-\t* Makefile.in:Likewise.\n-\t* configure: Likewise.\n-\n-2012-11-19  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* libtool-version: Bump soversion.\n-\n-2012-10-15  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* configure.ac: Match arm*-*-linux-* for ARM Linux/GNU.\n-\t* configure: Regenerate.\n-\n-2012-09-14  Dehao Chen  <dehao@google.com>\n-\n-\t* testsuite/libjava.lang/sourcelocation.java: New cases.\n-\t* testsuite/libjava.lang/sourcelocation.out: New cases.\n-\n-2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n-\n-\t* configure: Regenerated.\n-\n-2012-07-19  Tristan Gingold  <gingold@adacore.com>\n-\t    Richard Henderson  <rth@redhat.com>\n-\n-\t* libgcj.ver: Add __gcj_personality_seh0.\n-\t* exception.cc (__gcj_personality_seh0): New function.\n-\tAdjust for SEH.\n-\n-2012-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR libjava/53973\n-\t* include/x86_64-signal.h (CHECK_67H_PREFIX): Removed.\n-\t(HANDLE_DIVIDE_OVERFLOW): Skip 67h address size prefix\n-\tunconditionally.\n-\n-2012-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR libjava/53973\n-\t* include/x86_64-signal.h (CHECK_67H_PREFIX): New.\n-\t(HANDLE_DIVIDE_OVERFLOW): Check and and skip 67h address size\n-\tprefix if CHECK_67H_PREFIX is 1.  Use ULL suffix for 64-bit\n-\tinteger.\n-\n-2012-06-20  David Edelsohn  <dje.gcc@gmail.com>\n-\t    Alan Modra  <amodra@gmail.com>\n-\n-\t* sysdep/powerpc/locks.h (compare_and_swap): Use GCC atomic\n-\tintrinsics.\n-\t(release_set): Same.\n-\t(compare_and_swap_release): Same.\n-\t(read_barrier): Same.\n-\t(write_barrier): Same.\n-\n-2012-06-15  Andreas Schwab  <schwab@linux-m68k.org>\n-\n-\t* sysdep/m68k/locks.h (compare_and_swap): Use\n-\t__sync_bool_compare_and_swap.\n-\t(release_set): Use write_barrier instead of inlining it.\n-\n-2012-06-15  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n-\n-\t* sysdep/s390/locks.h (compare_and_swap, release_set)\n-\t(read_barrier, write_barrier): Use the GCC atomic builtins.\n-\n-2012-06-14  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* sysdep/sh/locks.h (__cas_lock): Remove.\n-\t(__cas_start_atomic, __cas_end_atomic): Likewise.\n-\t(compare_and_swap): Call __sync_bool_compare_and_swap.\n-\n-2012-05-21  Benjamin Kosnik  <bkoz@redhat.com>\n-\n-\tPR libstdc++/52700\n-\t* configure.ac: Allow gnu, gnu-versioned-namespace for\n-\t--enable-symvers arguments.\n-\t* configure: Regenerate.\n-\n-2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* configure: Regenerated.\n-\n-2012-04-23  Andrew Haley  <aph@redhat.com>\n-\n-\t* defineclass.cc (MAJOR_1_7,  MINOR_1_7): New.\n-\t(parse): Allow MAJOR_1_7 classfile version.\n-\n-2012-04-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\tPR libgcj/52645\n-\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (setOption):\n-\tRestore HAVE_INET6 check.\n-\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc (setOption):\n-\tLikewise.\n-\n-2012-03-25  Gerald Pfeifer  <gerald@pfeifer.com>\n-\n-\tPR libgcj/52694\n-\t* java/io/natVMConsole.cc (IUCLC): Define, if undefined.\n-\t\t\n-2012-03-16  Andrew John Hughes  <ahughes@redhat.com>\n-\n-\t* Makefile.am: Add natVMConsole.cc.\n-\t* Makefile.in: Regenerated.\n-\t* gcj/Makefile.in: Likewise.\n-\t* gcj/javaprims.h: Classes updated.\n-\t* gnu/javax/crypto/key/dh/GnuDHKeyPairGenerator.h,\n-\t* gnu/javax/net/ssl/provider/CipherSuite.h,\n-\t* gnu/javax/net/ssl/provider/OutputSecurityParameters.h,\n-\t* include/Makefile.in:\n-\tRegenerated.\n-\t* java/io/Console.h,\n-\t* java/io/IOError.h,\n-\t* java/io/ObjectOutputStream$2.h:\n-\tInitial generation.\n-\t* java/io/ObjectOutputStream.h: Regenerated.\n-\t* java/io/VMConsole.h: Initial generation.\n-\t* java/io/VMConsole.java: Copied from classpath/vm/reference.\n-\t* java/io/natVMConsole.cc: Implemented readPassword.\n-\t* java/nio/channels/spi/SelectorProvider$1.h,\n-\t* java/security/KeyStore$1.h:\n-\tInitial generation.\n-\t* java/security/ProtectionDomain.h,\n-\t* java/text/DateFormatSymbols.h,\n-\t* java/util/HashMap.h,\n-\t* java/util/regex/Matcher.h,\n-\t* java/util/regex/Pattern.h:\n-\tRegenerated.\n-\t* javax/xml/stream/util/ReaderDelegate.h:\n-\tRemoved.\n-\t* sources.am,\n-\t* testsuite/Makefile.in:\n-\tRegenerated.\n-\n-2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* configure.ac (THREADLIBS): Remove *-*-solaris2.8 handling.\n-\t* configure: Regenerate.\n-\n-2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* configure.ac (libgcj_cv_exidx): Remove IRIX 6 ld workaround.\n-\t(mips-sgi-irix6*): Remove.\n-\t(mips-sgi-irix*): Remove.\n-\t(AC_CHECK_HEADERS): Remove bstring.h.\n-\t* configure: Regenerate.\n-\t* include/config.h.in: Regenerate.\n-\t* configure.host (mips-sgi-irix6*): Remove.\n-\n-\t* include/posix-signal.h [__sgi__]: Remove.\n-\n-\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc\n-\t[HAVE_BSTRING_H]: Remove.\n-\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc: Likewise.\n-\t* gnu/java/net/natPlainSocketImplPosix.cc: Likewise.\n-\n-2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* configure.ac (alpha*-dec-osf*): Remove.\n-\t* configure: Regenerate.\n-\t* configure.host (alpha*-dec-osf*): Remove.\n-\n-\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (setOption): Use\n-\tIPV6_MULTICAST_IF unconditionally.\n-\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc (setOption):\n-\tLikewise.\n-\t* gnu/java/net/natPlainSocketImplPosix.cc\n-\t(gnu::java::net::PlainSocketImpl::accept): Use ::accept instead of\n-\t_Jv_accept.\n-\t* include/posix-signal.h [__alpha__ && __osf__]: Remove.\n-\t* include/posix.h (_POSIX_PII_SOCKET): Don't define.\n-\t(_Jv_accept): Remove.\n-\n-\t* java/io/File.java (File._access): Rename to access.\n-\tChange callers.\n-\t(File._stat): Likewise.\n-\t* java/io/File.h: Regenerate.\n-\t* classpath/lib/java/io/File.class: Regenerate.\n-\t* java/io/natFilePosix.cc (java::io::File::_access): Rename to\n-\taccess.\n-\t(java::io::File::_stat): Rename to stat.\n-\t* java/io/natFileWin32.cc: Likewise.\n-\n-\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):\n-\tRemove alpha*-dec-osf* handling.\n-\t* testsuite/libjava.jvmti/jvmti-interp.exp\n-\t(gcj_jni_compile_c_to_so): Likewise.\n-\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_compile_cxx_to_o):\n-\tLikewise.\n-\n-2012-02-23  Patrick Marlier  <patrick.marlier@gmail.com>\n-\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n-\n-\tPR target/49461\n-\t* configure.ac (SYSTEMSPEC): No longer pass -no_pie for darwin11.\n-\t* configure: Regenerate.\n-\n-2012-02-02  Kai Tietz  <ktietz@redhat.com>\n-\n-\tPR libjava/48512\n-\t* configure.ac (THREADSTARTFILESPEC): Don't add crtmet.o file for\n-\tw64 windows targets.\n-\t* configure: Regenerated.\n-\n-2012-02-01  Kai Tietz  <ktietz@redhat.com>\n-\n-\tPR target/51500\n-\t* interpret.cc (_Jv_init_cif): Handle thiscall\n-\tconvention for 32-bit Windows.\n-\t* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA):\n-\tLikewise.\n-\t* java/lang/reflect/natVMProxy.cc (invoke_t): Add\n-\tthiscall-attribute for 32-bit Windows.\n-\n-2012-01-01  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* gnu/gcj/convert/Convert.java (version): Update copyright notice\n-\tdates.\n-\t* gnu/gcj/tools/gcj_dbtool/Main.java (main): Likewise.\n \f\n-Copyright (C) 2012 Free Software Foundation, Inc.\n+Copyright (C) 2013 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "ff22755dbe1a574c4511127ee6e6fdb1c083541e", "filename": "libjava/ChangeLog-2012", "status": "added", "additions": 240, "deletions": 0, "changes": 240, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libjava%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libjava%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog-2012?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -0,0 +1,240 @@\n+2012-12-19  Matthias Klose  <doko@ubuntu.com>\n+\n+        Import GNU Classpath (20121202).\n+\n+\t* Regenerate class and header files.\n+\t* Regenerate auto* files.\n+\t* sources.am, gcj/javaprims.h: Regenerate.\n+\t* gnu/java/nio/FileLockImpl.java (close): New override.\n+\n+2012-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.am (lib_gnu_awt_xlib_la_CPPFLAGS): Use\n+\t$(LIBSTDCXX_RAW_CXX_CXXLAGS).\n+\t(lib_gnu_awt_xlib_la_LDFLAGS): Use $(LIBSTDCXX_RAW_CXX_LDLAGS).\n+\t* configure.ac (GCC_LIBSTDCXX_RAW_CXX_FLAGS): New.\n+\t* aclocal.m4: Regenerated.\n+\t* Makefile.in:Likewise.\n+\t* configure: Likewise.\n+\n+2012-11-19  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* libtool-version: Bump soversion.\n+\n+2012-10-15  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Match arm*-*-linux-* for ARM Linux/GNU.\n+\t* configure: Regenerate.\n+\n+2012-09-14  Dehao Chen  <dehao@google.com>\n+\n+\t* testsuite/libjava.lang/sourcelocation.java: New cases.\n+\t* testsuite/libjava.lang/sourcelocation.out: New cases.\n+\n+2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* configure: Regenerated.\n+\n+2012-07-19  Tristan Gingold  <gingold@adacore.com>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\t* libgcj.ver: Add __gcj_personality_seh0.\n+\t* exception.cc (__gcj_personality_seh0): New function.\n+\tAdjust for SEH.\n+\n+2012-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libjava/53973\n+\t* include/x86_64-signal.h (CHECK_67H_PREFIX): Removed.\n+\t(HANDLE_DIVIDE_OVERFLOW): Skip 67h address size prefix\n+\tunconditionally.\n+\n+2012-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libjava/53973\n+\t* include/x86_64-signal.h (CHECK_67H_PREFIX): New.\n+\t(HANDLE_DIVIDE_OVERFLOW): Check and and skip 67h address size\n+\tprefix if CHECK_67H_PREFIX is 1.  Use ULL suffix for 64-bit\n+\tinteger.\n+\n+2012-06-20  David Edelsohn  <dje.gcc@gmail.com>\n+\t    Alan Modra  <amodra@gmail.com>\n+\n+\t* sysdep/powerpc/locks.h (compare_and_swap): Use GCC atomic\n+\tintrinsics.\n+\t(release_set): Same.\n+\t(compare_and_swap_release): Same.\n+\t(read_barrier): Same.\n+\t(write_barrier): Same.\n+\n+2012-06-15  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* sysdep/m68k/locks.h (compare_and_swap): Use\n+\t__sync_bool_compare_and_swap.\n+\t(release_set): Use write_barrier instead of inlining it.\n+\n+2012-06-15  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* sysdep/s390/locks.h (compare_and_swap, release_set)\n+\t(read_barrier, write_barrier): Use the GCC atomic builtins.\n+\n+2012-06-14  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* sysdep/sh/locks.h (__cas_lock): Remove.\n+\t(__cas_start_atomic, __cas_end_atomic): Likewise.\n+\t(compare_and_swap): Call __sync_bool_compare_and_swap.\n+\n+2012-05-21  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/52700\n+\t* configure.ac: Allow gnu, gnu-versioned-namespace for\n+\t--enable-symvers arguments.\n+\t* configure: Regenerate.\n+\n+2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* configure: Regenerated.\n+\n+2012-04-23  Andrew Haley  <aph@redhat.com>\n+\n+\t* defineclass.cc (MAJOR_1_7,  MINOR_1_7): New.\n+\t(parse): Allow MAJOR_1_7 classfile version.\n+\n+2012-04-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libgcj/52645\n+\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (setOption):\n+\tRestore HAVE_INET6 check.\n+\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc (setOption):\n+\tLikewise.\n+\n+2012-03-25  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\tPR libgcj/52694\n+\t* java/io/natVMConsole.cc (IUCLC): Define, if undefined.\n+\t\t\n+2012-03-16  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\t* Makefile.am: Add natVMConsole.cc.\n+\t* Makefile.in: Regenerated.\n+\t* gcj/Makefile.in: Likewise.\n+\t* gcj/javaprims.h: Classes updated.\n+\t* gnu/javax/crypto/key/dh/GnuDHKeyPairGenerator.h,\n+\t* gnu/javax/net/ssl/provider/CipherSuite.h,\n+\t* gnu/javax/net/ssl/provider/OutputSecurityParameters.h,\n+\t* include/Makefile.in:\n+\tRegenerated.\n+\t* java/io/Console.h,\n+\t* java/io/IOError.h,\n+\t* java/io/ObjectOutputStream$2.h:\n+\tInitial generation.\n+\t* java/io/ObjectOutputStream.h: Regenerated.\n+\t* java/io/VMConsole.h: Initial generation.\n+\t* java/io/VMConsole.java: Copied from classpath/vm/reference.\n+\t* java/io/natVMConsole.cc: Implemented readPassword.\n+\t* java/nio/channels/spi/SelectorProvider$1.h,\n+\t* java/security/KeyStore$1.h:\n+\tInitial generation.\n+\t* java/security/ProtectionDomain.h,\n+\t* java/text/DateFormatSymbols.h,\n+\t* java/util/HashMap.h,\n+\t* java/util/regex/Matcher.h,\n+\t* java/util/regex/Pattern.h:\n+\tRegenerated.\n+\t* javax/xml/stream/util/ReaderDelegate.h:\n+\tRemoved.\n+\t* sources.am,\n+\t* testsuite/Makefile.in:\n+\tRegenerated.\n+\n+2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (THREADLIBS): Remove *-*-solaris2.8 handling.\n+\t* configure: Regenerate.\n+\n+2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (libgcj_cv_exidx): Remove IRIX 6 ld workaround.\n+\t(mips-sgi-irix6*): Remove.\n+\t(mips-sgi-irix*): Remove.\n+\t(AC_CHECK_HEADERS): Remove bstring.h.\n+\t* configure: Regenerate.\n+\t* include/config.h.in: Regenerate.\n+\t* configure.host (mips-sgi-irix6*): Remove.\n+\n+\t* include/posix-signal.h [__sgi__]: Remove.\n+\n+\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc\n+\t[HAVE_BSTRING_H]: Remove.\n+\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc: Likewise.\n+\t* gnu/java/net/natPlainSocketImplPosix.cc: Likewise.\n+\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (alpha*-dec-osf*): Remove.\n+\t* configure: Regenerate.\n+\t* configure.host (alpha*-dec-osf*): Remove.\n+\n+\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (setOption): Use\n+\tIPV6_MULTICAST_IF unconditionally.\n+\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc (setOption):\n+\tLikewise.\n+\t* gnu/java/net/natPlainSocketImplPosix.cc\n+\t(gnu::java::net::PlainSocketImpl::accept): Use ::accept instead of\n+\t_Jv_accept.\n+\t* include/posix-signal.h [__alpha__ && __osf__]: Remove.\n+\t* include/posix.h (_POSIX_PII_SOCKET): Don't define.\n+\t(_Jv_accept): Remove.\n+\n+\t* java/io/File.java (File._access): Rename to access.\n+\tChange callers.\n+\t(File._stat): Likewise.\n+\t* java/io/File.h: Regenerate.\n+\t* classpath/lib/java/io/File.class: Regenerate.\n+\t* java/io/natFilePosix.cc (java::io::File::_access): Rename to\n+\taccess.\n+\t(java::io::File::_stat): Rename to stat.\n+\t* java/io/natFileWin32.cc: Likewise.\n+\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):\n+\tRemove alpha*-dec-osf* handling.\n+\t* testsuite/libjava.jvmti/jvmti-interp.exp\n+\t(gcj_jni_compile_c_to_so): Likewise.\n+\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_compile_cxx_to_o):\n+\tLikewise.\n+\n+2012-02-23  Patrick Marlier  <patrick.marlier@gmail.com>\n+\t    Jack Howarth  <howarth@bromo.med.uc.edu>\n+\n+\tPR target/49461\n+\t* configure.ac (SYSTEMSPEC): No longer pass -no_pie for darwin11.\n+\t* configure: Regenerate.\n+\n+2012-02-02  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR libjava/48512\n+\t* configure.ac (THREADSTARTFILESPEC): Don't add crtmet.o file for\n+\tw64 windows targets.\n+\t* configure: Regenerated.\n+\n+2012-02-01  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR target/51500\n+\t* interpret.cc (_Jv_init_cif): Handle thiscall\n+\tconvention for 32-bit Windows.\n+\t* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA):\n+\tLikewise.\n+\t* java/lang/reflect/natVMProxy.cc (invoke_t): Add\n+\tthiscall-attribute for 32-bit Windows.\n+\n+2012-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gnu/gcj/convert/Convert.java (version): Update copyright notice\n+\tdates.\n+\t* gnu/gcj/tools/gcj_dbtool/Main.java (main): Likewise.\n+\f\n+Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "e340a0232fd7316f716441fe97cb8b069811c7f9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 4686, "changes": 4691, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=86a2db336a819376663e4a44141e569dcef21015"}, {"sha": "ed443df32f2095121b404a065e223cd84a47d9b6", "filename": "libstdc++-v3/ChangeLog-1998", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-1998", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-1998", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-1998?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -939,4 +939,9 @@\n \n \t* iterator (class reverse_iterator): Do some tweaks to be in sync\n \tw/ the FDIS.\n+\f\n+Copyright (C) 1998 Free Software Foundation, Inc.\n \n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "846535bf966aa687474c60026aaeb6678f1b85f4", "filename": "libstdc++-v3/ChangeLog-1999", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-1999", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-1999", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-1999?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -3541,4 +3541,9 @@\n \t* bits/std_fstream.h: Set _M_buf_size based on cstdio's BUFSIZ.\n \tRe-implement virtual functions.\n \t* bits/fstream.tcc: Delete unused mf's.\n+\f\n+Copyright (C) 1999 Free Software Foundation, Inc.\n \n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "d81a03d9f51ef6b1685a196221e861f5e8b66898", "filename": "libstdc++-v3/ChangeLog-2000", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2000?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -5641,4 +5641,9 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* docs/index.html, docs/links.html, docs/mail.html,\n \t  docs/status.html, docs/thanks.html, docs/faq/index.txt:  Ditto.\n \t* docs/how.html:  Ditto.  (This file should go away soon.)\n+\f\n+Copyright (C) 2000 Free Software Foundation, Inc.\n \n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "27012af4a39a6da61c146b1d44b049484a16e49b", "filename": "libstdc++-v3/ChangeLog-2001", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2001", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2001", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2001?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -6065,3 +6065,9 @@\n \t* tests_flags.in: Fix typo in usage.\n \n \t* tests_flags.in: Set target specific LIBS for cygwin.\n+\f\n+Copyright (C) 2001 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "a7da86da75b0a78552d9e922198beacef8b1cee6", "filename": "libstdc++-v3/ChangeLog-2002", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2002", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2002", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2002?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -5588,3 +5588,9 @@\n \n \t* configure.in: Add support for NetBSD cross compiles.\n \t* configure: Regenerate.\n+\f\n+Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "3def08eef8b1230f96ee1a8dabf54d709a1ccbd3", "filename": "libstdc++-v3/ChangeLog-2003", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2003", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2003", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2003?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -8617,3 +8617,9 @@\n \t* config/cpu/i486/atomicity.h (__exchange_and_add, __atomic_add):\n \t*__mem is also an output.\n \t* config/cpu/m68k/atomicity.h (__exchange_and_add): Likewise.\n+\f\n+Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "5481e252799720ba0919a54f28212d1a26cdfda1", "filename": "libstdc++-v3/ChangeLog-2004", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2004", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2004", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2004?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -6707,3 +6707,9 @@\n \tDimension _M_atoms_out and _M_atoms_in one position smaller.\n \t(__numpunct_cache<>::_M_cache): Don't zero terminate _M_atoms_out\n \tand _M_atoms_in.\n+\f\n+Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "a71ba23e39f32141035809fa79c08b002632e8de", "filename": "libstdc++-v3/ChangeLog-2005", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2005", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2005", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2005?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -5466,3 +5466,9 @@\n \tnull-terminate array1 at the outset.\n \t* testsuite/27_io/basic_istream/extractors_character/wchar_t/1.cc:\n \tLikewise.\n+\f\n+Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "abfca29c20d4bd854117248904625e9580bba639", "filename": "libstdc++-v3/ChangeLog-2006", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2006", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2006", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2006?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -5849,3 +5849,9 @@\n \tdetail existing @GLIBCXX_3.4 exports of basic_ostream, num_put,\n \tmoney_put, etc., symbols to avoid exporting _M_insert symbols\n \t@GLIBCXX_3.4.\n+\f\n+Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "8c5fcd1056d3f4ce90ecea20c8bc2e7e67aca238", "filename": "libstdc++-v3/ChangeLog-2007", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2007", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2007", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2007?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -8241,3 +8241,9 @@\n \n \t* include/tr1/random (gamma_distribution): Fix typo in formula.\n \t* docs/doxygen/user.cfg.in: Use package amsmath.\n+\f\n+Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "056ae6c84e17bd6306e5f079a7228ac66cb58e3a", "filename": "libstdc++-v3/ChangeLog-2008", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2008", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2008", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2008?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -4799,3 +4799,9 @@\n \trandom_access_iterator_tag, random_access_iterator_tag)): Careful\n \twith undereferenceable iterators.\n \t* testsuite/25_algorithms/sort/34636.cc: New.\n+\f\n+Copyright (C) 2008 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "acfb058c8bbcf5cabf0ff5d9a27ce808a053b8d4", "filename": "libstdc++-v3/ChangeLog-2009", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2009", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2009", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2009?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -12425,3 +12425,9 @@\n \t* testsuite/27_io/basic_istream/read/wchar_t/38678.cc: Likewise.\n \t* testsuite/27_io/basic_ostream/write/char/38678.cc: Likewise.\n \t* testsuite/27_io/basic_ostream/write/wchar_t/38678.cc: Likewise.\n+\f\n+Copyright (C) 2009 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "c4691625d2fc169c6b9910170a6aca461bc16bd1", "filename": "libstdc++-v3/ChangeLog-2010", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2010", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2010", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2010?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -7186,3 +7186,9 @@\n \tLikewise.\n \t* testsuite/ext/vstring/requirements/exception/\n \tgeneration_prohibited.cc: Likewise.\n+\f\n+Copyright (C) 2010 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "37ab4df2759e6ae0c0119426463c4cadde804929", "filename": "libstdc++-v3/ChangeLog-2011", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2011", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2011", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2011?ref=86a2db336a819376663e4a44141e569dcef21015", "patch": "@@ -6356,7 +6356,6 @@\n \n \tPR libstdc++/46922\n \t* config/abi/pre/gnu.ver: Export std::bad_function_call symbols.\n-\n \f\n Copyright (C) 2011 Free Software Foundation, Inc.\n "}, {"sha": "3b53aece35a27377c33b43b169314c38bb76168d", "filename": "libstdc++-v3/ChangeLog-2012", "status": "added", "additions": 4693, "deletions": 0, "changes": 4693, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a2db336a819376663e4a44141e569dcef21015/libstdc%2B%2B-v3%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2012?ref=86a2db336a819376663e4a44141e569dcef21015"}]}