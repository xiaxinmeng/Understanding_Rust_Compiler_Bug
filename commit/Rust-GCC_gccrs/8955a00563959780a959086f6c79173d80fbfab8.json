{"sha": "8955a00563959780a959086f6c79173d80fbfab8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk1NWEwMDU2Mzk1OTc4MGE5NTkwODZmNmM3OTE3M2Q4MGZiZmFiOA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-06-07T23:55:47Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-06-07T23:55:47Z"}, "message": "PR fortran/36420, 36422\n\n2008-06-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/36420, 36422\n\t* io.c (check_format): Add new error message for zero width. Use new\n\terror message for FMT_A and with READ, FMT_G.  Allow FMT_G with WRITE\n\texcept when -std=F95 and -std=F2003.\n\nFrom-SVN: r136544", "tree": {"sha": "1d58e642ddf5d2f00a5f92c47c671095963ad7d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d58e642ddf5d2f00a5f92c47c671095963ad7d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8955a00563959780a959086f6c79173d80fbfab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8955a00563959780a959086f6c79173d80fbfab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8955a00563959780a959086f6c79173d80fbfab8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8955a00563959780a959086f6c79173d80fbfab8/comments", "author": null, "committer": null, "parents": [{"sha": "359ce95f4071f5a1c2fc9e91d712942d713b1037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/359ce95f4071f5a1c2fc9e91d712942d713b1037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/359ce95f4071f5a1c2fc9e91d712942d713b1037"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "91cf3d72c8e4b0d9695de8073d3f2d65b47ae16a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8955a00563959780a959086f6c79173d80fbfab8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8955a00563959780a959086f6c79173d80fbfab8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8955a00563959780a959086f6c79173d80fbfab8", "patch": "@@ -1,3 +1,10 @@\n+2008-06-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36420, 36422\n+\t* io.c (check_format): Add new error message for zero width.\n+\tUse new\terror message for FMT_A and with READ, FMT_G.  Allow\n+\tFMT_G with WRITE except when -std=F95 and -std=F2003.\n+\n 2008-06-07  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/36437"}, {"sha": "9b417c21463aafa17b83e33fed835c1c2ea1a9bd", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8955a00563959780a959086f6c79173d80fbfab8/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8955a00563959780a959086f6c79173d80fbfab8/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=8955a00563959780a959086f6c79173d80fbfab8", "patch": "@@ -476,6 +476,7 @@ check_format (bool is_input)\n   const char *nonneg_required\t  = _(\"Nonnegative width required\");\n   const char *unexpected_element  = _(\"Unexpected element\");\n   const char *unexpected_end\t  = _(\"Unexpected end of format string\");\n+  const char *zero_width\t  = _(\"Zero width in format descriptor\");\n \n   const char *error;\n   format_token t, u;\n@@ -672,6 +673,11 @@ check_format (bool is_input)\n       t = format_lex ();\n       if (t == FMT_ERROR)\n \tgoto fail;\n+      if (t == FMT_ZERO)\n+\t{\n+\t  error = zero_width;\n+\t  goto syntax;\n+\t}\n       if (t != FMT_POSINT)\n \tsaved_token = t;\n       break;\n@@ -681,6 +687,18 @@ check_format (bool is_input)\n     case FMT_G:\n     case FMT_EXT:\n       u = format_lex ();\n+      if (t == FMT_G && u == FMT_ZERO)\n+\t{\n+\t  if (is_input)\n+\t    {\n+\t      error = zero_width;\n+\t      goto syntax;\n+\t    }\n+\t  else\n+\t    return gfc_notify_std (GFC_STD_F2008, \"Fortran F2008: 'G0' in \"\n+\t\t\t\t   \"format at %C\");\n+\t}\n+\n       if (u == FMT_ERROR)\n \tgoto fail;\n       if (u != FMT_POSINT)\n@@ -1711,7 +1729,7 @@ gfc_match_open (void)\n   if (open->round)\n     {\n       /* When implemented, change the following to use gfc_notify_std F2003.  */\n-      gfc_error (\"F2003 Feature: ROUND= specifier at %C not implemented\");\n+      gfc_error (\"Fortran F2003: ROUND= specifier at %C not implemented\");\n       goto cleanup;\n \n       if (open->round->expr_type == EXPR_CONSTANT)"}]}