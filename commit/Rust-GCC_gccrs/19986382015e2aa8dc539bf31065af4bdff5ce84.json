{"sha": "19986382015e2aa8dc539bf31065af4bdff5ce84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk5ODYzODIwMTVlMmFhOGRjNTM5YmYzMTA2NWFmNGJkZmY1Y2U4NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-04-19T12:41:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-04-19T12:41:42Z"}, "message": "re PR tree-optimization/84737 (20% degradation in CPU2000 172.mgrid starting with r256888)\n\n2018-04-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84737\n\t* tree-vect-data-refs.c (vect_copy_ref_info): New function\n\tcopying restrict info.\n\t(vect_setup_realignment): Use it.\n\t* tree-vectorizer.h (vect_copy_ref_info): Declare.\n\t* tree-vect-stmts.c (vectorizable_store): Copy ref info from\n\tthe first DR to all generated stores.\n\t(vectorizable_load): Likewise for loads.\n\nFrom-SVN: r259493", "tree": {"sha": "05e67ae752a6fac4264aa955616ad24dd34a5425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05e67ae752a6fac4264aa955616ad24dd34a5425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19986382015e2aa8dc539bf31065af4bdff5ce84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19986382015e2aa8dc539bf31065af4bdff5ce84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19986382015e2aa8dc539bf31065af4bdff5ce84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19986382015e2aa8dc539bf31065af4bdff5ce84/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "411a771a1761e89b7420dd94bc296d52dc8c6f5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411a771a1761e89b7420dd94bc296d52dc8c6f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/411a771a1761e89b7420dd94bc296d52dc8c6f5c"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "12c2ec10263745d1ab92e8f613e6862f72d9ad5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19986382015e2aa8dc539bf31065af4bdff5ce84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19986382015e2aa8dc539bf31065af4bdff5ce84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19986382015e2aa8dc539bf31065af4bdff5ce84", "patch": "@@ -1,3 +1,14 @@\n+2018-04-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84737\n+\t* tree-vect-data-refs.c (vect_copy_ref_info): New function\n+\tcopying restrict info.\n+\t(vect_setup_realignment): Use it.\n+\t* tree-vectorizer.h (vect_copy_ref_info): Declare.\n+\t* tree-vect-stmts.c (vectorizable_store): Copy ref info from\n+\tthe first DR to all generated stores.\n+\t(vectorizable_load): Likewise for loads.\n+\n 2018-04-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/85446"}, {"sha": "9aabcc18ff9d3f4692d891ed1b84b11d8dedd35b", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19986382015e2aa8dc539bf31065af4bdff5ce84/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19986382015e2aa8dc539bf31065af4bdff5ce84/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=19986382015e2aa8dc539bf31065af4bdff5ce84", "patch": "@@ -5010,6 +5010,27 @@ bump_vector_ptr (tree dataref_ptr, gimple *ptr_incr, gimple_stmt_iterator *gsi,\n }\n \n \n+/* Copy memory reference info such as base/clique from the SRC reference\n+   to the DEST MEM_REF.  */\n+\n+void\n+vect_copy_ref_info (tree dest, tree src)\n+{\n+  if (TREE_CODE (dest) != MEM_REF)\n+    return;\n+\n+  tree src_base = src;\n+  while (handled_component_p (src_base))\n+    src_base = TREE_OPERAND (src_base, 0);\n+  if (TREE_CODE (src_base) != MEM_REF\n+      && TREE_CODE (src_base) != TARGET_MEM_REF)\n+    return;\n+\n+  MR_DEPENDENCE_CLIQUE (dest) = MR_DEPENDENCE_CLIQUE (src_base);\n+  MR_DEPENDENCE_BASE (dest) = MR_DEPENDENCE_BASE (src_base);\n+}\n+\n+\n /* Function vect_create_destination_var.\n \n    Create a new temporary of type VECTYPE.  */\n@@ -5561,6 +5582,7 @@ vect_setup_realignment (gimple *stmt, gimple_stmt_iterator *gsi,\n       data_ref\n \t= build2 (MEM_REF, TREE_TYPE (vec_dest), new_temp,\n \t\t  build_int_cst (reference_alias_ptr_type (DR_REF (dr)), 0));\n+      vect_copy_ref_info (data_ref, DR_REF (dr));\n       new_stmt = gimple_build_assign (vec_dest, data_ref);\n       new_temp = make_ssa_name (vec_dest, new_stmt);\n       gimple_assign_set_lhs (new_stmt, new_temp);"}, {"sha": "3e73118d99119c10e3a60d9b366fba240567f96e", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19986382015e2aa8dc539bf31065af4bdff5ce84/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19986382015e2aa8dc539bf31065af4bdff5ce84/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=19986382015e2aa8dc539bf31065af4bdff5ce84", "patch": "@@ -6660,6 +6660,7 @@ vectorizable_store (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t\t\t\t\t\t group_el * elsz);\n \t\t  newref = build2 (MEM_REF, ltype,\n \t\t\t\t   running_off, this_off);\n+\t\t  vect_copy_ref_info (newref, DR_REF (first_dr));\n \n \t\t  /* And store it to *running_off.  */\n \t\t  assign = gimple_build_assign (newref, elem);\n@@ -7052,6 +7053,7 @@ vectorizable_store (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t\t    TREE_TYPE (data_ref)\n \t\t      = build_aligned_type (TREE_TYPE (data_ref),\n \t\t\t\t\t    TYPE_ALIGN (elem_type));\n+\t\t  vect_copy_ref_info (data_ref, DR_REF (first_dr));\n \t\t  new_stmt = gimple_build_assign (data_ref, vec_oprnd);\n \t\t}\n \t      vect_finish_stmt_generation (stmt, new_stmt, gsi);\n@@ -7659,9 +7661,9 @@ vectorizable_load (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t    {\n \t      tree this_off = build_int_cst (TREE_TYPE (alias_off),\n \t\t\t\t\t     group_el * elsz + cst_offset);\n-\t      new_stmt = gimple_build_assign (make_ssa_name (ltype),\n-\t\t\t\t\t      build2 (MEM_REF, ltype,\n-\t\t\t\t\t\t      running_off, this_off));\n+\t      tree data_ref = build2 (MEM_REF, ltype, running_off, this_off);\n+\t      vect_copy_ref_info (data_ref, DR_REF (first_dr));\n+\t      new_stmt = gimple_build_assign (make_ssa_name (ltype), data_ref);\n \t      vect_finish_stmt_generation (stmt, new_stmt, gsi);\n \t      if (nloads > 1)\n \t\tCONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n@@ -8205,6 +8207,7 @@ vectorizable_load (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t\t    data_ref\n \t\t      = build2 (MEM_REF, vectype, ptr,\n \t\t\t\tbuild_int_cst (ref_type, 0));\n+\t\t    vect_copy_ref_info (data_ref, DR_REF (first_dr));\n \t\t    vec_dest = vect_create_destination_var (scalar_dest,\n \t\t\t\t\t\t\t    vectype);\n \t\t    new_stmt = gimple_build_assign (vec_dest, data_ref);\n@@ -8254,7 +8257,10 @@ vectorizable_load (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t      vec_dest = vect_create_destination_var (scalar_dest, vectype);\n \t      /* DATA_REF is null if we've already built the statement.  */\n \t      if (data_ref)\n-\t\tnew_stmt = gimple_build_assign (vec_dest, data_ref);\n+\t\t{\n+\t\t  vect_copy_ref_info (data_ref, DR_REF (first_dr));\n+\t\t  new_stmt = gimple_build_assign (vec_dest, data_ref);\n+\t\t}\n \t      new_temp = make_ssa_name (vec_dest, new_stmt);\n \t      gimple_set_lhs (new_stmt, new_temp);\n \t      vect_finish_stmt_generation (stmt, new_stmt, gsi);"}, {"sha": "7e2b00f343836bd227cc94caf21e4bbcf329efa4", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19986382015e2aa8dc539bf31065af4bdff5ce84/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19986382015e2aa8dc539bf31065af4bdff5ce84/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=19986382015e2aa8dc539bf31065af4bdff5ce84", "patch": "@@ -1494,6 +1494,7 @@ extern tree vect_create_data_ref_ptr (gimple *, tree, struct loop *, tree,\n \t\t\t\t      tree = NULL_TREE, tree = NULL_TREE);\n extern tree bump_vector_ptr (tree, gimple *, gimple_stmt_iterator *, gimple *,\n \t\t\t     tree);\n+extern void vect_copy_ref_info (tree, tree);\n extern tree vect_create_destination_var (tree, tree);\n extern bool vect_grouped_store_supported (tree, unsigned HOST_WIDE_INT);\n extern bool vect_store_lanes_supported (tree, unsigned HOST_WIDE_INT, bool);"}]}