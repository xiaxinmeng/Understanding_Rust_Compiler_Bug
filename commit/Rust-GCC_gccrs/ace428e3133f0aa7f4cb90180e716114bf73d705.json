{"sha": "ace428e3133f0aa7f4cb90180e716114bf73d705", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNlNDI4ZTMxMzNmMGFhN2Y0Y2I5MDE4MGU3MTYxMTRiZjczZDcwNQ==", "commit": {"author": {"name": "Daniel Kraft", "email": "d@domob.eu", "date": "2008-09-11T07:28:18Z"}, "committer": {"name": "Daniel Kraft", "email": "domob@gcc.gnu.org", "date": "2008-09-11T07:28:18Z"}, "message": "re PR fortran/36214 (Wrong simplification of BOZ constants)\n\n2008-09-11  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/36214\n\t* simplify.c (simplify_cmplx): Added linebreak to long line.\n\t* target-memory.c (gfc_convert_boz): Fix indentation.\n\t(gfc_interpret_float): Set mpfr precision to right value before\n\tcalling mpfr_init.\n\n2008-09-11  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/36214\n\t* gfortran.dg/boz_9.f90: Corrected test.\n\t* gfortran.dg/boz_13.f90: New test.\n\t* gfortran.dg/boz_14.f90: New test.\n\nFrom-SVN: r140264", "tree": {"sha": "4d02a9e80e0692269de3441e8f5312c2554431ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d02a9e80e0692269de3441e8f5312c2554431ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ace428e3133f0aa7f4cb90180e716114bf73d705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace428e3133f0aa7f4cb90180e716114bf73d705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace428e3133f0aa7f4cb90180e716114bf73d705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace428e3133f0aa7f4cb90180e716114bf73d705/comments", "author": {"login": "domob1812", "id": 4943644, "node_id": "MDQ6VXNlcjQ5NDM2NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domob1812", "html_url": "https://github.com/domob1812", "followers_url": "https://api.github.com/users/domob1812/followers", "following_url": "https://api.github.com/users/domob1812/following{/other_user}", "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}", "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions", "organizations_url": "https://api.github.com/users/domob1812/orgs", "repos_url": "https://api.github.com/users/domob1812/repos", "events_url": "https://api.github.com/users/domob1812/events{/privacy}", "received_events_url": "https://api.github.com/users/domob1812/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5993860d25eee7156f523ed54f303c876f10135f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5993860d25eee7156f523ed54f303c876f10135f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5993860d25eee7156f523ed54f303c876f10135f"}], "stats": {"total": 64, "additions": 55, "deletions": 9}, "files": [{"sha": "954d5cdb6ea9563f37fcdab8533c400db69a3e13", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ace428e3133f0aa7f4cb90180e716114bf73d705", "patch": "@@ -1,3 +1,11 @@\n+2008-09-11  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/36214\n+\t* simplify.c (simplify_cmplx): Added linebreak to long line.\n+\t* target-memory.c (gfc_convert_boz): Fix indentation.\n+\t(gfc_interpret_float): Set mpfr precision to right value before\n+\tcalling mpfr_init.\n+\n 2008-09-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* expr.c (find_array_element): Reformat comment."}, {"sha": "c0ac0262050fbefb07cf332bb29c16bbda9fffc6", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=ace428e3133f0aa7f4cb90180e716114bf73d705", "patch": "@@ -884,7 +884,8 @@ simplify_cmplx (const char *name, gfc_expr *x, gfc_expr *y, int kind)\n \t{\n \tcase BT_INTEGER:\n \t  if (!y->is_boz)\n-\t    mpfr_set_z (result->value.complex.i, y->value.integer, GFC_RND_MODE);\n+\t    mpfr_set_z (result->value.complex.i, y->value.integer,\n+\t\t\tGFC_RND_MODE);\n \t  break;\n \n \tcase BT_REAL:"}, {"sha": "72bd6eff2143b9012c30fbeb231cf38a01ae2b86", "filename": "gcc/fortran/target-memory.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ffortran%2Ftarget-memory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ffortran%2Ftarget-memory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftarget-memory.c?ref=ace428e3133f0aa7f4cb90180e716114bf73d705", "patch": "@@ -349,8 +349,9 @@ gfc_interpret_integer (int kind, unsigned char *buffer, size_t buffer_size,\n \n int\n gfc_interpret_float (int kind, unsigned char *buffer, size_t buffer_size,\n-\t\t mpfr_t real)\n+\t\t     mpfr_t real)\n {\n+  gfc_set_model_kind (kind);\n   mpfr_init (real);\n   gfc_conv_tree_to_mpfr (real,\n \t\t\t native_interpret_expr (gfc_get_real_type (kind),\n@@ -699,10 +700,8 @@ gfc_convert_boz (gfc_expr *expr, gfc_typespec *ts)\n     }\n \n   for (index = 0; gfc_integer_kinds[index].kind != 0; ++index)\n-    {\n-\tif ((unsigned) gfc_integer_kinds[index].bit_size >= ts_bit_size)\n-\t  break;\n-    }\n+    if ((unsigned) gfc_integer_kinds[index].bit_size >= ts_bit_size)\n+      break;\n \n   expr->ts.kind = gfc_integer_kinds[index].kind;\n   buffer_size = MAX (buffer_size, size_integer (expr->ts.kind));"}, {"sha": "b42b5dfc2ed0e3186c13f18aab2b82a951f29b30", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ace428e3133f0aa7f4cb90180e716114bf73d705", "patch": "@@ -1,3 +1,10 @@\n+2008-09-11  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/36214\n+\t* gfortran.dg/boz_9.f90: Corrected test.\n+\t* gfortran.dg/boz_13.f90: New test.\n+\t* gfortran.dg/boz_14.f90: New test.\n+\n 2008-09-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/36904"}, {"sha": "a522f82ec873f20cad4140db6804c7d306614b35", "filename": "gcc/testsuite/gfortran.dg/boz_13.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_13.f90?ref=ace428e3133f0aa7f4cb90180e716114bf73d705", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do run }\n+\n+! PR fortran/36214\n+! For BOZ-initialization of floats, the precision used to be wrong sometimes.\n+\n+implicit none\n+   real, parameter :: r = 0.0\n+   real(kind=8), parameter :: rd = real (z'00000000&\n+                                          &402953FD', 8)\n+\n+   if (real (z'00000000&\n+              &402953FD', 8) /= rd) call abort\n+end"}, {"sha": "a6690ce9f9d16a6ff4ea2efd1aeadb93bbab6309", "filename": "gcc/testsuite/gfortran.dg/boz_14.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_14.f90?ref=ace428e3133f0aa7f4cb90180e716114bf73d705", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+\n+! PR fortran/36214\n+! For BOZ-initialization of floats, the precision used to be wrong sometimes.\n+\n+   implicit none\n+   real(4) r\n+   real(8) rd\n+   complex(8) z\n+   rd = &\n+    real (b'00000000000000000000000000000000&\n+           &01000000001010010101001111111101',8)\n+   z  = &\n+    cmplx(b'00000000000000000000000000000000&\n+           &01000000001010010101001111111101',0,8)\n+   r = 0.\n+   if (z /= rd) call abort\n+   end"}, {"sha": "1488c6dc8be6ccb712d462d58bcc1d923590ec22", "filename": "gcc/testsuite/gfortran.dg/boz_9.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace428e3133f0aa7f4cb90180e716114bf73d705/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_9.f90?ref=ace428e3133f0aa7f4cb90180e716114bf73d705", "patch": "@@ -22,13 +22,13 @@ program f2003\n \n if (r2c /= 13107.0) call abort()\n if (rc  /= 1.83668190E-41) call abort()\n-if (dc /= 0.30102999566398120) call abort()\n+if (dc /= 0.30102999566398120d0) call abort()\n if (real(z1c) /= 2.94272678E-44 .or. aimag(z1c) /= -4.0) call abort()\n if (real(z2c) /= 5.0 .or. aimag(z2c) /= 9.48679060E-43) call abort()\n \n if (r2 /= 13107.0) call abort()\n if (r  /= 1.83668190E-41) call abort()\n-if (d /= 0.30102999566398120) call abort()\n+if (d /= 0.30102999566398120d0) call abort()\n if (real(z1) /= 2.94272678E-44 .or. aimag(z1) /= -4.0) call abort()\n if (real(z2) /= 5.0 .or. aimag(z2) /= 9.48679060E-43) call abort()\n \n@@ -40,7 +40,7 @@ program f2003\n \n if (r2 /= 13107.0) call abort()\n if (r  /= 1.83668190E-41) call abort()\n-if (d /= 0.30102999566398120) call abort()\n+if (d /= 0.30102999566398120d0) call abort()\n if (real(z1) /= 2.94272678E-44 .or. aimag(z1) /= -4.0) call abort()\n if (real(z2) /= 5.0 .or. aimag(z2) /= 9.48679060E-43) call abort()\n "}]}