{"sha": "899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk5Y2E5MGU2ZGVmYjlkNjNlMDM3NjRjZWI5YWZlMGZjOTRmYmRiMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2016-11-18T10:03:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2016-11-18T10:03:12Z"}, "message": "Add SET_DECL_MODE\n\nThis may no longer be necessary with the current version\nof the SVE patches, but it does at least make things consistent\nwith the TYPE_MODE/SET_TYPE_MODE split.\n\ngcc/ada/\n2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>\n\n\t* gcc-interface/utils.c (create_label_decl): Use SET_DECL_MODE.\n\ngcc/c/\n2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>\n\n\t* c-decl.c (merge_decls): Use SET_DECL_MODE.\n\t(make_label, finish_struct): Likewise.\n\ngcc/cp/\n2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>\n\n\t* class.c (finish_struct_bits): Use SET_DECL_MODE.\n\t(build_base_field_1, layout_class_type, finish_struct_1): Likewise.\n\t* decl.c (make_label_decl): Likewise.\n\t* pt.c (tsubst_decl): Likewise.\n\ngcc/fortran/\n2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>\n\n\t* trans-common.c (build_common_decl): Use SET_DECL_MODE.\n\t* trans-decl.c (gfc_build_label_decl): Likewise.\n\t* trans-types.c (gfc_get_array_descr_info): Likewise.\n\ngcc/lto/\n2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>\n\n\t* lto.c (offload_handle_link_vars): Use SET_DECL_MODE.\n\ngcc/\n2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>\n\n\t* tree.h (SET_DECL_MODE): New macro.\n\t* cfgexpand.c (avoid_deep_ter_for_debug): Use SET_DECL_MODE.\n\t(expand_gimple_basic_block): Likewise.\n\t* function.c (split_complex_args): Likeise.\n\t* ipa-prop.c (ipa_modify_call_arguments): Likewise.\n\t* omp-simd-clone.c (ipa_simd_modify_stmt_ops): Likewise.\n\t* stor-layout.c (layout_decl, relayout_decl): Likewise.\n\t(finish_bitfield_representative): Likewise.\n\t* tree.c (make_node_stat): Likewise.\n\t* tree-inline.c (remap_ssa_name): Likewise.\n\t(tree_function_versioning): Likewise.\n\t* tree-into-ssa.c (rewrite_debug_stmt_uses): Likewise.\n\t* tree-sra.c (sra_ipa_reset_debug_stmts): Likewise.\n\t* tree-ssa-ccp.c (optimize_atomic_bit_test_and): Likewise.\n\t* tree-ssa-loop-ivopts.c (remove_unused_ivs): Likewise.\n\t* tree-ssa.c (insert_debug_temp_for_var_def): Likewise.\n\t* tree-streamer-in.c (unpack_ts_decl_common_value_fields): Likewise.\n\t* varasm.c (make_debug_expr_from_rtl): Likewise.\n\nlibcc1/\n2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>\n\n\t* plugin.cc (plugin_build_add_field): Use SET_DECL_MODE.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r242585", "tree": {"sha": "3c7512e4e362d4e71c653aa946dcf4f0f470ccd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c7512e4e362d4e71c653aa946dcf4f0f470ccd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd36a4518d14aae18ac89a6232e009ee2bcb6008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd36a4518d14aae18ac89a6232e009ee2bcb6008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd36a4518d14aae18ac89a6232e009ee2bcb6008"}], "stats": {"total": 143, "additions": 105, "deletions": 38}, "files": [{"sha": "b4291641e67f89bf7d4864ab69de3fa10fde1c8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1,3 +1,26 @@\n+2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n+ \t    Alan Hayward  <alan.hayward@arm.com>\n+ \t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* tree.h (SET_DECL_MODE): New macro.\n+\t* cfgexpand.c (avoid_deep_ter_for_debug): Use SET_DECL_MODE.\n+\t(expand_gimple_basic_block): Likewise.\n+\t* function.c (split_complex_args): Likeise.\n+\t* ipa-prop.c (ipa_modify_call_arguments): Likewise.\n+\t* omp-simd-clone.c (ipa_simd_modify_stmt_ops): Likewise.\n+\t* stor-layout.c (layout_decl, relayout_decl): Likewise.\n+\t(finish_bitfield_representative): Likewise.\n+\t* tree.c (make_node_stat): Likewise.\n+\t* tree-inline.c (remap_ssa_name): Likewise.\n+\t(tree_function_versioning): Likewise.\n+\t* tree-into-ssa.c (rewrite_debug_stmt_uses): Likewise.\n+\t* tree-sra.c (sra_ipa_reset_debug_stmts): Likewise.\n+\t* tree-ssa-ccp.c (optimize_atomic_bit_test_and): Likewise.\n+\t* tree-ssa-loop-ivopts.c (remove_unused_ivs): Likewise.\n+\t* tree-ssa.c (insert_debug_temp_for_var_def): Likewise.\n+\t* tree-streamer-in.c (unpack_ts_decl_common_value_fields): Likewise.\n+\t* varasm.c (make_debug_expr_from_rtl): Likewise.\n+\n 2016-11-18  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/71785"}, {"sha": "c72ac09e1483b6f43080e7eed7b08af3c3590994", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1,3 +1,9 @@\n+2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n+ \t    Alan Hayward  <alan.hayward@arm.com>\n+ \t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* gcc-interface/utils.c (create_label_decl): Use SET_DECL_MODE.\n+\n 2016-11-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/Makefile.in: Replace s-interr-hwint.adb with"}, {"sha": "fd6c2029d035529386d930028caf32c20fe366a9", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -3111,7 +3111,7 @@ create_label_decl (tree name, Node_Id gnat_node)\n   tree label_decl\n     = build_decl (input_location, LABEL_DECL, name, void_type_node);\n \n-  DECL_MODE (label_decl) = VOIDmode;\n+  SET_DECL_MODE (label_decl, VOIDmode);\n \n   /* Add this decl to the current binding level.  */\n   gnat_pushdecl (label_decl, gnat_node);"}, {"sha": "98bb93851d99f2898ee4a2df5311b54df6090a8d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1,3 +1,10 @@\n+2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n+ \t    Alan Hayward  <alan.hayward@arm.com>\n+ \t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* c-decl.c (merge_decls): Use SET_DECL_MODE.\n+\t(make_label, finish_struct): Likewise.\n+\n 2016-11-14  Prasad Ghangal  <prasad.ghangal@gmail.com>\n \t    Richard Biener  <rguenther@suse.de>\n "}, {"sha": "23581447a35069956012b0a4865b168f042f846a", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -2373,7 +2373,7 @@ merge_decls (tree newdecl, tree olddecl, tree newtype, tree oldtype)\n       /* Since the type is OLDDECL's, make OLDDECL's size go with.  */\n       DECL_SIZE (newdecl) = DECL_SIZE (olddecl);\n       DECL_SIZE_UNIT (newdecl) = DECL_SIZE_UNIT (olddecl);\n-      DECL_MODE (newdecl) = DECL_MODE (olddecl);\n+      SET_DECL_MODE (newdecl, DECL_MODE (olddecl));\n       if (DECL_ALIGN (olddecl) > DECL_ALIGN (newdecl))\n \t{\n \t  SET_DECL_ALIGN (newdecl, DECL_ALIGN (olddecl));\n@@ -3521,7 +3521,7 @@ make_label (location_t location, tree name, bool defining,\n {\n   tree label = build_decl (location, LABEL_DECL, name, void_type_node);\n   DECL_CONTEXT (label) = current_function_decl;\n-  DECL_MODE (label) = VOIDmode;\n+  SET_DECL_MODE (label, VOIDmode);\n \n   c_label_vars *label_vars = ggc_alloc<c_label_vars> ();\n   label_vars->shadowed = NULL;\n@@ -7995,7 +7995,7 @@ finish_struct (location_t loc, tree t, tree fieldlist, tree attributes,\n \t    {\n \t      TREE_TYPE (field)\n \t\t= c_build_bitfield_integer_type (width, TYPE_UNSIGNED (type));\n-\t      DECL_MODE (field) = TYPE_MODE (TREE_TYPE (field));\n+\t      SET_DECL_MODE (field, TYPE_MODE (TREE_TYPE (field)));\n \t    }\n \t  DECL_INITIAL (field) = 0;\n \t}"}, {"sha": "9cca6111ee4fa691e5548cde9aa78b482dde45dd", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -4053,7 +4053,7 @@ avoid_deep_ter_for_debug (gimple *stmt, int depth)\n \t  gimple *def_temp = gimple_build_debug_bind (vexpr, use, g);\n \t  DECL_ARTIFICIAL (vexpr) = 1;\n \t  TREE_TYPE (vexpr) = TREE_TYPE (use);\n-\t  DECL_MODE (vexpr) = TYPE_MODE (TREE_TYPE (use));\n+\t  SET_DECL_MODE (vexpr, TYPE_MODE (TREE_TYPE (use)));\n \t  gimple_stmt_iterator gsi = gsi_for_stmt (g);\n \t  gsi_insert_after (&gsi, def_temp, GSI_NEW_STMT);\n \t  avoid_deep_ter_for_debug (def_temp, 0);\n@@ -5581,7 +5581,7 @@ expand_gimple_basic_block (basic_block bb, bool disable_tail_calls)\n \t\t      mode = DECL_MODE (value);\n \t\t    else\n \t\t      mode = TYPE_MODE (TREE_TYPE (value));\n-\t\t    DECL_MODE (vexpr) = mode;\n+\t\t    SET_DECL_MODE (vexpr, mode);\n \n \t\t    val = gen_rtx_VAR_LOCATION\n \t\t\t(mode, vexpr, (rtx)value, VAR_INIT_STATUS_INITIALIZED);"}, {"sha": "21a18306afd1dacb72d4d6541c419d70ac9021be", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1,3 +1,12 @@\n+2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n+ \t    Alan Hayward  <alan.hayward@arm.com>\n+ \t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* class.c (finish_struct_bits): Use SET_DECL_MODE.\n+\t(build_base_field_1, layout_class_type, finish_struct_1): Likewise.\n+\t* decl.c (make_label_decl): Likewise.\n+\t* pt.c (tsubst_decl): Likewise.\n+\n 2016-11-17  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/78193 - inherited ctor regressions on sparc32."}, {"sha": "df4d73c4d3068c260b94b0b73cf51a845f0b91ea", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -2129,7 +2129,7 @@ finish_struct_bits (tree t)\n       || TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t))\n     {\n       tree variants;\n-      DECL_MODE (TYPE_MAIN_DECL (t)) = BLKmode;\n+      SET_DECL_MODE (TYPE_MAIN_DECL (t), BLKmode);\n       for (variants = t; variants; variants = TYPE_NEXT_VARIANT (variants))\n \t{\n \t  SET_TYPE_MODE (variants, BLKmode);\n@@ -4525,7 +4525,7 @@ build_base_field_1 (tree t, tree basetype, tree *&next_field)\n   DECL_SIZE_UNIT (decl) = CLASSTYPE_SIZE_UNIT (basetype);\n   SET_DECL_ALIGN (decl, CLASSTYPE_ALIGN (basetype));\n   DECL_USER_ALIGN (decl) = CLASSTYPE_USER_ALIGN (basetype);\n-  DECL_MODE (decl) = TYPE_MODE (basetype);\n+  SET_DECL_MODE (decl, TYPE_MODE (basetype));\n   DECL_FIELD_IS_BASE (decl) = 1;\n \n   /* Add the new FIELD_DECL to the list of fields for T.  */\n@@ -6502,7 +6502,7 @@ layout_class_type (tree t, tree *virtuals_p)\n \t     field is effectively invisible.  */\n \t  DECL_SIZE (field) = TYPE_SIZE (type);\n \t  /* We must also reset the DECL_MODE of the field.  */\n-\t  DECL_MODE (field) = TYPE_MODE (type);\n+\t  SET_DECL_MODE (field, TYPE_MODE (type));\n \t}\n       else\n \tlayout_nonempty_base_or_field (rli, field, NULL_TREE,\n@@ -7285,7 +7285,7 @@ finish_struct_1 (tree t)\n     if (VAR_P (x) && TREE_STATIC (x)\n         && TREE_TYPE (x) != error_mark_node\n \t&& same_type_p (TYPE_MAIN_VARIANT (TREE_TYPE (x)), t))\n-      DECL_MODE (x) = TYPE_MODE (t);\n+      SET_DECL_MODE (x, TYPE_MODE (t));\n \n   /* Done with FIELDS...now decide whether to sort these for\n      faster lookups later."}, {"sha": "19550f3e16e55f8b882f15ea2017645934fc5564", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -2967,7 +2967,7 @@ make_label_decl (tree id, int local_p)\n   decl = build_decl (input_location, LABEL_DECL, id, void_type_node);\n \n   DECL_CONTEXT (decl) = current_function_decl;\n-  DECL_MODE (decl) = VOIDmode;\n+  SET_DECL_MODE (decl, VOIDmode);\n   C_DECLARED_LABEL_FLAG (decl) = local_p;\n \n   /* Say where one reference is to the label, for the sake of the"}, {"sha": "6a68de24bbb11a8d0c924d900fa3506d549d5ce2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -12570,7 +12570,7 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t   see [temp.inst].  */\n \tDECL_INITIAL (r) = NULL_TREE;\n \tif (VAR_P (r))\n-\t  DECL_MODE (r) = VOIDmode;\n+\t  SET_DECL_MODE (r, VOIDmode);\n \tif (CODE_CONTAINS_STRUCT (TREE_CODE (t), TS_DECL_WRTL))\n \t  SET_DECL_RTL (r, NULL);\n \tDECL_SIZE (r) = DECL_SIZE_UNIT (r) = 0;"}, {"sha": "619da1baa2079826be459122bbbf7de5a7103cf0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1,3 +1,11 @@\n+2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n+ \t    Alan Hayward  <alan.hayward@arm.com>\n+ \t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* trans-common.c (build_common_decl): Use SET_DECL_MODE.\n+\t* trans-decl.c (gfc_build_label_decl): Likewise.\n+\t* trans-types.c (gfc_get_array_descr_info): Likewise.\n+\n 2016-11-17  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/66227"}, {"sha": "3207105505d2c1f82fc37a05c90e0e1c4d8eae1f", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -408,7 +408,7 @@ build_common_decl (gfc_common_head *com, tree union_type, bool is_init)\n \t{\n \t  DECL_SIZE (decl) = TYPE_SIZE (union_type);\n \t  DECL_SIZE_UNIT (decl) = size;\n-\t  DECL_MODE (decl) = TYPE_MODE (union_type);\n+\t  SET_DECL_MODE (decl, TYPE_MODE (union_type));\n \t  TREE_TYPE (decl) = union_type;\n \t  layout_decl (decl, 0);\n \t}"}, {"sha": "ba71a21b7880844d20b636a102523c8ad2ddbd42", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -274,7 +274,7 @@ gfc_build_label_decl (tree label_id)\n   label_decl = build_decl (input_location,\n \t\t\t   LABEL_DECL, label_id, void_type_node);\n   DECL_CONTEXT (label_decl) = current_function_decl;\n-  DECL_MODE (label_decl) = VOIDmode;\n+  SET_DECL_MODE (label_decl, VOIDmode);\n \n   /* We always define the label as used, even if the original source\n      file never references the label.  We don't want all kinds of"}, {"sha": "354308f8d9d658fc19aff3c295ac58a339b4405d", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -3188,7 +3188,7 @@ gfc_get_array_descr_info (const_tree type, struct array_descr_info *info)\n       base_decl = make_node (DEBUG_EXPR_DECL);\n       DECL_ARTIFICIAL (base_decl) = 1;\n       TREE_TYPE (base_decl) = indirect ? build_pointer_type (ptype) : ptype;\n-      DECL_MODE (base_decl) = TYPE_MODE (TREE_TYPE (base_decl));\n+      SET_DECL_MODE (base_decl, TYPE_MODE (TREE_TYPE (base_decl)));\n       GFC_TYPE_ARRAY_BASE_DECL (type, indirect) = base_decl;\n     }\n   info->base_decl = base_decl;"}, {"sha": "491f3d1d2d6edf6fd913e900a132de11307e59f1", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -2322,7 +2322,7 @@ split_complex_args (vec<tree> *args)\n \t  p = copy_node (p);\n \t  TREE_TYPE (p) = subtype;\n \t  DECL_ARG_TYPE (p) = TREE_TYPE (DECL_ARG_TYPE (p));\n-\t  DECL_MODE (p) = VOIDmode;\n+\t  SET_DECL_MODE (p, VOIDmode);\n \t  DECL_SIZE (p) = NULL;\n \t  DECL_SIZE_UNIT (p) = NULL;\n \t  /* If this arg must go in memory, put it in a pseudo here."}, {"sha": "90c19fc06c514b5d0d67eb83397944a9be93f9a8", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -4344,7 +4344,7 @@ ipa_modify_call_arguments (struct cgraph_edge *cs, gcall *stmt,\n \t      ddecl = make_node (DEBUG_EXPR_DECL);\n \t      DECL_ARTIFICIAL (ddecl) = 1;\n \t      TREE_TYPE (ddecl) = TREE_TYPE (origin);\n-\t      DECL_MODE (ddecl) = DECL_MODE (origin);\n+\t      SET_DECL_MODE (ddecl, DECL_MODE (origin));\n \n \t      vec_safe_push (*debug_args, origin);\n \t      vec_safe_push (*debug_args, ddecl);"}, {"sha": "447c9698c15add67f87694c96190c5e28482ee5f", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1,3 +1,9 @@\n+2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n+ \t    Alan Hayward  <alan.hayward@arm.com>\n+ \t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* lto.c (offload_handle_link_vars): Use SET_DECL_MODE.\n+\n 2016-10-31  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/78129"}, {"sha": "a01b4813f36961fbb514ba33ebef177ba0958166", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -3242,7 +3242,7 @@ offload_handle_link_vars (void)\n \tTREE_TYPE (link_ptr_var) = type;\n \tTREE_USED (link_ptr_var) = 1;\n \tTREE_STATIC (link_ptr_var) = 1;\n-\tDECL_MODE (link_ptr_var) = TYPE_MODE (type);\n+\tSET_DECL_MODE (link_ptr_var, TYPE_MODE (type));\n \tDECL_SIZE (link_ptr_var) = TYPE_SIZE (type);\n \tDECL_SIZE_UNIT (link_ptr_var) = TYPE_SIZE_UNIT (type);\n \tDECL_ARTIFICIAL (link_ptr_var) = 1;"}, {"sha": "15f80ab0766cd53b333406da31727d149ef0669f", "filename": "gcc/omp-simd-clone.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fomp-simd-clone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fomp-simd-clone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-simd-clone.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -868,7 +868,7 @@ ipa_simd_modify_stmt_ops (tree *tp, int *walk_subtrees, void *data)\n \t  stmt = gimple_build_debug_source_bind (vexpr, repl, NULL);\n \t  DECL_ARTIFICIAL (vexpr) = 1;\n \t  TREE_TYPE (vexpr) = TREE_TYPE (repl);\n-\t  DECL_MODE (vexpr) = TYPE_MODE (TREE_TYPE (repl));\n+\t  SET_DECL_MODE (vexpr, TYPE_MODE (TREE_TYPE (repl)));\n \t  repl = vexpr;\n \t}\n       else"}, {"sha": "9f8efcb8ab7ab6af53b24be7d28ceaf197a6f1a7", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -616,7 +616,7 @@ layout_decl (tree decl, unsigned int known_align)\n \n   DECL_UNSIGNED (decl) = TYPE_UNSIGNED (type);\n   if (DECL_MODE (decl) == VOIDmode)\n-    DECL_MODE (decl) = TYPE_MODE (type);\n+    SET_DECL_MODE (decl, TYPE_MODE (type));\n \n   if (DECL_SIZE (decl) == 0)\n     {\n@@ -682,7 +682,7 @@ layout_decl (tree decl, unsigned int known_align)\n \t\t  && (known_align == 0 || known_align >= xalign))\n \t\t{\n \t\t  SET_DECL_ALIGN (decl, MAX (xalign, DECL_ALIGN (decl)));\n-\t\t  DECL_MODE (decl) = xmode;\n+\t\t  SET_DECL_MODE (decl, xmode);\n \t\t  DECL_BIT_FIELD (decl) = 0;\n \t\t}\n \t    }\n@@ -776,7 +776,7 @@ void\n relayout_decl (tree decl)\n {\n   DECL_SIZE (decl) = DECL_SIZE_UNIT (decl) = 0;\n-  DECL_MODE (decl) = VOIDmode;\n+  SET_DECL_MODE (decl, VOIDmode);\n   if (!DECL_USER_ALIGN (decl))\n     SET_DECL_ALIGN (decl, 0);\n   if (DECL_RTL_SET_P (decl))\n@@ -1906,7 +1906,7 @@ finish_bitfield_representative (tree repr, tree field)\n \t [0, 15] HImode for a and b, [8, 23] HImode for c.  */\n       DECL_SIZE (repr) = bitsize_int (bitsize);\n       DECL_SIZE_UNIT (repr) = size_int (bitsize / BITS_PER_UNIT);\n-      DECL_MODE (repr) = BLKmode;\n+      SET_DECL_MODE (repr, BLKmode);\n       TREE_TYPE (repr) = build_array_type_nelts (unsigned_char_type_node,\n \t\t\t\t\t\t bitsize / BITS_PER_UNIT);\n     }\n@@ -1915,7 +1915,7 @@ finish_bitfield_representative (tree repr, tree field)\n       unsigned HOST_WIDE_INT modesize = GET_MODE_BITSIZE (mode);\n       DECL_SIZE (repr) = bitsize_int (modesize);\n       DECL_SIZE_UNIT (repr) = size_int (modesize / BITS_PER_UNIT);\n-      DECL_MODE (repr) = mode;\n+      SET_DECL_MODE (repr, mode);\n       TREE_TYPE (repr) = lang_hooks.types.type_for_mode (mode, 1);\n     }\n "}, {"sha": "0de0b89dbbfbcafb5506ed8e412d1310be5e5f6f", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -214,7 +214,7 @@ remap_ssa_name (tree name, copy_body_data *id)\n \t  def_temp = gimple_build_debug_source_bind (vexpr, val, NULL);\n \t  DECL_ARTIFICIAL (vexpr) = 1;\n \t  TREE_TYPE (vexpr) = TREE_TYPE (name);\n-\t  DECL_MODE (vexpr) = DECL_MODE (SSA_NAME_VAR (name));\n+\t  SET_DECL_MODE (vexpr, DECL_MODE (SSA_NAME_VAR (name)));\n \t  gsi = gsi_after_labels (single_succ (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n \t  gsi_insert_before (&gsi, def_temp, GSI_SAME_STMT);\n \t  return vexpr;\n@@ -6070,7 +6070,7 @@ tree_function_versioning (tree old_decl, tree new_decl,\n \t    ddecl = make_node (DEBUG_EXPR_DECL);\n \t    DECL_ARTIFICIAL (ddecl) = 1;\n \t    TREE_TYPE (ddecl) = TREE_TYPE (parm);\n-\t    DECL_MODE (ddecl) = DECL_MODE (parm);\n+\t    SET_DECL_MODE (ddecl, DECL_MODE (parm));\n \t    vec_safe_push (*debug_args, DECL_ORIGIN (parm));\n \t    vec_safe_push (*debug_args, ddecl);\n \t  }\n@@ -6102,7 +6102,7 @@ tree_function_versioning (tree old_decl, tree new_decl,\n \t      parm = (**debug_args)[i];\n \t      DECL_ARTIFICIAL (vexpr) = 1;\n \t      TREE_TYPE (vexpr) = TREE_TYPE (parm);\n-\t      DECL_MODE (vexpr) = DECL_MODE (parm);\n+\t      SET_DECL_MODE (vexpr, DECL_MODE (parm));\n \t      def_temp = gimple_build_debug_bind (var, vexpr, NULL);\n \t      gsi_insert_before (&cgsi, def_temp, GSI_NEW_STMT);\n \t      def_temp = gimple_build_debug_source_bind (vexpr, parm, NULL);"}, {"sha": "cf9c2a078e091fd7001b4a2bf8134bd87117e89c", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1229,7 +1229,7 @@ rewrite_debug_stmt_uses (gimple *stmt)\n \t\t  def_temp = gimple_build_debug_source_bind (def, var, NULL);\n \t\t  DECL_ARTIFICIAL (def) = 1;\n \t\t  TREE_TYPE (def) = TREE_TYPE (var);\n-\t\t  DECL_MODE (def) = DECL_MODE (var);\n+\t\t  SET_DECL_MODE (def, DECL_MODE (var));\n \t\t  gsi =\n \t\t gsi_after_labels (single_succ (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n \t\t  gsi_insert_before (&gsi, def_temp, GSI_SAME_STMT);"}, {"sha": "12dae4a365b14606da83ed708c7c084e9b4f4333", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -5000,7 +5000,7 @@ sra_ipa_reset_debug_stmts (ipa_parm_adjustment_vec adjustments)\n \t\t\t\t\t\t\t   NULL);\n \t\tDECL_ARTIFICIAL (vexpr) = 1;\n \t\tTREE_TYPE (vexpr) = TREE_TYPE (name);\n-\t\tDECL_MODE (vexpr) = DECL_MODE (adj->base);\n+\t\tSET_DECL_MODE (vexpr, DECL_MODE (adj->base));\n \t\tgsi_insert_before (gsip, def_temp, GSI_SAME_STMT);\n \t      }\n \t    if (vexpr)"}, {"sha": "f89da708f42e4e2d1555e9db0b27cd25e657977c", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -2905,7 +2905,7 @@ optimize_atomic_bit_test_and (gimple_stmt_iterator *gsip,\n       tree temp = make_node (DEBUG_EXPR_DECL);\n       DECL_ARTIFICIAL (temp) = 1;\n       TREE_TYPE (temp) = TREE_TYPE (lhs);\n-      DECL_MODE (temp) = TYPE_MODE (TREE_TYPE (lhs));\n+      SET_DECL_MODE (temp, TYPE_MODE (TREE_TYPE (lhs)));\n       tree t = build2 (LSHIFT_EXPR, TREE_TYPE (lhs), new_lhs, bit);\n       g = gimple_build_debug_bind (temp, t, g);\n       gsi_insert_after (&gsi, g, GSI_NEW_STMT);"}, {"sha": "2655c2346cc3ae2e7a66a7a77ecb32ec1f411c87", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -7589,9 +7589,9 @@ remove_unused_ivs (struct ivopts_data *data)\n \t\t  DECL_ARTIFICIAL (vexpr) = 1;\n \t\t  TREE_TYPE (vexpr) = TREE_TYPE (comp);\n \t\t  if (SSA_NAME_VAR (def))\n-\t\t    DECL_MODE (vexpr) = DECL_MODE (SSA_NAME_VAR (def));\n+\t\t    SET_DECL_MODE (vexpr, DECL_MODE (SSA_NAME_VAR (def)));\n \t\t  else\n-\t\t    DECL_MODE (vexpr) = TYPE_MODE (TREE_TYPE (vexpr));\n+\t\t    SET_DECL_MODE (vexpr, TYPE_MODE (TREE_TYPE (vexpr)));\n \t\t  gdebug *def_temp\n \t\t    = gimple_build_debug_bind (vexpr, comp, NULL);\n \t\t  gimple_stmt_iterator gsi;"}, {"sha": "62eea8bb8a4b7d18cf364f06b38527f9d6370d50", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -432,9 +432,9 @@ insert_debug_temp_for_var_def (gimple_stmt_iterator *gsi, tree var)\n \t  DECL_ARTIFICIAL (vexpr) = 1;\n \t  TREE_TYPE (vexpr) = TREE_TYPE (value);\n \t  if (DECL_P (value))\n-\t    DECL_MODE (vexpr) = DECL_MODE (value);\n+\t    SET_DECL_MODE (vexpr, DECL_MODE (value));\n \t  else\n-\t    DECL_MODE (vexpr) = TYPE_MODE (TREE_TYPE (value));\n+\t    SET_DECL_MODE (vexpr, TYPE_MODE (TREE_TYPE (value)));\n \n \t  if (gsi)\n \t    gsi_insert_before (gsi, def_temp, GSI_SAME_STMT);"}, {"sha": "3d8a7bb63d9b8aefba41c891a869ee4ee69d5d2c", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -220,7 +220,7 @@ unpack_ts_fixed_cst_value_fields (struct bitpack_d *bp, tree expr)\n static void\n unpack_ts_decl_common_value_fields (struct bitpack_d *bp, tree expr)\n {\n-  DECL_MODE (expr) = bp_unpack_machine_mode (bp);\n+  SET_DECL_MODE (expr, bp_unpack_machine_mode (bp));\n   DECL_NONLOCAL (expr) = (unsigned) bp_unpack_value (bp, 1);\n   DECL_VIRTUAL_P (expr) = (unsigned) bp_unpack_value (bp, 1);\n   DECL_IGNORED_P (expr) = (unsigned) bp_unpack_value (bp, 1);"}, {"sha": "adf140fe94c919e77b1bff6163c38b860a88de11", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1020,7 +1020,7 @@ make_node_stat (enum tree_code code MEM_STAT_DECL)\n \t  if (code == FUNCTION_DECL)\n \t    {\n \t      SET_DECL_ALIGN (t, FUNCTION_ALIGNMENT (FUNCTION_BOUNDARY));\n-\t      DECL_MODE (t) = FUNCTION_MODE;\n+\t      SET_DECL_MODE (t, FUNCTION_MODE);\n \t    }\n \t  else\n \t    SET_DECL_ALIGN (t, 1);"}, {"sha": "b0b3f05570c323b4aa56b1eaf2a61fc5677943bf", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -2350,6 +2350,8 @@ extern machine_mode element_mode (const_tree t);\n    field.  Always equal to TYPE_MODE (TREE_TYPE (decl)) except for a\n    FIELD_DECL.  */\n #define DECL_MODE(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.mode)\n+#define SET_DECL_MODE(NODE, MODE) \\\n+  (DECL_COMMON_CHECK (NODE)->decl_common.mode = (MODE))\n \n /* For FUNCTION_DECL, if it is built-in, this identifies which built-in\n    operation it is.  Note, however, that this field is overloaded, with"}, {"sha": "2c238950834831938bd1045368954e3119f59d7c", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -7628,7 +7628,7 @@ make_debug_expr_from_rtl (const_rtx exp)\n     TREE_TYPE (ddecl) = type;\n   else\n     TREE_TYPE (ddecl) = lang_hooks.types.type_for_mode (mode, 1);\n-  DECL_MODE (ddecl) = mode;\n+  SET_DECL_MODE (ddecl, mode);\n   dval = gen_rtx_DEBUG_EXPR (mode);\n   DEBUG_EXPR_TREE_DECL (dval) = ddecl;\n   SET_DECL_RTL (ddecl, dval);"}, {"sha": "95bdc43200c58a82985240de97195fcda4d0d15c", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -1,3 +1,9 @@\n+2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n+ \t    Alan Hayward  <alan.hayward@arm.com>\n+ \t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* plugin.cc (plugin_build_add_field): Use SET_DECL_MODE.\n+\n 2016-06-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tUpdate copyrights."}, {"sha": "5980b8b1487aa533b9d13adcc13ea0de8a44828d", "filename": "libcc1/plugin.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/libcc1%2Fplugin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/899ca90e6defb9d63e03764ceb9afe0fc94fbdb1/libcc1%2Fplugin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fplugin.cc?ref=899ca90e6defb9d63e03764ceb9afe0fc94fbdb1", "patch": "@@ -511,7 +511,7 @@ plugin_build_add_field (cc1_plugin::connection *,\n \t= c_build_bitfield_integer_type (bitsize, TYPE_UNSIGNED (field_type));\n     }\n \n-  DECL_MODE (decl) = TYPE_MODE (TREE_TYPE (decl));\n+  SET_DECL_MODE (decl, TYPE_MODE (TREE_TYPE (decl)));\n \n   // There's no way to recover this from DWARF.\n   SET_DECL_OFFSET_ALIGN (decl, TYPE_PRECISION (pointer_sized_int_node));"}]}