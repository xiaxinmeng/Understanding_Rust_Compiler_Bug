{"sha": "d06dc8a2c73735e9496f434787ba4c93ceee5eea", "node_id": "C_kwDOANBUbNoAKGQwNmRjOGEyYzczNzM1ZTk0OTZmNDM0Nzg3YmE0YzkzY2VlZTVlZWE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-09-27T11:36:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-09-27T13:04:32Z"}, "message": "middle-end/102450 - avoid type_for_size for non-existing modes\n\nThis avoids asking type_for_size for types with sizes for which\nno scalar integer mode exists.  Instead the following uses\nint_mode_for_size to get the same result.\n\n2021-09-27  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/102450\n\t* gimple-fold.c (gimple_fold_builtin_memory_op): Avoid using\n\ttype_for_size, instead use int_mode_for_size.", "tree": {"sha": "9b48940ae8047ae9b8520c861ab4c906e6d8eaff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b48940ae8047ae9b8520c861ab4c906e6d8eaff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d06dc8a2c73735e9496f434787ba4c93ceee5eea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d06dc8a2c73735e9496f434787ba4c93ceee5eea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d06dc8a2c73735e9496f434787ba4c93ceee5eea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d06dc8a2c73735e9496f434787ba4c93ceee5eea/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da1f6391b7c255e4e2eea983832120eff4f7d3df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1f6391b7c255e4e2eea983832120eff4f7d3df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da1f6391b7c255e4e2eea983832120eff4f7d3df"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "474d0f44375522cab9767a2570d08979d4e0231b", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d06dc8a2c73735e9496f434787ba4c93ceee5eea/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d06dc8a2c73735e9496f434787ba4c93ceee5eea/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=d06dc8a2c73735e9496f434787ba4c93ceee5eea", "patch": "@@ -1001,9 +1001,7 @@ gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n \t\t  return false;\n \n \t      scalar_int_mode mode;\n-\t      tree type = lang_hooks.types.type_for_size (ilen * 8, 1);\n-\t      if (type\n-\t\t  && is_a <scalar_int_mode> (TYPE_MODE (type), &mode)\n+\t      if (int_mode_for_size (ilen * 8, 0).exists (&mode)\n \t\t  && GET_MODE_SIZE (mode) * BITS_PER_UNIT == ilen * 8\n \t\t  && have_insn_for (SET, mode)\n \t\t  /* If the destination pointer is not aligned we must be able\n@@ -1013,6 +1011,7 @@ gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n \t\t      || (optab_handler (movmisalign_optab, mode)\n \t\t\t  != CODE_FOR_nothing)))\n \t\t{\n+\t\t  tree type = build_nonstandard_integer_type (ilen * 8, 1);\n \t\t  tree srctype = type;\n \t\t  tree desttype = type;\n \t\t  if (src_align < GET_MODE_ALIGNMENT (mode))"}]}