{"sha": "5fae483372b3e4da5b5e00b0ccf9557335e9e421", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZhZTQ4MzM3MmIzZTRkYTViNWUwMGIwY2NmOTU1NzMzNWU5ZTQyMQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-05-18T19:41:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-08T14:55:50Z"}, "message": "[Ada] Remove excessive validity checks on in-parameters\n\ngcc/ada/\n\n\t* sem_util.ads, sem_util.adb (Safe_To_Capture_Value): Return\n\tTrue for in-parameters.", "tree": {"sha": "836d6c2beceb09a674e211016aa36a4fc34c798f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/836d6c2beceb09a674e211016aa36a4fc34c798f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fae483372b3e4da5b5e00b0ccf9557335e9e421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fae483372b3e4da5b5e00b0ccf9557335e9e421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fae483372b3e4da5b5e00b0ccf9557335e9e421", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fae483372b3e4da5b5e00b0ccf9557335e9e421/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0ffadd6eabef9a81d00c1f926aac929b0d94d92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ffadd6eabef9a81d00c1f926aac929b0d94d92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0ffadd6eabef9a81d00c1f926aac929b0d94d92"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "96563cbee3ac15898dea367e86b2116f3771d63a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fae483372b3e4da5b5e00b0ccf9557335e9e421/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fae483372b3e4da5b5e00b0ccf9557335e9e421/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5fae483372b3e4da5b5e00b0ccf9557335e9e421", "patch": "@@ -25718,23 +25718,25 @@ package body Sem_Util is\n    is\n    begin\n       --  The only entities for which we track constant values are variables\n-      --  which are not renamings, constants, out parameters, and in out\n-      --  parameters, so check if we have this case.\n+      --  which are not renamings, constants and formal parameters, so check\n+      --  if we have this case.\n \n       --  Note: it may seem odd to track constant values for constants, but in\n       --  fact this routine is used for other purposes than simply capturing\n-      --  the value. In particular, the setting of Known[_Non]_Null.\n+      --  the value. In particular, the setting of Known[_Non]_Null and\n+      --  Is_Known_Valid.\n \n       if (Ekind (Ent) = E_Variable and then No (Renamed_Object (Ent)))\n-            or else\n-          Ekind_In (Ent, E_Constant, E_Out_Parameter, E_In_Out_Parameter)\n+           or else\n+         Ekind (Ent) = E_Constant\n+           or else\n+         Is_Formal (Ent)\n       then\n          null;\n \n-      --  For conditionals, we also allow loop parameters and all formals,\n-      --  including in parameters.\n+      --  For conditionals, we also allow loop parameters\n \n-      elsif Cond and then Ekind_In (Ent, E_Loop_Parameter, E_In_Parameter) then\n+      elsif Cond and then Ekind (Ent) = E_Loop_Parameter then\n          null;\n \n       --  For all other cases, not just unsafe, but impossible to capture"}, {"sha": "2c6259b0e25719a7eb4733caa6dd58d4c02d6803", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fae483372b3e4da5b5e00b0ccf9557335e9e421/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fae483372b3e4da5b5e00b0ccf9557335e9e421/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=5fae483372b3e4da5b5e00b0ccf9557335e9e421", "patch": "@@ -2743,13 +2743,14 @@ package Sem_Util is\n      (N    : Node_Id;\n       Ent  : Entity_Id;\n       Cond : Boolean := False) return Boolean;\n-   --  The caller is interested in capturing a value (either the current value,\n-   --  or an indication that the value is non-null) for the given entity Ent.\n-   --  This value can only be captured if sequential execution semantics can be\n-   --  properly guaranteed so that a subsequent reference will indeed be sure\n-   --  that this current value indication is correct. The node N is the\n-   --  construct which resulted in the possible capture of the value (this\n-   --  is used to check if we are in a conditional).\n+   --  The caller is interested in capturing a value (either the current\n+   --  value, an indication that the value is [non-]null or an indication that\n+   --  the value is valid) for the given entity Ent. This value can only be\n+   --  captured if sequential execution semantics can be properly guaranteed so\n+   --  that a subsequent reference will indeed be sure that this current value\n+   --  indication is correct. The node N is the construct which resulted in\n+   --  the possible capture of the value (this is used to check if we are in\n+   --  a conditional).\n    --\n    --  Cond is used to skip the test for being inside a conditional. It is used\n    --  in the case of capturing values from if/while tests, which already do a"}]}