{"sha": "d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVjYWEwZjg5ZjQ0ZDNkYmY0OTQ0MjU4ZDRjZTBjN2Y2NTU5Y2U2Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-07-12T22:06:51Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-07-12T22:06:51Z"}, "message": "re PR tree-optimization/68961 (Test case gcc.target/powerpc/pr60203.c fails since r231674)\n\n\tPR rtl-optimization/68961\n\t* config/i386/sse.md (movsd/movhpd to movupd peephole2s): Add new\n\tpeephole variant.  Use sse_reg_operand predicates.\n\nFrom-SVN: r238268", "tree": {"sha": "59d73f0f1c66ab8e9abee3cb71957371dfca0941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59d73f0f1c66ab8e9abee3cb71957371dfca0941"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c/comments", "author": null, "committer": null, "parents": [{"sha": "221b3e6c32a61f4491afc87ab5d926e1f6bcf464", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221b3e6c32a61f4491afc87ab5d926e1f6bcf464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/221b3e6c32a61f4491afc87ab5d926e1f6bcf464"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "0b7518f24b1ef8e3e4e3a682293ec7b8720e550d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c", "patch": "@@ -1,3 +1,9 @@\n+2016-07-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/68961\n+\t* config/i386/sse.md (movsd/movhpd to movupd peephole2s): Add new\n+\tpeephole variant.  Use sse_reg_operand predicates.\n+\n 2016-07-12  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/predicates.md (x86_64_immediate_operand)\n@@ -41,7 +47,7 @@\n \tloops.\n \n 2016-07-12  Steven Bosscher  <steven@gcc.gnu.org>\n-\tRichard Biener  <rguenther@suse.de>\n+\t    Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/23286\n \tPR tree-optimization/70159"}, {"sha": "6b898dc05135a2406e8eea3151380011f836eb77", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=d5caa0f89f44d3dbf4944258d4ce0c7f6559ce6c", "patch": "@@ -1169,10 +1169,10 @@\n \n ;; Merge movsd/movhpd to movupd for TARGET_SSE_UNALIGNED_LOAD_OPTIMAL targets.\n (define_peephole2\n-  [(set (match_operand:V2DF 0 \"register_operand\")\n+  [(set (match_operand:V2DF 0 \"sse_reg_operand\")\n \t(vec_concat:V2DF (match_operand:DF 1 \"memory_operand\")\n \t\t\t (match_operand:DF 4 \"const0_operand\")))\n-   (set (match_operand:V2DF 2 \"register_operand\")\n+   (set (match_operand:V2DF 2 \"sse_reg_operand\")\n \t(vec_concat:V2DF (vec_select:DF (match_dup 2)\n \t\t\t\t\t(parallel [(const_int 0)]))\n \t\t\t (match_operand:DF 3 \"memory_operand\")))]\n@@ -1181,13 +1181,25 @@\n   [(set (match_dup 2) (match_dup 4))]\n   \"operands[4] = adjust_address (operands[1], V2DFmode, 0);\")\n \n+(define_peephole2\n+  [(set (match_operand:DF 0 \"sse_reg_operand\")\n+\t(match_operand:DF 1 \"memory_operand\"))\n+   (set (match_operand:V2DF 2 \"sse_reg_operand\")\n+\t(vec_concat:V2DF (match_operand:DF 4 \"sse_reg_operand\")\n+\t\t\t (match_operand:DF 3 \"memory_operand\")))]\n+  \"TARGET_SSE2 && TARGET_SSE_UNALIGNED_LOAD_OPTIMAL\n+   && REGNO (operands[4]) == REGNO (operands[2])\n+   && ix86_operands_ok_for_move_multiple (operands, true, DFmode)\"\n+  [(set (match_dup 2) (match_dup 4))]\n+  \"operands[4] = adjust_address (operands[1], V2DFmode, 0);\")\n+\n ;; Merge movlpd/movhpd to movupd for TARGET_SSE_UNALIGNED_STORE_OPTIMAL targets.\n (define_peephole2\n   [(set (match_operand:DF 0 \"memory_operand\")\n-\t(vec_select:DF (match_operand:V2DF 1 \"register_operand\")\n+\t(vec_select:DF (match_operand:V2DF 1 \"sse_reg_operand\")\n \t\t       (parallel [(const_int 0)])))\n    (set (match_operand:DF 2 \"memory_operand\")\n-\t(vec_select:DF (match_operand:V2DF 3 \"register_operand\")\n+\t(vec_select:DF (match_operand:V2DF 3 \"sse_reg_operand\")\n \t\t       (parallel [(const_int 1)])))]\n   \"TARGET_SSE2 && TARGET_SSE_UNALIGNED_STORE_OPTIMAL\n    && ix86_operands_ok_for_move_multiple (operands, false, DFmode)\""}]}