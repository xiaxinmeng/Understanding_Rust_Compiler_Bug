{"sha": "6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2NmY3MzM2OWRhY2M5ODg5Y2ZhYTA1ZjhhMDg4MTNlN2M0NWYxZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-20T14:19:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-20T14:19:05Z"}, "message": "re PR tree-optimization/49073 (g++ optimizer breaks do-while code)\n\n\tPR tree-optimization/49073\n\t* gimple-fold.c (and_comparisons_1, or_comparisons_1): Return\n\tNULL if PHI argument is SSA_NAME, whose def_stmt is dominated\n\tby the PHI.\n\t* tree-ssa-ifcombine.c (tree_ssa_ifcombine): Calculate dominators.\n\n\t* gcc.c-torture/execute/pr49073.c: New test.\n\nFrom-SVN: r173948", "tree": {"sha": "940cae516f3f04771fe6a0abd862dd3ee83bd9da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/940cae516f3f04771fe6a0abd862dd3ee83bd9da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57b4d355a187943b042ca3e9a86bccf74c0e0d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b4d355a187943b042ca3e9a86bccf74c0e0d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b4d355a187943b042ca3e9a86bccf74c0e0d84"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "7a99c9133bf8e9800926b21630c04e8f1650d1cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "patch": "@@ -1,3 +1,11 @@\n+2011-05-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/49073\n+\t* gimple-fold.c (and_comparisons_1, or_comparisons_1): Return\n+\tNULL if PHI argument is SSA_NAME, whose def_stmt is dominated\n+\tby the PHI.\n+\t* tree-ssa-ifcombine.c (tree_ssa_ifcombine): Calculate dominators.\n+\n 2011-05-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/48849"}, {"sha": "933a47b01066d9587dacc7d75772b6619e9cd527", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "patch": "@@ -1,5 +1,5 @@\n /* Statement simplification on GIMPLE.\n-   Copyright (C) 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n    Split out from tree-ssa-ccp.c.\n \n This file is part of GCC.\n@@ -2278,8 +2278,19 @@ and_comparisons_1 (enum tree_code code1, tree op1a, tree op1b,\n \t\t    }\n \t\t  else if (TREE_CODE (arg) == SSA_NAME)\n \t\t    {\n-\t\t      tree temp = and_var_with_comparison (arg, invert,\n-\t\t\t\t\t\t\t   code2, op2a, op2b);\n+\t\t      tree temp;\n+\t\t      gimple def_stmt = SSA_NAME_DEF_STMT (arg);\n+\t\t      /* In simple cases we can look through PHI nodes,\n+\t\t\t but we have to be careful with loops.\n+\t\t\t See PR49073.  */\n+\t\t      if (! dom_info_available_p (CDI_DOMINATORS)\n+\t\t\t  || gimple_bb (def_stmt) == gimple_bb (stmt)\n+\t\t\t  || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t\t     gimple_bb (def_stmt),\n+\t\t\t\t\t     gimple_bb (stmt)))\n+\t\t\treturn NULL_TREE;\n+\t\t      temp = and_var_with_comparison (arg, invert, code2,\n+\t\t\t\t\t\t      op2a, op2b);\n \t\t      if (!temp)\n \t\t\treturn NULL_TREE;\n \t\t      else if (!result)\n@@ -2728,8 +2739,19 @@ or_comparisons_1 (enum tree_code code1, tree op1a, tree op1b,\n \t\t    }\n \t\t  else if (TREE_CODE (arg) == SSA_NAME)\n \t\t    {\n-\t\t      tree temp = or_var_with_comparison (arg, invert,\n-\t\t\t\t\t\t\t  code2, op2a, op2b);\n+\t\t      tree temp;\n+\t\t      gimple def_stmt = SSA_NAME_DEF_STMT (arg);\n+\t\t      /* In simple cases we can look through PHI nodes,\n+\t\t\t but we have to be careful with loops.\n+\t\t\t See PR49073.  */\n+\t\t      if (! dom_info_available_p (CDI_DOMINATORS)\n+\t\t\t  || gimple_bb (def_stmt) == gimple_bb (stmt)\n+\t\t\t  || dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t\t     gimple_bb (def_stmt),\n+\t\t\t\t\t     gimple_bb (stmt)))\n+\t\t\treturn NULL_TREE;\n+\t\t      temp = or_var_with_comparison (arg, invert, code2,\n+\t\t\t\t\t\t     op2a, op2b);\n \t\t      if (!temp)\n \t\t\treturn NULL_TREE;\n \t\t      else if (!result)"}, {"sha": "5e2bffedcc67920f59d6c7e8303962f07e6c6cd1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "patch": "@@ -1,3 +1,8 @@\n+2011-05-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/49073\n+\t* gcc.c-torture/execute/pr49073.c: New test.\n+\n 2011-06-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "92b923b8258981075d78680d3fc4dc5442ad00f4", "filename": "gcc/testsuite/gcc.c-torture/execute/pr49073.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr49073.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr49073.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr49073.c?ref=6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "patch": "@@ -0,0 +1,26 @@\n+/* PR tree-optimization/49073 */\n+\n+extern void abort (void);\n+int a[] = { 1, 2, 3, 4, 5, 6, 7 }, c;\n+\n+int\n+main ()\n+{\n+  int d = 1, i = 1;\n+  _Bool f = 0;\n+  do\n+    {\n+      d = a[i];\n+      if (f && d == 4)\n+\t{\n+\t  ++c;\n+\t  break;\n+\t}\n+      i++;\n+      f = (d == 3);\n+    }\n+  while (d < 7);\n+  if (c != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "9063bfdcd55db4c496678746cd7130d690e97f49", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c66f73369dacc9889cfaa05f8a08813e7c45f1f/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=6c66f73369dacc9889cfaa05f8a08813e7c45f1f", "patch": "@@ -1,5 +1,5 @@\n /* Combining of if-expressions on trees.\n-   Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Richard Guenther <rguenther@suse.de>\n \n This file is part of GCC.\n@@ -625,6 +625,7 @@ tree_ssa_ifcombine (void)\n   int i;\n \n   bbs = blocks_in_phiopt_order ();\n+  calculate_dominance_info (CDI_DOMINATORS);\n \n   for (i = 0; i < n_basic_blocks - NUM_FIXED_BLOCKS; ++i)\n     {"}]}