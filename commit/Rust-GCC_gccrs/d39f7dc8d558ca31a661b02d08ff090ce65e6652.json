{"sha": "d39f7dc8d558ca31a661b02d08ff090ce65e6652", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5ZjdkYzhkNTU4Y2EzMWE2NjFiMDJkMDhmZjA5MGNlNjVlNjY1Mg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-05T14:15:45Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-05T14:15:45Z"}, "message": "Do locking for __gcov_dump and __gcov_reset as well.\n\n\tPR gcov-profile/93623\n\t* Makefile.in: Add _gcov_lock_unlock to LIBGCOV_INTERFACE.\n\t* libgcov-interface.c (ALIAS_void_fn): Remove.\n\t(__gcov_lock): New.\n\t(__gcov_unlock): New.\n\t(__gcov_flush): Use __gcov_lock and __gcov_unlock.\n\t(__gcov_reset): Likewise.\n\t(__gcov_dump): Likewise.\n\t* libgcov.h (__gcov_lock): New declaration.\n\t(__gcov_unlock): Likewise.", "tree": {"sha": "05820428028a09ab19d0acf221fb666b3f222fdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05820428028a09ab19d0acf221fb666b3f222fdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d39f7dc8d558ca31a661b02d08ff090ce65e6652", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6xdREACgkQTcGC3A+n\nN4U6FQf8CzuiSE5p2t+67uMLO/a3jFeTuYovE2LqYC6EpLIlD50s2JR28C2lveiq\nkya5S+OA+NLRyY9nEMsde5yKBHd8TV68QqYBSG1RKi4UDzj0K24ud139KW0ExUnH\nBozNu7QAhJId3VWjUqzdljLQCLy5xjC/aDijyWVqp7BrN48SpdfkHZIIW5ySdREt\nx1hk69gbBijs6lDRZ/oooRIZvLE52jUkDTWcKQkf+72Haf0g28IqrrVErzu8JnhJ\n3lj6gjI/wsDkGuUSMm6GnhwA++FHjU9GswAKHyQmnv+jyfNkdIbKRZ37E6J6QeJE\nARcl6hERlE4+ErumIQll463Coh6v+g==\n=NEGt\n-----END PGP SIGNATURE-----", "payload": "tree 05820428028a09ab19d0acf221fb666b3f222fdc\nparent 2d8a60a63cafdd9930bdbfb2ec76c47d7d14cd45\nauthor Martin Liska <mliska@suse.cz> 1588688145 +0200\ncommitter Martin Liska <mliska@suse.cz> 1588688145 +0200\n\nDo locking for __gcov_dump and __gcov_reset as well.\n\n\tPR gcov-profile/93623\n\t* Makefile.in: Add _gcov_lock_unlock to LIBGCOV_INTERFACE.\n\t* libgcov-interface.c (ALIAS_void_fn): Remove.\n\t(__gcov_lock): New.\n\t(__gcov_unlock): New.\n\t(__gcov_flush): Use __gcov_lock and __gcov_unlock.\n\t(__gcov_reset): Likewise.\n\t(__gcov_dump): Likewise.\n\t* libgcov.h (__gcov_lock): New declaration.\n\t(__gcov_unlock): Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39f7dc8d558ca31a661b02d08ff090ce65e6652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d39f7dc8d558ca31a661b02d08ff090ce65e6652", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39f7dc8d558ca31a661b02d08ff090ce65e6652/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d8a60a63cafdd9930bdbfb2ec76c47d7d14cd45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8a60a63cafdd9930bdbfb2ec76c47d7d14cd45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8a60a63cafdd9930bdbfb2ec76c47d7d14cd45"}], "stats": {"total": 81, "additions": 65, "deletions": 16}, "files": [{"sha": "fbf2bd1c98f0c05e4ef4df93edef28ceab329ea0", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39f7dc8d558ca31a661b02d08ff090ce65e6652/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39f7dc8d558ca31a661b02d08ff090ce65e6652/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d39f7dc8d558ca31a661b02d08ff090ce65e6652", "patch": "@@ -1,3 +1,16 @@\n+2020-05-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/93623\n+\t* Makefile.in: Add _gcov_lock_unlock to LIBGCOV_INTERFACE.\n+\t* libgcov-interface.c (ALIAS_void_fn): Remove.\n+\t(__gcov_lock): New.\n+\t(__gcov_unlock): New.\n+\t(__gcov_flush): Use __gcov_lock and __gcov_unlock.\n+\t(__gcov_reset): Likewise.\n+\t(__gcov_dump): Likewise.\n+\t* libgcov.h (__gcov_lock): New declaration.\n+\t(__gcov_unlock): Likewise.\n+\n 2020-05-01  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sfp-exceptions.c (__math_force_eval): New define."}, {"sha": "e6ed153abbcd91b6db38b0792b533a09bb860c70", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39f7dc8d558ca31a661b02d08ff090ce65e6652/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39f7dc8d558ca31a661b02d08ff090ce65e6652/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=d39f7dc8d558ca31a661b02d08ff090ce65e6652", "patch": "@@ -906,7 +906,8 @@ LIBGCOV_PROFILER = _gcov_interval_profiler\t\t\t\t\\\n \t_gcov_time_profiler\n LIBGCOV_INTERFACE = _gcov_dump _gcov_flush _gcov_fork\t\t\t\\\n \t_gcov_execl _gcov_execlp\t\t\t\t\t\\\n-\t_gcov_execle _gcov_execv _gcov_execvp _gcov_execve _gcov_reset\n+\t_gcov_execle _gcov_execv _gcov_execvp _gcov_execve _gcov_reset  \\\n+\t_gcov_lock_unlock\n LIBGCOV_DRIVER = _gcov\n \n libgcov-merge-objects = $(patsubst %,%$(objext),$(LIBGCOV_MERGE))"}, {"sha": "a8054edba57ea8b5ae22d2fca04e9ea8771893a7", "filename": "libgcc/libgcov-interface.c", "status": "modified", "additions": 44, "deletions": 15, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39f7dc8d558ca31a661b02d08ff090ce65e6652/libgcc%2Flibgcov-interface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39f7dc8d558ca31a661b02d08ff090ce65e6652/libgcc%2Flibgcov-interface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-interface.c?ref=d39f7dc8d558ca31a661b02d08ff090ce65e6652", "patch": "@@ -42,18 +42,9 @@ void __gcov_dump (void) {}\n \n #else\n \n-/* Some functions we want to bind in this dynamic object, but have an\n-   overridable global alias.  Unfortunately not all targets support\n-   aliases, so we just have a forwarding function.  That'll be tail\n-   called, so the cost is a single jump instruction.*/\n-\n-#define ALIAS_void_fn(src,dst) \\\n-  void dst (void)\t    \\\n-  { src (); }\n-\n extern __gthread_mutex_t __gcov_flush_mx ATTRIBUTE_HIDDEN;\n \n-#ifdef L_gcov_flush\n+#ifdef L_gcov_lock_unlock\n #ifdef __GTHREAD_MUTEX_INIT\n __gthread_mutex_t __gcov_flush_mx = __GTHREAD_MUTEX_INIT;\n #define init_mx_once()\n@@ -74,20 +65,38 @@ init_mx_once (void)\n }\n #endif\n \n+/* Lock critical section for __gcov_dump and __gcov_reset functions.  */\n+\n+void\n+__gcov_lock (void)\n+{\n+  init_mx_once ();\n+  __gthread_mutex_lock (&__gcov_flush_mx);\n+}\n+\n+/* Unlock critical section for __gcov_dump and __gcov_reset functions.  */\n+\n+void\n+__gcov_unlock (void)\n+{\n+  __gthread_mutex_unlock (&__gcov_flush_mx);\n+}\n+#endif\n+\n+#ifdef L_gcov_flush\n /* Called before fork or exec - write out profile information gathered so\n    far and reset it to zero.  This avoids duplication or loss of the\n    profile information gathered so far.  */\n \n void\n __gcov_flush (void)\n {\n-  init_mx_once ();\n-  __gthread_mutex_lock (&__gcov_flush_mx);\n+  __gcov_lock ();\n \n   __gcov_dump_int ();\n   __gcov_reset_int ();\n \n-  __gthread_mutex_unlock (&__gcov_flush_mx);\n+  __gcov_unlock ();\n }\n \n #endif /* L_gcov_flush */\n@@ -143,7 +152,17 @@ __gcov_reset_int (void)\n     }\n }\n \n-ALIAS_void_fn (__gcov_reset_int, __gcov_reset);\n+/* Exported function __gcov_reset.  */\n+\n+void\n+__gcov_reset (void)\n+{\n+  __gcov_lock ();\n+\n+  __gcov_reset_int ();\n+\n+  __gcov_unlock ();\n+}\n \n #endif /* L_gcov_reset */\n \n@@ -163,7 +182,17 @@ __gcov_dump_int (void)\n     __gcov_dump_one (root);\n }\n \n-ALIAS_void_fn (__gcov_dump_int, __gcov_dump);\n+/* Exported function __gcov_dump.  */\n+\n+void\n+__gcov_dump (void)\n+{\n+  __gcov_lock ();\n+\n+  __gcov_dump_int ();\n+\n+  __gcov_unlock ();\n+}\n \n #endif /* L_gcov_dump */\n "}, {"sha": "104b80bdcbb08c961ef75610867766a96e3c04ff", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39f7dc8d558ca31a661b02d08ff090ce65e6652/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39f7dc8d558ca31a661b02d08ff090ce65e6652/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=d39f7dc8d558ca31a661b02d08ff090ce65e6652", "patch": "@@ -253,6 +253,12 @@ extern void __gcov_reset_int (void) ATTRIBUTE_HIDDEN;\n /* User function to enable early write of profile information so far.  */\n extern void __gcov_dump_int (void) ATTRIBUTE_HIDDEN;\n \n+/* Lock critical section for __gcov_dump and __gcov_reset functions.  */\n+extern void __gcov_lock (void) ATTRIBUTE_HIDDEN;\n+\n+/* Unlock critical section for __gcov_dump and __gcov_reset functions.  */\n+extern void __gcov_unlock (void) ATTRIBUTE_HIDDEN;\n+\n /* The merge function that just sums the counters.  */\n extern void __gcov_merge_add (gcov_type *, unsigned) ATTRIBUTE_HIDDEN;\n "}]}