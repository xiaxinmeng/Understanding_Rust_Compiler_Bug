{"sha": "8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEyZmNmOTEyOGU0M2U2Y2E1ZTVjODBmN2E0ZDRjNmViOTA5YTIwZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-01-03T06:44:38Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-01-03T06:44:38Z"}, "message": "i386.h (NON_STACK_REG_P, [...]): Remove.\n\n\t* config/i386/i386.h (NON_STACK_REG_P, REGNO_OK_FOR_SIREG_P,\n\tREGNO_OK_FOR_DIREG_P, REWRITE_ADDRESS, ASM_OPERAND_LETTER,\n\tRET, AT_SP): Remove.\n\t* config/i386/i386.md (*sse_prologue_save_insn): Use return\n\tinstead of RET.\n\nFrom-SVN: r120383", "tree": {"sha": "73a60a71f79593854f65b0970c1fa197c8e10cf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73a60a71f79593854f65b0970c1fa197c8e10cf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e/comments", "author": null, "committer": null, "parents": [{"sha": "e1c463c4dd0e60e80d196c54f52c338d2b779788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c463c4dd0e60e80d196c54f52c338d2b779788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c463c4dd0e60e80d196c54f52c338d2b779788"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "23c6098160cb8da6e4bd9a266c335a2d370b8774", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e", "patch": "@@ -1,3 +1,11 @@\n+2007-01-03  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* config/i386/i386.h (NON_STACK_REG_P, REGNO_OK_FOR_SIREG_P,\n+\tREGNO_OK_FOR_DIREG_P, REWRITE_ADDRESS, ASM_OPERAND_LETTER,\n+\tRET, AT_SP): Remove.\n+\t* config/i386/i386.md (*sse_prologue_save_insn): Use return\n+\tinstead of RET.\n+\n 2006-01-03  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* loop-unswitch.c (unswitch_loop): Pass probabilities to loopify."}, {"sha": "7ccecafd9eb62eb370b6997bb7868b2d83c2c787", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of target machine for GCC for IA-32.\n    Copyright (C) 1988, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n+   2001, 2002, 2003, 2004, 2005, 2006, 2007 Free Software Foundation,\n+   Inc.\n \n This file is part of GCC.\n \n@@ -1270,8 +1271,6 @@ enum reg_class\n #define MMX_REGNO_P(N) IN_RANGE ((N), FIRST_MMX_REG, LAST_MMX_REG)\n \n #define STACK_REG_P(XOP) (REG_P (XOP) && STACK_REGNO_P (REGNO (XOP)))\n-#define NON_STACK_REG_P(XOP) \\\n-  (REG_P (XOP) && ! STACK_REGNO_P (REGNO (XOP)))\n #define STACK_REGNO_P(N) IN_RANGE ((N), FIRST_STACK_REG, LAST_STACK_REG)\n \n #define STACK_TOP_P(XOP) (REG_P (XOP) && REGNO (XOP) == FIRST_STACK_REG)\n@@ -1630,11 +1629,6 @@ typedef struct ix86_args {\n    || (REGNO) == FRAME_POINTER_REGNUM \t\t\t\t\t\\\n    || GENERAL_REGNO_P ((unsigned) reg_renumber[(REGNO)]))\n \n-#define REGNO_OK_FOR_SIREG_P(REGNO) \\\n-  ((REGNO) == 4 || reg_renumber[(REGNO)] == 4)\n-#define REGNO_OK_FOR_DIREG_P(REGNO) \\\n-  ((REGNO) == 5 || reg_renumber[(REGNO)] == 5)\n-\n /* The macros REG_OK_FOR..._P assume that the arg is a REG rtx\n    and check its validity for a certain class.\n    We have two alternate definitions for each of them.\n@@ -1749,8 +1743,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     goto WIN;\t\t\t\t\t\t\t\t\\\n } while (0)\n \n-#define REWRITE_ADDRESS(X) rewrite_address (X)\n-\n /* Nonzero if the constant value X is a legitimate general operand\n    when generating PIC code.  It is given that flag_pic is on and\n    that X satisfies CONSTANT_P or is a CONST_DOUBLE.  */\n@@ -2095,13 +2087,6 @@ do {\t\t\t\t\t\t\\\n   if (! output_addr_const_extra (FILE, (X)))\t\\\n     goto FAIL;\t\t\t\t\t\\\n } while (0);\n-\n-/* a letter which is not needed by the normal asm syntax, which\n-   we can use for operand syntax in the extended asm */\n-\n-#define ASM_OPERAND_LETTER '#'\n-#define RET return \"\"\n-#define AT_SP(MODE) (gen_rtx_MEM ((MODE), stack_pointer_rtx))\n \f\n /* Which processor to schedule for. The cpu attribute defines a list that\n    mirrors this list, so changes to i386.md must be made at the same time.  */"}, {"sha": "7066c6355ba14b978af3eaf5dc957412c1443993", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=8a2fcf9128e43e6ca5e5c80f7a4d4c6eb909a20e", "patch": "@@ -1,6 +1,6 @@\n ;; GCC machine description for IA-32 and x86-64.\n ;; Copyright (C) 1988, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-;; 2001, 2002, 2003, 2004, 2005, 2006\n+;; 2001, 2002, 2003, 2004, 2005, 2006, 2007\n ;; Free Software Foundation, Inc.\n ;; Mostly by William Schelter.\n ;; x86_64 support added by Jan Hubicka\n@@ -20813,7 +20813,7 @@\n     }\n   (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t     CODE_LABEL_NUMBER (operands[3]));\n-  RET;\n+  return \\\"\\\";\n }\n   \"\n   [(set_attr \"type\" \"other\")"}]}