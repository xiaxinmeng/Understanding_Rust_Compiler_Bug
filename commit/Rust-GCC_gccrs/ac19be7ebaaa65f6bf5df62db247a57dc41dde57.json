{"sha": "ac19be7ebaaa65f6bf5df62db247a57dc41dde57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMxOWJlN2ViYWFhNjVmNmJmNWRmNjJkYjI0N2E1N2RjNDFkZGU1Nw==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2002-09-17T21:25:13Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2002-09-17T21:25:13Z"}, "message": "Do not foward a branch to just after a loop exit before\nloop optimization; this broke doloop detection.\n\nFrom-SVN: r57260", "tree": {"sha": "fcba97f4d21d11195b6b6ea9b77267956a1a7048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcba97f4d21d11195b6b6ea9b77267956a1a7048"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac19be7ebaaa65f6bf5df62db247a57dc41dde57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac19be7ebaaa65f6bf5df62db247a57dc41dde57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac19be7ebaaa65f6bf5df62db247a57dc41dde57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac19be7ebaaa65f6bf5df62db247a57dc41dde57/comments", "author": null, "committer": null, "parents": [{"sha": "6a0225133cef7f6181a0b656e4952dadce25751b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0225133cef7f6181a0b656e4952dadce25751b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a0225133cef7f6181a0b656e4952dadce25751b"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "472a9b8af607f1edf94514aaabf4079b90a2980d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac19be7ebaaa65f6bf5df62db247a57dc41dde57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac19be7ebaaa65f6bf5df62db247a57dc41dde57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac19be7ebaaa65f6bf5df62db247a57dc41dde57", "patch": "@@ -1,3 +1,8 @@\n+2002-09-17  Dale Johannesen  <dalej@apple.com>\n+\t* cfgcleanup.c (try_forward_edges):  Do not forward a\n+\tbranch to just after a loop exit before loop optimization;\n+\tthis interfered with doloop detection.\n+\n 2002-09-17  Nick Clifton  <nickc@redhat.com>\n \n \t* config/arm/arm.c (output_return_instruction): Do not\n@@ -118,6 +123,7 @@ Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* real.h (real_nan): Return bool.\n \t* doc/extend.texi: Document new builtins.\n \n+>>>>>>> 1.15460\n 2002-09-16  Jason Merrill  <jason@redhat.com>\n \t    Danny Smith  <dannysmith@users.sourceforge.net>\n "}, {"sha": "fe221036b99c3979e4a4d0fa4cd3ae99dc26454b", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac19be7ebaaa65f6bf5df62db247a57dc41dde57/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac19be7ebaaa65f6bf5df62db247a57dc41dde57/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=ac19be7ebaaa65f6bf5df62db247a57dc41dde57", "patch": "@@ -515,6 +515,15 @@ try_forward_edges (mode, b)\n \n \t      if (GET_CODE (insn) == NOTE)\n \t\tbreak;\n+\n+\t      /* Do not clean up branches to just past the end of a loop\n+\t\t at this time; it can mess up the loop optimizer's\n+\t\t recognition of some patterns. */\n+\n+\t      insn = PREV_INSN (target->head);\n+\t      if (insn && GET_CODE (insn) == NOTE\n+\t\t    && NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END)\n+\t\tbreak;\n \t    }\n \n \t  counter++;"}, {"sha": "3561a1794110026800d1b87ee2248604147f4acd", "filename": "gcc/testsuite/gcc.dg/doloop-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac19be7ebaaa65f6bf5df62db247a57dc41dde57/gcc%2Ftestsuite%2Fgcc.dg%2Fdoloop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac19be7ebaaa65f6bf5df62db247a57dc41dde57/gcc%2Ftestsuite%2Fgcc.dg%2Fdoloop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdoloop-1.c?ref=ac19be7ebaaa65f6bf5df62db247a57dc41dde57", "patch": "@@ -0,0 +1,18 @@\n+/* Make sure both loops are recognized as doloops.\n+   If so, \"bdnz\" will be generated on ppc; if not,\n+   you will get \"ble\". */\n+\n+/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-options \"-O2\" } */\n+void foo (int count, char* pca, char* pcb) {\n+    int i;\n+    if (count > 10)\n+        for (i = 0; i < count; ++i)\n+            pcb += i;\n+    else\n+        for (i = 0; i < count; ++i)\n+            pca += i;\n+    *pca = *pcb;\n+}\n+/* { dg-final { scan-assembler \"bdnz\" } } */\n+/* { dg-final { scan-assembler-not \"blt\" } } */"}]}