{"sha": "59e504989c82c9d9845adfb383f78510f84a4b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTllNTA0OTg5YzgyYzlkOTg0NWFkZmIzODNmNzg1MTBmODRhNGIyNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-01-05T02:00:56Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-01-05T02:00:56Z"}, "message": "tree-optimize.c (execute_fixup_cfg): Correct previously mistakely comitted older version of patch.\n\n\t* tree-optimize.c (execute_fixup_cfg): Correct previously mistakely\n\tcomitted older version of patch.\n\t(pass_fixup_cfg): Add TODOs to verify flow and statements, dump\n\tfunction, celanup cfg and collect garbage.\n\nFrom-SVN: r120469", "tree": {"sha": "e08cf11e85f9b9ff1e3fee2736cbce8687c1f7bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e08cf11e85f9b9ff1e3fee2736cbce8687c1f7bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59e504989c82c9d9845adfb383f78510f84a4b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e504989c82c9d9845adfb383f78510f84a4b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59e504989c82c9d9845adfb383f78510f84a4b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e504989c82c9d9845adfb383f78510f84a4b27/comments", "author": null, "committer": null, "parents": [{"sha": "c79441520f2a862204dabe01e20edce3bc7b0953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79441520f2a862204dabe01e20edce3bc7b0953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c79441520f2a862204dabe01e20edce3bc7b0953"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "fb01be3f6f58c814ddcdbadf88ce946edf63c33a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e504989c82c9d9845adfb383f78510f84a4b27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e504989c82c9d9845adfb383f78510f84a4b27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59e504989c82c9d9845adfb383f78510f84a4b27", "patch": "@@ -1,3 +1,10 @@\n+2007-01-04  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-optimize.c (execute_fixup_cfg): Correct previously mistakely\n+\tcomitted older version of patch.\n+\t(pass_fixup_cfg): Add TODOs to verify flow and statements, dump\n+\tfunction, celanup cfg and collect garbage.\n+\n 2007-01-04  Mike Stump  <mrs@apple.com>\n \n \t* Makefile.in (mostlyclean): Don't remove libgcc anymore."}, {"sha": "e67b0ef2e122f339913038bebd2e2e892903ce85", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e504989c82c9d9845adfb383f78510f84a4b27/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e504989c82c9d9845adfb383f78510f84a4b27/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=59e504989c82c9d9845adfb383f78510f84a4b27", "patch": "@@ -297,6 +297,7 @@ execute_fixup_cfg (void)\n {\n   basic_block bb;\n   block_stmt_iterator bsi;\n+  int todo = gimple_in_ssa_p (cfun) ? TODO_verify_ssa : 0;\n \n   cfun->after_inlining = true;\n \n@@ -312,7 +313,11 @@ execute_fixup_cfg (void)\n \t    if (decl && call_expr_flags (call) & (ECF_CONST | ECF_PURE)\n \t\t&& TREE_SIDE_EFFECTS (call))\n \t      {\n-\t        update_stmt (stmt);\n+\t\tif (gimple_in_ssa_p (cfun))\n+\t\t  {\n+\t\t    todo |= TODO_update_ssa;\n+\t            update_stmt (stmt);\n+\t\t  }\n \t        TREE_SIDE_EFFECTS (call) = 0;\n \t      }\n \t    if (decl && TREE_NOTHROW (decl))\n@@ -355,8 +360,10 @@ execute_fixup_cfg (void)\n \t\t  if (DECL_NONLOCAL (target))\n \t\t    {\n \t\t      tree phi;\n+\n \t\t      for (phi = phi_nodes (bb); phi; phi = PHI_CHAIN (phi))\n \t\t\t{\n+\t\t          todo |= TODO_update_ssa;\n \t\t\t  gcc_assert (SSA_NAME_OCCURS_IN_ABNORMAL_PHI\n \t\t\t\t      (PHI_RESULT (phi)));\n \t\t\t  mark_sym_for_renaming\n@@ -368,18 +375,11 @@ execute_fixup_cfg (void)\n \t}\n     }\n \n-  if (gimple_in_ssa_p (cfun))\n-    {\n-      delete_unreachable_blocks ();\n-      update_ssa (TODO_update_ssa);\n-    }\n-  cleanup_tree_cfg ();\n-\n   /* Dump a textual representation of the flowgraph.  */\n   if (dump_file)\n     dump_tree_cfg (dump_file, dump_flags);\n \n-  return 0;\n+  return todo;\n }\n \n struct tree_opt_pass pass_fixup_cfg =\n@@ -395,9 +395,10 @@ struct tree_opt_pass pass_fixup_cfg =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  0,\t\t\t\t\t/* todo_flags_finish */\n-  0\t\t\t\t\t/* letter */\n-};\n+  TODO_cleanup_cfg | TODO_ggc_collect\n+  | TODO_dump_func | TODO_verify_flow\n+  | TODO_verify_stmts,/* todo_flags_finish */\n+  0\t\t\t\t\t/* letter */ };\n \n /* Do the actions required to initialize internal data structures used\n    in tree-ssa optimization passes.  */"}]}