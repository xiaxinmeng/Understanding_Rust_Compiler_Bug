{"sha": "fca132b919af8aea928f672ac58c0370c8a38f79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNhMTMyYjkxOWFmOGFlYTkyOGY2NzJhYzU4YzAzNzBjOGEzOGY3OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-05-09T20:51:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-09T20:51:19Z"}, "message": "i386.c (ix86_autovectorize_vector_sizes): Return 0 for !flag_prefer_avx128.\n\n\t* config/i386/i386.c (ix86_autovectorize_vector_sizes): Return 0\n\tfor !flag_prefer_avx128.\n\t(ix86_preferred_simd_mode): Return word_mode for DFmode without SSE2.\n\nFrom-SVN: r173591", "tree": {"sha": "1f3a9f148313a866e3e9e437e2daea9832527961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f3a9f148313a866e3e9e437e2daea9832527961"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fca132b919af8aea928f672ac58c0370c8a38f79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca132b919af8aea928f672ac58c0370c8a38f79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca132b919af8aea928f672ac58c0370c8a38f79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca132b919af8aea928f672ac58c0370c8a38f79/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "754af126c04251c045d99b808915d9fde11de8a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754af126c04251c045d99b808915d9fde11de8a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754af126c04251c045d99b808915d9fde11de8a5"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "7a6098047ac08ab82bacc707aa7e95d077397c50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca132b919af8aea928f672ac58c0370c8a38f79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca132b919af8aea928f672ac58c0370c8a38f79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fca132b919af8aea928f672ac58c0370c8a38f79", "patch": "@@ -1,3 +1,9 @@\n+2011-05-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_autovectorize_vector_sizes): Return 0\n+\tfor !flag_prefer_avx128.\n+\t(ix86_preferred_simd_mode): Return word_mode for DFmode without SSE2.\n+\n 2011-05-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (fold_range_test): Pass LOC to build_range_check."}, {"sha": "afba1a7049dc4d1f083bad91d0e92d44896f7caa", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca132b919af8aea928f672ac58c0370c8a38f79/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca132b919af8aea928f672ac58c0370c8a38f79/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fca132b919af8aea928f672ac58c0370c8a38f79", "patch": "@@ -35118,32 +35118,38 @@ has_dispatch (rtx insn, int action)\n static enum machine_mode\n ix86_preferred_simd_mode (enum machine_mode mode)\n {\n-  /* Disable double precision vectorizer if needed.  */\n-  if (mode == DFmode && !TARGET_VECTORIZE_DOUBLE)\n-    return word_mode;\n-\n-  if (!TARGET_AVX && !TARGET_SSE)\n+  if (!TARGET_SSE)\n     return word_mode;\n \n   switch (mode)\n     {\n-    case SFmode:\n-      return (TARGET_AVX && !flag_prefer_avx128) ? V8SFmode : V4SFmode;\n-    case DFmode:\n-      return (TARGET_AVX && !flag_prefer_avx128) ? V4DFmode : V2DFmode;\n-    case DImode:\n-      return V2DImode;\n-    case SImode:\n-      return V4SImode;\n-    case HImode:\n-      return V8HImode;\n     case QImode:\n       return V16QImode;\n+    case HImode:\n+      return V8HImode;\n+    case SImode:\n+      return V4SImode;\n+    case DImode:\n+      return V2DImode;\n \n-    default:;\n-    }\n+    case SFmode:\n+      if (TARGET_AVX && !flag_prefer_avx128)\n+\treturn V8SFmode;\n+      else\n+\treturn V4SFmode;\n+\n+    case DFmode:\n+      if (!TARGET_VECTORIZE_DOUBLE)\n+\treturn word_mode;\n+      else if (TARGET_AVX && !flag_prefer_avx128)\n+\treturn V4DFmode;\n+      else if (TARGET_SSE2)\n+\treturn V2DFmode;\n+      /* FALLTHRU */\n \n-  return word_mode;\n+    default:\n+      return word_mode;\n+    }\n }\n \n /* If AVX is enabled then try vectorizing with both 256bit and 128bit\n@@ -35152,7 +35158,7 @@ ix86_preferred_simd_mode (enum machine_mode mode)\n static unsigned int\n ix86_autovectorize_vector_sizes (void)\n {\n-  return TARGET_AVX ? 32 | 16 : 0;\n+  return (TARGET_AVX && !flag_prefer_avx128) ? 32 | 16 : 0;\n }\n \n /* Initialize the GCC target structure.  */"}]}