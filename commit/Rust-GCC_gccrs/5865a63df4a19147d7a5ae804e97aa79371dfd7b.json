{"sha": "5865a63df4a19147d7a5ae804e97aa79371dfd7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2NWE2M2RmNGExOTE0N2Q3YTVhZTgwNGU5N2FhNzkzNzFkZmQ3Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2015-02-20T11:40:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T11:40:20Z"}, "message": "Makefile.in: Remove references to nucleus.\n\n\t* gcc-interface/Makefile.in: Remove references to nucleus.\n\t* gcc-interface/decl.c (gnat_to_gnu_entity, case E_Procedure): Set\n\textern_flag to true for Inline_Always subprograms with\n\tIntrinsic convention.\n\nFrom-SVN: r220851", "tree": {"sha": "93d89925917fc8332fa1b4da06756d2da5572dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93d89925917fc8332fa1b4da06756d2da5572dd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5865a63df4a19147d7a5ae804e97aa79371dfd7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5865a63df4a19147d7a5ae804e97aa79371dfd7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5865a63df4a19147d7a5ae804e97aa79371dfd7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5865a63df4a19147d7a5ae804e97aa79371dfd7b/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07aff4e355ed0d2c6a360a4d587855f4cec530de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07aff4e355ed0d2c6a360a4d587855f4cec530de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07aff4e355ed0d2c6a360a4d587855f4cec530de"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "c255ca651b040e4d285fb7235a2b3a2615089151", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865a63df4a19147d7a5ae804e97aa79371dfd7b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865a63df4a19147d7a5ae804e97aa79371dfd7b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5865a63df4a19147d7a5ae804e97aa79371dfd7b", "patch": "@@ -1,3 +1,10 @@\n+2015-02-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/Makefile.in: Remove references to nucleus.\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity, case E_Procedure): Set\n+\textern_flag to true for Inline_Always subprograms with\n+\tIntrinsic convention.\n+\n 2015-02-20  Yannick Moy  <moy@adacore.com>\n \n \t* sem_prag.ads: Minor typo in comment."}, {"sha": "60c1b5b3f8e40d7995c5a413ccc5ae213d8fbcb6", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865a63df4a19147d7a5ae804e97aa79371dfd7b/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865a63df4a19147d7a5ae804e97aa79371dfd7b/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=5865a63df4a19147d7a5ae804e97aa79371dfd7b", "patch": "@@ -2355,27 +2355,6 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n   GCC_LINK_FLAGS=-static-libstdc++\n endif\n \n-# ARM Nucleus\n-ifeq ($(strip $(filter-out arm nucleus%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  system.ads<system-nucleus-arm.ads \\\n-  a-numaux.ads<a-numaux-vxworks.ads \\\n-  a-intnam.ads<a-intnam-nucleus.ads \\\n-  s-inmaop.adb<s-inmaop-posix.adb \\\n-  s-intman.adb<s-intman-posix.adb \\\n-  s-osinte.ads<s-osinte-nucleus.ads \\\n-  s-osinte.adb<s-osinte-nucleus.adb \\\n-  s-osprim.adb<s-osprim-nucleus.adb \\\n-  s-parame.adb<s-parame-vxworks.adb \\\n-  s-taprop.adb<s-taprop-posix.adb \\\n-  s-taspri.ads<s-taspri-posix.ads \\\n-  s-tpopsp.adb<s-tpopsp-posix.adb \\\n-  $(DUMMY_SOCKETS_TARGET_PAIRS)\n-\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-  GNATRTL_SOCKETS_OBJS =\n-endif\n-\n ifeq ($(EH_MECHANISM),-gcc)\n   LIBGNAT_TARGET_PAIRS += \\\n     a-exexpr.adb<a-exexpr-gcc.adb \\"}, {"sha": "06031b131c8aa2e8b4733e22c2e0bdb6195753e9", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865a63df4a19147d7a5ae804e97aa79371dfd7b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865a63df4a19147d7a5ae804e97aa79371dfd7b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=5865a63df4a19147d7a5ae804e97aa79371dfd7b", "patch": "@@ -4165,8 +4165,13 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t      ? is_required\n \t      : (Is_Inlined (gnat_entity) ? is_enabled : is_disabled);\n \tbool public_flag = Is_Public (gnat_entity) || imported_p;\n+\t/* Subprograms marked both Intrinsic and Always_Inline need not\n+\t   have a body of their own.  */\n \tbool extern_flag\n-\t  = (Is_Public (gnat_entity) && !definition) || imported_p;\n+\t  = ((Is_Public (gnat_entity) && !definition)\n+\t     || imported_p\n+\t     || (Convention (gnat_entity) == Convention_Intrinsic\n+\t\t && Has_Pragma_Inline_Always (gnat_entity)));\n \tbool artificial_flag = !Comes_From_Source (gnat_entity);\n        /* The semantics of \"pure\" in Ada essentially matches that of \"const\"\n           in the back-end.  In particular, both properties are orthogonal to"}]}