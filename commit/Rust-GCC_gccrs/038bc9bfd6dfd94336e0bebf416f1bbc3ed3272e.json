{"sha": "038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4YmM5YmZkNmRmZDk0MzM2ZTBiZWJmNDE2ZjFiYmMzZWQzMjcyZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-04-23T12:48:28Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-04-23T12:48:28Z"}, "message": "Implement correct std::variant triviality rules from P0602R4\n\nThe std::variant move assignment operator should not be trivial if the\nvariant is not trivially move constructible.\n\n\t* include/std/variant (__detail::__variant::_Traits): Make\n\t_S_trivial_copy_assign depend on _S_trivial_copy_ctor and make\n\t_S_trivial_move_assign depend on _S_trivial_move_ctor, as per\n\tP0602R4.\n\t(__detail::__variant::_Copy_assign_alias): Only depend on\n\t_S_trivial_copy_assign, which subsumes _S_trivial_copy_ctor now.\n\t* testsuite/20_util/variant/compile.cc: Correct checks for trivial\n\tmove assignment operators.\n\nFrom-SVN: r270510", "tree": {"sha": "68753eed4c1e39d40a754061198ac3b40361b493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68753eed4c1e39d40a754061198ac3b40361b493"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06715e1cfb475a89b2890951008e70325bdd0ce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06715e1cfb475a89b2890951008e70325bdd0ce4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06715e1cfb475a89b2890951008e70325bdd0ce4"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "abfbfd8addbe6e897f7cb198361e9552af5a686a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e", "patch": "@@ -1,5 +1,14 @@\n 2019-04-23  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/variant (__detail::__variant::_Traits): Make\n+\t_S_trivial_copy_assign depend on _S_trivial_copy_ctor and make\n+\t_S_trivial_move_assign depend on _S_trivial_move_ctor, as per\n+\tP0602R4.\n+\t(__detail::__variant::_Copy_assign_alias): Only depend on\n+\t_S_trivial_copy_assign, which subsumes _S_trivial_copy_ctor now.\n+\t* testsuite/20_util/variant/compile.cc: Correct checks for trivial\n+\tmove assignment operators.\n+\n \tPR libstdc++/90165\n \t* include/std/variant (variant::__not_self): New helper for the\n \tis_same_v<remove_cvref_t<T>, variant>==false constraints."}, {"sha": "0c9f8a39c5c7dcb0cf400bfa820c8a06e7530bca", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e", "patch": "@@ -289,9 +289,11 @@ namespace __variant\n       static constexpr bool _S_trivial_move_ctor =\n \t  (is_trivially_move_constructible_v<_Types> && ...);\n       static constexpr bool _S_trivial_copy_assign =\n-\t  _S_trivial_dtor && (is_trivially_copy_assignable_v<_Types> && ...);\n+\t  _S_trivial_dtor && _S_trivial_copy_ctor\n+\t  && (is_trivially_copy_assignable_v<_Types> && ...);\n       static constexpr bool _S_trivial_move_assign =\n-\t  _S_trivial_dtor && (is_trivially_move_assignable_v<_Types> && ...);\n+\t  _S_trivial_dtor && _S_trivial_move_ctor\n+\t  && (is_trivially_move_assignable_v<_Types> && ...);\n \n       // The following nothrow traits are for non-trivial SMFs. Trivial SMFs\n       // are always nothrow.\n@@ -303,7 +305,8 @@ namespace __variant\n \t  (is_nothrow_move_constructible_v<_Types> && ...);\n       static constexpr bool _S_nothrow_copy_assign = false;\n       static constexpr bool _S_nothrow_move_assign =\n-\t  _S_nothrow_move_ctor && (is_nothrow_move_assignable_v<_Types> && ...);\n+\t  _S_nothrow_move_ctor\n+\t  && (is_nothrow_move_assignable_v<_Types> && ...);\n     };\n \n   // Defines members and ctors.\n@@ -654,9 +657,7 @@ namespace __variant\n \n   template<typename... _Types>\n     using _Copy_assign_alias =\n-\t_Copy_assign_base<_Traits<_Types...>::_S_trivial_copy_assign\n-\t\t\t  && _Traits<_Types...>::_S_trivial_copy_ctor,\n-\t\t\t  _Types...>;\n+      _Copy_assign_base<_Traits<_Types...>::_S_trivial_copy_assign, _Types...>;\n \n   template<bool, typename... _Types>\n     struct _Move_assign_base : _Copy_assign_alias<_Types...>"}, {"sha": "c6b18d0825859bf9b2bdcde24cdd7cec07031cd9", "filename": "libstdc++-v3/testsuite/20_util/variant/compile.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fcompile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fcompile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fcompile.cc?ref=038bc9bfd6dfd94336e0bebf416f1bbc3ed3272e", "patch": "@@ -522,17 +522,17 @@ void test_triviality()\n   TEST_TEMPLATE(=default, =default, =default, =default,         ,  true,  true,  true, false)\n   TEST_TEMPLATE(=default, =default, =default,         , =default,  true,  true, false,  true)\n   TEST_TEMPLATE(=default, =default, =default,         ,         ,  true,  true, false, false)\n-  TEST_TEMPLATE(=default, =default,         , =default, =default,  true, false,  true,  true)\n+  TEST_TEMPLATE(=default, =default,         , =default, =default,  true, false,  true, false)\n   TEST_TEMPLATE(=default, =default,         , =default,         ,  true, false,  true, false)\n-  TEST_TEMPLATE(=default, =default,         ,         , =default,  true, false, false,  true)\n+  TEST_TEMPLATE(=default, =default,         ,         , =default,  true, false, false, false)\n   TEST_TEMPLATE(=default, =default,         ,         ,         ,  true, false, false, false)\n-  TEST_TEMPLATE(=default,         , =default, =default, =default, false,  true,  false,  true)\n-  TEST_TEMPLATE(=default,         , =default, =default,         , false,  true,  false, false)\n+  TEST_TEMPLATE(=default,         , =default, =default, =default, false,  true, false,  true)\n+  TEST_TEMPLATE(=default,         , =default, =default,         , false,  true, false, false)\n   TEST_TEMPLATE(=default,         , =default,         , =default, false,  true, false,  true)\n   TEST_TEMPLATE(=default,         , =default,         ,         , false,  true, false, false)\n-  TEST_TEMPLATE(=default,         ,         , =default, =default, false, false,  false,  true)\n-  TEST_TEMPLATE(=default,         ,         , =default,         , false, false,  false, false)\n-  TEST_TEMPLATE(=default,         ,         ,         , =default, false, false, false,  true)\n+  TEST_TEMPLATE(=default,         ,         , =default, =default, false, false, false, false)\n+  TEST_TEMPLATE(=default,         ,         , =default,         , false, false, false, false)\n+  TEST_TEMPLATE(=default,         ,         ,         , =default, false, false, false, false)\n   TEST_TEMPLATE(=default,         ,         ,         ,         , false, false, false, false)\n   TEST_TEMPLATE(        , =default, =default, =default, =default, false, false, false, false)\n   TEST_TEMPLATE(        , =default, =default, =default,         , false, false, false, false)"}]}