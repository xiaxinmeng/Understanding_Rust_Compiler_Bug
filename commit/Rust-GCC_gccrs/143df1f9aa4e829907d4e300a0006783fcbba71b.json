{"sha": "143df1f9aa4e829907d4e300a0006783fcbba71b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQzZGYxZjlhYTRlODI5OTA3ZDRlMzAwYTAwMDY3ODNmY2JiYTcxYg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-09-19T08:13:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-19T08:13:34Z"}, "message": "[Ada] Suppress GNAT FE up-level reference transformation for GNAT-LLVM\n\nIn the case of GNAT-LLVM, the GNAT FE no longer does expansion of\nup-level references identified by the subprogram unnesting machinery\ninto activation record references. This is now only done by the FE when\ngenerating C code. This expansion is already taken care of by the\ngnat-llvm middle phase, so there's no benefit to also doing it in the\nfront end.\n\n2019-09-19  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Unnest_Subprogram): Bypass the transformation of\n\tup-level references unless Opt.Generate_C_Code is enabled.\n\nFrom-SVN: r275942", "tree": {"sha": "1db92dfc561a8d841375a7f95440ecd5e50fb717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1db92dfc561a8d841375a7f95440ecd5e50fb717"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/143df1f9aa4e829907d4e300a0006783fcbba71b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143df1f9aa4e829907d4e300a0006783fcbba71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143df1f9aa4e829907d4e300a0006783fcbba71b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143df1f9aa4e829907d4e300a0006783fcbba71b/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1dd3915be108e6dcd7adfa01de6096419092a5de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dd3915be108e6dcd7adfa01de6096419092a5de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dd3915be108e6dcd7adfa01de6096419092a5de"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "86e9f07353fe8afbc0d2fedf182628f30b95f1ad", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143df1f9aa4e829907d4e300a0006783fcbba71b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143df1f9aa4e829907d4e300a0006783fcbba71b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=143df1f9aa4e829907d4e300a0006783fcbba71b", "patch": "@@ -1,3 +1,8 @@\n+2019-09-19  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_unst.adb (Unnest_Subprogram): Bypass the transformation of\n+\tup-level references unless Opt.Generate_C_Code is enabled.\n+\n 2019-09-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_ch4.adb (Expand_Array_Equality): If optimization is"}, {"sha": "b25b4492ec56027248c5c2be23a97ee19e8a9f8e", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143df1f9aa4e829907d4e300a0006783fcbba71b/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143df1f9aa4e829907d4e300a0006783fcbba71b/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=143df1f9aa4e829907d4e300a0006783fcbba71b", "patch": "@@ -2177,11 +2177,14 @@ package body Exp_Unst is\n             --  not need rewriting (e.g. the appearence in a conversion).\n             --  Also ignore if no reference was specified or if the rewriting\n             --  has already been done (this can happen if the N_Identifier\n-            --  occurs more than one time in the tree).\n+            --  occurs more than one time in the tree). Also ignore references\n+            --  when not generating C code (in particular for the case of LLVM,\n+            --  since GNAT-LLVM will handle the processing for up-level refs).\n \n             if No (UPJ.Ref)\n               or else not Is_Entity_Name (UPJ.Ref)\n               or else not Present (Entity (UPJ.Ref))\n+              or else not Opt.Generate_C_Code\n             then\n                goto Continue;\n             end if;"}]}