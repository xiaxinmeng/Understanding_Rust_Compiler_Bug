{"sha": "e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk4ZTYzNDA0YzZiMzA1N2FjMGYwZmY0ZmU4NzFjZDE5YTFhYWNiNA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-05-17T21:57:23Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-05-17T21:57:23Z"}, "message": "Fix comparison of decimal float zeroes (PR80692)\n\nDecimal float negative zero should compare equal to positive zero.\nDecimal float zeroes are encoded as value class \"normal\" (in real.c);\nthey need to be handled specially, but in this one case that does not\nyet happen.  This fixes it.\n\n\n\tPR middle-end/80692\n\t* real.c (do_compare): Give decimal_do_compare preference over\n\tcomparing just the signs.\n\ngcc/testsuite/\n\tPR middle-end/80692\n\t* gcc.c-torture/execute/pr80692.c: New testcase.\n\nFrom-SVN: r248174", "tree": {"sha": "60059a11d628cc19e51fd631d1d8f35c71eb2b26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60059a11d628cc19e51fd631d1d8f35c71eb2b26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78eca3093f7f60295aac46d559b5f21f3154e6dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78eca3093f7f60295aac46d559b5f21f3154e6dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78eca3093f7f60295aac46d559b5f21f3154e6dd"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "f9a143068a0f23c871ec7bf192e3e2256cf94d73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4", "patch": "@@ -1,3 +1,9 @@\n+2017-05-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR middle-end/80692\n+\t* real.c (do_compare): Give decimal_do_compare preference over\n+\tcomparing just the signs.\n+\n 2017-05-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* doc/md.texi (Canonicalization of Instructions): Describe the"}, {"sha": "a5671b2865bd10db1d26bfa02cc592aa109a43e2", "filename": "gcc/real.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4", "patch": "@@ -960,12 +960,12 @@ do_compare (const REAL_VALUE_TYPE *a, const REAL_VALUE_TYPE *b,\n       gcc_unreachable ();\n     }\n \n-  if (a->sign != b->sign)\n-    return -a->sign - -b->sign;\n-\n   if (a->decimal || b->decimal)\n     return decimal_do_compare (a, b, nan_result);\n \n+  if (a->sign != b->sign)\n+    return -a->sign - -b->sign;\n+\n   if (REAL_EXP (a) > REAL_EXP (b))\n     ret = 1;\n   else if (REAL_EXP (a) < REAL_EXP (b))"}, {"sha": "7b38a5233f9966b675d9228bf0bf9b3947419eea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4", "patch": "@@ -1,3 +1,8 @@\n+2017-05-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR middle-end/80692\n+\t* gcc.c-torture/execute/pr80692.c: New testcase.\n+\n 2017-05-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/80741"}, {"sha": "e653c71c91307664455ef49e25ee6a80d3723c1c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr80692.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr80692.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr80692.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr80692.c?ref=e98e63404c6b3057ac0f0ff4fe871cd19a1aacb4", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-require-effective-target dfp } */\n+\n+int main () {\n+\t_Decimal64 d64 = -0.DD;\n+\n+\tif (d64 != 0.DD)\n+\t\t__builtin_abort ();\n+\n+\tif (d64 != -0.DD)\n+\t\t__builtin_abort ();\n+\n+\treturn 0;\n+}"}]}