{"sha": "212513950ca0f5269b8e298a8b4c9a0982543449", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEyNTEzOTUwY2EwZjUyNjliOGUyOThhOGI0YzlhMDk4MjU0MzQ0OQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2018-05-05T07:56:21Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-05-05T07:56:21Z"}, "message": "[nvptx] Add workaround for subsequent bar.syncs\n\n2018-05-05  Tom de Vries  <tom@codesourcery.com>\n\n\tPR target/85653\n\t* config/nvptx/nvptx.c (WORKAROUND_PTXJIT_BUG_3): Define.\n\t(workaround_barsyncs): New function.\n\t(nvptx_reorg): Use workaround_barsyncs.\n\t* config/nvptx/nvptx.md (define_c_enum \"unspecv\"): Add UNSPECV_MEMBAR.\n\t(define_expand \"nvptx_membar_cta\"): New define_expand.\n\t(define_insn \"*nvptx_membar_cta\"): New insn.\n\nFrom-SVN: r259967", "tree": {"sha": "243bca933962f6c7d832878ab46835a9a3f46402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/243bca933962f6c7d832878ab46835a9a3f46402"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/212513950ca0f5269b8e298a8b4c9a0982543449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212513950ca0f5269b8e298a8b4c9a0982543449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/212513950ca0f5269b8e298a8b4c9a0982543449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212513950ca0f5269b8e298a8b4c9a0982543449/comments", "author": null, "committer": null, "parents": [{"sha": "39d8c7d2c1104ee8e9e19dec0c3a4973805fdb9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d8c7d2c1104ee8e9e19dec0c3a4973805fdb9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39d8c7d2c1104ee8e9e19dec0c3a4973805fdb9e"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "b06b273fc91dcdbe3216e9db0188410cee5e09ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212513950ca0f5269b8e298a8b4c9a0982543449/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212513950ca0f5269b8e298a8b4c9a0982543449/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=212513950ca0f5269b8e298a8b4c9a0982543449", "patch": "@@ -1,3 +1,13 @@\n+2018-05-05  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR target/85653\n+\t* config/nvptx/nvptx.c (WORKAROUND_PTXJIT_BUG_3): Define.\n+\t(workaround_barsyncs): New function.\n+\t(nvptx_reorg): Use workaround_barsyncs.\n+\t* config/nvptx/nvptx.md (define_c_enum \"unspecv\"): Add UNSPECV_MEMBAR.\n+\t(define_expand \"nvptx_membar_cta\"): New define_expand.\n+\t(define_insn \"*nvptx_membar_cta\"): New insn.\n+\n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n \t* brig-builtins.def: Add consts to ptrs etc. in BRIG builtin defs."}, {"sha": "5608bee8a8d590f1f79f3043a3ad8da45cdb3c0b", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212513950ca0f5269b8e298a8b4c9a0982543449/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212513950ca0f5269b8e298a8b4c9a0982543449/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=212513950ca0f5269b8e298a8b4c9a0982543449", "patch": "@@ -79,6 +79,7 @@\n \n #define WORKAROUND_PTXJIT_BUG 1\n #define WORKAROUND_PTXJIT_BUG_2 1\n+#define WORKAROUND_PTXJIT_BUG_3 1\n \n /* The various PTX memory areas an object might reside in.  */\n enum nvptx_data_area\n@@ -4647,6 +4648,50 @@ prevent_branch_around_nothing (void)\n   }\n #endif\n \n+#ifdef WORKAROUND_PTXJIT_BUG_3\n+/* Insert two membar.cta insns inbetween two subsequent bar.sync insns.  This\n+   works around a hang observed at driver version 390.48 for sm_50.  */\n+\n+static void\n+workaround_barsyncs (void)\n+{\n+  bool seen_barsync = false;\n+  for (rtx_insn *insn = get_insns (); insn; insn = NEXT_INSN (insn))\n+    {\n+      if (INSN_P (insn) && recog_memoized (insn) == CODE_FOR_nvptx_barsync)\n+\t{\n+\t  if (seen_barsync)\n+\t    {\n+\t      emit_insn_before (gen_nvptx_membar_cta (), insn);\n+\t      emit_insn_before (gen_nvptx_membar_cta (), insn);\n+\t    }\n+\n+\t  seen_barsync = true;\n+\t  continue;\n+\t}\n+\n+      if (!seen_barsync)\n+\tcontinue;\n+\n+      if (NOTE_P (insn) || DEBUG_INSN_P (insn))\n+\tcontinue;\n+      else if (INSN_P (insn))\n+\tswitch (recog_memoized (insn))\n+\t  {\n+\t  case CODE_FOR_nvptx_fork:\n+\t  case CODE_FOR_nvptx_forked:\n+\t  case CODE_FOR_nvptx_joining:\n+\t  case CODE_FOR_nvptx_join:\n+\t    continue;\n+\t  default:\n+\t    break;\n+\t  }\n+\n+      seen_barsync = false;\n+    }\n+}\n+#endif\n+\n /* PTX-specific reorganization\n    - Split blocks at fork and join instructions\n    - Compute live registers\n@@ -4730,6 +4775,10 @@ nvptx_reorg (void)\n   prevent_branch_around_nothing ();\n #endif\n \n+#ifdef WORKAROUND_PTXJIT_BUG_3\n+  workaround_barsyncs ();\n+#endif\n+\n   regstat_free_n_sets_and_refs ();\n \n   df_finish_pass (true);"}, {"sha": "975421959e0593f12bf2433c2dfbb07c20da3727", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212513950ca0f5269b8e298a8b4c9a0982543449/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212513950ca0f5269b8e298a8b4c9a0982543449/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=212513950ca0f5269b8e298a8b4c9a0982543449", "patch": "@@ -56,6 +56,7 @@\n    UNSPECV_XCHG\n    UNSPECV_BARSYNC\n    UNSPECV_MEMBAR\n+   UNSPECV_MEMBAR_CTA\n    UNSPECV_DIM_POS\n \n    UNSPECV_FORK\n@@ -1481,6 +1482,22 @@\n   \"\\\\tmembar.sys;\"\n   [(set_attr \"predicable\" \"false\")])\n \n+(define_expand \"nvptx_membar_cta\"\n+  [(set (match_dup 0)\n+\t(unspec_volatile:BLK [(match_dup 0)] UNSPECV_MEMBAR_CTA))]\n+  \"\"\n+{\n+  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n+  MEM_VOLATILE_P (operands[0]) = 1;\n+})\n+\n+(define_insn \"*nvptx_membar_cta\"\n+  [(set (match_operand:BLK 0 \"\" \"\")\n+\t(unspec_volatile:BLK [(match_dup 0)] UNSPECV_MEMBAR_CTA))]\n+  \"\"\n+  \"\\\\tmembar.cta;\"\n+  [(set_attr \"predicable\" \"false\")])\n+\n (define_insn \"nvptx_nounroll\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_NOUNROLL)]\n   \"\""}]}