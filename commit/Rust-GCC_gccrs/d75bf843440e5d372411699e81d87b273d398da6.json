{"sha": "d75bf843440e5d372411699e81d87b273d398da6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc1YmY4NDM0NDBlNWQzNzI0MTE2OTllODFkODdiMjczZDM5OGRhNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-01-29T22:00:30Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-01-29T22:00:30Z"}, "message": "interpret.cc (run_debug): Remove comment.\n\n\t* interpret.cc (run_debug): Remove comment.\n\t(STOREA): Reformat.\n\t(STOREI): Likewise.\n\t(STOREF): Likewise.\n\t(STOREL): Likewise.\n\t(STORED): Likewise.\n\t(POKEI): Likewise.\n\t(run_normal_debug): Likewise.\n\t(run_synch_object_debug): Likewise.\n\t(run_class_debug): Likewise.\n\t(run_synch_class_debug): Likewise.\n\t(get1s): Likewise.\n\t(get1u): Likewise.\n\t(get2u): Likewise.\n\t(get4): Likewise.\n\t(NULLARRAYCHECK): Likewise.\n\t(ARRAYBOUNDSCHECK): Likewise.\n\t* interpret-run.cc (insn_target) <breakpoint>: Tidy.\n\nFrom-SVN: r121313", "tree": {"sha": "84ae34c9d8476dca18f56cb0ffc6c139cc1d3937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84ae34c9d8476dca18f56cb0ffc6c139cc1d3937"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d75bf843440e5d372411699e81d87b273d398da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d75bf843440e5d372411699e81d87b273d398da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d75bf843440e5d372411699e81d87b273d398da6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d75bf843440e5d372411699e81d87b273d398da6/comments", "author": null, "committer": null, "parents": [{"sha": "a1c0627764484c1b0458b729ec374c49e1476302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c0627764484c1b0458b729ec374c49e1476302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c0627764484c1b0458b729ec374c49e1476302"}], "stats": {"total": 201, "additions": 114, "deletions": 87}, "files": [{"sha": "20e91fdb1fd4a46ae641f8f79f04511494698a54", "filename": "libjava/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75bf843440e5d372411699e81d87b273d398da6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75bf843440e5d372411699e81d87b273d398da6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d75bf843440e5d372411699e81d87b273d398da6", "patch": "@@ -1,3 +1,24 @@\n+2007-01-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* interpret.cc (run_debug): Remove comment.\n+\t(STOREA): Reformat.\n+\t(STOREI): Likewise.\n+\t(STOREF): Likewise.\n+\t(STOREL): Likewise.\n+\t(STORED): Likewise.\n+\t(POKEI): Likewise.\n+\t(run_normal_debug): Likewise.\n+\t(run_synch_object_debug): Likewise.\n+\t(run_class_debug): Likewise.\n+\t(run_synch_class_debug): Likewise.\n+\t(get1s): Likewise.\n+\t(get1u): Likewise.\n+\t(get2u): Likewise.\n+\t(get4): Likewise.\n+\t(NULLARRAYCHECK): Likewise.\n+\t(ARRAYBOUNDSCHECK): Likewise.\n+\t* interpret-run.cc (insn_target) <breakpoint>: Tidy.\n+\n 2007-01-29  Tom Tromey  <tromey@redhat.com>\n \n \t* configure, Makefile.in: Rebuilt."}, {"sha": "f3687459cb4518a5a95008cc91c0c931dd8f2afd", "filename": "libjava/interpret-run.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75bf843440e5d372411699e81d87b273d398da6/libjava%2Finterpret-run.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75bf843440e5d372411699e81d87b273d398da6/libjava%2Finterpret-run.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret-run.cc?ref=d75bf843440e5d372411699e81d87b273d398da6", "patch": "@@ -217,7 +217,7 @@ details.  */\n     INSN_LABEL(invokespecial),\n     INSN_LABEL(invokestatic),\n     INSN_LABEL(invokeinterface),\n-    INSN_LABEL (breakpoint),\n+    INSN_LABEL(breakpoint),\n     INSN_LABEL(new),\n     INSN_LABEL(newarray),\n     INSN_LABEL(anewarray),"}, {"sha": "7e694a392a1d38d8c554a16cc8dc3a58ac9e3a07", "filename": "libjava/interpret.cc", "status": "modified", "additions": 92, "deletions": 86, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75bf843440e5d372411699e81d87b273d398da6/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75bf843440e5d372411699e81d87b273d398da6/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=d75bf843440e5d372411699e81d87b273d398da6", "patch": "@@ -171,54 +171,56 @@ convert (FROM val, TO min, TO max)\n # define LOADD(I)  LOADL(I)\n #endif\n \n-#define STOREA(I) \t\t\\\n-do {\t\t\t\t\t\\\n-DEBUG_LOCALS_INSN(I, 'o');\t\t\\\n-locals[I].o = (--sp)->o;\t\t\\\n-} while(0)\n-#define STOREI(I) \t\t\\\n-do {\t\t\t\t\t\\\n-DEBUG_LOCALS_INSN (I, 'i');\t\t\\\n-locals[I].i = (--sp)->i;\t\t\\\n-} while(0)\n-#define STOREF(I)  \t\t\\\n-do {\t\t\t\t\t\\\n-DEBUG_LOCALS_INSN (I, 'f');\t\t\\\n-locals[I].f = (--sp)->f;\t\t\\\n-} while(0)\n+#define STOREA(I)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    DEBUG_LOCALS_INSN (I, 'o');\t\t\t\\\n+    locals[I].o = (--sp)->o;\t\t\t\\\n+  } while (0)\n+#define STOREI(I)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    DEBUG_LOCALS_INSN (I, 'i');\t\t\t\\\n+    locals[I].i = (--sp)->i;\t\t\t\\\n+  } while (0)\n+#define STOREF(I)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    DEBUG_LOCALS_INSN (I, 'f');\t\t\t\\\n+    locals[I].f = (--sp)->f;\t\t\t\\\n+  } while (0)\n #if SIZEOF_VOID_P == 8\n-# define STOREL(I)  \t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-DEBUG_LOCALS_INSN (I, 'l');\t\t\t\\\n-(sp -= 2, locals[I].l = sp->l);\t\t\\\n-} while(0)\n+# define STOREL(I)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    DEBUG_LOCALS_INSN (I, 'l');\t\t\t\\\n+    (sp -= 2, locals[I].l = sp->l);\t\t\\\n+  } while (0)\n # define STORED(I) \t\t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-DEBUG_LOCALS_INSN (I, 'd');\t\t\t\\\n-(sp -= 2, locals[I].d = sp->d);\t\t\\\n-} while(0)\n+  do {\t\t\t\t\t\t\\\n+    DEBUG_LOCALS_INSN (I, 'd');\t\t\t\\\n+    (sp -= 2, locals[I].d = sp->d);\t\t\\\n+  } while (0)\n \n #else\n-# define STOREL(I)\t\t\\\n-do { DEBUG_LOCALS_INSN(I, 'l');\t\\\n-\t jint __idx = (I); \t\\\n-     locals[__idx+1].ia[0] = (--sp)->ia[0]; \\\n-     locals[__idx].ia[0] = (--sp)->ia[0]; \t\\\n-   } while (0)\n-# define STORED(I)\t\t\\\n-do { DEBUG_LOCALS_INSN(I, 'd');\t\\\n-\t jint __idx = (I); \t\\\n-     locals[__idx+1].ia[0] = (--sp)->ia[0]; \\\n-     locals[__idx].ia[0] = (--sp)->ia[0]; \t\\\n-   } while (0)\n+# define STOREL(I)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    DEBUG_LOCALS_INSN (I, 'l');\t\t\t\\\n+    jint __idx = (I);\t\t\t\t\\\n+    locals[__idx+1].ia[0] = (--sp)->ia[0];\t\\\n+    locals[__idx].ia[0] = (--sp)->ia[0]; \t\\\n+  } while (0)\n+# define STORED(I)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    DEBUG_LOCALS_INSN(I, 'd');\t\t\t\\\n+    jint __idx = (I);\t\t\t\t\\\n+    locals[__idx+1].ia[0] = (--sp)->ia[0];\t\\\n+    locals[__idx].ia[0] = (--sp)->ia[0]; \t\\\n+  } while (0)\n #endif\n \n #define PEEKI(I)  (locals+(I))->i\n #define PEEKA(I)  (locals+(I))->o\n \n-#define POKEI(I,V)  \t\\\n-DEBUG_LOCALS_INSN(I,'i'); \\\n-((locals+(I))->i = (V))\n+#define POKEI(I,V)\t\t\t\t\\\n+  DEBUG_LOCALS_INSN(I,'i');\t\t\t\\\n+  ((locals+(I))->i = (V))\n \n \n #define BINOPI(OP) { \\\n@@ -245,23 +247,33 @@ DEBUG_LOCALS_INSN(I,'i'); \\\n    PUSHD(value1 OP value2); \\\n }\n \n-static inline jint get1s(unsigned char* loc) {\n+static inline jint\n+get1s (unsigned char* loc)\n+{\n   return *(signed char*)loc;\n }\n \n-static inline jint get1u(unsigned char* loc) {\n+static inline jint\n+get1u (unsigned char* loc)\n+{\n   return *loc;\n }\n \n-static inline jint get2s(unsigned char* loc) {\n+static inline jint\n+get2s(unsigned char* loc)\n+{\n   return (((jint)*(signed char*)loc) << 8) | ((jint)*(loc+1));\n }\n \n-static inline jint get2u(unsigned char* loc) {\n+static inline jint\n+get2u (unsigned char* loc)\n+{\n   return (((jint)(*loc)) << 8) | ((jint)*(loc+1));\n }\n \n-static jint get4(unsigned char* loc) {\n+static jint\n+get4 (unsigned char* loc)\n+{\n   return (((jint)(loc[0])) << 24) \n        | (((jint)(loc[1])) << 16) \n        | (((jint)(loc[2])) << 8) \n@@ -284,43 +296,46 @@ static jint get4(unsigned char* loc) {\n #ifdef HANDLE_SEGV\n #define NULLARRAYCHECK(X) SAVE_PC()\n #else\n-#define NULLARRAYCHECK(X) \\\n-  do { SAVE_PC(); if ((X)==NULL) { throw_null_pointer_exception (); } } while (0)\n+#define NULLARRAYCHECK(X)\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      SAVE_PC();\t\t\t\t\t\t\\\n+      if ((X) == NULL) { throw_null_pointer_exception (); }\t\\\n+    } while (0)\n #endif\n \n-#define ARRAYBOUNDSCHECK(array, index)\t\t\t\t\t      \\\n-  do\t\t\t\t\t\t\t\t\t      \\\n-    {\t\t\t\t\t\t\t\t\t      \\\n-      if (((unsigned) index) >= (unsigned) (array->length))\t\t      \\\n-\t_Jv_ThrowBadArrayIndex (index);\t\t\t\t\t      \\\n-    }\t\t\t\t\t\t\t\t\t      \\\n-  while (0)\n+#define ARRAYBOUNDSCHECK(array, index)\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      if (((unsigned) index) >= (unsigned) (array->length))\t\\\n+\t_Jv_ThrowBadArrayIndex (index);\t\t\t\t\\\n+    } while (0)\n \n void\n _Jv_InterpMethod::run_normal (ffi_cif *,\n-\t\t\t      void* ret,\n-\t\t\t      ffi_raw * args,\n-\t\t\t      void* __this)\n+\t\t\t      void *ret,\n+\t\t\t      ffi_raw *args,\n+\t\t\t      void *__this)\n {\n   _Jv_InterpMethod *_this = (_Jv_InterpMethod *) __this;\n   run (ret, args, _this);\n }\n \n void\n _Jv_InterpMethod::run_normal_debug (ffi_cif *,\n-\t\t\t      void* ret,\n-\t\t\t      ffi_raw * args,\n-\t\t\t      void* __this)\n+\t\t\t\t    void *ret,\n+\t\t\t\t    ffi_raw *args,\n+\t\t\t\t    void *__this)\n {\n   _Jv_InterpMethod *_this = (_Jv_InterpMethod *) __this;\n   run_debug (ret, args, _this);\n }\n \n void\n _Jv_InterpMethod::run_synch_object (ffi_cif *,\n-\t\t\t\t    void* ret,\n-\t\t\t\t    ffi_raw * args,\n-\t\t\t\t    void* __this)\n+\t\t\t\t    void *ret,\n+\t\t\t\t    ffi_raw *args,\n+\t\t\t\t    void *__this)\n {\n   _Jv_InterpMethod *_this = (_Jv_InterpMethod *) __this;\n \n@@ -332,9 +347,9 @@ _Jv_InterpMethod::run_synch_object (ffi_cif *,\n \n void\n _Jv_InterpMethod::run_synch_object_debug (ffi_cif *,\n-\t\t\t\t    void* ret,\n-\t\t\t\t    ffi_raw * args,\n-\t\t\t\t    void* __this)\n+\t\t\t\t\t  void *ret,\n+\t\t\t\t\t  ffi_raw *args,\n+\t\t\t\t\t  void *__this)\n {\n   _Jv_InterpMethod *_this = (_Jv_InterpMethod *) __this;\n \n@@ -346,9 +361,9 @@ _Jv_InterpMethod::run_synch_object_debug (ffi_cif *,\n \n void\n _Jv_InterpMethod::run_class (ffi_cif *,\n-\t\t\t     void* ret,\n-\t\t\t     ffi_raw * args,\n-\t\t\t     void* __this)\n+\t\t\t     void *ret,\n+\t\t\t     ffi_raw *args,\n+\t\t\t     void *__this)\n {\n   _Jv_InterpMethod *_this = (_Jv_InterpMethod *) __this;\n   _Jv_InitClass (_this->defining_class);\n@@ -357,9 +372,9 @@ _Jv_InterpMethod::run_class (ffi_cif *,\n \n void\n _Jv_InterpMethod::run_class_debug (ffi_cif *,\n-\t\t\t     void* ret,\n-\t\t\t     ffi_raw * args,\n-\t\t\t     void* __this)\n+\t\t\t\t   void *ret,\n+\t\t\t\t   ffi_raw *args,\n+\t\t\t\t   void *__this)\n {\n   _Jv_InterpMethod *_this = (_Jv_InterpMethod *) __this;\n   _Jv_InitClass (_this->defining_class);\n@@ -368,9 +383,9 @@ _Jv_InterpMethod::run_class_debug (ffi_cif *,\n \n void\n _Jv_InterpMethod::run_synch_class (ffi_cif *,\n-\t\t\t\t   void* ret,\n-\t\t\t\t   ffi_raw * args,\n-\t\t\t\t   void* __this)\n+\t\t\t\t   void *ret,\n+\t\t\t\t   ffi_raw *args,\n+\t\t\t\t   void *__this)\n {\n   _Jv_InterpMethod *_this = (_Jv_InterpMethod *) __this;\n \n@@ -383,9 +398,9 @@ _Jv_InterpMethod::run_synch_class (ffi_cif *,\n \n void\n _Jv_InterpMethod::run_synch_class_debug (ffi_cif *,\n-\t\t\t\t   void* ret,\n-\t\t\t\t   ffi_raw * args,\n-\t\t\t\t   void* __this)\n+\t\t\t\t\t void *ret,\n+\t\t\t\t\t ffi_raw *args,\n+\t\t\t\t\t void *__this)\n {\n   _Jv_InterpMethod *_this = (_Jv_InterpMethod *) __this;\n \n@@ -921,15 +936,6 @@ _Jv_InterpMethod::run (void *retp, ffi_raw *args, _Jv_InterpMethod *meth)\n void\n _Jv_InterpMethod::run_debug (void *retp, ffi_raw *args, _Jv_InterpMethod *meth)\n {\n-/* Used to keep track of local variable type\n- * \n- * Possible Types:\n- * o object\n- * i integer\n- * f float\n- * l long \n- * d double \n- */\n #define DEBUG\n #undef DEBUG_LOCALS_INSN\n #define DEBUG_LOCALS_INSN(s, t) do {} while(0)"}]}