{"sha": "3277074642a8201218f4f8efbd9c6a02815a29c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI3NzA3NDY0MmE4MjAxMjE4ZjRmOGVmYmQ5YzZhMDI4MTVhMjljMA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-05-11T16:23:44Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-11T16:23:44Z"}, "message": "flags.h (flag_short_enums): Update comment.\n\n\t* flags.h (flag_short_enums): Update comment.\n\t* opts.c (decode_options): Set flag_short_enums to 2.\n\t* toplev.c (flag_short_enums): Update comment.\n\t(process_options): Call default_short_enums target hook.\n\nFrom-SVN: r81704", "tree": {"sha": "13945cec14cd33eb090b36403f640a7b0262c5c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13945cec14cd33eb090b36403f640a7b0262c5c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3277074642a8201218f4f8efbd9c6a02815a29c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3277074642a8201218f4f8efbd9c6a02815a29c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3277074642a8201218f4f8efbd9c6a02815a29c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3277074642a8201218f4f8efbd9c6a02815a29c0/comments", "author": null, "committer": null, "parents": [{"sha": "946f318ae781197a2b4259a30610970dd440d0f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946f318ae781197a2b4259a30610970dd440d0f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/946f318ae781197a2b4259a30610970dd440d0f0"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "6a84fb677eb54885bd0618f4dc000a84b86975b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3277074642a8201218f4f8efbd9c6a02815a29c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3277074642a8201218f4f8efbd9c6a02815a29c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3277074642a8201218f4f8efbd9c6a02815a29c0", "patch": "@@ -1,3 +1,10 @@\n+2004-05-11  Paul Brook  <paul@codesourcery.com>\n+\n+\t* flags.h (flag_short_enums): Update comment.\n+\t* opts.c (decode_options): Set flag_short_enums to 2.\n+\t* toplev.c (flag_short_enums): Update comment.\n+\t(process_options): Call default_short_enums target hook.\n+\n 2004-05-11  Andrew Pinski  <pinskia@gcc.gnu.org>\n \n \tPR target/14063"}, {"sha": "458b2e9432f3400179f8860b3c8beef78da8ed4a", "filename": "gcc/flags.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3277074642a8201218f4f8efbd9c6a02815a29c0/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3277074642a8201218f4f8efbd9c6a02815a29c0/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=3277074642a8201218f4f8efbd9c6a02815a29c0", "patch": "@@ -244,7 +244,8 @@ extern int flag_print_asm_name;\n \n extern int flag_signed_char;\n \n-/* Nonzero means give an enum type only as many bytes as it needs.  */\n+/* Nonzero means give an enum type only as many bytes as it needs.  A value\n+   of 2 means it has not yet been initialized.  */\n \n extern int flag_short_enums;\n "}, {"sha": "4cf4446fdb57524f7e60e8fc0b77fa4f271c72e8", "filename": "gcc/opts.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3277074642a8201218f4f8efbd9c6a02815a29c0/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3277074642a8201218f4f8efbd9c6a02815a29c0/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=3277074642a8201218f4f8efbd9c6a02815a29c0", "patch": "@@ -604,8 +604,9 @@ decode_options (unsigned int argc, const char **argv)\n \n   /* Initialize whether `char' is signed.  */\n   flag_signed_char = DEFAULT_SIGNED_CHAR;\n-  /* Initialize how much space enums occupy, by default.  */\n-  flag_short_enums = targetm.default_short_enums ();\n+  /* Set this to a special \"uninitialized\" value.  The actual default is set\n+     after target options have been processed.  */\n+  flag_short_enums = 2;\n \n   /* Initialize target_flags before OPTIMIZATION_OPTIONS so the latter can\n      modify it.  */"}, {"sha": "046501846f20a68916ec1688759488c1662319a4", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3277074642a8201218f4f8efbd9c6a02815a29c0/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3277074642a8201218f4f8efbd9c6a02815a29c0/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=3277074642a8201218f4f8efbd9c6a02815a29c0", "patch": "@@ -314,7 +314,8 @@ unsigned local_tick;\n \n int flag_signed_char;\n \n-/* Nonzero means give an enum type only as many bytes as it needs.  */\n+/* Nonzero means give an enum type only as many bytes as it needs.  A value\n+   of 2 means it has not yet been initialized.  */\n \n int flag_short_enums;\n \n@@ -2232,6 +2233,9 @@ process_options (void)\n   OVERRIDE_OPTIONS;\n #endif\n \n+  if (flag_short_enums == 2)\n+    flag_short_enums = targetm.default_short_enums ();\n+\n   /* Set aux_base_name if not already set.  */\n   if (aux_base_name)\n     ;"}]}