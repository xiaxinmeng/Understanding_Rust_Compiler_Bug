{"sha": "f339eb66071559a02a0c05b3ee89fc8352969bc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMzOWViNjYwNzE1NTlhMDJhMGMwNWIzZWU4OWZjODM1Mjk2OWJjOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-08-01T16:27:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-08-01T16:27:04Z"}, "message": "PR c++/90805 - detect narrowing in case values.\n\n\t* decl.c (case_conversion): Detect narrowing in case values.\n\n\t* c-c++-common/pr89888.c: Update expected dg-error.\n\t* g++.dg/cpp0x/Wnarrowing17.C: New test.\n\t* g++.dg/cpp0x/enum28.C: Update expected dg-error.\n\nFrom-SVN: r273976", "tree": {"sha": "c1268328a554cc53785e00df31c20caa2dfbf9fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1268328a554cc53785e00df31c20caa2dfbf9fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f339eb66071559a02a0c05b3ee89fc8352969bc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f339eb66071559a02a0c05b3ee89fc8352969bc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f339eb66071559a02a0c05b3ee89fc8352969bc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f339eb66071559a02a0c05b3ee89fc8352969bc9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a66e68ad92f7b4150e35e20e2bb22f777837b63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a66e68ad92f7b4150e35e20e2bb22f777837b63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a66e68ad92f7b4150e35e20e2bb22f777837b63"}], "stats": {"total": 62, "additions": 50, "deletions": 12}, "files": [{"sha": "9a6c2e30e7f556cdd1b77f199b21ebecf4667843", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f339eb66071559a02a0c05b3ee89fc8352969bc9", "patch": "@@ -1,3 +1,8 @@\n+2019-08-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90805 - detect narrowing in case values.\n+\t* decl.c (case_conversion): Detect narrowing in case values.\n+\n 2019-07-31  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl2.c (delete_sanity): Improve diagnostic locations, use"}, {"sha": "c8b9e3b8fb9ed438449387f224ce936e5b016049", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=f339eb66071559a02a0c05b3ee89fc8352969bc9", "patch": "@@ -3631,16 +3631,23 @@ case_conversion (tree type, tree value)\n \n   value = mark_rvalue_use (value);\n \n+  if (INTEGRAL_OR_UNSCOPED_ENUMERATION_TYPE_P (type))\n+    type = type_promotes_to (type);\n+\n+  tree ovalue = value;\n+  /* The constant-expression VALUE shall be a converted constant expression\n+     of the adjusted type of the switch condition, which doesn't allow\n+     narrowing conversions.  */\n+  value = build_converted_constant_expr (type, value, tf_warning_or_error);\n+\n   if (cxx_dialect >= cxx11\n       && (SCOPED_ENUM_P (type)\n-\t  || !INTEGRAL_OR_UNSCOPED_ENUMERATION_TYPE_P (TREE_TYPE (value))))\n-    {\n-      if (INTEGRAL_OR_UNSCOPED_ENUMERATION_TYPE_P (type))\n-\ttype = type_promotes_to (type);\n-      value = (perform_implicit_conversion_flags\n-\t       (type, value, tf_warning_or_error,\n-\t\tLOOKUP_IMPLICIT | LOOKUP_NO_NON_INTEGRAL));\n-    }\n+\t  || !INTEGRAL_OR_UNSCOPED_ENUMERATION_TYPE_P (TREE_TYPE (ovalue))))\n+    /* Use the converted value.  */;\n+  else\n+    /* The already integral case.  */\n+    value = ovalue;\n+\n   return cxx_constant_value (value);\n }\n "}, {"sha": "d16e123d61a7ad29386721b4df81778d71647254", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f339eb66071559a02a0c05b3ee89fc8352969bc9", "patch": "@@ -1,3 +1,10 @@\n+2019-08-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90805 - detect narrowing in case values.\n+\t* c-c++-common/pr89888.c: Update expected dg-error.\n+\t* g++.dg/cpp0x/Wnarrowing17.C: New test.\n+\t* g++.dg/cpp0x/enum28.C: Update expected dg-error.\n+\n 2019-08-01  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc/testsuite/g++.dg/lto/pr89330_0.C: Add effective-target shared."}, {"sha": "f14881ca0528a2371670cc600f1369fe8dbbd3ae", "filename": "gcc/testsuite/c-c++-common/pr89888.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr89888.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr89888.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr89888.c?ref=f339eb66071559a02a0c05b3ee89fc8352969bc9", "patch": "@@ -11,8 +11,8 @@ foo (unsigned char x)\n     {\n     case -1: y = -1; break;\t\t\t/* { dg-message \"previously used here\" } */\n \t\t\t\t\t\t/* { dg-warning \"case label value is less than minimum value for type\" \"\" { target *-*-* } .-1 } */\n-    case 0xffffffff: y = 0xffffffff; break;\t/* { dg-error \"duplicate case value\" } */\n-    case ~0U: y = ~0U; break;\t\t\t/* { dg-error \"duplicate case value\" } */\n+    case 0xffffffff: y = 0xffffffff; break;\t/* { dg-error \"duplicate case value|narrowing\" } */\n+    case ~0U: y = ~0U; break;\t\t\t/* { dg-error \"duplicate case value|narrowing\" } */\n     }\n }\n "}, {"sha": "064de531cb3af7101cfab7c12aaea674023e650a", "filename": "gcc/testsuite/g++.dg/cpp0x/Wnarrowing17.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing17.C?ref=f339eb66071559a02a0c05b3ee89fc8352969bc9", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/90805 - detect narrowing in case values.\n+// { dg-do compile { target c++11 } }\n+\n+void f(int i, char c, unsigned u)\n+{\n+  switch (i)\n+    {\n+    case 2149056512u:; // { dg-error \"narrowing conversion of .2149056512. from .unsigned int. to .int.\" }\n+    case (long long int) 1e10:; // { dg-error \"narrowing conversion of .10000000000. from .long long int. to .int.\" }\n+    // { dg-warning \"overflow in conversion\" \"overflow\" { target *-*-* } .-1 }\n+    }\n+\n+  switch (c)\n+    // No narrowing, the adjusted type is int.\n+    case 300:; // { dg-warning \"exceeds maximum value for type\" }\n+\n+  switch (u)\n+    case -42:; // { dg-error \"narrowing conversion of .-42. from .int. to .unsigned int.\" }\n+}"}, {"sha": "bfebde57cb3ac1b773969b0596a51b5027cbbbd0", "filename": "gcc/testsuite/g++.dg/cpp0x/enum28.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f339eb66071559a02a0c05b3ee89fc8352969bc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum28.C?ref=f339eb66071559a02a0c05b3ee89fc8352969bc9", "patch": "@@ -7,11 +7,11 @@ void f(int i)\n {\n   switch (i)\n     {\n-    case 1.0:;    // { dg-error \"could not convert\" }\n+    case 1.0:;    // { dg-error \"could not convert|conversion from\" }\n     }\n \n   switch (i)\n     {\n-    case g():;    // { dg-error \"could not convert\" }\n+    case g():;    // { dg-error \"could not convert|conversion from\" }\n     }\n }"}]}