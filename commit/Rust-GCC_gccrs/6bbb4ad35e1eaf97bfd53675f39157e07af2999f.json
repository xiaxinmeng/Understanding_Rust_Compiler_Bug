{"sha": "6bbb4ad35e1eaf97bfd53675f39157e07af2999f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJiYjRhZDM1ZTFlYWY5N2JmZDUzNjc1ZjM5MTU3ZTA3YWYyOTk5Zg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2003-11-17T17:39:05Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2003-11-17T17:39:05Z"}, "message": "java-tree.h (LOCAL_VAR_OUT_OF_SCOPE_P): New.\n\n2003-09-12  Andrew Haley  <aph@redhat.com>\n\n        * java-tree.h (LOCAL_VAR_OUT_OF_SCOPE_P): New.\n        (struct lang_decl_var:freed): New variable.\n        * decl.c (poplevel): Mark local vars that have gone out of scope.\n        (push_jvm_slot): Don't use the RTL of a var that has gone out of\n        scope.\n\nFrom-SVN: r73675", "tree": {"sha": "96d693db1f60c111e9a3672d73aabfa2c5980216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96d693db1f60c111e9a3672d73aabfa2c5980216"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bbb4ad35e1eaf97bfd53675f39157e07af2999f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bbb4ad35e1eaf97bfd53675f39157e07af2999f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bbb4ad35e1eaf97bfd53675f39157e07af2999f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bbb4ad35e1eaf97bfd53675f39157e07af2999f/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a53208d3c33530bbb30121080fea21e5b2c8bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a53208d3c33530bbb30121080fea21e5b2c8bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a53208d3c33530bbb30121080fea21e5b2c8bf7"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "301a4a77371b9aca3eda3bb4a40bab5bb42c6026", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbb4ad35e1eaf97bfd53675f39157e07af2999f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbb4ad35e1eaf97bfd53675f39157e07af2999f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6bbb4ad35e1eaf97bfd53675f39157e07af2999f", "patch": "@@ -1,3 +1,11 @@\n+2003-09-12  Andrew Haley  <aph@redhat.com>\n+\n+\t* java-tree.h (LOCAL_VAR_OUT_OF_SCOPE_P): New.\n+\t(struct lang_decl_var:freed): New variable. \n+\t* decl.c (poplevel): Mark local vars that have gone out of scope.\n+\t(push_jvm_slot): Don't use the RTL of a var that has gone out of\n+\tscope.\n+\n 2003-11-16  Jason Merrill  <jason@redhat.com>\n \n \t* Make-lang.in (java.tags): Create TAGS.sub files in each directory"}, {"sha": "4b0c4963f3ac95f0e3603047cb8c55b28c55279f", "filename": "gcc/java/decl.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbb4ad35e1eaf97bfd53675f39157e07af2999f/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbb4ad35e1eaf97bfd53675f39157e07af2999f/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=6bbb4ad35e1eaf97bfd53675f39157e07af2999f", "patch": "@@ -116,7 +116,8 @@ push_jvm_slot (int index, tree decl)\n   tmp = TREE_VEC_ELT (decl_map, index);\n   while (tmp != NULL_TREE)\n     {\n-      if (TYPE_MODE (type) == TYPE_MODE (TREE_TYPE (tmp)))\n+      if (TYPE_MODE (type) == TYPE_MODE (TREE_TYPE (tmp))\n+\t  && ! LOCAL_VAR_OUT_OF_SCOPE_P (tmp))\n \trtl = DECL_RTL_IF_SET (tmp);\n       if (rtl != NULL)\n \tbreak;\n@@ -1266,6 +1267,7 @@ poplevel (int keep, int reverse, int functionbody)\n   tree block = 0;\n   tree decl;\n   int block_previously_created;\n+    {\n \n #if defined(DEBUG_JAVA_BINDING_LEVELS)\n   binding_depth--;\n@@ -1306,12 +1308,13 @@ poplevel (int keep, int reverse, int functionbody)\n \t&& DECL_INITIAL (decl) != 0\n \t&& TREE_ADDRESSABLE (decl))\n       {\n-\t/* If this decl was copied from a file-scope decl\n-\t   on account of a block-scope extern decl,\n-\t   propagate TREE_ADDRESSABLE to the file-scope decl.\n-\n-\t   DECL_ABSTRACT_ORIGIN can be set to itself if warn_return_type is\n-\t   true, since then the decl goes through save_for_inline_copying.  */\n+\t  /* If this decl was copied from a file-scope decl on account\n+\t     of a block-scope extern decl, propagate TREE_ADDRESSABLE\n+\t     to the file-scope decl.\n+\t     \n+\t     DECL_ABSTRACT_ORIGIN can be set to itself if\n+\t     warn_return_type is true, since then the decl goes\n+\t     through save_for_inline_copying.  */\n \tif (DECL_ABSTRACT_ORIGIN (decl) != 0\n \t    && DECL_ABSTRACT_ORIGIN (decl) != decl)\n \t  TREE_ADDRESSABLE (DECL_ABSTRACT_ORIGIN (decl)) = 1;\n@@ -1322,6 +1325,11 @@ poplevel (int keep, int reverse, int functionbody)\n \t    pop_function_context ();\n \t  }\n       }\n+      else if (TREE_CODE (decl) == VAR_DECL\n+\t       && DECL_LANG_SPECIFIC (decl) != NULL\n+\t       && DECL_LOCAL_SLOT_NUMBER (decl))\n+\tLOCAL_VAR_OUT_OF_SCOPE_P (decl) = 1;\n+    }\n \n   /* If there were any declarations in that level,\n      or if this level is a function body,"}, {"sha": "8c58bb70f8c878b073fec7b260bdbee56c5bc77c", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bbb4ad35e1eaf97bfd53675f39157e07af2999f/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bbb4ad35e1eaf97bfd53675f39157e07af2999f/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=6bbb4ad35e1eaf97bfd53675f39157e07af2999f", "patch": "@@ -947,6 +947,9 @@ union lang_tree_node\n /* True if NODE is a class initialization flag. */\n #define LOCAL_CLASS_INITIALIZATION_FLAG_P(NODE) \\\n     (DECL_LANG_SPECIFIC (NODE) && LOCAL_CLASS_INITIALIZATION_FLAG(NODE))\n+/* True if NODE is a variable that is out of scope.  */\n+#define LOCAL_VAR_OUT_OF_SCOPE_P(NODE) \\\n+    (DECL_LANG_SPECIFIC(NODE)->u.v.freed)\n /* Create a DECL_LANG_SPECIFIC if necessary. */\n #define MAYBE_CREATE_VAR_LANG_DECL_SPECIFIC(T)\t\t\t\\\n   if (DECL_LANG_SPECIFIC (T) == NULL)\t\t\t\t\\\n@@ -1031,6 +1034,7 @@ struct lang_decl_var GTY(())\n   tree wfl;\t\t\t/* Original wfl */\n   unsigned int final_iud : 1;\t/* Final initialized upon declaration */\n   unsigned int cif : 1;\t\t/* True: decl is a class initialization flag */\n+  unsigned int freed;\t\t/* Decl is no longer in scope.  */\n };\n \n /* This is what 'lang_decl' really points to.  */"}]}