{"sha": "3ad0f470c16d5528a5283060b007f8b419c33c92", "node_id": "C_kwDOANBUbNoAKDNhZDBmNDcwYzE2ZDU1MjhhNTI4MzA2MGIwMDdmOGI0MTljMzNjOTI", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-30T12:32:53Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-12-07T19:54:45Z"}, "message": "libstdc++: Pass error handler to libbacktrace functions\n\nAlso pass threaded=1 to __glibcxx_backtrace_create_state and remove some\nof the namespace scope declarations in the header.\n\nCo-authored-by: Fran\u00e7ois Dumont <frs.dumont@gmail.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/debug/formatter.h [_GLIBCXX_DEBUG_BACKTRACE]\n\t(_Error_formatter::_Error_formatter): Pass error handler to\n\t__glibcxx_backtrace_create_state. Pass 1 for threaded argument.\n\t(_Error_formatter::_S_err): Define empty function.\n\t* src/c++11/debug.cc (_Error_formatter::_M_error): Pass error\n\thandler to __glibcxx_backtrace_full.", "tree": {"sha": "5869492476ca86dd818a29c90e5a26d6c63ed803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5869492476ca86dd818a29c90e5a26d6c63ed803"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ad0f470c16d5528a5283060b007f8b419c33c92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad0f470c16d5528a5283060b007f8b419c33c92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad0f470c16d5528a5283060b007f8b419c33c92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad0f470c16d5528a5283060b007f8b419c33c92/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc02d4a99a7073dbef193c93529f2e1b64addfe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc02d4a99a7073dbef193c93529f2e1b64addfe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc02d4a99a7073dbef193c93529f2e1b64addfe2"}], "stats": {"total": 54, "additions": 30, "deletions": 24}, "files": [{"sha": "e8a83a21bde1582354d6585d8ad9cf1300f7f9ba", "filename": "libstdc++-v3/include/debug/formatter.h", "status": "modified", "additions": 12, "deletions": 23, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad0f470c16d5528a5283060b007f8b419c33c92/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad0f470c16d5528a5283060b007f8b419c33c92/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fformatter.h?ref=3ad0f470c16d5528a5283060b007f8b419c33c92", "patch": "@@ -32,32 +32,17 @@\n #include <bits/c++config.h>\n \n #if _GLIBCXX_HAVE_STACKTRACE\n-struct __glibcxx_backtrace_state;\n-\n extern \"C\"\n {\n-  __glibcxx_backtrace_state*\n+  struct __glibcxx_backtrace_state*\n   __glibcxx_backtrace_create_state(const char*, int,\n \t\t\t\t   void(*)(void*, const char*, int),\n \t\t\t\t   void*);\n-\n-  typedef int (*__glibcxx_backtrace_full_callback) (\n-    void*, __UINTPTR_TYPE__, const char *, int, const char*);\n-\n-  typedef void (*__glibcxx_backtrace_error_callback) (\n-    void*, const char*, int);\n-\n-  typedef int (*__glibcxx_backtrace_full_func) (\n-    __glibcxx_backtrace_state*, int,\n-    __glibcxx_backtrace_full_callback,\n-    __glibcxx_backtrace_error_callback,\n-    void*);\n-\n   int\n   __glibcxx_backtrace_full(\n-    __glibcxx_backtrace_state*, int,\n-    __glibcxx_backtrace_full_callback,\n-    __glibcxx_backtrace_error_callback,\n+    struct __glibcxx_backtrace_state*, int,\n+    int (*)(void*, __UINTPTR_TYPE__, const char *, int, const char*),\n+    void (*)(void*, const char*, int),\n     void*);\n }\n #endif\n@@ -609,10 +594,10 @@ namespace __gnu_debug\n     , _M_function(__function)\n #if _GLIBCXX_HAVE_STACKTRACE\n # ifdef _GLIBCXX_DEBUG_BACKTRACE\n-    , _M_backtrace_state(__glibcxx_backtrace_create_state(0, 0, 0, 0))\n+    , _M_backtrace_state(__glibcxx_backtrace_create_state(0, 1, _S_err, 0))\n     , _M_backtrace_full(&__glibcxx_backtrace_full)\n # else\n-    , _M_backtrace_state()\n+    , _M_backtrace_state(0)\n # endif\n #endif\n     { }\n@@ -631,8 +616,12 @@ namespace __gnu_debug\n     const char*\t\t_M_text;\n     const char*\t\t_M_function;\n #if _GLIBCXX_HAVE_STACKTRACE\n-    __glibcxx_backtrace_state*\t\t_M_backtrace_state;\n-    __glibcxx_backtrace_full_func\t_M_backtrace_full;\n+    struct __glibcxx_backtrace_state*\t\t_M_backtrace_state;\n+    // TODO: Remove _M_backtrace_full after __glibcxx_backtrace_full is moved\n+    // from libstdc++_libbacktrace.a to libstdc++.so:\n+    __decltype(&__glibcxx_backtrace_full)\t_M_backtrace_full;\n+\n+    static void _S_err(void*, const char*, int) { }\n #endif\n \n   public:"}, {"sha": "83996ffe622da7480bbebfc5428b859c74eac391", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad0f470c16d5528a5283060b007f8b419c33c92/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad0f470c16d5528a5283060b007f8b419c33c92/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=3ad0f470c16d5528a5283060b007f8b419c33c92", "patch": "@@ -1141,6 +1141,23 @@ namespace\n \n     return ret;\n   }\n+\n+  void\n+  print_backtrace_error(void* data, const char* msg, int errnum)\n+  {\n+    PrintContext& ctx = *static_cast<PrintContext*>(data);\n+\n+    print_literal(ctx, \"Backtrace unavailable: \");\n+    print_word(ctx, msg ? msg : \"<unknown error>\");\n+    if (errnum > 0)\n+      {\n+\tchar buf[64];\n+\tint written = __builtin_sprintf(buf, \" (errno=%d)\\n\", errnum);\n+\tprint_word(ctx, buf, written);\n+      }\n+    else\n+      print_literal(ctx, \"\\n\");\n+  }\n #endif\n }\n \n@@ -1193,7 +1210,7 @@ namespace __gnu_debug\n       {\n \tprint_literal(ctx, \"Backtrace:\\n\");\n \t_M_backtrace_full(\n-\t  _M_backtrace_state, 1, print_backtrace, nullptr, &ctx);\n+\t  _M_backtrace_state, 1, print_backtrace, print_backtrace_error, &ctx);\n \tctx._M_first_line = true;\n \tprint_literal(ctx, \"\\n\");\n       }"}]}