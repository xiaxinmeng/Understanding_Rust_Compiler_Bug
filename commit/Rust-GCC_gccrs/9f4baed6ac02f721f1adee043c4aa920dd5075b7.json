{"sha": "9f4baed6ac02f721f1adee043c4aa920dd5075b7", "node_id": "C_kwDOANBUbNoAKDlmNGJhZWQ2YWMwMmY3MjFmMWFkZWUwNDNjNGFhOTIwZGQ1MDc1Yjc", "commit": {"author": {"name": "Arsen Arsenovi\u0107", "email": "arsen@aarsen.me", "date": "2023-01-23T12:41:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-06T20:46:52Z"}, "message": "libstdc++: Document P1642 and extensions\n\nlibstdc++-v3/ChangeLog:\n\n\t* doc/xml/manual/using.xml: Document newly-freestanding\n\theaders and the effect of the -ffreestanding flag.\n\t* doc/xml/manual/status_cxx2023.xml: Document P1642R11 as\n\tcompleted.\n\t* doc/xml/manual/configure.xml: Document that hosted installs\n\trespect __STDC_HOSTED__.\n\t* doc/xml/manual/test.xml: Document how to run tests in\n\tfreestanding mode.\n\t* doc/html/*: Regenerate.", "tree": {"sha": "bd5037153cd35f8d58b3d34c6b9c3735ca737f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd5037153cd35f8d58b3d34c6b9c3735ca737f9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f4baed6ac02f721f1adee043c4aa920dd5075b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4baed6ac02f721f1adee043c4aa920dd5075b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4baed6ac02f721f1adee043c4aa920dd5075b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4baed6ac02f721f1adee043c4aa920dd5075b7/comments", "author": {"login": "ArsenArsen", "id": 7805050, "node_id": "MDQ6VXNlcjc4MDUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7805050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArsenArsen", "html_url": "https://github.com/ArsenArsen", "followers_url": "https://api.github.com/users/ArsenArsen/followers", "following_url": "https://api.github.com/users/ArsenArsen/following{/other_user}", "gists_url": "https://api.github.com/users/ArsenArsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArsenArsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArsenArsen/subscriptions", "organizations_url": "https://api.github.com/users/ArsenArsen/orgs", "repos_url": "https://api.github.com/users/ArsenArsen/repos", "events_url": "https://api.github.com/users/ArsenArsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ArsenArsen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17d0892d61a82a338925c81853b45eb8b4929fc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17d0892d61a82a338925c81853b45eb8b4929fc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17d0892d61a82a338925c81853b45eb8b4929fc0"}], "stats": {"total": 174, "additions": 152, "deletions": 22}, "files": [{"sha": "ed7021bd4610c2c3c35b35bd4a667d1e1c090149", "filename": "libstdc++-v3/doc/html/index.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>The GNU C++ Library</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"description\" content=\"Short Contents Copyright (C) 2008-2022 FSF Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts. This is the top level of the libstdc++ documentation set. The documentation is divided into the following three sections. Manual Frequently Asked Questions API and Source Documentation\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"index.html\" title=\"The GNU C++ Library\" /><link rel=\"next\" href=\"manual/index.html\" title=\"The GNU C++ Library Manual\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">The GNU C++ Library</th></tr><tr><td width=\"20%\" align=\"left\">\u00a0</td><th width=\"60%\" align=\"center\">\u00a0</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"manual/index.html\">Next</a></td></tr></table><hr /></div><div class=\"set\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"set-index\"></a>The GNU C++ Library</h1></div><div><div class=\"abstract\"><a id=\"contents\"></a><p class=\"title\"><strong>Short Contents</strong></p><p>\n-      Copyright (C) 2008-2022\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>The GNU C++ Library</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets Vsnapshot\" /><meta name=\"description\" content=\"Short Contents Copyright (C) 2008-2023 FSF Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts. This is the top level of the libstdc++ documentation set. The documentation is divided into the following three sections. Manual Frequently Asked Questions API and Source Documentation\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"index.html\" title=\"The GNU C++ Library\" /><link rel=\"next\" href=\"manual/index.html\" title=\"The GNU C++ Library Manual\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">The GNU C++ Library</th></tr><tr><td width=\"20%\" align=\"left\">\u00a0</td><th width=\"60%\" align=\"center\">\u00a0</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"manual/index.html\">Next</a></td></tr></table><hr /></div><div class=\"set\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h1 class=\"title\"><a id=\"set-index\"></a>The GNU C++ Library</h1></div><div><div class=\"abstract\"><a id=\"contents\"></a><p class=\"title\"><strong>Short Contents</strong></p><p>\n+      Copyright (C) 2008-2023\n       <a class=\"link\" href=\"https://www.fsf.org\" target=\"_top\">FSF\n       </a>\n     </p><p>"}, {"sha": "dd9e6ef3579d2f663564448821145a71e41cee39", "filename": "libstdc++-v3/doc/html/manual/configure.html", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconfigure.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconfigure.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconfigure.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -219,7 +219,10 @@\n      built.  The C++ Standard also describes a\n      <span class=\"emphasis\"><em>freestanding</em></span> environment, in which only a\n      minimal set of headers are provided.  This option builds such an\n-     environment.\n+     environment.  Note that a hosted library installs headers that still can\n+     be used in non hosted environments, as the library checks for\n+     <code class=\"code\">__STDC_HOSTED__</code>, however, a library configured with\n+     <code class=\"code\">--disable-hosted-libstdcxx</code> will not install unusable headers.\n      </p></dd><dt><span class=\"term\"><code class=\"code\">--disable-libstdcxx-hosted</code></span></dt><dd><p>This is an alias for <code class=\"code\">--disable-hosted-libstdcxx</code>.</p></dd><dt><span class=\"term\"><code class=\"code\">--disable-libstdcxx-verbose</code></span></dt><dd><p>\n      By default, the library is configured to write descriptive messages\n      to standard error for certain events such as calling a pure virtual"}, {"sha": "24df9bd9481d93ec8cc5d1cf93bc69f83083511c", "filename": "libstdc++-v3/doc/html/manual/documentation_hacking.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdocumentation_hacking.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdocumentation_hacking.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fdocumentation_hacking.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -560,4 +560,4 @@\n       </td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_porting.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_porting.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"internals.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0B.\u00a0\n   Porting and Maintenance\n   \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Porting to New Hardware or Operating Systems</td></tr></table></div></body></html>\n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Porting to New Hardware or Operating Systems</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "08ad2fd4dd8f399b4a4b111f6590ce67d13fa1d9", "filename": "libstdc++-v3/doc/html/manual/memory.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fmemory.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -644,4 +644,4 @@\n \t</a>\n       </em>. </span><span class=\"subtitle\">\n       N2461\n-    . </span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"pairs.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"traits.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Pairs\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Traits</td></tr></table></div></body></html>\n+    . </span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"pairs.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"traits.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Pairs\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Traits</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "90345550012920232cd2641ec5d654b347da39f4", "filename": "libstdc++-v3/doc/html/manual/policy_data_structures.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -1297,4 +1297,4 @@\n \t    Wickland\n \t  </span>. </span><span class=\"publisher\"><span class=\"publishername\">\n \t  National Psychological Institute\n-\t. </span></span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator_impl.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_using.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Implementation\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Using</td></tr></table></div></body></html>\n+\t. </span></span></p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator_impl.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"policy_data_structures_using.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Implementation\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Using</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "c99d51ff709cf6e45a650f2188bec659236a7aaa", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -1916,7 +1916,11 @@\n         <a class=\"link\" href=\"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2186r2.html\" target=\"_top\">\n         P2186R2\n         </a>\n-      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"status.iso.tr1\"></a>C++ TR1</h3></div></div></div><p>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Easy [utilities], [ranges], and [iterators] </td><td align=\"left\">\n+        <a class=\"link\" href=\"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1642r11.html\" target=\"_top\">\n+        P1642R11\n+        </a>\n+      </td><td align=\"center\"> 13.1 </td><td align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"status.iso.tr1\"></a>C++ TR1</h3></div></div></div><p>\n This table is based on the table of contents of ISO/IEC DTR 19768,\n Doc No: N1836=05-0096, Date: 2005-06-24,\n \"Draft Technical Report on C++ Library Extensions\"."}, {"sha": "fadadf249bb35020c38b4338ba4600782e34075c", "filename": "libstdc++-v3/doc/html/manual/test.html", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Ftest.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -203,6 +203,18 @@\n  </p><pre class=\"programlisting\">\n     make check-target-libstdc++-v3 RUNTESTFLAGS='--target_board \\\"unix{-mabi=32,,-mabi=64}\\\"'\n </pre><p>\n+    </p><p>\n+      If you wish to run the testsuite in a freestanding configuration, you can\n+      pass the <code class=\"code\">-ffreestanding</code> flag.  Doing so will run the tests\n+      that do not require hosted features, and emit a\n+      <code class=\"literal\">UNSUPPORTED</code> for those that do.  To run tests in the\n+      freestanding configuration, you still need to build for a target you can\n+      run programs on, e.g. <code class=\"code\">x86_64-pc-linux-gnu</code>, as a few tests\n+      still execute the code they build.  Here's an example of how to run the\n+      testsuite with libstdc++ in freestanding mode:\n+      </p><pre class=\"programlisting\">\n+    make check-target-libstdc++-v3 RUNTESTFLAGS='--target_board=unix/-ffreestanding'\n+      </pre><p>\n     </p><p>\n       You can run the tests with a compiler and library that have\n       already been installed.  Make sure that the compiler (e.g.,"}, {"sha": "f23325ebe9747acaa218a1485158e99ce74e38ca", "filename": "libstdc++-v3/doc/html/manual/using.html", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -40,4 +40,10 @@\n       </td></tr><tr><td align=\"left\"><code class=\"literal\">-fopenmp</code></td><td align=\"left\">For <a class=\"link\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\">parallel</a> mode.</td></tr><tr><td align=\"left\"><code class=\"literal\">-ltbb</code></td><td align=\"left\">Linking to tbb (Thread Building Blocks) is required for use of the\n         Parallel Standard Algorithms and execution policies in\n         <code class=\"filename\">&lt;execution&gt;</code>.\n+      </td></tr><tr><td align=\"left\"><code class=\"literal\">-ffreestanding</code></td><td align=\"left\">\n+\tLimits the library to its freestanding subset.  Headers that are\n+\tnot supported in freestanding will emit a \"This header is not available\n+\tin freestanding mode\" error.\n+\tHeaders that are in the freestanding subset partially will not expose\n+\tfunctionality that is not part of the freestanding subset.\n       </td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"make.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"intro.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"using_headers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Make\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Headers</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "73d1f18485fae120e043218bd13d10cfba4afe6a", "filename": "libstdc++-v3/doc/html/manual/using_dynamic_or_shared.html", "status": "modified", "additions": 32, "deletions": 7, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_dynamic_or_shared.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_dynamic_or_shared.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_dynamic_or_shared.html?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -30,15 +30,40 @@\n \t  <code class=\"filename\">initializer_list</code>\n \t  </p></li><li class=\"listitem\"><p>\n \t  <code class=\"filename\">type_traits</code>\n-\t  </p></li></ul></div><p> There exists a library that offers runtime support for\n-\tjust these headers, and it is called\n-\t<code class=\"filename\">libsupc++.a</code>. To use it, compile with <span class=\"command\"><strong>gcc</strong></span> instead of <span class=\"command\"><strong>g++</strong></span>, like so:\n+\t  </p></li></ul></div><p>\n+\tAs of GCC 13, libstdc++ implements P1642, which brings in many more\n+\theaders, as well a quite a few ones not covered by the paper.\n+\n+\tIn general, if a feature does not require traditionally libc-provided\n+\tfacilities, or dynamic memory allocation, it's enabled in the\n+\tfreestanding subset.  In addition, if only a subset of a header\n+\trequires such features, it is partially included.  Some examples\n+\tinclude:\n+      </p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>\n+\t  <code class=\"filename\">string_view</code>\n+\t  </p></li><li class=\"listitem\"><p>\n+\t  <code class=\"filename\">tuple</code>\n+\t  </p></li><li class=\"listitem\"><p>\n+\t  <code class=\"filename\">bitset</code>\n+\t  </p></li></ul></div><p>\n+\tCurrently, this subset includes all of the iterator APIs (including the\n+\tranges APIs) that do not involve streams, the entire C++ algorithms\n+\tlibrary, excluding parallel algorithms, and a large part of the\n+\tutilities library.  This is on top of the headers included in the lists\n+\tabove.\n+      </p><p>\n+\tIf you're using a libstdc++ configured for hosted environments, and\n+\twould like to not involve the libraries libstdc++ would depend on in\n+\tyour programs, you will need to use <span class=\"command\"><strong>gcc</strong></span> to link your\n+\tapplication with only <code class=\"filename\">libsupc++.a</code>,\n+\tlike so:\n       </p><p>\n-\t<span class=\"command\"><strong>gcc foo.cc -lsupc++</strong></span>\n+\t<span class=\"command\"><strong>gcc -ffreestanding foo.cc -lsupc++</strong></span>\n       </p><p>\n-\tNo attempt is made to verify that only the minimal subset\n-\tidentified above is actually used at compile time. Violations\n-\tare diagnosed as undefined symbols at link time.\n+\tIf you configured libstdc++ with\n+\t<code class=\"code\">--disable-hosted-libstdcxx</code>, however, you can use the\n+\tnormal <span class=\"command\"><strong>g++</strong></span> command to link, as this configuration\n+\tprovides a (nearly) empty <code class=\"filename\">libstdc++.a</code>.\n       </p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.linkage.dynamic\"></a>Finding Dynamic or Shared Libraries</h3></div></div></div><p>\n       If the only library built is the static library\n       (<code class=\"filename\">libstdc++.a</code>), or if"}, {"sha": "7ff07aea8864ed309fd8e3b0a95da19461277b0e", "filename": "libstdc++-v3/doc/xml/manual/configure.xml", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -362,7 +362,10 @@\n      built.  The C++ Standard also describes a\n      <emphasis>freestanding</emphasis> environment, in which only a\n      minimal set of headers are provided.  This option builds such an\n-     environment.\n+     environment.  Note that a hosted library installs headers that still can\n+     be used in non hosted environments, as the library checks for\n+     <code>__STDC_HOSTED__</code>, however, a library configured with\n+     <code>--disable-hosted-libstdcxx</code> will not install unusable headers.\n      </para>\n  </listitem></varlistentry>\n "}, {"sha": "f23c64d6a29effdbcb8a87208de74b0c45147312", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2023.xml", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2023.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2023.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2023.xml?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -566,6 +566,17 @@ or any notes about the implementation.\n       <entry />\n     </row>\n \n+    <row>\n+      <entry> Easy [utilities], [ranges], and [iterators] </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1642r11.html\">\n+        P1642R11\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 13.1 </entry>\n+      <entry />\n+    </row>\n+\n   </tbody>\n </tgroup>\n </table>"}, {"sha": "964c53d263226829e3f40a53c9995400320d7f82", "filename": "libstdc++-v3/doc/xml/manual/test.xml", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -350,6 +350,20 @@ cat 27_io/objects/char/3_xin.in | a.out</programlisting>\n </programlisting>\n     </para>\n \n+    <para>\n+      If you wish to run the testsuite in a freestanding configuration, you can\n+      pass the <code>-ffreestanding</code> flag.  Doing so will run the tests\n+      that do not require hosted features, and emit a\n+      <literal>UNSUPPORTED</literal> for those that do.  To run tests in the\n+      freestanding configuration, you still need to build for a target you can\n+      run programs on, e.g. <code>x86_64-pc-linux-gnu</code>, as a few tests\n+      still execute the code they build.  Here's an example of how to run the\n+      testsuite with libstdc++ in freestanding mode:\n+      <programlisting>\n+    make check-target-libstdc++-v3 RUNTESTFLAGS='--target_board=unix/-ffreestanding'\n+      </programlisting>\n+    </para>\n+\n     <para>\n       You can run the tests with a compiler and library that have\n       already been installed.  Make sure that the compiler (e.g.,"}, {"sha": "7f011a6d9316a4c4ee7aa68e858777ffcec63dc4", "filename": "libstdc++-v3/doc/xml/manual/using.xml", "status": "modified", "additions": 59, "deletions": 7, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4baed6ac02f721f1adee043c4aa920dd5075b7/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml?ref=9f4baed6ac02f721f1adee043c4aa920dd5075b7", "patch": "@@ -132,6 +132,17 @@\n       </entry>\n     </row>\n \n+    <row>\n+      <entry><literal>-ffreestanding</literal></entry>\n+      <entry>\n+\tLimits the library to its freestanding subset.  Headers that are\n+\tnot supported in freestanding will emit a \"This header is not available\n+\tin freestanding mode\" error.\n+\tHeaders that are in the freestanding subset partially will not expose\n+\tfunctionality that is not part of the freestanding subset.\n+      </entry>\n+    </row>\n+\n   </tbody>\n \n </tgroup>\n@@ -1523,19 +1534,60 @@ namespace gtk\n \t</listitem>\n       </itemizedlist>\n \n-      <para> There exists a library that offers runtime support for\n-\tjust these headers, and it is called\n-\t<filename class=\"libraryfile\">libsupc++.a</filename>. To use it, compile with <command>gcc</command> instead of <command>g++</command>, like so:\n+      <para>\n+\tAs of GCC 13, libstdc++ implements P1642, which brings in many more\n+\theaders, as well a quite a few ones not covered by the paper.\n+\n+\tIn general, if a feature does not require traditionally libc-provided\n+\tfacilities, or dynamic memory allocation, it's enabled in the\n+\tfreestanding subset.  In addition, if only a subset of a header\n+\trequires such features, it is partially included.  Some examples\n+\tinclude:\n+      </para>\n+\n+      <itemizedlist>\n+\t<listitem>\n+\t  <para>\n+\t  <filename class=\"headerfile\">string_view</filename>\n+\t  </para>\n+\t</listitem>\n+\t<listitem>\n+\t  <para>\n+\t  <filename class=\"headerfile\">tuple</filename>\n+\t  </para>\n+\t</listitem>\n+\t<listitem>\n+\t  <para>\n+\t  <filename class=\"headerfile\">bitset</filename>\n+\t  </para>\n+\t</listitem>\n+      </itemizedlist>\n+\n+      <para>\n+\tCurrently, this subset includes all of the iterator APIs (including the\n+\tranges APIs) that do not involve streams, the entire C++ algorithms\n+\tlibrary, excluding parallel algorithms, and a large part of the\n+\tutilities library.  This is on top of the headers included in the lists\n+\tabove.\n+      </para>\n+\n+      <para>\n+\tIf you're using a libstdc++ configured for hosted environments, and\n+\twould like to not involve the libraries libstdc++ would depend on in\n+\tyour programs, you will need to use <command>gcc</command> to link your\n+\tapplication with only <filename class=\"libraryfile\">libsupc++.a</filename>,\n+\tlike so:\n       </para>\n \n       <para>\n-\t<command>gcc foo.cc -lsupc++</command>\n+\t<command>gcc -ffreestanding foo.cc -lsupc++</command>\n       </para>\n \n       <para>\n-\tNo attempt is made to verify that only the minimal subset\n-\tidentified above is actually used at compile time. Violations\n-\tare diagnosed as undefined symbols at link time.\n+\tIf you configured libstdc++ with\n+\t<code>--disable-hosted-libstdcxx</code>, however, you can use the\n+\tnormal <command>g++</command> command to link, as this configuration\n+\tprovides a (nearly) empty <filename class=\"libraryfile\">libstdc++.a</filename>.\n       </para>\n     </section>\n "}]}