{"sha": "a76ddc7bda84d17ddc6577c60daf95897a2de515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2ZGRjN2JkYTg0ZDE3ZGRjNjU3N2M2MGRhZjk1ODk3YTJkZTUxNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-09-10T21:06:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-10T21:06:25Z"}, "message": "re PR target/36904 (vector context sensitive keyword vs macros)\n\n\tPR target/36904\n\t* config/rs6000/rs6000-c.c (rs6000_macro_to_expand): Return NULL\n\tinstead of tok->val.node if not expanding to something else.  Handle\n\tintervening CPP_PADDING tokens.\n\t(altivec_categorize_keyword): Remove unneeded comparisons.\n\n\t* gcc.target/powerpc/altivec-27.c: New test.\n\nFrom-SVN: r140247", "tree": {"sha": "089a54f99fe72026286048a049f61df57d71ec60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/089a54f99fe72026286048a049f61df57d71ec60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a76ddc7bda84d17ddc6577c60daf95897a2de515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76ddc7bda84d17ddc6577c60daf95897a2de515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a76ddc7bda84d17ddc6577c60daf95897a2de515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76ddc7bda84d17ddc6577c60daf95897a2de515/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1011d8a2ffdba31d8b9d43be43daa69ac8fb56a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1011d8a2ffdba31d8b9d43be43daa69ac8fb56a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1011d8a2ffdba31d8b9d43be43daa69ac8fb56a3"}], "stats": {"total": 84, "additions": 70, "deletions": 14}, "files": [{"sha": "48e59e6b4e6f5b8dd85474d876bcd38c57208d26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76ddc7bda84d17ddc6577c60daf95897a2de515/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76ddc7bda84d17ddc6577c60daf95897a2de515/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a76ddc7bda84d17ddc6577c60daf95897a2de515", "patch": "@@ -1,3 +1,11 @@\n+2008-09-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/36904\n+\t* config/rs6000/rs6000-c.c (rs6000_macro_to_expand): Return NULL\n+\tinstead of tok->val.node if not expanding to something else.  Handle\n+\tintervening CPP_PADDING tokens.\n+\t(altivec_categorize_keyword): Remove unneeded comparisons.\n+\n 2008-09-10  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-pre.c (phi_translate_1): Fix memory leak."}, {"sha": "da1cb787169ecafbbd46a9453c27c25695f2530f", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76ddc7bda84d17ddc6577c60daf95897a2de515/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76ddc7bda84d17ddc6577c60daf95897a2de515/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=a76ddc7bda84d17ddc6577c60daf95897a2de515", "patch": "@@ -102,16 +102,13 @@ altivec_categorize_keyword (const cpp_token *tok)\n     {\n       cpp_hashnode *ident = tok->val.node;\n \n-      if (ident == C_CPP_HASHNODE (vector_keyword)\n-\t  || ident == C_CPP_HASHNODE (__vector_keyword))\n+      if (ident == C_CPP_HASHNODE (vector_keyword))\n \treturn C_CPP_HASHNODE (__vector_keyword);\n \n-      if (ident == C_CPP_HASHNODE (pixel_keyword)\n-\t  || ident ==  C_CPP_HASHNODE (__pixel_keyword))\n+      if (ident == C_CPP_HASHNODE (pixel_keyword))\n \treturn C_CPP_HASHNODE (__pixel_keyword);\n \n-      if (ident == C_CPP_HASHNODE (bool_keyword)\n-\t  || ident == C_CPP_HASHNODE (__bool_keyword))\n+      if (ident == C_CPP_HASHNODE (bool_keyword))\n \treturn C_CPP_HASHNODE (__bool_keyword);\n \n       return ident;\n@@ -158,12 +155,18 @@ rs6000_macro_to_expand (cpp_reader *pfile, const cpp_token *tok)\n \n   ident = altivec_categorize_keyword (tok);\n \n+  if (ident != expand_this)\n+    expand_this = NULL;\n+\n   if (ident == C_CPP_HASHNODE (__vector_keyword))\n     {\n-      tok = cpp_peek_token (pfile, 0);\n+      int idx = 0;\n+      do\n+\ttok = cpp_peek_token (pfile, idx++);\n+      while (tok->type == CPP_PADDING);\n       ident = altivec_categorize_keyword (tok);\n \n-      if (ident ==  C_CPP_HASHNODE (__pixel_keyword))\n+      if (ident == C_CPP_HASHNODE (__pixel_keyword))\n \t{\n \t  expand_this = C_CPP_HASHNODE (__vector_keyword);\n \t  expand_bool_pixel = __pixel_keyword;\n@@ -178,8 +181,12 @@ rs6000_macro_to_expand (cpp_reader *pfile, const cpp_token *tok)\n \t  enum rid rid_code = (enum rid)(ident->rid_code);\n \t  if (ident->type == NT_MACRO)\n \t    {\n-\t      (void)cpp_get_token (pfile);\n-\t      tok = cpp_peek_token (pfile, 0);\n+\t      do\n+\t\t(void) cpp_get_token (pfile);\n+\t      while (--idx > 0);\n+\t      do\n+\t\ttok = cpp_peek_token (pfile, idx++);\n+\t      while (tok->type == CPP_PADDING);\n \t      ident = altivec_categorize_keyword (tok);\n \t      if (ident)\n \t\trid_code = (enum rid)(ident->rid_code);\n@@ -193,19 +200,23 @@ rs6000_macro_to_expand (cpp_reader *pfile, const cpp_token *tok)\n \t      expand_this = C_CPP_HASHNODE (__vector_keyword);\n \t      /* If the next keyword is bool or pixel, it\n \t\t will need to be expanded as well.  */\n-\t      tok = cpp_peek_token (pfile, 1);\n+\t      do\n+\t\ttok = cpp_peek_token (pfile, idx++);\n+\t      while (tok->type == CPP_PADDING);\n \t      ident = altivec_categorize_keyword (tok);\n \n-\t      if (ident ==  C_CPP_HASHNODE (__pixel_keyword))\n+\t      if (ident == C_CPP_HASHNODE (__pixel_keyword))\n \t\texpand_bool_pixel = __pixel_keyword;\n \t      else if (ident == C_CPP_HASHNODE (__bool_keyword))\n \t\texpand_bool_pixel = __bool_keyword;\n \t      else\n \t\t{\n \t\t  /* Try two tokens down, too.  */\n-\t\t  tok = cpp_peek_token (pfile, 2);\n+\t\t  do\n+\t\t    tok = cpp_peek_token (pfile, idx++);\n+\t\t  while (tok->type == CPP_PADDING);\n \t\t  ident = altivec_categorize_keyword (tok);\n-\t\t  if (ident ==  C_CPP_HASHNODE (__pixel_keyword))\n+\t\t  if (ident == C_CPP_HASHNODE (__pixel_keyword))\n \t\t    expand_bool_pixel = __pixel_keyword;\n \t\t  else if (ident == C_CPP_HASHNODE (__bool_keyword))\n \t\t    expand_bool_pixel = __bool_keyword;"}, {"sha": "88463e9b491aca6672b8d93849e6a31ca1608b09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76ddc7bda84d17ddc6577c60daf95897a2de515/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76ddc7bda84d17ddc6577c60daf95897a2de515/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a76ddc7bda84d17ddc6577c60daf95897a2de515", "patch": "@@ -1,3 +1,8 @@\n+2008-09-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/36904\n+\t* gcc.target/powerpc/altivec-27.c: New test.\n+\n 2008-09-10  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR middle-end/37333"}, {"sha": "7db0ea01f2c7475a7976fdc6c6c9b51c0a834cff", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-27.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76ddc7bda84d17ddc6577c60daf95897a2de515/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76ddc7bda84d17ddc6577c60daf95897a2de515/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-27.c?ref=a76ddc7bda84d17ddc6577c60daf95897a2de515", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec\" } */\n+\n+#define f0() void x0 (vector float x) { }\n+f0 ()\n+\n+#define f1(type) void x1##type (vector type x) { }\n+f1 (float)\n+\n+#define f2(v, type) void x2##type (v type x) { }\n+f2 (vector, float)\n+\n+#define f3(type) void x3##type (vector bool type x) { }\n+f3 (int)\n+\n+#define f4(v, type) void x4##type (v bool type x) { }\n+f4 (vector, int)\n+\n+#define f5(b, type) void x5##type (vector b type x) { }\n+f5 (bool, int)\n+\n+#define f6(v, b, type) void x6##type (v b type x) { }\n+f6 (vector, bool, int)\n+\n+#define f7(v, b, type) void x7##type (v type b x) { }\n+f7 (vector, bool, int)\n+\n+int vector = 6;\n+\n+#define v1(v) int x8 (int v) { return v; }\n+v1(vector)"}]}