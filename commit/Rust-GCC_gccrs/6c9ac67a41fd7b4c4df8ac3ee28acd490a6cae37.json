{"sha": "6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM5YWM2N2E0MWZkN2I0YzRkZjhhYzNlZTI4YWNkNDkwYTZjYWUzNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-12-15T16:14:26Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-12-15T16:14:26Z"}, "message": "mt.c (mt_override_options): Require lower case architectures.\n\n\t* config/mt/mt.c (mt_override_options): Require lower case\n\tarchitectures.  Revert accidental default to ms2.\n\t* config/mt/mt.h (ASM_SPEC, LIBSPEC, STARTFILE_SPEC,\n\tENDFILE_SPEC): Require lower case architectures.  Revert default\n\tto ms2.\n\n\t* doc/invoke.texi (MT Options): Rename and update.\n\t* doc/md.texi (MorphoTech family): Rename and update.\n\nFrom-SVN: r108581", "tree": {"sha": "475d8f29579efb5a37a4853d38e1248b7c1c9c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/475d8f29579efb5a37a4853d38e1248b7c1c9c79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/comments", "author": null, "committer": null, "parents": [{"sha": "1984347212f34ecac5c5b2aa307f0fa238e721dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1984347212f34ecac5c5b2aa307f0fa238e721dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1984347212f34ecac5c5b2aa307f0fa238e721dc"}], "stats": {"total": 71, "additions": 31, "deletions": 40}, "files": [{"sha": "3a79601e17972ed3cd4d24d1b7062fcb1b6fa8c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "patch": "@@ -1,3 +1,14 @@\n+2005-12-15  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/mt/mt.c (mt_override_options): Require lower case\n+\tarchitectures.  Revert accidental default to ms2.\n+\t* config/mt/mt.h (ASM_SPEC, LIBSPEC, STARTFILE_SPEC,\n+\tENDFILE_SPEC): Require lower case architectures.  Revert default\n+\tto ms2.\n+\n+\t* doc/invoke.texi (MT Options): Rename and update.\n+\t* doc/md.texi (MorphoTech family): Rename and update.\n+\n 2005-12-15  Olivier Hainque  <hainque@adacore.com>\n \n \t* stor-layout.c (layout_type): Don't complain about a too small"}, {"sha": "7efd2f78e4d6cedaf5a8f5cd93b587950905e73b", "filename": "gcc/config/mt/mt.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2Fconfig%2Fmt%2Fmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2Fconfig%2Fmt%2Fmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmt%2Fmt.c?ref=6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "patch": "@@ -796,19 +796,19 @@ mt_override_options (void)\n {\n   if (mt_cpu_string != NULL)\n     {\n-      if (!strcasecmp (mt_cpu_string, \"MS1-64-001\"))\n+      if (!strcmp (mt_cpu_string, \"ms1-64-001\"))\n \tmt_cpu = PROCESSOR_MS1_64_001;\n-      else if (!strcasecmp (mt_cpu_string, \"MS1-16-002\"))\n+      else if (!strcmp (mt_cpu_string, \"ms1-16-002\"))\n \tmt_cpu = PROCESSOR_MS1_16_002;\n-      else if  (!strcasecmp (mt_cpu_string, \"MS1-16-003\"))\n+      else if  (!strcmp (mt_cpu_string, \"ms1-16-003\"))\n \tmt_cpu = PROCESSOR_MS1_16_003;\n-      else if (!strcasecmp (mt_cpu_string, \"MS2\"))\n+      else if (!strcmp (mt_cpu_string, \"ms2\"))\n \tmt_cpu = PROCESSOR_MS2;\n       else\n \terror (\"bad value (%s) for -march= switch\", mt_cpu_string);\n     }\n   else\n-    mt_cpu = PROCESSOR_MS2;\n+    mt_cpu = PROCESSOR_MS1_16_002;\n \n   if (flag_exceptions)\n     {"}, {"sha": "75bd0af5f676a0c991d2e6fab3a5c0d297815971", "filename": "gcc/config/mt/mt.h", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2Fconfig%2Fmt%2Fmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2Fconfig%2Fmt%2Fmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmt%2Fmt.h?ref=6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "patch": "@@ -41,49 +41,37 @@ extern enum processor_type mt_cpu;\n /* A C string constant that tells the GCC driver program options to pass to\n    the assembler.  */\n #undef  ASM_SPEC\n-#define ASM_SPEC \"%{march=*} %{!march=*: -march=ms2}\"\n+#define ASM_SPEC \"%{march=*} %{!march=*: -march=ms1-16-002}\"\n \n /* A string to pass to at the end of the command given to the linker.  */\n #undef  LIB_SPEC\n #define LIB_SPEC \"--start-group -lc -lsim --end-group \\\n %{msim: ; \\\n march=ms1-64-001:-T 64-001.ld%s; \\\n-march=MS1-64-001:-T 64-001.ld%s; \\\n march=ms1-16-002:-T 16-002.ld%s; \\\n-march=MS1-16-002:-T 16-002.ld%s; \\\n march=ms1-16-003:-T 16-003.ld%s; \\\n-march=MS1-16-003:-T 16-003.ld%s; \\\n march=ms2:-T ms2.ld%s; \\\n-march=MS2:-T ms2.ld%s; \\\n-\t : -T ms2.ld}\"\n+\t :-T ms1-16-002.ld}\"\n \n /* A string to pass at the very beginning of the command given to the\n    linker.  */\n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \"%{msim:crt0.o%s;\\\n march=ms1-64-001:%{!mno-crt0:crt0-64-001.o%s} startup-64-001.o%s; \\\n-march=MS1-64-001:%{!mno-crt0:crt0-64-001.o%s} startup-64-001.o%s; \\\n march=ms1-16-002:%{!mno-crt0:crt0-16-002.o%s} startup-16-002.o%s; \\\n-march=MS1-16-002:%{!mno-crt0:crt0-16-002.o%s} startup-16-002.o%s; \\\n march=ms1-16-003:%{!mno-crt0:crt0-16-003.o%s} startup-16-003.o%s; \\\n-march=MS1-16-003:%{!mno-crt0:crt0-16-003.o%s} startup-16-003.o%s; \\\n march=ms2:%{!mno-crt0:crt0-ms2.o%s} startup-ms2.o%s; \\\n-march=MS2:%{!mno-crt0:crt0-ms2.o%s} startup-ms2.o%s; \\\n-\t :%{!mno-crt0:crt0-ms2.o%s} startup-ms2.o%s} \\\n+\t :%{!mno-crt0:crt0-ms2.o%s} startup-16-002.o%s} \\\n crti.o%s crtbegin.o%s\"\n \n /* A string to pass at the end of the command given to the linker.  */\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \"%{msim:exit.o%s; \\\n march=ms1-64-001:exit-64-001.o%s; \\\n-march=MS1-64-001:exit-64-001.o%s; \\\n march=ms1-16-002:exit-16-002.o%s; \\\n-march=MS1-16-002:exit-16-002.o%s; \\\n march=ms1-16-003:exit-16-003.o%s; \\\n-march=MS1-16-003:exit-16-003.o%s; \\\n march=ms2:exit-ms2.o%s; \\\n-march=MS2:exit-ms2.o%s; \\\n-\t :exit-ms2.o%s} \\\n+\t :exit-ms1-16-002.o%s} \\\n  crtend.o%s crtn.o%s\"\n \f\n /* Run-time target specifications.  */"}, {"sha": "198d265451033d28122b04bbd730d57167f178b8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "patch": "@@ -618,8 +618,8 @@ Objective-C and Objective-C++ Dialects}.\n -mreturn-pointer-on-d0 @gol\n -mno-crt0  -mrelax}\n \n-@emph{MS1 Options}\n-@gccoptlist{-mno-crt0 -mmul -mbacc -msim @gol\n+@emph{MT Options}\n+@gccoptlist{-mno-crt0 -mbacc -msim @gol\n -march=@var{cpu-type} }\n \n @emph{PDP-11 Options}\n@@ -7147,7 +7147,7 @@ platform.\n * MIPS Options::\n * MMIX Options::\n * MN10300 Options::\n-* MS1 Options::\n+* MT Options::\n * PDP-11 Options::\n * PowerPC Options::\n * RS/6000 and PowerPC Options::\n@@ -10687,30 +10687,22 @@ has an effect when used on the command line for the final link step.\n This option makes symbolic debugging impossible.\n @end table\n \n-@node MS1 Options\n-@subsection MS1 Options\n-@cindex MS1 options\n+@node MT Options\n+@subsection MT Options\n+@cindex MT options\n \n-These @option{-m} options are defined for Morpho MS1 architectures:\n+These @option{-m} options are defined for Morpho MT architectures:\n \n @table @gcctabopt\n \n @item -march=@var{cpu-type}\n @opindex march\n Generate code that will run on @var{cpu-type}, which is the name of a system\n representing a certain processor type.  Possible values for\n-@var{cpu-type} are @samp{MS1-64-001}, @samp{MS1-16-002}, and\n-@samp{MS1-16-003}.\n+@var{cpu-type} are @samp{ms1-64-001}, @samp{ms1-16-002},\n+@samp{ms1-16-003} and @samp{ms2}.\n \n-When this option is not used, the default is @option{-march=MS1-16-003}.\n-\n-@item -mmul\n-@opindex mmul\n-Generate multiply instructions.\n-\n-@item -mno-mul\n-@opindex mno-mul\n-Do not generate multiply instructions.\n+When this option is not used, the default is @option{-march=ms1-16-002}.\n \n @item -mbacc\n @opindex mbacc"}, {"sha": "cce838dd9cca771d6faa2d57d47ee1345f318abb", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=6c9ac67a41fd7b4c4df8ac3ee28acd490a6cae37", "patch": "@@ -1858,7 +1858,7 @@ Constant suitable as a 32-bit mask operand\n System V Release 4 small data area reference\n @end table\n \n-@item MorphoRISC family---@file{ms1.h}\n+@item MorphoTech family---@file{mt.h}\n @table @code\n @item I\n Constant for an arithmetic insn (16-bit signed integer)."}]}