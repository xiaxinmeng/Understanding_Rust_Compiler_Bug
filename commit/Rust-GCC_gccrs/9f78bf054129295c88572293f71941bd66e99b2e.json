{"sha": "9f78bf054129295c88572293f71941bd66e99b2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY3OGJmMDU0MTI5Mjk1Yzg4NTcyMjkzZjcxOTQxYmQ2NmU5OWIyZQ==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "basile@starynkevitch.net", "date": "2009-09-23T22:59:02Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-09-23T22:59:02Z"}, "message": "gengtype.c (nb_plugin_files): Make it unsigned to match num_gt_files.\n\n2009-09-23  Basile Starynkevitch  <basile@starynkevitch.net>\n            Rafael Avila de Espindola  <espindola@google.com>\n\n\t* gengtype.c (nb_plugin_files): Make it unsigned to match\n\tnum_gt_files. Adjust other variables to avoid warnings.\n\t(main): Allocate an all zero lang_bitmap before each plugin file name\n\tto match regular file names.\n\n\nCo-Authored-By: Rafael Avila de Espindola <espindola@google.com>\n\nFrom-SVN: r152106", "tree": {"sha": "39991adff191d396d120729174020451da5a9f25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39991adff191d396d120729174020451da5a9f25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f78bf054129295c88572293f71941bd66e99b2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f78bf054129295c88572293f71941bd66e99b2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f78bf054129295c88572293f71941bd66e99b2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f78bf054129295c88572293f71941bd66e99b2e/comments", "author": {"login": "bstarynk", "id": 90412, "node_id": "MDQ6VXNlcjkwNDEy", "avatar_url": "https://avatars.githubusercontent.com/u/90412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstarynk", "html_url": "https://github.com/bstarynk", "followers_url": "https://api.github.com/users/bstarynk/followers", "following_url": "https://api.github.com/users/bstarynk/following{/other_user}", "gists_url": "https://api.github.com/users/bstarynk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstarynk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstarynk/subscriptions", "organizations_url": "https://api.github.com/users/bstarynk/orgs", "repos_url": "https://api.github.com/users/bstarynk/repos", "events_url": "https://api.github.com/users/bstarynk/events{/privacy}", "received_events_url": "https://api.github.com/users/bstarynk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b4fa409a97f9d398698dff291e4e7176747d6b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4fa409a97f9d398698dff291e4e7176747d6b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b4fa409a97f9d398698dff291e4e7176747d6b4"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "4c210979f5cf813175b6e6b82996cd79c51f64b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f78bf054129295c88572293f71941bd66e99b2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f78bf054129295c88572293f71941bd66e99b2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f78bf054129295c88572293f71941bd66e99b2e", "patch": "@@ -1,3 +1,11 @@\n+2009-09-23  Basile Starynkevitch  <basile@starynkevitch.net>\n+            Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* gengtype.c (nb_plugin_files): Make it unsigned to match\n+\tnum_gt_files. Adjust other variables to avoid warnings.\n+\t(main): Allocate an all zero lang_bitmap before each plugin file name\n+\tto match regular file names.\n+\n 2009-09-23  Richard Henderson  <rth@redhat.com>\n \n \t* doc/tm.texi (STATIC_CHAIN, STATIC_CHAIN_INCOMING): Remove."}, {"sha": "26c7958d93c2ef4ec6a69df31030b2d4adb8d317", "filename": "gcc/gengtype.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f78bf054129295c88572293f71941bd66e99b2e/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f78bf054129295c88572293f71941bd66e99b2e/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=9f78bf054129295c88572293f71941bd66e99b2e", "patch": "@@ -144,7 +144,7 @@ static outf_p output_files;\n    corresponding gt-<plugin>.h are generated in the current\n    directory.  */\n static char** plugin_files;\n-static int nb_plugin_files;\n+static size_t nb_plugin_files;\n \n /* The output header file that is included into pretty much every\n    source file.  */\n@@ -464,7 +464,7 @@ read_input_list (const char *listname)\n       /* Add the plugin files if provided.  */\n       if (plugin_files) \n \t{\n-\t  int i;\n+\t  size_t i;\n \t  for (i = 0; i < nb_plugin_files; i++)\n \t    gt_files[nfiles++] = plugin_files[i];\n \t}\n@@ -1716,7 +1716,8 @@ get_output_file_with_visibility (const char *input_file)\n      plugin_files.  */\n   if (plugin_files && nb_plugin_files > 0) \n     { \n-      int ix= -1, i;\n+      int ix= -1;\n+      size_t i;\n       for (i = 0; i < nb_plugin_files && ix < 0; i++)\n       if (strcmp (input_file, plugin_files[i]) == 0) \n \tix = i;\n@@ -3657,8 +3658,17 @@ main (int argc, char **argv)\n     {\n       srcdir = argv[2];\n       inputlist = argv[3];\n-      plugin_files = argv+4;\n       nb_plugin_files = argc-4;\n+      plugin_files = XCNEWVEC (char *, nb_plugin_files);\n+      for (i = 0; i < nb_plugin_files; i++)\n+      {\n+        /* Place an all zero lang_bitmap before the plugin file\n+\t   name.  */\n+        char *name = argv[i + 4];\n+        int len = strlen(name) + 1 + sizeof (lang_bitmap);\n+        plugin_files[i] = XCNEWVEC (char, len) + sizeof (lang_bitmap);\n+        strcpy (plugin_files[i], name);\n+      }\n     }\n   else if (argc == 3) \n     {\n@@ -3709,6 +3719,13 @@ main (int argc, char **argv)\n   write_rtx_next ();\n   close_output_files ();\n \n+  if (plugin_files)\n+  {\n+    for (i = 0; i < nb_plugin_files; i++)\n+      free (plugin_files[i] - sizeof (lang_bitmap));\n+    free (plugin_files);\n+  }\n+\n   if (hit_error)\n     return 1;\n   return 0;"}]}