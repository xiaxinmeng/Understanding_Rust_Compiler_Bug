{"sha": "41cbab340832a48787eee35753755f2b3f4ec8fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjYmFiMzQwODMyYTQ4Nzg3ZWVlMzU3NTM3NTVmMmIzZjRlYzhmZA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@gnat.com", "date": "2004-10-27T12:27:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T12:27:16Z"}, "message": "2004-10-26  Vincent Celier  <celier@gnat.com>\n\t    Thomas Quinot   <quinot@act-europe.fr>\n\n\t* g-socthi-vms.adb, g-socthi-mingw.adb, g-socthi-vxworks.ads:\n\t(C_Writev): Change MSG_Forced_Flags to Constants.MSG_Forced_Flags as\n\tthere is no use of GNAT.Sockets.Constants.\n\tRemove remaining pragma Import for C_Write\n\tRemove C_Read and C_Write from internal implementation unit\n\tGNAT.Sockets.Thin, as their usage for sockets is non-portable (using\n\tthe read and write functions from the system runtime library is fine\n\ton UNIX but won't work under Windows).\n\n\t* g-socket.adb: (Abort_Selector): Use C_Send instead of C_Write.\n\t(Check_Selector): Use C_Recv instead of C_Read.\n\tSelectors are the GNAT.Sockets abstraction to perform a select()\n\tcall on a set of descriptors. To allow abortion of an ongoing\n\tselect operation, some data is written to a dedicated socket that\n\tis always monitored.\n\tUnder Windows, the write and read library functions cannot operate\n\ton sockets, so we need to use send and recv instead, which is portable\n\tacross all supported platforms.\n\n\t* g-socthi.ads: Remove C_Read and C_Write from internal implementation\n\tunit GNAT.Sockets.Thin, as their usage for sockets is non-portable\n\t(using the read and write functions from the system runtime library is\n\tfine on UNIX but won't work under Windows).\n\nFrom-SVN: r89638", "tree": {"sha": "9b4f8b09d35bcb15d0b087c6989f50b3771498c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b4f8b09d35bcb15d0b087c6989f50b3771498c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41cbab340832a48787eee35753755f2b3f4ec8fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41cbab340832a48787eee35753755f2b3f4ec8fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41cbab340832a48787eee35753755f2b3f4ec8fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41cbab340832a48787eee35753755f2b3f4ec8fd/comments", "author": null, "committer": null, "parents": [{"sha": "6bfad5e135f38daff582c7c35588769295df30ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfad5e135f38daff582c7c35588769295df30ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bfad5e135f38daff582c7c35588769295df30ac"}], "stats": {"total": 56, "additions": 20, "deletions": 36}, "files": [{"sha": "ab2ed6e8ae13fa1df40584d59191ebeaba7edcfe", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=41cbab340832a48787eee35753755f2b3f4ec8fd", "patch": "@@ -226,14 +226,17 @@ package body GNAT.Sockets is\n    --------------------\n \n    procedure Abort_Selector (Selector : Selector_Type) is\n-      Buf     : aliased Character := ASCII.NUL;\n-      Discard : C.int;\n-      pragma Unreferenced (Discard);\n+      Buf : aliased Character := ASCII.NUL;\n+      Res : C.int;\n \n    begin\n       --  Send an empty array to unblock C select system call\n \n-      Discard := C_Write (C.int (Selector.W_Sig_Socket), Buf'Address, 1);\n+      Res := C_Send (C.int (Selector.W_Sig_Socket), Buf'Address, 1,\n+                     Constants.MSG_Forced_Flags);\n+      if Res = Failure then\n+         Raise_Socket_Error (Socket_Errno);\n+      end if;\n    end Abort_Selector;\n \n    -------------------\n@@ -440,8 +443,13 @@ package body GNAT.Sockets is\n \n          declare\n             Buf : Character;\n+\n          begin\n-            Res := C_Read (C.int (Selector.R_Sig_Socket), Buf'Address, 1);\n+            Res := C_Recv (C.int (Selector.R_Sig_Socket), Buf'Address, 1, 0);\n+\n+            if Res = Failure then\n+               Raise_Socket_Error (Socket_Errno);\n+            end if;\n          end;\n \n          Status := Aborted;"}, {"sha": "57efefe3750905661c71beba239b81ab39792005", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=41cbab340832a48787eee35753755f2b3f4ec8fd", "patch": "@@ -318,7 +318,7 @@ package body GNAT.Sockets.Thin is\n       --  POSIX compatitibility, copy write fd set into exception fd\n       --  set. Once select() returns, check any socket present in the\n       --  exception fd set and peek at incoming out-of-band data. If\n-      --  the test is not successfull and if the socket is present in\n+      --  the test is not successful, and the socket is present in\n       --  the initial write fd set, then move the socket from the\n       --  exception fd set to the write fd set.\n "}, {"sha": "94968b5689fa0bb1f9d7454b527f7cd31fe21d5d", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=41cbab340832a48787eee35753755f2b3f4ec8fd", "patch": "@@ -502,10 +502,11 @@ package body GNAT.Sockets.Thin is\n \n    begin\n       for J in Iovec'Range loop\n-         Res := C_Read\n+         Res := C_Recv\n            (Fd,\n             Iovec (J).Base.all'Address,\n-            Interfaces.C.int (Iovec (J).Length));\n+            Interfaces.C.int (Iovec (J).Length),\n+            0);\n \n          if Res < 0 then\n             return Res;\n@@ -534,10 +535,11 @@ package body GNAT.Sockets.Thin is\n \n    begin\n       for J in Iovec'Range loop\n-         Res := C_Write\n+         Res := C_Send\n            (Fd,\n             Iovec (J).Base.all'Address,\n-            Interfaces.C.int (Iovec (J).Length));\n+            Interfaces.C.int (Iovec (J).Length),\n+            Constants.MSG_Forced_Flags);\n \n          if Res < 0 then\n             return Res;"}, {"sha": "cfc519d076d98262f39a5f8b323fc946c33b435d", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=41cbab340832a48787eee35753755f2b3f4ec8fd", "patch": "@@ -275,12 +275,6 @@ package GNAT.Sockets.Thin is\n \n    function C_Listen (S, Backlog : C.int) return C.int;\n \n-   function C_Read\n-     (Fd    : C.int;\n-      Buf   : System.Address;\n-      Count : C.int)\n-      return  C.int;\n-\n    function C_Readv\n      (Fd     : C.int;\n       Iov    : System.Address;\n@@ -354,12 +348,6 @@ package GNAT.Sockets.Thin is\n      (Command : System.Address)\n       return    C.int;\n \n-   function C_Write\n-     (Fd    : C.int;\n-      Buf   : System.Address;\n-      Count : C.int)\n-      return  C.int;\n-\n    function C_Writev\n      (Fd     : C.int;\n       Iov    : System.Address;\n@@ -425,14 +413,12 @@ private\n    pragma Import (C, C_Getsockopt, \"getsockopt\");\n    pragma Import (C, C_Inet_Addr, \"inet_addr\");\n    pragma Import (C, C_Listen, \"listen\");\n-   pragma Import (C, C_Read, \"read\");\n    pragma Import (C, C_Readv, \"readv\");\n    pragma Import (C, C_Select, \"select\");\n    pragma Import (C, C_Setsockopt, \"setsockopt\");\n    pragma Import (C, C_Shutdown, \"shutdown\");\n    pragma Import (C, C_Strerror, \"strerror\");\n    pragma Import (C, C_System, \"system\");\n-   pragma Import (C, C_Write, \"write\");\n    pragma Import (C, C_Writev, \"writev\");\n \n    pragma Import (C, Free_Socket_Set, \"__gnat_free_socket_set\");"}, {"sha": "84918532f71d926fce0370e4be04bbd99c309aa9", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cbab340832a48787eee35753755f2b3f4ec8fd/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=41cbab340832a48787eee35753755f2b3f4ec8fd", "patch": "@@ -262,11 +262,6 @@ package GNAT.Sockets.Thin is\n      (S       : C.int;\n       Backlog : C.int) return C.int;\n \n-   function C_Read\n-     (Fd    : C.int;\n-      Buf   : System.Address;\n-      Count : C.int) return C.int;\n-\n    function C_Readv\n      (Fd     : C.int;\n       Iov    : System.Address;\n@@ -329,11 +324,6 @@ package GNAT.Sockets.Thin is\n    function C_System\n      (Command : System.Address) return C.int;\n \n-   function C_Write\n-     (Fd    : C.int;\n-      Buf   : System.Address;\n-      Count : C.int) return C.int;\n-\n    function C_Writev\n      (Fd     : C.int;\n       Iov    : System.Address;\n@@ -400,14 +390,12 @@ private\n    pragma Import (C, C_Getsockopt, \"getsockopt\");\n    pragma Import (C, C_Inet_Addr, \"inet_addr\");\n    pragma Import (C, C_Listen, \"listen\");\n-   pragma Import (C, C_Read, \"read\");\n    pragma Import (C, C_Readv, \"readv\");\n    pragma Import (C, C_Select, \"select\");\n    pragma Import (C, C_Setsockopt, \"setsockopt\");\n    pragma Import (C, C_Shutdown, \"shutdown\");\n    pragma Import (C, C_Strerror, \"strerror\");\n    pragma Import (C, C_System, \"system\");\n-   pragma Import (C, C_Write, \"write\");\n    pragma Import (C, C_Writev, \"writev\");\n \n    pragma Import (C, Free_Socket_Set, \"__gnat_free_socket_set\");"}]}