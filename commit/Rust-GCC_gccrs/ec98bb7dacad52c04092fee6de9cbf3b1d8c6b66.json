{"sha": "ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM5OGJiN2RhY2FkNTJjMDQwOTJmZWU2ZGU5Y2JmM2IxZDhjNmI2Ng==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-08T16:52:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-08T16:52:32Z"}, "message": "[multiple changes]\n\n2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n\n\t* spark_xrefs.ads (SPARK_Scope_Record): Remove Spec_File_Num and\n\tSpec_Scope_Num components.\n\t* spark_xrefs.adb (dspark): Skip pretty-printing to removed components.\n\t* lib-xref-spark_specific.adb (Add_SPARK_Scope): Skip initialization of\n\tremoved components.\n\t(Collect_SPARK_Xrefs): Skip setting proper values of removed\n\tcomponents.\n\n2017-11-08  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Type_Conversion): Add test that the selector\n\tname is a discriminant in check for unconditional accessibility\n\tviolation within instances.\n\nFrom-SVN: r254545", "tree": {"sha": "11cc04eb7c92b258449c4c54681e3cd733499a59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11cc04eb7c92b258449c4c54681e3cd733499a59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/comments", "author": null, "committer": null, "parents": [{"sha": "9ac3cbb39d0988cb23dee4fd6a67bf7a3020bb69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac3cbb39d0988cb23dee4fd6a67bf7a3020bb69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ac3cbb39d0988cb23dee4fd6a67bf7a3020bb69"}], "stats": {"total": 80, "additions": 17, "deletions": 63}, "files": [{"sha": "be7a8bb8c7e60557e14d6dc18848d136a0ba1152", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "patch": "@@ -1,3 +1,19 @@\n+2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* spark_xrefs.ads (SPARK_Scope_Record): Remove Spec_File_Num and\n+\tSpec_Scope_Num components.\n+\t* spark_xrefs.adb (dspark): Skip pretty-printing to removed components.\n+\t* lib-xref-spark_specific.adb (Add_SPARK_Scope): Skip initialization of\n+\tremoved components.\n+\t(Collect_SPARK_Xrefs): Skip setting proper values of removed\n+\tcomponents.\n+\n+2017-11-08  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Type_Conversion): Add test that the selector\n+\tname is a discriminant in check for unconditional accessibility\n+\tviolation within instances.\n+\n 2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* lib-xref-spark_specific.adb (Add_SPARK_Xrefs): Remove special-case"}, {"sha": "86d488392a91b0c8a085e35bc32504b2fbae072c", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "patch": "@@ -11279,6 +11279,7 @@ package body Exp_Ch4 is\n          elsif In_Instance_Body\n            and then Ekind (Operand_Type) = E_Anonymous_Access_Type\n            and then Nkind (Operand) = N_Selected_Component\n+           and then Ekind (Entity (Selector_Name (Operand))) = E_Discriminant\n            and then Object_Access_Level (Operand) >\n                       Type_Access_Level (Target_Type)\n          then"}, {"sha": "56bcf5de91922a5308770afce8521b7587af37a7", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "patch": "@@ -164,8 +164,6 @@ package body SPARK_Specific is\n            ((Entity         => E,\n              File_Num       => Dspec,\n              Scope_Num      => Scope_Id,\n-             Spec_File_Num  => 0,\n-             Spec_Scope_Num => 0,\n              From_Xref      => 1,\n              To_Xref        => 0));\n \n@@ -836,55 +834,6 @@ package body SPARK_Specific is\n          Sdep := Sdep_Next;\n       end loop;\n \n-      --  Fill in the spec information when relevant\n-\n-      declare\n-         package Entity_Hash_Table is new\n-           GNAT.HTable.Simple_HTable\n-             (Header_Num => Entity_Hashed_Range,\n-              Element    => Scope_Index,\n-              No_Element => 0,\n-              Key        => Entity_Id,\n-              Hash       => Entity_Hash,\n-              Equal      => \"=\");\n-\n-      begin\n-         --  Fill in the hash-table\n-\n-         for S in SPARK_Scope_Table.First .. SPARK_Scope_Table.Last loop\n-            declare\n-               Srec : SPARK_Scope_Record renames SPARK_Scope_Table.Table (S);\n-            begin\n-               Entity_Hash_Table.Set (Srec.Entity, S);\n-            end;\n-         end loop;\n-\n-         --  Use the hash-table to locate spec entities\n-\n-         for S in SPARK_Scope_Table.First .. SPARK_Scope_Table.Last loop\n-            declare\n-               Srec : SPARK_Scope_Record renames SPARK_Scope_Table.Table (S);\n-\n-               Spec_Entity : constant Entity_Id :=\n-                               Unique_Entity (Srec.Entity);\n-               Spec_Scope  : constant Scope_Index :=\n-                               Entity_Hash_Table.Get (Spec_Entity);\n-\n-            begin\n-               --  Generic spec may be missing in which case Spec_Scope is zero\n-\n-               if Spec_Entity /= Srec.Entity\n-                 and then Spec_Scope /= 0\n-               then\n-                  Srec.Spec_File_Num :=\n-                    SPARK_Scope_Table.Table (Spec_Scope).File_Num;\n-                  Srec.Spec_Scope_Num :=\n-                    SPARK_Scope_Table.Table (Spec_Scope).Scope_Num;\n-               end if;\n-            end;\n-         end loop;\n-      end;\n-\n       --  Generate SPARK cross-reference information\n \n       Add_SPARK_Xrefs;"}, {"sha": "cea28a606ca90cced50a6a4d8746653de452180e", "filename": "gcc/ada/spark_xrefs.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2Fspark_xrefs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2Fspark_xrefs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fspark_xrefs.adb?ref=ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "patch": "@@ -69,10 +69,6 @@ package body SPARK_Xrefs is\n          begin\n             Write_Str (\"  \");\n             Write_Int (Int (Index));\n-            Write_Str (\".  File_Num = \");\n-            Write_Int (Int (ASR.File_Num));\n-            Write_Str (\"  Scope_Num = \");\n-            Write_Int (Int (ASR.Scope_Num));\n             Write_Str (\"  Scope_Name = \"\"\");\n \n             Write_Str (Unique_Name (ASR.Entity));"}, {"sha": "a5d337334d270a45f148f89361e24a06ef7346a7", "filename": "gcc/ada/spark_xrefs.ads", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2Fspark_xrefs.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66/gcc%2Fada%2Fspark_xrefs.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fspark_xrefs.ads?ref=ec98bb7dacad52c04092fee6de9cbf3b1d8c6b66", "patch": "@@ -110,14 +110,6 @@ package SPARK_Xrefs is\n       Scope_Num : Pos;\n       --  Set to the scope number for the scope\n \n-      Spec_File_Num : Nat;\n-      --  Set to the file dependency number for the scope corresponding to the\n-      --  spec of the current scope entity, if different, or else 0.\n-\n-      Spec_Scope_Num : Nat;\n-      --  Set to the scope number for the scope corresponding to the spec of\n-      --  the current scope entity, if different, or else 0.\n-\n       From_Xref : Xref_Index;\n       --  Starting index in Xref table for this scope\n "}]}