{"sha": "5d69f816bcfd32f2171b31e09249a8e03acedd5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ2OWY4MTZiY2ZkMzJmMjE3MWIzMWUwOTI0OWE4ZTAzYWNlZGQ1ZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-11-09T23:30:44Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-11-09T23:30:44Z"}, "message": "Makefile.in: Update.\n\n\t* Makefile.in: Update.\n\t* c-decl.c (print_lang_decl, print_lang_type): Remove.\n\t(print_lang_identifier): Rename c_print_identifier.\n\t* c-lang.c (LANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_SET_YYDEBUG): New.\n\t(print_lang_statistics, lang_print_xnode): Remove.\n\t* c-parse.in (set_yydebug): Rename c_set_yydebug.\n\t* c-tree.h (c_set_yydebug, c_print_identifier): New.\n\t* langhooks-def.h (lhd_print_tree_nothing, lhd_set_yydebug): New.\n\tLANG_HOOKS_PRINT_STATISTICS, LANG_HOOKS_PRINT_XNODE,\n\tLANG_HOOKS_PRINT_DECL, LANG_HOOKS_PRINT_TYPE,\n\tLANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_SET_YYDEBUG): New.\n\t(LANG_HOOKS_INITIALIZER): Update.\n\t* langhooks.h (struct lang_hooks): New members.\n\t(lang_print_tree_hook): New.\n\t* langhooks.c (lhd_print_tree_nothing, lhd_set_yydebug): New.\n\t* print-tree.c: Include langhooks.h.\n\t(print_node): Update.\n\t* toplev.c (decode_d_option): Update.\n\t* tree.c: Include langhooks.h.\n\t(dump_tree_statistics): Update.\n\t* tree.h (print_lang_statistics, print_lang_decl, print_lang_type,\n\tprint_lang_identifier, set_yydebug, lang_print_xnode): Remove.\nada:\n\t* misc.c (gnat_print_decl, gnat_print_type): Renamed.\n\t(LANG_HOOKS_PRINT_DECL, LANG_HOOKS_PRINT_TYPE): Override.\n\t(print_lang_statistics, lang_print_xnode, print_lang_identifier,\n\tset_yydebug): Remove.\ncp:\n\t* cp-lang.c (LANG_HOOKS_PRINT_DECL, LANG_HOOKS_PRINT_TYPE,\n\tLANG_HOOKS_PRINT_STATISTICS, LANG_HOOKS_PRINT_XNODE,\n\tLANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_SET_YYDEBUG): Override.\n\t* cp-tree.h (print_class_statistics): Remove.\n\t(cxx_print_statistics, cxx_print_xnode, cxx_print_decl, cxx_print_type,\n\tcxx_print_identifier, cxx_set_yydebug): New.\n\t* lex.c (set_yydebug): Rename c_set_yydebug.\n\t* ptree.c (print_lang_decl, print_lang_type, print_lang_identifier,\n\tlang_print_xnode): Rename.\n\t* tree.c (print_lang_statistics): Rename.\nf:\n\t* com.c (ffe_print_identifier): Rename.\n\t(LANG_HOOKS_PRINT_IDENTIFIER): Override.\n\t(lang_print_xnode, print_lang_decl, print_lang_statistics,\n\tprint_lang_type, set_yydebug): Remove.\njava:\n\t* java-tree.h (java_set_yydebug): New.\n\t* jcf-parse.c (set_yydebug): Rename java_set_yydebug.\n\t* lang.c (LANG_HOOKS_SET_YYDEBUG): Override.\n\t(print_lang_decl, print_lang_type, print_lang_identifier,\n\tprint_lang_statistics, lang_print_xnode): Remove.\nobjc:\n\t* objc-act.c (LANG_HOOKS_PRINT_IDENTIFIER,\n\tLANG_HOOKS_SET_YYDEBUG): Override.\n\t(lang_print_xnode, print_lang_statistics): Remove.\n\nFrom-SVN: r46907", "tree": {"sha": "e6f8ec22684d9ab1170005e35598dd4cc7f86de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6f8ec22684d9ab1170005e35598dd4cc7f86de1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d69f816bcfd32f2171b31e09249a8e03acedd5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d69f816bcfd32f2171b31e09249a8e03acedd5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d69f816bcfd32f2171b31e09249a8e03acedd5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d69f816bcfd32f2171b31e09249a8e03acedd5e/comments", "author": null, "committer": null, "parents": [{"sha": "1ee9fb202a1be3e3259935c243242fa6ffa5f62d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee9fb202a1be3e3259935c243242fa6ffa5f62d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee9fb202a1be3e3259935c243242fa6ffa5f62d"}], "stats": {"total": 386, "additions": 187, "deletions": 199}, "files": [{"sha": "6b78f4f56e2eae18e97ab3af2e98f4846039db52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -1,3 +1,32 @@\n+2001-11-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* Makefile.in: Update.\n+\t* c-decl.c (print_lang_decl, print_lang_type): Remove.\n+\t(print_lang_identifier): Rename c_print_identifier.\n+\t* c-lang.c (LANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_SET_YYDEBUG): New.\n+\t(print_lang_statistics, lang_print_xnode): Remove.\n+\t* c-parse.in (set_yydebug): Rename c_set_yydebug.\n+\t* c-tree.h (c_set_yydebug, c_print_identifier): New.\n+\t* langhooks-def.h (lhd_print_tree_nothing, lhd_set_yydebug): New.\n+\tLANG_HOOKS_PRINT_STATISTICS, LANG_HOOKS_PRINT_XNODE,\n+\tLANG_HOOKS_PRINT_DECL, LANG_HOOKS_PRINT_TYPE,\n+\tLANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_SET_YYDEBUG): New.\n+\t(LANG_HOOKS_INITIALIZER): Update.\n+\t* langhooks.h (struct lang_hooks): New members.\n+\t(lang_print_tree_hook): New.\n+\t* langhooks.c (lhd_print_tree_nothing, lhd_set_yydebug): New.\n+\t* print-tree.c: Include langhooks.h.\n+\t(print_node): Update.\n+\t* toplev.c (decode_d_option): Update.\n+\t* tree.c: Include langhooks.h.\n+\t(dump_tree_statistics): Update.\n+\t* tree.h (print_lang_statistics, print_lang_decl, print_lang_type,\n+\tprint_lang_identifier, set_yydebug, lang_print_xnode): Remove.\n+objc:\n+\t* objc-act.c (LANG_HOOKS_PRINT_IDENTIFIER,\n+\tLANG_HOOKS_SET_YYDEBUG): Override.\n+\t(lang_print_xnode, print_lang_statistics): Remove.\n+\n 2001-11-09  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2asm.c (dw2_force_const_mem): Invoke STRIP_NAME_ENCODING"}, {"sha": "2e9d3fef9daa059a815e2c32f92aefb83916d3d3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -1349,12 +1349,13 @@ convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h convert.h toplev.\n langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) toplev.h \\\n    tree-inline.h $(RTL_H) insn-config.h integrate.h langhooks.h langhooks-def.h\n tree.o : tree.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h function.h toplev.h \\\n-   $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H)\n+   $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) langhooks.h\n tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) \\\n    expr.h flags.h params.h input.h insn-config.h $(INTEGRATE_H) \\\n    $(VARRAY_H) $(HASHTAB_H) $(SPLAY_TREE_H) toplev.h langhooks.h \\\n    $(C_COMMON_H) tree-inline.h\n-print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GGC_H)\n+print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GGC_H) \\\n+   langhooks.h\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h \\\n    function.h $(EXPR_H) $(RTL_H) toplev.h $(GGC_H) $(TM_P_H)\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h \\"}, {"sha": "dafcd0ed59bbf6042cb98241231d9fa36af740a3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -1,3 +1,10 @@\n+2001-11-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* misc.c (gnat_print_decl, gnat_print_type): Renamed.\n+\t(LANG_HOOKS_PRINT_DECL, LANG_HOOKS_PRINT_TYPE): Override.\n+\t(print_lang_statistics, lang_print_xnode, print_lang_identifier,\n+\tset_yydebug): Remove.\n+\n 2001-11-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* misc.c (LANG_HOOKS_NAME, LANG_HOOKS_IDENTIFIER_SIZE): Override."}, {"sha": "3a3349466144adec2e47fd6e7052f91872f09b40", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 11, "deletions": 34, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                           C Implementation File                          *\n  *                                                                          *\n- *                             $Revision: 1.9 $\n+ *                             $Revision: 1.10 $\n  *                                                                          *\n  *          Copyright (C) 1992-2001 Free Software Foundation, Inc.          *\n  *                                                                          *\n@@ -113,6 +113,8 @@ static void gnat_init\t\t\tPARAMS ((void));\n static void gnat_init_options\t\tPARAMS ((void));\n static int gnat_decode_option\t\tPARAMS ((int, char **));\n static HOST_WIDE_INT gnat_get_alias_set\tPARAMS ((tree));\n+static void gnat_print_decl\t\tPARAMS ((FILE *, tree, int));\n+static void gnat_print_type\t\tPARAMS ((FILE *, tree, int));\n \n /* Structure giving our language-specific hooks.  */\n \n@@ -130,6 +132,10 @@ static HOST_WIDE_INT gnat_get_alias_set\tPARAMS ((tree));\n #define LANG_HOOKS_HONOR_READONLY\t1\n #undef LANG_HOOKS_GET_ALIAS_SET\n #define LANG_HOOKS_GET_ALIAS_SET\tgnat_get_alias_set\n+#undef LANG_HOOKS_PRINT_DECL\n+#define LANG_HOOKS_PRINT_DECL\t\tgnat_print_decl\n+#undef LANG_HOOKS_PRINT_TYPE\n+#define LANG_HOOKS_PRINT_TYPE\t\tgnat_print_type\n \n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n@@ -372,20 +378,6 @@ maybe_build_cleanup (decl)\n   return NULL_TREE;\n }\n \n-/* Print any language-specific compilation statistics.  */\n-\n-void\n-print_lang_statistics ()\n-{}\n-\n-void\n-lang_print_xnode (file, node, indent)\n-     FILE *file ATTRIBUTE_UNUSED;\n-     tree node ATTRIBUTE_UNUSED;\n-     int indent ATTRIBUTE_UNUSED;\n-{\n-}\n-\n /* integrate_decl_tree calls this function, but since we don't use the\n    DECL_LANG_SPECIFIC field, this is a no-op.  */\n \n@@ -397,8 +389,8 @@ copy_lang_decl (node)\n \n /* Hooks for print-tree.c:  */\n \n-void\n-print_lang_decl (file, node, indent)\n+static void\n+gnat_print_decl (file, node, indent)\n      FILE *file;\n      tree node;\n      int indent;\n@@ -420,8 +412,8 @@ print_lang_decl (file, node, indent)\n     }\n }\n \n-void\n-print_lang_type (file, node, indent)\n+static void\n+gnat_print_type (file, node, indent)\n      FILE *file;\n      tree node;\n      int indent;\n@@ -472,13 +464,6 @@ print_lang_type (file, node, indent)\n     }\n }\n \n-void\n-print_lang_identifier (file, node, indent)\n-     FILE *file ATTRIBUTE_UNUSED;\n-     tree node ATTRIBUTE_UNUSED;\n-     int indent ATTRIBUTE_UNUSED;\n-{}\n-\n /* Expands GNAT-specific GCC tree nodes.  The only ones we support\n    here are TRANSFORM_EXPR, UNCHECKED_CONVERT_EXPR, ALLOCATE_EXPR,\n    USE_EXPR and NULL_EXPR.  */\n@@ -900,14 +885,6 @@ finish_parse ()\n {\n }\n \n-/* Sets some debug flags for the parsed. It does nothing here.  */\n-\n-void\n-set_yydebug (value)\n-     int value ATTRIBUTE_UNUSED;\n-{\n-}\n-\n #if 0\n \n /* Return the alignment for GNAT_TYPE.  */"}, {"sha": "8f8edf4e98c3f9da6585693ce52ab018e9b93103", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -789,26 +789,8 @@ c_decode_option (argc, argv)\n   return 1;\n }\n \n-/* Hooks for print_node.  */\n-\n-void\n-print_lang_decl (file, node, indent)\n-     FILE *file ATTRIBUTE_UNUSED;\n-     tree node ATTRIBUTE_UNUSED;\n-     int indent ATTRIBUTE_UNUSED;\n-{\n-}\n-\n-void\n-print_lang_type (file, node, indent)\n-     FILE *file ATTRIBUTE_UNUSED;\n-     tree node ATTRIBUTE_UNUSED;\n-     int indent ATTRIBUTE_UNUSED;\n-{\n-}\n-\n void\n-print_lang_identifier (file, node, indent)\n+c_print_identifier (file, node, indent)\n      FILE *file;\n      tree node;\n      int indent;"}, {"sha": "67c860b790025f4f1fac0cd4f3b362cd073fe2fa", "filename": "gcc/c-lang.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -61,6 +61,10 @@ static int c_cannot_inline_tree_fn PARAMS ((tree *));\n #define LANG_HOOKS_POST_OPTIONS c_post_options\n #undef LANG_HOOKS_GET_ALIAS_SET\n #define LANG_HOOKS_GET_ALIAS_SET c_common_get_alias_set\n+#undef LANG_HOOKS_PRINT_IDENTIFIER\n+#define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n+#undef LANG_HOOKS_SET_YYDEBUG\n+#define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n \n #undef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n #define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\\n@@ -134,21 +138,6 @@ c_init ()\n   c_parse_init ();\n }\n \n-void\n-print_lang_statistics ()\n-{\n-}\n-\n-/* used by print-tree.c */\n-\n-void\n-lang_print_xnode (file, node, indent)\n-     FILE *file ATTRIBUTE_UNUSED;\n-     tree node ATTRIBUTE_UNUSED;\n-     int indent ATTRIBUTE_UNUSED;\n-{\n-}\n-\n /* Used by c-lex.c, but only for objc.  */\n \n tree"}, {"sha": "41208c313eb38d02f2df12af9ee178fd5c02a9f8", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -3784,7 +3784,7 @@ yylex()\n    in order to build the compiler.  */\n \n void\n-set_yydebug (value)\n+c_set_yydebug (value)\n      int value;\n {\n #if YYDEBUG != 0"}, {"sha": "acde94ec2c50149539aa56d98dd29a38320cc7db", "filename": "gcc/c-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -155,12 +155,14 @@ extern tree lookup_objc_ivar\t\t\tPARAMS ((tree));\n \f\n /* in c-parse.in */\n extern void c_parse_init\t\t\tPARAMS ((void));\n+extern void c_set_yydebug\t\t\tPARAMS ((int));\n extern int yyparse_1\t\t\t\tPARAMS ((void));\n \n /* in c-aux-info.c */\n extern void gen_aux_info_record                 PARAMS ((tree, int, int, int));\n \n /* in c-decl.c */\n+extern void c_print_identifier\t\t\tPARAMS ((FILE *, tree, int));\n extern tree build_array_declarator              PARAMS ((tree, tree, int, int));\n extern tree build_enumerator                    PARAMS ((tree, tree));\n "}, {"sha": "78588d77c936886b9b948f5b271f4bfaa220b146", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -1,3 +1,16 @@\n+2001-11-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cp-lang.c (LANG_HOOKS_PRINT_DECL, LANG_HOOKS_PRINT_TYPE,\n+\tLANG_HOOKS_PRINT_STATISTICS, LANG_HOOKS_PRINT_XNODE,\n+\tLANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_SET_YYDEBUG): Override.\n+\t* cp-tree.h (print_class_statistics): Remove.\n+\t(cxx_print_statistics, cxx_print_xnode, cxx_print_decl, cxx_print_type,\n+\tcxx_print_identifier, cxx_set_yydebug): New.\n+\t* lex.c (set_yydebug): Rename c_set_yydebug.\n+\t* ptree.c (print_lang_decl, print_lang_type, print_lang_identifier,\n+\tlang_print_xnode): Rename.\n+\t* tree.c (print_lang_statistics): Rename.\n+\n 2001-11-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* class.c (dump_array): Fix format specifier warning."}, {"sha": "08ecf5bccf96ac6b21acf72d072e785a2eb08262", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -45,6 +45,18 @@ static HOST_WIDE_INT cxx_get_alias_set PARAMS ((tree));\n #define LANG_HOOKS_POST_OPTIONS cxx_post_options\n #undef LANG_HOOKS_GET_ALIAS_SET\n #define LANG_HOOKS_GET_ALIAS_SET cxx_get_alias_set\n+#undef LANG_HOOKS_PRINT_STATISTICS\n+#define LANG_HOOKS_PRINT_STATISTICS cxx_print_statistics\n+#undef LANG_HOOKS_PRINT_XNODE\n+#define LANG_HOOKS_PRINT_XNODE cxx_print_xnode\n+#undef LANG_HOOKS_PRINT_DECL\n+#define LANG_HOOKS_PRINT_DECL cxx_print_decl\n+#undef LANG_HOOKS_PRINT_TYPE\n+#define LANG_HOOKS_PRINT_TYPE cxx_print_type\n+#undef LANG_HOOKS_PRINT_IDENTIFIER\n+#define LANG_HOOKS_PRINT_IDENTIFIER cxx_print_identifier\n+#undef LANG_HOOKS_SET_YYDEBUG\n+#define LANG_HOOKS_SET_YYDEBUG cxx_set_yydebug\n \n #undef LANG_HOOKS_TREE_INLINING_WALK_SUBTREES\n #define LANG_HOOKS_TREE_INLINING_WALK_SUBTREES \\"}, {"sha": "d4f334189ef87e0dfe74f8330ee2478ef4a01116", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -3530,7 +3530,12 @@ extern int current_lang_depth\t\t\tPARAMS ((void));\n extern void push_lang_context\t\t\tPARAMS ((tree));\n extern void pop_lang_context\t\t\tPARAMS ((void));\n extern tree instantiate_type\t\t\tPARAMS ((tree, tree, enum instantiate_type_flags));\n-extern void print_class_statistics\t\tPARAMS ((void));\n+extern void cxx_print_statistics\t\tPARAMS ((void));\n+extern void cxx_print_xnode\t\t\tPARAMS ((FILE *, tree, int));\n+extern void cxx_print_decl\t\t\tPARAMS ((FILE *, tree, int));\n+extern void cxx_print_type\t\t\tPARAMS ((FILE *, tree, int));\n+extern void cxx_print_identifier\t\tPARAMS ((FILE *, tree, int));\n+extern void cxx_set_yydebug\t\t\tPARAMS ((int));\n extern void build_self_reference\t\tPARAMS ((void));\n extern int same_signature_p\t\t\tPARAMS ((tree, tree));\n extern void warn_hidden\t\t\t\tPARAMS ((tree));"}, {"sha": "f5fdc0f3db4307dc1142b7f81e9c2361fcee570c", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -907,7 +907,7 @@ print_parse_statistics ()\n    in order to build the compiler.  */\n \n void\n-set_yydebug (value)\n+cxx_set_yydebug (value)\n      int value;\n {\n #if YYDEBUG != 0"}, {"sha": "f40e412726cbfd0378a1baef86eb10ba7fd5fa0d", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"cp-tree.h\"\n \n void\n-print_lang_decl (file, node, indent)\n+cxx_print_decl (file, node, indent)\n      FILE *file;\n      tree node;\n      int indent;\n@@ -66,7 +66,7 @@ print_lang_decl (file, node, indent)\n }\n \n void\n-print_lang_type (file, node, indent)\n+cxx_print_type (file, node, indent)\n      FILE *file;\n      register tree node;\n      int indent;\n@@ -158,7 +158,7 @@ print_lang_type (file, node, indent)\n }\n \n void\n-print_lang_identifier (file, node, indent)\n+cxx_print_identifier (file, node, indent)\n      FILE *file;\n      tree node;\n      int indent;\n@@ -173,7 +173,7 @@ print_lang_identifier (file, node, indent)\n }\n \n void\n-lang_print_xnode (file, node, indent)\n+cxx_print_xnode (file, node, indent)\n      FILE *file;\n      tree node;\n      int indent;"}, {"sha": "97ae23154a9ce6b579474d219f065722023e0aa2", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -1276,7 +1276,7 @@ extern int depth_reached;\n #endif\n \n void\n-print_lang_statistics ()\n+cxx_print_statistics ()\n {\n   print_search_statistics ();\n   print_class_statistics ();"}, {"sha": "d1b4d7578c7f41ba94ab8921fa387a6e37df9ce9", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -1,3 +1,10 @@\n+Fri Nov  9 23:16:45 2001  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* com.c (ffe_print_identifier): Rename.\n+\t(LANG_HOOKS_PRINT_IDENTIFIER): Override.\n+\t(lang_print_xnode, print_lang_decl, print_lang_statistics,\n+\tprint_lang_type, set_yydebug): Remove.\n+\n 2001-11-09  Zack Weinberg  <zack@codesourcery.com>\n \n \t* g77spec.c (lang_specific_driver): Adjust behavior of -v and"}, {"sha": "ae4201dbdaf3fdb7574e93628d3170f828555986", "filename": "gcc/f/com.c", "status": "modified", "additions": 5, "deletions": 45, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -14256,6 +14256,7 @@ insert_block (block)\n static void ffe_init PARAMS ((void));\n static void ffe_finish PARAMS ((void));\n static void ffe_init_options PARAMS ((void));\n+static void ffe_print_identifier PARAMS ((FILE *, tree, int));\n \n #undef  LANG_HOOKS_NAME\n #define LANG_HOOKS_NAME\t\t\t\"GNU F77\"\n@@ -14267,6 +14268,8 @@ static void ffe_init_options PARAMS ((void));\n #define LANG_HOOKS_INIT_OPTIONS\t\tffe_init_options\n #undef  LANG_HOOKS_DECODE_OPTION\n #define LANG_HOOKS_DECODE_OPTION\tffe_decode_option\n+#undef  LANG_HOOKS_PRINT_IDENTIFIER\n+#define LANG_HOOKS_PRINT_IDENTIFIER\tffe_print_identifier\n \n /* We do not wish to use alias-set based aliasing at all.  Used in the\n    extreme (every object with its own set, with equivalences recorded) it\n@@ -14278,16 +14281,6 @@ static void ffe_init_options PARAMS ((void));\n \n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n-/* used by print-tree.c */\n-\n-void\n-lang_print_xnode (file, node, indent)\n-     FILE *file UNUSED;\n-     tree node UNUSED;\n-     int indent UNUSED;\n-{\n-}\n-\n static void\n ffe_finish ()\n {\n@@ -14542,16 +14535,8 @@ poplevel (keep, reverse, functionbody)\n   return block;\n }\n \n-void\n-print_lang_decl (file, node, indent)\n-     FILE *file UNUSED;\n-     tree node UNUSED;\n-     int indent UNUSED;\n-{\n-}\n-\n-void\n-print_lang_identifier (file, node, indent)\n+static void\n+ffe_print_identifier (file, node, indent)\n      FILE *file;\n      tree node;\n      int indent;\n@@ -14560,19 +14545,6 @@ print_lang_identifier (file, node, indent)\n   print_node (file, \"local\", IDENTIFIER_LOCAL_VALUE (node), indent + 4);\n }\n \n-void\n-print_lang_statistics ()\n-{\n-}\n-\n-void\n-print_lang_type (file, node, indent)\n-     FILE *file UNUSED;\n-     tree node UNUSED;\n-     int indent UNUSED;\n-{\n-}\n-\n /* Record a decl-node X as belonging to the current lexical scope.\n    Check for errors (such as an incompatible declaration for the same\n    name already seen in the same scope).\n@@ -14762,18 +14734,6 @@ set_block (block)\n \t\t\t\t\t   BLOCK_SUBBLOCKS (block));\n }\n \n-/* ~~gcc/tree.h *should* declare this, because toplev.c references it.  */\n-\n-/* Can't 'yydebug' a front end not generated by yacc/bison!  */\n-\n-void\n-set_yydebug (value)\n-     int value;\n-{\n-  if (value)\n-    fprintf (stderr, \"warning: no yacc/bison-generated output to debug!\\n\");\n-}\n-\n tree\n signed_or_unsigned_type (unsignedp, type)\n      int unsignedp;"}, {"sha": "158852165b58c8cafa57ea3b96117c0556874034", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -1,3 +1,11 @@\n+2001-11-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* java-tree.h (java_set_yydebug): New.\n+\t* jcf-parse.c (set_yydebug): Rename java_set_yydebug.\n+\t* lang.c (LANG_HOOKS_SET_YYDEBUG): Override.\n+\t(print_lang_decl, print_lang_type, print_lang_identifier,\n+\tprint_lang_statistics, lang_print_xnode): Remove.\n+\n 2001-11-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* jcf-parse.c (init_lex): Remove."}, {"sha": "d9417b43dcc60763838f16cf7395bbe479d78bd8", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -996,6 +996,7 @@ struct lang_type\n #define JCF_u4 unsigned long\n #define JCF_u2 unsigned short\n \n+extern void java_set_yydebug PARAMS ((int));\n extern void add_assume_compiled PARAMS ((const char *, int));\n extern tree lookup_class PARAMS ((tree));\n extern tree lookup_java_constructor PARAMS ((tree, tree));"}, {"sha": "ec76e81ae12f312eab3f772be01f2346baea977b", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -262,7 +262,7 @@ parse_signature (jcf, sig_index)\n }\n \n void\n-set_yydebug (value)\n+java_set_yydebug (value)\n      int value;\n {\n   yydebug = value;"}, {"sha": "9ba18490a78575864bc46cf384a2f1874137cc82", "filename": "gcc/java/lang.c", "status": "modified", "additions": 2, "deletions": 41, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -203,6 +203,8 @@ static int dependency_tracking = 0;\n #define LANG_HOOKS_INIT_OPTIONS java_init_options\n #undef LANG_HOOKS_DECODE_OPTION\n #define LANG_HOOKS_DECODE_OPTION java_decode_option\n+#undef LANG_HOOKS_SET_YYDEBUG\n+#define LANG_HOOKS_SET_YYDEBUG java_set_yydebug\n \n /* Each front end provides its own.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n@@ -741,44 +743,3 @@ java_init_options ()\n   flag_exceptions = 1;\n   flag_non_call_exceptions = 1;\n }\n-\n-/* Hooks for print_node.  */\n-\n-void\n-print_lang_decl (file, node, indent)\n-     FILE *file __attribute ((__unused__));\n-     tree node __attribute ((__unused__));\n-     int indent __attribute ((__unused__));\n-{\n-}\n-\n-void\n-print_lang_type (file, node, indent)\n-     FILE *file __attribute ((__unused__));\n-     tree node __attribute ((__unused__));\n-     int indent __attribute ((__unused__));\n-{\n-}\n-\n-void\n-print_lang_identifier (file, node, indent)\n-     FILE *file __attribute ((__unused__));\n-     tree node __attribute ((__unused__));\n-     int indent __attribute ((__unused__));\n-{\n-}\n-\n-void\n-print_lang_statistics ()\n-{\n-}\n-\n-/* used by print-tree.c */\n-\n-void\n-lang_print_xnode (file, node, indent)\n-     FILE *file __attribute ((__unused__));\n-     tree node __attribute ((__unused__));\n-     int indent __attribute ((__unused__));\n-{\n-}"}, {"sha": "ef767511f23d090c4c96654ad7b5959987bae199", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -41,6 +41,8 @@ extern void lhd_do_nothing PARAMS ((void));\n extern int lhd_decode_option PARAMS ((int, char **));\n extern HOST_WIDE_INT lhd_get_alias_set PARAMS ((tree));\n extern void lhd_clear_binding_stack PARAMS ((void));\n+extern void lhd_print_tree_nothing PARAMS ((FILE *, tree, int));\n+extern void lhd_set_yydebug PARAMS ((int));\n \n /* Declarations of default tree inlining hooks.  */\n tree lhd_tree_inlining_walk_subtrees\t\tPARAMS ((tree *, int *,\n@@ -66,6 +68,12 @@ int lhd_tree_inlining_anon_aggr_type_p\t\tPARAMS ((tree));\n #define LANG_HOOKS_POST_OPTIONS\t\tlhd_do_nothing\n #define LANG_HOOKS_GET_ALIAS_SET\tlhd_get_alias_set\n #define LANG_HOOKS_HONOR_READONLY\tfalse\n+#define LANG_HOOKS_PRINT_STATISTICS\tlhd_do_nothing\n+#define LANG_HOOKS_PRINT_XNODE\t\tlhd_print_tree_nothing\n+#define LANG_HOOKS_PRINT_DECL\t\tlhd_print_tree_nothing\n+#define LANG_HOOKS_PRINT_TYPE\t\tlhd_print_tree_nothing\n+#define LANG_HOOKS_PRINT_IDENTIFIER\tlhd_print_tree_nothing\n+#define LANG_HOOKS_SET_YYDEBUG\t\tlhd_set_yydebug\n \n /* Tree inlining hooks.  */\n #define LANG_HOOKS_TREE_INLINING_WALK_SUBTREES lhd_tree_inlining_walk_subtrees\n@@ -107,6 +115,12 @@ int lhd_tree_inlining_anon_aggr_type_p\t\tPARAMS ((tree));\n   LANG_HOOKS_POST_OPTIONS, \\\n   LANG_HOOKS_GET_ALIAS_SET, \\\n   LANG_HOOKS_HONOR_READONLY, \\\n+  LANG_HOOKS_PRINT_STATISTICS, \\\n+  LANG_HOOKS_PRINT_XNODE, \\\n+  LANG_HOOKS_PRINT_DECL, \\\n+  LANG_HOOKS_PRINT_TYPE, \\\n+  LANG_HOOKS_PRINT_IDENTIFIER, \\\n+  LANG_HOOKS_SET_YYDEBUG, \\\n   LANG_HOOKS_TREE_INLINING_INITIALIZER \\\n }\n "}, {"sha": "f2b982121f87467d220f8d3fb79d9f59355633c0", "filename": "gcc/langhooks.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -47,6 +47,26 @@ lhd_decode_option (argc, argv)\n   return 0;\n }\n \n+/* Called from by print-tree.c.  */\n+\n+void\n+lhd_print_tree_nothing (file, node, indent)\n+     FILE *file ATTRIBUTE_UNUSED;\n+     tree node ATTRIBUTE_UNUSED;\n+     int indent ATTRIBUTE_UNUSED;\n+{\n+}\n+\n+/* Called when -dy is given on the command line.  */\n+\n+void\n+lhd_set_yydebug (value)\n+     int value;\n+{\n+  if (value)\n+    fprintf (stderr, \"warning: no yacc/bison-generated output to debug!\\n\");\n+}\n+\n /* Provide a default routine to clear the binding stack.  This is used\n    by languages that don't need to do anything special.  */\n void"}, {"sha": "466b7ae479ff9ddf3f474906ab84e18ffb9c4b1c", "filename": "gcc/langhooks.h", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -21,6 +21,9 @@ Boston, MA 02111-1307, USA.  */\n #ifndef GCC_LANG_HOOKS_H\n #define GCC_LANG_HOOKS_H\n \n+/* A print hook for print_tree ().  */\n+typedef void (*lang_print_tree_hook) PARAMS ((FILE *, tree, int indent));\n+\n /* The following hooks are documented in langhooks.c.  Must not be\n    NULL.  */\n \n@@ -88,6 +91,25 @@ struct lang_hooks\n   /* Nonzero if TYPE_READONLY and TREE_READONLY should always be honored.  */\n   bool honor_readonly;\n \n+  /* The front end can add its own statistics to -fmem-report with\n+     this hook.  It should output to stderr.  */\n+  void (*print_statistics) PARAMS ((void));\n+\n+  /* Called by print_tree when there is a tree of class 'x' that it\n+     doesn't know how to display.  */\n+  lang_print_tree_hook print_xnode;\n+\n+  /* Called to print language-dependent parts of a class 'd', class\n+     't', and IDENTIFIER_NODE nodes.  */\n+  lang_print_tree_hook print_decl;\n+  lang_print_tree_hook print_type;\n+  lang_print_tree_hook print_identifier;\n+\n+  /* Set yydebug for bison-based parsers, when -dy is given on the\n+     command line.  By default, if the parameter is non-zero, prints a\n+     warning that the front end does not use such a parser.  */\n+  void (*set_yydebug) PARAMS ((int));\n+\n   struct lang_hooks_for_tree_inlining tree_inlining;\n \n   /* Whenever you add entries here, make sure you adjust langhooks.h"}, {"sha": "fa2842eda6e96525f3268016cc7352fa52ab3c7c", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -461,6 +461,10 @@ static int print_struct_values = 0;\n #define LANG_HOOKS_DECODE_OPTION objc_decode_option\n #undef LANG_HOOKS_POST_OPTIONS\n #define LANG_HOOKS_POST_OPTIONS objc_post_options\n+#undef LANG_HOOKS_PRINT_IDENTIFIER\n+#define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n+#undef LANG_HOOKS_SET_YYDEBUG\n+#define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n \n /* Each front end provides its own.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n@@ -640,16 +644,6 @@ objc_decode_option (argc, argv)\n   return 1;\n }\n \n-/* used by print-tree.c */\n-\n-void\n-lang_print_xnode (file, node, indent)\n-     FILE *file ATTRIBUTE_UNUSED;\n-     tree node ATTRIBUTE_UNUSED;\n-     int indent ATTRIBUTE_UNUSED;\n-{\n-}\n-\n \f\n static tree\n define_decl (declarator, declspecs)\n@@ -8333,11 +8327,6 @@ handle_impent (impent)\n   assemble_zeros (UNITS_PER_WORD);\n }\n \f\n-void\n-print_lang_statistics ()\n-{\n-}\n-\n static void\n ggc_mark_imp_list (arg)\n     void *arg;"}, {"sha": "51fad169609bc05ff8e081bee83045607b8163bf", "filename": "gcc/print-tree.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -24,6 +24,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"tree.h\"\n #include \"ggc.h\"\n+#include \"langhooks.h\"\n \n /* Define the hash table of nodes already seen.\n    Such nodes are not repeated; brief cross-references are used.  */\n@@ -442,7 +443,7 @@ print_node (file, prefix, node, indent)\n       print_node (file, \"result\", DECL_RESULT_FLD (node), indent + 4);\n       print_node_brief (file, \"initial\", DECL_INITIAL (node), indent + 4);\n \n-      print_lang_decl (file, node, indent);\n+      (*lang_hooks.print_decl) (file, node, indent);\n \n       if (DECL_RTL_SET_P (node))\n \t{\n@@ -574,7 +575,7 @@ print_node (file, prefix, node, indent)\n       if (TYPE_CONTEXT (node))\n \tprint_node_brief (file, \"context\", TYPE_CONTEXT (node), indent + 4);\n \n-      print_lang_type (file, node, indent);\n+      (*lang_hooks.print_type) (file, node, indent);\n \n       if (TYPE_POINTER_TO (node) || TREE_CHAIN (node))\n \tindent_to (file, indent + 3);\n@@ -719,7 +720,7 @@ print_node (file, prefix, node, indent)\n \t  break;\n \n \tcase IDENTIFIER_NODE:\n-\t  print_lang_identifier (file, node, indent);\n+\t  (*lang_hooks.print_identifier) (file, node, indent);\n \t  break;\n \n \tcase TREE_LIST:\n@@ -742,7 +743,7 @@ print_node (file, prefix, node, indent)\n \n \tdefault:\n \t  if (TREE_CODE_CLASS (TREE_CODE (node)) == 'x')\n-\t    lang_print_xnode (file, node, indent);\n+\t    (*lang_hooks.print_xnode) (file, node, indent);\n \t  break;\n \t}\n "}, {"sha": "a542f430a8a7381ebd0b70cc26f9e6cc5ad25641", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -4045,7 +4045,7 @@ decode_d_option (arg)\n \trtl_dump_and_exit = 1;\n \tbreak;\n       case 'y':\n-\tset_yydebug (1);\n+\t(*lang_hooks.set_yydebug) (1);\n \tbreak;\n       case 'D':\t/* These are handled by the preprocessor.  */\n       case 'I':"}, {"sha": "1b6dc79e857fe055dbc04c19bf916a934cabc1bd", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -45,6 +45,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"hashtab.h\"\n #include \"output.h\"\n #include \"target.h\"\n+#include \"langhooks.h\"\n \n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n@@ -4424,7 +4425,7 @@ dump_tree_statistics ()\n #endif\n   print_obstack_statistics (\"permanent_obstack\", &permanent_obstack);\n   print_type_hash_statistics ();\n-  print_lang_statistics ();\n+  (*lang_hooks.print_statistics) ();\n }\n \f\n #define FILE_FUNCTION_PREFIX_LEN 9"}, {"sha": "45ce33f1b71d3d27a09c73f34f660ef7ab04abc8", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69f816bcfd32f2171b31e09249a8e03acedd5e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=5d69f816bcfd32f2171b31e09249a8e03acedd5e", "patch": "@@ -2956,13 +2956,7 @@ extern int lang_attribute_common;\n \n extern int mark_addressable\t\tPARAMS ((tree));\n extern void incomplete_type_error\tPARAMS ((tree, tree));\n-extern void print_lang_statistics\tPARAMS ((void));\n extern tree truthvalue_conversion\tPARAMS ((tree));\n-#ifdef BUFSIZ\n-extern void print_lang_decl\t\tPARAMS ((FILE *, tree, int));\n-extern void print_lang_type\t\tPARAMS ((FILE *, tree, int));\n-extern void print_lang_identifier\tPARAMS ((FILE *, tree, int));\n-#endif\n extern int global_bindings_p\t\tPARAMS ((void));\n extern void insert_block\t\tPARAMS ((tree));\n \n@@ -2972,9 +2966,6 @@ extern void set_decl_abstract_flags\tPARAMS ((tree, int));\n extern void output_inline_function\tPARAMS ((tree));\n extern void set_decl_origin_self\tPARAMS ((tree));\n \n-/* In front end.  */\n-extern void set_yydebug\t\t\tPARAMS ((int));\n-\n /* In stor-layout.c */\n extern void fixup_signed_type\t\tPARAMS ((tree));\n extern void internal_reference_types \tPARAMS ((void));\n@@ -3022,10 +3013,6 @@ extern tree case_index_expr_type\tPARAMS ((void));\n extern HOST_WIDE_INT all_cases_count\tPARAMS ((tree, int *));\n extern void check_for_full_enumeration_handling PARAMS ((tree));\n extern void declare_nonlocal_label\tPARAMS ((tree));\n-#ifdef BUFSIZ\n-extern void lang_print_xnode \t\tPARAMS ((FILE *, tree, int));\n-#endif\n-\n \n /* If KIND=='I', return a suitable global initializer (constructor) name.\n    If KIND=='D', return a suitable global clean-up (destructor) name.  */"}]}