{"sha": "ec06f00ad607e92aa1b2b98a86ae03cd1f6b26d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMwNmYwMGFkNjA3ZTkyYWExYjJiOThhODZhZTAzY2QxZjZiMjZkNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-31T21:10:50Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-31T21:10:50Z"}, "message": "(L_builtin_new): Change to L_op_new.\n\n(L_builtin_new): Change to L_op_new.  Use new style\ndefinition for __builtin_new.\n(L_caps_New): Change to L_new_handler.  Delete unused function\nbuiltin_vec_new.\n(L_builtin_del): Change to L_op_delete.  Delete vfp declaration.\nUse new style definition for __builtin_delete.  Delete unused\nfunction __builtin_vec_delete.\n\nFrom-SVN: r3021", "tree": {"sha": "731476a919c4f15c74126c4ac84cf2533280ebba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/731476a919c4f15c74126c4ac84cf2533280ebba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec06f00ad607e92aa1b2b98a86ae03cd1f6b26d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec06f00ad607e92aa1b2b98a86ae03cd1f6b26d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec06f00ad607e92aa1b2b98a86ae03cd1f6b26d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec06f00ad607e92aa1b2b98a86ae03cd1f6b26d4/comments", "author": null, "committer": null, "parents": [{"sha": "9604729123d646fe3427ecabaaac43e2a8a283e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9604729123d646fe3427ecabaaac43e2a8a283e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9604729123d646fe3427ecabaaac43e2a8a283e5"}], "stats": {"total": 70, "additions": 9, "deletions": 61}, "files": [{"sha": "f644c8cc11cabf7728f26457c7dd938c9542b882", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 9, "deletions": 61, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec06f00ad607e92aa1b2b98a86ae03cd1f6b26d4/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec06f00ad607e92aa1b2b98a86ae03cd1f6b26d4/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=ec06f00ad607e92aa1b2b98a86ae03cd1f6b26d4", "patch": "@@ -1202,14 +1202,14 @@ __bb_init_func (blocks)\n \f\n /* frills for C++ */\n \n-#ifdef L_builtin_new\n+#ifdef L_op_new\n typedef void (*vfp)(void);\n \n extern vfp __new_handler;\n \n+/* void * operator new (size_t sz) */\n void *\n-__builtin_new (sz)\n-     size_t sz;\n+__builtin_new (size_t sz)\n {\n   void *p;\n \n@@ -1221,9 +1221,9 @@ __builtin_new (sz)\n     (*__new_handler) ();\n   return p;\n }\n-#endif\n+#endif /* L_op_new */\n \n-#ifdef L_caps_New\n+#ifdef L_new_handler\n \n /* This gets us __GNU_LIBRARY__.  */\n #undef NULL /* Avoid errors if stdio.h and our stddef.h mismatch.  */\n@@ -1242,31 +1242,6 @@ static void default_new_handler (void);\n \n vfp __new_handler = default_new_handler;\n \n-void *\n-__builtin_vec_new (p, maxindex, size, ctor)\n-     void *p;\n-     size_t maxindex;\n-     size_t size;\n-     void (*ctor)(void *);\n-{\n-  size_t i;\n-  size_t nelts = maxindex + 1;\n-  void *rval;\n-\n-  if (p == 0)\n-    p = __builtin_new (nelts * size);\n-\n-  rval = p;\n-\n-  for (i = 0; i < nelts; i++)\n-    {\n-      (*ctor) (p);\n-      p += size;\n-    }\n-\n-  return rval;\n-}\n-\n vfp\n __set_new_handler (handler)\n      vfp handler;\n@@ -1300,44 +1275,17 @@ default_new_handler ()\n   _exit (-1);\n }\n #endif\n-\f\n-#ifdef L_builtin_del\n-typedef void (*vfp)(void);\n \n+#ifdef L_op_delete\n+/* void operator delete (void *ptr) */\n void\n-__builtin_delete (ptr)\n-     void *ptr;\n+__builtin_delete (void *ptr)\n {\n   if (ptr)\n     free (ptr);\n }\n-\n-void\n-__builtin_vec_delete (ptr, maxindex, size, dtor, auto_delete_vec, auto_delete)\n-     void *ptr;\n-     size_t maxindex;\n-     size_t size;\n-     void (*dtor)(void *, int);\n-     int auto_delete;\n-{\n-  size_t i;\n-  size_t nelts = maxindex + 1;\n-  void *p = ptr;\n-\n-  ptr += nelts * size;\n-\n-  for (i = 0; i < nelts; i++)\n-    {\n-      ptr -= size;\n-      (*dtor) (ptr, auto_delete);\n-    }\n-\n-  if (auto_delete_vec)\n-    __builtin_delete (p);\n-}\n-\n #endif\n-\n+\f\n #ifdef L_shtab\n unsigned int __shtab[] = {\n     0x00000001, 0x00000002, 0x00000004, 0x00000008,"}]}