{"sha": "f3fb416a935dd10b8d2ab463a5a45981fb1b94cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNmYjQxNmE5MzVkZDEwYjhkMmFiNDYzYTVhNDU5ODFmYjFiOTRjZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-15T14:33:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-15T14:33:45Z"}, "message": "compiler: Avoid crashes on erroneous input.\n\nFrom-SVN: r184274", "tree": {"sha": "a115cf9c579b75d5b8a719d3d138971428779115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a115cf9c579b75d5b8a719d3d138971428779115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd/comments", "author": null, "committer": null, "parents": [{"sha": "65728e39baeb1aa7492737cd55bbd233d7df5060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65728e39baeb1aa7492737cd55bbd233d7df5060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65728e39baeb1aa7492737cd55bbd233d7df5060"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "d31404555e6a719d3787a0579d207523cd5f242d", "filename": "gcc/go/gofrontend/backend.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd/gcc%2Fgo%2Fgofrontend%2Fbackend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd/gcc%2Fgo%2Fgofrontend%2Fbackend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fbackend.h?ref=f3fb416a935dd10b8d2ab463a5a45981fb1b94cd", "patch": "@@ -126,7 +126,9 @@ class Backend\n \n   // Fill in a placeholder pointer type as a pointer.  This takes a\n   // type returned by placeholder_pointer_type and arranges for it to\n-  // point to to_type.  Returns true on success, false on failure.\n+  // point to the type that TO_TYPE points to (that is, PLACEHOLDER\n+  // becomes the same type as TO_TYPE).  Returns true on success,\n+  // false on failure.\n   virtual bool\n   set_placeholder_pointer_type(Btype* placeholder, Btype* to_type) = 0;\n "}, {"sha": "a1b03ac0d7087026c6891547c58d59c1bfb9f0c0", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=f3fb416a935dd10b8d2ab463a5a45981fb1b94cd", "patch": "@@ -4180,6 +4180,11 @@ Variable::get_backend_variable(Gogo* gogo, Named_object* function,\n \t\t\t\t\t    package != NULL,\n \t\t\t\t\t    Gogo::is_hidden_name(name),\n \t\t\t\t\t    this->location_);\n+\t  else if (function == NULL)\n+\t    {\n+\t      go_assert(saw_errors());\n+\t      bvar = backend->error_variable();\n+\t    }\n \t  else\n \t    {\n \t      tree fndecl = function->func_value()->get_decl();"}, {"sha": "1a35e54d9721eeda4b5a2653daff9ac02566a481", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3fb416a935dd10b8d2ab463a5a45981fb1b94cd/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=f3fb416a935dd10b8d2ab463a5a45981fb1b94cd", "patch": "@@ -3595,7 +3595,7 @@ Pointer_type::do_hash_for_method(Gogo* gogo) const\n   return this->to_type_->hash_for_method(gogo) << 4;\n }\n \n-// The tree for a pointer type.\n+// Get the backend representation for a pointer type.\n \n Btype*\n Pointer_type::do_get_backend(Gogo* gogo)\n@@ -5345,6 +5345,7 @@ Array_type::do_get_backend(Gogo* gogo)\n }\n \n // Return the backend representation of the element type.\n+\n Btype*\n Array_type::get_backend_element(Gogo* gogo)\n {\n@@ -7567,6 +7568,11 @@ Find_type_use::type(Type* type)\n \t  this->find_type_->add_dependency(type->named_type());\n \t  break;\n \n+\tcase Type::TYPE_NAMED:\n+\tcase Type::TYPE_FORWARD:\n+\t  go_assert(saw_errors());\n+\t  break;\n+\n \tcase Type::TYPE_VOID:\n \tcase Type::TYPE_SINK:\n \tcase Type::TYPE_FUNCTION:\n@@ -7575,8 +7581,6 @@ Find_type_use::type(Type* type)\n \tcase Type::TYPE_MAP:\n \tcase Type::TYPE_CHANNEL:\n \tcase Type::TYPE_INTERFACE:\n-\tcase Type::TYPE_NAMED:\n-\tcase Type::TYPE_FORWARD:\n \tdefault:\n \t  go_unreachable();\n \t}"}]}