{"sha": "4a3b4c2a453369f7c72b0b3be8567134533c01bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEzYjRjMmE0NTMzNjlmN2M3MmIwYjNiZTg1NjcxMzQ1MzNjMDFiYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-11-05T09:48:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-27T09:16:02Z"}, "message": "[Ada] Wrong compile time evaluation of Shift_Right\n\ngcc/ada/\n\n\t* sem_eval.adb (Fold_Shift): Fix evaluation of Shift_Right on\n\tnegative values.", "tree": {"sha": "238199eab0ff43867be2209b57bb0275858f6cc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/238199eab0ff43867be2209b57bb0275858f6cc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a3b4c2a453369f7c72b0b3be8567134533c01bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3b4c2a453369f7c72b0b3be8567134533c01bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a3b4c2a453369f7c72b0b3be8567134533c01bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3b4c2a453369f7c72b0b3be8567134533c01bb/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6a52e47ac1705bdf7c527005b42f3e8ba5da858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a52e47ac1705bdf7c527005b42f3e8ba5da858", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a52e47ac1705bdf7c527005b42f3e8ba5da858"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "198f72fe0854b39ea1d6cefdc0530424fa889da8", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a3b4c2a453369f7c72b0b3be8567134533c01bb/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a3b4c2a453369f7c72b0b3be8567134533c01bb/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=4a3b4c2a453369f7c72b0b3be8567134533c01bb", "patch": "@@ -4805,6 +4805,8 @@ package body Sem_Eval is\n          end if;\n       end Check_Elab_Call;\n \n+      Modulus : Uint;\n+\n    begin\n       if Compile_Time_Known_Value (Left)\n         and then Compile_Time_Known_Value (Right)\n@@ -4835,19 +4837,34 @@ package body Sem_Eval is\n          elsif Op = N_Op_Shift_Right then\n             Check_Elab_Call;\n \n-            --  Fold Shift_Right (X, Y) by computing abs X / 2**Y\n+            --  X >> 0 is a no-op\n \n-            Fold_Uint\n-              (N,\n-               abs Expr_Value (Left) / (Uint_2 ** Expr_Value (Right)),\n-               Static => Static);\n+            if Expr_Value (Right) = Uint_0 then\n+               Fold_Uint (N, Expr_Value (Left), Static => Static);\n+            else\n+               if Is_Modular_Integer_Type (Typ) then\n+                  Modulus := Einfo.Modulus (Typ);\n+               else\n+                  Modulus := Uint_2 ** RM_Size (Typ);\n+               end if;\n+\n+               --  Fold X >> Y by computing (X [+ Modulus]) / 2**Y\n+               --  Note that after a Shift_Right operation (with Y > 0), the\n+               --  result is always positive, even if the original operand was\n+               --  negative.\n \n+               Fold_Uint\n+                 (N,\n+                  (Expr_Value (Left) +\n+                     (if Expr_Value (Left) >= Uint_0 then Uint_0 else Modulus))\n+                  / (Uint_2 ** Expr_Value (Right)),\n+                  Static => Static);\n+            end if;\n          elsif Op = N_Op_Shift_Right_Arithmetic then\n             Check_Elab_Call;\n \n             declare\n                Two_Y   : constant Uint := Uint_2 ** Expr_Value (Right);\n-               Modulus : Uint;\n             begin\n                if Is_Modular_Integer_Type (Typ) then\n                   Modulus := Einfo.Modulus (Typ);"}]}