{"sha": "ffcfb997e0a400614011e8f8b28f30eb68d1966a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZjZmI5OTdlMGE0MDA2MTQwMTFlOGY4YjI4ZjMwZWI2OGQxOTY2YQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2015-05-26T08:10:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-26T08:10:46Z"}, "message": "exp_aggr.adb (Build_Array_Aggr_Code, Gen_Assign): If a component is default-initialized and its type has an invariant procedure...\n\n2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_aggr.adb (Build_Array_Aggr_Code, Gen_Assign):\n\tIf a component is default-initialized and its type has an\n\tinvariant procedure, insert an invariant test after code for\n\tdefault-initialization of the component.\n\nFrom-SVN: r223664", "tree": {"sha": "5a7525cd8c5e3f1f9850268be0bc98b61505dfd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a7525cd8c5e3f1f9850268be0bc98b61505dfd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffcfb997e0a400614011e8f8b28f30eb68d1966a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffcfb997e0a400614011e8f8b28f30eb68d1966a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffcfb997e0a400614011e8f8b28f30eb68d1966a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffcfb997e0a400614011e8f8b28f30eb68d1966a/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "551e193501cebca18c19ed9ede7df7c2ee0bd9a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551e193501cebca18c19ed9ede7df7c2ee0bd9a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/551e193501cebca18c19ed9ede7df7c2ee0bd9a6"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "da387055e6734b343545f17fc9171e9f2d508cb0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffcfb997e0a400614011e8f8b28f30eb68d1966a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffcfb997e0a400614011e8f8b28f30eb68d1966a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ffcfb997e0a400614011e8f8b28f30eb68d1966a", "patch": "@@ -1,3 +1,10 @@\n+2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Build_Array_Aggr_Code, Gen_Assign):\n+\tIf a component is default-initialized and its type has an\n+\tinvariant procedure, insert an invariant test after code for\n+\tdefault-initialization of the component.\n+\n 2015-05-26  Gary Dismukes  <dismukes@adacore.com>\n \n \t* einfo.ads, sem_util.adb, sem_ch4.adb: Minor reformatting."}, {"sha": "3e2006338898916078a2068d3f0d9969414fabb0", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffcfb997e0a400614011e8f8b28f30eb68d1966a/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffcfb997e0a400614011e8f8b28f30eb68d1966a/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=ffcfb997e0a400614011e8f8b28f30eb68d1966a", "patch": "@@ -1160,11 +1160,21 @@ package body Exp_Aggr is\n                    Typ               => Ctype,\n                    With_Default_Init => True));\n \n+               --  If the component type has invariants, add an invariant\n+               --  check after the component is default-initialized. It will\n+               --  be analyzed and resolved before the code for initialization\n+               --  of other components.\n+\n+               if Has_Invariants (Ctype) then\n+                  Set_Etype (Indexed_Comp, Ctype);\n+                  Append_To (L, Make_Invariant_Call (Indexed_Comp));\n+               end if;\n+\n             elsif Is_Access_Type (Ctype) then\n                Append_To (L,\n-                  Make_Assignment_Statement (Loc,\n-                    Name       => Indexed_Comp,\n-                    Expression => Make_Null (Loc)));\n+                 Make_Assignment_Statement (Loc,\n+                   Name       => Indexed_Comp,\n+                   Expression => Make_Null (Loc)));\n             end if;\n \n             if Needs_Finalization (Ctype) then\n@@ -1392,7 +1402,7 @@ package body Exp_Aggr is\n \n          L_Range :=\n            Make_Range (Loc,\n-             Low_Bound => L_L,\n+             Low_Bound  => L_L,\n              High_Bound => L_H);\n \n          --  Construct \"for L_J in Index_Base range L .. H\"\n@@ -1911,8 +1921,7 @@ package body Exp_Aggr is\n                         return Duplicate_Subexpr (Expression (Assoc));\n                      end if;\n \n-                     Corresp_Disc :=\n-                       Corresponding_Discriminant (Corresp_Disc);\n+                     Corresp_Disc := Corresponding_Discriminant (Corresp_Disc);\n                   end loop;\n                end if;\n \n@@ -1954,8 +1963,7 @@ package body Exp_Aggr is\n                   while Present (Corresp_Disc)\n                     and then Disc /= Corresp_Disc\n                   loop\n-                     Corresp_Disc :=\n-                       Corresponding_Discriminant (Corresp_Disc);\n+                     Corresp_Disc := Corresponding_Discriminant (Corresp_Disc);\n                   end loop;\n \n                   if Disc = Corresp_Disc then\n@@ -1984,8 +1992,10 @@ package body Exp_Aggr is\n \n                   if No (Assoc_Elmt) then\n                      Next (Assoc);\n+\n                   else\n                      Next_Elmt (Assoc_Elmt);\n+\n                      if Present (Assoc_Elmt) then\n                         Assoc := Node (Assoc_Elmt);\n                      else\n@@ -2022,7 +2032,7 @@ package body Exp_Aggr is\n \n             if Present (Disc_Value) then\n                Cond := Make_Op_Ne (Loc,\n-                 Left_Opnd =>\n+                 Left_Opnd  =>\n                    Make_Selected_Component (Loc,\n                      Prefix        => New_Copy_Tree (Target),\n                      Selector_Name => New_Occurrence_Of (Discr, Loc)),\n@@ -2504,7 +2514,7 @@ package body Exp_Aggr is\n                --  expansion, which was delayed.\n \n                if Nkind_In (Unqualify (Ancestor), N_Aggregate,\n-                                               N_Extension_Aggregate)\n+                                                  N_Extension_Aggregate)\n                then\n                   Set_Analyzed (Ancestor, False);\n                   Set_Analyzed (Expression (Ancestor), False);\n@@ -2530,9 +2540,9 @@ package body Exp_Aggr is\n                if Tagged_Type_Expansion then\n                   Instr :=\n                     Make_OK_Assignment_Statement (Loc,\n-                      Name =>\n+                      Name       =>\n                         Make_Selected_Component (Loc,\n-                          Prefix => New_Copy_Tree (Target),\n+                          Prefix        => New_Copy_Tree (Target),\n                           Selector_Name =>\n                             New_Occurrence_Of\n                               (First_Tag_Component (Base_Type (Typ)), Loc)),\n@@ -2617,10 +2627,10 @@ package body Exp_Aggr is\n                       Selector_Name => New_Occurrence_Of (Discriminant, Loc));\n \n                   Discriminant_Value :=\n-                    Get_Discriminant_Value (\n-                      Discriminant,\n-                      N_Typ,\n-                      Discriminant_Constraint (N_Typ));\n+                    Get_Discriminant_Value\n+                      (Discriminant,\n+                       N_Typ,\n+                       Discriminant_Constraint (N_Typ));\n \n                   Instr :=\n                     Make_OK_Assignment_Statement (Loc,\n@@ -2670,7 +2680,7 @@ package body Exp_Aggr is\n                if Present (CPP_Init_Proc (T)) then\n                   Append_To (L,\n                     Make_Procedure_Call_Statement (Loc,\n-                      New_Occurrence_Of (CPP_Init_Proc (T), Loc)));\n+                      Name => New_Occurrence_Of (CPP_Init_Proc (T), Loc)));\n                end if;\n             end Invoke_IC_Proc;\n "}]}