{"sha": "6c99d79fbf432d5264047f561aac4c8d93248568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM5OWQ3OWZiZjQzMmQ1MjY0MDQ3ZjU2MWFhYzRjOGQ5MzI0ODU2OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-09T19:25:04Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-09T19:25:04Z"}, "message": "tree-ssa-threadupdate.c (copy_phis_to_block): Remove.\n\n\t* tree-ssa-threadupdate.c (copy_phis_to_block): Remove.\n\t(thread_block): Call flush_pending_stmt instead of\n\tcopy_phis_to_block.\n\nFrom-SVN: r90359", "tree": {"sha": "5eb9cb738ecb64342054871952ec3dfc096fea3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eb9cb738ecb64342054871952ec3dfc096fea3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c99d79fbf432d5264047f561aac4c8d93248568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c99d79fbf432d5264047f561aac4c8d93248568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c99d79fbf432d5264047f561aac4c8d93248568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c99d79fbf432d5264047f561aac4c8d93248568/comments", "author": null, "committer": null, "parents": [{"sha": "e3715ebdd3e99c729f6ae7081633904b338d3386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3715ebdd3e99c729f6ae7081633904b338d3386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3715ebdd3e99c729f6ae7081633904b338d3386"}], "stats": {"total": 41, "additions": 7, "deletions": 34}, "files": [{"sha": "117fbb779b6e02822920dce4198df67d869ed577", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c99d79fbf432d5264047f561aac4c8d93248568/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c99d79fbf432d5264047f561aac4c8d93248568/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c99d79fbf432d5264047f561aac4c8d93248568", "patch": "@@ -1,3 +1,9 @@\n+2004-11-09  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-ssa-threadupdate.c (copy_phis_to_block): Remove.\n+\t(thread_block): Call flush_pending_stmt instead of\n+\tcopy_phis_to_block.\n+\n 2004-11-09  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* loop-iv.c (iv_number_of_iterations): Make it static."}, {"sha": "b4b30fa985bcee7efc2a2a178560dc23ee1d5e40", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 1, "deletions": 34, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c99d79fbf432d5264047f561aac4c8d93248568/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c99d79fbf432d5264047f561aac4c8d93248568/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=6c99d79fbf432d5264047f561aac4c8d93248568", "patch": "@@ -95,39 +95,6 @@ struct redirection_data\n /* Main data structure to hold information for duplicates of BB.  */\n static varray_type redirection_data;\n \n-/* Add to the destination of edge E those PHI arguments queued on\n-   E.  */\n-\n-static void\n-copy_phis_to_block (edge e)\n-{\n-  basic_block dest = e->dest;\n-  tree var;\n-\n-  for (var = PENDING_STMT (e); var; var = TREE_CHAIN (var))\n-    {\n-      tree result = TREE_PURPOSE (var);\n-      tree arg = TREE_VALUE (var);\n-      tree new_phi;\n-\n-      /* First try to find a PHI node in NEW_BB which has the same\n-         PHI_RESULT as the PHI from BB we are currently processing.  */\n-      for (new_phi = phi_nodes (dest); new_phi;\n-\t   new_phi = PHI_CHAIN (new_phi))\n-\tif (PHI_RESULT (new_phi) == result)\n-\t  break;\n-\n-      /* If we did not find a suitable PHI in NEW_BB, create one.  */\n-      if (!new_phi)\n-\tnew_phi = create_phi_node (result, dest);\n-\n-      /* Now add that same argument to the new PHI node in block NEW_BB.  */\n-      add_phi_arg (&new_phi, arg, e);\n-    }\n-\n-  PENDING_STMT (e) = NULL;\n-}\n-\n /* Remove the last statement in block BB if it is a control statement\n    Also remove all outgoing edges except the edge which reaches DEST_BB.\n    If DEST_BB is NULL, then remove all outgoing edges.  */\n@@ -368,7 +335,7 @@ thread_block (basic_block bb)\n \t\t\t e->src->index, e->dest->index, rd->dup_block->index);\n \n \t      e2 = redirect_edge_and_branch (e, rd->dup_block);\n-\t      copy_phis_to_block (e2);\n+\t      flush_pending_stmts (e2);\n \n \t      if ((dump_file && (dump_flags & TDF_DETAILS))\n \t\t  && e->src != e2->src)"}]}