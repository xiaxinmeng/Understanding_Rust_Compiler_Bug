{"sha": "c74a0faa9186a3cb2b930490e9b7d99ec91198e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc0YTBmYWE5MTg2YTNjYjJiOTMwNDkwZTliN2Q5OWVjOTExOThlMQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@cavium.com", "date": "2018-02-22T16:49:28Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2018-02-22T16:49:28Z"}, "message": "extend.texi (__builtin_extend_pointer): Document builtin.\n\n2018-02-22  Steve Ellcey  <sellcey@cavium.com>\n\n\t* doc/extend.texi (__builtin_extend_pointer): Document builtin.\n\nFrom-SVN: r257906", "tree": {"sha": "0f100df2bf3534e91493449ae66e3247f044de1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f100df2bf3534e91493449ae66e3247f044de1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c74a0faa9186a3cb2b930490e9b7d99ec91198e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74a0faa9186a3cb2b930490e9b7d99ec91198e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74a0faa9186a3cb2b930490e9b7d99ec91198e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74a0faa9186a3cb2b930490e9b7d99ec91198e1/comments", "author": {"login": "sellcey", "id": 25938520, "node_id": "MDQ6VXNlcjI1OTM4NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/25938520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellcey", "html_url": "https://github.com/sellcey", "followers_url": "https://api.github.com/users/sellcey/followers", "following_url": "https://api.github.com/users/sellcey/following{/other_user}", "gists_url": "https://api.github.com/users/sellcey/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellcey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellcey/subscriptions", "organizations_url": "https://api.github.com/users/sellcey/orgs", "repos_url": "https://api.github.com/users/sellcey/repos", "events_url": "https://api.github.com/users/sellcey/events{/privacy}", "received_events_url": "https://api.github.com/users/sellcey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea49b4dd2eb8d190f1470fea30dc582eceeee05d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea49b4dd2eb8d190f1470fea30dc582eceeee05d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea49b4dd2eb8d190f1470fea30dc582eceeee05d"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "2363216b73b50ec50ac6808fb9138c757bc20267", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74a0faa9186a3cb2b930490e9b7d99ec91198e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74a0faa9186a3cb2b930490e9b7d99ec91198e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c74a0faa9186a3cb2b930490e9b7d99ec91198e1", "patch": "@@ -1,3 +1,7 @@\n+2018-02-22  Steve Ellcey  <sellcey@cavium.com>\n+\n+\t* doc/extend.texi (__builtin_extend_pointer): Document builtin.\n+\n 2018-02-22  DJ Delorie  <dj@redhat.com>\n \t    Sebastian Perta  <sebastian.perta@renesas.com>\n \t    Oleg Endo  <olegendo@gcc.gnu.org>"}, {"sha": "1379502ebbbb45823e123842a61c222914ed713b", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c74a0faa9186a3cb2b930490e9b7d99ec91198e1/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c74a0faa9186a3cb2b930490e9b7d99ec91198e1/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=c74a0faa9186a3cb2b930490e9b7d99ec91198e1", "patch": "@@ -11042,6 +11042,7 @@ the built-in function returns -1.\n @findex __builtin_alloca_with_align\n @findex __builtin_alloca_with_align_and_max\n @findex __builtin_call_with_static_chain\n+@findex __builtin_extend_pointer\n @findex __builtin_fpclassify\n @findex __builtin_isfinite\n @findex __builtin_isnormal\n@@ -12419,6 +12420,15 @@ Similar to @code{__builtin_bswap32}, except the argument and return types\n are 64 bit.\n @end deftypefn\n \n+@deftypefn {Built-in Function} Pmode __builtin_extend_pointer (void * x)\n+On targets where the user visible pointer size is smaller than the size\n+of an actual hardware address this function returns the extended user\n+pointer.  Targets where this is true included ILP32 mode on x86_64 or\n+Aarch64.  This function is mainly useful when writing inline assembly\n+code.\n+@var{addr}\n+@end deftypefn\n+\n @node Target Builtins\n @section Built-in Functions Specific to Particular Target Machines\n "}]}