{"sha": "1dc7836cdda611e476f2c4f82317662f7f85f101", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjNzgzNmNkZGE2MTFlNDc2ZjJjNGY4MjMxNzY2MmY3Zjg1ZjEwMQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@linux.alibaba.com", "date": "2018-12-10T07:02:49Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2018-12-10T07:02:49Z"}, "message": "auto-profile.c (afdo_calculate_branch_prob): Convert profile_count to afdo precision quality.\n\n\t* auto-profile.c (afdo_calculate_branch_prob): Convert profile_count\n\tto afdo precision quality.\n\t(afdo_callsite_hot_enough_for_early_inline): Likewise.\n\t(afdo_annotate_cfg): Set profile_count for exit basic block.\n\nFrom-SVN: r266943", "tree": {"sha": "62811a47c6e2ab78db0c358940725d77e1fe6afe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62811a47c6e2ab78db0c358940725d77e1fe6afe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dc7836cdda611e476f2c4f82317662f7f85f101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc7836cdda611e476f2c4f82317662f7f85f101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dc7836cdda611e476f2c4f82317662f7f85f101", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc7836cdda611e476f2c4f82317662f7f85f101/comments", "author": null, "committer": null, "parents": [{"sha": "395bc8ad4b750607b040653ef1c799d18296e3ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395bc8ad4b750607b040653ef1c799d18296e3ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/395bc8ad4b750607b040653ef1c799d18296e3ff"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "bffa8e295919d83cc7b68d2a90620bd79f0a48e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc7836cdda611e476f2c4f82317662f7f85f101/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc7836cdda611e476f2c4f82317662f7f85f101/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1dc7836cdda611e476f2c4f82317662f7f85f101", "patch": "@@ -1,3 +1,10 @@\n+2018-12-10  Bin Cheng  <bin.cheng@linux.alibaba.com>\n+\n+\t* auto-profile.c (afdo_calculate_branch_prob): Convert profile_count\n+\tto afdo precision quality.\n+\t(afdo_callsite_hot_enough_for_early_inline): Likewise.\n+\t(afdo_annotate_cfg): Set profile_count for exit basic block.\n+\n 2018-12-10  Bin Cheng  <bin.cheng@linux.alibaba.com>\n \n \t* auto-profile.c (string_table::get_index_by_decl)"}, {"sha": "cde4f41c1d922f527d3720133067c0a3226f4248", "filename": "gcc/auto-profile.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc7836cdda611e476f2c4f82317662f7f85f101/gcc%2Fauto-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc7836cdda611e476f2c4f82317662f7f85f101/gcc%2Fauto-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-profile.c?ref=1dc7836cdda611e476f2c4f82317662f7f85f101", "patch": "@@ -1400,7 +1400,7 @@ afdo_calculate_branch_prob (bb_set *annotated_bb, edge_set *annotated_edge)\n     edge e;\n     edge_iterator ei;\n     int num_unknown_succ = 0;\n-    profile_count total_count = profile_count::zero ();\n+    profile_count total_count = profile_count::zero ().afdo ();\n \n     FOR_EACH_EDGE (e, ei, bb->succs)\n     {\n@@ -1507,6 +1507,7 @@ afdo_annotate_cfg (const stmt_set &promoted_stmts)\n      = profile_count::from_gcov_type (s->head_count ()).afdo ();\n   ENTRY_BLOCK_PTR_FOR_FN (cfun)->count\n      = profile_count::from_gcov_type (s->head_count ()).afdo ();\n+  EXIT_BLOCK_PTR_FOR_FN (cfun)->count = profile_count::zero ().afdo ();\n   profile_count max_count = ENTRY_BLOCK_PTR_FOR_FN (cfun)->count;\n \n   FOR_EACH_BB_FN (bb, cfun)\n@@ -1686,11 +1687,12 @@ afdo_callsite_hot_enough_for_early_inline (struct cgraph_edge *edge)\n   if (count > 0)\n     {\n       bool is_hot;\n+      profile_count pcount = profile_count::from_gcov_type (count).afdo ();\n       gcov_summary *saved_profile_info = profile_info;\n       /* At early inline stage, profile_info is not set yet. We need to\n          temporarily set it to afdo_profile_info to calculate hotness.  */\n       profile_info = autofdo::afdo_profile_info;\n-      is_hot = maybe_hot_count_p (NULL, profile_count::from_gcov_type (count));\n+      is_hot = maybe_hot_count_p (NULL, pcount);\n       profile_info = saved_profile_info;\n       return is_hot;\n     }"}]}