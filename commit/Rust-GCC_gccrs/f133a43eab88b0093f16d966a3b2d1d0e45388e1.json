{"sha": "f133a43eab88b0093f16d966a3b2d1d0e45388e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEzM2E0M2VhYjg4YjAwOTNmMTZkOTY2YTNiMmQxZDBlNDUzODhlMQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@purist.soma.redhat.com", "date": "2000-09-07T01:02:01Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-09-07T01:02:01Z"}, "message": "acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Force glibc_satisfactory to no...\n\n\n2000-09-06  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Force glibc_satisfactory\n\tto no, so that libstdc++-v3's libio will be built on glibc-2.2\n\tsystems.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* */Makefile.in: Regenerate.\n\n\t* bits/std_cwctype.h: Put in temporary hack to work around -O2 +\n\tglibc 2.1.x unsigned errors. Or disable -Werror by default...\n\n\t* testsuite/23_containers/vector_element_access.cc: New file.\n\t* bits/stl_config.h (__STL_THROW_RANGE_ERRORS): Define.\n\nFrom-SVN: r36218", "tree": {"sha": "362b250d70b806633ffa441ff4d0bb069781b9e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/362b250d70b806633ffa441ff4d0bb069781b9e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f133a43eab88b0093f16d966a3b2d1d0e45388e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f133a43eab88b0093f16d966a3b2d1d0e45388e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f133a43eab88b0093f16d966a3b2d1d0e45388e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f133a43eab88b0093f16d966a3b2d1d0e45388e1/comments", "author": null, "committer": null, "parents": [{"sha": "0806f95fb4c5c3533d67621da4b5e9411d85c292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0806f95fb4c5c3533d67621da4b5e9411d85c292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0806f95fb4c5c3533d67621da4b5e9411d85c292"}], "stats": {"total": 1955, "additions": 1034, "deletions": 921}, "files": [{"sha": "d7f82b570d58d3c1b86282001a8c6490f9a0c4f4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -1,3 +1,18 @@\n+2000-09-06  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n+\t\n+\t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Force glibc_satisfactory\n+\tto no, so that libstdc++-v3's libio will be built on glibc-2.2\n+\tsystems. \n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* */Makefile.in: Regenerate.\n+\n+\t* bits/std_cwctype.h: Put in temporary hack to work around -O2 +\n+\tglibc 2.1.x unsigned errors. Or disable -Werror by default...\n+\n+\t* testsuite/23_containers/vector_element_access.cc: New file.\n+\t* bits/stl_config.h (__STL_THROW_RANGE_ERRORS): Define.\n+\n 2000-09-06  Levente Farkas  <lfarkas@mindmaker.hu>\n \n \t* bits/string.tcc: Fix up more parameter names."}, {"sha": "0550a268cd147e95f9e6c4ba4437b10b0c36c7a2", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -76,6 +76,8 @@ DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCC_OBJDIR = @GCC_OBJDIR@\n+GCJ = @GCJ@\n+GCJFLAGS = @GCJFLAGS@\n GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@"}, {"sha": "004ece1e06b708ec30816c68bb1cd72402eead9b", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -1235,6 +1235,10 @@ AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n \t    ;;\n         esac\n \n+\t# XXX at the moment, admit defeat and force the recompilation\n+        # XXX of glibc even on glibc-2.2 systems, because libio is not synched.\n+        glibc_satisfactory=no\t\n+\n   \tif test x$glibc_satisfactory = x\"yes\"; then\n \t  need_libio=no\n \t  need_xtra_libio=no"}, {"sha": "84d04e7276beca09d34bbb5a68c631443f286d04", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -1247,6 +1247,10 @@ AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n \t    ;;\n         esac\n \n+\t# XXX at the moment, admit defeat and force the recompilation\n+        # XXX of glibc even on glibc-2.2 systems, because libio is not synched.\n+        glibc_satisfactory=no\t\n+\n   \tif test x$glibc_satisfactory = x\"yes\"; then\n \t  need_libio=no\n \t  need_xtra_libio=no"}, {"sha": "47e9f8b078a197b47a8322afd0ff86b677e2bbf4", "filename": "libstdc++-v3/bits/std_cwctype.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fbits%2Fstd_cwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fbits%2Fstd_cwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_cwctype.h?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -34,6 +34,12 @@\n #ifndef _CPP_CWCTYPE\n #define _CPP_CWCTYPE 1\n \n+// XXX 2000-09-06 get unsigned warnings in glibc 2.1.x \n+// XXX either remove -Werror or do this hackery\n+#if __GLIBC__ >= 2 && __GLIBC_MINOR__ < 2 && defined(__OPTIMIZE__)\n+#undef __OPTIMIZE__\n+#endif\n+\n # pragma GCC system_header\n # include_next <wctype.h>\n "}, {"sha": "8a6e15c25de5c129ea9c2cadc0b8e4690c9c9cb7", "filename": "libstdc++-v3/bits/stl_config.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fbits%2Fstl_config.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fbits%2Fstl_config.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstl_config.h?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -266,6 +266,7 @@\n #   define __STL_HAS_NAMESPACES\n #   define __STL_USE_NAMESPACES\n #   define __STL_USE_EXCEPTIONS\n+#   define __STL_THROW_RANGE_ERRORS \n #   define __STL_CAN_THROW_RANGE_ERRORS \n #   define __STL_USE_STD_ALLOCATORS \n #   define __USE_MALLOC // As the \"underlying allocator\""}, {"sha": "307c9ade9fc8f75d273c44cec32a7c567da4f725", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 925, "deletions": 921, "changes": 1846, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1"}, {"sha": "ba0df297193d895831523b4035e2105eaa09728a", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -76,6 +76,8 @@ DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCC_OBJDIR = @GCC_OBJDIR@\n+GCJ = @GCJ@\n+GCJFLAGS = @GCJFLAGS@\n GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@"}, {"sha": "bde07b90859b9ef46c3185a436c7f2b4a02c9050", "filename": "libstdc++-v3/math/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmath%2FMakefile.in?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -76,6 +76,8 @@ DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCC_OBJDIR = @GCC_OBJDIR@\n+GCJ = @GCJ@\n+GCJFLAGS = @GCJFLAGS@\n GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@"}, {"sha": "64f338446d9abc7324f79a6af0e8e09e4bba050b", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -75,6 +75,8 @@ DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCC_OBJDIR = @GCC_OBJDIR@\n+GCJ = @GCJ@\n+GCJFLAGS = @GCJFLAGS@\n GLIBCPP_CFLAGS = @GLIBCPP_CFLAGS@\n GLIBCPP_CXXFLAGS = @GLIBCPP_CXXFLAGS@\n LIBMATHOBJS = @LIBMATHOBJS@"}, {"sha": "6bf94a19114c602b737f785678e48bba653f526a", "filename": "libstdc++-v3/testsuite/23_containers/vector_element_access.cc", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f133a43eab88b0093f16d966a3b2d1d0e45388e1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc?ref=f133a43eab88b0093f16d966a3b2d1d0e45388e1", "patch": "@@ -0,0 +1,71 @@\n+// 2000-09-06\n+// bkoz \n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 23.2.4 vector \n+\n+#include <vector>\n+#include <stdexcept>\n+#include <debug_assert.h>\n+\n+template<typename T>\n+struct A { };\n+\n+struct B { };\n+\n+// http://sources.redhat.com/ml/libstdc++/2000-09/msg00002.html\n+bool test01()\n+{\n+  bool test = true;\n+  std::vector< A<B> > vec01;\n+  std::vector< A<B> > vec02(5);\n+  typedef std::vector< A<B> >::size_type size_type;\n+  typedef std::vector< A<B> >::reference reference;\n+\n+  try\n+    { \n+      reference r01 = vec01.at(6); \n+      VERIFY( false ); // Should not get here, as exception thrown.\n+    }\n+  catch(std::out_of_range& err)\n+    {\n+      VERIFY( true );\n+    }\n+  catch(...)\n+    {\n+      VERIFY( false );\n+    }\n+\n+#ifdef DEBUG_ASSERT\n+  assert(test);\n+#endif\n+  \n+  return test;\n+}\n+\n+int main()\n+{\n+  test01();\n+\n+  return 0;\n+}\n+\n+\n+"}]}