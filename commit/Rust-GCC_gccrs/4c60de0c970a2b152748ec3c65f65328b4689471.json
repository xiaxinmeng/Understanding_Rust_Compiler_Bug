{"sha": "4c60de0c970a2b152748ec3c65f65328b4689471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2MGRlMGM5NzBhMmIxNTI3NDhlYzNjNjVmNjUzMjhiNDY4OTQ3MQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-08-02T13:46:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:46:38Z"}, "message": "errout.adb (First_Node): minor renaming\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* errout.adb (First_Node): minor renaming\n\t* restrict.adb (Check_Formal_Restriction): put restriction warning on\n\tfirst node.\n\nFrom-SVN: r177155", "tree": {"sha": "9a6536a6f1657333941661904bed92489a6d8938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a6536a6f1657333941661904bed92489a6d8938"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c60de0c970a2b152748ec3c65f65328b4689471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c60de0c970a2b152748ec3c65f65328b4689471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c60de0c970a2b152748ec3c65f65328b4689471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c60de0c970a2b152748ec3c65f65328b4689471/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5afb270e6dae6d56ddad1fb2b8661dffe03259c"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "1acadb7e970807f99690c4eabbaccfbf17e8eb83", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c60de0c970a2b152748ec3c65f65328b4689471/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c60de0c970a2b152748ec3c65f65328b4689471/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4c60de0c970a2b152748ec3c65f65328b4689471", "patch": "@@ -1,3 +1,9 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* errout.adb (First_Node): minor renaming\n+\t* restrict.adb (Check_Formal_Restriction): put restriction warning on\n+\tfirst node.\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* sem_res.adb (Resolve_Logical_Op): ensure N is a binary operator"}, {"sha": "169540ecdb97feb07c8a06db0dcd62e7f50a3f58", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c60de0c970a2b152748ec3c65f65328b4689471/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c60de0c970a2b152748ec3c65f65328b4689471/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=4c60de0c970a2b152748ec3c65f65328b4689471", "patch": "@@ -1307,9 +1307,9 @@ package body Errout is\n    ----------------\n \n    function First_Node (C : Node_Id) return Node_Id is\n-      L        : constant Source_Ptr        := Sloc (Original_Node (C));\n       Orig     : constant Node_Id           := Original_Node (C);\n-      Sfile    : constant Source_File_Index := Get_Source_File_Index (L);\n+      Loc      : constant Source_Ptr        := Sloc (Orig);\n+      Sfile    : constant Source_File_Index := Get_Source_File_Index (Loc);\n       Earliest : Node_Id;\n       Eloc     : Source_Ptr;\n \n@@ -1324,20 +1324,26 @@ package body Errout is\n       ------------------\n \n       function Test_Earlier (N : Node_Id) return Traverse_Result is\n-         Loc : constant Source_Ptr := Sloc (Original_Node (N));\n+         Norig : constant Node_Id    := Original_Node (N);\n+         Loc   : constant Source_Ptr := Sloc (Norig);\n \n       begin\n-         --  Check for earlier. The tests for being in the same file ensures\n-         --  against strange cases of foreign code somehow being present. We\n-         --  don't want wild placement of messages if that happens, so it is\n-         --  best to just ignore this situation.\n+         --  Check for earlier\n \n          if Loc < Eloc\n+\n+           --  Ignore nodes with no useful location information\n+\n            and then Loc /= Standard_Location\n            and then Loc /= No_Location\n+\n+           --  Ignore nodes from a different file. This ensures against cases\n+           --  of strange foreign code somehow being present. We don't want\n+           --  wild placement of messages if that happens.\n+\n            and then Get_Source_File_Index (Loc) = Sfile\n          then\n-            Earliest := Original_Node (N);\n+            Earliest := Norig;\n             Eloc     := Loc;\n          end if;\n \n@@ -1349,7 +1355,7 @@ package body Errout is\n    begin\n       if Nkind (Orig) in N_Subexpr then\n          Earliest := Orig;\n-         Eloc := Sloc (Earliest);\n+         Eloc := Loc;\n          Search_Tree_First (Orig);\n          return Earliest;\n "}, {"sha": "883128a7d62c8816db526579a5c23338a54c2849", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c60de0c970a2b152748ec3c65f65328b4689471/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c60de0c970a2b152748ec3c65f65328b4689471/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=4c60de0c970a2b152748ec3c65f65328b4689471", "patch": "@@ -123,18 +123,14 @@ package body Restrict is\n          --  Error_Msg_Sloc to the location of the pragma restriction, save and\n          --  restore the previous value of the global variable around the call.\n \n-         --  ??? N in call to Check_Restriction should be First_Node (N), but\n-         --  this causes an exception to be raised when analyzing osint.adb.\n-         --  To be modified together with the calls to Error_Msg_N.\n-\n          Save_Error_Msg_Sloc := Error_Msg_Sloc;\n-         Check_Restriction (Msg_Issued, SPARK, N);  --  N -> First_Node (N)\n+         Check_Restriction (Msg_Issued, SPARK, First_Node (N));\n          Error_Msg_Sloc := Save_Error_Msg_Sloc;\n \n          if Msg_Issued then\n-            Error_Msg_N (\"\\\\| \" & Msg, N);  --  Error_Msg_N -> Error_Msg_F\n+            Error_Msg_F (\"\\\\| \" & Msg, N);\n          elsif SPARK_Mode then\n-            Error_Msg_N (\"|~~\" & Msg, N);  --  Error_Msg_N -> Error_Msg_F\n+            Error_Msg_F (\"|~~\" & Msg, N);\n          end if;\n       end if;\n    end Check_Formal_Restriction;"}]}