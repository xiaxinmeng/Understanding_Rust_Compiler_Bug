{"sha": "2f41ec1a8fe5eab706ed223ab468de003d1995f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY0MWVjMWE4ZmU1ZWFiNzA2ZWQyMjNhYjQ2OGRlMDAzZDE5OTVmMA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-04-06T09:25:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:25:16Z"}, "message": "prj-ext.adb (Initialize_Project_Path): New procedure that initialize the default project path...\n\n2007-04-06  Vincent Celier  <celier@adacore.com>\n\n\t* prj-ext.adb (Initialize_Project_Path): New procedure that initialize\n\tthe default project path, initially done during elaboration of the\n\tpackage.\n\tIf the prefix returned by Sdefault is null, get the prefix from a call\n\tto Executable_Prefix_Path.\n\t(Project_Path): Call Initialize_Project_Path if Current_Project_Path is\n\tnull.\n\n\t* prj-nmsc.adb (Get_Path_Names_And_Record_Sources): Use the non\n\tcanonical directory name to open the directory from which files are\n\tretrieved.\n\t(Record_Other_Sources): Idem.\n\t(Locate_Directory): Add the possibility to create automatically missing\n\tdirectories when Setup_Projects is True.\n\tCall Locate_Directory so that the directory will be created when\n\tSetup_Projects is True, for object dir, library dir, library ALI dir,\n\tlibrary source copy dir and exec dir.\n\n\t* prj-pp.adb (Max_Line_Length): Set to 255 for compatibility with older\n\tversions of GNAT.\n\nFrom-SVN: r123589", "tree": {"sha": "47b104101e9f0a4d83635f8e134fc642ba236db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47b104101e9f0a4d83635f8e134fc642ba236db6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f41ec1a8fe5eab706ed223ab468de003d1995f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f41ec1a8fe5eab706ed223ab468de003d1995f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f41ec1a8fe5eab706ed223ab468de003d1995f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f41ec1a8fe5eab706ed223ab468de003d1995f0/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "874a0341c8306d74db689405040a4bc4f550085a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874a0341c8306d74db689405040a4bc4f550085a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874a0341c8306d74db689405040a4bc4f550085a"}], "stats": {"total": 466, "additions": 261, "deletions": 205}, "files": [{"sha": "f30c70936dd6aacfc5a3617250fb2ab5c81432ae", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 108, "deletions": 82, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f41ec1a8fe5eab706ed223ab468de003d1995f0/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f41ec1a8fe5eab706ed223ab468de003d1995f0/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=2f41ec1a8fe5eab706ed223ab468de003d1995f0", "patch": "@@ -25,6 +25,7 @@\n ------------------------------------------------------------------------------\n \n with Hostparm;\n+with Makeutl;  use Makeutl;\n with Namet;    use Namet;\n with Output;   use Output;\n with Osint;    use Osint;\n@@ -48,8 +49,11 @@ package body Prj.Ext is\n    No_Project_Default_Dir : constant String := \"-\";\n \n    Current_Project_Path : String_Access;\n-   --  The project path. Initialized during elaboration of package Contains at\n-   --  least the current working directory.\n+   --  The project path. Initialized by procedure Initialize_Project_Path\n+   --  below.\n+\n+   procedure Initialize_Project_Path;\n+   --  Initialize Current_Project_Path\n \n    package Htable is new GNAT.HTable.Simple_HTable\n      (Header_Num => Header_Num,\n@@ -107,81 +111,11 @@ package body Prj.Ext is\n       return False;\n    end Check;\n \n-   ------------------\n-   -- Project_Path --\n-   ------------------\n-\n-   function Project_Path return String is\n-   begin\n-      return Current_Project_Path.all;\n-   end Project_Path;\n-\n-   -----------\n-   -- Reset --\n-   -----------\n-\n-   procedure Reset is\n-   begin\n-      Htable.Reset;\n-   end Reset;\n-\n-   ----------------------\n-   -- Set_Project_Path --\n-   ----------------------\n-\n-   procedure Set_Project_Path (New_Path : String) is\n-   begin\n-      Free (Current_Project_Path);\n-      Current_Project_Path := new String'(New_Path);\n-   end Set_Project_Path;\n-\n-   --------------\n-   -- Value_Of --\n-   --------------\n-\n-   function Value_Of\n-     (External_Name : Name_Id;\n-      With_Default  : Name_Id := No_Name)\n-      return          Name_Id\n-   is\n-      The_Value : Name_Id;\n-      Name      : String := Get_Name_String (External_Name);\n-\n-   begin\n-      Canonical_Case_File_Name (Name);\n-      Name_Len := Name'Length;\n-      Name_Buffer (1 .. Name_Len) := Name;\n-      The_Value := Htable.Get (Name_Find);\n+   -----------------------------\n+   -- Initialize_Project_Path --\n+   -----------------------------\n \n-      if The_Value /= No_Name then\n-         return The_Value;\n-      end if;\n-\n-      --  Find if it is an environment, if it is, put value in the hash table\n-\n-      declare\n-         Env_Value : String_Access := Getenv (Name);\n-\n-      begin\n-         if Env_Value /= null and then Env_Value'Length > 0 then\n-            Name_Len := Env_Value'Length;\n-            Name_Buffer (1 .. Name_Len) := Env_Value.all;\n-            The_Value := Name_Find;\n-            Htable.Set (External_Name, The_Value);\n-            Free (Env_Value);\n-            return The_Value;\n-\n-         else\n-            Free (Env_Value);\n-            return With_Default;\n-         end if;\n-      end;\n-   end Value_Of;\n-\n-begin\n-   --  Initialize Current_Project_Path during package elaboration\n-\n-   declare\n+   procedure Initialize_Project_Path is\n       Add_Default_Dir : Boolean := True;\n       First           : Positive;\n       Last            : Positive;\n@@ -286,13 +220,105 @@ begin\n       --  Set the initial value of Current_Project_Path\n \n       if Add_Default_Dir then\n-         Current_Project_Path :=\n-           new String'(Name_Buffer (1 .. Name_Len) & Path_Separator &\n-                       Sdefault.Search_Dir_Prefix.all & \"..\" &\n-                       Directory_Separator & \"..\" & Directory_Separator &\n-                       \"..\" & Directory_Separator & \"gnat\");\n+         declare\n+            Prefix : String_Ptr := Sdefault.Search_Dir_Prefix;\n+         begin\n+            if Prefix = null then\n+               Prefix := new String'(Executable_Prefix_Path);\n+\n+               if Prefix.all /= \"\" then\n+                  Current_Project_Path :=\n+                    new String'(Name_Buffer (1 .. Name_Len) & Path_Separator &\n+                                Prefix.all & Directory_Separator & \"gnat\");\n+               end if;\n+\n+            else\n+               Current_Project_Path :=\n+                 new String'(Name_Buffer (1 .. Name_Len) & Path_Separator &\n+                             Prefix.all &\n+                             \"..\" &  Directory_Separator &\n+                             \"..\" & Directory_Separator &\n+                             \"..\" & Directory_Separator & \"gnat\");\n+            end if;\n+         end;\n       else\n          Current_Project_Path := new String'(Name_Buffer (1 .. Name_Len));\n       end if;\n-   end;\n+   end Initialize_Project_Path;\n+\n+   ------------------\n+   -- Project_Path --\n+   ------------------\n+\n+   function Project_Path return String is\n+   begin\n+      if Current_Project_Path = null then\n+         Initialize_Project_Path;\n+      end if;\n+\n+      return Current_Project_Path.all;\n+   end Project_Path;\n+\n+   -----------\n+   -- Reset --\n+   -----------\n+\n+   procedure Reset is\n+   begin\n+      Htable.Reset;\n+   end Reset;\n+\n+   ----------------------\n+   -- Set_Project_Path --\n+   ----------------------\n+\n+   procedure Set_Project_Path (New_Path : String) is\n+   begin\n+      Free (Current_Project_Path);\n+      Current_Project_Path := new String'(New_Path);\n+   end Set_Project_Path;\n+\n+   --------------\n+   -- Value_Of --\n+   --------------\n+\n+   function Value_Of\n+     (External_Name : Name_Id;\n+      With_Default  : Name_Id := No_Name)\n+      return          Name_Id\n+   is\n+      The_Value : Name_Id;\n+      Name      : String := Get_Name_String (External_Name);\n+\n+   begin\n+      Canonical_Case_File_Name (Name);\n+      Name_Len := Name'Length;\n+      Name_Buffer (1 .. Name_Len) := Name;\n+      The_Value := Htable.Get (Name_Find);\n+\n+      if The_Value /= No_Name then\n+         return The_Value;\n+      end if;\n+\n+      --  Find if it is an environment, if it is, put value in the hash table\n+\n+      declare\n+         Env_Value : String_Access := Getenv (Name);\n+\n+      begin\n+         if Env_Value /= null and then Env_Value'Length > 0 then\n+            Name_Len := Env_Value'Length;\n+            Name_Buffer (1 .. Name_Len) := Env_Value.all;\n+            The_Value := Name_Find;\n+            Htable.Set (External_Name, The_Value);\n+            Free (Env_Value);\n+            return The_Value;\n+\n+         else\n+            Free (Env_Value);\n+            return With_Default;\n+         end if;\n+      end;\n+   end Value_Of;\n+\n end Prj.Ext;"}, {"sha": "e5ae184cdb0ab0f835b1642e1c7c4a31546f6915", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 149, "deletions": 119, "changes": 268, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f41ec1a8fe5eab706ed223ab468de003d1995f0/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f41ec1a8fe5eab706ed223ab468de003d1995f0/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=2f41ec1a8fe5eab706ed223ab468de003d1995f0", "patch": "@@ -29,6 +29,7 @@ with Fmap;     use Fmap;\n with Hostparm;\n with MLib.Tgt; use MLib.Tgt;\n with Namet;    use Namet;\n+with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Env;  use Prj.Env;\n@@ -40,6 +41,7 @@ with Table;    use Table;\n with Targparm; use Targparm;\n \n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n+with Ada.Directories;            use Ada.Directories;\n with Ada.Strings;                use Ada.Strings;\n with Ada.Strings.Fixed;          use Ada.Strings.Fixed;\n with Ada.Strings.Maps.Constants; use Ada.Strings.Maps.Constants;\n@@ -295,22 +297,30 @@ package body Prj.Nmsc is\n    --  a spec suffix, a body suffix or a separate suffix.\n \n    procedure Locate_Directory\n-     (Name    : Name_Id;\n-      Parent  : Name_Id;\n-      Dir     : out Name_Id;\n-      Display : out Name_Id);\n-   --  Locate a directory (returns No_Name for Dir and Display if directory\n-   --  does not exist). Name is the directory name. Parent is the root\n-   --  directory, if Name is a relative path name. Dir is the canonical case\n-   --  path name of the directory, Display is the directory path name for\n-   --  display purposes.\n+     (Project  : Project_Id;\n+      In_Tree  : Project_Tree_Ref;\n+      Name     : Name_Id;\n+      Parent   : Name_Id;\n+      Dir      : out Name_Id;\n+      Display  : out Name_Id;\n+      Create   : String := \"\";\n+      Location : Source_Ptr := No_Location);\n+   --  Locate a directory. Name is the directory name. Parent is the root\n+   --  directory, if Name a relative path name. Dir is set to the canonical\n+   --  case path name of the directory, and Display is the directory path name\n+   --  for display purposes. If the directory does not exist and Project_Setup\n+   --  is True and Create is a non null string, an attempt is made to create\n+   --  the directory. If the directory does not exist and Project_Setup is\n+   --  false, then Dir and Display are set to No_Name.\n \n    procedure Look_For_Sources\n      (Project      : Project_Id;\n       In_Tree      : Project_Tree_Ref;\n       Data         : in out Project_Data;\n       Follow_Links : Boolean);\n-   --  Find all the sources of a project\n+   --  Find all the sources of project Project in project tree In_Tree and\n+   --  update its Data accordingly. Resolve symbolic links in the path names\n+   --  if Follow_Links is True.\n \n    function Path_Name_Of\n      (File_Name : Name_Id;\n@@ -634,21 +644,21 @@ package body Prj.Nmsc is\n \n       if Naming /= In_Tree.Private_Part.Default_Naming then\n          declare\n-            Dot_Replacement       : constant String :=\n-                                     Get_Name_String\n-                                       (Naming.Dot_Replacement);\n+            Dot_Replacement : constant String :=\n+                                Get_Name_String\n+                                  (Naming.Dot_Replacement);\n \n-            Spec_Suffix : constant String :=\n-                                     Get_Name_String\n-                                       (Naming.Ada_Spec_Suffix);\n+            Spec_Suffix     : constant String :=\n+                                Get_Name_String\n+                                  (Naming.Ada_Spec_Suffix);\n \n-            Body_Suffix : constant String :=\n-                                     Get_Name_String\n-                                       (Naming.Ada_Body_Suffix);\n+            Body_Suffix     : constant String :=\n+                                Get_Name_String\n+                                  (Naming.Ada_Body_Suffix);\n \n-            Separate_Suffix       : constant String :=\n-                                     Get_Name_String\n-                                       (Naming.Separate_Suffix);\n+            Separate_Suffix : constant String :=\n+                                Get_Name_String\n+                                  (Naming.Separate_Suffix);\n \n          begin\n             --  Dot_Replacement cannot\n@@ -771,7 +781,7 @@ package body Prj.Nmsc is\n       Suffix           : String;\n       Naming_Exception : Boolean)\n    is\n-      Name : String := Get_Name_String (File_Name);\n+      Name          : String := Get_Name_String (File_Name);\n       Real_Location : Source_Ptr := Location;\n \n    begin\n@@ -1401,23 +1411,23 @@ package body Prj.Nmsc is\n       In_Tree : Project_Tree_Ref;\n       Data    : in out Project_Data)\n    is\n-      Attributes : constant Prj.Variable_Id := Data.Decl.Attributes;\n+      Attributes   : constant Prj.Variable_Id := Data.Decl.Attributes;\n \n-      Lib_Dir : constant Prj.Variable_Value :=\n-                  Prj.Util.Value_Of\n-                    (Snames.Name_Library_Dir, Attributes, In_Tree);\n+      Lib_Dir      : constant Prj.Variable_Value :=\n+                       Prj.Util.Value_Of\n+                         (Snames.Name_Library_Dir, Attributes, In_Tree);\n \n-      Lib_Name : constant Prj.Variable_Value :=\n-                   Prj.Util.Value_Of\n-                     (Snames.Name_Library_Name, Attributes, In_Tree);\n+      Lib_Name     : constant Prj.Variable_Value :=\n+                       Prj.Util.Value_Of\n+                         (Snames.Name_Library_Name, Attributes, In_Tree);\n \n-      Lib_Version : constant Prj.Variable_Value :=\n-                      Prj.Util.Value_Of\n-                        (Snames.Name_Library_Version, Attributes, In_Tree);\n+      Lib_Version  : constant Prj.Variable_Value :=\n+                       Prj.Util.Value_Of\n+                         (Snames.Name_Library_Version, Attributes, In_Tree);\n \n-      Lib_ALI_Dir : constant Prj.Variable_Value :=\n-                      Prj.Util.Value_Of\n-                        (Snames.Name_Library_Ali_Dir, Attributes, In_Tree);\n+      Lib_ALI_Dir  : constant Prj.Variable_Value :=\n+                       Prj.Util.Value_Of\n+                         (Snames.Name_Library_Ali_Dir, Attributes, In_Tree);\n \n       The_Lib_Kind : constant Prj.Variable_Value :=\n                        Prj.Util.Value_Of\n@@ -1469,8 +1479,9 @@ package body Prj.Nmsc is\n          --  Find path name, check that it is a directory\n \n          Locate_Directory\n-           (Lib_Dir.Value, Data.Display_Directory,\n-            Data.Library_Dir, Data.Display_Library_Dir);\n+           (Project, In_Tree, Lib_Dir.Value, Data.Display_Directory,\n+            Data.Library_Dir, Data.Display_Library_Dir, Create => \"library\",\n+            Location => Lib_Dir.Location);\n \n          if Data.Library_Dir = No_Name then\n \n@@ -1641,8 +1652,9 @@ package body Prj.Nmsc is\n                --  Find path name, check that it is a directory\n \n                Locate_Directory\n-                 (Lib_ALI_Dir.Value, Data.Display_Directory,\n-                  Data.Library_ALI_Dir, Data.Display_Library_ALI_Dir);\n+                 (Project, In_Tree, Lib_ALI_Dir.Value, Data.Display_Directory,\n+                  Data.Library_ALI_Dir, Data.Display_Library_ALI_Dir,\n+                  Create => \"library ALI\", Location => Lib_ALI_Dir.Location);\n \n                if Data.Library_ALI_Dir = No_Name then\n \n@@ -1865,7 +1877,7 @@ package body Prj.Nmsc is\n       Naming_Id : constant Package_Id :=\n                     Util.Value_Of (Name_Naming, Data.Decl.Packages, In_Tree);\n \n-      Naming : Package_Element;\n+      Naming    : Package_Element;\n \n    begin\n       --  If there is a package Naming, we will put in Data.Naming\n@@ -2468,9 +2480,11 @@ package body Prj.Nmsc is\n \n             begin\n                Locate_Directory\n-                 (Dir_Id, Data.Display_Directory,\n+                 (Project, In_Tree, Dir_Id, Data.Display_Directory,\n                   Data.Library_Src_Dir,\n-                  Data.Display_Library_Src_Dir);\n+                  Data.Display_Library_Src_Dir,\n+                  Create => \"library source copy\",\n+                  Location => Lib_Src_Dir.Location);\n \n                --  If directory does not exist, report an error\n \n@@ -2819,10 +2833,10 @@ package body Prj.Nmsc is\n       Flag_Location : Source_Ptr)\n    is\n       Real_Location : Source_Ptr := Flag_Location;\n-      Error_Buffer : String (1 .. 5_000);\n-      Error_Last   : Natural := 0;\n-      Msg_Name     : Natural := 0;\n-      First        : Positive := Msg'First;\n+      Error_Buffer  : String (1 .. 5_000);\n+      Error_Last    : Natural := 0;\n+      Msg_Name      : Natural := 0;\n+      First         : Positive := Msg'First;\n \n       procedure Add (C : Character);\n       --  Add a character to the buffer\n@@ -3081,13 +3095,13 @@ package body Prj.Nmsc is\n       In_Tree : Project_Tree_Ref;\n       Data    : in out Project_Data)\n    is\n-      Object_Dir : constant Variable_Value :=\n-                     Util.Value_Of\n-                       (Name_Object_Dir, Data.Decl.Attributes, In_Tree);\n+      Object_Dir  : constant Variable_Value :=\n+                      Util.Value_Of\n+                        (Name_Object_Dir, Data.Decl.Attributes, In_Tree);\n \n-      Exec_Dir   : constant Variable_Value :=\n-                     Util.Value_Of\n-                       (Name_Exec_Dir, Data.Decl.Attributes, In_Tree);\n+      Exec_Dir    : constant Variable_Value :=\n+                      Util.Value_Of\n+                        (Name_Exec_Dir, Data.Decl.Attributes, In_Tree);\n \n       Source_Dirs : constant Variable_Value :=\n                       Util.Value_Of\n@@ -3354,7 +3368,9 @@ package body Prj.Nmsc is\n \n             begin\n                Locate_Directory\n-                 (From, Data.Display_Directory, Path_Name, Display_Path_Name);\n+                 (Project, In_Tree,\n+                  From, Data.Display_Directory,\n+                  Path_Name, Display_Path_Name);\n \n                if Path_Name = No_Name then\n                   Err_Vars.Error_Msg_Name_1 := From;\n@@ -3438,8 +3454,9 @@ package body Prj.Nmsc is\n             --  We check that the specified object directory does exist\n \n             Locate_Directory\n-              (Object_Dir.Value, Data.Display_Directory,\n-               Data.Object_Directory, Data.Display_Object_Dir);\n+              (Project, In_Tree, Object_Dir.Value, Data.Display_Directory,\n+               Data.Object_Directory, Data.Display_Object_Dir,\n+               Create => \"object\", Location => Object_Dir.Location);\n \n             if Data.Object_Directory = No_Name then\n \n@@ -3498,8 +3515,9 @@ package body Prj.Nmsc is\n             --  does exist.\n \n             Locate_Directory\n-              (Exec_Dir.Value, Data.Directory,\n-               Data.Exec_Directory, Data.Display_Exec_Dir);\n+              (Project, In_Tree, Exec_Dir.Value, Data.Directory,\n+               Data.Exec_Directory, Data.Display_Exec_Dir,\n+               Create => \"exec\", Location => Exec_Dir.Location);\n \n             if Data.Exec_Directory = No_Name then\n                Err_Vars.Error_Msg_Name_1 := Exec_Dir.Value;\n@@ -3619,7 +3637,8 @@ package body Prj.Nmsc is\n    procedure Get_Mains\n      (Project : Project_Id;\n       In_Tree : Project_Tree_Ref;\n-      Data    : in out Project_Data) is\n+      Data    : in out Project_Data)\n+   is\n       Mains : constant Variable_Value :=\n                 Prj.Util.Value_Of (Name_Main, Data.Decl.Attributes, In_Tree);\n \n@@ -3718,8 +3737,8 @@ package body Prj.Nmsc is\n       Unit_Kind           : out Spec_Or_Body;\n       Needs_Pragma        : out Boolean)\n    is\n-      Info_Id  : Ada_Naming_Exception_Id\n-        := Ada_Naming_Exceptions.Get (Canonical_File_Name);\n+      Info_Id  : Ada_Naming_Exception_Id :=\n+                   Ada_Naming_Exceptions.Get (Canonical_File_Name);\n       VMS_Name : Name_Id;\n \n    begin\n@@ -4035,18 +4054,24 @@ package body Prj.Nmsc is\n    ----------------------\n \n    procedure Locate_Directory\n-     (Name    : Name_Id;\n-      Parent  : Name_Id;\n-      Dir     : out Name_Id;\n-      Display : out Name_Id)\n+     (Project  : Project_Id;\n+      In_Tree  : Project_Tree_Ref;\n+      Name     : Name_Id;\n+      Parent   : Name_Id;\n+      Dir      : out Name_Id;\n+      Display  : out Name_Id;\n+      Create   : String := \"\";\n+      Location : Source_Ptr := No_Location)\n    is\n-      The_Name   : constant String := Get_Name_String (Name);\n+      The_Name        : constant String := Get_Name_String (Name);\n \n-      The_Parent : constant String :=\n-                     Get_Name_String (Parent) & Directory_Separator;\n+      The_Parent      : constant String :=\n+                          Get_Name_String (Parent) & Directory_Separator;\n \n       The_Parent_Last : constant Natural :=\n-                     Compute_Directory_Last (The_Parent);\n+                          Compute_Directory_Last (The_Parent);\n+\n+      Full_Name       : Name_Id;\n \n    begin\n       if Current_Verbosity = High then\n@@ -4061,11 +4086,47 @@ package body Prj.Nmsc is\n       Display := No_Name;\n \n       if Is_Absolute_Path (The_Name) then\n-         if Is_Directory (The_Name) then\n+         Full_Name := Name;\n+\n+      else\n+         Name_Len := 0;\n+         Add_Str_To_Name_Buffer\n+           (The_Parent (The_Parent'First .. The_Parent_Last));\n+         Add_Str_To_Name_Buffer (The_Name);\n+         Full_Name := Name_Find;\n+      end if;\n+\n+      declare\n+         Full_Path_Name : constant String := Get_Name_String (Full_Name);\n+\n+      begin\n+         if Setup_Projects and then Create'Length > 0\n+           and then not Is_Directory (Full_Path_Name)\n+         then\n+            begin\n+               Create_Path (Full_Path_Name);\n+\n+               if not Quiet_Output then\n+                  Write_Str (Create);\n+                  Write_Str (\" directory \"\"\");\n+                  Write_Str (Full_Path_Name);\n+                  Write_Line (\"\"\" created\");\n+               end if;\n+\n+            exception\n+               when Use_Error =>\n+                  Error_Msg\n+                    (Project, In_Tree,\n+                     \"could not create \" & Create &\n+                     \" directory \" & Full_Path_Name,\n+                     Location);\n+            end;\n+         end if;\n+         if Is_Directory (Full_Path_Name) then\n             declare\n                Normed : constant String :=\n                           Normalize_Pathname\n-                            (The_Name,\n+                            (Full_Path_Name,\n                              Resolve_Links  => False,\n                              Case_Sensitive => True);\n \n@@ -4085,40 +4146,7 @@ package body Prj.Nmsc is\n                Dir := Name_Find;\n             end;\n          end if;\n-\n-      else\n-         declare\n-            Full_Path : constant String :=\n-                          The_Parent (The_Parent'First .. The_Parent_Last) &\n-                          The_Name;\n-\n-         begin\n-            if Is_Directory (Full_Path) then\n-               declare\n-                  Normed : constant String :=\n-                             Normalize_Pathname\n-                               (Full_Path,\n-                                Resolve_Links  => False,\n-                                Case_Sensitive => True);\n-\n-                  Canonical_Path : constant String :=\n-                                     Normalize_Pathname\n-                                       (Normed,\n-                                        Resolve_Links  => True,\n-                                        Case_Sensitive => False);\n-\n-               begin\n-                  Name_Len := Normed'Length;\n-                  Name_Buffer (1 .. Name_Len) := Normed;\n-                  Display := Name_Find;\n-\n-                  Name_Len := Canonical_Path'Length;\n-                  Name_Buffer (1 .. Name_Len) := Canonical_Path;\n-                  Dir := Name_Find;\n-               end;\n-            end if;\n-         end;\n-      end if;\n+      end;\n    end Locate_Directory;\n \n    ----------------------\n@@ -4149,16 +4177,16 @@ package body Prj.Nmsc is\n          Element    : String_Element;\n          Path       : Name_Id;\n \n-         Dir      : Dir_Type;\n-         Name     : Name_Id;\n-         Canonical_Name : Name_Id;\n-         Name_Str : String (1 .. 1_024);\n-         Last     : Natural := 0;\n-         NL       : Name_Location;\n+         Dir             : Dir_Type;\n+         Name            : Name_Id;\n+         Canonical_Name  : Name_Id;\n+         Name_Str        : String (1 .. 1_024);\n+         Last            : Natural := 0;\n+         NL              : Name_Location;\n \n-         Current_Source : String_List_Id := Nil_String;\n+         Current_Source  : String_List_Id := Nil_String;\n \n-         First_Error : Boolean := True;\n+         First_Error     : Boolean := True;\n \n          Source_Recorded : Boolean := False;\n \n@@ -4171,7 +4199,8 @@ package body Prj.Nmsc is\n             Element := In_Tree.String_Elements.Table (Source_Dir);\n \n             declare\n-               Dir_Path : constant String := Get_Name_String (Element.Value);\n+               Dir_Path : constant String :=\n+                            Get_Name_String (Element.Display_Value);\n             begin\n                if Current_Verbosity = High then\n                   Write_Str (\"checking directory \"\"\");\n@@ -4184,13 +4213,15 @@ package body Prj.Nmsc is\n                loop\n                   Read (Dir, Name_Str, Last);\n                   exit when Last = 0;\n+\n                   Name_Len := Last;\n                   Name_Buffer (1 .. Name_Len) := Name_Str (1 .. Last);\n                   Name := Name_Find;\n+\n                   Canonical_Case_File_Name (Name_Str (1 .. Last));\n-                  Name_Len := Last;\n                   Name_Buffer (1 .. Name_Len) := Name_Str (1 .. Last);\n                   Canonical_Name := Name_Find;\n+\n                   NL := Source_Names.Get (Canonical_Name);\n \n                   if NL /= No_Name_Location and then not NL.Found then\n@@ -4822,8 +4853,7 @@ package body Prj.Nmsc is\n    is\n       Current : Array_Element_Id := List;\n       Element : Array_Element;\n-\n-      Unit : Unit_Info;\n+      Unit    : Unit_Info;\n \n    begin\n       --  Traverse the list\n@@ -5194,8 +5224,8 @@ package body Prj.Nmsc is\n          Element := In_Tree.String_Elements.Table (Source_Dir);\n \n          declare\n-            Dir_Path : constant String := Get_Name_String (Element.Value);\n-\n+            Dir_Path : constant String :=\n+                         Get_Name_String (Element.Display_Value);\n          begin\n             if Current_Verbosity = High then\n                Write_Str (\"checking directory \"\"\");"}, {"sha": "d20e642d7acb5b4bc96f693ac8eaf54fcea77c8a", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f41ec1a8fe5eab706ed223ab468de003d1995f0/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f41ec1a8fe5eab706ed223ab468de003d1995f0/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=2f41ec1a8fe5eab706ed223ab468de003d1995f0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,7 +26,6 @@\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n \n-with Hostparm;\n with Namet;    use Namet;\n with Output;   use Output;\n with Snames;\n@@ -37,8 +36,9 @@ package body Prj.PP is\n \n    Not_Tested : array (Project_Node_Kind) of Boolean := (others => True);\n \n-   Max_Line_Length : constant := Hostparm.Max_Line_Length - 5;\n-   --  Maximum length of a line\n+   Max_Line_Length : constant := 255;\n+   --  Maximum length of a line. This is chosen to be compatible with older\n+   --  versions of GNAT that had a strict limit on the maximum line length.\n \n    Column : Natural := 0;\n    --  Column number of the last character in the line. Used to avoid"}]}