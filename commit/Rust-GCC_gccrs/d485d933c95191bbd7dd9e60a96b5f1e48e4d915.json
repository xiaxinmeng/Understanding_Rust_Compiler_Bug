{"sha": "d485d933c95191bbd7dd9e60a96b5f1e48e4d915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4NWQ5MzNjOTUxOTFiYmQ3ZGQ5ZTYwYTk2YjVmMWU0OGU0ZDkxNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-09-27T13:09:19Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-27T13:09:19Z"}, "message": "URL.java (getURLStreamHandler): Compile fixes.\n\n2003-09-27  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/URL.java (getURLStreamHandler): Compile fixes.\n\nFrom-SVN: r71853", "tree": {"sha": "2ec68ef0bde1be344e57e2ef8d0237980489829a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ec68ef0bde1be344e57e2ef8d0237980489829a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d485d933c95191bbd7dd9e60a96b5f1e48e4d915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d485d933c95191bbd7dd9e60a96b5f1e48e4d915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d485d933c95191bbd7dd9e60a96b5f1e48e4d915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d485d933c95191bbd7dd9e60a96b5f1e48e4d915/comments", "author": null, "committer": null, "parents": [{"sha": "4ada1976c90d133790ae647ef649b4aab7d2b487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ada1976c90d133790ae647ef649b4aab7d2b487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ada1976c90d133790ae647ef649b4aab7d2b487"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "88c212ad430973a95075e027eb7c1480b9e59762", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d485d933c95191bbd7dd9e60a96b5f1e48e4d915/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d485d933c95191bbd7dd9e60a96b5f1e48e4d915/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d485d933c95191bbd7dd9e60a96b5f1e48e4d915", "patch": "@@ -1,3 +1,7 @@\n+2003-09-27  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/URL.java (getURLStreamHandler): Compile fixes.\n+\n 2003-09-27  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/URL.java (getURLStreamHandler):"}, {"sha": "0713c49a2c039591ee982b932ea6df439b645d26", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d485d933c95191bbd7dd9e60a96b5f1e48e4d915/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d485d933c95191bbd7dd9e60a96b5f1e48e4d915/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=d485d933c95191bbd7dd9e60a96b5f1e48e4d915", "patch": "@@ -106,6 +106,11 @@\n   * caching behavior is disabled.  This property is specific to this\n   * implementation.  Sun's JDK may or may not do protocol caching, but it\n   * almost certainly does not examine this property.\n+  * <p>\n+  * Please also note that an application can install its own factory for\n+  * loading protocol handlers (see setURLStreamHandlerFactory).  If this is\n+  * done, then the above information is superseded and the behavior of this\n+  * class in loading protocol handlers is dependent on that factory.\n   *\n   * @author Aaron M. Renn <arenn@urbanophile.com>\n   * @author Warren Levy <warrenl@cygnus.com>\n@@ -751,7 +756,7 @@ public String toString()\n   private static synchronized URLStreamHandler\n     getURLStreamHandler (String protocol)\n   {\n-    URLStreamHandler ph;\n+    URLStreamHandler ph = null;\n \n     // First, see if a protocol handler is in our cache.\n     if (cache_handlers)\n@@ -797,7 +802,7 @@ else if (protocol.equals (\"file\"))\n \tpropVal = propVal + \"gnu.gcj.protocol|sun.net.www.protocol\";\n \n \t// Finally loop through our search path looking for a match.\n-\tStringTokenizer pkgPrefix = new StringTokenizer (ph_search_path, \"|\");\n+\tStringTokenizer pkgPrefix = new StringTokenizer (propVal, \"|\");\n         \n \tdo\n           {"}]}