{"sha": "f7ee6a1e8ac62950dd32874bf75e748a2895d595", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdlZTZhMWU4YWM2Mjk1MGRkMzI4NzRiZjc1ZTc0OGEyODk1ZDU5NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-04-28T08:41:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-04-28T10:03:49Z"}, "message": "tree-optimization/100292 - avoid invalid GIMPLE from vector lowering\n\nWe have to avoid folding the condition when building a COND_EXPR\nsince we no longer gimplify the whole thing.  The folding done\nat COND_EXPR build time will deal with possible simplifications.\n\n2021-04-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/100292\n\t* tree-vect-generic.c (expand_vector_condition): Do not fold\n\tthe comparisons.\n\n\t* gcc.dg/pr100292.c: New testcase.", "tree": {"sha": "aaf3072b3e68b2574027e52d392f86bcdf21ff03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaf3072b3e68b2574027e52d392f86bcdf21ff03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7ee6a1e8ac62950dd32874bf75e748a2895d595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ee6a1e8ac62950dd32874bf75e748a2895d595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7ee6a1e8ac62950dd32874bf75e748a2895d595", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ee6a1e8ac62950dd32874bf75e748a2895d595/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9d670128f6e6b3631a2db575ddf6f19fa43afdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9d670128f6e6b3631a2db575ddf6f19fa43afdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9d670128f6e6b3631a2db575ddf6f19fa43afdc"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "675a60c341289b6608b04a4f45bb79cb571d141f", "filename": "gcc/testsuite/gcc.dg/pr100292.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ee6a1e8ac62950dd32874bf75e748a2895d595/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100292.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ee6a1e8ac62950dd32874bf75e748a2895d595/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100292.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100292.c?ref=f7ee6a1e8ac62950dd32874bf75e748a2895d595", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+\n+typedef unsigned char __attribute__((__vector_size__ (4))) V;\n+\n+extern void bar (V v);\n+\n+void\n+foo (char c)\n+{\n+  bar (c <= (V) 127);\n+}"}, {"sha": "d9c0ac9de7e3c2c70ae6e45760bc6b3476d5a252", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ee6a1e8ac62950dd32874bf75e748a2895d595/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ee6a1e8ac62950dd32874bf75e748a2895d595/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=f7ee6a1e8ac62950dd32874bf75e748a2895d595", "patch": "@@ -1116,15 +1116,15 @@ expand_vector_condition (gimple_stmt_iterator *gsi, bitmap dce_ssa_names)\n \t\t\t\t       comp_width, comp_index);\n \t  tree aa2 = tree_vec_extract (gsi, comp_inner_type, a2,\n \t\t\t\t       comp_width, comp_index);\n-\t  aa = fold_build2 (code, cond_type, aa1, aa2);\n+\t  aa = build2 (code, cond_type, aa1, aa2);\n \t}\n       else if (a_is_scalar_bitmask)\n \t{\n \t  wide_int w = wi::set_bit_in_zero (i, TYPE_PRECISION (TREE_TYPE (a)));\n \t  result = gimplify_build2 (gsi, BIT_AND_EXPR, TREE_TYPE (a),\n \t\t\t\t    a, wide_int_to_tree (TREE_TYPE (a), w));\n-\t  aa = fold_build2 (NE_EXPR, boolean_type_node, result,\n-\t\t\t    build_zero_cst (TREE_TYPE (a)));\n+\t  aa = build2 (NE_EXPR, boolean_type_node, result,\n+\t\t       build_zero_cst (TREE_TYPE (a)));\n \t}\n       else\n \taa = tree_vec_extract (gsi, cond_type, a, width, index);"}]}