{"sha": "9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJjY2ZkZjUyMWY4MzQ3OTQ0ZDliZjZmNGU4OTc4ZWVhNDM4NWNlNA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2015-01-03T22:50:48Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2015-01-03T22:50:48Z"}, "message": "Bug #63539\n\n2015-01-03  Andrew Pinski  <apinski@cavium.com>\n\n\tBug #63539\n        * Makefile.def (flags_to_pass): Pass OBJCOPY_FOR_TARGET also.\n        * Makefile.tpl (HOST_EXPORTS): Add OBJCOPY_FOR_TARGET.\n        (BASE_TARGET_EXPORTS): Add OBJCOPY.\n        (OBJCOPY_FOR_TARGET): New variable.\n        (EXTRA_TARGET_FLAGS): Add OBJCOPY.\n        * Makefile.in: Regenerate.\n        * configure.ac: Check for already installed target objcopy.\n        Also GCC_TARGET_TOOL on objcopy.\n        * configure: Regenerate.\n\nFrom-SVN: r219165", "tree": {"sha": "0bf57b481d27563c3fa7c0d3ef0ec77294b4a809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bf57b481d27563c3fa7c0d3ef0ec77294b4a809"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1a77fb6ec69a30bb1a87555044d0ccadd964c6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a77fb6ec69a30bb1a87555044d0ccadd964c6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a77fb6ec69a30bb1a87555044d0ccadd964c6b"}], "stats": {"total": 300, "additions": 300, "deletions": 0}, "files": [{"sha": "966509e30ed43b3344b4ef8e3400f6f98dc44dca", "filename": "ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "patch": "@@ -1,3 +1,15 @@\n+2015-01-03  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* Makefile.def (flags_to_pass): Pass OBJCOPY_FOR_TARGET also.\n+\t* Makefile.tpl (HOST_EXPORTS): Add OBJCOPY_FOR_TARGET.\n+\t(BASE_TARGET_EXPORTS): Add OBJCOPY.\n+\t(OBJCOPY_FOR_TARGET): New variable.\n+\t(EXTRA_TARGET_FLAGS): Add OBJCOPY.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac: Check for already installed target objcopy.\n+\tAlso GCC_TARGET_TOOL on objcopy.\n+\t* configure: Regenerate.\n+\n 2015-01-02  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config.sub: Update from upstream, to 2015-01-01 version."}, {"sha": "ffab4095b983527c0af9258801847e8f5316e875", "filename": "Makefile.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "patch": "@@ -282,6 +282,7 @@ flags_to_pass = { flag= LIBCFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= LIBCXXFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= NM_FOR_TARGET ; };\n flags_to_pass = { flag= OBJDUMP_FOR_TARGET ; };\n+flags_to_pass = { flag= OBJCOPY_FOR_TARGET ; };\n flags_to_pass = { flag= RANLIB_FOR_TARGET ; };\n flags_to_pass = { flag= READELF_FOR_TARGET ; };\n flags_to_pass = { flag= STRIP_FOR_TARGET ; };"}, {"sha": "7355bf1fae2d15818dc5c73e09f425e7e8e213c1", "filename": "Makefile.in", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "patch": "@@ -213,6 +213,7 @@ HOST_EXPORTS = \\\n \tLD_FOR_TARGET=\"$(LD_FOR_TARGET)\"; export LD_FOR_TARGET; \\\n \tNM_FOR_TARGET=\"$(NM_FOR_TARGET)\"; export NM_FOR_TARGET; \\\n \tOBJDUMP_FOR_TARGET=\"$(OBJDUMP_FOR_TARGET)\"; export OBJDUMP_FOR_TARGET; \\\n+\tOBJCOPY_FOR_TARGET=\"$(OBJCOPY_FOR_TARGET)\"; export OBJCOPY_FOR_TARGET; \\\n \tRANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\"; export RANLIB_FOR_TARGET; \\\n \tREADELF_FOR_TARGET=\"$(READELF_FOR_TARGET)\"; export READELF_FOR_TARGET; \\\n \tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n@@ -285,6 +286,7 @@ BASE_TARGET_EXPORTS = \\\n \tLIPO=\"$(LIPO_FOR_TARGET)\"; export LIPO; \\\n \tNM=\"$(COMPILER_NM_FOR_TARGET)\"; export NM; \\\n \tOBJDUMP=\"$(OBJDUMP_FOR_TARGET)\"; export OBJDUMP; \\\n+\tOBJCOPY=\"$(OBJCOPY_FOR_TARGET)\"; export OBJCOPY; \\\n \tRANLIB=\"$(RANLIB_FOR_TARGET)\"; export RANLIB; \\\n \tREADELF=\"$(READELF_FOR_TARGET)\"; export READELF; \\\n \tSTRIP=\"$(STRIP_FOR_TARGET)\"; export STRIP; \\\n@@ -533,6 +535,7 @@ LD_FOR_TARGET=@LD_FOR_TARGET@\n LIPO_FOR_TARGET=@LIPO_FOR_TARGET@\n NM_FOR_TARGET=@NM_FOR_TARGET@\n OBJDUMP_FOR_TARGET=@OBJDUMP_FOR_TARGET@\n+OBJCOPY_FOR_TARGET=@OBJCOPY_FOR_TARGET@\n RANLIB_FOR_TARGET=@RANLIB_FOR_TARGET@\n READELF_FOR_TARGET=@READELF_FOR_TARGET@\n STRIP_FOR_TARGET=@STRIP_FOR_TARGET@\n@@ -751,6 +754,7 @@ BASE_FLAGS_TO_PASS = \\\n \t\"LIBCXXFLAGS_FOR_TARGET=$(LIBCXXFLAGS_FOR_TARGET)\" \\\n \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n \t\"OBJDUMP_FOR_TARGET=$(OBJDUMP_FOR_TARGET)\" \\\n+\t\"OBJCOPY_FOR_TARGET=$(OBJCOPY_FOR_TARGET)\" \\\n \t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n \t\"READELF_FOR_TARGET=$(READELF_FOR_TARGET)\" \\\n \t\"STRIP_FOR_TARGET=$(STRIP_FOR_TARGET)\" \\\n@@ -850,6 +854,7 @@ EXTRA_TARGET_FLAGS = \\\n \t'LIBCXXFLAGS=$$(LIBCXXFLAGS_FOR_TARGET)' \\\n \t'NM=$(COMPILER_NM_FOR_TARGET)' \\\n \t'OBJDUMP=$$(OBJDUMP_FOR_TARGET)' \\\n+\t'OBJCOPY=$$(OBJCOPY_FOR_TARGET)' \\\n \t'RANLIB=$$(RANLIB_FOR_TARGET)' \\\n \t'READELF=$$(READELF_FOR_TARGET)' \\\n \t'WINDRES=$$(WINDRES_FOR_TARGET)' \\"}, {"sha": "f737cfca6c9e5dfcb4c5c09201f1a19a611a8bfb", "filename": "Makefile.tpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "patch": "@@ -216,6 +216,7 @@ HOST_EXPORTS = \\\n \tLD_FOR_TARGET=\"$(LD_FOR_TARGET)\"; export LD_FOR_TARGET; \\\n \tNM_FOR_TARGET=\"$(NM_FOR_TARGET)\"; export NM_FOR_TARGET; \\\n \tOBJDUMP_FOR_TARGET=\"$(OBJDUMP_FOR_TARGET)\"; export OBJDUMP_FOR_TARGET; \\\n+\tOBJCOPY_FOR_TARGET=\"$(OBJCOPY_FOR_TARGET)\"; export OBJCOPY_FOR_TARGET; \\\n \tRANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\"; export RANLIB_FOR_TARGET; \\\n \tREADELF_FOR_TARGET=\"$(READELF_FOR_TARGET)\"; export READELF_FOR_TARGET; \\\n \tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n@@ -288,6 +289,7 @@ BASE_TARGET_EXPORTS = \\\n \tLIPO=\"$(LIPO_FOR_TARGET)\"; export LIPO; \\\n \tNM=\"$(COMPILER_NM_FOR_TARGET)\"; export NM; \\\n \tOBJDUMP=\"$(OBJDUMP_FOR_TARGET)\"; export OBJDUMP; \\\n+\tOBJCOPY=\"$(OBJCOPY_FOR_TARGET)\"; export OBJCOPY; \\\n \tRANLIB=\"$(RANLIB_FOR_TARGET)\"; export RANLIB; \\\n \tREADELF=\"$(READELF_FOR_TARGET)\"; export READELF; \\\n \tSTRIP=\"$(STRIP_FOR_TARGET)\"; export STRIP; \\\n@@ -486,6 +488,7 @@ LD_FOR_TARGET=@LD_FOR_TARGET@\n LIPO_FOR_TARGET=@LIPO_FOR_TARGET@\n NM_FOR_TARGET=@NM_FOR_TARGET@\n OBJDUMP_FOR_TARGET=@OBJDUMP_FOR_TARGET@\n+OBJCOPY_FOR_TARGET=@OBJCOPY_FOR_TARGET@\n RANLIB_FOR_TARGET=@RANLIB_FOR_TARGET@\n READELF_FOR_TARGET=@READELF_FOR_TARGET@\n STRIP_FOR_TARGET=@STRIP_FOR_TARGET@\n@@ -656,6 +659,7 @@ EXTRA_TARGET_FLAGS = \\\n \t'LIBCXXFLAGS=$$(LIBCXXFLAGS_FOR_TARGET)' \\\n \t'NM=$(COMPILER_NM_FOR_TARGET)' \\\n \t'OBJDUMP=$$(OBJDUMP_FOR_TARGET)' \\\n+\t'OBJCOPY=$$(OBJCOPY_FOR_TARGET)' \\\n \t'RANLIB=$$(RANLIB_FOR_TARGET)' \\\n \t'READELF=$$(READELF_FOR_TARGET)' \\\n \t'WINDRES=$$(WINDRES_FOR_TARGET)' \\"}, {"sha": "49719ae1baafd1f833ca065e8b9eb98783c87d58", "filename": "configure", "status": "modified", "additions": 276, "deletions": 0, "changes": 276, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "patch": "@@ -574,6 +574,7 @@ STRIP_FOR_TARGET\n READELF_FOR_TARGET\n RANLIB_FOR_TARGET\n OBJDUMP_FOR_TARGET\n+OBJCOPY_FOR_TARGET\n NM_FOR_TARGET\n LIPO_FOR_TARGET\n LD_FOR_TARGET\n@@ -833,6 +834,7 @@ DLLTOOL_FOR_TARGET\n LD_FOR_TARGET\n LIPO_FOR_TARGET\n NM_FOR_TARGET\n+OBJCOPY_FOR_TARGET\n OBJDUMP_FOR_TARGET\n RANLIB_FOR_TARGET\n READELF_FOR_TARGET\n@@ -1611,6 +1613,8 @@ Some influential environment variables:\n               LIPO for the target\n   NM_FOR_TARGET\n               NM for the target\n+  OBJCOPY_FOR_TARGET\n+              OBJCOPY for the target\n   OBJDUMP_FOR_TARGET\n               OBJDUMP for the target\n   RANLIB_FOR_TARGET\n@@ -12177,6 +12181,236 @@ fi\n \n \n \n+if test -z \"$ac_cv_path_OBJCOPY_FOR_TARGET\" ; then\n+  if test -n \"$with_build_time_tools\"; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for objcopy in $with_build_time_tools\" >&5\n+$as_echo_n \"checking for objcopy in $with_build_time_tools... \" >&6; }\n+    if test -x $with_build_time_tools/objcopy; then\n+      OBJCOPY_FOR_TARGET=`cd $with_build_time_tools && pwd`/objcopy\n+      ac_cv_path_OBJCOPY_FOR_TARGET=$OBJCOPY_FOR_TARGET\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_OBJCOPY_FOR_TARGET\" >&5\n+$as_echo \"$ac_cv_path_OBJCOPY_FOR_TARGET\" >&6; }\n+    else\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+    fi\n+  elif test $build != $host && test $have_gcc_for_target = yes; then\n+    OBJCOPY_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=objcopy`\n+    test $OBJCOPY_FOR_TARGET = objcopy && OBJCOPY_FOR_TARGET=\n+    test -n \"$OBJCOPY_FOR_TARGET\" && ac_cv_path_OBJCOPY_FOR_TARGET=$OBJCOPY_FOR_TARGET\n+  fi\n+fi\n+if test -z \"$ac_cv_path_OBJCOPY_FOR_TARGET\" && test -n \"$gcc_cv_tool_dirs\"; then\n+  # Extract the first word of \"objcopy\", so it can be a program name with args.\n+set dummy objcopy; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_path_OBJCOPY_FOR_TARGET+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  case $OBJCOPY_FOR_TARGET in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_OBJCOPY_FOR_TARGET=\"$OBJCOPY_FOR_TARGET\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $gcc_cv_tool_dirs\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_path_OBJCOPY_FOR_TARGET=\"$as_dir/$ac_word$ac_exec_ext\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+  ;;\n+esac\n+fi\n+OBJCOPY_FOR_TARGET=$ac_cv_path_OBJCOPY_FOR_TARGET\n+if test -n \"$OBJCOPY_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OBJCOPY_FOR_TARGET\" >&5\n+$as_echo \"$OBJCOPY_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+fi\n+if test -z \"$ac_cv_path_OBJCOPY_FOR_TARGET\" ; then\n+\n+\n+if test -n \"$OBJCOPY_FOR_TARGET\"; then\n+  ac_cv_prog_OBJCOPY_FOR_TARGET=$OBJCOPY_FOR_TARGET\n+elif test -n \"$ac_cv_prog_OBJCOPY_FOR_TARGET\"; then\n+  OBJCOPY_FOR_TARGET=$ac_cv_prog_OBJCOPY_FOR_TARGET\n+fi\n+\n+if test -n \"$ac_cv_prog_OBJCOPY_FOR_TARGET\"; then\n+  for ncn_progname in objcopy; do\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_prog_OBJCOPY_FOR_TARGET+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$OBJCOPY_FOR_TARGET\"; then\n+  ac_cv_prog_OBJCOPY_FOR_TARGET=\"$OBJCOPY_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_prog_OBJCOPY_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+OBJCOPY_FOR_TARGET=$ac_cv_prog_OBJCOPY_FOR_TARGET\n+if test -n \"$OBJCOPY_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OBJCOPY_FOR_TARGET\" >&5\n+$as_echo \"$OBJCOPY_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_OBJCOPY_FOR_TARGET\" && test -n \"$with_build_time_tools\"; then\n+  for ncn_progname in objcopy; do\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools\" >&5\n+$as_echo_n \"checking for ${ncn_progname} in $with_build_time_tools... \" >&6; }\n+    if test -x $with_build_time_tools/${ncn_progname}; then\n+      ac_cv_prog_OBJCOPY_FOR_TARGET=$with_build_time_tools/${ncn_progname}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+      break\n+    else\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+    fi\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_OBJCOPY_FOR_TARGET\"; then\n+  for ncn_progname in objcopy; do\n+    if test -n \"$ncn_target_tool_prefix\"; then\n+      # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_prog_OBJCOPY_FOR_TARGET+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$OBJCOPY_FOR_TARGET\"; then\n+  ac_cv_prog_OBJCOPY_FOR_TARGET=\"$OBJCOPY_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_prog_OBJCOPY_FOR_TARGET=\"${ncn_target_tool_prefix}${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+OBJCOPY_FOR_TARGET=$ac_cv_prog_OBJCOPY_FOR_TARGET\n+if test -n \"$OBJCOPY_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OBJCOPY_FOR_TARGET\" >&5\n+$as_echo \"$OBJCOPY_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    if test -z \"$ac_cv_prog_OBJCOPY_FOR_TARGET\" && test $build = $target ; then\n+      # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_prog_OBJCOPY_FOR_TARGET+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$OBJCOPY_FOR_TARGET\"; then\n+  ac_cv_prog_OBJCOPY_FOR_TARGET=\"$OBJCOPY_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_prog_OBJCOPY_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+OBJCOPY_FOR_TARGET=$ac_cv_prog_OBJCOPY_FOR_TARGET\n+if test -n \"$OBJCOPY_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $OBJCOPY_FOR_TARGET\" >&5\n+$as_echo \"$OBJCOPY_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    test -n \"$ac_cv_prog_OBJCOPY_FOR_TARGET\" && break\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_OBJCOPY_FOR_TARGET\" ; then\n+  set dummy objcopy\n+  if test $build = $target ; then\n+    OBJCOPY_FOR_TARGET=\"$2\"\n+  else\n+    OBJCOPY_FOR_TARGET=\"${ncn_target_tool_prefix}$2\"\n+  fi\n+else\n+  OBJCOPY_FOR_TARGET=\"$ac_cv_prog_OBJCOPY_FOR_TARGET\"\n+fi\n+\n+else\n+  OBJCOPY_FOR_TARGET=$ac_cv_path_OBJCOPY_FOR_TARGET\n+fi\n+\n+\n+\n+\n if test -z \"$ac_cv_path_OBJDUMP_FOR_TARGET\" ; then\n   if test -n \"$with_build_time_tools\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for objdump in $with_build_time_tools\" >&5\n@@ -14107,6 +14341,48 @@ $as_echo \"pre-installed\" >&6; }\n   fi\n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target objcopy\" >&5\n+$as_echo_n \"checking where to find the target objcopy... \" >&6; }\n+if test \"x${build}\" != \"x${host}\" ; then\n+  if expr \"x$OBJCOPY_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $OBJCOPY_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  else\n+    # Canadian cross, just use what we found\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+else\n+  ok=yes\n+  case \" ${configdirs} \" in\n+    *\" binutils \"*) ;;\n+    *) ok=no ;;\n+  esac\n+\n+  if test $ok = yes; then\n+    # An in-tree tool is available and we can use it\n+    OBJCOPY_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/objcopy'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: just compiled\" >&5\n+$as_echo \"just compiled\" >&6; }\n+  elif expr \"x$OBJCOPY_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $OBJCOPY_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  elif test \"x$target\" = \"x$host\"; then\n+    # We can use an host tool\n+    OBJCOPY_FOR_TARGET='$(OBJDUMP)'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: host tool\" >&5\n+$as_echo \"host tool\" >&6; }\n+  else\n+    # We need a cross tool\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target objdump\" >&5\n $as_echo_n \"checking where to find the target objdump... \" >&6; }\n if test \"x${build}\" != \"x${host}\" ; then"}, {"sha": "6d208b0663b1e8abeb52009555b18ed9ba69902d", "filename": "configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bccfdf521f8347944d9bf6f4e8978eea4385ce4/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=9bccfdf521f8347944d9bf6f4e8978eea4385ce4", "patch": "@@ -3324,6 +3324,7 @@ ACX_CHECK_INSTALLED_TARGET_TOOL(DLLTOOL_FOR_TARGET, dlltool)\n ACX_CHECK_INSTALLED_TARGET_TOOL(LD_FOR_TARGET, ld)\n ACX_CHECK_INSTALLED_TARGET_TOOL(LIPO_FOR_TARGET, lipo)\n ACX_CHECK_INSTALLED_TARGET_TOOL(NM_FOR_TARGET, nm)\n+ACX_CHECK_INSTALLED_TARGET_TOOL(OBJCOPY_FOR_TARGET, objcopy)\n ACX_CHECK_INSTALLED_TARGET_TOOL(OBJDUMP_FOR_TARGET, objdump)\n ACX_CHECK_INSTALLED_TARGET_TOOL(RANLIB_FOR_TARGET, ranlib)\n ACX_CHECK_INSTALLED_TARGET_TOOL(READELF_FOR_TARGET, readelf)\n@@ -3354,6 +3355,7 @@ GCC_TARGET_TOOL(gccgo, GOC_FOR_TARGET, GOC,\n GCC_TARGET_TOOL(ld, LD_FOR_TARGET, LD, [ld/ld-new])\n GCC_TARGET_TOOL(lipo, LIPO_FOR_TARGET, LIPO)\n GCC_TARGET_TOOL(nm, NM_FOR_TARGET, NM, [binutils/nm-new])\n+GCC_TARGET_TOOL(objcopy, OBJCOPY_FOR_TARGET, OBJDUMP, [binutils/objcopy])\n GCC_TARGET_TOOL(objdump, OBJDUMP_FOR_TARGET, OBJDUMP, [binutils/objdump])\n GCC_TARGET_TOOL(ranlib, RANLIB_FOR_TARGET, RANLIB, [binutils/ranlib])\n GCC_TARGET_TOOL(readelf, READELF_FOR_TARGET, READELF, [binutils/readelf])"}]}