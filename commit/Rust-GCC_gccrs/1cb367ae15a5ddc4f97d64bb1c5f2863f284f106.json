{"sha": "1cb367ae15a5ddc4f97d64bb1c5f2863f284f106", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNiMzY3YWUxNWE1ZGRjNGY5N2Q2NGJiMWM1ZjI4NjNmMjg0ZjEwNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-06-25T15:19:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-06-25T15:19:45Z"}, "message": "tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Disambiguate indirect references against the callused/escaped solutions.\n\n2009-06-25  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Disambiguate\n\tindirect references against the callused/escaped solutions.\n\t(call_may_clobber_ref_p_1): Likewise.\n\nFrom-SVN: r148947", "tree": {"sha": "c68ff39a5bb496517599a45c38d36496d197a5a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c68ff39a5bb496517599a45c38d36496d197a5a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cb367ae15a5ddc4f97d64bb1c5f2863f284f106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb367ae15a5ddc4f97d64bb1c5f2863f284f106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cb367ae15a5ddc4f97d64bb1c5f2863f284f106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb367ae15a5ddc4f97d64bb1c5f2863f284f106/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6709376bbe19c4d5f7941c00a0ce162342998e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6709376bbe19c4d5f7941c00a0ce162342998e49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6709376bbe19c4d5f7941c00a0ce162342998e49"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "adb14e39203c7a0f994771f27f2301ca3777442d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb367ae15a5ddc4f97d64bb1c5f2863f284f106/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb367ae15a5ddc4f97d64bb1c5f2863f284f106/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cb367ae15a5ddc4f97d64bb1c5f2863f284f106", "patch": "@@ -1,3 +1,9 @@\n+2009-06-25  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Disambiguate\n+\tindirect references against the callused/escaped solutions.\n+\t(call_may_clobber_ref_p_1): Likewise.\n+\n 2009-06-25  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/40493"}, {"sha": "14733675262aac3bc2b24165e427c869297e2095", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 46, "deletions": 7, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb367ae15a5ddc4f97d64bb1c5f2863f284f106/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb367ae15a5ddc4f97d64bb1c5f2863f284f106/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=1cb367ae15a5ddc4f97d64bb1c5f2863f284f106", "patch": "@@ -858,12 +858,8 @@ ref_maybe_used_by_call_p_1 (gimple call, tree ref)\n       && (flags & (ECF_CONST|ECF_NOVOPS)))\n     goto process_args;\n \n-  /* If the reference is not based on a decl give up.\n-     ???  Handle indirect references by intersecting the call-used\n-     \t  solution with that of the pointer.  */\n   base = get_base_address (ref);\n-  if (!base\n-      || !DECL_P (base))\n+  if (!base)\n     return true;\n \n   /* If the reference is based on a decl that is not aliased the call\n@@ -945,12 +941,45 @@ ref_maybe_used_by_call_p_1 (gimple call, tree ref)\n      it may be used.  */\n   if (flags & (ECF_PURE|ECF_CONST|ECF_LOOPING_CONST_OR_PURE|ECF_NOVOPS))\n     {\n-      if (is_call_used (base))\n+      if (DECL_P (base))\n+\t{\n+\t  if (is_call_used (base))\n+\t    return true;\n+\t}\n+      else if (INDIRECT_REF_P (base)\n+\t       && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME)\n+\t{\n+\t  struct ptr_info_def *pi = SSA_NAME_PTR_INFO (TREE_OPERAND (base, 0));\n+\t  if (!pi)\n+\t    return true;\n+\n+\t  if (pt_solution_includes_global (&pi->pt)\n+\t      || pt_solutions_intersect (&cfun->gimple_df->callused, &pi->pt)\n+\t      || pt_solutions_intersect (&cfun->gimple_df->escaped, &pi->pt))\n+\t    return true;\n+\t}\n+      else\n \treturn true;\n     }\n   else\n     {\n-      if (is_call_clobbered (base))\n+      if (DECL_P (base))\n+\t{\n+\t  if (is_call_clobbered (base))\n+\t    return true;\n+\t}\n+      else if (INDIRECT_REF_P (base)\n+\t       && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME)\n+\t{\n+\t  struct ptr_info_def *pi = SSA_NAME_PTR_INFO (TREE_OPERAND (base, 0));\n+\t  if (!pi)\n+\t    return true;\n+\n+\t  if (pt_solution_includes_global (&pi->pt)\n+\t      || pt_solutions_intersect (&cfun->gimple_df->escaped, &pi->pt))\n+\t    return true;\n+\t}\n+      else\n \treturn true;\n     }\n \n@@ -1148,6 +1177,16 @@ call_may_clobber_ref_p_1 (gimple call, ao_ref *ref)\n \n   if (DECL_P (base))\n     return is_call_clobbered (base);\n+  else if (INDIRECT_REF_P (base)\n+\t   && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME)\n+    {\n+      struct ptr_info_def *pi = SSA_NAME_PTR_INFO (TREE_OPERAND (base, 0));\n+      if (!pi)\n+\treturn true;\n+\n+      return (pt_solution_includes_global (&pi->pt)\n+\t      || pt_solutions_intersect (&cfun->gimple_df->escaped, &pi->pt));\n+    }\n \n   return true;\n }"}]}