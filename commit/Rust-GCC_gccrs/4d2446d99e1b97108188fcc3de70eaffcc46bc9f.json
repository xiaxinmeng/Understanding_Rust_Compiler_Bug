{"sha": "4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQyNDQ2ZDk5ZTFiOTcxMDgxODhmY2MzZGU3MGVhZmZjYzQ2YmM5Zg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-02-01T21:36:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-02-01T21:36:01Z"}, "message": "LogManager.java (loggers): Genericized.\n\n\t* java/util/logging/LogManager.java (loggers): Genericized.\n\t(addLogger): Merged.\n\t(findAncestor): Likewise.\n\t(getLogger): Likewise.\n\t(getLoggerNames): Genericized.\n\t(reset): Merged.\n\t(getLevelProperty): Likewise.\n\t* java/lang/reflect/Method.java (getDeclaringClass): Genericized.\n\t* java/lang/reflect/Constructor.java (getParameterTypes):\n\tGenericized.\n\t(getExceptionTypes): Likewise.\n\t(newInstance): Likewise.\n\t* java/lang/reflect/Array.java (newInstance): Genericized.\n\t* java/lang/Object.java (getClass): Genericized.\n\t* java/nio/charset/spi/CharsetProvider.java (charsets):\n\tGenericized.\n\t* java/text/Collator.java: Implement Comparable<Object>.\n\nFrom-SVN: r121473", "tree": {"sha": "57fd94d4413c128908a347a3f33787de9c0a3880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57fd94d4413c128908a347a3f33787de9c0a3880"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/comments", "author": null, "committer": null, "parents": [{"sha": "0a32f469ac256a842ac1f721c37dab7ad2cf5e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a32f469ac256a842ac1f721c37dab7ad2cf5e21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a32f469ac256a842ac1f721c37dab7ad2cf5e21"}], "stats": {"total": 96, "additions": 57, "deletions": 39}, "files": [{"sha": "6e62fff7ce3ee82d2f9f3a678ce204fea8d47394", "filename": "libjava/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "patch": "@@ -1,3 +1,23 @@\n+2007-02-01  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/util/logging/LogManager.java (loggers): Genericized.\n+\t(addLogger): Merged.\n+\t(findAncestor): Likewise.\n+\t(getLogger): Likewise.\n+\t(getLoggerNames): Genericized.\n+\t(reset): Merged.\n+\t(getLevelProperty): Likewise.\n+\t* java/lang/reflect/Method.java (getDeclaringClass): Genericized.\n+\t* java/lang/reflect/Constructor.java (getParameterTypes):\n+\tGenericized.\n+\t(getExceptionTypes): Likewise.\n+\t(newInstance): Likewise.\n+\t* java/lang/reflect/Array.java (newInstance): Genericized.\n+\t* java/lang/Object.java (getClass): Genericized.\n+\t* java/nio/charset/spi/CharsetProvider.java (charsets):\n+\tGenericized.\n+\t* java/text/Collator.java: Implement Comparable<Object>.\n+\n 2007-02-01  Tom Tromey  <tromey@redhat.com>\n \n \t* java/util/Calendar.java: Implement Comparable<Calendar>.  Update"}, {"sha": "a2755d819b60458db08a8715116525f9b3daece4", "filename": "libjava/classpath/lib/java/lang/Object.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FObject.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FObject.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FObject.class?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f"}, {"sha": "e2ef1a09d60a0f00802af517492144e456cfa5ac", "filename": "libjava/classpath/lib/java/lang/reflect/Array.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FArray.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FArray.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FArray.class?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f"}, {"sha": "637c5b87bd770a994c2d00e76c64a1ba6bde8df1", "filename": "libjava/classpath/lib/java/lang/reflect/Constructor.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FConstructor.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FConstructor.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FConstructor.class?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f"}, {"sha": "0eda2ee759029c1bd99fe8e1f248d5aa42d2e63c", "filename": "libjava/classpath/lib/java/lang/reflect/Method.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FMethod.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FMethod.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Freflect%2FMethod.class?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f"}, {"sha": "2b9736833732968fd4e2cff762395dd3325aeb7d", "filename": "libjava/classpath/lib/java/nio/charset/spi/CharsetProvider.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2Fcharset%2Fspi%2FCharsetProvider.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2Fcharset%2Fspi%2FCharsetProvider.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2Fcharset%2Fspi%2FCharsetProvider.class?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f"}, {"sha": "655c4fca8477ae8de9323416dcdc6315690b8331", "filename": "libjava/classpath/lib/java/text/Collator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FCollator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FCollator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Ftext%2FCollator.class?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f"}, {"sha": "927c28c7872e7417e1480b88de1553b1b3050740", "filename": "libjava/classpath/lib/java/util/logging/LogManager$1.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Flogging%2FLogManager%241.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Flogging%2FLogManager%241.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Flogging%2FLogManager%241.class?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f"}, {"sha": "92da8e3a249b735b445851d5f7247296e3318fd3", "filename": "libjava/classpath/lib/java/util/logging/LogManager.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Flogging%2FLogManager.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Flogging%2FLogManager.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Futil%2Flogging%2FLogManager.class?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f"}, {"sha": "740a7c78e7529e8e6cdd2163f2a3e2394f5c08a7", "filename": "libjava/java/lang/Object.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Flang%2FObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Flang%2FObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FObject.java?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "patch": "@@ -1,5 +1,5 @@\n /* java.lang.Object - The universal superclass in Java\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2004\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2004, 2007\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -129,7 +129,7 @@ protected void finalize () throws Throwable\n    *\n    * @return the class of this Object\n    */\n-  public final native Class getClass();\n+  public final native Class<? extends Object> getClass();\n \n   /**\n    * Get a value that represents this Object, as uniquely as"}, {"sha": "639cc0e02dbe87a2edcf884652a310c6d8b46bec", "filename": "libjava/java/lang/reflect/Array.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Flang%2Freflect%2FArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Flang%2Freflect%2FArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FArray.java?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "patch": "@@ -1,5 +1,5 @@\n /* java.lang.reflect.Array - manipulate arrays by reflection\n-   Copyright (C) 1998, 1999, 2001, 2003, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003, 2005, 2007  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -104,7 +104,7 @@ private Array()\n    * @throws NegativeArraySizeException when length is less than 0\n    * @throws OutOfMemoryError if memory allocation fails\n    */\n-  public static native Object newInstance(Class componentType, int length);\n+  public static native Object newInstance(Class<?> componentType, int length);\n \n   /**\n    * Creates a new multi-dimensioned array.  The new array has the same\n@@ -130,7 +130,7 @@ private Array()\n    *         than 0\n    * @throws OutOfMemoryError if memory allocation fails\n    */\n-  public static native Object newInstance(Class elementType, int[] dimensions);\n+  public static native Object newInstance(Class<?> elementType, int[] dimensions);\n \n   /**\n    * Gets the array length."}, {"sha": "adebc600a67fe4f369fad42640ccc1e7e929b7d6", "filename": "libjava/java/lang/reflect/Constructor.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Flang%2Freflect%2FConstructor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Flang%2Freflect%2FConstructor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FConstructor.java?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "patch": "@@ -1,5 +1,5 @@\n /* java.lang.reflect.Constructor - reflection of Java constructors\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -155,11 +155,11 @@ public boolean isVarArgs()\n    *\n    * @return a list of the types of the constructor's parameters\n    */\n-  public Class[] getParameterTypes ()\n+  public Class<?>[] getParameterTypes ()\n   {\n     if (parameter_types == null)\n       getType ();\n-    return (Class[]) parameter_types.clone();\n+    return (Class<?>[]) parameter_types.clone();\n   }\n \n   /**\n@@ -169,11 +169,11 @@ public Class[] getParameterTypes ()\n    *\n    * @return a list of the types in the constructor's throws clause\n    */\n-  public Class[] getExceptionTypes ()\n+  public Class<?>[] getExceptionTypes ()\n   {\n     if (exception_types == null)\n       getType();\n-    return (Class[]) exception_types.clone();\n+    return (Class<?>[]) exception_types.clone();\n   }\n \n   /**\n@@ -305,7 +305,7 @@ public String toGenericString()\n    * @throws ExceptionInInitializerError if construction triggered class\n    *         initialization, which then failed\n    */\n-  public native Object newInstance (Object[] args)\n+  public native T newInstance (Object... args)\n     throws InstantiationException, IllegalAccessException,\n     IllegalArgumentException, InvocationTargetException;\n "}, {"sha": "6fa2956e40e825aa666efab306a56e1b472f3b60", "filename": "libjava/java/lang/reflect/Method.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Flang%2Freflect%2FMethod.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Flang%2Freflect%2FMethod.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FMethod.java?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "patch": "@@ -1,6 +1,6 @@\n // Method.java - Represent method of class or interface.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2006  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2007  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -68,7 +68,7 @@ private Method ()\n    * is a non-inherited member.\n    * @return the class that declared this member\n    */\n-  public Class getDeclaringClass()\n+  public Class<?> getDeclaringClass()\n   {\n     return declaringClass;\n   }"}, {"sha": "d56723c3f433da68eb412f32f1cb1df5197c96e8", "filename": "libjava/java/nio/charset/spi/CharsetProvider.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Fnio%2Fcharset%2Fspi%2FCharsetProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Fnio%2Fcharset%2Fspi%2FCharsetProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fcharset%2Fspi%2FCharsetProvider.java?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "patch": "@@ -1,5 +1,5 @@\n /* CharsetProvider.java -- charset service provider interface\n-   Copyright (C) 2002, 2006 Free Software Foundation\n+   Copyright (C) 2002, 2006, 2007 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -83,7 +83,7 @@ protected CharsetProvider()\n    * @return the iterator\n    * @see Charset#availableCharsets()\n    */\n-  public abstract Iterator charsets();\n+  public abstract Iterator<Charset> charsets();\n \n   /**\n    * Returns the named charset, by canonical name or alias."}, {"sha": "aa643163943fff098260d35713a2ff4cec0a0bcd", "filename": "libjava/java/text/Collator.java", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Ftext%2FCollator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Ftext%2FCollator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollator.java?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "patch": "@@ -1,5 +1,5 @@\n /* Collator.java -- Perform locale dependent String comparisons.\n-   Copyright (C) 1998, 1999, 2000, 2001, 2004, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2004, 2005, 2007  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -68,11 +68,7 @@\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  * @date March 18, 1999\n  */\n-/* Written using \"Java Class Libraries\", 2nd edition, plus online\n- * API docs for JDK 1.2 from http://www.javasoft.com.\n- * Status: Mostly complete, but parts stubbed out.  Look for FIXME.\n- */\n-public abstract class Collator implements Comparator, Cloneable\n+public abstract class Collator implements Comparator<Object>, Cloneable\n {\n   /**\n    * This constant is a strength value which indicates that only primary\n@@ -292,7 +288,7 @@ public static Collator getInstance ()\n    * specified locale.  If no <code>Collator</code> exists for the desired\n    * locale, a <code>Collator</code> for the default locale will be returned.\n    *\n-   * @param loc The desired localed to load a <code>Collator</code> for.\n+   * @param loc The desired locale to load a <code>Collator</code> for.\n    *\n    * @return A <code>Collator</code> for the requested locale\n    */"}, {"sha": "1e0192e3f3497f9ca5fd689c9b9ed98d0b8a501a", "filename": "libjava/java/util/logging/LogManager.java", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2446d99e1b97108188fcc3de70eaffcc46bc9f/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java?ref=4d2446d99e1b97108188fcc3de70eaffcc46bc9f", "patch": "@@ -1,6 +1,6 @@\n /* LogManager.java -- a class for maintaining Loggers and managing\n    configuration properties\n-   Copyright (C) 2002, 2005, 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -129,7 +129,7 @@\n    * The registered named loggers; maps the name of a Logger to\n    * a WeakReference to it.\n    */\n-  private Map loggers;\n+  private Map<String, WeakReference<Logger>> loggers;\n \n   /**\n    * The properties for the logging framework which have been\n@@ -269,7 +269,7 @@ public synchronized boolean addLogger(Logger logger)\n      */\n     name = logger.getName();\n \n-    ref = (WeakReference) loggers.get(name);\n+    ref = loggers.get(name);\n     if (ref != null)\n       {\n \tif (ref.get() != null)\n@@ -286,7 +286,7 @@ public synchronized boolean addLogger(Logger logger)\n       checkAccess();\n \n     Logger parent = findAncestor(logger);\n-    loggers.put(name, new WeakReference(logger));\n+    loggers.put(name, new WeakReference<Logger>(logger));\n     if (parent != logger.getParent())\n       logger.setParent(parent);\n \n@@ -362,23 +362,21 @@ private synchronized Logger findAncestor(Logger child)\n     int bestNameLength = 0;\n \n     Logger cand;\n-    String candName;\n     int candNameLength;\n \n     if (child == Logger.root)\n       return null;\n \n-    for (Iterator iter = loggers.keySet().iterator(); iter.hasNext();)\n+    for (String candName : loggers.keySet())\n       {\n-\tcandName = (String) iter.next();\n \tcandNameLength = candName.length();\n \n \tif (candNameLength > bestNameLength\n \t    && childNameLength > candNameLength\n \t    && childName.startsWith(candName)\n \t    && childName.charAt(candNameLength) == '.')\n \t  {\n-\t    cand = (Logger) ((WeakReference) loggers.get(candName)).get();\n+\t    cand = loggers.get(candName).get();\n \t    if ((cand == null) || (cand == child))\n \t      continue;\n \n@@ -403,14 +401,14 @@ private synchronized Logger findAncestor(Logger child)\n    */\n   public synchronized Logger getLogger(String name)\n   {\n-    WeakReference ref;\n+    WeakReference<Logger> ref;\n \n     /* Throw a NullPointerException if name is null. */\n     name.getClass();\n \n-    ref = (WeakReference) loggers.get(name);\n+    ref = loggers.get(name);\n     if (ref != null)\n-      return (Logger) ref.get();\n+      return ref.get();\n     else\n       return null;\n   }\n@@ -423,7 +421,7 @@ public synchronized Logger getLogger(String name)\n    * @return an Enumeration with the names of the currently\n    *    registered Loggers.\n    */\n-  public synchronized Enumeration getLoggerNames()\n+  public synchronized Enumeration<String> getLoggerNames()\n   {\n     return Collections.enumeration(loggers.keySet());\n   }\n@@ -446,16 +444,16 @@ public synchronized void reset() throws SecurityException\n \n     properties = new Properties();\n \n-    Iterator iter = loggers.values().iterator();\n+    Iterator<WeakReference<Logger>> iter = loggers.values().iterator();\n     while (iter.hasNext())\n       {\n-\tWeakReference ref;\n+\tWeakReference<Logger> ref;\n \tLogger logger;\n \n-\tref = (WeakReference) iter.next();\n+\tref = iter.next();\n \tif (ref != null)\n \t  {\n-\t    logger = (Logger) ref.get();\n+\t    logger = ref.get();\n \n \t    if (logger == null)\n \t      iter.remove();\n@@ -710,7 +708,11 @@ static Level getLevelProperty(String propertyName, Level defaultValue)\n   {\n     try\n       {\n-\treturn Level.parse(getLogManager().getProperty(propertyName));\n+        String value = getLogManager().getProperty(propertyName);\n+\tif (value != null)\n+\t  return Level.parse(getLogManager().getProperty(propertyName));\n+        else\n+\t   return defaultValue;\n       }\n     catch (Exception ex)\n       {"}]}