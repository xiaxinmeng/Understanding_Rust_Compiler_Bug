{"sha": "ef9fe0da13b2d36da24e412ec6e3a609c9fc36fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5ZmUwZGExM2IyZDM2ZGEyNGU0MTJlYzZlM2E2MDljOWZjMzZmYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-03-13T13:58:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-03-13T13:58:47Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r462", "tree": {"sha": "bbb6f7c66e22569d6679ecddbe962b6fad72f9c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbb6f7c66e22569d6679ecddbe962b6fad72f9c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef9fe0da13b2d36da24e412ec6e3a609c9fc36fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9fe0da13b2d36da24e412ec6e3a609c9fc36fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9fe0da13b2d36da24e412ec6e3a609c9fc36fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9fe0da13b2d36da24e412ec6e3a609c9fc36fc/comments", "author": null, "committer": null, "parents": [{"sha": "8df91b1fdb9140099a0a16dd0c256bd26e1d4a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df91b1fdb9140099a0a16dd0c256bd26e1d4a79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df91b1fdb9140099a0a16dd0c256bd26e1d4a79"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "5246a45202da758f1eb191b764606ae442ef7aa6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9fe0da13b2d36da24e412ec6e3a609c9fc36fc/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9fe0da13b2d36da24e412ec6e3a609c9fc36fc/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=ef9fe0da13b2d36da24e412ec6e3a609c9fc36fc", "patch": "@@ -1624,6 +1624,10 @@ invert_truthvalue (arg)\n \t\t    invert_truthvalue (TREE_OPERAND (arg, 1)),\n \t\t    invert_truthvalue (TREE_OPERAND (arg, 2)));\n \n+    case COMPOUND_EXPR:\n+      return build (COMPOUND_EXPR, type, TREE_OPERAND (arg, 0),\n+\t\t    invert_truthvalue (TREE_OPERAND (arg, 1)));\n+\n     case NON_LVALUE_EXPR:\n       return invert_truthvalue (TREE_OPERAND (arg, 0));\n \n@@ -3293,7 +3297,8 @@ fold (expr)\n \t}\n \n       /* If what we want is other than LT or EQ, invert the result.  */\n-      if (code == GE_EXPR || code == LE_EXPR || code == NE_EXPR)\n+      if ((code == GE_EXPR || code == LE_EXPR || code == NE_EXPR)\n+\t  && TREE_CODE (t) == INTEGER_CST)\n \tTREE_INT_CST_LOW (t) ^= 1;\n       TREE_TYPE (t) = type;\n       return t;"}]}