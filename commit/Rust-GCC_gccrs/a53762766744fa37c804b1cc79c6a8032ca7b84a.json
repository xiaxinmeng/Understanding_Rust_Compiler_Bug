{"sha": "a53762766744fa37c804b1cc79c6a8032ca7b84a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUzNzYyNzY2NzQ0ZmEzN2M4MDRiMWNjNzljNmE4MDMyY2E3Yjg0YQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-01-08T23:42:56Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-01-08T23:42:56Z"}, "message": "alpha.c (alpha_split_conditional_move): Call copy_rtx as needed to avoid shared structure.\n\n        * config/alpha/alpha.c (alpha_split_conditional_move): Call copy_rtx\n        as needed to avoid shared structure.\n\nFrom-SVN: r48667", "tree": {"sha": "5b436ba811570ffb5c03899622aec4ecdf31a60d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b436ba811570ffb5c03899622aec4ecdf31a60d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a53762766744fa37c804b1cc79c6a8032ca7b84a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53762766744fa37c804b1cc79c6a8032ca7b84a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a53762766744fa37c804b1cc79c6a8032ca7b84a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53762766744fa37c804b1cc79c6a8032ca7b84a/comments", "author": null, "committer": null, "parents": [{"sha": "18cf8ddadafa4b013652db01a344192fc09c67a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18cf8ddadafa4b013652db01a344192fc09c67a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18cf8ddadafa4b013652db01a344192fc09c67a8"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "72e514420a15979de0f3ac23b09584aa4ab666d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53762766744fa37c804b1cc79c6a8032ca7b84a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53762766744fa37c804b1cc79c6a8032ca7b84a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a53762766744fa37c804b1cc79c6a8032ca7b84a", "patch": "@@ -1,3 +1,8 @@\n+2002-01-08  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (alpha_split_conditional_move): Call copy_rtx\n+\tas needed to avoid shared structure.\n+\n 2002-01-08  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300.c (get_shift_alg): Fix 15-bit LSHIFTRT on"}, {"sha": "8790e7d113758ce0652271570e2a6b7d13923338", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53762766744fa37c804b1cc79c6a8032ca7b84a/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53762766744fa37c804b1cc79c6a8032ca7b84a/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=a53762766744fa37c804b1cc79c6a8032ca7b84a", "patch": "@@ -3166,6 +3166,9 @@ alpha_split_conditional_move (code, dest, cond, t_rtx, f_rtx)\n       else\n \tsubtarget = target;\n     }\n+  /* Below, we must be careful to use copy_rtx on target and subtarget\n+     in intermediate insns, as they may be a subreg rtx, which may not\n+     be shared.  */\n \n   if (f == 0 && exact_log2 (diff) > 0\n       /* On EV6, we've got enough shifters to make non-arithmatic shifts\n@@ -3174,33 +3177,35 @@ alpha_split_conditional_move (code, dest, cond, t_rtx, f_rtx)\n       && (diff <= 8 || alpha_cpu == PROCESSOR_EV6))\n     {\n       tmp = gen_rtx_fmt_ee (code, DImode, cond, const0_rtx);\n-      emit_insn (gen_rtx_SET (VOIDmode, subtarget, tmp));\n+      emit_insn (gen_rtx_SET (VOIDmode, copy_rtx (subtarget), tmp));\n \n-      tmp = gen_rtx_ASHIFT (DImode, subtarget, GEN_INT (exact_log2 (t)));\n+      tmp = gen_rtx_ASHIFT (DImode, copy_rtx (subtarget),\n+\t\t\t    GEN_INT (exact_log2 (t)));\n       emit_insn (gen_rtx_SET (VOIDmode, target, tmp));\n     }\n   else if (f == 0 && t == -1)\n     {\n       tmp = gen_rtx_fmt_ee (code, DImode, cond, const0_rtx);\n-      emit_insn (gen_rtx_SET (VOIDmode, subtarget, tmp));\n+      emit_insn (gen_rtx_SET (VOIDmode, copy_rtx (subtarget), tmp));\n \n-      emit_insn (gen_negdi2 (target, subtarget));\n+      emit_insn (gen_negdi2 (target, copy_rtx (subtarget)));\n     }\n   else if (diff == 1 || diff == 4 || diff == 8)\n     {\n       rtx add_op;\n \n       tmp = gen_rtx_fmt_ee (code, DImode, cond, const0_rtx);\n-      emit_insn (gen_rtx_SET (VOIDmode, subtarget, tmp));\n+      emit_insn (gen_rtx_SET (VOIDmode, copy_rtx (subtarget), tmp));\n \n       if (diff == 1)\n-\temit_insn (gen_adddi3 (target, subtarget, GEN_INT (f)));\n+\temit_insn (gen_adddi3 (target, copy_rtx (subtarget), GEN_INT (f)));\n       else\n \t{\n \t  add_op = GEN_INT (f);\n \t  if (sext_add_operand (add_op, mode))\n \t    {\n-\t      tmp = gen_rtx_MULT (DImode, subtarget, GEN_INT (diff));\n+\t      tmp = gen_rtx_MULT (DImode, copy_rtx (subtarget),\n+\t\t\t\t  GEN_INT (diff));\n \t      tmp = gen_rtx_PLUS (DImode, tmp, add_op);\n \t      emit_insn (gen_rtx_SET (VOIDmode, target, tmp));\n \t    }"}]}