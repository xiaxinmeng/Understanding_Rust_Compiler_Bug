{"sha": "328647780254d7781b48f21b8344dcee3c8afb2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI4NjQ3NzgwMjU0ZDc3ODFiNDhmMjFiODM0NGRjZWUzYzhhZmIyYw==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-04-27T16:52:10Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-04-27T16:52:10Z"}, "message": "gfortran.texi: Added node and menu entry for an option index.\n\n2007-04-27  Daniel Franke  <franke.daniel@gmail.com>\n\n\t* gfortran.texi: Added node and menu entry for an option index.\n\t* invoke.texi: Moved command line option related entries of the concept \n\tindex to the option index.\n\nFrom-SVN: r124224", "tree": {"sha": "6f8185b8fc7b344e879ba5b01f93de015259be72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f8185b8fc7b344e879ba5b01f93de015259be72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/328647780254d7781b48f21b8344dcee3c8afb2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328647780254d7781b48f21b8344dcee3c8afb2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/328647780254d7781b48f21b8344dcee3c8afb2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328647780254d7781b48f21b8344dcee3c8afb2c/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a56c06d8c916bf2b3199db40f31a07f48824b076", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a56c06d8c916bf2b3199db40f31a07f48824b076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a56c06d8c916bf2b3199db40f31a07f48824b076"}], "stats": {"total": 228, "additions": 97, "deletions": 131}, "files": [{"sha": "a9693d490159e442364a0470484500bc3067e68f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328647780254d7781b48f21b8344dcee3c8afb2c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328647780254d7781b48f21b8344dcee3c8afb2c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=328647780254d7781b48f21b8344dcee3c8afb2c", "patch": "@@ -1,3 +1,9 @@\n+2007-04-27  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\t* gfortran.texi: Added node and menu entry for an option index.\n+\t* invoke.texi: Moved command line option related entries of the concept \n+\tindex to the option index.\n+\n 2007-04-27  Daniel Franke  <franke.daniel@gmail.com>\n \n \t* intrinsic.texi (AND, FPUT, FPUTC, MODULO, OR, SET_EXPONENT,"}, {"sha": "41e5f163cf47579a0d5ec7edb7894712b10dfd59", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328647780254d7781b48f21b8344dcee3c8afb2c/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328647780254d7781b48f21b8344dcee3c8afb2c/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=328647780254d7781b48f21b8344dcee3c8afb2c", "patch": "@@ -191,7 +191,8 @@ Part II: Language Reference\n * GNU Free Documentation License::\n \t\t         How you can copy and share this manual.\n * Funding::              How to help assure continued work for free software.\n-* Index::                Index of this documentation.\n+* Option Index::         Index of command line options\n+* Keyword Index::        Index of concepts\n @end menu\n @end ifnottex\n \n@@ -710,7 +711,7 @@ than @code{(/.../)}.\n @item\n @cindex @code{ENUM} statement\n @cindex @code{ENUMERATOR} statement\n-@cindex @code{-fshort-enums} option\n+@opindex @code{fshort-enums}\n Support for the declaration of enumeration constants via the\n @code{ENUM} and @code{ENUMERATOR} statements.  Interoperability with\n @command{gcc} is guaranteed also for the case where the\n@@ -1577,12 +1578,20 @@ Environment variable forcing standard output to be line buffered (unix).\n @include funding.texi\n \n @c ---------------------------------------------------------------------\n-@c Index\n+@c Indices\n @c ---------------------------------------------------------------------\n \n-@node Index\n-@unnumbered Index\n-\n+@node Option Index\n+@unnumbered Index of command line options\n+@command{gfortran}'s command line options are indexed here without any \n+initial `-' or `--'. Where an option has both positive and negative forms \n+(such as -foption and -fno-option), relevant entries in the manual are \n+indexed under the most appropriate form; it may sometimes be useful to \n+look up both forms.\n+@printindex op\n+\n+@node Keyword Index\n+@unnumbered Index of concepts\n @printindex cp\n \n @bye"}, {"sha": "5a125604a6b4e84729ebc427c138ad53857bf5c6", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 76, "deletions": 125, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328647780254d7781b48f21b8344dcee3c8afb2c/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328647780254d7781b48f21b8344dcee3c8afb2c/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=328647780254d7781b48f21b8344dcee3c8afb2c", "patch": "@@ -178,10 +178,9 @@ accepted by the compiler:\n @table @gcctabopt\n @item -ffree-form\n @item -ffixed-form\n-@cindex @code{-ffree-form} option\n-@cindex option, @code{-ffree-form}\n-@cindex @code{-fno-fixed-form} option\n-@cindex option, @code{-fno-fixed-form}\n+@opindex @code{ffree-form}\n+@opindex @code{fno-fixed-form}\n+@cindex options, fortran dialect\n @cindex source file format\n @cindex free form\n @cindex fixed form\n@@ -193,72 +192,62 @@ older Fortran programs.  When neither option is specified, the source\n form is determined by the file extension.\n \n @item -fall-intrinsics\n-@cindex @code{-fall-intrinsics} option\n-@cindex option, @code{-fall-intrinsics}\n+@opindex @code{fall-intrinsics}\n Accept all of the intrinsic procedures provided in libgfortran \n without regard to the setting of @option{-std}.  In particular, \n this option can be quite useful with @option{-std=f95}.  Additionally,\n @command{gfortran} will ignore @option{-Wnonstd-intrinsics}.\n \n @item -fd-lines-as-code\n @item -fd-lines-as-comments\n-@cindex @code{-fd-lines-as-code}, option\n-@cindex option, @code{-fd-lines-as-code}\n-@cindex @code{-fd-lines-as-comments}, option\n-@cindex option, @code{-fd-lines-as-comments}\n+@opindex @code{fd-lines-as-code}\n+@opindex @code{fd-lines-as-comments}\n Enable special treatment for lines beginning with @code{d} or @code{D}\n in fixed form sources.  If the @option{-fd-lines-as-code} option is\n given they are treated as if the first column contained a blank.  If the\n @option{-fd-lines-as-comments} option is given, they are treated as\n comment lines.\n \n @item -fdefault-double-8\n-@cindex @code{-fdefault-double-8}, option\n-@cindex option, @code{-fdefault-double-8}\n+@opindex @code{fdefault-double-8}\n Set the @code{DOUBLE PRECISION} type to an 8 byte wide type.\n \n @item -fdefault-integer-8\n-@cindex @code{-fdefault-integer-8}, option\n-@cindex option, @code{-fdefault-integer-8}\n+@opindex @code{fdefault-integer-8}\n Set the default integer and logical types to an 8 byte wide type.\n Do nothing if this is already the default.\n \n @item -fdefault-real-8\n-@cindex @code{-fdefault-real-8}, option\n-@cindex option, @code{-fdefault-real-8}\n+@opindex @code{fdefault-real-8}\n Set the default real type to an 8 byte wide type.\n Do nothing if this is already the default.\n \n @item -fdollar-ok\n-@cindex @code{-fdollar-ok} option\n-@cindex option, @code{-fdollar-ok}\n+@opindex @code{fdollar-ok}\n @cindex dollar sign\n @cindex symbol names\n @cindex character set\n Allow @samp{$} as a valid character in a symbol name.\n \n @item -fno-backslash\n-@cindex @code{-fno-backslash} option\n-@cindex option, @code{-fno-backslash}\n+@opindex @code{fno-backslash}\n @cindex backslash\n @cindex escape characters\n Change the interpretation of backslashes in string literals from\n ``C-style'' escape characters to a single backslash character.\n \n @item -ffixed-line-length-@var{n}\n-@cindex @code{-ffixed-line-length-}@var{n} option\n-@cindex option, @code{-ffixed-line-length-}@var{n}\n+@opindex @code{ffixed-line-length-}@var{n}\n @cindex source file format\n @cindex lines, length\n @cindex length of source lines\n-@cindex fixed form\n @cindex limits, lengths of source lines\n+@cindex card image\n+@cindex extended-source option\n Set column after which characters are ignored in typical fixed-form\n lines in the source file, and through which spaces are assumed (as\n if padded to that length) after the ends of short fixed-form lines.\n \n-@cindex card image\n-@cindex extended-source option\n Popular values for @var{n} include 72 (the\n standard and the default), 80 (card image), and 132 (corresponding\n to ``extended-source'' options in some popular compilers).\n@@ -269,12 +258,10 @@ to them to fill out the line.\n @option{-ffixed-line-length-none}.\n \n @item -ffree-line-length-@var{n}\n-@cindex @code{-ffree-line-length-}@var{n} option\n-@cindex option, @code{-ffree-line-length-}@var{n}\n+@opindex @code{ffree-line-length-}@var{n}\n @cindex source file format\n @cindex lines, length\n @cindex length of source lines\n-@cindex free form\n @cindex limits, lengths of source lines\n Set column after which characters are ignored in typical free-form\n lines in the source file. The default value is 132.\n@@ -283,27 +270,23 @@ lines in the source file. The default value is 132.\n @option{-ffree-line-length-none}.\n \n @item -fmax-identifier-length=@var{n}\n-@cindex @code{-fmax-identifier-length=}@var{n} option\n-@cindex option @option{-fmax-identifier-length=}@var{n}\n+@opindex @code{fmax-identifier-length=}@var{n}\n Specify the maximum allowed identifier length. Typical values are\n 31 (Fortran 95) and 63 (Fortran 2003).\n \n @item -fimplicit-none\n-@cindex @code{-fimplicit-none} option\n-@cindex option, @code{-fimplicit-none}\n+@opindex @code{fimplicit-none}\n Specify that no implicit typing is allowed, unless overridden by explicit\n @code{IMPLICIT} statements.  This is the equivalent of adding\n @code{implicit none} to the start of every procedure.\n \n @item -fcray-pointer\n-@cindex @code{-fcray-pointer} option\n-@cindex option, @code{-fcray-pointer}\n+@opindex @code{fcray-pointer}\n Enable the Cray pointer extension, which provides C-like pointer\n functionality.\n \n @item -fopenmp\n-@cindex @code{-fopenmp} option\n-@cindex option, @code{-fopenmp}\n+@opindex @code{fopenmp}\n @cindex OpenMP\n Enable the OpenMP extensions.  This includes OpenMP @code{!$omp} directives\n in free form\n@@ -314,8 +297,7 @@ and when linking arranges for the OpenMP runtime library to be linked\n in.\n \n @item -frange-check\n-@cindex @code{-frange-check} option\n-@cindex option, @code{-frange-check}\n+@opindex @code{frange-check}\n Enable range checking on results of simplification of constant\n expressions during compilation.  For example, by default, GNU Fortran\n will give an overflow error at compile time when simplifying @code{a =\n@@ -326,8 +308,7 @@ on most systems, but with @option{-fno-range-check} the value will\n ``wrap around'' and @code{i} will be initialized to @math{-1} instead.\n \n @item -std=@var{std}\n-@cindex @code{-std=}@var{std} option\n-@cindex option, @code{-std=}@var{std}\n+@opindex @code{std=}@var{std} option\n Specify the standard to which the program is expected to conform, which\n may be one of @samp{f95}, @samp{f2003}, @samp{gnu}, or @samp{legacy}.\n The default value for @var{std} is @samp{gnu}, which specifies a\n@@ -375,23 +356,20 @@ by GNU Fortran:\n \n @table @gcctabopt\n @item -fmax-errors-@var{n}\n-@cindex @code{-fmax-errors-}@var{n} option\n-@cindex option, @code{-fmax-errors-}@var{n}\n+@opindex @code{fmax-errors-}@var{n}\n @cindex errors, limiting\n Limits the maximum number of error messages to @var{n}, at which point\n GNU Fortran bails out rather than attempting to continue processing the\n source code.  If @var{n} is 0, there is no limit on the number of error\n messages produced.\n \n @item -fsyntax-only\n-@cindex @code{-fsyntax-only} option\n-@cindex option, @code{-fsyntax-only}\n+@opindex @code{fsyntax-only}\n @cindex syntax checking\n Check the code for syntax errors, but don't do anything beyond that.\n \n @item -pedantic\n-@cindex @code{-pedantic} option\n-@cindex option, @code{-pedantic}\n+@opindex @code{pedantic}\n Issue warnings for uses of extensions to Fortran 95.\n @option{-pedantic} also applies to C-language constructs where they\n occur in GNU Fortran source files, such as use of @samp{\\e} in a\n@@ -412,19 +390,17 @@ This should be used in conjunction with @option{-std=f95} or\n @option{-std=f2003}.\n \n @item -pedantic-errors\n-@cindex @code{-pedantic-errors} option\n-@cindex option, @code{-pedantic-errors}\n+@opindex @code{pedantic-errors}\n Like @option{-pedantic}, except that errors are produced rather than\n warnings.\n \n @item -w\n-@cindex @code{-w} option\n-@cindex option, @code{-w}\n+@opindex @code{w}\n+@cindex warnings, none\n Inhibit all warning messages.\n \n @item -Wall\n-@cindex @code{-Wall} option\n-@cindex option, @code{-Wall}\n+@opindex @code{Wall}\n @cindex all warnings\n @cindex warnings, all\n Enables commonly used warning options pertaining to usage that\n@@ -434,9 +410,9 @@ This currently includes @option{-Waliasing},\n @option{-Wno-tabs}, and @option{-Wline-truncation}.\n \n @item -Waliasing\n-@cindex @code{-Waliasing} option\n-@cindex option, @code{-Waliasing}\n+@opindex @code{Waliasing}\n @cindex aliasing\n+@cindex warnings, aliasing\n Warn about possible aliasing of dummy arguments. Specifically, it warns\n if the same actual argument is associated with a dummy argument with\n @code{INTENT(IN)} and a dummy argument with @code{INTENT(OUT)} in a call\n@@ -456,8 +432,8 @@ The following example will trigger the warning.\n @end smallexample\n \n @item -Wampersand\n-@cindex @code{-Wampersand} option\n-@cindex option, @code{-Wampersand}\n+@opindex @code{Wampersand}\n+@cindex warnings, ampersand\n @cindex ampersand\n Warn about missing ampersand in continued character constants. The warning is\n given with @option{-Wampersand}, @option{-pedantic}, @option{-std=f95}, and\n@@ -466,33 +442,32 @@ constant, GNU Fortran assumes continuation at the first non-comment,\n non-whitespace character after the ampersand that initiated the continuation.\n \n @item -Wcharacter-truncation\n-@cindex @code{-Wcharacter-truncation} option\n-@cindex option, @code{-Wcharacter-truncation}\n+@opindex @code{Wcharacter-truncation}\n+@cindex warnings, character truncation\n Warn when a character assignment will truncate the assigned string.\n \n @item -Wconversion\n-@cindex @code{-Wconversion} option\n-@cindex option, @code{-Wconversion}\n+@opindex @code{Wconversion}\n+@cindex warnings, conversion\n @cindex conversion\n Warn about implicit conversions between different types.\n \n @item -Wimplicit-interface\n-@cindex @code{-Wimplicit-interface} option\n-@cindex option, @code{-Wimplicit-interface}\n+@opindex @code{Wimplicit-interface}\n+@cindex warnings, implicit interface\n Warn if a procedure is called without an explicit interface.\n Note this only checks that an explicit interface is present.  It does not\n check that the declared interfaces are consistent across program units.\n \n @item -Wnonstd-intrinsics\n-@cindex @code{-Wnonstd-intrinsics} option\n-@cindex option, @code{-Wnonstd-intrinsics}\n+@opindex @code{Wnonstd-intrinsics}\n+@cindex warnings, non-stdandard intrinsics\n Warn if the user tries to use an intrinsic that does not belong to the \n standard the user has chosen via the @option{-std} option.\n \n @item -Wsurprising\n-@cindex @code{-Wsurprising} option\n-@cindex option, @code{-Wsurprising}\n-@cindex Suspicious code\n+@opindex @code{Wsurprising}\n+@cindex warnings, suspicious code\n Produce a warning when ``suspicious'' code constructs are encountered.\n While technically legal these usually indicate that an error has been made.\n \n@@ -508,32 +483,31 @@ A LOGICAL SELECT construct has three CASE statements.\n @end itemize\n \n @item -Wtabs\n-@cindex @code{-Wtabs} option\n-@cindex option, @code{-Wtabs}\n-@cindex Tabs\n+@opindex @code{Wtabs}\n+@cindex warnings, tabs\n+@cindex tabs\n By default, tabs are accepted as whitespace, but tabs are not members\n of the Fortran Character Set.  @option{-Wno-tabs} will cause a warning\n to be issued if a tab is encountered. Note, @option{-Wno-tabs} is active\n for @option{-pedantic}, @option{-std=f95}, @option{-std=f2003}, and\n @option{-Wall}.\n \n @item -Wunderflow\n-@cindex @code{-Wunderflow} option\n-@cindex option, @code{-Wunderflow}\n-@cindex UNDERFLOW\n+@opindex @code{Wunderflow}\n+@cindex warnings, underflow\n+@cindex underflow\n Produce a warning when numerical constant expressions are\n encountered, which yield an UNDERFLOW during compilation.\n \n @item -Werror\n-@cindex @code{-Werror} option\n-@cindex option, @code{-Werror}\n+@opindex @code{Werror}\n+@cindex warnings, to errors\n Turns all warnings into errors.\n \n @item -W\n-@cindex @code{-W} option\n-@cindex option, @code{-W}\n-@cindex extra warnings\n+@opindex @code{W}\n @cindex warnings, extra\n+@cindex extra warnings\n Turns on ``extra warnings'' and, if optimization is specified\n via @option{-O}, the @option{-Wuninitialized} option.\n (This might change in future versions of GNU Fortran.)\n@@ -556,14 +530,12 @@ either your program or the GNU Fortran compiler.\n \n @table @gcctabopt\n @item -fdump-parse-tree\n-@cindex @code{-fdump-parse-tree} option\n-@cindex option, @code{-fdump-parse-tree}\n+@opindex @code{fdump-parse-tree}\n Output the internal parse tree before starting code generation.  Only\n really useful for debugging the GNU Fortran compiler itself.\n \n @item -ffpe-trap=@var{list}\n-@cindex @code{-ffpe-trap=}@var{list} option\n-@cindex option, @code{-ffpe-trap=}@var{list}\n+@opindex @code{ffpe-trap=}@var{list}\n Specify a list of IEEE exceptions when a Floating Point Exception\n (FPE) should be raised.  On most systems, this will result in a SIGFPE\n signal being sent and the program being interrupted, producing a core\n@@ -575,23 +547,20 @@ zero), @samp{overflow} (overflow in a floating point operation),\n @samp{precision} (loss of precision during operation) and @samp{denormal}\n (operation produced a denormal value).\n \n-@cindex -fbacktrace option\n-@cindex options, -fbacktrace\n @item -fbacktrace\n+@opindex @code{fbacktrace}\n @cindex backtrace\n @cindex trace\n Specify that, when a runtime error is encountered, the Fortran runtime\n library should output a backtrace of the error.  This option\n only has influence for compilation of the Fortran main program.\n \n-@cindex -fdump-core option\n-@cindex options, -fdump-core\n @item -fdump-core\n @cindex core\n+@cindex @code{fdump-core}\n Request that a core-dump file is written to disk when a runtime error\n is encountered on systems that support core dumps. This option is\n only effective for the compilation of the Fortran main program.\n-\n @end table\n \n @xref{Debugging Options,,Options for Debugging Your Program or GCC,\n@@ -614,8 +583,7 @@ Fortran source.\n \n @table @gcctabopt\n @item -I@var{dir}\n-@cindex @code{-I}@var{dir} option\n-@cindex option, @code{-I}@var{dir}\n+@opindex @code{I}@var{dir}\n @cindex directory, search paths for inclusion\n @cindex inclusion, directory search paths for\n @cindex search paths, for included files\n@@ -639,10 +607,8 @@ gcc,Using the GNU Compiler Collection (GCC)}, for information on the\n \n @item -M@var{dir}\n @item -J@var{dir}\n-@cindex @code{-M}@var{dir} option\n-@cindex option, @code{-M}@var{dir}\n-@cindex @code{-J}@var{dir} option\n-@cindex option, @code{-J}@var{dir}\n+@opindex @code{M}@var{dir}\n+@opindex @code{J}@var{dir}\n @cindex paths, search\n @cindex module search path\n This option specifies where to put @file{.mod} files for compiled modules.\n@@ -655,8 +621,7 @@ The default is the current directory.\n GCC options.\n \n @item -fintrinsic-modules-path @var{dir}\n-@cindex @code{-fintrinsic-modules-path} @var{dir} option\n-@cindex option, @code{-fintrinsic-modules-path}@var{dir}\n+@opindex @code{fintrinsic-modules-path} @var{dir}\n @cindex paths, search\n @cindex module search path\n This option specifies the location of pre-compiled intrinsic modules, if\n@@ -670,8 +635,7 @@ they are not in the default location expected by the compiler.\n These options affect the runtime behavior of programs compiled with GNU Fortran.\n @table @gcctabopt\n @item -fconvert=@var{conversion}\n-@cindex @code{-fconvert=}@var{conversion} option\n-@cindex option, @code{-fconvert=}@var{conversion}\n+@opindex @code{fconvert=}@var{conversion}\n Specify the representation of data for unformatted files.  Valid\n values for conversion are: @samp{native}, the default; @samp{swap},\n swap between big- and little-endian; @samp{big-endian}, use big-endian\n@@ -683,8 +647,7 @@ The @code{CONVERT} specifier and the GFORTRAN_CONVERT_UNIT environment\n variable override the default specified by @option{-fconvert}.}\n \n @item -frecord-marker=@var{length}\n-@cindex @code{-frecord-marker=}@var{length} option\n-@cindex option, @code{-frecord-marker=}@var{length}\n+@opindex @code{frecord-marker=}@var{length}\n Specify the length of record markers for unformatted files.\n Valid values for @var{length} are 4 and 8.  Default is 4.\n @emph{This is different from previous versions of gfortran},\n@@ -693,8 +656,7 @@ systems.  If you want to read or write files compatible\n with earlier versions of gfortran, use @option{-frecord-marker=8}.\n \n @item -fmax-subrecord-length=@var{length}\n-@cindex @code{-fmax-subrecord-length=}@var{length} option\n-@cindex option, @code{-fmax-subrecord-length=}@var{length}\n+@opindex @code{fmax-subrecord-length=}@var{length}\n Specify the maximum length for a subrecord.  The maximum permitted\n value for length is 2147483639, which is also the default.  Only\n really useful for use by the gfortran testsuite.\n@@ -717,8 +679,7 @@ it.\n \n @table @gcctabopt\n @item -fno-automatic\n-@cindex @code{-fno-automatic} option\n-@cindex option, @code{-fno-automatic}\n+@opindex @code{fno-automatic}\n @cindex SAVE statement\n @cindex statements, SAVE\n Treat each program unit as if the @code{SAVE} statement was specified for\n@@ -727,8 +688,7 @@ blocks. (Some Fortran compilers provide this option under the name\n @option{-static}.)\n \n @item -ff2c\n-@cindex @code{-ff2c} option\n-@cindex option, @code{-ff2c}\n+@opindex @code{ff2c}\n @cindex calling convention\n @cindex @command{f2c} calling convention\n @cindex @command{g77} calling convention\n@@ -762,8 +722,7 @@ of type default @code{REAL} or @code{COMPLEX} as actual arguments, as\n the library implementations use the @option{-fno-f2c} calling conventions.\n \n @item -fno-underscoring\n-@cindex @code{-fno-underscoring option}\n-@cindex option, @code{-fno-underscoring}\n+@opindex @code{fno-underscoring}\n @cindex underscore\n @cindex symbol names, underscores\n @cindex transforming symbol names\n@@ -833,8 +792,7 @@ prevent accidental linking between procedures with incompatible\n interfaces.\n \n @item -fsecond-underscore\n-@cindex @code{-fsecond-underscore option}\n-@cindex option, @code{-fsecond-underscore}\n+@opindex @code{fsecond-underscore}\n @cindex underscore\n @cindex symbol names, underscores\n @cindex transforming symbol names\n@@ -859,8 +817,7 @@ for compatibility with @command{g77} and @command{f2c}, and is implied\n by use of the @option{-ff2c} option.\n \n @item -fbounds-check\n-@cindex @code{-fbounds-check} option\n-@cindex option, @code{-fbounds-check}\n+@opindex @code{fbounds-check}\n @cindex bounds checking\n @cindex range checking\n @cindex array bounds checking\n@@ -875,8 +832,7 @@ In the future this may also include other forms of checking, e.g., checking\n substring references.\n \n @item -fmax-stack-var-size=@var{n}\n-@cindex @code{-fmax-stack-var-size} option\n-@cindex option, @code{-fmax-stack-var-size}\n+@opindex @code{fmax-stack-var-size}\n This option specifies the size in bytes of the largest array that will be put\n on the stack.\n \n@@ -887,17 +843,15 @@ Future versions of GNU Fortran may improve this behavior.\n The default value for @var{n} is 32768.\n \n @item -fpack-derived\n-@cindex @code{-fpack-derived} option\n-@cindex option, @code{-fpack-derived}\n-@cindex Structure packing\n+@opindex @code{fpack-derived}\n+@cindex structure packing\n This option tells GNU Fortran to pack derived type members as closely as\n possible.  Code compiled with this option is likely to be incompatible\n with code compiled without this option, and may execute slower.\n \n @item -frepack-arrays\n-@cindex @code{-frepack-arrays} option\n-@cindex option, @code{-frepack-arrays}\n-@cindex Repacking arrays\n+@opindex @code{frepack-arrays}\n+@cindex repacking arrays\n In some circumstances GNU Fortran may pass assumed shape array\n sections via a descriptor describing a noncontiguous area of memory.\n This option adds code to the function prologue to repack the data into\n@@ -908,16 +862,14 @@ significant overhead to the function call, especially  when the passed data\n is noncontiguous.\n \n @item -fshort-enums\n-@cindex @code{-fshort-enums} option\n-@cindex option, @code{-fshort-enums}\n+@opindex @code{fshort-enums}\n This option is provided for interoperability with C code that was\n compiled with the @option{-fshort-enums} option.  It will make\n GNU Fortran choose the smallest @code{INTEGER} kind a given\n enumerator set will fit in, and give all its enumerators this kind.\n \n @item -fexternal-blas\n-@cindex @code{-fexternal-blas} option\n-@cindex option, @code{-fexternal-blas}\n+@opindex @code{fexternal-blas}\n This option will make gfortran generate calls to BLAS functions for some\n matrix operations like @code{MATMUL}, instead of using our own\n algorithms, if the size of the matrices involved is larger than a given\n@@ -926,8 +878,7 @@ optimized vendor BLAS library is available.  The BLAS library will have\n to be specified at link time.\n \n @item -fblas-matmul-limit=@var{n}\n-@cindex @code{-fblas-matmul-limit} option\n-@cindex option, @code{-fblas-matmul-limit}\n+@opindex @code{fblas-matmul-limit}\n Only significant when @option{-fexternal-blas} is in effect.\n Matrix multiplication of matrices with size larger than (or equal to) @var{n}\n will be performed by calls to BLAS functions, while others will be"}]}