{"sha": "8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ1NGQyN2U2ZTAxYWQwYTliNDllYmI3YTJhYmE0YTQxOGQ0YTQ5ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-03-08T22:37:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-03-08T22:37:26Z"}, "message": "re PR target/39361 (Many new neon test failures)\n\n\n\tPR target/39361\n\t* tree-inline.c (setup_one_parameter): Do replacement of const argument\n\tby constant in SSA form.\n\nFrom-SVN: r144713", "tree": {"sha": "fcedff145130c2766355dc6f646f4dbf2024824b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcedff145130c2766355dc6f646f4dbf2024824b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e/comments", "author": null, "committer": null, "parents": [{"sha": "ae9b2a481c0f6510271cf12f86cd3b6b86490a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9b2a481c0f6510271cf12f86cd3b6b86490a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae9b2a481c0f6510271cf12f86cd3b6b86490a96"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "90f93eac12cf33c37ae86012769122767af0c455", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e", "patch": "@@ -1,3 +1,9 @@\n+2009-03-07  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR target/39361\n+\t* tree-inline.c (setup_one_parameter): Do replacement of const argument\n+\tby constant in SSA form.\n+\n 2009-03-07  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \tPR middle-end/38028"}, {"sha": "15419c38a67eadd9d5a9604fe6cf1577c2e582e9", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=8454d27e6e01ad0a9b49ebb7a2aba4a418d4a49e", "patch": "@@ -2110,6 +2110,10 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n      We need to construct map for the variable anyway as it might be used\n      in different SSA names when parameter is set in function.\n \n+     Do replacement at -O0 for const arguments replaced by constant.\n+     This is important for builtin_constant_p and other construct requiring\n+     constant argument to be visible in inlined function body.\n+\n      FIXME: This usually kills the last connection in between inlined\n      function parameter and the actual value in debug info.  Can we do\n      better here?  If we just inserted the statement, copy propagation\n@@ -2118,7 +2122,9 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n      We might want to introduce a notion that single SSA_NAME might\n      represent multiple variables for purposes of debugging. */\n   if (gimple_in_ssa_p (cfun) && rhs && def && is_gimple_reg (p)\n-      && optimize\n+      && (optimize\n+          || (TREE_READONLY (p)\n+\t      && is_gimple_min_invariant (rhs)))\n       && (TREE_CODE (rhs) == SSA_NAME\n \t  || is_gimple_min_invariant (rhs))\n       && !SSA_NAME_OCCURS_IN_ABNORMAL_PHI (def))"}]}