{"sha": "0a931ce5d4c3764db08c5eff8400725525b10c0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE5MzFjZTVkNGMzNzY0ZGIwOGM1ZWZmODQwMDcyNTUyNWIxMGMwYQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-03-29T21:55:34Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-03-29T21:55:34Z"}, "message": "convert.c (convert_to_pointer): Preserve the TREE_OVERFLOW and TREE_CONSTANT_OVERFLOW bits of the argument.\n\n\n\t* convert.c (convert_to_pointer): Preserve the TREE_OVERFLOW\n\tand TREE_CONSTANT_OVERFLOW bits of the argument.  Return\n\tquickly if the argument is already of the correct type.\n\tCall fold_build1 instead of build1.  Tidy up blank lines.\n\nFrom-SVN: r112511", "tree": {"sha": "18115d4fa6067f3978ea8494f5cb4225fd5f12cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18115d4fa6067f3978ea8494f5cb4225fd5f12cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a931ce5d4c3764db08c5eff8400725525b10c0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a931ce5d4c3764db08c5eff8400725525b10c0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a931ce5d4c3764db08c5eff8400725525b10c0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a931ce5d4c3764db08c5eff8400725525b10c0a/comments", "author": null, "committer": null, "parents": [{"sha": "9b71c701c6eb4e62c08ddeae78103259282b9179", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b71c701c6eb4e62c08ddeae78103259282b9179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b71c701c6eb4e62c08ddeae78103259282b9179"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "b028b30aa7da54ef1cd232e1d0e09218272f6e10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a931ce5d4c3764db08c5eff8400725525b10c0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a931ce5d4c3764db08c5eff8400725525b10c0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a931ce5d4c3764db08c5eff8400725525b10c0a", "patch": "@@ -1,3 +1,10 @@\n+2006-03-29  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* convert.c (convert_to_pointer): Preserve the TREE_OVERFLOW\n+\tand TREE_CONSTANT_OVERFLOW bits of the argument.  Return\n+\tquickly if the argument is already of the correct type.\n+\tCall fold_build1 instead of build1.  Tidy up blank lines.\n+\n 2006-03-29  David Edelsohn  <edelsohn@gnu.org>\n \n \t* genemit.c (main): Add tm-constrs.h to included headers."}, {"sha": "97977040755c117bd7e4d7ae44fcd7f7ad0c555c", "filename": "gcc/convert.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a931ce5d4c3764db08c5eff8400725525b10c0a/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a931ce5d4c3764db08c5eff8400725525b10c0a/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=0a931ce5d4c3764db08c5eff8400725525b10c0a", "patch": "@@ -33,22 +33,31 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"toplev.h\"\n #include \"langhooks.h\"\n #include \"real.h\"\n-/* Convert EXPR to some pointer or reference type TYPE.\n \n+/* Convert EXPR to some pointer or reference type TYPE.\n    EXPR must be pointer, reference, integer, enumeral, or literal zero;\n    in other cases error is called.  */\n \n tree\n convert_to_pointer (tree type, tree expr)\n {\n+  if (TREE_TYPE (expr) == type)\n+    return expr;\n+\n   if (integer_zerop (expr))\n-    return build_int_cst (type, 0);\n+    {\n+      tree t = build_int_cst (type, 0);\n+      if (TREE_OVERFLOW (expr) || TREE_CONSTANT_OVERFLOW (expr))\n+\tt = force_fit_type (t, 0, TREE_OVERFLOW (expr),\n+\t\t\t    TREE_CONSTANT_OVERFLOW (expr));\n+      return t;\n+    }\n \n   switch (TREE_CODE (TREE_TYPE (expr)))\n     {\n     case POINTER_TYPE:\n     case REFERENCE_TYPE:\n-      return build1 (NOP_EXPR, type, expr);\n+      return fold_build1 (NOP_EXPR, type, expr);\n \n     case INTEGER_TYPE:\n     case ENUMERAL_TYPE:"}]}