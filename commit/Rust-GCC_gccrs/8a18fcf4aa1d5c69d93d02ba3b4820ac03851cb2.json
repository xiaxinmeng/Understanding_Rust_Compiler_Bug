{"sha": "8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExOGZjZjRhYTFkNWM2OWQ5M2QwMmJhM2I0ODIwYWMwMzg1MWNiMg==", "commit": {"author": {"name": "Yuri Rumyantsev", "email": "ysrumyan@gmail.com", "date": "2015-10-13T13:08:31Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-10-13T13:08:31Z"}, "message": "PR tree-optimization/67909, 67947\n\ngcc/\n\n2014-10-13  Yuri Rumyantsev  <ysrumyan@gmail.com>\n\n\tPR tree-optimization/67909, 67947\n\t* tree-ssa-loop-unswitch.c (find_loop_guard): Add check that GUARD_EDGE\n\treally skip the inner loop.\n\ngcc/testsuite/\n\n2014-10-13  Yuri Rumyantsev  <ysrumyan@gmail.com>\n\n\tPR tree-optimization/67909, 67947\n\t* gcc.dg/torture/pr67947.c: New test.\n\nFrom-SVN: r228760", "tree": {"sha": "3a3fb504ba5df97bcda16929a164ffb73bef27ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a3fb504ba5df97bcda16929a164ffb73bef27ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/comments", "author": {"login": "ysrumyan", "id": 44425612, "node_id": "MDQ6VXNlcjQ0NDI1NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/44425612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysrumyan", "html_url": "https://github.com/ysrumyan", "followers_url": "https://api.github.com/users/ysrumyan/followers", "following_url": "https://api.github.com/users/ysrumyan/following{/other_user}", "gists_url": "https://api.github.com/users/ysrumyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysrumyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysrumyan/subscriptions", "organizations_url": "https://api.github.com/users/ysrumyan/orgs", "repos_url": "https://api.github.com/users/ysrumyan/repos", "events_url": "https://api.github.com/users/ysrumyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ysrumyan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92a1d1e1d0a9c07c4ff2c9974f90ed1baee15f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a1d1e1d0a9c07c4ff2c9974f90ed1baee15f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a1d1e1d0a9c07c4ff2c9974f90ed1baee15f27"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "68461a0a575af6f16fd061f403c5875f14555900", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2", "patch": "@@ -1,3 +1,9 @@\n+2014-10-13  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/67909, 67947\n+\t* tree-ssa-loop-unswitch.c (find_loop_guard): Add check that GUARD_EDGE\n+\treally skip the inner loop.\n+\n 2015-10-13  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadbackward.c (fsm_find_control_statement_thread_paths):"}, {"sha": "523b684e8ed2b30e02987ae5d23a08d7e4ee3885", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2", "patch": "@@ -1,3 +1,8 @@\n+2014-10-13  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/67909, 67947\n+\t* gcc.dg/torture/pr67947.c: New test.\n+\n 2015-10-13  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/ssa-thread-13.c: New test."}, {"sha": "5664c48390af54a66aa9e3b3b31246055b789c14", "filename": "gcc/testsuite/gcc.dg/torture/pr67947.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67947.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67947.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67947.c?ref=8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include <stdlib.h>\n+\n+int a;\n+int c;\n+__attribute__((noinline, noclone)) void foo (int x)\n+{\n+  if (x == 0)\n+    c++;\n+}\n+\n+int\n+main (int argc, char* argv[])\n+{\n+  int j, k, b = 0;\n+  if (argc == 0)\n+    b = 1;\n+  for (j = 0; j < 3; j++)\n+    for (k = 0; k < 1; k++)\n+      {\n+\tfoo (0);\n+\tif (b)\n+\t  for (k = -1; a;)\n+\t    ;\n+      }\n+  if (c != 3)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "2edc00031c6e820662470eba54d7d1f117e41cbb", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=8a18fcf4aa1d5c69d93d02ba3b4820ac03851cb2", "patch": "@@ -471,7 +471,6 @@ find_loop_guard (struct loop *loop)\n {\n   basic_block header = loop->header;\n   edge guard_edge, te, fe;\n-  /* bitmap processed, known_invariants;*/\n   basic_block *body = NULL;\n   unsigned i;\n   tree use;\n@@ -529,6 +528,16 @@ find_loop_guard (struct loop *loop)\n   else\n     return NULL;\n \n+  /* Guard edge must skip inner loop.  */\n+  if (!dominated_by_p (CDI_DOMINATORS, loop->inner->header,\n+      guard_edge == fe ? te->dest : fe->dest))\n+    {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file, \"Guard edge %d --> %d is not around the loop!\\n\",\n+\t\t guard_edge->src->index, guard_edge->dest->index);\n+      return NULL;\n+    }\n+\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     fprintf (dump_file,\n \t     \"Considering guard %d -> %d in loop %d\\n\","}]}