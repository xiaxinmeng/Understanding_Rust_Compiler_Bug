{"sha": "b701f46ea6d651aff8dbd267c29213253045e2b6", "node_id": "C_kwDOANBUbNoAKGI3MDFmNDZlYTZkNjUxYWZmOGRiZDI2N2MyOTIxMzI1MzA0NWUyYjY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-24T13:23:36Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-28T19:22:51Z"}, "message": "libstdc++: Skip tests that fail with _GLIBCXX_CONCEPT_CHECKS\n\nThe extension that allows implicitly rebinding a container's allocator\nis not allowed when _GLIBCXX_CONCEPT_CHECKS is defined, so skip the\ntests for that extension.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/23_containers/deque/requirements/explicit_instantiation/3.cc:\n\tDo not test implicit allocator rebinding when _GLIBCXX_CONCEPT_CHECKS\n\tis defined.\n\t* testsuite/23_containers/forward_list/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/explicit_instantiation/5.cc:\n\tLikewise.\n\t* testsuite/23_containers/map/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/map/requirements/explicit_instantiation/5.cc:\n\tLikewise.\n\t* testsuite/23_containers/multimap/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/multimap/requirements/explicit_instantiation/5.cc:\n\tLikewise.\n\t* testsuite/23_containers/multiset/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/multiset/requirements/explicit_instantiation/5.cc:\n\tLikewise.\n\t* testsuite/23_containers/set/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/set/requirements/explicit_instantiation/5.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_map/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_set/requirements/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/ext_pointer/explicit_instantiation/3.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/requirements/explicit_instantiation/3.cc:\n\tLikewise.", "tree": {"sha": "50d6a2525c1f9b4fd695d469b30cd967d21e4d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50d6a2525c1f9b4fd695d469b30cd967d21e4d22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b701f46ea6d651aff8dbd267c29213253045e2b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b701f46ea6d651aff8dbd267c29213253045e2b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b701f46ea6d651aff8dbd267c29213253045e2b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b701f46ea6d651aff8dbd267c29213253045e2b6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afffc96a5259ba4e3f3cca154dc5ea32a496875e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afffc96a5259ba4e3f3cca154dc5ea32a496875e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afffc96a5259ba4e3f3cca154dc5ea32a496875e"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "2a23eaa3f1720eb5f8d73aac862ef4b4f354989e", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -22,7 +22,7 @@\n \n // { dg-do compile }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::deque<int, std::allocator<char> >;"}, {"sha": "60dd1a86c659fa099c743ad06a7bb8a582504073", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -23,7 +23,7 @@\n \n // { dg-do compile { target c++11 } }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::forward_list<int, std::allocator<char> >;"}, {"sha": "f4e42ff575f36df9cbb16a9d57a73adaba0646b1", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -22,7 +22,7 @@\n \n // { dg-do compile }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::list<int, std::allocator<char> >;"}, {"sha": "48443243030610f8bb5196c61d02f4c0ce8f6b52", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/explicit_instantiation/5.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F5.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -24,6 +24,7 @@\n \n // libstdc++/50118\n template class std::list<int, __gnu_test::ExplicitConsAlloc<int> >;\n-#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L\n+#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L \\\n+    && !defined _GLIBCXX_CONCEPT_CHECKS\n template class std::list<int, __gnu_test::ExplicitConsAlloc<char> >;\n #endif"}, {"sha": "f0d5e8aa77363aff4aae6bf6ce320d5fded444be", "filename": "libstdc++-v3/testsuite/23_containers/map/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -22,7 +22,7 @@\n \n // { dg-do compile }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::map<int, double, std::less<int>, std::allocator<char> >;"}, {"sha": "62d48682fe9ec10631447e5665a7e7f68e8a907e", "filename": "libstdc++-v3/testsuite/23_containers/map/requirements/explicit_instantiation/5.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F5.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -27,7 +27,8 @@ using __gnu_test::ExplicitConsAlloc;\n // libstdc++/50118\n template class std::map<int, int, std::less<int>,\n \t\t\tExplicitConsAlloc<std::pair<const int, int> > >;\n-#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L\n+#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L \\\n+    && !defined _GLIBCXX_CONCEPT_CHECKS\n template class std::map<int, int, std::less<int>,\n \t\t\tExplicitConsAlloc<char> >;\n #endif"}, {"sha": "3c7c0af748924879adb49eb801351709abe762a6", "filename": "libstdc++-v3/testsuite/23_containers/multimap/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -22,7 +22,7 @@\n \n // { dg-do compile }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::multimap<int, double, std::less<int>, std::allocator<char> >;"}, {"sha": "87f5ae4de5e95bae93a227fabc1b74615386aa96", "filename": "libstdc++-v3/testsuite/23_containers/multimap/requirements/explicit_instantiation/5.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F5.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -27,7 +27,8 @@ using __gnu_test::ExplicitConsAlloc;\n // libstdc++/50118\n template class std::multimap<int, int, std::less<int>,\n \t\t\t     ExplicitConsAlloc<std::pair<const int, int> > >;\n-#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L\n+#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L \\\n+    && !defined _GLIBCXX_CONCEPT_CHECKS\n template class std::multimap<int, int, std::less<int>,\n \t\t\t     ExplicitConsAlloc<char> >;\n #endif"}, {"sha": "19d64c28148e1af82abe4c5e8c37c2e8885aba02", "filename": "libstdc++-v3/testsuite/23_containers/multiset/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -22,7 +22,7 @@\n \n // { dg-do compile }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::multiset<int, std::less<int>, std::allocator<char> >;"}, {"sha": "00f7fde7afc0fdf1f878755f17f17895db5467d3", "filename": "libstdc++-v3/testsuite/23_containers/multiset/requirements/explicit_instantiation/5.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F5.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -25,7 +25,8 @@\n // libstdc++/50118\n template class std::multiset<int, std::less<int>,\n \t\t\t     __gnu_test::ExplicitConsAlloc<int> >;\n-#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L\n+#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L \\\n+    && !defined _GLIBCXX_CONCEPT_CHECKS\n template class std::multiset<int, std::less<int>,\n \t\t\t     __gnu_test::ExplicitConsAlloc<char> >;\n #endif"}, {"sha": "17c217719cdf37400955f9dee6168588799cecc8", "filename": "libstdc++-v3/testsuite/23_containers/set/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -22,7 +22,7 @@\n \n // { dg-do compile }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::set<int, std::less<int>, std::allocator<char> >;"}, {"sha": "d224e85fbde83a3dfd3358a5799fdb761b0fd233", "filename": "libstdc++-v3/testsuite/23_containers/set/requirements/explicit_instantiation/5.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F5.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -25,7 +25,8 @@\n // libstdc++/50118\n template class std::set<int, std::less<int>,\n \t\t\t__gnu_test::ExplicitConsAlloc<int> >;\n-#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L\n+#if !defined __STRICT_ANSI__ && __cplusplus <= 201703L \\\n+    && !defined _GLIBCXX_CONCEPT_CHECKS\n template class std::set<int, std::less<int>,\n \t\t\t__gnu_test::ExplicitConsAlloc<char> >;\n #endif"}, {"sha": "e9c936760cef3654f86025287403f9be6e8f5fcd", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile { target c++11 } }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // Copyright (C) 2007-2021 Free Software Foundation, Inc.\n //"}, {"sha": "35a47faf7463b3dd97679140c99c8935305fc00b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile { target c++11 } }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // Copyright (C) 2007-2021 Free Software Foundation, Inc.\n //"}, {"sha": "3effea3dc5e9105f826c4657030e6ab0a9b1c775", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile { target c++11 } }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // Copyright (C) 2007-2021 Free Software Foundation, Inc.\n //"}, {"sha": "bd868586f2db515f866c868529816cd1e23946de", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile { target c++11 } }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // Copyright (C) 2007-2021 Free Software Foundation, Inc.\n //"}, {"sha": "0dcfbd6afb22dc3d673bc2e32a196e8d46924f00", "filename": "libstdc++-v3/testsuite/23_containers/vector/ext_pointer/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fext_pointer%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fext_pointer%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fext_pointer%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -25,7 +25,7 @@\n \n // { dg-do compile }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::vector<int, __gnu_cxx::_ExtPtr_allocator<char> >;"}, {"sha": "39316ee9b4c2194634bedc8efc66241d837da56a", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b701f46ea6d651aff8dbd267c29213253045e2b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=b701f46ea6d651aff8dbd267c29213253045e2b6", "patch": "@@ -22,7 +22,7 @@\n \n // { dg-do compile }\n // The extension that implicitly rebinds allocators is in gnu++98/11/14/17 only\n-// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" } }\n+// { dg-skip-if \"\" { *-*-* } { \"-std=c++*\" \"-std=gnu++2*\" \"-D_GLIBCXX_CONCEPT_CHECKS*\" } }\n \n // libstdc++/21770\n template class std::vector<int, std::allocator<char> >;"}]}