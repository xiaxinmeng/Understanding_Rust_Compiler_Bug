{"sha": "128a98eacef4f47310de212932389f740acfa881", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI4YTk4ZWFjZWY0ZjQ3MzEwZGUyMTI5MzIzODlmNzQwYWNmYTg4MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-06-06T08:46:33Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-06-06T08:46:33Z"}, "message": "exp_ch9.adb (Expand_N_Protected_Type_Declaration): Insert the declaration of the corresponding record type before that of the...\n\n\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration): Insert the\n\tdeclaration of the corresponding record type before that of the\n\tunprotected version of the subprograms that operate on it.\n\t(Expand_Access_Protected_Subprogram_Type): Declare the Equivalent_Type\n\tjust before the original type.\n\t* sem_ch3.adb (Handle_Late_Controlled_Primitive): Point the current\n\tdeclaration to the newly created declaration for the primitive.\n\t(Analyze_Subtype_Declaration): Remove obsolete code forcing the\n\tfreezing of the subtype before its declaration.\n\t(Replace_Anonymous_Access_To_Protected_Subprogram): Insert the new\n\tdeclaration in the nearest enclosing scope for formal parameters too.\n\t(Build_Derived_Access_Type): Restore the status of the created Itype\n\tafter it is erased by Copy_Node.\n\t* sem_ch6.adb (Exchange_Limited_Views): Remove guard on entry.\n\t(Analyze_Subprogram_Body_Helper): Call Exchange_Limited_Views only if\n\tthe specification is present.\n\tMove around the code changing the designated view of the return type\n\tand save the original view.  Restore it on exit.\n\t* sem_ch13.adb (Build_Predicate_Function_Declaration): Always insert\n\tthe declaration right after that of the type.\n\nFrom-SVN: r237118", "tree": {"sha": "fac2591c5ef34b70b2e1d2e3d34d88d12e4a84dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fac2591c5ef34b70b2e1d2e3d34d88d12e4a84dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/128a98eacef4f47310de212932389f740acfa881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128a98eacef4f47310de212932389f740acfa881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/128a98eacef4f47310de212932389f740acfa881", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128a98eacef4f47310de212932389f740acfa881/comments", "author": null, "committer": null, "parents": [{"sha": "9fcebb5aa882861d403b87a572f17c69c8ecab08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fcebb5aa882861d403b87a572f17c69c8ecab08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fcebb5aa882861d403b87a572f17c69c8ecab08"}], "stats": {"total": 146, "additions": 85, "deletions": 61}, "files": [{"sha": "12a2483b43d8be7e16e07712a3df4ae6dc69f5e3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=128a98eacef4f47310de212932389f740acfa881", "patch": "@@ -1,3 +1,26 @@\n+2016-06-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration): Insert the\n+\tdeclaration of the corresponding record type before that of the\n+\tunprotected version of the subprograms that operate on it.\n+\t(Expand_Access_Protected_Subprogram_Type): Declare the Equivalent_Type\n+\tjust before the original type.\n+\t* sem_ch3.adb (Handle_Late_Controlled_Primitive): Point the current\n+\tdeclaration to the newly created declaration for the primitive.\n+\t(Analyze_Subtype_Declaration): Remove obsolete code forcing the\n+\tfreezing of the subtype before its declaration.\n+\t(Replace_Anonymous_Access_To_Protected_Subprogram): Insert the new\n+\tdeclaration in the nearest enclosing scope for formal parameters too.\n+\t(Build_Derived_Access_Type): Restore the status of the created Itype\n+\tafter it is erased by Copy_Node.\n+\t* sem_ch6.adb (Exchange_Limited_Views): Remove guard on entry.\n+\t(Analyze_Subprogram_Body_Helper): Call Exchange_Limited_Views only if\n+\tthe specification is present.\n+\tMove around the code changing the designated view of the return type\n+\tand save the original view.  Restore it on exit.\n+\t* sem_ch13.adb (Build_Predicate_Function_Declaration): Always insert\n+\tthe declaration right after that of the type.\n+\n 2016-06-01  Simon Wright  <simon@pushface.org>\n \n \tPR ada/71358"}, {"sha": "d8ccafa6f4033c703ed43a795db66403e285400b", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=128a98eacef4f47310de212932389f740acfa881", "patch": "@@ -6257,7 +6257,10 @@ package body Exp_Ch9 is\n           Defining_Identifier => D_T2,\n           Type_Definition     => Def1);\n \n-      Insert_After_And_Analyze (N, Decl1);\n+      --  Declare the new types before the original one since the latter will\n+      --  refer to them through the Equivalent_Type slot.\n+\n+      Insert_Before_And_Analyze (N, Decl1);\n \n       --  Associate the access to subprogram with its original access to\n       --  protected subprogram type. Needed by the backend to know that this\n@@ -6292,7 +6295,7 @@ package body Exp_Ch9 is\n               Component_List =>\n                 Make_Component_List (Loc, Component_Items => Comps)));\n \n-      Insert_After_And_Analyze (Decl1, Decl2);\n+      Insert_Before_And_Analyze (N, Decl2);\n       Set_Equivalent_Type (T, E_T);\n    end Expand_Access_Protected_Subprogram_Type;\n \n@@ -9316,6 +9319,9 @@ package body Exp_Ch9 is\n \n       pragma Assert (Present (Pdef));\n \n+      Insert_After (Current_Node, Rec_Decl);\n+      Current_Node := Rec_Decl;\n+\n       --  Add private field components\n \n       if Present (Private_Declarations (Pdef)) then\n@@ -9576,9 +9582,6 @@ package body Exp_Ch9 is\n          Append_To (Cdecls, Object_Comp);\n       end if;\n \n-      Insert_After (Current_Node, Rec_Decl);\n-      Current_Node := Rec_Decl;\n-\n       --  Analyze the record declaration immediately after construction,\n       --  because the initialization procedure is needed for single object\n       --  declarations before the next entity is analyzed (the freeze call"}, {"sha": "06e5d1b66e5b1a5a330011afa92d1a9242d2807b", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=128a98eacef4f47310de212932389f740acfa881", "patch": "@@ -9386,11 +9386,7 @@ package body Sem_Ch13 is\n       Set_Is_Predicate_Function (SId);\n       Set_Predicate_Function (Typ, SId);\n \n-      if Comes_From_Source (Typ) then\n-         Insert_After (Parent (Typ), FDecl);\n-      else\n-         Insert_After (Parent (Base_Type (Typ)), FDecl);\n-      end if;\n+      Insert_After (Parent (Typ), FDecl);\n \n       Analyze (FDecl);\n "}, {"sha": "642b880c8c539821b338810f689fe3d2a17444b8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=128a98eacef4f47310de212932389f740acfa881", "patch": "@@ -2168,7 +2168,7 @@ package body Sem_Ch3 is\n       --  Determine whether Body_Decl denotes the body of a late controlled\n       --  primitive (either Initialize, Adjust or Finalize). If this is the\n       --  case, add a proper spec if the body lacks one. The spec is inserted\n-      --  before Body_Decl and immedately analyzed.\n+      --  before Body_Decl and immediately analyzed.\n \n       procedure Remove_Visible_Refinements (Spec_Id : Entity_Id);\n       --  Spec_Id is the entity of a package that may define abstract states.\n@@ -2269,8 +2269,12 @@ package body Sem_Ch3 is\n \n          Set_Null_Present (Spec, False);\n \n-         Insert_Before_And_Analyze (Body_Decl,\n-           Make_Subprogram_Declaration (Loc, Specification => Spec));\n+         --  Ensure that the freeze node is inserted after the declaration of\n+         --  the primitive since its expansion will freeze the primitive.\n+\n+         Decl := Make_Subprogram_Declaration (Loc, Specification => Spec);\n+\n+         Insert_Before_And_Analyze (Body_Decl, Decl);\n       end Handle_Late_Controlled_Primitive;\n \n       --------------------------------\n@@ -5246,20 +5250,6 @@ package body Sem_Ch3 is\n          Set_Invariant_Procedure (Id, Invariant_Procedure (T));\n       end if;\n \n-      --  Make sure that generic actual types are properly frozen. The subtype\n-      --  is marked as a generic actual type when the enclosing instance is\n-      --  analyzed, so here we identify the subtype from the tree structure.\n-\n-      if Expander_Active\n-        and then Is_Generic_Actual_Type (Id)\n-        and then In_Instance\n-        and then not Comes_From_Source (N)\n-        and then Nkind (Subtype_Indication (N)) /= N_Subtype_Indication\n-        and then Is_Frozen (T)\n-      then\n-         Freeze_Before (N, Id);\n-      end if;\n-\n       Set_Optimize_Alignment_Flags (Id);\n       Check_Eliminated (Id);\n \n@@ -5851,15 +5841,20 @@ package body Sem_Ch3 is\n       end if;\n \n       --  Insert the new declaration in the nearest enclosing scope. If the\n-      --  node is a body and N is its return type, the declaration belongs in\n-      --  the enclosing scope.\n+      --  parent is a body and N is its return type, the declaration belongs\n+      --  in the enclosing scope. Likewise if N is the type of a parameter.\n \n       P := Parent (N);\n \n-      if Nkind (P) = N_Subprogram_Body\n-        and then Nkind (N) = N_Function_Specification\n+      if Nkind (N) = N_Function_Specification\n+        and then Nkind (P) = N_Subprogram_Body\n       then\n          P := Parent (P);\n+      elsif Nkind (N) = N_Parameter_Specification\n+        and then Nkind (P) in N_Subprogram_Specification\n+        and then Nkind (Parent (P)) = N_Subprogram_Body\n+      then\n+         P := Parent (Parent (P));\n       end if;\n \n       while Present (P) and then not Has_Declarations (P) loop\n@@ -5974,6 +5969,11 @@ package body Sem_Ch3 is\n          begin\n             Copy_Node (Pbase, Ibase);\n \n+            --  Restore Itype status after Copy_Node\n+\n+            Set_Is_Itype (Ibase);\n+            Set_Associated_Node_For_Itype (Ibase, N);\n+\n             Set_Chars             (Ibase, Svg_Chars);\n             Set_Next_Entity       (Ibase, Svg_Next_E);\n             Set_Sloc              (Ibase, Sloc (Derived_Type));"}, {"sha": "a6ac2920076666b2ca813679ed3569714bc4c81b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 32, "deletions": 30, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/128a98eacef4f47310de212932389f740acfa881/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=128a98eacef4f47310de212932389f740acfa881", "patch": "@@ -2149,6 +2149,7 @@ package body Sem_Ch6 is\n       Body_Id      : Entity_Id           := Defining_Entity (Body_Spec);\n       Prev_Id      : constant Entity_Id  := Current_Entity_In_Scope (Body_Id);\n       Exch_Views   : Elist_Id            := No_Elist;\n+      Desig_View   : Entity_Id           := Empty;\n       Conformant   : Boolean;\n       HSS          : Node_Id;\n       Prot_Typ     : Entity_Id := Empty;\n@@ -2914,13 +2915,10 @@ package body Sem_Ch6 is\n       --  Start of processing for Exchange_Limited_Views\n \n       begin\n-         if No (Subp_Id) then\n-            return No_Elist;\n-\n          --  Do not process subprogram bodies as they already use the non-\n          --  limited view of types.\n \n-         elsif not Ekind_In (Subp_Id, E_Function, E_Procedure) then\n+         if not Ekind_In (Subp_Id, E_Function, E_Procedure) then\n             return No_Elist;\n          end if;\n \n@@ -3665,31 +3663,6 @@ package body Sem_Ch6 is\n          Set_SPARK_Pragma_Inherited (Body_Id);\n       end if;\n \n-      --  If the return type is an anonymous access type whose designated type\n-      --  is the limited view of a class-wide type and the non-limited view is\n-      --  available, update the return type accordingly.\n-\n-      if Ada_Version >= Ada_2005 and then Comes_From_Source (N) then\n-         declare\n-            Etyp : Entity_Id;\n-            Rtyp : Entity_Id;\n-\n-         begin\n-            Rtyp := Etype (Current_Scope);\n-\n-            if Ekind (Rtyp) = E_Anonymous_Access_Type then\n-               Etyp := Directly_Designated_Type (Rtyp);\n-\n-               if Is_Class_Wide_Type (Etyp)\n-                 and then From_Limited_With (Etyp)\n-               then\n-                  Set_Directly_Designated_Type\n-                    (Etype (Current_Scope), Available_View (Etyp));\n-               end if;\n-            end if;\n-         end;\n-      end if;\n-\n       --  If this is the proper body of a stub, we must verify that the stub\n       --  conforms to the body, and to the previous spec if one was present.\n       --  We know already that the body conforms to that spec. This test is\n@@ -3918,10 +3891,35 @@ package body Sem_Ch6 is\n       --  of a subprogram body may use the parameter and result profile of the\n       --  spec, swap any limited views with their non-limited counterpart.\n \n-      if Ada_Version >= Ada_2012 then\n+      if Ada_Version >= Ada_2012 and then Present (Spec_Id) then\n          Exch_Views := Exchange_Limited_Views (Spec_Id);\n       end if;\n \n+      --  If the return type is an anonymous access type whose designated type\n+      --  is the limited view of a class-wide type and the non-limited view is\n+      --  available, update the return type accordingly.\n+\n+      if Ada_Version >= Ada_2005 and then Present (Spec_Id) then\n+         declare\n+            Etyp : Entity_Id;\n+            Rtyp : Entity_Id;\n+\n+         begin\n+            Rtyp := Etype (Spec_Id);\n+\n+            if Ekind (Rtyp) = E_Anonymous_Access_Type then\n+               Etyp := Directly_Designated_Type (Rtyp);\n+\n+               if Is_Class_Wide_Type (Etyp)\n+                 and then From_Limited_With (Etyp)\n+               then\n+                  Desig_View := Etyp;\n+                  Set_Directly_Designated_Type (Rtyp, Available_View (Etyp));\n+               end if;\n+            end if;\n+         end;\n+      end if;\n+\n       --  Analyze any aspect specifications that appear on the subprogram body\n \n       if Has_Aspects (N) then\n@@ -4191,6 +4189,10 @@ package body Sem_Ch6 is\n          Restore_Limited_Views (Exch_Views);\n       end if;\n \n+      if Present (Desig_View) then\n+         Set_Directly_Designated_Type (Etype (Spec_Id), Desig_View);\n+      end if;\n+\n       Ghost_Mode := Save_Ghost_Mode;\n    end Analyze_Subprogram_Body_Helper;\n "}]}