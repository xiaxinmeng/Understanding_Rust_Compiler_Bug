{"sha": "90280148a6f4613dd7d747c3e6bf1c9344c2de10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAyODAxNDhhNmY0NjEzZGQ3ZDc0N2MzZTZiZjFjOTM0NGMyZGUxMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2000-06-04T02:03:03Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2000-06-04T02:03:03Z"}, "message": "add IFCVT_MODIFY macros for the MD file to tweak the conditional execution support.\n\nFrom-SVN: r34386", "tree": {"sha": "fd14eca2800c1070ec9806803dfc2f1ae1a25fb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd14eca2800c1070ec9806803dfc2f1ae1a25fb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90280148a6f4613dd7d747c3e6bf1c9344c2de10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90280148a6f4613dd7d747c3e6bf1c9344c2de10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90280148a6f4613dd7d747c3e6bf1c9344c2de10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90280148a6f4613dd7d747c3e6bf1c9344c2de10/comments", "author": null, "committer": null, "parents": [{"sha": "7a50d89174fd0dfee1a44807234d3fce13a72f89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a50d89174fd0dfee1a44807234d3fce13a72f89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a50d89174fd0dfee1a44807234d3fce13a72f89"}], "stats": {"total": 75, "additions": 74, "deletions": 1}, "files": [{"sha": "10c6069c85d989735c3ab0520732ca7ec5818483", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90280148a6f4613dd7d747c3e6bf1c9344c2de10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90280148a6f4613dd7d747c3e6bf1c9344c2de10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90280148a6f4613dd7d747c3e6bf1c9344c2de10", "patch": "@@ -1,3 +1,18 @@\n+Sat Jun  3 19:05:30 2000  Michael Meissner  <meissner@redhat.com>\n+\n+\t* ifcvt (process_insns): If IFCVT_MODIFY_INSN is defined, call it\n+\twith the pattern to do machine dependent work.\n+\t(cond_exec_process_if_block): If IFCVT_MODIFY_TESTS is defined,\n+\tuse it to modify the true/false tests used in conditional\n+\texecution.  If IFCVT_MODIFY_FINAL and IFCVT_MODIFY_CANCEL are\n+\tdefined, invoke them if the conversion to conditional execution\n+\twas successful or not.\n+\n+\t* tm.texi (IFCVT_MODIFY_TESTS): Document.\n+\t(IFCVT_MODIFY_INSN): Ditto.\n+\t(IFCVT_MODIFY_FINAL): Ditto.\n+\t(IFCVT_MODIFY_CANCEL): Ditto.\n+\n Sat Jun  3 15:26:13 2000  Matt Kraai <kraai@alumni.carnegiemellon.edu>\n \n \t* toplev.c (main): Fix misspellings of possibility and language."}, {"sha": "512983f5393020b16c27e9f080d59beb1320fe5e", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90280148a6f4613dd7d747c3e6bf1c9344c2de10/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90280148a6f4613dd7d747c3e6bf1c9344c2de10/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=90280148a6f4613dd7d747c3e6bf1c9344c2de10", "patch": "@@ -207,6 +207,7 @@ cond_exec_process_insns (start, end, test, prob_val, mod_ok)\n {\n   int must_be_last = FALSE;\n   rtx insn;\n+  rtx pattern;\n \n   for (insn = start; ; insn = NEXT_INSN (insn))\n     {\n@@ -239,9 +240,20 @@ cond_exec_process_insns (start, end, test, prob_val, mod_ok)\n \t}\n \n       /* Now build the conditional form of the instruction.  */\n+      pattern = PATTERN (insn);\n+\n+      /* If the machine needs to modify the insn being conditionally executed,\n+         say for example to force a constant integer operand into a temp\n+         register, do so here.  */\n+#ifdef IFCVT_MODIFY_INSN\n+      IFCVT_MODIFY_INSN (pattern, insn);\n+      if (! pattern)\n+\treturn FALSE;\n+#endif\n+\n       validate_change (insn, &PATTERN (insn),\n \t\t       gen_rtx_COND_EXEC (VOIDmode, copy_rtx (test),\n-\t\t\t\t\t  PATTERN (insn)), 1);\n+\t\t\t\t\t  pattern), 1);\n \n       if (GET_CODE (insn) == CALL_INSN && prob_val)\n \tvalidate_change (insn, &REG_NOTES (insn),\n@@ -369,6 +381,17 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n \t\t\t       GET_MODE (true_expr), XEXP (true_expr, 0),\n \t\t\t       XEXP (true_expr, 1));\n \n+#ifdef IFCVT_MODIFY_TESTS\n+  /* If the machine description needs to modify the tests, such as setting a\n+     conditional execution register from a comparison, it can do so here.  */\n+  IFCVT_MODIFY_TESTS (true_expr, false_expr, test_bb, then_bb, else_bb,\n+\t\t      join_bb);\n+\n+  /* See if the conversion failed */\n+  if (!true_expr || !false_expr)\n+    goto fail;\n+#endif\n+\n   true_prob_val = find_reg_note (test_bb->end, REG_BR_PROB, NULL_RTX);\n   if (true_prob_val)\n     {\n@@ -398,6 +421,11 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n   if (! apply_change_group ())\n     return FALSE;\n \n+#ifdef IFCVT_MODIFY_FINAL\n+  /* Do any machine dependent final modifications */\n+  IFCVT_MODIFY_FINAL (test_bb, then_bb, else_bb, join_bb);\n+#endif\n+\n   /* Conversion succeeded.  */\n   if (rtl_dump_file)\n     fprintf (rtl_dump_file, \"%d insn%s converted to conditional execution.\\n\",\n@@ -408,6 +436,11 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n   return TRUE;\n \n  fail:\n+#ifdef IFCVT_MODIFY_CANCEL\n+  /* Cancel any machine dependent changes.  */\n+  IFCVT_MODIFY_CANCEL (test_bb, then_bb, else_bb, join_bb);\n+#endif\n+\n   cancel_changes (0);\n   return FALSE;\n }"}, {"sha": "4648778daf9e783319eb65ffa25755846bc8be31", "filename": "gcc/tm.texi", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90280148a6f4613dd7d747c3e6bf1c9344c2de10/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90280148a6f4613dd7d747c3e6bf1c9344c2de10/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=90280148a6f4613dd7d747c3e6bf1c9344c2de10", "patch": "@@ -7973,4 +7973,29 @@ A C expression for the maximum number of instructions to execute via\n conditional execution instructions instead of a branch.  A value of\n @code{BRANCH_COST}+1 is the default if the machine does not use cc0, and\n 1 if it does use cc0.\n+\n+@findex IFCVT_MODIFY_TESTS\n+@item IFCVT_MODIFY_TESTS\n+A C expression to modify the tests in @code{TRUE_EXPR}, and\n+@code{FALSE_EXPPR} for use in converting insns in @code{TEST_BB},\n+@code{THEN_BB}, @code{ELSE_BB}, and @code{JOIN_BB} basic blocks to\n+conditional execution.  Set either @code{TRUE_EXPR} or @code{FALSE_EXPR}\n+to a null pointer if the tests cannot be converted.\n+\n+@findex IFCVT_MODIFY_INSN\n+@item IFCVT_MODIFY_INSN\n+A C expression to modify the @code{PATTERN} of an @code{INSN} that is to\n+be converted to conditional execution format.\n+\n+@findex IFCVT_MODIFY_FINAL\n+@item IFCVT_MODIFY_FINAL\n+A C expression to perform any final machine dependent modifications in\n+converting code to conditional execution in the basic blocks\n+@code{TEST_BB}, @code{THEN_BB}, @code{ELSE_BB}, and @code{JOIN_BB}.\n+\n+@findex IFCVT_MODIFY_CANCEL\n+@item IFCVT_MODIFY_CANCEL\n+A C expression to cancel any machine dependent modifications in\n+converting code to conditional execution in the basic blocks\n+@code{TEST_BB}, @code{THEN_BB}, @code{ELSE_BB}, and @code{JOIN_BB}.\n @end table"}]}