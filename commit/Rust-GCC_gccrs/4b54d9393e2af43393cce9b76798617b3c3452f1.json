{"sha": "4b54d9393e2af43393cce9b76798617b3c3452f1", "node_id": "C_kwDOANBUbNoAKDRiNTRkOTM5M2UyYWY0MzM5M2NjZTliNzY3OTg2MTdiM2MzNDUyZjE", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2021-07-19T19:13:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-22T15:01:45Z"}, "message": "[Ada] Removal of technical debt\n\ngcc/ada/\n\n\t* ali.adb, ali.ads (Scan_ALI): Remove use of deprecated\n\tparameter Ignore_ED, and all specification for Lower in call to\n\tGet_File_Name.\n\t* ali-util.adb (Read_Withed_ALIs): Modify call to Scan_ALI.\n\t* clean.adb (Clean_Executables): Likewise.\n\t* gnatbind.adb (Add_Artificial_ALI_File, Executable section):\n\tLikewise.\n\t* gnatlink.adb (Executable section): Likewise.\n\t* gnatls.adb (Executable section): Likewise.\n\t* make.adb (Check, Wait_For_Available_Slot): Likewise.\n\t* aspects.ads: Add Aspect_No_Controlled_Parts to\n\tNonoverridable_Aspect_Id\n\t* opt.ads: Remove function pointers used as a workaround for\n\tASIS.\n\t* osint-c.adb (Executable section): Remove setting of function\n\tpointer workarounds needed for ASIS.\n\t* osint.adb (Read_Default_Search_Dirs): Correct behavior to\n\tdetect EOL characters.\n\t* par_sco.adb (Output_Header): Remove comment regarding use of\n\tFirst_Sloc.\n\t(Traverse_Sync_Definition): Renamed to\n\tTraverse_Protected_Or_Task_Definition.\n\t* pprint.adb (Interal_List_Name): Add description about purpose,\n\tand refactor conditional statement.\n\t(Prepend): Removed.\n\t* repinfo.adb (List_Rep_Info, Write_Info_Line): Remove use of\n\tsubprogram pointer.\n\t* scng.adb (Scan): Remove CODEFIX question, and minor comment\n\tchange.\n\t* sem_attr.adb (Analyze_Image_Attribute): Remove special\n\tprocessing for 'Img.\n\t* sem_ch6.adb (Check_Untagged_Equality): Add RM reference.\n\t(FCE): Add comment describing behavior.\n\t(Is_Non_Overriding_Operation): Minor comment formatting change.\n\t* sem_type.adb (Is_Actual_Subprogram): Add comment about\n\tComes_From_Source test.\n\t(Matching_Types): Describe non-matching cases.\n\t* sem_util.adb (Is_Confirming): Add stub case for\n\tNo_Controlled_Parts.", "tree": {"sha": "46fd90bdedb2564a12e0e3e86d1aff4904b8a17d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46fd90bdedb2564a12e0e3e86d1aff4904b8a17d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b54d9393e2af43393cce9b76798617b3c3452f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b54d9393e2af43393cce9b76798617b3c3452f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b54d9393e2af43393cce9b76798617b3c3452f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b54d9393e2af43393cce9b76798617b3c3452f1/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbf1ffe1252430f0db0db18b0b695799bb31c242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf1ffe1252430f0db0db18b0b695799bb31c242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbf1ffe1252430f0db0db18b0b695799bb31c242"}], "stats": {"total": 197, "additions": 60, "deletions": 137}, "files": [{"sha": "6c567c33627fe9e23a32d3d43f5c3aa42bb6c071", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -249,7 +249,6 @@ package body ALI.Util is\n                     Scan_ALI\n                       (F         => Afile,\n                        T         => Text,\n-                       Ignore_ED => False,\n                        Err       => False);\n \n                   Free (Text);"}, {"sha": "3815a70c051384abc4c6bf0d3950a06dc08d9e26", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -892,7 +892,6 @@ package body ALI is\n    function Scan_ALI\n      (F                : File_Name_Type;\n       T                : Text_Buffer_Ptr;\n-      Ignore_ED        : Boolean;\n       Err              : Boolean;\n       Ignore_Lines     : String  := \"X\";\n       Ignore_Errors    : Boolean := False;\n@@ -1319,8 +1318,7 @@ package body ALI is\n                      exit when Nextc = ',';\n \n                      --  Terminate if left bracket not part of wide char\n-                     --  sequence Note that we only recognize brackets\n-                     --  notation so far ???\n+                     --  sequence.\n \n                      exit when Nextc = '[' and then T (P + 1) /= '\"';\n \n@@ -2938,9 +2936,7 @@ package body ALI is\n \n                         --  Store AD indication unless ignore required\n \n-                        if not Ignore_ED then\n-                           Withs.Table (Withs.Last).Elab_All_Desirable := True;\n-                        end if;\n+                        Withs.Table (Withs.Last).Elab_All_Desirable := True;\n \n                      elsif Nextc = 'E' then\n                         P := P + 1;\n@@ -2957,12 +2953,9 @@ package body ALI is\n                            Checkc ('D');\n                            Check_At_End_Of_Field;\n \n-                           --  Store ED indication unless ignore required\n+                           --  Store ED indication\n \n-                           if not Ignore_ED then\n-                              Withs.Table (Withs.Last).Elab_Desirable :=\n-                                True;\n-                           end if;\n+                           Withs.Table (Withs.Last).Elab_Desirable := True;\n                         end if;\n \n                      else\n@@ -3213,13 +3206,10 @@ package body ALI is\n             Skip_Space;\n             Sdep.Increment_Last;\n \n-            --  In the following call, Lower is not set to True, this is either\n-            --  a bug, or it deserves a special comment as to why this is so???\n-\n             --  The file/path name may be quoted\n \n             Sdep.Table (Sdep.Last).Sfile :=\n-              Get_File_Name (May_Be_Quoted => True);\n+              Get_File_Name (Lower => True, May_Be_Quoted => True);\n \n             Sdep.Table (Sdep.Last).Stamp := Get_Stamp;\n             Sdep.Table (Sdep.Last).Dummy_Entry :="}, {"sha": "175aea9c132031439b5ae237dc7dbd7dc07ccccd", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -1389,7 +1389,6 @@ package ALI is\n    function Scan_ALI\n      (F                : File_Name_Type;\n       T                : Text_Buffer_Ptr;\n-      Ignore_ED        : Boolean;\n       Err              : Boolean;\n       Ignore_Lines     : String  := \"X\";\n       Ignore_Errors    : Boolean := False;\n@@ -1399,11 +1398,6 @@ package ALI is\n    --  table. Switch settings may be modified as described above in the\n    --  switch description settings.\n    --\n-   --    Ignore_ED is normally False. If set to True, it indicates that\n-   --    all AD/ED (elaboration desirable) indications in the ALI file are\n-   --    to be ignored. This parameter is obsolete now that the -f switch\n-   --    is removed from gnatbind, and should be removed ???\n-   --\n    --    Err determines the action taken on an incorrectly formatted file.\n    --    If Err is False, then an error message is output, and the program\n    --    is terminated. If Err is True, then no error message is output,"}, {"sha": "7d0c7030db81b566c1b7d43624b79c2ce9534b12", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -233,7 +233,7 @@ package Aspects is\n        Aspect_Implicit_Dereference | Aspect_Constant_Indexing |\n        Aspect_Variable_Indexing | Aspect_Aggregate |\n        Aspect_Max_Entry_Queue_Length\n-       --  | Aspect_No_Controlled_Parts\n+        | Aspect_No_Controlled_Parts\n        --  ??? No_Controlled_Parts not yet in Aspect_Id enumeration\n        ;  --  see RM 13.1.1(18.7)\n "}, {"sha": "830a9944b1d7bb3a669416548daabe5c8571b3a8", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -217,7 +217,7 @@ package body Clean is\n \n                if Text /= null then\n                   The_ALI :=\n-                    Scan_ALI (Lib_File, Text, Ignore_ED => False, Err => True);\n+                    Scan_ALI (Lib_File, Text, Err => True);\n                   Free (Text);\n \n                   --  If no error was produced while loading this ALI file,"}, {"sha": "90d8af468df00077d3cea65832f1532fbf7a98eb", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -125,7 +125,6 @@ procedure Gnatbind is\n         Scan_ALI\n           (F             => Std_Lib_File,\n            T             => Text,\n-           Ignore_ED     => False,\n            Err           => False,\n            Ignore_Errors => Debug_Flag_I);\n \n@@ -770,7 +769,6 @@ begin\n             Id := Scan_ALI\n                     (F                => Main_Lib_File,\n                      T                => Text,\n-                     Ignore_ED        => False,\n                      Err              => False,\n                      Ignore_Errors    => Debug_Flag_I,\n                      Directly_Scanned => True);"}, {"sha": "a321bf3889ab2d48f0af5f065e1c91441344355b", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -1531,7 +1531,6 @@ begin\n          A := Scan_ALI\n                (F,\n                 T,\n-                Ignore_ED     => False,\n                 Err           => False,\n                 Ignore_Errors => True);\n "}, {"sha": "c676996670eb280ac1cd0de77652d8c77bee7e48", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -2278,7 +2278,6 @@ begin\n                  Scan_ALI\n                    (Ali_File,\n                     Text,\n-                    Ignore_ED     => False,\n                     Err           => False,\n                     Ignore_Errors => True);\n             end;"}, {"sha": "10276fa4b33394546d7bc3e2d00b264771e15497", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -1168,7 +1168,7 @@ package body Make is\n          end if;\n \n       else\n-         ALI := Scan_ALI (Lib_File, Text, Ignore_ED => False, Err => True);\n+         ALI := Scan_ALI (Lib_File, Text, Err => True);\n          Free (Text);\n \n          if ALI = No_ALI_Id then\n@@ -2647,7 +2647,7 @@ package body Make is\n                if Text /= null then\n                   ALI :=\n                     Scan_ALI\n-                      (Data.Lib_File, Text, Ignore_ED => False, Err => True);\n+                      (Data.Lib_File, Text, Err => True);\n \n                   if ALI = No_ALI_Id then\n "}, {"sha": "3ccd630b1d63c4e3187d8fbab7c3201c8b5ec9ea", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -1031,22 +1031,6 @@ package Opt is\n    --  GNATBIND\n    --  Set to True to enable XDR in s-stratt.adb. Set by -xdr.\n \n-   type Create_Repinfo_File_Proc is access procedure (Src  : String);\n-   type Write_Repinfo_Line_Proc  is access procedure (Info : String);\n-   type Close_Repinfo_File_Proc  is access procedure;\n-   --  Types used for procedure addresses below\n-\n-   Create_Repinfo_File_Access : Create_Repinfo_File_Proc := null;\n-   Write_Repinfo_Line_Access  : Write_Repinfo_Line_Proc  := null;\n-   Close_Repinfo_File_Access  : Close_Repinfo_File_Proc  := null;\n-   --  GNAT\n-   --  These three locations are left null when operating in non-compiler (e.g.\n-   --  ASIS mode), but when operating in compiler mode, they are set to point\n-   --  to the three corresponding procedures in Osint-C. The reason for this\n-   --  slightly strange interface is to stop Repinfo from dragging in Osint in\n-   --  ASIS mode, which would include lots of unwanted units in the ASIS build.\n-   --  ??? Revisit this now that ASIS mode is gone.\n-\n    type Create_List_File_Proc is access procedure (S : String);\n    type Write_List_Info_Proc  is access procedure (S : String);\n    type Close_List_File_Proc  is access procedure;"}, {"sha": "d08b082509abdca7190fa19362f2fea3c5f671bd", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -520,10 +520,6 @@ package body Osint.C is\n begin\n    Adjust_OS_Resource_Limits;\n \n-   Opt.Create_Repinfo_File_Access := Create_Repinfo_File'Access;\n-   Opt.Write_Repinfo_Line_Access  := Write_Repinfo_Line'Access;\n-   Opt.Close_Repinfo_File_Access  := Close_Repinfo_File'Access;\n-\n    Opt.Create_List_File_Access := Create_List_File'Access;\n    Opt.Write_List_Info_Access  := Write_List_Info'Access;\n    Opt.Close_List_File_Access  := Close_List_File'Access;"}, {"sha": "cf39128fb7b4e5a8eb9defbeed62a5030d4960cb", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -2373,14 +2373,12 @@ package body Osint is\n       Nb_Relative_Dir := 0;\n       for J in 1 .. Len loop\n \n-         --  Treat any control character as a path separator. Note that we do\n+         --  Treat any EOL character as a path separator. Note that we do\n          --  not treat space as a path separator (we used to treat space as a\n          --  path separator in an earlier version). That way space can appear\n          --  as a legitimate character in a path name.\n \n-         --  Why do we treat all control characters as path separators???\n-\n-         if S (J) in ASCII.NUL .. ASCII.US then\n+         if S (J) = ASCII.LF or else S (J) = ASCII.CR then\n             S (J) := Path_Separator;\n          end if;\n "}, {"sha": "9720e4764a55204797d7d45461278d2870a899d8", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -216,9 +216,6 @@ package body Par_SCO is\n    --  Parameter D, when present, indicates the dominant of the first\n    --  declaration or statement within N.\n \n-   --  Why is Traverse_Sync_Definition commented specifically, whereas\n-   --  the others are not???\n-\n    procedure Traverse_Generic_Package_Declaration (N : Node_Id);\n \n    procedure Traverse_Handled_Statement_Sequence\n@@ -235,8 +232,7 @@ package body Par_SCO is\n      (N : Node_Id;\n       D : Dominant_Info := No_Dominant);\n \n-   procedure Traverse_Sync_Definition (N : Node_Id);\n-   --  Traverse a protected definition or task definition\n+   procedure Traverse_Protected_Or_Task_Definition (N : Node_Id);\n \n    --  Note regarding traversals: In a few cases where an Alternatives list is\n    --  involved, pragmas such as \"pragma Page\" may show up before the first\n@@ -690,9 +686,6 @@ package body Par_SCO is\n                --  fully equivalent to the \"To\" sloc computed by\n                --  Sloc_Range (Guard, To, From).\n \n-               --  Doesn't this requirement of using First_Sloc need to be\n-               --  documented in the spec ???\n-\n                if Nkind (Parent (N)) in N_Accept_Alternative\n                                       | N_Delay_Alternative\n                                       | N_Terminate_Alternative\n@@ -2331,15 +2324,15 @@ package body Par_SCO is\n                Process_Decisions_Defer (Discriminant_Specifications (N), 'X');\n                Set_Statement_Entry;\n \n-               Traverse_Sync_Definition (N);\n+               Traverse_Protected_Or_Task_Definition (N);\n \n             when N_Single_Protected_Declaration\n                | N_Single_Task_Declaration\n             =>\n                Extend_Statement_Sequence (N, 'o');\n                Set_Statement_Entry;\n \n-               Traverse_Sync_Definition (N);\n+               Traverse_Protected_Or_Task_Definition (N);\n \n             when others =>\n \n@@ -2517,11 +2510,11 @@ package body Par_SCO is\n       Traverse_Declarations_Or_Statements (Private_Declarations (Spec), Dom);\n    end Traverse_Package_Declaration;\n \n-   ------------------------------\n-   -- Traverse_Sync_Definition --\n-   ------------------------------\n+   -------------------------------------------\n+   -- Traverse_Protected_Or_Task_Definition --\n+   -------------------------------------------\n \n-   procedure Traverse_Sync_Definition (N : Node_Id) is\n+   procedure Traverse_Protected_Or_Task_Definition (N : Node_Id) is\n       Dom_Info : Dominant_Info := ('S', N);\n       --  The first declaration is dominated by the protected or task [type]\n       --  declaration.\n@@ -2570,7 +2563,7 @@ package body Par_SCO is\n       Traverse_Declarations_Or_Statements\n         (L => Priv_Decl,\n          D => Dom_Info);\n-   end Traverse_Sync_Definition;\n+   end Traverse_Protected_Or_Task_Definition;\n \n    --------------------------------------\n    -- Traverse_Subprogram_Or_Task_Body --"}, {"sha": "b76bd91d96069bf38fe405996f9f1c447afa42f6", "filename": "gcc/ada/pprint.adb", "status": "modified", "additions": 17, "deletions": 42, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fpprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fpprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpprint.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -100,7 +100,7 @@ package body Pprint is\n             Add_Space : Boolean := True;\n             Add_Paren : Boolean := True;\n             Num       : Natural := 1) return String;\n-         --  ??? what does this do\n+         --  Created for purposes of recursing on embedded lists\n \n          ------------------------\n          -- Internal_List_Name --\n@@ -113,30 +113,6 @@ package body Pprint is\n             Add_Paren : Boolean := True;\n             Num       : Natural := 1) return String\n          is\n-            function Prepend (S : String) return String;\n-            --  ??? what does this do\n-\n-            -------------\n-            -- Prepend --\n-            -------------\n-\n-            function Prepend (S : String) return String is\n-            begin\n-               if Add_Space then\n-                  if Add_Paren then\n-                     return \" (\" & S;\n-                  else\n-                     return ' ' & S;\n-                  end if;\n-               elsif Add_Paren then\n-                  return '(' & S;\n-               else\n-                  return S;\n-               end if;\n-            end Prepend;\n-\n-         --  Start of processing for Internal_List_Name\n-\n          begin\n             if not Present (List) then\n                if First or else not Add_Paren then\n@@ -152,23 +128,22 @@ package body Pprint is\n                end if;\n             end if;\n \n-            --  ??? the Internal_List_Name calls can be factored out\n-\n-            if First then\n-               return Prepend (Expr_Name (List)\n-                 & Internal_List_Name\n-                     (List      => Next (List),\n-                      First     => False,\n-                      Add_Paren => Add_Paren,\n-                      Num       => Num + 1));\n-            else\n-               return \", \" & Expr_Name (List)\n-                 & Internal_List_Name\n-                     (List      => Next (List),\n-                      First     => False,\n-                      Add_Paren => Add_Paren,\n-                      Num       => Num + 1);\n-            end if;\n+            --  Continue recursing on the list - handling the first element\n+            --  in a special way.\n+\n+            return\n+              (if First then\n+                  (if Add_Space and Add_Paren then \" (\"\n+                   elsif Add_Paren then \"(\"\n+                   elsif Add_Space then \" \"\n+                   else \"\")\n+               else \", \")\n+               & Expr_Name (List)\n+               & Internal_List_Name\n+                   (List      => Next (List),\n+                    First     => False,\n+                    Add_Paren => Add_Paren,\n+                    Num       => Num + 1);\n          end Internal_List_Name;\n \n       --  Start of processing for List_Name"}, {"sha": "084ca9189d0e35f7c6863264cf5116977e91be05", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -35,6 +35,7 @@ with Namet;          use Namet;\n with Nlists;         use Nlists;\n with Opt;            use Opt;\n with Output;         use Output;\n+with Osint.C;        use Osint.C;\n with Sem_Aux;        use Sem_Aux;\n with Sem_Eval;       use Sem_Eval;\n with Sinfo;          use Sinfo;\n@@ -1724,7 +1725,7 @@ package body Repinfo is\n                --  List representation information to file\n \n                else\n-                  Create_Repinfo_File_Access.all\n+                  Create_Repinfo_File\n                     (Get_Name_String (File_Name (Source_Index (U))));\n                   Set_Special_Output (Write_Info_Line'Access);\n                   if List_Representation_Info_To_JSON then\n@@ -1736,7 +1737,7 @@ package body Repinfo is\n                      Write_Line (\"]\");\n                   end if;\n                   Cancel_Special_Output;\n-                  Close_Repinfo_File_Access.all;\n+                  Close_Repinfo_File;\n                end if;\n             end if;\n          end loop;\n@@ -2328,7 +2329,7 @@ package body Repinfo is\n \n    procedure Write_Info_Line (S : String) is\n    begin\n-      Write_Repinfo_Line_Access.all (S (S'First .. S'Last - 1));\n+      Write_Repinfo_Line (S (S'First .. S'Last - 1));\n    end Write_Info_Line;\n \n    ---------------------"}, {"sha": "fb42e30bb2f26bd3cca27600ecde2951724ad3e7", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -1743,13 +1743,13 @@ package body Scng is\n                      Code := Character'Pos (' ');\n \n                   --  In Ada 95 mode we allow any wide character in a character\n-                  --  literal, but in Ada 2005, the set of characters allowed\n-                  --  is restricted to graphic characters.\n+                  --  literal, but in later versions, the set of characters\n+                  --  allowed is restricted to graphic characters.\n \n                   elsif Ada_Version >= Ada_2005\n                     and then Is_UTF_32_Non_Graphic (UTF_32 (Code))\n                   then\n-                     Error_Msg -- CODEFIX????\n+                     Error_Msg -- CODEFIX\n                        (\"(Ada 2005) non-graphic character not permitted \" &\n                         \"in character literal\", Wptr);\n                   end if;"}, {"sha": "f631e948a3e27ed6d644ed770ea79b613d08c971", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -1519,14 +1519,6 @@ package body Sem_Attr is\n             Check_E1;\n             Set_Etype (N, Str_Typ);\n \n-            --  ???It's not clear why 'Img should behave any differently than\n-            --  'Image.\n-\n-            if Attr_Id = Attribute_Img then\n-               Error_Attr_P\n-                 (\"prefix of % attribute must be a scalar object name\");\n-            end if;\n-\n             pragma Assert (Is_Entity_Name (P) and then Is_Type (Entity (P)));\n \n             if Ekind (Entity (P)) = E_Incomplete_Type"}, {"sha": "ea6ecf9b145cf2472011fadf77c6ca7344238363", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -9480,13 +9480,12 @@ package body Sem_Ch6 is\n          end if;\n \n       --  Here if type is not frozen yet. It is illegal to have a primitive\n-      --  equality declared in the private part if the type is visible.\n+      --  equality declared in the private part if the type is visible\n+      --  (RM 4.5.2(9.8)).\n \n       elsif not In_Same_List (Parent (Typ), Decl)\n         and then not Is_Limited_Type (Typ)\n       then\n-         --  Shouldn't we give an RM reference here???\n-\n          if Ada_Version >= Ada_2012 then\n             Error_Msg_N\n               (\"equality operator appears too late<<\", Eq_Op);\n@@ -9817,7 +9816,8 @@ package body Sem_Ch6 is\n       --  conform when they do not, e.g. by converting 1+2 into 3.\n \n       function FCE (Given_E1 : Node_Id; Given_E2 : Node_Id) return Boolean;\n-      --  ???\n+      --  Convenience function to abbreviate recursive calls to\n+      --  Fully_Conformant_Expressions without having to pass Report.\n \n       function FCL (L1 : List_Id; L2 : List_Id) return Boolean;\n       --  Compare elements of two lists for conformance. Elements have to be\n@@ -10778,7 +10778,7 @@ package body Sem_Ch6 is\n                   Error_Msg_Node_2 := F_Typ;\n                   Error_Msg_NE\n                     (\"private operation& in generic unit does not override \"\n-                     & \"any primitive operation of& (RM 12.3 (18))??\",\n+                     & \"any primitive operation of& (RM 12.3(18))??\",\n                      New_E, New_E);\n                end if;\n "}, {"sha": "825741a68cee217257dcb4ecf798daae817b3bc3", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -1403,7 +1403,9 @@ package body Sem_Type is\n            and then Nkind (Unit_Declaration_Node (S)) =\n                                          N_Subprogram_Renaming_Declaration\n \n-           --  Why the Comes_From_Source test here???\n+           --  Determine if the renaming came from source or was generated as a\n+           --  a result of generic expansion since the actual is represented by\n+           --  a constructed subprogram renaming.\n \n            and then not Comes_From_Source (Unit_Declaration_Node (S))\n \n@@ -1460,7 +1462,8 @@ package body Sem_Type is\n             then\n                return True;\n \n-            --  ??? There are possibly other cases to consider\n+            --  Formal_Typ is a private view, or Opnd_Typ and Formal_Typ are\n+            --  compatible only on a base-type basis.\n \n             else\n                return False;"}, {"sha": "c16a4b80e21b3bca754a23b8d34c3e72acd7744a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b54d9393e2af43393cce9b76798617b3c3452f1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4b54d9393e2af43393cce9b76798617b3c3452f1", "patch": "@@ -16264,12 +16264,14 @@ package body Sem_Util is\n                  Names_Match (Assign_Indexed_1, Assign_Indexed_2);\n             end;\n \n+         --  Checking for this aspect is performed elsewhere during freezing\n+         when Aspect_No_Controlled_Parts =>\n+            return True;\n+\n          --  scalar-valued aspects; compare (static) values.\n-         when Aspect_Max_Entry_Queue_Length --  | Aspect_No_Controlled_Parts\n-              =>\n-            --  This should be unreachable. No_Controlled_Parts is\n-            --  not yet supported at all in GNAT and Max_Entry_Queue_Length\n-            --  is supported only for protected entries, not for types.\n+         when Aspect_Max_Entry_Queue_Length =>\n+            --  This should be unreachable. Max_Entry_Queue_Length is\n+            --  supported only for protected entries, not for types.\n             pragma Assert (Serious_Errors_Detected /= 0);\n             return True;\n "}]}