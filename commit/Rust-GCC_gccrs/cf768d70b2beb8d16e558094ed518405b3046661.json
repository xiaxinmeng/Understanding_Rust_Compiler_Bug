{"sha": "cf768d70b2beb8d16e558094ed518405b3046661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y3NjhkNzBiMmJlYjhkMTZlNTU4MDk0ZWQ1MTg0MDViMzA0NjY2MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-03-24T10:05:50Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-03-24T10:05:50Z"}, "message": "mips.h (PROCESSOR_R4130): New processor_type.\n\n\t* config/mips/mips.h (PROCESSOR_R4130): New processor_type.\n\t(TARGET_MIPS4130): New macro.\n\t(ISA_HAS_MACC): Return true if TARGET_MIPS4130 && !TARGET_MIPS16.\n\t* config/mips/mips.c (mips_cpu_info_table): Add a vr4130 entry.\n\t(override_options): Extend MIPS_MARCH_CONTROLS_SOFT_FLOAT to deal\n\twith PROCESSOR_R4130.\n\t* config/mips/mips.md (define_attr cpu): Add r4130.\n\t* doc/invoke.texi: Document vr4130 as a supported MIPS architecture.\n\nFrom-SVN: r79904", "tree": {"sha": "c17704c53e8f26924047dd2c4f5712148e2b2aa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c17704c53e8f26924047dd2c4f5712148e2b2aa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf768d70b2beb8d16e558094ed518405b3046661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf768d70b2beb8d16e558094ed518405b3046661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf768d70b2beb8d16e558094ed518405b3046661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf768d70b2beb8d16e558094ed518405b3046661/comments", "author": null, "committer": null, "parents": [{"sha": "5ef1a99d3c0e1246dd7f74b4d0cdbef68726acde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef1a99d3c0e1246dd7f74b4d0cdbef68726acde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ef1a99d3c0e1246dd7f74b4d0cdbef68726acde"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "985a7424d7285ad9b0608621941434a0159d32cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf768d70b2beb8d16e558094ed518405b3046661", "patch": "@@ -1,3 +1,14 @@\n+2004-03-24  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.h (PROCESSOR_R4130): New processor_type.\n+\t(TARGET_MIPS4130): New macro.\n+\t(ISA_HAS_MACC): Return true if TARGET_MIPS4130 && !TARGET_MIPS16.\n+\t* config/mips/mips.c (mips_cpu_info_table): Add a vr4130 entry.\n+\t(override_options): Extend MIPS_MARCH_CONTROLS_SOFT_FLOAT to deal\n+\twith PROCESSOR_R4130.\n+\t* config/mips/mips.md (define_attr cpu): Add r4130.\n+\t* doc/invoke.texi: Document vr4130 as a supported MIPS architecture.\n+\n 2004-03-24  Maciej W. Rozycki  <macro@ds2.pg.gda.pl>\n \t    Richard Sandiford  <rsandifo@redhat.com>\n "}, {"sha": "5c1ce7159aebcd1b1f2a7c205ff8cdec5bf48d01", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=cf768d70b2beb8d16e558094ed518405b3046661", "patch": "@@ -646,6 +646,7 @@ const struct mips_cpu_info mips_cpu_info_table[] = {\n   { \"vr4100\", PROCESSOR_R4100, 3 },\n   { \"vr4111\", PROCESSOR_R4111, 3 },\n   { \"vr4120\", PROCESSOR_R4120, 3 },\n+  { \"vr4130\", PROCESSOR_R4130, 3 },\n   { \"vr4300\", PROCESSOR_R4300, 3 },\n   { \"r4400\", PROCESSOR_R4000, 3 }, /* = r4000 */\n   { \"r4600\", PROCESSOR_R4600, 3 },\n@@ -4657,6 +4658,7 @@ override_options (void)\n \tcase PROCESSOR_R4100:\n \tcase PROCESSOR_R4111:\n \tcase PROCESSOR_R4120:\n+\tcase PROCESSOR_R4130:\n \t  target_flags |= MASK_SOFT_FLOAT;\n \t  break;\n "}, {"sha": "7b079d8d6da2cfb1ec734b9e8f32490e75a864ac", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=cf768d70b2beb8d16e558094ed518405b3046661", "patch": "@@ -57,6 +57,7 @@ enum processor_type {\n   PROCESSOR_R4100,\n   PROCESSOR_R4111,\n   PROCESSOR_R4120,\n+  PROCESSOR_R4130,\n   PROCESSOR_R4300,\n   PROCESSOR_R4600,\n   PROCESSOR_R4650,\n@@ -321,6 +322,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n #define TARGET_MIPS3900             (mips_arch == PROCESSOR_R3900)\n #define TARGET_MIPS4000             (mips_arch == PROCESSOR_R4000)\n #define TARGET_MIPS4120             (mips_arch == PROCESSOR_R4120)\n+#define TARGET_MIPS4130             (mips_arch == PROCESSOR_R4130)\n #define TARGET_MIPS5400             (mips_arch == PROCESSOR_R5400)\n #define TARGET_MIPS5500             (mips_arch == PROCESSOR_R5500)\n #define TARGET_MIPS7000             (mips_arch == PROCESSOR_R7000)\n@@ -883,6 +885,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n /* ISA has three operand multiply instructions that  the result\n    from a 4th operand and puts the result in an accumulator.  */\n #define ISA_HAS_MACC            ((TARGET_MIPS4120 && !TARGET_MIPS16)\t\\\n+                                 || (TARGET_MIPS4130 && !TARGET_MIPS16)\t\\\n                                  || TARGET_MIPS5400                     \\\n                                  || TARGET_MIPS5500                     \\\n                                  || TARGET_SR71K                        \\"}, {"sha": "45a106ac1e6a241df39d30bd4475ff020b709035", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=cf768d70b2beb8d16e558094ed518405b3046661", "patch": "@@ -219,7 +219,7 @@\n ;; Attribute describing the processor.  This attribute must match exactly\n ;; with the processor_type enumeration in mips.h.\n (define_attr \"cpu\"\n-  \"default,4kc,5kc,20kc,m4k,r3000,r3900,r6000,r4000,r4100,r4111,r4120,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,sb1,sr71000\"\n+  \"default,4kc,5kc,20kc,m4k,r3000,r3900,r6000,r4000,r4100,r4111,r4120,r4130,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,sb1,sr71000\"\n   (const (symbol_ref \"mips_tune\")))\n \n ;; The type of hardware hazard associated with this instruction."}, {"sha": "59e02a04200b1a033fb7377e982a9894c6862c47", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf768d70b2beb8d16e558094ed518405b3046661/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=cf768d70b2beb8d16e558094ed518405b3046661", "patch": "@@ -7757,7 +7757,7 @@ The processor names are:\n @samp{rm9000},\n @samp{orion},\n @samp{sb1},\n-@samp{vr4100}, @samp{vr4111}, @samp{vr4120}, @samp{vr4300},\n+@samp{vr4100}, @samp{vr4111}, @samp{vr4120}, @samp{vr4130}, @samp{vr4300},\n @samp{vr5000}, @samp{vr5400} and @samp{vr5500}.\n The special value @samp{from-abi} selects the\n most compatible architecture for the selected ABI (that is,"}]}