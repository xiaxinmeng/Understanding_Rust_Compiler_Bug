{"sha": "58492575a118fd14c8184823467c815347cde219", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg0OTI1NzVhMTE4ZmQxNGM4MTg0ODIzNDY3YzgxNTM0N2NkZTIxOQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-16T19:10:17Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-16T19:10:17Z"}, "message": "pointer_plus [0, 0] + const folding\n\nReturn a constant range if POINTER_PLUS is [0,0] plus a const.\n\n\t* range-op.cc (pointer_plus_operator::wi_fold): Make pointer_plus\n\t[0, 0] + const return a [const, const] range.", "tree": {"sha": "a0d86017b5ec5b4c005df9613be51a5ee5a2d84b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0d86017b5ec5b4c005df9613be51a5ee5a2d84b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58492575a118fd14c8184823467c815347cde219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58492575a118fd14c8184823467c815347cde219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58492575a118fd14c8184823467c815347cde219", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58492575a118fd14c8184823467c815347cde219/comments", "author": null, "committer": null, "parents": [{"sha": "aabc96c9195892e669b7728b0e00a7c1a6f3d161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aabc96c9195892e669b7728b0e00a7c1a6f3d161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aabc96c9195892e669b7728b0e00a7c1a6f3d161"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "0efa00186e829a3ea93ae732be84162b3bb6da81", "filename": "gcc/range-op.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58492575a118fd14c8184823467c815347cde219/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58492575a118fd14c8184823467c815347cde219/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=58492575a118fd14c8184823467c815347cde219", "patch": "@@ -3064,6 +3064,14 @@ pointer_plus_operator::wi_fold (irange &r, tree type,\n \t\t\t\tconst wide_int &rh_lb,\n \t\t\t\tconst wide_int &rh_ub) const\n {\n+  // Check for [0,0] + const, and simply return the const.\n+  if (lh_lb == 0 && lh_ub == 0 && rh_lb == rh_ub)\n+    {\n+      tree val = wide_int_to_tree (type, rh_lb);\n+      r.set (val, val);\n+      return;\n+    }\n+\n   // For pointer types, we are really only interested in asserting\n   // whether the expression evaluates to non-NULL.\n   //"}]}