{"sha": "7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M0OWZlZjU5YzMzYjI3YjZhNGNkMmQ4ZTY5MzBlYjJiOGIxNWUwZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-03T21:47:31Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-03T21:47:31Z"}, "message": "tree-cfg.c (remove_bb): Remove a redundant call to set_bb_for_stmt.\n\n\t* tree-cfg.c (remove_bb): Remove a redundant call to\n\tset_bb_for_stmt.\n\t* tree-if-conv.c (replace_phi_with_cond_modify_expr):\n\tLikewise.\n\nFrom-SVN: r99183", "tree": {"sha": "d2baee0cf0b57554e23d7a789a01476ad0160d9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2baee0cf0b57554e23d7a789a01476ad0160d9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e/comments", "author": null, "committer": null, "parents": [{"sha": "a67aa338b6d94b54e36b310cdcc31465841ea9cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a67aa338b6d94b54e36b310cdcc31465841ea9cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a67aa338b6d94b54e36b310cdcc31465841ea9cb"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "b565816ed51daf0044768586c36c2da19b760909", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e", "patch": "@@ -7,6 +7,11 @@\n \taux.\n \t* tree-vectorizer.h (set_stmt_info, vinfo_for_stmt): Likewise.\n \n+\t* tree-cfg.c (remove_bb): Remove a redundant call to\n+\tset_bb_for_stmt.\n+\t* tree-if-conv.c (replace_phi_with_cond_modify_expr):\n+\tLikewise.\n+\n 2005-05-03  Richard Henderson  <rth@redhat.com>\n \n \t* config/rs6000/rs6000.c: Remove conflict markers."}, {"sha": "ccafd9a783217d03b4a9c96ec7921746e08d8989", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e", "patch": "@@ -1974,7 +1974,6 @@ remove_bb (basic_block bb)\n         {\n \t  release_defs (stmt);\n \n-\t  set_bb_for_stmt (stmt, NULL);\n \t  bsi_remove (&i);\n \t}\n "}, {"sha": "2d72eeaae00ce65be3ccc26e807aa3afa69ec029", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=7c49fef59c33b27b6a4cd2d8e6930eb2b8b15e0e", "patch": "@@ -799,9 +799,7 @@ replace_phi_with_cond_modify_expr (tree phi, tree cond, basic_block true_bb,\n   /* Make new statement definition of the original phi result.  */\n   SSA_NAME_DEF_STMT (PHI_RESULT (phi)) = new_stmt;\n \n-  /* Set basic block and insert using iterator.  */\n-  set_bb_for_stmt (new_stmt, bb);\n-\n+  /* Insert using iterator.  */\n   bsi_insert_after (bsi, new_stmt, BSI_SAME_STMT);\n   bsi_next (bsi);\n "}]}