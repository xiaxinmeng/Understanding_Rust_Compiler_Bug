{"sha": "7417f6c0bd77d7cc05b6b051efa0c60987825f90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQxN2Y2YzBiZDc3ZDdjYzA1YjZiMDUxZWZhMGM2MDk4NzgyNWY5MA==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2009-12-30T12:53:18Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2009-12-30T12:53:18Z"}, "message": "re PR tree-optimization/41956 (Segfault in vectorizer)\n\n\n\tPR tree-optimization/41956\n\t* tree-vect-slp.c (vect_supported_load_permutation_p): Add check that \n\tthe load indices differ.\n\nFrom-SVN: r155523", "tree": {"sha": "c2168513fa5ea4cdb4a16c04163e559d3cad885d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2168513fa5ea4cdb4a16c04163e559d3cad885d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7417f6c0bd77d7cc05b6b051efa0c60987825f90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7417f6c0bd77d7cc05b6b051efa0c60987825f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7417f6c0bd77d7cc05b6b051efa0c60987825f90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7417f6c0bd77d7cc05b6b051efa0c60987825f90/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8699cfb5c4fb1e7667c55046d7a69e985363038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8699cfb5c4fb1e7667c55046d7a69e985363038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8699cfb5c4fb1e7667c55046d7a69e985363038"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "9b4a6fe941280ad788e658d1991a581a3d8dfe0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7417f6c0bd77d7cc05b6b051efa0c60987825f90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7417f6c0bd77d7cc05b6b051efa0c60987825f90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7417f6c0bd77d7cc05b6b051efa0c60987825f90", "patch": "@@ -1,3 +1,9 @@\n+2009-12-30  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/41956\n+\t* tree-vect-slp.c (vect_supported_load_permutation_p): Add check that \n+\tthe load indices differ.\n+\n 2009-12-30  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/42549"}, {"sha": "1c49c2d5a37941b262b5d05df9d39a0f759f879a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7417f6c0bd77d7cc05b6b051efa0c60987825f90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7417f6c0bd77d7cc05b6b051efa0c60987825f90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7417f6c0bd77d7cc05b6b051efa0c60987825f90", "patch": "@@ -1,3 +1,8 @@\n+2009-12-30  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/41956\n+\t* gcc.dg/vect/pr41956.c: New test.\n+\n 2009-12-30  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/42549"}, {"sha": "455f50510079e855c1ff8eb4928279cde8b3726a", "filename": "gcc/testsuite/gcc.dg/vect/pr41956.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7417f6c0bd77d7cc05b6b051efa0c60987825f90/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr41956.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7417f6c0bd77d7cc05b6b051efa0c60987825f90/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr41956.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr41956.c?ref=7417f6c0bd77d7cc05b6b051efa0c60987825f90", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+void K (int *gpwgts, int *badminpwgt, int *badmaxpwgt)\n+{\n+  int i;\n+  for (i = 0; i < 10; i += 2) {\n+    badminpwgt[i] = badminpwgt[i+1] = gpwgts[i]+gpwgts[i];\n+    badmaxpwgt[i] = badmaxpwgt[i+1] = gpwgts[i]+gpwgts[i];\n+  }\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "a3be6786d94a3918ad572e4ae6c2cb53d8988c39", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7417f6c0bd77d7cc05b6b051efa0c60987825f90/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7417f6c0bd77d7cc05b6b051efa0c60987825f90/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=7417f6c0bd77d7cc05b6b051efa0c60987825f90", "patch": "@@ -796,6 +796,7 @@ vect_supported_load_permutation_p (slp_instance slp_instn, int group_size,\n {\n   int i = 0, j, prev = -1, next, k;\n   bool supported;\n+  sbitmap load_index;\n \n   /* FORNOW: permutations are only supported in SLP.  */\n   if (!slp_instn)\n@@ -816,6 +817,8 @@ vect_supported_load_permutation_p (slp_instance slp_instn, int group_size,\n     return false;\n \n   supported = true;\n+  load_index = sbitmap_alloc (group_size);\n+  sbitmap_zero (load_index);\n   for (j = 0; j < group_size; j++)\n     {\n       for (i = j * group_size, k = 0;\n@@ -830,7 +833,17 @@ vect_supported_load_permutation_p (slp_instance slp_instn, int group_size,\n \n          prev = next;\n        }\n+\n+      if (TEST_BIT (load_index, prev))\n+        {\n+          supported = false;\n+          break;\n+        }\n+\n+      SET_BIT (load_index, prev);\n     }\n+  \n+  sbitmap_free (load_index);\n \n   if (supported && i == group_size * group_size\n       && vect_supported_slp_permutation_p (slp_instn))"}]}