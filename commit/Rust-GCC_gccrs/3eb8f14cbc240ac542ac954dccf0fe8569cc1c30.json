{"sha": "3eb8f14cbc240ac542ac954dccf0fe8569cc1c30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViOGYxNGNiYzI0MGFjNTQyYWM5NTRkY2NmMGZlODU2OWNjMWMzMA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-12-21T18:25:26Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-12-21T18:25:26Z"}, "message": "(replace_regs, case REG): Return copies of SUBREGs, to\navoid invalid sharing.\n\nFrom-SVN: r6253", "tree": {"sha": "641115a7cc05f88fda611706434f815d07d72ba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/641115a7cc05f88fda611706434f815d07d72ba4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eb8f14cbc240ac542ac954dccf0fe8569cc1c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb8f14cbc240ac542ac954dccf0fe8569cc1c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb8f14cbc240ac542ac954dccf0fe8569cc1c30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb8f14cbc240ac542ac954dccf0fe8569cc1c30/comments", "author": null, "committer": null, "parents": [{"sha": "77541d4e8357345d6234f3664b8b2dce7a660275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77541d4e8357345d6234f3664b8b2dce7a660275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77541d4e8357345d6234f3664b8b2dce7a660275"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "486ef5f8d2247c3daa2667855066dac648bb5945", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb8f14cbc240ac542ac954dccf0fe8569cc1c30/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb8f14cbc240ac542ac954dccf0fe8569cc1c30/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=3eb8f14cbc240ac542ac954dccf0fe8569cc1c30", "patch": "@@ -1662,7 +1662,14 @@ replace_regs (x, reg_map, nregs, replace_dest)\n     case REG:\n       /* Verify that the register has an entry before trying to access it.  */\n       if (REGNO (x) < nregs && reg_map[REGNO (x)] != 0)\n-\treturn reg_map[REGNO (x)];\n+\t{\n+\t  /* SUBREGs can't be shared.  Always return a copy to ensure that if\n+\t     this replacement occurs more than once then each instance will\n+\t     get distinct rtx.  */\n+\t  if (GET_CODE (reg_map[REGNO (x)]) == SUBREG)\n+\t    return copy_rtx (reg_map[REGNO (x)]);\n+\t  return reg_map[REGNO (x)];\n+\t}\n       return x;\n \n     case SUBREG:"}]}