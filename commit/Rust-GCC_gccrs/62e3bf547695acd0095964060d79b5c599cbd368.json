{"sha": "62e3bf547695acd0095964060d79b5c599cbd368", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJlM2JmNTQ3Njk1YWNkMDA5NTk2NDA2MGQ3OWI1YzU5OWNiZDM2OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-07-27T18:22:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-07-27T18:22:39Z"}, "message": "dwarf2out.c (gen_typedef_die): Abort if we get identical TREE_TYPE and DECL_ORIGINAL_TYPE on a typedef.\n\n        * dwarf2out.c (gen_typedef_die): Abort if we get identical\n        TREE_TYPE and DECL_ORIGINAL_TYPE on a typedef.\n\n        * typeck.c (common_type): If we're just returning one of our\n        arguments, don't strip typedef types.\n\nFrom-SVN: r35297", "tree": {"sha": "35a36012e2786a4d508c08f34fb89d9e42cd5c10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35a36012e2786a4d508c08f34fb89d9e42cd5c10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62e3bf547695acd0095964060d79b5c599cbd368", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62e3bf547695acd0095964060d79b5c599cbd368", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62e3bf547695acd0095964060d79b5c599cbd368", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62e3bf547695acd0095964060d79b5c599cbd368/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "589ca5cb100f0975f12890c95ea2b29301bb4294", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/589ca5cb100f0975f12890c95ea2b29301bb4294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/589ca5cb100f0975f12890c95ea2b29301bb4294"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "0cc077e72d6aafaff464c718048d6a0c5abbfb50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e3bf547695acd0095964060d79b5c599cbd368/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e3bf547695acd0095964060d79b5c599cbd368/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62e3bf547695acd0095964060d79b5c599cbd368", "patch": "@@ -1,3 +1,8 @@\n+2000-07-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2out.c (gen_typedef_die): Abort if we get identical\n+\tTREE_TYPE and DECL_ORIGINAL_TYPE on a typedef.\n+\n 2000-07-27  RodneyBrown  <RodneyBrown@pmsc.com>\n \n \t* expr.h (get_alias_set, lang_get_alias_set): Delete prototypes."}, {"sha": "c981ca61e4612401d415d7094e4c56f78fe201be", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e3bf547695acd0095964060d79b5c599cbd368/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e3bf547695acd0095964060d79b5c599cbd368/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62e3bf547695acd0095964060d79b5c599cbd368", "patch": "@@ -1,3 +1,8 @@\n+2000-07-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (common_type): If we're just returning one of our\n+\targuments, don't strip typedef types.\n+\n 2000-07-26  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (start_cleanup_fn): Mark the function as `inline'."}, {"sha": "0df8a03c1e3ba27f165c07ea0157eb8478a6586f", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e3bf547695acd0095964060d79b5c599cbd368/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e3bf547695acd0095964060d79b5c599cbd368/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=62e3bf547695acd0095964060d79b5c599cbd368", "patch": "@@ -521,26 +521,27 @@ composite_pointer_type (t1, t2, arg1, arg2, location)\n    converted to integer types.  */\n \n tree\n-common_type (t1, t2)\n-     tree t1, t2;\n+common_type (orig_t1, orig_t2)\n+     tree orig_t1, orig_t2;\n {\n   register enum tree_code code1;\n   register enum tree_code code2;\n   tree attributes;\n+  tree t1, t2;\n \n   /* Save time if the two types are the same.  */\n+  if (orig_t1 == orig_t2)\n+    return orig_t1;\n+  t1 = original_type (orig_t1);\n+  t2 = original_type (orig_t2);\n   if (t1 == t2)\n-    return t1;\n-  t1 = original_type (t1);\n-  t2 = original_type (t2);\n-  if (t1 == t2)\n-    return t1;\n+    return orig_t1;\n \n   /* If one type is nonsense, use the other.  */\n   if (t1 == error_mark_node)\n-    return t2;\n+    return orig_t2;\n   if (t2 == error_mark_node)\n-    return t1;\n+    return orig_t1;\n \n   if ((ARITHMETIC_TYPE_P (t1) || TREE_CODE (t1) == ENUMERAL_TYPE)\n       && (ARITHMETIC_TYPE_P (t2) || TREE_CODE (t2) == ENUMERAL_TYPE))"}, {"sha": "6b04b7775059a7d7a5567e2ddb9ca7ce6283fc68", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e3bf547695acd0095964060d79b5c599cbd368/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e3bf547695acd0095964060d79b5c599cbd368/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=62e3bf547695acd0095964060d79b5c599cbd368", "patch": "@@ -9276,7 +9276,11 @@ gen_typedef_die (decl, context_die)\n       if (DECL_ORIGINAL_TYPE (decl))\n \t{\n \t  type = DECL_ORIGINAL_TYPE (decl);\n-\t  equate_type_number_to_die (TREE_TYPE (decl), type_die);\n+\n+\t  if (type == TREE_TYPE (decl))\n+\t    abort ();\n+\t  else\n+\t    equate_type_number_to_die (TREE_TYPE (decl), type_die);\n \t}\n       else\n \ttype = TREE_TYPE (decl);"}]}