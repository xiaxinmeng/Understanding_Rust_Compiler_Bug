{"sha": "b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFmYjNjYjA0MmZlMmJiMDA2YzUzODJhYjllN2MyYWJhMjRiNzg2Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-03-22T13:59:01Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-03-22T13:59:01Z"}, "message": "re PR go/80128 (go1: internal compiler error: in write_specific_type_functions, at go/gofrontend/types.cc:2002)\n\n\tPR go/80128\n    compiler: check backend alignment for memequalNN functions\n    \n    The code was assuming the usual required alignment for the memequalNN\n    functions (16 bits for int16, 32 for int32, etc.). However, on m68k\n    the required alignment of int32 is only 16 bits. Assuming the\n    memequalNN alignment caused the compiler to incorrectly decide that\n    int32 required a specially generated function rather than calling\n    memequal32. This then crashed if the type descriptor were generated\n    after type-specific functions had been written.\n    \n    Fixes GCC PR 80128.\n    \n    Reviewed-on: https://go-review.googlesource.com/38433\n\nFrom-SVN: r246382", "tree": {"sha": "568a77579df80547be833b5a4d72b2c9628a1fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/568a77579df80547be833b5a4d72b2c9628a1fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b/comments", "author": null, "committer": null, "parents": [{"sha": "7ba8651ed253b29ee17a0d735cc74eac1b826492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ba8651ed253b29ee17a0d735cc74eac1b826492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ba8651ed253b29ee17a0d735cc74eac1b826492"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "f65dbd73c338acae3fdb9ecb742ebfacbadf0370", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 44, "deletions": 10, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b", "patch": "@@ -1580,6 +1580,42 @@ Type::make_type_descriptor_ptr_type()\n   return ret;\n }\n \n+// Return the alignment required by the memequalN function.  N is a\n+// type size: 16, 32, 64, or 128.  The memequalN functions are defined\n+// in libgo/go/runtime/alg.go.\n+\n+int64_t\n+Type::memequal_align(Gogo* gogo, int size)\n+{\n+  const char* tn;\n+  switch (size)\n+    {\n+    case 16:\n+      tn = \"int16\";\n+      break;\n+    case 32:\n+      tn = \"int32\";\n+      break;\n+    case 64:\n+      tn = \"int64\";\n+      break;\n+    case 128:\n+      // The code uses [2]int64, which must have the same alignment as\n+      // int64.\n+      tn = \"int64\";\n+      break;\n+    default:\n+      go_unreachable();\n+    }\n+\n+  Type* t = Type::lookup_integer_type(tn);\n+\n+  int64_t ret;\n+  if (!t->backend_type_align(gogo, &ret))\n+    go_unreachable();\n+  return ret;\n+}\n+\n // Return whether this type needs specially built type functions.\n // This returns true for types that are comparable and either can not\n // use an identity comparison, or are a non-standard size.\n@@ -1614,14 +1650,13 @@ Type::needs_specific_type_functions(Gogo* gogo)\n     case 0:\n     case 1:\n     case 2:\n-      return align < 2;\n+      return align < Type::memequal_align(gogo, 16);\n     case 4:\n-      return align < 4;\n+      return align < Type::memequal_align(gogo, 32);\n     case 8:\n-      return align < 8;\n+      return align < Type::memequal_align(gogo, 64);\n     case 16:\n-      // 8, not 16, because of how runtime.memequal128 is written.\n-      return align < 8;\n+      return align < Type::memequal_align(gogo, 128);\n     default:\n       return true;\n     }\n@@ -1713,7 +1748,7 @@ Type::type_functions(Gogo* gogo, Named_type* name, Function_type* hash_fntype,\n \t  equal_fnname = \"runtime.memequal8\";\n \t  break;\n \tcase 2:\n-\t  if (align < 2)\n+\t  if (align < Type::memequal_align(gogo, 16))\n \t    build_functions = true;\n \t  else\n \t    {\n@@ -1722,7 +1757,7 @@ Type::type_functions(Gogo* gogo, Named_type* name, Function_type* hash_fntype,\n \t    }\n \t  break;\n \tcase 4:\n-\t  if (align < 4)\n+\t  if (align < Type::memequal_align(gogo, 32))\n \t    build_functions = true;\n \t  else\n \t    {\n@@ -1731,7 +1766,7 @@ Type::type_functions(Gogo* gogo, Named_type* name, Function_type* hash_fntype,\n \t    }\n \t  break;\n \tcase 8:\n-\t  if (align < 8)\n+\t  if (align < Type::memequal_align(gogo, 64))\n \t    build_functions = true;\n \t  else\n \t    {\n@@ -1740,8 +1775,7 @@ Type::type_functions(Gogo* gogo, Named_type* name, Function_type* hash_fntype,\n \t    }\n \t  break;\n \tcase 16:\n-\t  // 8, not 16, because of how runtime.memequal128 is written.\n-\t  if (align < 8)\n+\t  if (align < Type::memequal_align(gogo, 128))\n \t    build_functions = true;\n \t  else\n \t    {"}, {"sha": "47a70fcd08fe0c7eba2f3f0572a48740157f23f7", "filename": "gcc/go/gofrontend/types.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.h?ref=b1fb3cb042fe2bb006c5382ab9e7c2aba24b786b", "patch": "@@ -993,6 +993,9 @@ class Type\n \t\t\t\tconst std::string& equal_name,\n \t\t\t\tFunction_type* equal_fntype);\n \n+  // Return the alignment required by the memequalN function.\n+  static int64_t memequal_align(Gogo*, int size);\n+\n   // Export the type.\n   void\n   export_type(Export* exp) const"}]}