{"sha": "088e716060315042f749c74ad3cfd43b97e614bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4ZTcxNjA2MDMxNTA0MmY3NDljNzRhZDNjZmQ0M2I5N2U2MTRiZA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1999-03-21T12:14:09Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1999-03-21T12:14:09Z"}, "message": "Preserve programmer specified labels, and emit debug info for them even if\nthey are deleted.\n\nFrom-SVN: r25883", "tree": {"sha": "2d8c103ec5d59d7f6360e078e727209d3e9c0646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d8c103ec5d59d7f6360e078e727209d3e9c0646"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/088e716060315042f749c74ad3cfd43b97e614bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088e716060315042f749c74ad3cfd43b97e614bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/088e716060315042f749c74ad3cfd43b97e614bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088e716060315042f749c74ad3cfd43b97e614bd/comments", "author": null, "committer": null, "parents": [{"sha": "0fdb7c85cee6d9bad7a987444464f80ad0777aa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdb7c85cee6d9bad7a987444464f80ad0777aa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fdb7c85cee6d9bad7a987444464f80ad0777aa4"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "d4c2758038bc243c81591f26e453c8eaaa4f8ba5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088e716060315042f749c74ad3cfd43b97e614bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088e716060315042f749c74ad3cfd43b97e614bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=088e716060315042f749c74ad3cfd43b97e614bd", "patch": "@@ -1,3 +1,12 @@\n+Sun Mar 21 12:13:01 1999  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* flow.c (can_delete_label_p): Do not allow user specified\n+\tlabels to be deleted.\n+\t* dwarf2out.c (gen_label_die): Generate addresses for deleted\n+\t(programmer specified) labels. \n+\t* dwarfout.c (output_label_die): Generate addresses for deleted\n+\t(programmer specified) labels.\n+\n 1999-03-21  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* Makefile.in (xgcc$(exeext)): Add intl.o to list of files to be"}, {"sha": "ae38b2099a8a33c1c6fbc0aa0d84e205e2b12945", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088e716060315042f749c74ad3cfd43b97e614bd/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088e716060315042f749c74ad3cfd43b97e614bd/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=088e716060315042f749c74ad3cfd43b97e614bd", "patch": "@@ -8583,7 +8583,13 @@ gen_label_die (decl, context_die)\n   else\n     {\n       insn = DECL_RTL (decl);\n-      if (GET_CODE (insn) == CODE_LABEL)\n+\n+      /* Deleted labels are programmer specified labels which have been\n+\t eliminated because of various optimisations.  We still emit them\n+\t here so that it is possible to put breakpoints on them.  */\n+      if (GET_CODE (insn) == CODE_LABEL\n+\t  || ((GET_CODE (insn) == NOTE\n+\t       && NOTE_LINE_NUMBER (insn) == NOTE_INSN_DELETED_LABEL)))\n \t{\n \t  /* When optimization is enabled (via -O) some parts of the compiler \n \t     (e.g. jump.c and cse.c) may try to delete CODE_LABEL insns which "}, {"sha": "388c4a40081303d96453f1893ced5a8d7d8de6c6", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088e716060315042f749c74ad3cfd43b97e614bd/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088e716060315042f749c74ad3cfd43b97e614bd/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=088e716060315042f749c74ad3cfd43b97e614bd", "patch": "@@ -3519,7 +3519,12 @@ output_label_die (arg)\n     {\n       register rtx insn = DECL_RTL (decl);\n \n-      if (GET_CODE (insn) == CODE_LABEL)\n+      /* Deleted labels are programmer specified labels which have been\n+\t eliminated because of various optimisations.  We still emit them\n+\t here so that it is possible to put breakpoints on them.  */\n+      if (GET_CODE (insn) == CODE_LABEL\n+\t  || ((GET_CODE (insn) == NOTE\n+\t       && NOTE_LINE_NUMBER (insn) == NOTE_INSN_DELETED_LABEL)))\n \t{\n \t  char label[MAX_ARTIFICIAL_LABEL_BYTES];\n "}, {"sha": "f60daa48eed8b4c6a2e52f09ae1368429fcf4630", "filename": "gcc/flow.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088e716060315042f749c74ad3cfd43b97e614bd/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088e716060315042f749c74ad3cfd43b97e614bd/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=088e716060315042f749c74ad3cfd43b97e614bd", "patch": "@@ -376,7 +376,7 @@ find_basic_blocks (f, nregs, file)\n   bb_eh_end = (rtx *) alloca (n_basic_blocks * sizeof (rtx));\n \n   label_value_list = find_basic_blocks_1 (f, bb_eh_end);\n-\n+  \n   /* Record the block to which an insn belongs.  */\n   /* ??? This should be done another way, by which (perhaps) a label is\n      tagged directly with the basic block that it starts.  It is used for\n@@ -1241,7 +1241,7 @@ split_edge (edge_in)\n \t  pos = emit_jump_insn_after (gen_jump (old_succ->head), pos);\n \t  jump_block->end = pos;\n \t  emit_barrier_after (pos);\n-\n+\t  \n \t  /* ... and clear fallthru on the outgoing edge.  */\n \t  e->flags &= ~EDGE_FALLTHRU;\n \n@@ -1649,6 +1649,7 @@ delete_block (b)\n      notes.  */\n \n   insn = b->head;\n+  \n   if (GET_CODE (insn) == CODE_LABEL)\n     {\n       rtx x, *prev = &exception_handler_labels;\n@@ -1793,6 +1794,16 @@ can_delete_label_p (label)\n     if (label == XEXP (x, 0))\n       return 0;\n \n+  /* User declared labels must be preserved, but we can\n+     convert them into a NOTE instead. */\n+  if (LABEL_NAME (label) != 0)\n+    {\n+      PUT_CODE (label, NOTE);\n+      NOTE_LINE_NUMBER (label) = NOTE_INSN_DELETED_LABEL;\n+      NOTE_SOURCE_FILE (label) = 0;\n+      return 0;\n+    }\n+  \n   return 1;\n }\n "}]}