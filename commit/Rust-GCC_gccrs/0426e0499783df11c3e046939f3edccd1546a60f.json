{"sha": "0426e0499783df11c3e046939f3edccd1546a60f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQyNmUwNDk5NzgzZGYxMWMzZTA0NjkzOWYzZWRjY2QxNTQ2YTYwZg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2001-01-06T00:46:33Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2001-01-06T00:46:33Z"}, "message": "Faster __mulsi routine\n\nFrom-SVN: r38736", "tree": {"sha": "609a6abcb5a8f3faf747a0e22baa46caa67a31a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/609a6abcb5a8f3faf747a0e22baa46caa67a31a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0426e0499783df11c3e046939f3edccd1546a60f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0426e0499783df11c3e046939f3edccd1546a60f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0426e0499783df11c3e046939f3edccd1546a60f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0426e0499783df11c3e046939f3edccd1546a60f/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7114e1750e9f65412cade6e7740b65cba27ac25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7114e1750e9f65412cade6e7740b65cba27ac25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7114e1750e9f65412cade6e7740b65cba27ac25"}], "stats": {"total": 98, "additions": 53, "deletions": 45}, "files": [{"sha": "3b02eb8db5aa144e630ddf23fe0dd0619ef54717", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0426e0499783df11c3e046939f3edccd1546a60f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0426e0499783df11c3e046939f3edccd1546a60f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0426e0499783df11c3e046939f3edccd1546a60f", "patch": "@@ -1,3 +1,8 @@\n+Fri Jan  5 16:34:18 2001  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/v850/lib1funcs.asm: Replace __mulsi3 routine with faster\n+\tversion supplied by Matteo Frigo.\n+\n 2001-01-05  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * cpp.texi: Update for -MQ."}, {"sha": "9248acb117b9f80b0e021262cb790d5d642cd647", "filename": "gcc/config/v850/lib1funcs.asm", "status": "modified", "additions": 48, "deletions": 45, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0426e0499783df11c3e046939f3edccd1546a60f/gcc%2Fconfig%2Fv850%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0426e0499783df11c3e046939f3edccd1546a60f/gcc%2Fconfig%2Fv850%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Flib1funcs.asm?ref=0426e0499783df11c3e046939f3edccd1546a60f", "patch": "@@ -33,57 +33,60 @@ Boston, MA 02111-1307, USA.  */\n \t.type  ___mulsi3,@function\n \n /*\n- * In order to not deal with negative numbers (mulh is a signed multiply\n- * and we want an unsigned multiply, code the multiplication as a series\n- * of 7 bit multiplies).\n+ * #define SHIFT 12\n+ * #define MASK ((1 << SHIFT) - 1)\n+ *  \n+ * #define STEP(i, j)                             \\\n+ * ({                                             \\\n+ *     short a_part = (a >> (i)) & MASK;          \\\n+ *     short b_part = (b >> (j)) & MASK;          \\\n+ *     int res = (((int)a_part) * ((int)b_part)); \\\n+ *     res;                                       \\\n+ * })\n  *\n- * int __mulsi3 (unsigned a, unsigned b)\n+ * int\n+ * __mulsi3 (unsigned a, unsigned b)\n  * {\n- *   int i, j;\n- *   int ret = 0;\n- *\n- *   for (i = 0; i < 32; i += 7)\n- *     {\n- *       short a_part = a & 0x7f;\n- *       unsigned b_tmp = b;\n- *       a >>= 7;\n- * \n- *       for (j = 0; (i+j) < 32; j += 7)\n- * \t{\n- * \t  short b_part = b_tmp & 0x7f;\n- * \t  ret += (((int)a_part) * ((int)b_part)) << (i+j);\n- * \t  b_tmp >>= 7;\n- * \t}\n- *    }\n- *\n- *   return ret;\n+ *    return STEP (0, 0) +\n+ *        ((STEP (SHIFT, 0) + STEP (0, SHIFT)) << SHIFT) +\n+ *        ((STEP (0, 2 * SHIFT) + STEP (SHIFT, SHIFT) + STEP (2 * SHIFT, 0))\n+ *         << (2 * SHIFT));\n  * }\n  */\n \n ___mulsi3:\n-\tmov 0,r10\t\t\t/* total */\n-\tmov 0,r14\t\t\t/* i = 0, index for multiply a's part */\n-\tmovea lo(31),r0,r16\t\t/* upper bounds for loop */\n-.L5:\n-\tmov r7,r13\t\t\t/* b_tmp = b */\n-\tandi 0x7f,r6,r15\t\t/* a_part = (a & 127) */\n-\tshr 7,r6\t\t\t/* a >>= 7 */\n-\tmov r14,r12\t\t\t/* i+j = i */\n-.L9:\n-\tandi 0x7f,r13,r11\t\t/* b_part = (b_tmp & 127) */\n-\tmulh r15,r11\t\t\t/* ((int)a_part) * ((int)b_part) */\n-\tshr 7,r13\t\t\t/* b_tmp >>= 7 */\n-\tshl r12,r11\t\t\t/* (((int)a_part) * ((int)b_part)) << (i+j) */\n-\tadd r11,r10\t\t\t/* ret += (((int)a_part) * ((int)b_part)) << (i+j) */\n-\tadd 7,r12\t\t\t/* i+j += 7 */\n-\tcmp r16,r12\t\t\t/* i+j < 32 */\n-\tble .L9\n-\n-\tadd 7,r14\t\t\t/* i += 7 */\n-\tcmp r16,r14\t\t\t/* i < 32 */\n-\tble .L5\n-\n-\tjmp [r31]\t\t\t/* return */\n+        mov r6,r13\n+        movea lo(4095),r0,r16\n+        and r16,r13\n+        mov r7,r15\n+        and r16,r15\n+        mov r13,r10\n+        mulh r15,r10\n+        shr 12,r6\n+        mov r6,r14\n+        and r16,r14\n+        mov r14,r11\n+        mulh r15,r11\n+        shr 12,r7\n+        mov r7,r12\n+        and r16,r12\n+        shr 12,r7\n+        and r16,r7\n+        mulh r13,r7\n+        shr 12,r6\n+        mulh r12,r13\n+        and r16,r6\n+        add r13,r11\n+        shl 12,r11\n+        add r11,r10\n+        mov r14,r11\n+        mulh r12,r11\n+        mulh r15,r6\n+        add r11,r7\n+        add r6,r7\n+        shl 24,r7\n+        add r7,r10\n+        jmp [r31]\n \t.size ___mulsi3,.-___mulsi3\n #endif\n "}]}