{"sha": "27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdmZmM4MDZjNGZiMTM1NGZiNDBjYjJlNTE0ODA5OGVhODVlOWRjZg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-07-18T23:40:00Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-07-18T23:40:00Z"}, "message": "merge from glibc\n\nFrom-SVN: r44138", "tree": {"sha": "82716a6a38136f5525d3abd0f0f429d628c132b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82716a6a38136f5525d3abd0f0f429d628c132b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/comments", "author": null, "committer": null, "parents": [{"sha": "560dbedd74ad310e24fdd462c90f415d52ffa401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560dbedd74ad310e24fdd462c90f415d52ffa401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560dbedd74ad310e24fdd462c90f415d52ffa401"}], "stats": {"total": 69, "additions": 50, "deletions": 19}, "files": [{"sha": "54e7051021f33e1ac64f4c9964fde8d5ae48581f", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "patch": "@@ -1,3 +1,7 @@\n+2001-07-18  Andreas Jaeger  <aj@suse.de>\n+\n+\t* xregex2.h: Place under LGPL version 2.1.\n+\n 2001-07-10  Jeff Johnston  <jjohnstn@redhat.com>\n \n \t* xregex.h: New file to support libiberty regex."}, {"sha": "b9c2d97cce1b6e59ee43ed64d374cddfed466f81", "filename": "include/xregex2.h", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/include%2Fxregex2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/include%2Fxregex2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fxregex2.h?ref=27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "patch": "@@ -1,24 +1,23 @@\n /* Definitions for data structures and routines for the regular\n    expression library, version 0.12.\n    Copyright (C) 1985,1989-1993,1995-1998, 2000 Free Software Foundation, Inc.\n-\n    This file is part of the GNU C Library.  Its master source is NOT part of\n    the C library, however.  The master source lives in /gd/gnu/lib.\n \n    The GNU C Library is free software; you can redistribute it and/or\n-   modify it under the terms of the GNU Library General Public License as\n-   published by the Free Software Foundation; either version 2 of the\n-   License, or (at your option) any later version.\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n \n    The GNU C Library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   Library General Public License for more details.\n+   Lesser General Public License for more details.\n \n-   You should have received a copy of the GNU Library General Public\n-   License along with the GNU C Library; see the file COPYING.LIB.  If not,\n-   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, write to the Free\n+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.  */\n \n #ifndef _REGEX_H\n #define _REGEX_H 1"}, {"sha": "1b3ce6a55ed38641b9bb39030f7b682d48f366dc", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "patch": "@@ -1,3 +1,17 @@\n+2001-07-18  Andreas Schwab  <schwab@suse.de>\n+\n+\t* regex.c (WORDCHAR_P) [WCHAR]: Also return true for the\n+\tunderscore character.\n+\n+2001-07-18  Ulrich Drepper  <drepper@redhat.com>\n+\n+\t* regex.c: Limit string length printed in debug messages to 100\n+\tchars.\n+\n+2001-07-18  Andreas Jaeger  <aj@suse.de>\n+\n+\t* regex.c: Place under LGPL version 2.1.\n+\n 2001-07-10  Jeff Johnston  <jjohnstn@redhat.com>\n \n \t* Makefile.in: Add support for regex code."}, {"sha": "f06775237913328cb8afea7d0e37b0e97d61d53b", "filename": "libiberty/regex.c", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/libiberty%2Fregex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ffc806c4fb1354fb40cb2e5148098ea85e9dcf/libiberty%2Fregex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fregex.c?ref=27ffc806c4fb1354fb40cb2e5148098ea85e9dcf", "patch": "@@ -3,26 +3,28 @@\n    (Implements POSIX draft P1003.2/D11.2, except for some of the\n    internationalization features.)\n    Copyright (C) 1993-1999, 2000, 2001 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n \n    The GNU C Library is free software; you can redistribute it and/or\n-   modify it under the terms of the GNU Library General Public License as\n-   published by the Free Software Foundation; either version 2 of the\n-   License, or (at your option) any later version.\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n \n    The GNU C Library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   Library General Public License for more details.\n+   Lesser General Public License for more details.\n \n-   You should have received a copy of the GNU Library General Public\n-   License along with the GNU C Library; see the file COPYING.LIB.  If not,\n-   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, write to the Free\n+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+   02111-1307 USA.  */\n \n /* This file has been modified for usage in libiberty.  It includes \"xregex.h\"\n    instead of <regex.h>.  The \"xregex.h\" header file renames all external\n    routines with an \"x\" prefix so they do not collide with the native regex\n    routines or with other components regex routines. */\n+/* AIX requires this to be the first thing in the file. */\n #if defined _AIX && !defined REGEX_MALLOC\n   #pragma alloca\n #endif\n@@ -1184,6 +1186,8 @@ PREFIX(print_double_string) (where, string1, size1, string2, size2)\n     printf (\"(null)\");\n   else\n     {\n+      int cnt;\n+\n       if (FIRST_STRING_P (where))\n         {\n           for (this_char = where - string1; this_char < size1; this_char++)\n@@ -1192,8 +1196,16 @@ PREFIX(print_double_string) (where, string1, size1, string2, size2)\n           where = string2;\n         }\n \n+      cnt = 0;\n       for (this_char = where - string2; this_char < size2; this_char++)\n-        PUT_CHAR (string2[this_char]);\n+\t{\n+\t  PUT_CHAR (string2[this_char]);\n+\t  if (++cnt > 100)\n+\t    {\n+\t      fputs (\"...\", stdout);\n+\t      break;\n+\t    }\n+\t}\n     }\n }\n \n@@ -5339,7 +5351,9 @@ PREFIX(re_search_2) (bufp, string1, size1, string2, size2, startpos, range,\n /* Use internationalized API instead of SYNTAX.  */\n # define WORDCHAR_P(d)\t\t\t\t\t\t\t\\\n   (iswalnum ((wint_t)((d) == end1 ? *string2\t\t\t\t\\\n-           : (d) == string2 - 1 ? *(end1 - 1) : *(d))) != 0)\n+           : (d) == string2 - 1 ? *(end1 - 1) : *(d))) != 0\t\t\\\n+   || ((d) == end1 ? *string2\t\t\t\t\t\t\\\n+       : (d) == string2 - 1 ? *(end1 - 1) : *(d)) == L'_')\n #else /* BYTE */\n # define WORDCHAR_P(d)\t\t\t\t\t\t\t\\\n   (SYNTAX ((d) == end1 ? *string2\t\t\t\t\t\\"}]}