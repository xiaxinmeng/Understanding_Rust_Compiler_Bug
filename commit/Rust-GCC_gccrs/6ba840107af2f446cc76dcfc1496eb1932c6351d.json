{"sha": "6ba840107af2f446cc76dcfc1496eb1932c6351d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhODQwMTA3YWYyZjQ0NmNjNzZkY2ZjMTQ5NmViMTkzMmM2MzUxZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-14T15:06:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-14T15:06:40Z"}, "message": "tree-vect-data-refs.c (vect_setup_realignment): Remove call to mark_symbols_for_renaming.\n\n2012-05-14  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-vect-data-refs.c (vect_setup_realignment): Remove\n\tcall to mark_symbols_for_renaming.\n\t(vect_permute_load_chain): Likewise.\n\t* tree-vect-loop.c (vect_is_slp_reduction): Update stmt\n\tinstead of calling mark_symbols_for_renaming.\n\t* tree-vect-stmts.c (read_vector_array): Remove call to\n\tmark_symbols_for_renaming.\n\t(write_vector_array): Likewise.\n\t(vectorizable_call): Likewise.\n\t(vectorizable_store): Likewise.\n\t(vectorizable_load): Likewise.\n\t* matrix-reorg.c (transform_allocation_sites): Likewise.\n\t* tree-ssa-pre.c (create_expression_by_pieces): Likewise.\n\t(create_expression_by_pieces): Likewise.\n\nFrom-SVN: r187469", "tree": {"sha": "2cf513ada7117a7647488606b4304e2ce54a8a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cf513ada7117a7647488606b4304e2ce54a8a7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ba840107af2f446cc76dcfc1496eb1932c6351d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba840107af2f446cc76dcfc1496eb1932c6351d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba840107af2f446cc76dcfc1496eb1932c6351d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba840107af2f446cc76dcfc1496eb1932c6351d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "097dcc6683c3978015f8dd86a201679f530e3dd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/097dcc6683c3978015f8dd86a201679f530e3dd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/097dcc6683c3978015f8dd86a201679f530e3dd3"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "647fcf4752706821ec5da89f5a026a116fb7d160", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ba840107af2f446cc76dcfc1496eb1932c6351d", "patch": "@@ -1,3 +1,20 @@\n+2012-05-14  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (vect_setup_realignment): Remove\n+\tcall to mark_symbols_for_renaming.\n+\t(vect_permute_load_chain): Likewise.\n+\t* tree-vect-loop.c (vect_is_slp_reduction): Update stmt\n+\tinstead of calling mark_symbols_for_renaming.\n+\t* tree-vect-stmts.c (read_vector_array): Remove call to\n+\tmark_symbols_for_renaming.\n+\t(write_vector_array): Likewise.\n+\t(vectorizable_call): Likewise.\n+\t(vectorizable_store): Likewise.\n+\t(vectorizable_load): Likewise.\n+\t* matrix-reorg.c (transform_allocation_sites): Likewise.\n+\t* tree-ssa-pre.c (create_expression_by_pieces): Likewise.\n+\t(create_expression_by_pieces): Likewise.\n+\n 2012-05-14  Richard Guenther  <rguenther@suse.de>\n \n \t* gimplify.c (gimple_regimplify_operands): Only mark the LHS"}, {"sha": "72a6a71af05c3653b44156f445df90d9187d3895", "filename": "gcc/matrix-reorg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Fmatrix-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Fmatrix-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatrix-reorg.c?ref=6ba840107af2f446cc76dcfc1496eb1932c6351d", "patch": "@@ -2159,7 +2159,6 @@ transform_allocation_sites (void **slot, void *data ATTRIBUTE_UNUSED)\n \t\t\t\t\t   true, GSI_SAME_STMT);\n       /* GLOBAL_HOLDING_THE_SIZE = DIM_SIZE.  */\n       stmt = gimple_build_assign (dim_var, dim_size);\n-      mark_symbols_for_renaming (stmt);\n       gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n \n       prev_dim_size = mi->dimension_size[i] = dim_var;"}, {"sha": "c63acec556d50a5fbf2bc32f3f3c2f86f51b6e66", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=6ba840107af2f446cc76dcfc1496eb1932c6351d", "patch": "@@ -3117,7 +3117,6 @@ create_expression_by_pieces (basic_block block, pre_expr expr,\n \t\tbitmap_value_replace_in_set (NEW_SETS (block), nameexpr);\n \t      bitmap_value_replace_in_set (AVAIL_OUT (block), nameexpr);\n \t    }\n-\t  mark_symbols_for_renaming (stmt);\n \t}\n       gimple_seq_add_seq (stmts, forced_stmts);\n     }\n@@ -3138,9 +3137,6 @@ create_expression_by_pieces (basic_block block, pre_expr expr,\n   gimple_seq_add_stmt (stmts, newstmt);\n   bitmap_set_bit (inserted_exprs, SSA_NAME_VERSION (name));\n \n-  /* All the symbols in NEWEXPR should be put into SSA form.  */\n-  mark_symbols_for_renaming (newstmt);\n-\n   /* Fold the last statement.  */\n   gsi = gsi_last (*stmts);\n   if (fold_stmt_inplace (&gsi))"}, {"sha": "c8882ae39d481be55a7c9c734b904f726d2c3bdc", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=6ba840107af2f446cc76dcfc1496eb1932c6351d", "patch": "@@ -4273,7 +4273,6 @@ vect_setup_realignment (gimple stmt, gimple_stmt_iterator *gsi,\n       new_stmt = gimple_build_assign (vec_dest, data_ref);\n       new_temp = make_ssa_name (vec_dest, new_stmt);\n       gimple_assign_set_lhs (new_stmt, new_temp);\n-      mark_symbols_for_renaming (new_stmt);\n       if (pe)\n         {\n           new_bb = gsi_insert_on_edge_immediate (pe, new_stmt);\n@@ -4531,7 +4530,6 @@ vect_permute_load_chain (VEC(tree,heap) *dr_chain,\n \t  data_ref = make_ssa_name (perm_dest, perm_stmt);\n \t  gimple_assign_set_lhs (perm_stmt, data_ref);\n \t  vect_finish_stmt_generation (stmt, perm_stmt, gsi);\n-\t  mark_symbols_for_renaming (perm_stmt);\n \n \t  VEC_replace (tree, *result_chain, j/2, data_ref);\n \n@@ -4547,7 +4545,6 @@ vect_permute_load_chain (VEC(tree,heap) *dr_chain,\n \t  data_ref = make_ssa_name (perm_dest, perm_stmt);\n \t  gimple_assign_set_lhs (perm_stmt, data_ref);\n \t  vect_finish_stmt_generation (stmt, perm_stmt, gsi);\n-\t  mark_symbols_for_renaming (perm_stmt);\n \n \t  VEC_replace (tree, *result_chain, j/2+length/2, data_ref);\n \t}"}, {"sha": "5fe1165917e8dcad11860717591fab9f4329986b", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=6ba840107af2f446cc76dcfc1496eb1932c6351d", "patch": "@@ -1929,7 +1929,7 @@ vect_is_slp_reduction (loop_vec_info loop_info, gimple phi, gimple first_stmt)\n \t      swap_tree_operands (next_stmt,\n \t \t\t          gimple_assign_rhs1_ptr (next_stmt),\n                                   gimple_assign_rhs2_ptr (next_stmt));\n-\t      mark_symbols_for_renaming (next_stmt);\n+\t      update_stmt (next_stmt);\n \t    }\n \t  else\n \t    return false;"}, {"sha": "98e5d4594ec9704cead4d762ac412d7154eefd61", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba840107af2f446cc76dcfc1496eb1932c6351d/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=6ba840107af2f446cc76dcfc1496eb1932c6351d", "patch": "@@ -74,7 +74,6 @@ read_vector_array (gimple stmt, gimple_stmt_iterator *gsi, tree scalar_dest,\n   vect_name = make_ssa_name (vect, new_stmt);\n   gimple_assign_set_lhs (new_stmt, vect_name);\n   vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-  mark_symbols_for_renaming (new_stmt);\n \n   return vect_name;\n }\n@@ -96,7 +95,6 @@ write_vector_array (gimple stmt, gimple_stmt_iterator *gsi, tree vect,\n \n   new_stmt = gimple_build_assign (array_ref, vect);\n   vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-  mark_symbols_for_renaming (new_stmt);\n }\n \n /* PTR is a pointer to an array of type TYPE.  Return a representation\n@@ -1795,7 +1793,6 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t\t  new_temp = make_ssa_name (vec_dest, new_stmt);\n \t\t  gimple_call_set_lhs (new_stmt, new_temp);\n \t\t  vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-\t\t  mark_symbols_for_renaming (new_stmt);\n \t\t  VEC_quick_push (gimple, SLP_TREE_VEC_STMTS (slp_node),\n \t\t\t\t  new_stmt);\n \t\t}\n@@ -1830,9 +1827,7 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t  new_stmt = gimple_build_call_vec (fndecl, vargs);\n \t  new_temp = make_ssa_name (vec_dest, new_stmt);\n \t  gimple_call_set_lhs (new_stmt, new_temp);\n-\n \t  vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-\t  mark_symbols_for_renaming (new_stmt);\n \n \t  if (j == 0)\n \t    STMT_VINFO_VEC_STMT (stmt_info) = *vec_stmt = new_stmt;\n@@ -1885,7 +1880,6 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t\t  new_temp = make_ssa_name (vec_dest, new_stmt);\n \t\t  gimple_call_set_lhs (new_stmt, new_temp);\n \t\t  vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-\t\t  mark_symbols_for_renaming (new_stmt);\n \t\t  VEC_quick_push (gimple, SLP_TREE_VEC_STMTS (slp_node),\n \t\t\t\t  new_stmt);\n \t\t}\n@@ -1927,9 +1921,7 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t  new_stmt = gimple_build_call_vec (fndecl, vargs);\n \t  new_temp = make_ssa_name (vec_dest, new_stmt);\n \t  gimple_call_set_lhs (new_stmt, new_temp);\n-\n \t  vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-\t  mark_symbols_for_renaming (new_stmt);\n \n \t  if (j == 0)\n \t    STMT_VINFO_VEC_STMT (stmt_info) = new_stmt;\n@@ -4019,7 +4011,6 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t  new_stmt = gimple_build_call_internal (IFN_STORE_LANES, 1, vec_array);\n \t  gimple_call_set_lhs (new_stmt, data_ref);\n \t  vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-\t  mark_symbols_for_renaming (new_stmt);\n \t}\n       else\n \t{\n@@ -4076,7 +4067,6 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t      /* Arguments are ready.  Create the new vector stmt.  */\n \t      new_stmt = gimple_build_assign (data_ref, vec_oprnd);\n \t      vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-\t      mark_symbols_for_renaming (new_stmt);\n \n \t      if (slp)\n \t\tcontinue;\n@@ -4629,7 +4619,6 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t  vec_inv = build_constructor (vectype, v);\n \t  new_temp = vect_init_vector (stmt, vec_inv, vectype, gsi);\n \t  new_stmt = SSA_NAME_DEF_STMT (new_temp);\n-\t  mark_symbols_for_renaming (new_stmt);\n \n \t  if (j == 0)\n \t    STMT_VINFO_VEC_STMT (stmt_info) = *vec_stmt = new_stmt;\n@@ -4845,7 +4834,6 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t  new_stmt = gimple_build_call_internal (IFN_LOAD_LANES, 1, data_ref);\n \t  gimple_call_set_lhs (new_stmt, vec_array);\n \t  vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-\t  mark_symbols_for_renaming (new_stmt);\n \n \t  /* Extract each vector into an SSA_NAME.  */\n \t  for (i = 0; i < vec_num; i++)\n@@ -4978,7 +4966,6 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t      new_temp = make_ssa_name (vec_dest, new_stmt);\n \t      gimple_assign_set_lhs (new_stmt, new_temp);\n \t      vect_finish_stmt_generation (stmt, new_stmt, gsi);\n-\t      mark_symbols_for_renaming (new_stmt);\n \n \t      /* 3. Handle explicit realignment if necessary/supported.\n \t\t Create in loop:"}]}