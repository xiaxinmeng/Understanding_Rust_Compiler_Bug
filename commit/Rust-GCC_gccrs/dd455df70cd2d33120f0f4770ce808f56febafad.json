{"sha": "dd455df70cd2d33120f0f4770ce808f56febafad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ0NTVkZjcwY2QyZDMzMTIwZjBmNDc3MGNlODA4ZjU2ZmViYWZhZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-06-19T16:12:11Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-06-19T16:12:11Z"}, "message": "amdgcn: Silence compile warnings\n\ngcc/ChangeLog:\n\n\t* config/gcn/gcn.c (gcn_related_vector_mode): Add ARG_UNUSED.\n\t(output_file_start): Use const 'char *'.", "tree": {"sha": "d58c6de70d8bbdb3dbc22759d23514c12d201a51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d58c6de70d8bbdb3dbc22759d23514c12d201a51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd455df70cd2d33120f0f4770ce808f56febafad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd455df70cd2d33120f0f4770ce808f56febafad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd455df70cd2d33120f0f4770ce808f56febafad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd455df70cd2d33120f0f4770ce808f56febafad/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0bfe016712ace877dd5b057bc1eb06e3c307623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0bfe016712ace877dd5b057bc1eb06e3c307623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0bfe016712ace877dd5b057bc1eb06e3c307623"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b6ff0bbc2afed2f0a7dce6e738e28ea7e0076649", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd455df70cd2d33120f0f4770ce808f56febafad/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd455df70cd2d33120f0f4770ce808f56febafad/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=dd455df70cd2d33120f0f4770ce808f56febafad", "patch": "@@ -4038,8 +4038,8 @@ gcn_vectorize_preferred_simd_mode (scalar_mode mode)\n    In particular, we do *not* want to match vector bit-size.  */\n \n static opt_machine_mode\n-gcn_related_vector_mode (machine_mode vector_mode, scalar_mode element_mode,\n-\t\t\t poly_uint64 nunits)\n+gcn_related_vector_mode (machine_mode ARG_UNUSED (vector_mode),\n+\t\t\t scalar_mode element_mode, poly_uint64 nunits)\n {\n   if (known_ne (nunits, 0U) && known_ne (nunits, 64U))\n     return VOIDmode;\n@@ -4937,7 +4937,7 @@ gcn_fixup_accel_lto_options (tree fndecl)\n static void\n output_file_start (void)\n {\n-  char *cpu;\n+  const char *cpu;\n   switch (gcn_arch)\n     {\n     case PROCESSOR_FIJI: cpu = \"gfx803\"; break;"}]}