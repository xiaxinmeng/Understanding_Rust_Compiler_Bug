{"sha": "139eda626f1994d1f1b0bac849db4e0836850990", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM5ZWRhNjI2ZjE5OTRkMWYxYjBiYWM4NDlkYjRlMDgzNjg1MDk5MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-29T12:42:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-29T12:42:53Z"}, "message": "(L_eh: __unwind_function): Implement for VAX.\n\nFrom-SVN: r10539", "tree": {"sha": "ad86752ef723885c5281f2800c78364a00b95e83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad86752ef723885c5281f2800c78364a00b95e83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/139eda626f1994d1f1b0bac849db4e0836850990", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139eda626f1994d1f1b0bac849db4e0836850990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/139eda626f1994d1f1b0bac849db4e0836850990", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139eda626f1994d1f1b0bac849db4e0836850990/comments", "author": null, "committer": null, "parents": [{"sha": "2c3aa1ba73a602e91676d7c2c0a905e1e57576b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c3aa1ba73a602e91676d7c2c0a905e1e57576b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c3aa1ba73a602e91676d7c2c0a905e1e57576b3"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "4656597e06f20bc93cf48ce4cf20ac490d6599a9", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/139eda626f1994d1f1b0bac849db4e0836850990/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/139eda626f1994d1f1b0bac849db4e0836850990/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=139eda626f1994d1f1b0bac849db4e0836850990", "patch": "@@ -2390,6 +2390,22 @@ __unwind_function(void *ptr)\n   asm(\"# br\");\n   asm(\"mtctr 3;bctr # b 3\");\n }\n+#elif #machine(vax)\n+__unwind_function(void *ptr)\n+{\n+  __label__ return_again;\n+\n+  /* Replace our frame's return address with the label below.\n+     During execution, we will first return here instead of to\n+     caller, then second return takes caller's frame off the stack.\n+     Two returns matches two actual calls, so is less likely to\n+     confuse debuggers.  `16' corresponds to RETURN_ADDRESS_OFFSET.  */\n+  __asm (\"movl %0,16(fp)\" : : \"p\" (&& return_again));\n+  return;\n+\n+ return_again:\n+  return;\n+}\n #else\n __unwind_function(void *ptr)\n {"}]}