{"sha": "071e8018fe67cabb165255ac88a165b80fadbcc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcxZTgwMThmZTY3Y2FiYjE2NTI1NWFjODhhMTY1YjgwZmFkYmNjNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2016-07-06T08:12:36Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2016-07-06T08:12:36Z"}, "message": "[3/7] Fix load/store costs for strided groups\n\nvect_model_store_cost had:\n\n      /* Costs of the stores.  */\n      if (STMT_VINFO_STRIDED_P (stmt_info)\n          && !STMT_VINFO_GROUPED_ACCESS (stmt_info))\n        {\n          /* N scalar stores plus extracting the elements.  */\n          inside_cost += record_stmt_cost (body_cost_vec,\n\t\t\t\t       ncopies * TYPE_VECTOR_SUBPARTS (vectype),\n\t\t\t\t       scalar_store, stmt_info, 0, vect_body);\n\nBut non-SLP strided groups also use individual scalar stores rather than\nvector stores, so I think we should skip this only for SLP groups.\n\nThe same applies to vect_model_load_cost.\n\nTested on aarch64-linux-gnu and x86_64-linux-gnu.\n\ngcc/\n\t* tree-vect-stmts.c (vect_model_store_cost): For non-SLP\n\tstrided groups, use the cost of N scalar accesses instead\n\tof ncopies vector accesses.\n\t(vect_model_load_cost): Likewise.\n\nFrom-SVN: r238035", "tree": {"sha": "038668afd87ead261a1eddfada832cac39602aa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/038668afd87ead261a1eddfada832cac39602aa9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/071e8018fe67cabb165255ac88a165b80fadbcc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/071e8018fe67cabb165255ac88a165b80fadbcc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/071e8018fe67cabb165255ac88a165b80fadbcc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/071e8018fe67cabb165255ac88a165b80fadbcc7/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "892a981f1efb398768ad5a138fb7c971462d1e79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892a981f1efb398768ad5a138fb7c971462d1e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892a981f1efb398768ad5a138fb7c971462d1e79"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "60dec98ebcde6ff35d4c8bdaf988849a397c4dcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/071e8018fe67cabb165255ac88a165b80fadbcc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/071e8018fe67cabb165255ac88a165b80fadbcc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=071e8018fe67cabb165255ac88a165b80fadbcc7", "patch": "@@ -1,3 +1,10 @@\n+2016-07-06  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-stmts.c (vect_model_store_cost): For non-SLP\n+\tstrided groups, use the cost of N scalar accesses instead\n+\tof ncopies vector accesses.\n+\t(vect_model_load_cost): Likewise.\n+\n 2016-07-06  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-stmts.c (vect_cost_group_size): Delete."}, {"sha": "b17fa7b3f1851531d2d9d78b248c115bb6a43908", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/071e8018fe67cabb165255ac88a165b80fadbcc7/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/071e8018fe67cabb165255ac88a165b80fadbcc7/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=071e8018fe67cabb165255ac88a165b80fadbcc7", "patch": "@@ -926,8 +926,7 @@ vect_model_store_cost (stmt_vec_info stmt_info, int ncopies,\n \n   tree vectype = STMT_VINFO_VECTYPE (stmt_info);\n   /* Costs of the stores.  */\n-  if (STMT_VINFO_STRIDED_P (stmt_info)\n-      && !STMT_VINFO_GROUPED_ACCESS (stmt_info))\n+  if (STMT_VINFO_STRIDED_P (stmt_info) && !slp_node)\n     {\n       /* N scalar stores plus extracting the elements.  */\n       inside_cost += record_stmt_cost (body_cost_vec,\n@@ -1059,8 +1058,7 @@ vect_model_load_cost (stmt_vec_info stmt_info, int ncopies,\n     }\n \n   /* The loads themselves.  */\n-  if (STMT_VINFO_STRIDED_P (stmt_info)\n-      && !STMT_VINFO_GROUPED_ACCESS (stmt_info))\n+  if (STMT_VINFO_STRIDED_P (stmt_info) && !slp_node)\n     {\n       /* N scalar loads plus gathering them into a vector.  */\n       tree vectype = STMT_VINFO_VECTYPE (stmt_info);"}]}