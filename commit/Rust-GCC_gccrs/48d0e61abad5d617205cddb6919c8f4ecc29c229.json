{"sha": "48d0e61abad5d617205cddb6919c8f4ecc29c229", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhkMGU2MWFiYWQ1ZDYxNzIwNWNkZGI2OTE5YzhmNGVjYzI5YzIyOQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-09-04T12:51:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:25:04Z"}, "message": "[Ada] Reject illegal syntax in pragma Contract_Cases\n\ngcc/ada/\n\n\t* contracts.adb (Analyze_Entry_Or_Subprogram_Contract,\n\tAnalyze_Subprogram_Body_Stub_Contract): Fix missing references\n\tto Subprogram_Variant where similar references to Contract_Cases\n\tare present.\n\t* sem_prag.adb (Analyze_Contract_Case, Analyze_Variant): Check\n\tthat aggregate parameter has no expressions.\n\t(Analyze_Pragma): Replace Contract_Cases with Subprogram_Variant\n\tin a copy-pasted comment.", "tree": {"sha": "909784bf7803a364eaee448688a29990289c7d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/909784bf7803a364eaee448688a29990289c7d9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48d0e61abad5d617205cddb6919c8f4ecc29c229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d0e61abad5d617205cddb6919c8f4ecc29c229", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48d0e61abad5d617205cddb6919c8f4ecc29c229", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d0e61abad5d617205cddb6919c8f4ecc29c229/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "973c7b7e5460866099ba3904ae29808674604f0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/973c7b7e5460866099ba3904ae29808674604f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/973c7b7e5460866099ba3904ae29808674604f0e"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "9e328e248dbc2e0f4cb0ab08f0e4fdc0938c9b11", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d0e61abad5d617205cddb6919c8f4ecc29c229/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d0e61abad5d617205cddb6919c8f4ecc29c229/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=48d0e61abad5d617205cddb6919c8f4ecc29c229", "patch": "@@ -668,7 +668,7 @@ package body Contracts is\n             end;\n          end if;\n \n-         --  Analyze contract-cases and test-cases\n+         --  Analyze contract-cases, subprogram-variant and test-cases\n \n          Prag := Contract_Test_Cases (Items);\n          while Present (Prag) loop\n@@ -1432,6 +1432,7 @@ package body Contracts is\n       --    Global\n       --    Postcondition\n       --    Precondition\n+      --    Subprogram_Variant\n       --    Test_Case\n \n       else"}, {"sha": "1e1a279da2e95175aa2647470fede2d29162ccc2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48d0e61abad5d617205cddb6919c8f4ecc29c229/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48d0e61abad5d617205cddb6919c8f4ecc29c229/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=48d0e61abad5d617205cddb6919c8f4ecc29c229", "patch": "@@ -549,7 +549,11 @@ package body Sem_Prag is\n \n       pragma Assert (Nkind (CCases) = N_Aggregate);\n \n-      if Present (Component_Associations (CCases)) then\n+      --  Only CASE_GUARD => CONSEQUENCE clauses are allowed\n+\n+      if Present (Component_Associations (CCases))\n+        and then No (Expressions (CCases))\n+      then\n \n          --  Ensure that the formal parameters are visible when analyzing all\n          --  clauses. This falls out of the general rule of aspects pertaining\n@@ -23900,7 +23904,7 @@ package body Sem_Prag is\n             Ensure_Aggregate_Form (Get_Argument (N, Spec_Id));\n \n             --  Chain the pragma on the contract for further processing by\n-            --  Analyze_Contract_Cases_In_Decl_Part.\n+            --  Analyze_Subprogram_Variant_In_Decl_Part.\n \n             Add_Contract_Item (N, Defining_Entity (Subp_Decl));\n \n@@ -29048,7 +29052,11 @@ package body Sem_Prag is\n \n       pragma Assert (Nkind (Variants) = N_Aggregate);\n \n-      if Present (Component_Associations (Variants)) then\n+      --  Only \"change_direction => discrete_expression\" clauses are allowed\n+\n+      if Present (Component_Associations (Variants))\n+        and then No (Expressions (Variants))\n+      then\n \n          --  Ensure that the formal parameters are visible when analyzing all\n          --  clauses. This falls out of the general rule of aspects pertaining"}]}