{"sha": "21dac32c3c6e6a26fef2639662a1bff50166e58d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFkYWMzMmMzYzZlNmEyNmZlZjI2Mzk2NjJhMWJmZjUwMTY2ZTU4ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-10-14T19:40:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-10-14T19:40:29Z"}, "message": "primary.c (match_boz_constant): Add missing break after gfc_error.\n\n\t* primary.c (match_boz_constant): Add missing break after gfc_error.\n\n\t* gfortran.dg/boz_5.f90: New test.\n\nFrom-SVN: r105420", "tree": {"sha": "077b8b73ab21d03e9277f933925e340ccc528a37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/077b8b73ab21d03e9277f933925e340ccc528a37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21dac32c3c6e6a26fef2639662a1bff50166e58d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21dac32c3c6e6a26fef2639662a1bff50166e58d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21dac32c3c6e6a26fef2639662a1bff50166e58d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21dac32c3c6e6a26fef2639662a1bff50166e58d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8ad8c93effa24b68de1287428844f5b6025d593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ad8c93effa24b68de1287428844f5b6025d593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ad8c93effa24b68de1287428844f5b6025d593"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "7f263753b7e9a6d078a07dd0305be430ba210064", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21dac32c3c6e6a26fef2639662a1bff50166e58d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21dac32c3c6e6a26fef2639662a1bff50166e58d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=21dac32c3c6e6a26fef2639662a1bff50166e58d", "patch": "@@ -1,3 +1,7 @@\n+2005-10-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* primary.c (match_boz_constant): Add missing break after gfc_error.\n+\n 2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/24092"}, {"sha": "e3e812795936180a5c42e27afd1451db917e7311", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21dac32c3c6e6a26fef2639662a1bff50166e58d/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21dac32c3c6e6a26fef2639662a1bff50166e58d/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=21dac32c3c6e6a26fef2639662a1bff50166e58d", "patch": "@@ -351,10 +351,13 @@ match_boz_constant (gfc_expr ** result)\n         {\n \tcase 2:\n           gfc_error (\"Empty set of digits in binary constant at %C\");\n+\t  break;\n \tcase 8:\n           gfc_error (\"Empty set of digits in octal constant at %C\");\n+\t  break;\n \tcase 16:\n           gfc_error (\"Empty set of digits in hexadecimal constant at %C\");\n+\t  break;\n         default:\n \t  gcc_unreachable ();\n         }\n@@ -367,10 +370,13 @@ match_boz_constant (gfc_expr ** result)\n         {\n \tcase 2:\n \t  gfc_error (\"Illegal character in binary constant at %C\");\n+\t  break;\n \tcase 8:\n \t  gfc_error (\"Illegal character in octal constant at %C\");\n+\t  break;\n \tcase 16:\n \t  gfc_error (\"Illegal character in hexadecimal constant at %C\");\n+\t  break;\n \tdefault:\n \t  gcc_unreachable ();\n \t}"}, {"sha": "fcb7bec7ece7adce7fae5a95004fb008f19ffd48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21dac32c3c6e6a26fef2639662a1bff50166e58d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21dac32c3c6e6a26fef2639662a1bff50166e58d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21dac32c3c6e6a26fef2639662a1bff50166e58d", "patch": "@@ -1,3 +1,7 @@\n+2005-10-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gfortran.dg/boz_5.f90: New test.\n+\n 2005-10-14  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/22551"}, {"sha": "3b1994ba0e143476b3080f6b7a82cfa0b4fbca26", "filename": "gcc/testsuite/gfortran.dg/boz_5.f90", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21dac32c3c6e6a26fef2639662a1bff50166e58d/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21dac32c3c6e6a26fef2639662a1bff50166e58d/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_5.f90?ref=21dac32c3c6e6a26fef2639662a1bff50166e58d", "patch": "@@ -0,0 +1,4 @@\n+! { dg-do compile }\n+  integer, dimension (2) :: i\n+  i = (/Z'abcde', Z'abcde/)\t! { dg-error \"Illegal character\" }\n+end"}]}