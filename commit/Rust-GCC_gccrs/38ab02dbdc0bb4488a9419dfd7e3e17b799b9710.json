{"sha": "38ab02dbdc0bb4488a9419dfd7e3e17b799b9710", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhhYjAyZGJkYzBiYjQ0ODhhOTQxOWRmZDdlM2UxN2I3OTliOTcxMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-12T21:24:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-12T21:24:43Z"}, "message": "s/recurson/recursion/\n\nFrom-SVN: r176217", "tree": {"sha": "834a0427c73e7a10a0e450ea35a256b3b7c48c81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/834a0427c73e7a10a0e450ea35a256b3b7c48c81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38ab02dbdc0bb4488a9419dfd7e3e17b799b9710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ab02dbdc0bb4488a9419dfd7e3e17b799b9710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ab02dbdc0bb4488a9419dfd7e3e17b799b9710", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ab02dbdc0bb4488a9419dfd7e3e17b799b9710/comments", "author": null, "committer": null, "parents": [{"sha": "e84a58ffbeb5c18a01e7a8daf9289618cb907f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84a58ffbeb5c18a01e7a8daf9289618cb907f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e84a58ffbeb5c18a01e7a8daf9289618cb907f21"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "893a4bf76649ef71290d224e4c2d9ffd6a2dfe6a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ab02dbdc0bb4488a9419dfd7e3e17b799b9710/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ab02dbdc0bb4488a9419dfd7e3e17b799b9710/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=38ab02dbdc0bb4488a9419dfd7e3e17b799b9710", "patch": "@@ -7515,7 +7515,7 @@ neglectable_inst_p (tree d)\n    neglectable and instantiated from within an erroneous instantiation.  */\n \n static bool\n-limit_bad_template_recurson (tree decl)\n+limit_bad_template_recursion (tree decl)\n {\n   struct tinst_level *lev = current_tinst_level;\n   int errs = errorcount + sorrycount;\n@@ -7565,7 +7565,7 @@ push_tinst_level (tree d)\n   /* If the current instantiation caused problems, don't let it instantiate\n      anything else.  Do allow deduction substitution and decls usable in\n      constant expressions.  */\n-  if (limit_bad_template_recurson (d))\n+  if (limit_bad_template_recursion (d))\n     return 0;\n \n   new_level = ggc_alloc_tinst_level ();"}]}