{"sha": "880031e1f9c134581537c61af91d89b7bb033dc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgwMDMxZTFmOWMxMzQ1ODE1MzdjNjFhZjkxZDg5YjdiYjAzM2RjNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2005-07-27T16:21:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2005-07-27T16:21:48Z"}, "message": "tree-vrp.c (vrp_meet): Intersect the equivalency sets when meeting a VR_ANTI_RANGE with a VR_RANGE.\n\n        * tree-vrp.c (vrp_meet): Intersect the equivalency sets when\n        meeting a VR_ANTI_RANGE with a VR_RANGE.  When intersecting\n        equivalency sets, correctly handle the case were vr0 has an\n        equivalency set, but vr1 does not.\n\n        * gcc.c-torture/execute/pr22630.c: New test.\n\nFrom-SVN: r102432", "tree": {"sha": "ca21c19cd3ac54482070c4eb934ecff0d6f86fc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca21c19cd3ac54482070c4eb934ecff0d6f86fc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/880031e1f9c134581537c61af91d89b7bb033dc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880031e1f9c134581537c61af91d89b7bb033dc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/880031e1f9c134581537c61af91d89b7bb033dc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880031e1f9c134581537c61af91d89b7bb033dc7/comments", "author": null, "committer": null, "parents": [{"sha": "b940ce0e35a52e4a337cb3726d21945ef0b99465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b940ce0e35a52e4a337cb3726d21945ef0b99465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b940ce0e35a52e4a337cb3726d21945ef0b99465"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "968809f6d4950f67410aa509185215a8cd4fbd03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880031e1f9c134581537c61af91d89b7bb033dc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880031e1f9c134581537c61af91d89b7bb033dc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=880031e1f9c134581537c61af91d89b7bb033dc7", "patch": "@@ -1,3 +1,10 @@\n+2005-07-27  Jeff Law  <law@redhat.com>\n+\n+\t* tree-vrp.c (vrp_meet): Intersect the equivalency sets when\n+\tmeeting a VR_ANTI_RANGE with a VR_RANGE.  When intersecting\n+\tequivalency sets, correctly handle the case were vr0 has an\n+\tequivalency set, but vr1 does not.\n+\n 2005-07-27  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/23073"}, {"sha": "e01e8c5a026c11bb1dbf8ef1a7a762a025e4d23a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880031e1f9c134581537c61af91d89b7bb033dc7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880031e1f9c134581537c61af91d89b7bb033dc7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=880031e1f9c134581537c61af91d89b7bb033dc7", "patch": "@@ -1,3 +1,7 @@\n+2005-07-27  Jeff Law  <law@redhat.com>\n+\n+        * gcc.c-torture/execute/pr22630.c: New test.\n+\n 2005-07-27  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/23073"}, {"sha": "d3a564999ba795af3f197b662b1b3875327c7d98", "filename": "gcc/testsuite/gcc.c-torture/execute/pr22630.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880031e1f9c134581537c61af91d89b7bb033dc7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22630.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880031e1f9c134581537c61af91d89b7bb033dc7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22630.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22630.c?ref=880031e1f9c134581537c61af91d89b7bb033dc7", "patch": "@@ -0,0 +1,23 @@\n+void abort (void);\n+\n+int j;\n+\n+void bla (int *r)\n+{\n+  int *p, *q;\n+\n+  p = q = r;\n+  if (!p)\n+    p = &j;\n+  \n+  if (p != q)\n+    j = 1;\n+}\n+\n+int main (void)\n+{\n+  bla (0);\n+  if (!j)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "58fb7ef017fb65f42e458ae8a8c883d763402ca7", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/880031e1f9c134581537c61af91d89b7bb033dc7/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/880031e1f9c134581537c61af91d89b7bb033dc7/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=880031e1f9c134581537c61af91d89b7bb033dc7", "patch": "@@ -3297,6 +3297,8 @@ vrp_meet (value_range_t *vr0, value_range_t *vr1)\n \t     the two sets.  */\n \t  if (vr0->equiv && vr1->equiv && vr0->equiv != vr1->equiv)\n \t    bitmap_and_into (vr0->equiv, vr1->equiv);\n+\t  else if (vr0->equiv && !vr1->equiv)\n+\t    bitmap_clear (vr0->equiv);\n \n \t  set_value_range (vr0, vr0->type, min, max, vr0->equiv);\n \t}\n@@ -3314,6 +3316,8 @@ vrp_meet (value_range_t *vr0, value_range_t *vr1)\n \t     the two sets.  */\n \t  if (vr0->equiv && vr1->equiv && vr0->equiv != vr1->equiv)\n \t    bitmap_and_into (vr0->equiv, vr1->equiv);\n+\t  else if (vr0->equiv && !vr1->equiv)\n+\t    bitmap_clear (vr0->equiv);\n \t}\n       else\n \tgoto no_meet;\n@@ -3329,6 +3333,13 @@ vrp_meet (value_range_t *vr0, value_range_t *vr1)\n \t{\n \t  if (vr1->type == VR_ANTI_RANGE)\n \t    copy_value_range (vr0, vr1);\n+\n+\t  /* The resulting set of equivalences is the intersection of\n+\t     the two sets.  */\n+\t  if (vr0->equiv && vr1->equiv && vr0->equiv != vr1->equiv)\n+\t    bitmap_and_into (vr0->equiv, vr1->equiv);\n+\t  else if (vr0->equiv && !vr1->equiv)\n+\t    bitmap_clear (vr0->equiv);\n \t}\n       else\n \tgoto no_meet;"}]}