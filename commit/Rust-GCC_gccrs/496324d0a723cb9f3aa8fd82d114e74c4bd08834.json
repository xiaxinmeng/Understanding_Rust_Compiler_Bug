{"sha": "496324d0a723cb9f3aa8fd82d114e74c4bd08834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk2MzI0ZDBhNzIzY2I5ZjNhYThmZDgyZDExNGU3NGM0YmQwODgzNA==", "commit": {"author": {"name": "Dan Nicolaescu", "email": "dann@ics.uci.edu", "date": "2003-04-10T05:24:26Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-10T05:24:26Z"}, "message": "regrename.c (struct du_chain): Use a bitfield for reg_class.\n\n2003-04-09  Dan Nicolaescu  <dann@ics.uci.edu>\n\t    Zack Weinberg  <zack@codesourcery.com>\n\n\t* regrename.c (struct du_chain): Use a bitfield for reg_class.\n\t* cse.c (struct qty_table_elem, struct table_elt, struct set):\n\tUse bitfields for fields holding enum rtx_code or\n\tenum machine_mode values.  Add comments explaining size choices.\n\nFrom-SVN: r65419", "tree": {"sha": "461b3e6e929a2561f52acdd1f7f238f6a8fe775e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/461b3e6e929a2561f52acdd1f7f238f6a8fe775e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/496324d0a723cb9f3aa8fd82d114e74c4bd08834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496324d0a723cb9f3aa8fd82d114e74c4bd08834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/496324d0a723cb9f3aa8fd82d114e74c4bd08834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496324d0a723cb9f3aa8fd82d114e74c4bd08834/comments", "author": null, "committer": null, "parents": [{"sha": "2363a51aeec978c105c9cff741d176a099a3eb10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2363a51aeec978c105c9cff741d176a099a3eb10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2363a51aeec978c105c9cff741d176a099a3eb10"}], "stats": {"total": 94, "additions": 54, "deletions": 40}, "files": [{"sha": "8110f48c90a0c544686f181b3c48071d002faf02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 34, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496324d0a723cb9f3aa8fd82d114e74c4bd08834/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496324d0a723cb9f3aa8fd82d114e74c4bd08834/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=496324d0a723cb9f3aa8fd82d114e74c4bd08834", "patch": "@@ -1,3 +1,11 @@\n+2003-04-09  Dan Nicolaescu  <dann@ics.uci.edu>\n+\t    Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* regrename.c (struct du_chain): Use a bitfield for reg_class.\n+\t* cse.c (struct qty_table_elem, struct table_elt, struct set):\n+\tUse bitfields for fields holding enum rtx_code or\n+\tenum machine_mode values.  Add comments explaining size choices.\n+\n 2003-04-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/fp-bit.c (unpack_d): Handle pair of doubles with\n@@ -107,9 +115,9 @@\n \n 2003-04-08  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.c (rs6000_init_builtins): Set opaque types\n-        regardless of architecture.\n-        (spe_init_builtins): Change V2SI and V2SF types to opaque types.\n+\t* config/rs6000/rs6000.c (rs6000_init_builtins): Set opaque types\n+\tregardless of architecture.\n+\t(spe_init_builtins): Change V2SI and V2SF types to opaque types.\n \n 2003-04-08  J\"orn Rennecke <joern.rennecke@superh.com>\n \n@@ -137,11 +145,11 @@ Tue Apr  8 11:12:07 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \t* doc/sourcebuild.texi: Likewise.\n \n 2003-04-07  Christian Ehrhardt  <ehrhardt@mathematik.uni-ulm.de>\n-            Richard Henderson  <rth@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n \n-        PR c/9516\n-        * expr.c (safe_from_p): Rearrange to avoid deep recursion in\n-        favour of looping and tail recursion for TREE_LIST and binops.\n+\tPR c/9516\n+\t* expr.c (safe_from_p): Rearrange to avoid deep recursion in\n+\tfavour of looping and tail recursion for TREE_LIST and binops.\n \n 2003-04-08  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n@@ -156,9 +164,9 @@ Tue Apr  8 11:12:07 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-04-07  Richard Henderson  <rth@redhat.com>\n \n-        PR opt/8634\n-        * function.c (purge_addressof_1): Don't try arithmetics for\n-        unchanging memories.\n+\tPR opt/8634\n+\t* function.c (purge_addressof_1): Don't try arithmetics for\n+\tunchanging memories.\n \n 2003-04-07  Janis Johnson  <janis187@us.ibm.com>\n \n@@ -177,13 +185,13 @@ Mon Apr  7 22:19:59 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-04-07  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.c (rs6000_common_init_builtins): Rename all\n-        V2SI_type_node to opaque_V2SI_type_node.  Rename all\n-        V2SF_type_node to opaque_V2SF_type_node.\n-        (rs6000_init_builtins): Define opaque_V2SI_type_node and\n-        opaque_V2SF_type_node.\n-        (is_ev64_opaque_type): The types opaque_V2SI_type_node and\n-        opaque_V2SF_type_node are opaque types.\n+\t* config/rs6000/rs6000.c (rs6000_common_init_builtins): Rename all\n+\tV2SI_type_node to opaque_V2SI_type_node.  Rename all\n+\tV2SF_type_node to opaque_V2SF_type_node.\n+\t(rs6000_init_builtins): Define opaque_V2SI_type_node and\n+\topaque_V2SF_type_node.\n+\t(is_ev64_opaque_type): The types opaque_V2SI_type_node and\n+\topaque_V2SF_type_node are opaque types.\n \n 2003-04-07  J\"orn Rennecke <joern.rennecke@superh.com>\n \n@@ -238,27 +246,27 @@ Mon Apr  7 22:19:59 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-04-07  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * doc/invoke.texi (RS/6000 and PowerPC Options): Document\n-        -mfloat-gprs.\n+\t* doc/invoke.texi (RS/6000 and PowerPC Options): Document\n+\t-mfloat-gprs.\n \n-        * config/rs6000/rs6000.c: Delete rs6000_fprs.\n-        Declare rs6000_float_gprs.\n-        Declare rs6000_float_gprs_string.\n-        (rs6000_parse_float_gprs_option): New.\n-        (rs6000_override_options): Genericize rs6000_parse_* calls to use\n-        rs6000_parse_yes_no_option.\n-        Change check for cpu=8540, to use TARGET_E500.\n-        (rs6000_parse_isel_option): Delete.\n-        (rs6000_parse_spe_option): Delete.\n-        (rs6000_parse_vrsave_option): Delete.\n+\t* config/rs6000/rs6000.c: Delete rs6000_fprs.\n+\tDeclare rs6000_float_gprs.\n+\tDeclare rs6000_float_gprs_string.\n+\t(rs6000_parse_float_gprs_option): New.\n+\t(rs6000_override_options): Genericize rs6000_parse_* calls to use\n+\trs6000_parse_yes_no_option.\n+\tChange check for cpu=8540, to use TARGET_E500.\n+\t(rs6000_parse_isel_option): Delete.\n+\t(rs6000_parse_spe_option): Delete.\n+\t(rs6000_parse_vrsave_option): Delete.\n \n-        * config/rs6000/rs6000.h: Rename rs6000_fprs to rs6000_float_gprs.\n-        Define rs6000_float_gprs_string.\n-        (TARGET_OPTIONS): Add rs6000_float_gprs option.\n+\t* config/rs6000/rs6000.h: Rename rs6000_fprs to rs6000_float_gprs.\n+\tDefine rs6000_float_gprs_string.\n+\t(TARGET_OPTIONS): Add rs6000_float_gprs option.\n \n-        * config/rs6000/eabi.h (TARGET_FPRS): Change to use rs6000_float_gprs.\n+\t* config/rs6000/eabi.h (TARGET_FPRS): Change to use rs6000_float_gprs.\n \n-        * config/rs6000/eabispe.h: Set rs6000_float_gprs.\n+\t* config/rs6000/eabispe.h: Set rs6000_float_gprs.\n \n Mon Apr  7 14:36:24 CEST 2003  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "a90f0d8979e723e997cfb6af9ccd10dd668b81ed", "filename": "gcc/cse.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496324d0a723cb9f3aa8fd82d114e74c4bd08834/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496324d0a723cb9f3aa8fd82d114e74c4bd08834/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=496324d0a723cb9f3aa8fd82d114e74c4bd08834", "patch": "@@ -251,8 +251,10 @@ struct qty_table_elem\n   rtx comparison_const;\n   int comparison_qty;\n   unsigned int first_reg, last_reg;\n-  enum machine_mode mode;\n-  enum rtx_code comparison_code;\n+  /* The sizes of these fields should match the sizes of the\n+     code and mode fields of struct rtx_def (see rtl.h).  */\n+  ENUM_BITFIELD(rtx_code) comparison_code : 16;\n+  ENUM_BITFIELD(machine_mode) mode : 8;\n };\n \n /* The table of all qtys, indexed by qty number.  */\n@@ -462,7 +464,9 @@ struct table_elt\n   struct table_elt *related_value;\n   int cost;\n   int regcost;\n-  enum machine_mode mode;\n+  /* The size of this field should match the size\n+     of the mode field of struct rtx_def (see rtl.h).  */\n+  ENUM_BITFIELD(machine_mode) mode : 8;\n   char in_memory;\n   char is_const;\n   char flag;\n@@ -4712,8 +4716,10 @@ struct set\n   /* Nonzero if the SET_SRC contains something\n      whose value cannot be predicted and understood.  */\n   char src_volatile;\n-  /* Original machine mode, in case it becomes a CONST_INT.  */\n-  enum machine_mode mode;\n+  /* Original machine mode, in case it becomes a CONST_INT.\n+     The size of this field should match the size of the mode\n+     field of struct rtx_def (see rtl.h).  */\n+  ENUM_BITFIELD(machine_mode) mode : 8;\n   /* A constant equivalent for SET_SRC, if any.  */\n   rtx src_const;\n   /* Original SET_SRC value used for libcall notes.  */"}, {"sha": "93574095ee99a265d9132e441990302186439bf4", "filename": "gcc/regrename.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496324d0a723cb9f3aa8fd82d114e74c4bd08834/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496324d0a723cb9f3aa8fd82d114e74c4bd08834/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=496324d0a723cb9f3aa8fd82d114e74c4bd08834", "patch": "@@ -51,7 +51,7 @@ struct du_chain\n \n   rtx insn;\n   rtx *loc;\n-  enum reg_class class;\n+  ENUM_BITFIELD(reg_class) class : 16;\n   unsigned int need_caller_save_reg:1;\n   unsigned int earlyclobber:1;\n };"}]}