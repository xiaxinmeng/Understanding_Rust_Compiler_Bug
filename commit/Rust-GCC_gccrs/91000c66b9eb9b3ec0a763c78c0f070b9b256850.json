{"sha": "91000c66b9eb9b3ec0a763c78c0f070b9b256850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEwMDBjNjZiOWViOWIzZWMwYTc2M2M3OGMwZjA3MGI5YjI1Njg1MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-05-06T19:12:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-05-06T19:12:51Z"}, "message": "mips.c (mips_set_reg_reg_piece_cost): New function.\n\ngcc/\n\t* config/mips/mips.c (mips_set_reg_reg_piece_cost): New function.\n\t(mips_set_reg_reg_cost): Likewise.\n\t(mips_rtx_costs): Handle SET.\n\nFrom-SVN: r187213", "tree": {"sha": "3eab565290a349b8287d371b69033420c0d31e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eab565290a349b8287d371b69033420c0d31e63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91000c66b9eb9b3ec0a763c78c0f070b9b256850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91000c66b9eb9b3ec0a763c78c0f070b9b256850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91000c66b9eb9b3ec0a763c78c0f070b9b256850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91000c66b9eb9b3ec0a763c78c0f070b9b256850/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69523a7c8957851d9fa168edc6baf175c6bf54b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69523a7c8957851d9fa168edc6baf175c6bf54b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69523a7c8957851d9fa168edc6baf175c6bf54b6"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "55611c5b9795a675c50f01a4169ade529bb238b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91000c66b9eb9b3ec0a763c78c0f070b9b256850/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91000c66b9eb9b3ec0a763c78c0f070b9b256850/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91000c66b9eb9b3ec0a763c78c0f070b9b256850", "patch": "@@ -1,3 +1,9 @@\n+2012-05-06  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips_set_reg_reg_piece_cost): New function.\n+\t(mips_set_reg_reg_cost): Likewise.\n+\t(mips_rtx_costs): Handle SET.\n+\n 2012-05-06  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* lower-subreg.c (shift_cost): Use set_src_cost, avoiding the SET."}, {"sha": "239d6f5a7608bd91ce93738d09359176704b76a9", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91000c66b9eb9b3ec0a763c78c0f070b9b256850/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91000c66b9eb9b3ec0a763c78c0f070b9b256850/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=91000c66b9eb9b3ec0a763c78c0f070b9b256850", "patch": "@@ -3490,6 +3490,37 @@ mips_zero_extend_cost (enum machine_mode mode, rtx op)\n   return COSTS_N_INSNS (1);\n }\n \n+/* Return the cost of moving between two registers of mode MODE,\n+   assuming that the move will be in pieces of at most UNITS bytes.  */\n+\n+static int\n+mips_set_reg_reg_piece_cost (enum machine_mode mode, unsigned int units)\n+{\n+  return COSTS_N_INSNS ((GET_MODE_SIZE (mode) + units - 1) / units);\n+}\n+\n+/* Return the cost of moving between two registers of mode MODE.  */\n+\n+static int\n+mips_set_reg_reg_cost (enum machine_mode mode)\n+{\n+  switch (GET_MODE_CLASS (mode))\n+    {\n+    case MODE_CC:\n+      return mips_set_reg_reg_piece_cost (mode, GET_MODE_SIZE (CCmode));\n+\n+    case MODE_FLOAT:\n+    case MODE_COMPLEX_FLOAT:\n+    case MODE_VECTOR_FLOAT:\n+      if (TARGET_HARD_FLOAT)\n+\treturn mips_set_reg_reg_piece_cost (mode, UNITS_PER_HWFPVALUE);\n+      /* Fall through */\n+\n+    default:\n+      return mips_set_reg_reg_piece_cost (mode, UNITS_PER_WORD);\n+    }\n+}\n+\n /* Implement TARGET_RTX_COSTS.  */\n \n static bool\n@@ -3877,6 +3908,15 @@ mips_rtx_costs (rtx x, int code, int outer_code, int opno ATTRIBUTE_UNUSED,\n       *total = mips_cost->fp_add;\n       return false;\n \n+    case SET:\n+      if (register_operand (SET_DEST (x), VOIDmode)\n+\t  && reg_or_0_operand (SET_SRC (x), VOIDmode))\n+\t{\n+\t  *total = mips_set_reg_reg_cost (GET_MODE (SET_DEST (x)));\n+\t  return true;\n+\t}\n+      return false;\n+\n     default:\n       return false;\n     }"}]}