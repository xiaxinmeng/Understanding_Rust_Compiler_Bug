{"sha": "4f96ff63b3d9df3742469382152174daea6a337f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY5NmZmNjNiM2Q5ZGYzNzQyNDY5MzgyMTUyMTc0ZGFlYTZhMzM3Zg==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2001-10-13T15:00:44Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2001-10-13T15:00:44Z"}, "message": "pt.c (lookup_template_class): Build complete template arguments for BOUND_TEMPLATE_TEMPLATE_PARM.\n\n\t* pt.c (lookup_template_class): Build complete template arguments\n\tfor BOUND_TEMPLATE_TEMPLATE_PARM.\n\nFrom-SVN: r46245", "tree": {"sha": "5dad59220cde90d7f9cdd09b28c873388d1758f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dad59220cde90d7f9cdd09b28c873388d1758f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f96ff63b3d9df3742469382152174daea6a337f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f96ff63b3d9df3742469382152174daea6a337f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f96ff63b3d9df3742469382152174daea6a337f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f96ff63b3d9df3742469382152174daea6a337f/comments", "author": null, "committer": null, "parents": [{"sha": "11e74ea6c6c709e8e6329bdfe7d121bfa100cf29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e74ea6c6c709e8e6329bdfe7d121bfa100cf29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11e74ea6c6c709e8e6329bdfe7d121bfa100cf29"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "92907b8d63872e1754978bc4b14f03c6503a92e4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f96ff63b3d9df3742469382152174daea6a337f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f96ff63b3d9df3742469382152174daea6a337f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4f96ff63b3d9df3742469382152174daea6a337f", "patch": "@@ -1,3 +1,8 @@\n+2001-10-13  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* pt.c (lookup_template_class): Build complete template arguments\n+\tfor BOUND_TEMPLATE_TEMPLATE_PARM.\n+\n 2001-10-12  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* cp-tree.h (TYPE_BINFO): Update comment."}, {"sha": "e2904b5cf5f23aabad88b60681442e2360b1a2ec", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f96ff63b3d9df3742469382152174daea6a337f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f96ff63b3d9df3742469382152174daea6a337f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4f96ff63b3d9df3742469382152174daea6a337f", "patch": "@@ -3913,6 +3913,19 @@ lookup_template_class (d1, arglist, in_decl, context, entering_scope, complain)\n \n       parmlist = DECL_INNERMOST_TEMPLATE_PARMS (template);\n \n+      /* Consider an example where a template template parameter declared as\n+\n+\t   template <class T, class U = std::allocator<T> > class TT\n+\n+\t The template parameter level of T and U are one level larger than \n+\t of TT.  To proper process the default argument of U, say when an \n+\t instantiation `TT<int>' is seen, we need to build the full\n+\t arguments containing {int} as the innermost level.  Outer levels\n+\t can be obtained from `current_template_args ()'.  */\n+\n+      if (processing_template_decl)\n+\targlist = add_to_template_args (current_template_args (), arglist);\n+\n       arglist2 = coerce_template_parms (parmlist, arglist, template,\n                                         complain, /*require_all_args=*/1);\n       if (arglist2 == error_mark_node)"}, {"sha": "45d9abddfe286efa224f1256f37d7bf2353eb9b5", "filename": "gcc/testsuite/g++.dg/template/ttp2.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f96ff63b3d9df3742469382152174daea6a337f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f96ff63b3d9df3742469382152174daea6a337f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp2.C?ref=4f96ff63b3d9df3742469382152174daea6a337f", "patch": "@@ -0,0 +1,17 @@\n+// Copyright (C) 2001 Free Software Foundation\n+// Contributed by Kriang Lerdsuwanakij <lerdsuwa@users.sourceforge.net>\n+// { dg-do compile }\n+\n+template <class U> struct Alloc {};\n+\n+template <class T, class U = Alloc<T> > struct Vector {};\n+\n+template <template <class T, class U = Alloc<T> > class TT>\n+struct C {\n+\tTT<int> tt;\n+};\n+\n+int main()\n+{\n+\tC<Vector> c;\n+}"}]}