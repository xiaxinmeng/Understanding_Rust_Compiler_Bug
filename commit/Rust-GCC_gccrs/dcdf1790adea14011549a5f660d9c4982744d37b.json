{"sha": "dcdf1790adea14011549a5f660d9c4982744d37b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNkZjE3OTBhZGVhMTQwMTE1NDlhNWY2NjBkOWM0OTgyNzQ0ZDM3Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:25:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:25:03Z"}, "message": "atree.adb (Visit_Itype): Create a new name for the generated itype...\n\n\t* atree.adb (Visit_Itype): Create a new name for the generated itype,\n\tbecause the back-end may otherwise treat it as a redefinition of the\n\told symbol.\n\nFrom-SVN: r91875", "tree": {"sha": "e99f25badcdd4f030790964cb05f56e5ed51adf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e99f25badcdd4f030790964cb05f56e5ed51adf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcdf1790adea14011549a5f660d9c4982744d37b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcdf1790adea14011549a5f660d9c4982744d37b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcdf1790adea14011549a5f660d9c4982744d37b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcdf1790adea14011549a5f660d9c4982744d37b/comments", "author": null, "committer": null, "parents": [{"sha": "87f07a97ade1d99594ede4e334ea7dbbd907aabc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87f07a97ade1d99594ede4e334ea7dbbd907aabc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87f07a97ade1d99594ede4e334ea7dbbd907aabc"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "f8fef8ce8ed3f364756a25814eedd62947ba8416", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcdf1790adea14011549a5f660d9c4982744d37b/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcdf1790adea14011549a5f660d9c4982744d37b/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=dcdf1790adea14011549a5f660d9c4982744d37b", "patch": "@@ -39,6 +39,7 @@ pragma Style_Checks (All_Checks);\n --  bodies) and the C file a-atree.c (for remaining non-inlined bodies).\n \n with Debug;   use Debug;\n+with Namet;   use Namet;\n with Nlists;  use Nlists;\n with Elists;  use Elists;\n with Output;  use Output;\n@@ -809,6 +810,7 @@ package body Atree is\n \n       procedure Debug_Extend_Node;\n       --  Debug routine for debug flag N\n+      pragma Inline (Debug_Extend_Node);\n \n       procedure Debug_Extend_Node is\n       begin\n@@ -827,8 +829,6 @@ package body Atree is\n          end if;\n       end Debug_Extend_Node;\n \n-      pragma Inline (Debug_Extend_Node);\n-\n    begin\n       pragma Assert (not (Has_Extension (Node)));\n       Result := Allocate_Initialize_Node (Node, With_Extension => True);\n@@ -1585,6 +1585,16 @@ package body Atree is\n \n          New_Itype := New_Copy (Old_Itype);\n \n+         --  The new Itype has all the attributes of the old one, and\n+         --  we just copy the contents of the entity. However, the back-end\n+         --  needs different names for debugging purposes, so we create a\n+         --  new internal name by appending the letter 'c' (copy) to the\n+         --  name of the original.\n+\n+         Get_Name_String (Chars (Old_Itype));\n+         Add_Char_To_Name_Buffer ('c');\n+         Set_Chars (New_Itype, Name_Enter);\n+\n          --  If our associated node is an entity that has already been copied,\n          --  then set the associated node of the copy to point to the right\n          --  copy. If we have copied an Itype that is itself the associated"}]}