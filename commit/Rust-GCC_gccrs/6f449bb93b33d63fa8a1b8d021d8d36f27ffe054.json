{"sha": "6f449bb93b33d63fa8a1b8d021d8d36f27ffe054", "node_id": "C_kwDOANBUbNoAKDZmNDQ5YmI5M2IzM2Q2M2ZhOGExYjhkMDIxZDhkMzZmMjdmZmUwNTQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-30T06:58:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-30T06:58:08Z"}, "message": "openmp: Diagnose threadprivate OpenMP loop iterators\n\nWe weren't diagnosing the\nThe loop iteration variable may not appear in a threadprivate directive.\nrestriction which used to be in 5.0 just among the Worksharing-Loop\nrestrictions but in 5.1 it is among Canonical Loop Nest Form restrictions.\n\nThis patch diagnoses those.\n\n2021-10-30  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gimplify.c (gimplify_omp_for): Diagnose threadprivate iterators.\n\n\t* c-c++-common/gomp/loop-10.c: New test.", "tree": {"sha": "f5a2300e60390e48f330670dc4f4f31b621cb007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5a2300e60390e48f330670dc4f4f31b621cb007"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f449bb93b33d63fa8a1b8d021d8d36f27ffe054", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f449bb93b33d63fa8a1b8d021d8d36f27ffe054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f449bb93b33d63fa8a1b8d021d8d36f27ffe054", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f449bb93b33d63fa8a1b8d021d8d36f27ffe054/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c61300f2b243756eb2e8c59997b4675aeb8f37a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c61300f2b243756eb2e8c59997b4675aeb8f37a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c61300f2b243756eb2e8c59997b4675aeb8f37a"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "8bb54fd74816ce42e52bdb94596c7ef051711fcc", "filename": "gcc/gimplify.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f449bb93b33d63fa8a1b8d021d8d36f27ffe054/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f449bb93b33d63fa8a1b8d021d8d36f27ffe054/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=6f449bb93b33d63fa8a1b8d021d8d36f27ffe054", "patch": "@@ -12298,6 +12298,24 @@ gimplify_omp_for (tree *expr_p, gimple_seq *pre_p)\n \t  gimplify_omp_ctxp->loop_iter_var.quick_push (decl);\n \t}\n \n+      if (for_stmt == orig_for_stmt)\n+\t{\n+\t  tree orig_decl = decl;\n+\t  if (OMP_FOR_ORIG_DECLS (for_stmt))\n+\t    {\n+\t      tree orig_decl = TREE_VEC_ELT (OMP_FOR_ORIG_DECLS (for_stmt), i);\n+\t      if (TREE_CODE (orig_decl) == TREE_LIST)\n+\t\t{\n+\t\t  orig_decl = TREE_PURPOSE (orig_decl);\n+\t\t  if (!orig_decl)\n+\t\t    orig_decl = decl;\n+\t\t}\n+\t    }\n+\t  if (is_global_var (orig_decl) && DECL_THREAD_LOCAL_P (orig_decl))\n+\t    error_at (EXPR_LOCATION (for_stmt),\n+\t\t      \"threadprivate iteration variable %qD\", orig_decl);\n+\t}\n+\n       /* Make sure the iteration variable is private.  */\n       tree c = NULL_TREE;\n       tree c2 = NULL_TREE;"}, {"sha": "1229e61e8244b458535aca5ad585a41739979389", "filename": "gcc/testsuite/c-c++-common/gomp/loop-10.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f449bb93b33d63fa8a1b8d021d8d36f27ffe054/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Floop-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f449bb93b33d63fa8a1b8d021d8d36f27ffe054/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Floop-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Floop-10.c?ref=6f449bb93b33d63fa8a1b8d021d8d36f27ffe054", "patch": "@@ -0,0 +1,35 @@\n+int a, b;\n+#pragma omp threadprivate (a, b)\n+\n+void\n+foo (void)\n+{\n+  #pragma omp for\t\t\t\t/* { dg-error \"threadprivate iteration variable 'a'\" } */\n+  for (a = 0; a < 32; a++)\n+    ;\n+  #pragma omp parallel for collapse(2)\t\t/* { dg-error \"threadprivate iteration variable 'a'\" \"\" { target c } } */\n+  for (a = 0; a < 32; a++)\t\t\t/* { dg-error \"threadprivate iteration variable 'b'\" \"\" { target c } .-1 } */\n+    for (b = 0; b < 32; b++)\t\t\t/* { dg-error \"threadprivate iteration variable 'a'\" \"\" { target c++ } .-1 } */\n+      ;\t\t\t\t\t\t/* { dg-error \"threadprivate iteration variable 'b'\" \"\" { target c++ } .-2 } */\n+  #pragma omp simd\t\t\t\t/* { dg-error \"threadprivate iteration variable 'a'\" } */\n+  for (a = 0; a < 32; a++)\n+    ;\n+  #pragma omp taskloop\t\t\t\t/* { dg-error \"threadprivate iteration variable 'a'\" } */\n+  for (a = 0; a < 32; a++)\n+    ;\n+  #pragma omp loop bind(thread)\t\t\t/* { dg-error \"threadprivate iteration variable 'a'\" } */\n+  for (a = 0; a < 32; a++)\n+    ;\n+}\n+\n+void\n+bar (void)\n+{\n+  #pragma omp distribute collapse(2)\t\t/* { dg-error \"threadprivate iteration variable 'a'\" } */\n+  for (a = 0; a < 32; a++)\t\t\t/* { dg-error \"threadprivate iteration variable 'b'\" \"\" { target *-*-* } .-1 } */\n+    for (b = 0; b < a; b++)\n+      ;\n+  #pragma omp distribute parallel for simd\t/* { dg-error \"threadprivate iteration variable 'a'\" \"\" { target c } } */\n+  for (a = 0; a < 32; a++)\t\t\t/* { dg-error \"threadprivate iteration variable 'a'\" \"\" { target c++ } } */\n+    ;\n+}"}]}