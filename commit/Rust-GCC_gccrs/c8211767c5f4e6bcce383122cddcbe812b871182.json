{"sha": "c8211767c5f4e6bcce383122cddcbe812b871182", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgyMTE3NjdjNWY0ZTZiY2NlMzgzMTIyY2RkY2JlODEyYjg3MTE4Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-12-06T14:37:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-12-06T14:37:59Z"}, "message": "re PR middle-end/43631 (var-tracking inserts notes with non-NULL BLOCK_FOR_INSN in between basic blocks)\n\n\tPR middle-end/43631\n\t* var-tracking.c (emit_note_insn_var_location, emit_notes_in_bb):\n\tClear BLOCK_FOR_INSN on notes emitted in between basic blocks,\n\tdon't adjust BB_END when inserting note after BB_END of some bb.\n\nFrom-SVN: r194252", "tree": {"sha": "7c4609ceb83330f3733601ee8198a7c1d7ef002e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c4609ceb83330f3733601ee8198a7c1d7ef002e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8211767c5f4e6bcce383122cddcbe812b871182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8211767c5f4e6bcce383122cddcbe812b871182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8211767c5f4e6bcce383122cddcbe812b871182", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8211767c5f4e6bcce383122cddcbe812b871182/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d9fe08e135b8242e61c87b183c31b7fbb33dc28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d9fe08e135b8242e61c87b183c31b7fbb33dc28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d9fe08e135b8242e61c87b183c31b7fbb33dc28"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "30bb3f96ae16eab1836021a42e4f5437803c224c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8211767c5f4e6bcce383122cddcbe812b871182/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8211767c5f4e6bcce383122cddcbe812b871182/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8211767c5f4e6bcce383122cddcbe812b871182", "patch": "@@ -1,5 +1,10 @@\n 2012-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/43631\n+\t* var-tracking.c (emit_note_insn_var_location, emit_notes_in_bb):\n+\tClear BLOCK_FOR_INSN on notes emitted in between basic blocks,\n+\tdon't adjust BB_END when inserting note after BB_END of some bb.\n+\n \tPR c++/55137\n \t* fold-const.c (fold_binary_loc) <associate>: Don't introduce\n \tTREE_OVERFLOW through reassociation.  If type doesn't have defined"}, {"sha": "c35471c4a34da97dc47ecb5c47601059fa46fa1b", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8211767c5f4e6bcce383122cddcbe812b871182/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8211767c5f4e6bcce383122cddcbe812b871182/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=c8211767c5f4e6bcce383122cddcbe812b871182", "patch": "@@ -8557,9 +8557,30 @@ emit_note_insn_var_location (void **varp, void *data)\n \t      || NOTE_KIND (insn) == NOTE_INSN_CALL_ARG_LOCATION))\n \tnote = emit_note_after (NOTE_INSN_VAR_LOCATION, insn);\n       else\n-\tnote = emit_note_before (NOTE_INSN_VAR_LOCATION, insn);\n+\t{\n+\t  note = emit_note_before (NOTE_INSN_VAR_LOCATION, insn);\n+\t  /* If insn is BB_HEAD of some bb, make sure the note\n+\t     doesn't have BLOCK_FOR_INSN set.  The notes don't\n+\t     extend the extents of a basic block, and e.g. notes emitted\n+\t     for differences in between basic blocks should live in between\n+\t     the basic blocks.  */\n+\t  if (BLOCK_FOR_INSN (note)\n+\t      && BB_HEAD (BLOCK_FOR_INSN (note)) == insn)\n+\t    set_block_for_insn (note, NULL);\n+\t}\n     }\n   NOTE_VAR_LOCATION (note) = note_vl;\n+  /* If insn is BB_END of some bb, make sure the note\n+     doesn't have BLOCK_FOR_INSN set.  The notes don't\n+     extend the extents of a basic block, and e.g. a noreturn\n+     call can still be followed by NOTE_INSN_CALL_ARG_LOCATION.  */\n+  if (BLOCK_FOR_INSN (note)\n+      && BB_END (BLOCK_FOR_INSN (note)) == note\n+      && PREV_INSN (note) == insn)\n+    {\n+      BB_END (BLOCK_FOR_INSN (note)) = insn;\n+      set_block_for_insn (note, NULL);\n+    }\n \n   set_dv_changed (var->dv, false);\n   gcc_assert (var->in_changed_variables);\n@@ -8928,6 +8949,16 @@ emit_notes_in_bb (basic_block bb, dataflow_set *set)\n \t\t}\n \t      note = emit_note_after (NOTE_INSN_CALL_ARG_LOCATION, insn);\n \t      NOTE_VAR_LOCATION (note) = arguments;\n+\t      /* If insn is BB_END of some bb, make sure the note\n+\t\t doesn't have BLOCK_FOR_INSN set.  The notes don't\n+\t\t extend the extents of a basic block, and e.g. a noreturn\n+\t\t call can still be followed by NOTE_INSN_CALL_ARG_LOCATION.  */\n+\t      if (BLOCK_FOR_INSN (note)\n+\t\t  && BB_END (BLOCK_FOR_INSN (note)) == note)\n+\t\t{\n+\t\t  BB_END (BLOCK_FOR_INSN (note)) = insn;\n+\t\t  set_block_for_insn (note, NULL);\n+\t\t}\n \t    }\n \t    break;\n "}]}