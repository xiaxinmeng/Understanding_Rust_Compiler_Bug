{"sha": "a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThjNGM3NWE0YTUwNjI2ODdmYTA4ZDFkNjI3M2NlZjRhMGNlMjJmZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-01-07T10:39:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-01-07T10:39:45Z"}, "message": "decl.c (gnat_to_gnu_entity): Adjust comment about type extension with discriminants.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: Adjust\n\tcomment about type extension with discriminants.\n\t<E_Record_Subtype>: Remove useless test and reorder conditions.\n\t(elaborate_entity) <E_Record_Subtype>: Likewise.\n\nFrom-SVN: r194965", "tree": {"sha": "090c47cf2ddadf22ac6c2ce5abed3d927fedc34f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/090c47cf2ddadf22ac6c2ce5abed3d927fedc34f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe/comments", "author": null, "committer": null, "parents": [{"sha": "5b638c3a5af30d98009c94fa309beec02e9ba330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b638c3a5af30d98009c94fa309beec02e9ba330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b638c3a5af30d98009c94fa309beec02e9ba330"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "c644b26c7fc03b2b219ae3cc46be0eac883a0775", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe", "patch": "@@ -1,3 +1,10 @@\n+2013-01-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: Adjust\n+\tcomment about type extension with discriminants.\n+\t<E_Record_Subtype>: Remove useless test and reorder conditions.\n+\t(elaborate_entity) <E_Record_Subtype>: Likewise.\n+\n 2013-01-07  Richard Biener  <rguenther@suse.de>\n \n \tPR ada/864"}, {"sha": "d6729f7ab08c543bd52cf1f85edc90f8c1542ce6", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=a8c4c75a4a5062687fa08d1d6273cef4a0ce22fe", "patch": "@@ -3006,9 +3006,9 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    tree gnu_parent;\n \n \t    /* A major complexity here is that the parent subtype will\n-\t       reference our discriminants in its Discriminant_Constraint\n-\t       list.  But those must reference the parent component of this\n-\t       record which is of the parent subtype we have not built yet!\n+\t       reference our discriminants in its Stored_Constraint list.\n+\t       But those must reference the parent component of this record\n+\t       which is precisely of the parent subtype we have not built yet!\n \t       To break the circle we first build a dummy COMPONENT_REF which\n \t       represents the \"get to the parent\" operation and initialize\n \t       each of those discriminants to a COMPONENT_REF of the above\n@@ -3287,9 +3287,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t  if (IN (Ekind (gnat_base_type), Record_Kind)\n \t      && !Is_Unchecked_Union (gnat_base_type)\n \t      && !Is_For_Access_Subtype (gnat_entity)\n-\t      && Is_Constrained (gnat_entity)\n \t      && Has_Discriminants (gnat_entity)\n-\t      && Present (Discriminant_Constraint (gnat_entity))\n+\t      && Is_Constrained (gnat_entity)\n \t      && Stored_Constraint (gnat_entity) != No_Elist)\n \t    {\n \t      vec<subst_pair> gnu_subst_list\n@@ -5948,9 +5947,7 @@ elaborate_entity (Entity_Id gnat_entity)\n     case E_Private_Subtype:\n     case E_Limited_Private_Subtype:\n     case E_Record_Subtype_With_Private:\n-      if (Is_Constrained (gnat_entity)\n-\t  && Has_Discriminants (gnat_entity)\n-\t  && Present (Discriminant_Constraint (gnat_entity)))\n+      if (Has_Discriminants (gnat_entity) && Is_Constrained (gnat_entity))\n \t{\n \t  Node_Id gnat_discriminant_expr;\n \t  Entity_Id gnat_field;"}]}