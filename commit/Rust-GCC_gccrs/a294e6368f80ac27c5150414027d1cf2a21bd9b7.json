{"sha": "a294e6368f80ac27c5150414027d1cf2a21bd9b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI5NGU2MzY4ZjgwYWMyN2M1MTUwNDE0MDI3ZDFjZjJhMjFiZDliNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-12-08T08:45:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-12-08T09:36:47Z"}, "message": "tree-optimization/97559 - fix sinking in irreducible regions\n\nThis fixes sinking of loads when irreducible regions are involved\nand the heuristics to find stores on the path along the sink\nbreaks down since that uses dominator queries.\n\n2020-12-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97559\n\t* tree-ssa-sink.c (statement_sink_location): Never ignore\n\tPHIs on sink paths in irreducible regions.\n\n\t* gcc.dg/torture/pr97559-1.c: New testcase.\n\t* gcc.dg/torture/pr97559-2.c: Likewise.", "tree": {"sha": "6197ad62b1f7ec2c39deaaad7ed3b459ec6d17b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6197ad62b1f7ec2c39deaaad7ed3b459ec6d17b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a294e6368f80ac27c5150414027d1cf2a21bd9b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a294e6368f80ac27c5150414027d1cf2a21bd9b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a294e6368f80ac27c5150414027d1cf2a21bd9b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a294e6368f80ac27c5150414027d1cf2a21bd9b7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "d5de3bdb39e5e93fa25f657632e8887f02bb52f6", "filename": "gcc/testsuite/gcc.dg/torture/pr97559-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a294e6368f80ac27c5150414027d1cf2a21bd9b7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97559-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a294e6368f80ac27c5150414027d1cf2a21bd9b7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97559-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97559-1.c?ref=a294e6368f80ac27c5150414027d1cf2a21bd9b7", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+int printf (char *, ...);\n+\n+int a, b, c, d;\n+\n+void e () {\n+  int f = a;\n+  if (b) {\n+  L1:\n+    b = 0;\n+  L2:\n+    if (c) {\n+      if (f)\n+        printf(\"0\");\n+      goto L1;\n+    }\n+  }\n+  if (d)\n+    goto L2;\n+}"}, {"sha": "b512e6db7cae320d4805b51bcb519188817aee5a", "filename": "gcc/testsuite/gcc.dg/torture/pr97559-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a294e6368f80ac27c5150414027d1cf2a21bd9b7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97559-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a294e6368f80ac27c5150414027d1cf2a21bd9b7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97559-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97559-2.c?ref=a294e6368f80ac27c5150414027d1cf2a21bd9b7", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d;\n+\n+void e() {\n+  int f = b;\n+  if (a) {\n+  L1:\n+    a = 0;\n+  L2:\n+    if (a) {\n+      c = b;\n+      goto L1;\n+    }\n+  }\n+  if (d)\n+    goto L2;\n+}"}, {"sha": "b0abf4147d696754ffc394955d2c014f6e76451e", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a294e6368f80ac27c5150414027d1cf2a21bd9b7/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a294e6368f80ac27c5150414027d1cf2a21bd9b7/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=a294e6368f80ac27c5150414027d1cf2a21bd9b7", "patch": "@@ -390,12 +390,15 @@ statement_sink_location (gimple *stmt, basic_block frombb,\n \t\t with the use.  */\n \t      if (gimple_code (use_stmt) == GIMPLE_PHI)\n \t\t{\n-\t\t  /* In case the PHI node post-dominates the current insert location\n-\t\t     we can disregard it.  But make sure it is not dominating\n-\t\t     it as well as can happen in a CFG cycle.  */\n+\t\t  /* In case the PHI node post-dominates the current insert\n+\t\t     location we can disregard it.  But make sure it is not\n+\t\t     dominating it as well as can happen in a CFG cycle.  */\n \t\t  if (commondom != bb\n \t\t      && !dominated_by_p (CDI_DOMINATORS, commondom, bb)\n-\t\t      && dominated_by_p (CDI_POST_DOMINATORS, commondom, bb))\n+\t\t      && dominated_by_p (CDI_POST_DOMINATORS, commondom, bb)\n+\t\t      /* If the blocks are possibly within the same irreducible\n+\t\t\t cycle the above check breaks down.  */\n+\t\t      && !(bb->flags & commondom->flags & BB_IRREDUCIBLE_LOOP))\n \t\t    continue;\n \t\t  bb = EDGE_PRED (bb, PHI_ARG_INDEX_FROM_USE (use_p))->src;\n \t\t}\n@@ -407,7 +410,8 @@ statement_sink_location (gimple *stmt, basic_block frombb,\n \t\tcontinue;\n \t      /* There is no easy way to disregard defs not on the path from\n \t\t frombb to commondom so just consider them all.  */\n-\t      commondom = nearest_common_dominator (CDI_DOMINATORS, bb, commondom);\n+\t      commondom = nearest_common_dominator (CDI_DOMINATORS,\n+\t\t\t\t\t\t    bb, commondom);\n \t      if (commondom == frombb)\n \t\treturn false;\n \t    }"}]}