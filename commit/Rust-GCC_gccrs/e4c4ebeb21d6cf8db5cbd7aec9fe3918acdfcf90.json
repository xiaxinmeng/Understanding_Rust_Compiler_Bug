{"sha": "e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRjNGViZWIyMWQ2Y2Y4ZGI1Y2JkN2FlYzlmZTM5MThhY2RmY2Y5MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-05-16T22:50:16Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-05-16T22:50:16Z"}, "message": "* config/i386/i386.h (ASM_PREFERRED_EH_DATA_FORMAT): New.\n\nFrom-SVN: r42180", "tree": {"sha": "be61de48feb531889ef8950109f41ec33acaf79c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be61de48feb531889ef8950109f41ec33acaf79c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90/comments", "author": null, "committer": null, "parents": [{"sha": "f90811a2999664865306af3d009f14c884ee3fe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90811a2999664865306af3d009f14c884ee3fe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f90811a2999664865306af3d009f14c884ee3fe8"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "6d52557c23d3dffef596d73f2c6fda2a75b3cf75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90", "patch": "@@ -3,6 +3,8 @@\n \t* dwarf2asm.c (eh_data_format_name): Add names for \"pointer size\" \n \tvariants of non-absolute encodings.\n \n+\t* config/i386/i386.h (ASM_PREFERRED_EH_DATA_FORMAT): New.\n+\n 2001-05-16  Richard Henderson  <rth@redhat.com>\n \n \t* except.c (eh_data_format_name): Move to ..."}, {"sha": "6a229b7a8adeb49d267dc623d3f8c01b755f9202", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=e4c4ebeb21d6cf8db5cbd7aec9fe3918acdfcf90", "patch": "@@ -2830,6 +2830,18 @@ extern int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER];\n #define EH_RETURN_DATA_REGNO(N)\t((N) < 2 ? (N) : INVALID_REGNUM)\n #define EH_RETURN_STACKADJ_RTX\tgen_rtx_REG (Pmode, 2)\n \n+/* Select a format to encode pointers in exception handling data.  CODE\n+   is 0 for data, 1 for code labels, 2 for function pointers.  GLOBAL is\n+   true if the symbol may be affected by dynamic relocations.\n+\n+   ??? All x86 object file formats are capable of representing this.\n+   After all, the relocation needed is the same as for the call insn.\n+   Whether or not a particular assembler allows us to enter such, I\n+   guess we'll have to see.  */\n+#define ASM_PREFERRED_EH_DATA_FORMAT(CODE,GLOBAL)       \t\t\\\n+  (flag_pic ? (GLOBAL ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel\t\t\\\n+   : DW_EH_PE_absptr)\n+\n /* This is how to output the definition of a user-level label named NAME,\n    such as the label on a static function or variable NAME.  */\n "}]}