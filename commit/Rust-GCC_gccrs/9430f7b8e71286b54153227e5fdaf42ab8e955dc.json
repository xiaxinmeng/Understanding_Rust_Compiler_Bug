{"sha": "9430f7b8e71286b54153227e5fdaf42ab8e955dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzMGY3YjhlNzEyODZiNTQxNTMyMjdlNWZkYWY0MmFiOGU5NTVkYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-05-14T18:00:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-05-14T18:00:48Z"}, "message": "i386.i386.c (ix86_cc_modes_compatible): CCNOmode is compatible with CCGOCmode and with CCZmode.\n\n\t* config/i386.i386.c (ix86_cc_modes_compatible): CCNOmode is\n\tcompatible with CCGOCmode and with CCZmode.\n\nFrom-SVN: r248036", "tree": {"sha": "c5def0c1084edb2968a2814ae0e005895047d9c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5def0c1084edb2968a2814ae0e005895047d9c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9430f7b8e71286b54153227e5fdaf42ab8e955dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9430f7b8e71286b54153227e5fdaf42ab8e955dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9430f7b8e71286b54153227e5fdaf42ab8e955dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9430f7b8e71286b54153227e5fdaf42ab8e955dc/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a104bd88592d85d4117f7beb9a886099263b70b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a104bd88592d85d4117f7beb9a886099263b70b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a104bd88592d85d4117f7beb9a886099263b70b1"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "9a2104282069b6c16749fe8e9ed23f5960f34078", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9430f7b8e71286b54153227e5fdaf42ab8e955dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9430f7b8e71286b54153227e5fdaf42ab8e955dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9430f7b8e71286b54153227e5fdaf42ab8e955dc", "patch": "@@ -1,3 +1,8 @@\n+2017-05-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386.i386.c (ix86_cc_modes_compatible): CCNOmode is\n+\tcompatible with CCGOCmode and with CCZmode.\n+\n 2017-05-14  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/77671"}, {"sha": "a78819d6b3f663afa535fc37d6bdb80651521208", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9430f7b8e71286b54153227e5fdaf42ab8e955dc/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9430f7b8e71286b54153227e5fdaf42ab8e955dc/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9430f7b8e71286b54153227e5fdaf42ab8e955dc", "patch": "@@ -23251,9 +23251,15 @@ ix86_cc_modes_compatible (machine_mode m1, machine_mode m2)\n       || (m1 == CCGOCmode && m2 == CCGCmode))\n     return CCGCmode;\n \n-  if (m1 == CCZmode && (m2 == CCGCmode || m2 == CCGOCmode))\n+  if ((m1 == CCNOmode && m2 == CCGOCmode)\n+      || (m1 == CCGOCmode && m2 == CCNOmode))\n+    return CCNOmode;\n+\n+  if (m1 == CCZmode\n+      && (m2 == CCGCmode || m2 == CCGOCmode || m2 == CCNOmode))\n     return m2;\n-  else if (m2 == CCZmode && (m1 == CCGCmode || m1 == CCGOCmode))\n+  else if (m2 == CCZmode\n+\t   && (m1 == CCGCmode || m1 == CCGOCmode || m1 == CCNOmode))\n     return m1;\n \n   switch (m1)"}]}