{"sha": "26af0046ffc038ea5ee541c1a87ea6dec91c9337", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZhZjAwNDZmZmMwMzhlYTVlZTU0MWMxYTg3ZWE2ZGVjOTFjOTMzNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-01-29T12:08:04Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-01-29T12:08:04Z"}, "message": "cse.c (n_elements_made, [...]): Remove.\n\n\t* cse.c (n_elements_made, max_elements_made): Remove.\n\t(insert): Don't touch n_elements_made.\n\t(cse_main): Don't touch n_elements_made or max_elements_made.\n\nFrom-SVN: r94407", "tree": {"sha": "03e19652cc4cef48935d893ecc97c4bf064f8049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03e19652cc4cef48935d893ecc97c4bf064f8049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26af0046ffc038ea5ee541c1a87ea6dec91c9337", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26af0046ffc038ea5ee541c1a87ea6dec91c9337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26af0046ffc038ea5ee541c1a87ea6dec91c9337", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26af0046ffc038ea5ee541c1a87ea6dec91c9337/comments", "author": null, "committer": null, "parents": [{"sha": "40d64b5a951d6b2f48614eef5631506710b7a535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d64b5a951d6b2f48614eef5631506710b7a535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40d64b5a951d6b2f48614eef5631506710b7a535"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "d0f51a0e947076d4edca6cf28a569703d30f41a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26af0046ffc038ea5ee541c1a87ea6dec91c9337/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26af0046ffc038ea5ee541c1a87ea6dec91c9337/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26af0046ffc038ea5ee541c1a87ea6dec91c9337", "patch": "@@ -1,3 +1,9 @@\n+2005-01-29  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cse.c (n_elements_made, max_elements_made): Remove.\n+\t(insert): Don't touch n_elements_made.\n+\t(cse_main): Don't touch n_elements_made or max_elements_made.\n+\n 2005-01-28  Stephane Carrez  <stcarrez@nerim.fr>\n \n \tPR target/15384"}, {"sha": "427ab0b6ef045adadb40fefc41edfb7b557f4841", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26af0046ffc038ea5ee541c1a87ea6dec91c9337/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26af0046ffc038ea5ee541c1a87ea6dec91c9337/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=26af0046ffc038ea5ee541c1a87ea6dec91c9337", "patch": "@@ -559,15 +559,6 @@ static struct table_elt *table[HASH_SIZE];\n \n static struct table_elt *free_element_chain;\n \n-/* Number of `struct table_elt' structures made so far for this function.  */\n-\n-static int n_elements_made;\n-\n-/* Maximum value `n_elements_made' has had so far in this compilation\n-   for functions previously processed.  */\n-\n-static int max_elements_made;\n-\n /* Set to the cost of a constant pool reference if one was found for a\n    symbolic constant.  If this was found, it means we should try to\n    convert constants into constant pool entries if they don't fit in\n@@ -1493,10 +1484,7 @@ insert (rtx x, struct table_elt *classp, unsigned int hash, enum machine_mode mo\n   if (elt)\n     free_element_chain = elt->next_same_hash;\n   else\n-    {\n-      n_elements_made++;\n-      elt = xmalloc (sizeof (struct table_elt));\n-    }\n+    elt = xmalloc (sizeof (struct table_elt));\n \n   elt->exp = x;\n   elt->canon_exp = NULL_RTX;\n@@ -6725,10 +6713,6 @@ cse_main (rtx f, int nregs, FILE *file)\n \n   reg_eqv_table = xmalloc (nregs * sizeof (struct reg_eqv_elem));\n \n-  /* Reset the counter indicating how many elements have been made\n-     thus far.  */\n-  n_elements_made = 0;\n-\n   /* Find the largest uid.  */\n \n   max_uid = get_max_uid ();\n@@ -6813,9 +6797,6 @@ cse_main (rtx f, int nregs, FILE *file)\n #endif\n     }\n \n-  if (max_elements_made < n_elements_made)\n-    max_elements_made = n_elements_made;\n-\n   /* Clean up.  */\n   end_alias_analysis ();\n   free (uid_cuid);"}]}