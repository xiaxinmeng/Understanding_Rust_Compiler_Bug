{"sha": "0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYxZTg4NDI5YTk4NzkxY2Q4YzViOGQ4MDcwM2ZjNWYwNGE4MGIyMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-10-02T10:00:32Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-10-02T10:00:32Z"}, "message": "tree.h (DECL_NONLOCAL_FRAME): New macro.\n\n\t* tree.h (DECL_NONLOCAL_FRAME): New macro.\n\t* tree-nested.c (get_frame_type): Set DECL_NONLOCAL_FRAME.\n\t* tree-streamer-in.c (unpack_ts_decl_common_value_fields): Stream in\n\tDECL_NONLOCAL_FRAME flag.\n\t* tree-streamer-out.c (pack_ts_decl_common_value_fields): Stream out\n\tDECL_NONLOCAL_FRAME flag.\n\nFrom-SVN: r191970", "tree": {"sha": "7f56c0d30fa7499cd3ec678e78aedbc875ce2c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f56c0d30fa7499cd3ec678e78aedbc875ce2c20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/comments", "author": null, "committer": null, "parents": [{"sha": "70a6aea0adc11ad0562badf470857b2a615cabba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a6aea0adc11ad0562badf470857b2a615cabba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a6aea0adc11ad0562badf470857b2a615cabba"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "96da759b09933a27e209d2029da145db48bd9e6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "patch": "@@ -1,3 +1,12 @@\n+2012-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree.h (DECL_NONLOCAL_FRAME): New macro.\n+\t* tree-nested.c (get_frame_type): Set DECL_NONLOCAL_FRAME.\n+\t* tree-streamer-in.c (unpack_ts_decl_common_value_fields): Stream in\n+\tDECL_NONLOCAL_FRAME flag.\n+\t* tree-streamer-out.c (pack_ts_decl_common_value_fields): Stream out\n+\tDECL_NONLOCAL_FRAME flag.\n+\n 2012-10-02  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* tree-ssa-forwprop.c (forward_propagate_into_cond): Don't use\n@@ -14,10 +23,10 @@\n 2012-10-01  Dehao Chen  <dehao@google.com>\n \n \tPR middle-end/54759\n-\t* gcc/tree-vect-loop-manip.c (slpeel_make_loop_iterate_ntimes): Use\n+\t* tree-vect-loop-manip.c (slpeel_make_loop_iterate_ntimes): Use\n \tLOCATION_LOCUS to compare with UNKNOWN_LOCATION.\n \t(slpeel_tree_peel_loop_to_edge): Likewise.\n-\t* gcc/tree-vectorizer.c (vectorize_loops): Likewise.\n+\t* tree-vectorizer.c (vectorize_loops): Likewise.\n \n 2012-10-01  Andrew MacLeod  <amacleod@redhat.com>\n "}, {"sha": "b4d8688895e76488dace38ef615fec1d3f868fdc", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "patch": "@@ -235,6 +235,7 @@ get_frame_type (struct nesting_info *info)\n \n       info->frame_type = type;\n       info->frame_decl = create_tmp_var_for (info, type, \"FRAME\");\n+      DECL_NONLOCAL_FRAME (info->frame_decl) = 1;\n \n       /* ??? Always make it addressable for now, since it is meant to\n \t be pointed to by the static chain pointer.  This pessimizes"}, {"sha": "73a81c9c3ccd352872121be3a52e21a7157823c3", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "patch": "@@ -216,6 +216,9 @@ unpack_ts_decl_common_value_fields (struct bitpack_d *bp, tree expr)\n       expr->decl_common.off_align = bp_unpack_value (bp, 8);\n     }\n \n+  if (TREE_CODE (expr) == VAR_DECL)\n+    DECL_NONLOCAL_FRAME (expr) = (unsigned) bp_unpack_value (bp, 1);\n+\n   if (TREE_CODE (expr) == RESULT_DECL\n       || TREE_CODE (expr) == PARM_DECL\n       || TREE_CODE (expr) == VAR_DECL)"}, {"sha": "63f7a02d5876ea762a7417a2c131a7d2ab68fbdb", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "patch": "@@ -181,6 +181,9 @@ pack_ts_decl_common_value_fields (struct bitpack_d *bp, tree expr)\n       bp_pack_value (bp, expr->decl_common.off_align, 8);\n     }\n \n+  if (TREE_CODE (expr) == VAR_DECL)\n+    bp_pack_value (bp, DECL_NONLOCAL_FRAME (expr), 1);\n+\n   if (TREE_CODE (expr) == RESULT_DECL\n       || TREE_CODE (expr) == PARM_DECL\n       || TREE_CODE (expr) == VAR_DECL)"}, {"sha": "ff4ae52e2375408f1ac29194cb4265906bfe6a32", "filename": "gcc/tree.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e88429a98791cd8c5b8d80703fc5f04a80b23/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=0f1e88429a98791cd8c5b8d80703fc5f04a80b23", "patch": "@@ -712,6 +712,9 @@ struct GTY(()) tree_base {\n \n        SSA_NAME_IS_DEFAULT_DEF in\n            SSA_NAME\n+\n+       DECL_NONLOCAL_FRAME in\n+\t   VAR_DECL\n */\n \n struct GTY(()) tree_typed {\n@@ -3270,9 +3273,14 @@ extern void decl_fini_priority_insert (tree, priority_type);\n    libraries.  */\n #define MAX_RESERVED_INIT_PRIORITY 100\n \n+/* In a VAR_DECL, nonzero if this is a global variable for VOPs.  */\n #define VAR_DECL_IS_VIRTUAL_OPERAND(NODE) \\\n   (VAR_DECL_CHECK (NODE)->base.u.bits.saturating_flag)\n \n+/* In a VAR_DECL, nonzero if this is a non-local frame structure.  */\n+#define DECL_NONLOCAL_FRAME(NODE)  \\\n+  (VAR_DECL_CHECK (NODE)->base.default_def_flag)\n+\n struct GTY(()) tree_var_decl {\n   struct tree_decl_with_vis common;\n };"}]}