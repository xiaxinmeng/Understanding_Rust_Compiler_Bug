{"sha": "7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5MzUxNGNmNmE2MmEzNGE0OGY2MWRkZDRiMDNiZGQ0N2IxYjRiZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-04-12T13:39:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T13:39:09Z"}, "message": "exp_aggr.adb: Minor reformatting.\n\n2013-04-12  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_aggr.adb: Minor reformatting.\n\t* namet.ads, namet.adb (Nam_In): New functions.\n\nFrom-SVN: r197916", "tree": {"sha": "e27f87221b0f53181765c2b6215be8e511e87490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e27f87221b0f53181765c2b6215be8e511e87490"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/comments", "author": null, "committer": null, "parents": [{"sha": "aab45d22d2ea5e564786773071d4758264755721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab45d22d2ea5e564786773071d4758264755721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aab45d22d2ea5e564786773071d4758264755721"}], "stats": {"total": 138, "additions": 134, "deletions": 4}, "files": [{"sha": "60e39f5eca5699b3ea15fa6b1b11636f7b07f3d6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "patch": "@@ -1,3 +1,8 @@\n+2013-04-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_aggr.adb: Minor reformatting.\n+\t* namet.ads, namet.adb (Nam_In): New functions.\n+\n 2013-04-12  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.adb (Has_Dynamic_Predicate_Aspect): New flag."}, {"sha": "c4a80ef8406872f23a781ebbaca3f83e799df842", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "patch": "@@ -1841,7 +1841,7 @@ package body Exp_Aggr is\n       --  these discriminants are not components of the aggregate, and must be\n       --  initialized. The assignments are appended to List.\n \n-      function Get_Explicit_Discriminant_Value (D : Entity_Id)  return Node_Id;\n+      function Get_Explicit_Discriminant_Value (D : Entity_Id) return Node_Id;\n       --  If the ancestor part is an unconstrained type and further ancestors\n       --  do not provide discriminants for it, check aggregate components for\n       --  values of the discriminants.\n@@ -2068,7 +2068,8 @@ package body Exp_Aggr is\n       -- Get_Explicit_Discriminant_Value --\n       -------------------------------------\n \n-      function Get_Explicit_Discriminant_Value (D : Entity_Id)  return Node_Id\n+      function Get_Explicit_Discriminant_Value\n+        (D : Entity_Id) return Node_Id\n       is\n          Assoc  : Node_Id;\n          Choice : Node_Id;\n@@ -2081,6 +2082,7 @@ package body Exp_Aggr is\n          Assoc := First (Component_Associations (N));\n          while Present (Assoc) loop\n             Choice := First (Choices (Assoc));\n+\n             if Chars (Choice) = Chars (D) then\n                Val := Expression (Assoc);\n                Remove (Assoc);"}, {"sha": "c4ffa4b592df944f71a97643fd03166e5ce77e20", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 75, "deletions": 1, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1039,6 +1039,80 @@ package body Namet is\n       end if;\n    end Name_Find;\n \n+   -------------\n+   -- Nam_In --\n+   -------------\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id) return Boolean\n+   is\n+   begin\n+      return T = V1 or else\n+             T = V2;\n+   end Nam_In;\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id) return Boolean\n+   is\n+   begin\n+      return T = V1 or else\n+             T = V2 or else\n+             T = V3;\n+   end Nam_In;\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id;\n+      V4 : Name_Id) return Boolean\n+   is\n+   begin\n+      return T = V1 or else\n+             T = V2 or else\n+             T = V3 or else\n+             T = V4;\n+   end Nam_In;\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id;\n+      V4 : Name_Id;\n+      V5 : Name_Id) return Boolean\n+   is\n+   begin\n+      return T = V1 or else\n+             T = V2 or else\n+             T = V3 or else\n+             T = V4 or else\n+             T = V5;\n+   end Nam_In;\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id;\n+      V4 : Name_Id;\n+      V5 : Name_Id;\n+      V6 : Name_Id) return Boolean\n+   is\n+   begin\n+      return T = V1 or else\n+             T = V2 or else\n+             T = V3 or else\n+             T = V4 or else\n+             T = V5 or else\n+             T = V6;\n+   end Nam_In;\n+\n    ------------------\n    -- Reinitialize --\n    ------------------"}, {"sha": "facb1822dec75cac5f759fb0e7a177599ce54832", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 50, "deletions": 1, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7893514cf6a62a34a48f61ddd4b03bdd47b1b4be/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=7893514cf6a62a34a48f61ddd4b03bdd47b1b4be", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -165,6 +165,55 @@ package Namet is\n    First_Name_Id : constant Name_Id := Names_Low_Bound + 2;\n    --  Subscript of first entry in names table\n \n+   ------------------------------\n+   -- Name_Id Membership Tests --\n+   ------------------------------\n+\n+   --  The following functions allow a convenient notation for testing whether\n+   --  a Name_Id value matches any one of a list of possible values. In each\n+   --  case True is returned if the given T argument is equal to any of the V\n+   --  arguments. These essentially duplicate the Ada 2012 membership tests,\n+   --  but we cannot use the latter (yet) in the compiler front end, because\n+   --  of bootstrap considerations\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id) return Boolean;\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id) return Boolean;\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id;\n+      V4 : Name_Id) return Boolean;\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id;\n+      V4 : Name_Id;\n+      V5 : Name_Id) return Boolean;\n+\n+   function Nam_In\n+     (T  : Name_Id;\n+      V1 : Name_Id;\n+      V2 : Name_Id;\n+      V3 : Name_Id;\n+      V4 : Name_Id;\n+      V5 : Name_Id;\n+      V6 : Name_Id) return Boolean;\n+\n+   pragma Inline (Nam_In);\n+   --  Inline all above functions\n+\n    -----------------\n    -- Subprograms --\n    -----------------"}]}