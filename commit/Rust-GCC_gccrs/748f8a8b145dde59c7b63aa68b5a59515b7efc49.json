{"sha": "748f8a8b145dde59c7b63aa68b5a59515b7efc49", "node_id": "C_kwDOANBUbNoAKDc0OGY4YThiMTQ1ZGRlNTljN2I2M2FhNjhiNWE1OTUxNWI3ZWZjNDk", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-07-14T20:24:55Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-07-14T20:25:48Z"}, "message": "Fortran: error recovery for bad initializers of implied-shape arrays [PR106209]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/106209\n\t* decl.cc (add_init_expr_to_sym): Handle bad initializers for\n\timplied-shape arrays.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/106209\n\t* gfortran.dg/pr106209.f90: New test.\n\nCo-authored-by: Steven G. Kargl <kargl@gcc.gnu.org>", "tree": {"sha": "d50cf8be704c294081c3f19690ea96a98f84cbf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d50cf8be704c294081c3f19690ea96a98f84cbf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/748f8a8b145dde59c7b63aa68b5a59515b7efc49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748f8a8b145dde59c7b63aa68b5a59515b7efc49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/748f8a8b145dde59c7b63aa68b5a59515b7efc49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748f8a8b145dde59c7b63aa68b5a59515b7efc49/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4f81085d1ef5776be30f95c102ec67daf03c35c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f81085d1ef5776be30f95c102ec67daf03c35c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4f81085d1ef5776be30f95c102ec67daf03c35c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "b640051473112af20b23954a0f58670426e34ef0", "filename": "gcc/fortran/decl.cc", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/748f8a8b145dde59c7b63aa68b5a59515b7efc49/gcc%2Ffortran%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/748f8a8b145dde59c7b63aa68b5a59515b7efc49/gcc%2Ffortran%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.cc?ref=748f8a8b145dde59c7b63aa68b5a59515b7efc49", "patch": "@@ -2129,10 +2129,21 @@ add_init_expr_to_sym (const char *name, gfc_expr **initp, locus *var_locus)\n \t  /* The shape may be NULL for EXPR_ARRAY, set it.  */\n \t  if (init->shape == NULL)\n \t    {\n-\t      gcc_assert (init->expr_type == EXPR_ARRAY);\n+\t      if (init->expr_type != EXPR_ARRAY)\n+\t\t{\n+\t\t  gfc_error (\"Bad shape of initializer at %L\", &init->where);\n+\t\t  return false;\n+\t\t}\n+\n \t      init->shape = gfc_get_shape (1);\n \t      if (!gfc_array_size (init, &init->shape[0]))\n-\t\t  gfc_internal_error (\"gfc_array_size failed\");\n+\t\t{\n+\t\t  gfc_error (\"Cannot determine shape of initializer at %L\",\n+\t\t\t     &init->where);\n+\t\t  free (init->shape);\n+\t\t  init->shape = NULL;\n+\t\t  return false;\n+\t\t}\n \t    }\n \n \t  for (dim = 0; dim < sym->as->rank; ++dim)"}, {"sha": "44f9233ec2f92994816ba2448c8edbe5f98bdec2", "filename": "gcc/testsuite/gfortran.dg/pr106209.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/748f8a8b145dde59c7b63aa68b5a59515b7efc49/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106209.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/748f8a8b145dde59c7b63aa68b5a59515b7efc49/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106209.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106209.f90?ref=748f8a8b145dde59c7b63aa68b5a59515b7efc49", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/106209 - ICE in add_init_expr_to_sym\n+! Contributed by G.Steinmetz\n+\n+program p\n+  integer, parameter :: a(:) = 0   ! { dg-error \"of deferred shape\" }\n+  integer, parameter :: b(*) = a   ! { dg-error \"Bad shape of initializer\" }\n+  integer, parameter :: c(*) = [a] ! { dg-error \"Cannot determine shape\" }\n+end"}]}