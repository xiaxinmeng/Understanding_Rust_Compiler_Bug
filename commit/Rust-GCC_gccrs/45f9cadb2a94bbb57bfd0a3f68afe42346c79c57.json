{"sha": "45f9cadb2a94bbb57bfd0a3f68afe42346c79c57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVmOWNhZGIyYTk0YmJiNTdiZmQwYTNmNjhhZmU0MjM0NmM3OWM1Nw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-11-29T02:40:04Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-11-29T02:40:04Z"}, "message": "In gcc/testsuite/: 2010-11-29 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/testsuite/:\n2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* obj-c++.dg/property/at-property-1.mm: Fixed testcase.\n\t* obj-c++.dg/property/at-property-16.mm: Fixed testcase.\n\t* obj-c++.dg/property/at-property-20.mm: Fixed testcase.\n\nFrom-SVN: r167232", "tree": {"sha": "3bd99e5ee989020032c7a3e8d5ec4e9732460363", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bd99e5ee989020032c7a3e8d5ec4e9732460363"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5944a6dcdfd01be22235e194b008e7aab2cd7a67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5944a6dcdfd01be22235e194b008e7aab2cd7a67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5944a6dcdfd01be22235e194b008e7aab2cd7a67"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "c7830ebc2b920e68269d5719de72fea1881e50d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45f9cadb2a94bbb57bfd0a3f68afe42346c79c57", "patch": "@@ -1,3 +1,9 @@\n+2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* obj-c++.dg/property/at-property-1.mm: Fixed testcase.\n+\t* obj-c++.dg/property/at-property-16.mm: Fixed testcase.\n+\t* obj-c++.dg/property/at-property-20.mm: Fixed testcase.\n+\n 2010-11-28  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46662"}, {"sha": "1b945bd44ba3df8bd3ff1fabacdf73eb7e1583d9", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-1.mm", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-1.mm?ref=45f9cadb2a94bbb57bfd0a3f68afe42346c79c57", "patch": "@@ -15,9 +15,6 @@ @interface MyRootClass\n @property (readonly,) int f;    /* { dg-error \"expected identifier\" } */\n @property (xxx) int g;          /* { dg-error \"unknown property attribute\" } */\n @property (readonly,xxx) int h; /* { dg-error \"unknown property attribute\" } */\n-/* FIXME - there is a problem with the testuite in running the following test.  The compiler\n-   generates the messages, but the testsuite still complains.  */\n-/*@property ( int i;*/          /* dg-error \"unknown property attribute\" */\n-                                /* dg-error \"expected ... \"       \"\" { target *-*-* } 18 */\n-                                /* dg-error \"expected identfier \" \"\" { target *-*-* } 18 */\n+@property ( int i;              /* { dg-error \"expected identifier\" } */\n+                                /* { dg-error \"expected ... \"       \"\" { target *-*-* } 18 } */\n @end"}, {"sha": "2639de9e667e57ca8831df35251b693313084de9", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-16.mm", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-16.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-16.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-16.mm?ref=45f9cadb2a94bbb57bfd0a3f68afe42346c79c57", "patch": "@@ -14,10 +14,10 @@ @interface MyRootClass\n @property (retain) id b;                  /* { dg-warning \"originally specified here\" } */\n @property int c;                          /* { dg-warning \"originally specified here\" } */\n @property (nonatomic) int d;              /* { dg-warning \"originally specified here\" } */\n-/* FIXME: The compiler generates these errors, but the testsuite still fails the tests.  */\n-@property int e;                          /* dg-warning \"originally specified here\" */\n-@property int f;                          /* dg-warning \"originally specified here\" */\n-@property int g;                          /* dg-warning \"originally specified here\" */\n+/* FIXME: Mysteriously the next 3 need to be 'dg-message' instead of 'dg-warning' for the testcase to work.  */\n+@property int e;                          /* { dg-message \"originally specified here\" } */\n+@property int f;                          /* { dg-message \"originally specified here\" } */\n+@property int g;                          /* { dg-message \"originally specified here\" } */\n @property (readonly) int h;               /* Ok */\n @property (readonly,getter=getMe) int i;  /* { dg-warning \"originally specified here\" } */\n @end\n@@ -39,10 +39,9 @@ @interface MyClass2 : MyRootClass\n @property (assign) id b;         /* { dg-warning \"assign semantics attributes of property .b. conflict with previous declaration\" } */\n @property (nonatomic) int c;     /* { dg-warning \".nonatomic. attribute of property .c. conflicts with previous declaration\" } */\n @property int d;                 /* { dg-warning \".nonatomic. attribute of property .d. conflicts with previous declaration\" } */\n-/* FIXME: The compiler generates these errors, but the testsuite still fails the tests.  */\n-/*@property (setter=setX:) int e;*/  /*  dg-warning \".setter. attribute of property .e. conflicts with previous declaration\"  */\n-/*@property (getter=x) int f;*/      /*  dg-warning \".getter. attribute of property .f. conflicts with previous declaration\"  */\n-/*@property (readonly) int g;*/      /*  dg-warning \".readonly. attribute of property .g. conflicts with previous declaration\"  */\n+@property (setter=setX:) int e;  /* { dg-warning \".setter. attribute of property .e. conflicts with previous declaration\" } */\n+@property (getter=x) int f;      /* { dg-warning \".getter. attribute of property .f. conflicts with previous declaration\" } */\n+@property (readonly) int g;      /* { dg-warning \".readonly. attribute of property .g. conflicts with previous declaration\" } */\n @property (readwrite) int h;     /* Ok */\n @property (readonly) int i;      /* { dg-warning \".getter. attribute of property .i. conflicts with previous declaration\" } */\n @end"}, {"sha": "077fe6ddda2ec2db0fb44f1801864f203123fee3", "filename": "gcc/testsuite/obj-c++.dg/property/at-property-20.mm", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-20.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f9cadb2a94bbb57bfd0a3f68afe42346c79c57/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-20.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fat-property-20.mm?ref=45f9cadb2a94bbb57bfd0a3f68afe42346c79c57", "patch": "@@ -42,10 +42,10 @@ @interface MyClass : MyRootClass\n @property float c;                            /* { dg-warning \"originally specified here\" } */\n @property (assign) MyRootClass *d;            /* { dg-warning \"originally specified here\" } */\n @property (assign) MySubClass1 *e;            /* { dg-warning \"originally specified here\" } */\n-/* FIXME: The compiler seems to generate messages correctly, but the testsuite still fails the test.  */\n-/*@property (assign, readonly) MySubClass1 *f; */ /*  dg-warning \"originally specified here\"  */\n+/* FIXME: Mysteriously two of the next three need to be 'dg-message' instead of 'dg-warning' for the testcase to work.  */\n+@property (assign, readonly) MySubClass1 *f;  /* { dg-message \"originally specified here\" } */\n @property (assign) MySubClass3 *g;            /* { dg-warning \"originally specified here\" } */\n-/*@property (assign, readonly) MySubClass3 *h; */ /*  dg-warning \"originally specified here\"  */\n+@property (assign, readonly) MySubClass3 *h;  /* { dg-message \"originally specified here\"  } */\n @end\n \n /* The following are all OK because they are identical.  */\n@@ -69,9 +69,9 @@ @interface MyClass3 : MyClass\n @property int c;                              /* { dg-warning \"type of property .c. conflicts with previous declaration\" } */\n @property (assign) id d;                      /* { dg-warning \"type of property .d. conflicts with previous declaration\" } */\n @property (assign) MyRootClass *e;            /* { dg-warning \"type of property .e. conflicts with previous declaration\" } */\n-/*@property (assign, readonly) MyRootClass *f; */ /*  dg-warning \"type of property .f. conflicts with previous declaration\"  */\n+@property (assign, readonly) MyRootClass *f;  /* { dg-warning \"type of property .f. conflicts with previous declaration\" } */\n @property (assign) MySubClass2 *g;            /* { dg-warning \"type of property .g. conflicts with previous declaration\" } */\n-/*@property (assign, readonly) MySubClass2 *h; */ /*  dg-warning \"type of property .h. conflicts with previous declaration\"  */\n+@property (assign, readonly) MySubClass2 *h;  /* { dg-warning \"type of property .h. conflicts with previous declaration\" } */\n @end\n \n /* The following are OK.  */"}]}