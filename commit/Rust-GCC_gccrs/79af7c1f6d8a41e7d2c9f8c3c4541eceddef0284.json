{"sha": "79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlhZjdjMWY2ZDhhNDFlN2QyYzlmOGMzYzQ1NDFlY2VkZGVmMDI4NA==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2009-11-06T15:05:20Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2009-11-06T15:05:20Z"}, "message": "re PR middle-end/41963 (177.mesa in SPEC CPU 2K is miscompiled)\n\n\tPR middle-end/41963\n\t* tree-ssa-math-opts.c (execute_cse_reciprocals): Check all uses\n\tof a potential reciprocal to really be reciprocals.\n\ntestsuite/\n\t* gcc.dg/pr41963.c: New test.\n\nFrom-SVN: r153971", "tree": {"sha": "90670b8a9be6e2de19fdb86e0077119c3c77ffd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90670b8a9be6e2de19fdb86e0077119c3c77ffd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cd4e79ba8e43b27273f27874ecd5142c60cc338", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd4e79ba8e43b27273f27874ecd5142c60cc338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd4e79ba8e43b27273f27874ecd5142c60cc338"}], "stats": {"total": 81, "additions": 77, "deletions": 4}, "files": [{"sha": "d0df7de35eda74f444990fddf93210bc1224bf4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "patch": "@@ -1,3 +1,9 @@\n+2009-11-06  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/41963\n+\t* tree-ssa-math-opts.c (execute_cse_reciprocals): Check all uses\n+\tof a potential reciprocal to really be reciprocals.\n+\n 2009-11-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/x86intrin.h: Include fma4intrin.h, xopintrin.h and"}, {"sha": "60159c1d32afffb060040bd97061a069278d65fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "patch": "@@ -1,3 +1,8 @@\n+2009-11-06  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/41963\n+\t* gcc.dg/pr41963.c: New test.\n+\n 2009-11-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/41935"}, {"sha": "f8bf4a1b81cd51f56021c9f2c8011458565e7bd9", "filename": "gcc/testsuite/gcc.dg/pr41963.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41963.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41963.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41963.c?ref=79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+#include <math.h>\n+\n+extern float sqrtf(float);\n+\n+static __attribute__((noinline)) void f (float *dst, float *src)\n+{\n+  int i, j;\n+  for (i = 0; i < 2; i++)\n+    {\n+      float len;\n+      dst[0] = src[0];\n+      dst[1] = src[1];\n+      len = sqrtf (dst[0] * dst[0] + dst[1] * dst[1]);\n+      if (len > 0.5f)\n+\t{\n+\t  len = 1.0f / len;\n+\t  dst[0] *= len;\n+\t  dst[1] *= len;\n+\t}\n+    }\n+}\n+\n+extern void abort (void);\n+\n+int main()\n+{\n+  float dst[2], src[2];\n+  src[0] = 2.0f;\n+  src[1] = 5.0f;\n+  f (dst, src);\n+  if (fabsf (dst[0] * dst[0] + dst[1] * dst[1] - 1.0f) > 0.01f)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "c0ddc8afa305c90734e5ea1d01fa88ec49c42a0e", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=79af7c1f6d8a41e7d2c9f8c3c4541eceddef0284", "patch": "@@ -531,7 +531,9 @@ execute_cse_reciprocals (void)\n \t\t      || DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_MD))\n \t\t{\n \t\t  enum built_in_function code;\n-\t\t  bool md_code;\n+\t\t  bool md_code, fail;\n+\t\t  imm_use_iterator ui;\n+\t\t  use_operand_p use_p;\n \n \t\t  code = DECL_FUNCTION_CODE (fndecl);\n \t\t  md_code = DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_MD;\n@@ -540,12 +542,36 @@ execute_cse_reciprocals (void)\n \t\t  if (!fndecl)\n \t\t    continue;\n \n+\t\t  /* Check that all uses of the SSA name are divisions,\n+\t\t     otherwise replacing the defining statement will do\n+\t\t     the wrong thing.  */\n+\t\t  fail = false;\n+\t\t  FOR_EACH_IMM_USE_FAST (use_p, ui, arg1)\n+\t\t    {\n+\t\t      gimple stmt2 = USE_STMT (use_p);\n+\t\t      if (is_gimple_debug (stmt2))\n+\t\t\tcontinue;\n+\t\t      if (!is_gimple_assign (stmt2)\n+\t\t\t  || gimple_assign_rhs_code (stmt2) != RDIV_EXPR\n+\t\t\t  || gimple_assign_rhs1 (stmt2) == arg1\n+\t\t\t  || gimple_assign_rhs2 (stmt2) != arg1)\n+\t\t\t{\n+\t\t\t  fail = true;\n+\t\t\t  break;\n+\t\t\t}\n+\t\t    }\n+\t\t  if (fail)\n+\t\t    continue;\n+\n \t\t  gimple_call_set_fndecl (stmt1, fndecl);\n \t\t  update_stmt (stmt1);\n \n-\t\t  gimple_assign_set_rhs_code (stmt, MULT_EXPR);\n-\t\t  fold_stmt_inplace (stmt);\n-\t\t  update_stmt (stmt);\n+\t\t  FOR_EACH_IMM_USE_STMT (stmt, ui, arg1)\n+\t\t    {\n+\t\t      gimple_assign_set_rhs_code (stmt, MULT_EXPR);\n+\t\t      fold_stmt_inplace (stmt);\n+\t\t      update_stmt (stmt);\n+\t\t    }\n \t\t}\n \t    }\n \t}"}]}