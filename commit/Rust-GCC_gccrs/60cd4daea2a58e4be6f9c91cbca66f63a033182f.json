{"sha": "60cd4daea2a58e4be6f9c91cbca66f63a033182f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBjZDRkYWVhMmE1OGU0YmU2ZjljOTFjYmNhNjZmNjNhMDMzMTgyZg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2003-07-04T22:00:19Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2003-07-04T22:00:19Z"}, "message": "expr.c (do_store_flag): Pass in the correct result type when calling fold_single_bit_test.\n\n        * expr.c (do_store_flag): Pass in the correct result type\n        when calling fold_single_bit_test.\n        * fold-const.c (fold_single_bit_test): Use result_type for the\n        result when folding a sign bit test.\n\nFrom-SVN: r68940", "tree": {"sha": "3a9bd21e507ddfde6621f5d3a0295642f5e56dd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a9bd21e507ddfde6621f5d3a0295642f5e56dd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60cd4daea2a58e4be6f9c91cbca66f63a033182f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60cd4daea2a58e4be6f9c91cbca66f63a033182f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60cd4daea2a58e4be6f9c91cbca66f63a033182f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60cd4daea2a58e4be6f9c91cbca66f63a033182f/comments", "author": null, "committer": null, "parents": [{"sha": "5e14ae7e269c0ae1206b62237f7b6cbdd68f6fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e14ae7e269c0ae1206b62237f7b6cbdd68f6fec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e14ae7e269c0ae1206b62237f7b6cbdd68f6fec"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "970b60a3271be2e7f7b21e6b6eaf7ad90f82109c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60cd4daea2a58e4be6f9c91cbca66f63a033182f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60cd4daea2a58e4be6f9c91cbca66f63a033182f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60cd4daea2a58e4be6f9c91cbca66f63a033182f", "patch": "@@ -1,3 +1,10 @@\n+2003-07-04  Jeff Law  <law@redhat.com>\n+\n+\t* expr.c (do_store_flag): Pass in the correct result type\n+\twhen calling fold_single_bit_test.\n+\t* fold-const.c (fold_single_bit_test): Use result_type for the\n+\tresult when folding a sign bit test.\n+\n 2003-07-04  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* opts.c (common_handle_options): Negate sense of -falign- switches."}, {"sha": "56d733f2d0fcb237b82ccc3fc52cd694a45f0c46", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60cd4daea2a58e4be6f9c91cbca66f63a033182f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60cd4daea2a58e4be6f9c91cbca66f63a033182f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=60cd4daea2a58e4be6f9c91cbca66f63a033182f", "patch": "@@ -9998,9 +9998,12 @@ do_store_flag (tree exp, rtx target, enum machine_mode mode, int only_cheap)\n   if ((code == NE || code == EQ)\n       && TREE_CODE (arg0) == BIT_AND_EXPR && integer_zerop (arg1)\n       && integer_pow2p (TREE_OPERAND (arg0, 1)))\n-    return expand_expr (fold_single_bit_test (code == NE ? NE_EXPR : EQ_EXPR,\n-\t\t\t\t\t      arg0, arg1, type), \n-\t\t\ttarget, VOIDmode, EXPAND_NORMAL);\n+    {\n+      tree type = (*lang_hooks.types.type_for_mode) (mode, unsignedp);\n+      return expand_expr (fold_single_bit_test (code == NE ? NE_EXPR : EQ_EXPR,\n+\t\t\t\t\t\targ0, arg1, type), \n+\t\t\t  target, VOIDmode, EXPAND_NORMAL);\n+    }\n \n   /* Now see if we are likely to be able to do this.  Return if not.  */\n   if (! can_compare_p (code, operand_mode, ccp_store_flag))"}, {"sha": "64a30f4b82522ea0706fc9a566f67057d908095e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60cd4daea2a58e4be6f9c91cbca66f63a033182f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60cd4daea2a58e4be6f9c91cbca66f63a033182f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=60cd4daea2a58e4be6f9c91cbca66f63a033182f", "patch": "@@ -4825,7 +4825,7 @@ fold_single_bit_test (code, arg0, arg1, result_type)\n       if (arg00 != NULL_TREE)\n \t{\n \t  tree stype = (*lang_hooks.types.signed_type) (TREE_TYPE (arg00));\n-\t  return fold (build (code == EQ_EXPR ? GE_EXPR : LT_EXPR, type,\n+\t  return fold (build (code == EQ_EXPR ? GE_EXPR : LT_EXPR, result_type,\n \t\t\t      convert (stype, arg00),\n \t\t\t      convert (stype, integer_zero_node)));\n \t}"}]}