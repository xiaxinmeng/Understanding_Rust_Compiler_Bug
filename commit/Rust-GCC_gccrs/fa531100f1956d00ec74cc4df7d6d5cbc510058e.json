{"sha": "fa531100f1956d00ec74cc4df7d6d5cbc510058e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE1MzExMDBmMTk1NmQwMGVjNzRjYzRkZjdkNmQ1Y2JjNTEwMDU4ZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-09-08T18:46:20Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-09-08T18:46:20Z"}, "message": "re PR c++/11786 (operator() call on variable in other namespace not recognized)\n\n\tPR c++/11786\n\t* decl2.c (add_function): Do not complain about seeing the same\n\tnon-function twice.\n\t* semantics.c (perform_koenig_lookup): Improve documentation.\n\n\tPR c++/11786\n\t* g++.dg/lookup/koenig2.C: New test.\n\nFrom-SVN: r71213", "tree": {"sha": "7e7a10f5801dccde975ad231bcedfa37dddce232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e7a10f5801dccde975ad231bcedfa37dddce232"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa531100f1956d00ec74cc4df7d6d5cbc510058e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa531100f1956d00ec74cc4df7d6d5cbc510058e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa531100f1956d00ec74cc4df7d6d5cbc510058e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa531100f1956d00ec74cc4df7d6d5cbc510058e/comments", "author": null, "committer": null, "parents": [{"sha": "c4bb110a19d441dbaef58fe4215bda6537e5c8a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bb110a19d441dbaef58fe4215bda6537e5c8a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bb110a19d441dbaef58fe4215bda6537e5c8a4"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "c02e8d19397763be83849dffe9b5e46171076c42", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fa531100f1956d00ec74cc4df7d6d5cbc510058e", "patch": "@@ -1,5 +1,10 @@\n 2003-09-08  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/11786\n+\t* decl2.c (add_function): Do not complain about seeing the same\n+\tnon-function twice.\n+\t* semantics.c (perform_koenig_lookup): Improve documentation.\n+\n \tPR c++/5296\n \t* pt.c (try_one_overload): Add addr_p parameter.\n \t(resolve_overloaded_unification): Pass it."}, {"sha": "4004c8c80de65a63c4978aa56b88bae5a93cd61a", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=fa531100f1956d00ec74cc4df7d6d5cbc510058e", "patch": "@@ -3505,6 +3505,8 @@ add_function (struct arg_lookup *k, tree fn)\n   /* We must find only functions, or exactly one non-function.  */\n   if (!k->functions) \n     k->functions = fn;\n+  else if (fn == k->functions)\n+    ;\n   else if (is_overloaded_fn (k->functions) && is_overloaded_fn (fn))\n     k->functions = build_overload (fn, k->functions);\n   else"}, {"sha": "e7392c03052f612ee2b2b8aeee5c73b970d3b047", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=fa531100f1956d00ec74cc4df7d6d5cbc510058e", "patch": "@@ -1534,8 +1534,9 @@ finish_stmt_expr (tree rtl_expr, bool has_no_scope)\n }\n \n /* Perform Koenig lookup.  FN is the postfix-expression representing\n-   the call; ARGS are the arguments to the call.  Returns the\n-   functions to be considered by overload resolution.  */\n+   the function (or functions) to call; ARGS are the arguments to the\n+   call.  Returns the functions to be considered by overload\n+   resolution.  */\n \n tree\n perform_koenig_lookup (tree fn, tree args)"}, {"sha": "3d9d3672faff1351e9cf6014a6e662488adc0ab5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa531100f1956d00ec74cc4df7d6d5cbc510058e", "patch": "@@ -1,5 +1,8 @@\n 2003-09-08  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/11786\n+\t* g++.dg/lookup/koenig2.C: New test.\n+\n \tPR c++/5296\n \t* g++.dg/rtti/typeid2.C: New test.\n "}, {"sha": "04f95258999c12ee71c9ab8c6f65ad133933e6bb", "filename": "gcc/testsuite/g++.dg/lookup/koenig2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa531100f1956d00ec74cc4df7d6d5cbc510058e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig2.C?ref=fa531100f1956d00ec74cc4df7d6d5cbc510058e", "patch": "@@ -0,0 +1,15 @@\n+struct S\n+{\n+  template <typename T> void operator() (T) {}\n+};\n+\n+namespace N\n+{\n+  S s;\n+  struct A {} a;\n+}\n+\n+using N::s;\n+\n+void f () { s(N::a); }\n+"}]}