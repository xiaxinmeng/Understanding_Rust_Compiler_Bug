{"sha": "aae0609ca919ce45f08b9c1f3fe836d743d562dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFlMDYwOWNhOTE5Y2U0NWYwOGI5YzFmM2ZlODM2ZDc0M2Q1NjJkZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-29T11:41:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-29T11:41:51Z"}, "message": "mips.md (ANYF, SCALARF): New mode macros.\n\n\t* config/mips/mips.md (ANYF, SCALARF): New mode macros.\n\t(loadx, storex, fmt, UNITMODE): New mode attributes.\n\t(add{sf,df,v2sf}3, sub{sf,df,v2sf}3): Redefine using :ANYF.\n\t(mul[sd]f3): Redefine using :SCALARF.\n\t(*mul[sd]f3): Renamed from mul[sd]f3_internal.  Use :SCALARF.\n\t(*mul[sd]3_r4300): Likewise mul[sd]f3_r4300.\n\t(*m{add,sub}{sf,df,v2sf}3): Name formerly unnamed patterns.  Use :ANYF.\n\tCheck TARGET_FUSED_MADD for V2SF too.\n\t(*nm{add,sub}{sf,df,v2sf}3{,_fastmath}): Likewise, except v2sf patterns\n\twere already named.\n\t(abs{sf,df,v2sf}3, neg{sf,df,v2sf}3): Redefine using :ANYF.\n\t(*[sl][wd]xc1_[sd]i): Redefine using :ANYF.\n\nFrom-SVN: r86720", "tree": {"sha": "9461df0161a71c642fd973f9616b390f324601b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9461df0161a71c642fd973f9616b390f324601b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aae0609ca919ce45f08b9c1f3fe836d743d562dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aae0609ca919ce45f08b9c1f3fe836d743d562dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aae0609ca919ce45f08b9c1f3fe836d743d562dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aae0609ca919ce45f08b9c1f3fe836d743d562dd/comments", "author": null, "committer": null, "parents": [{"sha": "74fc61d171cc8e3ff649d9c926233e9e31df6e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fc61d171cc8e3ff649d9c926233e9e31df6e18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74fc61d171cc8e3ff649d9c926233e9e31df6e18"}], "stats": {"total": 562, "additions": 160, "deletions": 402}, "files": [{"sha": "b4f7b5f178572ae63b5bb115becfa56e2d018cbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aae0609ca919ce45f08b9c1f3fe836d743d562dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aae0609ca919ce45f08b9c1f3fe836d743d562dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aae0609ca919ce45f08b9c1f3fe836d743d562dd", "patch": "@@ -1,3 +1,18 @@\n+2004-08-29  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (ANYF, SCALARF): New mode macros.\n+\t(loadx, storex, fmt, UNITMODE): New mode attributes.\n+\t(add{sf,df,v2sf}3, sub{sf,df,v2sf}3): Redefine using :ANYF.\n+\t(mul[sd]f3): Redefine using :SCALARF.\n+\t(*mul[sd]f3): Renamed from mul[sd]f3_internal.  Use :SCALARF.\n+\t(*mul[sd]3_r4300): Likewise mul[sd]f3_r4300.\n+\t(*m{add,sub}{sf,df,v2sf}3): Name formerly unnamed patterns.  Use :ANYF.\n+\tCheck TARGET_FUSED_MADD for V2SF too.\n+\t(*nm{add,sub}{sf,df,v2sf}3{,_fastmath}): Likewise, except v2sf patterns\n+\twere already named.\n+\t(abs{sf,df,v2sf}3, neg{sf,df,v2sf}3): Redefine using :ANYF.\n+\t(*[sl][wd]xc1_[sd]i): Redefine using :ANYF.\n+\n 2004-08-29  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.c (mips_init_builtins): Simplify.  Only create"}, {"sha": "b1357e0fbbd2fb07e8100183401d6607432da563", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 145, "deletions": 402, "changes": 547, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aae0609ca919ce45f08b9c1f3fe836d743d562dd/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aae0609ca919ce45f08b9c1f3fe836d743d562dd/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=aae0609ca919ce45f08b9c1f3fe836d743d562dd", "patch": "@@ -361,6 +361,16 @@\n ;; conditional-move-type condition is needed.\n (define_mode_macro MOVECC [SI (DI \"TARGET_64BIT\") (CC \"TARGET_HARD_FLOAT\")])\n \n+;; This mode macro allows :ANYF to be used wherever a scalar or vector\n+;; floating-point mode is allowed.\n+(define_mode_macro ANYF [(SF \"TARGET_HARD_FLOAT\")\n+\t\t\t (DF \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\")\n+\t\t\t (V2SF \"TARGET_PAIRED_SINGLE_FLOAT\")])\n+\n+;; Like ANYF, but only applies to scalar modes.\n+(define_mode_macro SCALARF [(SF \"TARGET_HARD_FLOAT\")\n+\t\t\t    (DF \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\")])\n+\n ;; In GPR templates, a string like \"<d>subu\" will expand to \"subu\" in the\n ;; 32-bit version and \"dsubu\" in the 64-bit version.\n (define_mode_attr d [(SI \"\") (DI \"d\")])\n@@ -369,6 +379,10 @@\n (define_mode_attr load [(SI \"lw\") (DI \"ld\")])\n (define_mode_attr store [(SI \"sw\") (DI \"sd\")])\n \n+;; Similarly for MIPS IV indexed FPR loads and stores.\n+(define_mode_attr loadx [(SF \"lwxc1\") (DF \"ldxc1\")])\n+(define_mode_attr storex [(SF \"swxc1\") (DF \"sdxc1\")])\n+\n ;; The unextended ranges of the MIPS16 addiu and daddiu instructions\n ;; are different.  Some forms of unextended addiu have an 8-bit immediate\n ;; field but the equivalent daddiu has only a 5-bit field.\n@@ -378,6 +392,13 @@\n ;; a given mode.\n (define_mode_attr reg [(SI \"d\") (DI \"d\") (CC \"z\")])\n \n+;; This attribute gives the format suffix for floating-point operations.\n+(define_mode_attr fmt [(SF \"s\") (DF \"d\") (V2SF \"ps\")])\n+\n+;; This attribute gives the upper-case mode name for one unit of a\n+;; floating-point mode.\n+(define_mode_attr UNITMODE [(SF \"SF\") (DF \"DF\") (V2SF \"SF\")])\n+\n ;; This code macro allows all branch instructions to be generated from\n ;; a single define_expand template.\n (define_code_macro any_cond [unordered ordered unlt unge uneq ltgt unle ungt\n@@ -517,32 +538,14 @@\n ;;  ....................\n ;;\n \n-(define_insn \"adddf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(plus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"add.d\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"fadd\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"addsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(plus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"add.s\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"fadd\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"addv2sf3\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(plus:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t   (match_operand:V2SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"add.ps\\t%0,%1,%2\"\n+(define_insn \"add<mode>3\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(plus:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t\t   (match_operand:ANYF 2 \"register_operand\" \"f\")))]\n+  \"\"\n+  \"add.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fadd\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_expand \"add<mode>3\"\n   [(set (match_operand:GPR 0 \"register_operand\")\n@@ -774,32 +777,14 @@\n ;;  ....................\n ;;\n \n-(define_insn \"subdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t  (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"sub.d\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"fadd\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"subsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(minus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t  (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"sub.s\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"fadd\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"subv2sf3\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(minus:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t    (match_operand:V2SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"sub.ps\\t%0,%1,%2\"\n+(define_insn \"sub<mode>3\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(minus:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t\t    (match_operand:ANYF 2 \"register_operand\" \"f\")))]\n+  \"\"\n+  \"sub.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fadd\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"sub<mode>3\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n@@ -828,63 +813,35 @@\n ;;  ....................\n ;;\n \n-(define_expand \"muldf3\"\n-  [(set (match_operand:DF 0 \"register_operand\")\n-\t(mult:DF (match_operand:DF 1 \"register_operand\")\n-\t\t (match_operand:DF 2 \"register_operand\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+(define_expand \"mul<mode>3\"\n+  [(set (match_operand:SCALARF 0 \"register_operand\")\n+\t(mult:SCALARF (match_operand:SCALARF 1 \"register_operand\")\n+\t\t      (match_operand:SCALARF 2 \"register_operand\")))]\n+  \"\"\n   \"\")\n \n-(define_insn \"muldf3_internal\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && !TARGET_4300_MUL_FIX\"\n-  \"mul.d\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"fmul\")\n-   (set_attr \"mode\"\t\"DF\")])\n+(define_insn \"*mul<mode>3\"\n+  [(set (match_operand:SCALARF 0 \"register_operand\" \"=f\")\n+\t(mult:SCALARF (match_operand:SCALARF 1 \"register_operand\" \"f\")\n+\t\t      (match_operand:SCALARF 2 \"register_operand\" \"f\")))]\n+  \"!TARGET_4300_MUL_FIX\"\n+  \"mul.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmul\")\n+   (set_attr \"mode\" \"<MODE>\")])\n \n ;; Early VR4300 silicon has a CPU bug where multiplies with certain\n ;; operands may corrupt immediately following multiplies. This is a\n ;; simple fix to insert NOPs.\n \n-(define_insn \"muldf3_r4300\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_4300_MUL_FIX\"\n-  \"mul.d\\t%0,%1,%2\\;nop\"\n-  [(set_attr \"type\"\t\"fmul\")\n-   (set_attr \"mode\"\t\"DF\")\n-   (set_attr \"length\"\t\"8\")])\n-\n-(define_expand \"mulsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\")\n-\t(mult:SF (match_operand:SF 1 \"register_operand\")\n-\t\t (match_operand:SF 2 \"register_operand\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"\")\n-\n-(define_insn \"mulsf3_internal\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && !TARGET_4300_MUL_FIX\"\n-  \"mul.s\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"fmul\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-;; See muldf3_r4300.\n-\n-(define_insn \"mulsf3_r4300\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_4300_MUL_FIX\"\n-  \"mul.s\\t%0,%1,%2\\;nop\"\n-  [(set_attr \"type\"\t\"fmul\")\n-   (set_attr \"mode\"\t\"SF\")\n-   (set_attr \"length\"\t\"8\")])\n+(define_insn \"*mul<mode>3_r4300\"\n+  [(set (match_operand:SCALARF 0 \"register_operand\" \"=f\")\n+\t(mult:SCALARF (match_operand:SCALARF 1 \"register_operand\" \"f\")\n+\t\t      (match_operand:SCALARF 2 \"register_operand\" \"f\")))]\n+  \"TARGET_4300_MUL_FIX\"\n+  \"mul.<fmt>\\t%0,%1,%2\\;nop\"\n+  [(set_attr \"type\" \"fmul\")\n+   (set_attr \"mode\" \"<MODE>\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"mulv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n@@ -1672,197 +1629,73 @@\n \n ;; Floating point multiply accumulate instructions.\n \n-(define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t\t  (match_operand:DF 2 \"register_operand\" \"f\"))\n-\t\t (match_operand:DF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_FUSED_MADD\"\n-  \"madd.d\\t%0,%3,%1,%2\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t\t  (match_operand:SF 2 \"register_operand\" \"f\"))\n-\t\t (match_operand:SF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\"\n-  \"madd.s\\t%0,%3,%1,%2\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(plus:V2SF (mult:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\"))\n-\t\t   (match_operand:V2SF 3 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"madd.ps\\t%0,%3,%1,%2\"\n+(define_insn \"*madd<mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(plus:ANYF (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t\t\t      (match_operand:ANYF 2 \"register_operand\" \"f\"))\n+\t\t   (match_operand:ANYF 3 \"register_operand\" \"f\")))]\n+  \"ISA_HAS_FP4 && TARGET_FUSED_MADD\"\n+  \"madd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(minus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"register_operand\" \"f\"))\n-\t\t  (match_operand:DF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT && TARGET_FUSED_MADD\"\n-  \"msub.d\\t%0,%3,%1,%2\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(minus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t\t   (match_operand:SF 2 \"register_operand\" \"f\"))\n-\t\t  (match_operand:SF 3 \"register_operand\" \"f\")))]\n-\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\"\n-  \"msub.s\\t%0,%3,%1,%2\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(minus:V2SF (mult:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t\t       (match_operand:V2SF 2 \"register_operand\" \"f\"))\n-\t\t    (match_operand:V2SF 3 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"msub.ps\\t%0,%3,%1,%2\"\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*msub<mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(minus:ANYF (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t\t\t       (match_operand:ANYF 2 \"register_operand\" \"f\"))\n+\t\t    (match_operand:ANYF 3 \"register_operand\" \"f\")))]\n+  \"ISA_HAS_FP4 && TARGET_FUSED_MADD\"\n+  \"msub.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(neg:DF (plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t\t\t  (match_operand:DF 2 \"register_operand\" \"f\"))\n-\t\t\t (match_operand:DF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\n-   && TARGET_FUSED_MADD && HONOR_SIGNED_ZEROS (DFmode)\"\n-  \"nmadd.d\\t%0,%3,%1,%2\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(minus:DF (mult:DF (neg:DF (match_operand:DF 1 \"register_operand\" \"f\"))\n-\t\t\t\t   (match_operand:DF 2 \"register_operand\" \"f\"))\n-\t\t  (match_operand:DF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\n-   && TARGET_FUSED_MADD && !HONOR_SIGNED_ZEROS (DFmode)\"\n-  \"nmadd.d\\t%0,%3,%1,%2\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(neg:SF (plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t\t\t  (match_operand:SF 2 \"register_operand\" \"f\"))\n-\t\t\t (match_operand:SF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\n-   && HONOR_SIGNED_ZEROS (SFmode)\"\n-  \"nmadd.s\\t%0,%3,%1,%2\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(minus:SF (mult:SF (neg:SF (match_operand:SF 1 \"register_operand\" \"f\"))\n-\t\t\t   (match_operand:SF 2 \"register_operand\" \"f\"))\n-\t\t  (match_operand:SF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\n-   && !HONOR_SIGNED_ZEROS (SFmode)\"\n-  \"nmadd.s\\t%0,%3,%1,%2\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"*nmaddv2sf\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(neg:V2SF (plus:V2SF (mult:V2SF \n-\t\t\t      (match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\"))\n-\t\t\t     (match_operand:V2SF 3 \"register_operand\" \"f\"))))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT && HONOR_SIGNED_ZEROS (V2SFmode)\"\n-  \"nmadd.ps\\t%0,%3,%1,%2\"\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*nmadd<mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(neg:ANYF (plus:ANYF\n+\t\t   (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t\t\t      (match_operand:ANYF 2 \"register_operand\" \"f\"))\n+\t\t   (match_operand:ANYF 3 \"register_operand\" \"f\"))))]\n+  \"ISA_HAS_NMADD_NMSUB && TARGET_FUSED_MADD\n+   && HONOR_SIGNED_ZEROS (<MODE>mode)\"\n+  \"nmadd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"*nmaddv2sf_fastmath\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(minus:V2SF (mult:V2SF (neg:V2SF\n-\t\t\t\t(match_operand:V2SF 1 \"register_operand\" \"f\"))\n-\t\t\t       (match_operand:V2SF 2 \"register_operand\" \"f\"))\n-\t\t    (match_operand:V2SF 3 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT && !HONOR_SIGNED_ZEROS (V2SFmode)\"\n-  \"nmadd.ps\\t%0,%3,%1,%2\"\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*nmadd<mode>_fastmath\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(minus:ANYF\n+\t (mult:ANYF (neg:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\"))\n+\t\t    (match_operand:ANYF 2 \"register_operand\" \"f\"))\n+\t (match_operand:ANYF 3 \"register_operand\" \"f\")))]\n+  \"ISA_HAS_NMADD_NMSUB && TARGET_FUSED_MADD\n+   && !HONOR_SIGNED_ZEROS (<MODE>mode)\"\n+  \"nmadd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(neg:DF (minus:DF (mult:DF (match_operand:DF 2 \"register_operand\" \"f\")\n-\t\t\t\t   (match_operand:DF 3 \"register_operand\" \"f\"))\n-\t\t\t  (match_operand:DF 1 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\n-   && TARGET_FUSED_MADD && HONOR_SIGNED_ZEROS (DFmode)\"\n-  \"nmsub.d\\t%0,%1,%2,%3\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t  (mult:DF (match_operand:DF 2 \"register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\n-   && TARGET_FUSED_MADD && !HONOR_SIGNED_ZEROS (DFmode)\"\n-  \"nmsub.d\\t%0,%1,%2,%3\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(neg:SF (minus:SF (mult:SF (match_operand:SF 2 \"register_operand\" \"f\")\n-\t\t\t\t   (match_operand:SF 3 \"register_operand\" \"f\"))\n-\t\t\t  (match_operand:SF 1 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\n-   && HONOR_SIGNED_ZEROS (SFmode)\"\n-  \"nmsub.s\\t%0,%1,%2,%3\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(minus:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t  (mult:SF (match_operand:SF 2 \"register_operand\" \"f\")\n-\t\t\t   (match_operand:SF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB && TARGET_HARD_FLOAT && TARGET_FUSED_MADD\n-   && !HONOR_SIGNED_ZEROS (SFmode)\"\n-  \"nmsub.s\\t%0,%1,%2,%3\"\n-  [(set_attr \"type\"\t\"fmadd\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"*nmsubv2sf\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(neg:V2SF (minus:V2SF\n-\t\t   (mult:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t\t      (match_operand:V2SF 2 \"register_operand\" \"f\"))\n-\t\t   (match_operand:V2SF 3 \"register_operand\" \"f\"))))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT && HONOR_SIGNED_ZEROS (V2SFmode)\"\n-  \"nmsub.ps\\t%0,%3,%1,%2\"\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*nmsub<mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(neg:ANYF (minus:ANYF\n+\t\t   (mult:ANYF (match_operand:ANYF 2 \"register_operand\" \"f\")\n+\t\t\t      (match_operand:ANYF 3 \"register_operand\" \"f\"))\n+\t\t   (match_operand:ANYF 1 \"register_operand\" \"f\"))))]\n+  \"ISA_HAS_NMADD_NMSUB && TARGET_FUSED_MADD\n+   && HONOR_SIGNED_ZEROS (<MODE>mode)\"\n+  \"nmsub.<fmt>\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fmadd\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"*nmsubv2sf_fastmath\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(minus:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")\n-\t\t    (mult:V2SF (match_operand:V2SF 2 \"register_operand\" \"f\")\n-\t\t\t       (match_operand:V2SF 3 \"register_operand\" \"f\"))))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT && !HONOR_SIGNED_ZEROS (V2SFmode)\"\n-  \"nmsub.ps\\t%0,%1,%2,%3\"\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*nmsub<mode>_fastmath\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(minus:ANYF\n+\t (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t (mult:ANYF (match_operand:ANYF 2 \"register_operand\" \"f\")\n+\t\t    (match_operand:ANYF 3 \"register_operand\" \"f\"))))]\n+  \"ISA_HAS_NMADD_NMSUB && TARGET_FUSED_MADD\n+   && !HONOR_SIGNED_ZEROS (<MODE>mode)\"\n+  \"nmsub.<fmt>\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fmadd\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n \f\n ;;\n ;;  ....................\n@@ -2171,29 +2004,13 @@\n    (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn \"absdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"abs.d\\t%0,%1\"\n-  [(set_attr \"type\"\t\"fabs\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"abssf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"abs.s\\t%0,%1\"\n-  [(set_attr \"type\"\t\"fabs\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"absv2sf2\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(abs:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"abs.ps\\t%0,%1\"\n+(define_insn \"abs<mode>2\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(abs:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")))]\n+  \"\"\n+  \"abs.<fmt>\\t%0,%1\"\n   [(set_attr \"type\" \"fabs\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n \f\n ;;\n ;;  ....................\n@@ -2278,29 +2095,13 @@ beq\\t%2,%.,1b\\;\\\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n-(define_insn \"negdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(neg:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"neg.d\\t%0,%1\"\n-  [(set_attr \"type\"\t\"fneg\")\n-   (set_attr \"mode\"\t\"DF\")])\n-\n-(define_insn \"negsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"neg.s\\t%0,%1\"\n-  [(set_attr \"type\"\t\"fneg\")\n-   (set_attr \"mode\"\t\"SF\")])\n-\n-(define_insn \"negv2sf2\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(neg:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"neg.ps\\t%0,%1\"\n+(define_insn \"neg<mode>2\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(neg:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")))]\n+  \"\"\n+  \"neg.<fmt>\\t%0,%1\"\n   [(set_attr \"type\" \"fneg\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n \n (define_insn \"one_cmpl<mode>2\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n@@ -3900,81 +3701,23 @@ beq\\t%2,%.,1b\\;\\\n ;; these instructions can only be used to load and store floating\n ;; point registers, that would probably cause trouble in reload.\n \n-(define_insn \"*lwxc1_<mode>\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(mem:SF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n-\t\t\t(match_operand:P 2 \"register_operand\" \"d\"))))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n-  \"lwxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\" \"fpidxload\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"*ldxc1_<mode>\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(mem:DF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n-\t\t\t(match_operand:P 2 \"register_operand\" \"d\"))))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"ldxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\" \"fpidxload\")\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"*ldxc1_v2sf_si\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(mem:V2SF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t\t   (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"ldxc1\\t%0,%1(%2)\"\n+(define_insn \"*<ANYF:loadx>_<P:mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(mem:ANYF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n+\t\t\t  (match_operand:P 2 \"register_operand\" \"d\"))))]\n+  \"ISA_HAS_FP4\"\n+  \"<ANYF:loadx>\\t%0,%1(%2)\"\n   [(set_attr \"type\" \"fpidxload\")\n-   (set_attr \"mode\" \"SF\")\n-   (set_attr \"length\" \"4\")])\n-\n-(define_insn \"*ldxc1_v2sf_di\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n-\t(mem:V2SF (plus:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t\t   (match_operand:DI 2 \"register_operand\" \"d\"))))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"ldxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\" \"fpidxload\")\n-   (set_attr \"mode\" \"SF\")\n-   (set_attr \"length\" \"4\")])\n-\n-(define_insn \"*swxc1_<mode>\"\n-  [(set (mem:SF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n-\t\t\t(match_operand:P 2 \"register_operand\" \"d\")))\n-\t(match_operand:SF 0 \"register_operand\" \"f\"))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n-  \"swxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\" \"fpidxstore\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"*sdxc1_<mode>\"\n-  [(set (mem:DF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n-\t\t\t(match_operand:P 2 \"register_operand\" \"d\")))\n-\t(match_operand:DF 0 \"register_operand\" \"f\"))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"sdxc1\\t%0,%1(%2)\"\n+   (set_attr \"mode\" \"<ANYF:UNITMODE>\")])\n+\n+(define_insn \"*<ANYF:storex>_<P:mode>\"\n+  [(set (mem:ANYF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n+\t\t\t  (match_operand:P 2 \"register_operand\" \"d\")))\n+\t(match_operand:ANYF 0 \"register_operand\" \"f\"))]\n+  \"ISA_HAS_FP4\"\n+  \"<ANYF:storex>\\t%0,%1(%2)\"\n   [(set_attr \"type\" \"fpidxstore\")\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"*sdxc1_v2sf_si\"\n-  [(set (mem:V2SF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t\t   (match_operand:SI 2 \"register_operand\" \"d\")))\n-\t(match_operand:V2SF 0 \"register_operand\" \"f\"))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"sdxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\" \"fpidxstore\")\n-   (set_attr \"mode\" \"SF\")\n-   (set_attr \"length\" \"4\")])\n-\n-(define_insn \"*sdxc1_v2sf_di\"\n-  [(set (mem:V2SF (plus:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t\t   (match_operand:DI 2 \"register_operand\" \"d\")))\n-\t(match_operand:V2SF 0 \"register_operand\" \"f\"))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n-  \"sdxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\" \"fpidxstore\")\n-   (set_attr \"mode\" \"SF\")\n-   (set_attr \"length\" \"4\")])\n+   (set_attr \"mode\" \"<ANYF:UNITMODE>\")])\n \n ;; 16-bit Integer moves\n "}]}