{"sha": "750b270a1dd7a1c617f9dfa48a24b68216abf1c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUwYjI3MGExZGQ3YTFjNjE3ZjlkZmE0OGEyNGI2ODIxNmFiZjFjMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:25:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:25:14Z"}, "message": "varasm.c (mark_constant): Replace this for_each_rtx callback with...\n\ngcc/\n\t* varasm.c (mark_constant): Replace this for_each_rtx callback with...\n\t(mark_constants_in_pattern): ...this new function to iterate over\n\tall the subrtxes.\n\t(mark_constants): Update accordingly.\n\nFrom-SVN: r214666", "tree": {"sha": "ea3a965fd9bc0e3f148f19ea174b28c61402aca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea3a965fd9bc0e3f148f19ea174b28c61402aca4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/750b270a1dd7a1c617f9dfa48a24b68216abf1c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750b270a1dd7a1c617f9dfa48a24b68216abf1c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750b270a1dd7a1c617f9dfa48a24b68216abf1c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750b270a1dd7a1c617f9dfa48a24b68216abf1c2/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11315a95c7e729d82c8016e287d5a21b6fde4dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11315a95c7e729d82c8016e287d5a21b6fde4dc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11315a95c7e729d82c8016e287d5a21b6fde4dc2"}], "stats": {"total": 63, "additions": 35, "deletions": 28}, "files": [{"sha": "50f5ece8421fae2a96c869e3909a725a8b704ea3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750b270a1dd7a1c617f9dfa48a24b68216abf1c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750b270a1dd7a1c617f9dfa48a24b68216abf1c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=750b270a1dd7a1c617f9dfa48a24b68216abf1c2", "patch": "@@ -1,3 +1,10 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* varasm.c (mark_constant): Replace this for_each_rtx callback with...\n+\t(mark_constants_in_pattern): ...this new function to iterate over\n+\tall the subrtxes.\n+\t(mark_constants): Update accordingly.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* varasm.c: Include rtl-iter.h."}, {"sha": "8cc0633252f256130a33372071567a6875dcd5b9", "filename": "gcc/varasm.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750b270a1dd7a1c617f9dfa48a24b68216abf1c2/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750b270a1dd7a1c617f9dfa48a24b68216abf1c2/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=750b270a1dd7a1c617f9dfa48a24b68216abf1c2", "patch": "@@ -3871,38 +3871,38 @@ output_constant_pool_1 (struct constant_descriptor_rtx *desc,\n   return;\n }\n \n-/* Given a SYMBOL_REF CURRENT_RTX, mark it and all constants it refers\n-   to as used.  Emit referenced deferred strings.  This function can\n-   be used with for_each_rtx to mark all SYMBOL_REFs in an rtx.  */\n+/* Mark all constants that are referenced by SYMBOL_REFs in X.\n+   Emit referenced deferred strings.  */\n \n-static int\n-mark_constant (rtx *current_rtx, void *data ATTRIBUTE_UNUSED)\n+static void\n+mark_constants_in_pattern (rtx insn)\n {\n-  rtx x = *current_rtx;\n-\n-  if (x == NULL_RTX || GET_CODE (x) != SYMBOL_REF)\n-    return 0;\n-\n-  if (CONSTANT_POOL_ADDRESS_P (x))\n-    {\n-      struct constant_descriptor_rtx *desc = SYMBOL_REF_CONSTANT (x);\n-      if (desc->mark == 0)\n-\t{\n-\t  desc->mark = 1;\n-\t  for_each_rtx (&desc->constant, mark_constant, NULL);\n-\t}\n-    }\n-  else if (TREE_CONSTANT_POOL_ADDRESS_P (x))\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, PATTERN (insn), ALL)\n     {\n-      tree decl = SYMBOL_REF_DECL (x);\n-      if (!TREE_ASM_WRITTEN (DECL_INITIAL (decl)))\n+      const_rtx x = *iter;\n+      if (GET_CODE (x) == SYMBOL_REF)\n \t{\n-\t  n_deferred_constants--;\n-\t  output_constant_def_contents (x);\n+\t  if (CONSTANT_POOL_ADDRESS_P (x))\n+\t    {\n+\t      struct constant_descriptor_rtx *desc = SYMBOL_REF_CONSTANT (x);\n+\t      if (desc->mark == 0)\n+\t\t{\n+\t\t  desc->mark = 1;\n+\t\t  iter.substitute (desc->constant);\n+\t\t}\n+\t    }\n+\t  else if (TREE_CONSTANT_POOL_ADDRESS_P (x))\n+\t    {\n+\t      tree decl = SYMBOL_REF_DECL (x);\n+\t      if (!TREE_ASM_WRITTEN (DECL_INITIAL (decl)))\n+\t\t{\n+\t\t  n_deferred_constants--;\n+\t\t  output_constant_def_contents (CONST_CAST_RTX (x));\n+\t\t}\n+\t    }\n \t}\n     }\n-\n-  return -1;\n }\n \n /* Look through appropriate parts of INSN, marking all entries in the\n@@ -3926,11 +3926,11 @@ mark_constants (rtx_insn *insn)\n \t{\n \t  rtx subinsn = seq->element (i);\n \t  if (INSN_P (subinsn))\n-\t    for_each_rtx (&PATTERN (subinsn), mark_constant, NULL);\n+\t    mark_constants_in_pattern (subinsn);\n \t}\n     }\n   else\n-    for_each_rtx (&PATTERN (insn), mark_constant, NULL);\n+    mark_constants_in_pattern (insn);\n }\n \n /* Look through the instructions for this function, and mark all the"}]}