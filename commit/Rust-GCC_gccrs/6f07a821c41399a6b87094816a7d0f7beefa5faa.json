{"sha": "6f07a821c41399a6b87094816a7d0f7beefa5faa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYwN2E4MjFjNDEzOTlhNmI4NzA5NDgxNmE3ZDBmN2JlZWZhNWZhYQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-06T21:38:20Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-06T21:38:20Z"}, "message": "invoke.texi (fconserve-space): Remove documentation.\n\ngcc/\n\t* doc/invoke.texi (fconserve-space): Remove documentation.\n\nc-family/\n\t* c.opt (fconserve-space): Turn into a no-op.\n\ncp/\n\t* decl.c: Do not include output.h.\n\t(start_decl): Remove code for flag_conserve_space.\n\ntestsuite/\n\t* g++.old-deja/g++.brendan/array1.C: Remove dg-options.\n\nFrom-SVN: r188282", "tree": {"sha": "1d13736408ebf431a130676aa9cd2ad0f7eeb9d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d13736408ebf431a130676aa9cd2ad0f7eeb9d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f07a821c41399a6b87094816a7d0f7beefa5faa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f07a821c41399a6b87094816a7d0f7beefa5faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f07a821c41399a6b87094816a7d0f7beefa5faa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f07a821c41399a6b87094816a7d0f7beefa5faa/comments", "author": null, "committer": null, "parents": [{"sha": "43fa5db598b9d38420d0d66d14268aae14b0de75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43fa5db598b9d38420d0d66d14268aae14b0de75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43fa5db598b9d38420d0d66d14268aae14b0de75"}], "stats": {"total": 47, "additions": 19, "deletions": 28}, "files": [{"sha": "d789dbec80a8dd1c068ba802c30cb1ea2d8fc402", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f07a821c41399a6b87094816a7d0f7beefa5faa", "patch": "@@ -1,3 +1,7 @@\n+2012-06-06  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* doc/invoke.texi (fconserve-space): Remove documentation.\n+\n 2012-06-06  Edmar Wienskoski  <edmar@freescale.com>\n \n \t* config/rs6000/rs6000-tables.opt: Regenerated."}, {"sha": "d354e6bd366ef174d97f282906f78f524b68f3d4", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6f07a821c41399a6b87094816a7d0f7beefa5faa", "patch": "@@ -1,3 +1,7 @@\n+2012-06-06  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c.opt (fconserve-space): Turn into a no-op.\n+\n 2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* c-common.c: Do not include output.h."}, {"sha": "981b7abc78c183d1dd555cdfe6c263a74bb4fb5f", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=6f07a821c41399a6b87094816a7d0f7beefa5faa", "patch": "@@ -762,7 +762,7 @@ Allow the arguments of the '?' operator to have different types\n \n fconserve-space\n C++ ObjC++ Var(flag_conserve_space)\n-Reduce the size of object files\n+Does nothing.  Preserved for backward compatibility.\n \n fconstant-string-class=\n ObjC ObjC++ Joined MissingArgError(no class name specified with %qs)"}, {"sha": "49e1dfedf250769b24d34e687dbcda9362549e5b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f07a821c41399a6b87094816a7d0f7beefa5faa", "patch": "@@ -1,3 +1,8 @@\n+2012-06-06  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* decl.c: Do not include output.h.\n+\t(start_decl): Remove code for flag_conserve_space.\n+\n 2012-06-06  Fabien Ch\ufffdne  <fabien@gcc.gnu.org>\n \n \tPR c++/52841"}, {"sha": "aa98f8b24d79121e8837c62e4d17413990eaa3be", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6f07a821c41399a6b87094816a7d0f7beefa5faa", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"decl.h\"\n #include \"intl.h\"\n-#include \"output.h\" /* for have_global_bss_p */\n #include \"toplev.h\"\n #include \"hashtab.h\"\n #include \"tm_p.h\"\n@@ -4528,18 +4527,6 @@ start_decl (const cp_declarator *declarator,\n   if (decl == error_mark_node)\n     return error_mark_node;\n \n-  /* Tell the back end to use or not use .common as appropriate.  If we say\n-     -fconserve-space, we want this to save .data space, at the expense of\n-     wrong semantics.  If we say -fno-conserve-space, we want this to\n-     produce errors about redefs; to do this we force variables into the\n-     data segment.  */\n-  if (flag_conserve_space\n-      && TREE_CODE (decl) == VAR_DECL\n-      && TREE_PUBLIC (decl)\n-      && !DECL_THREAD_LOCAL_P (decl)\n-      && !have_global_bss_p ())\n-    DECL_COMMON (decl) = 1;\n-\n   if (TREE_CODE (decl) == VAR_DECL\n       && DECL_NAMESPACE_SCOPE_P (decl) && !TREE_PUBLIC (decl) && !was_public\n       && !DECL_THIS_STATIC (decl) && !DECL_ARTIFICIAL (decl))"}, {"sha": "1e0b9c2831d492c23229f31c5c56a79427c2e85d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6f07a821c41399a6b87094816a7d0f7beefa5faa", "patch": "@@ -182,7 +182,7 @@ in the following sections.\n @item C++ Language Options\n @xref{C++ Dialect Options,,Options Controlling C++ Dialect}.\n @gccoptlist{-fabi-version=@var{n}  -fno-access-control  -fcheck-new @gol\n--fconserve-space  -fconstexpr-depth=@var{n}  -ffriend-injection @gol\n+-fconstexpr-depth=@var{n}  -ffriend-injection @gol\n -fno-elide-constructors @gol\n -fno-enforce-eh-specs @gol\n -ffor-scope  -fno-for-scope  -fno-gnu-keywords @gol\n@@ -1947,18 +1947,6 @@ return value even without this option.  In all other cases, when\n exhaustion is signalled by throwing @code{std::bad_alloc}.  See also\n @samp{new (nothrow)}.\n \n-@item -fconserve-space\n-@opindex fconserve-space\n-Put uninitialized or run-time-initialized global variables into the\n-common segment, as C does.  This saves space in the executable at the\n-cost of not diagnosing duplicate definitions.  If you compile with this\n-flag and your program mysteriously crashes after @code{main()} has\n-completed, you may have an object that is being destroyed twice because\n-two definitions are merged.\n-\n-This option is no longer useful on most targets, now that support has\n-been added for putting variables into BSS without making them common.\n-\n @item -fconstexpr-depth=@var{n}\n @opindex fconstexpr-depth\n Set the maximum nested evaluation depth for C++11 constexpr functions"}, {"sha": "01d759da131dd27f98e7d78e53da6c863720f0b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f07a821c41399a6b87094816a7d0f7beefa5faa", "patch": "@@ -1,3 +1,7 @@\n+2012-06-06  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* g++.old-deja/g++.brendan/array1.C: Remove dg-options.\n+\n 2012-06-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/avx-os-support.h (XCR_XFEATURE_ENABLED_MASK): New."}, {"sha": "d2084f634c4a33bedd4d5ce775c56dc748cb8228", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/array1.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Farray1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f07a821c41399a6b87094816a7d0f7beefa5faa/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Farray1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Farray1.C?ref=6f07a821c41399a6b87094816a7d0f7beefa5faa", "patch": "@@ -1,5 +1,4 @@\n // { dg-do assemble  }\n-// { dg-options \"-fconserve-space -fcommon\" }\n // GROUPS passed array-bindings\n \n extern \"C\" int printf (const char *, ...);"}]}