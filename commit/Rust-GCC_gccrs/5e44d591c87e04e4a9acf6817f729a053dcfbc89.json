{"sha": "5e44d591c87e04e4a9acf6817f729a053dcfbc89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU0NGQ1OTFjODdlMDRlNGE5YWNmNjgxN2Y3MjlhMDUzZGNmYmM4OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-08-20T19:29:54Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-08-20T19:29:54Z"}, "message": "PR libstdc++/33979 (partial)\n\n2008-08-20  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/33979 (partial)\n\t* include/bits/postypes.h (u16streampos, u32streampos): Add.\n\t* include/bits/char_traits.h (char_traits<char16_t>,\n\tchar_traits<char32_t>): Add.\n\t* include/bits/stringfwd.h (u16string, u32string): Add.\n\t* include/ext/vstring_fwd.h: Add typedefs for char16_t/char32_t.\n\t* testsuite/21_strings/char_traits/requirements/char32_t/typedefs.cc:\n\tNew.\n\t* testsuite/21_strings/char_traits/requirements/\n\texplicit_instantiation/short/1.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/\n\texplicit_instantiation/char32_t/1.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/\n\texplicit_instantiation/wchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/\n\texplicit_instantiation/char16_t/1.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/\n\texplicit_instantiation/char/1.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/char16_t/typedefs.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/requirements/\n\texplicit_instantiation/char32_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/requirements/\n\texplicit_instantiation/wchar_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/requirements/\n\texplicit_instantiation/char16_t/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/requirements/\n\texplicit_instantiation/char/1.cc: Likewise.\n\t* testsuite/21_strings/headers/string/types_std_c++0x.cc: Likewise.\n\t* testsuite/ext/vstring/requirements/explicit_instantiation/\n\tchar32_t/1.cc: Likewise.\n\t* testsuite/ext/vstring/requirements/explicit_instantiation/\n\tchar16_t/1.cc: Likewise.\n\nFrom-SVN: r139339", "tree": {"sha": "02053f4973278ee3f017db7ee1f45c1d1dbb09ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02053f4973278ee3f017db7ee1f45c1d1dbb09ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e44d591c87e04e4a9acf6817f729a053dcfbc89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e44d591c87e04e4a9acf6817f729a053dcfbc89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e44d591c87e04e4a9acf6817f729a053dcfbc89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e44d591c87e04e4a9acf6817f729a053dcfbc89/comments", "author": null, "committer": null, "parents": [{"sha": "05cee290af053b48b8d3c26cb7c6a20f02666ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05cee290af053b48b8d3c26cb7c6a20f02666ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05cee290af053b48b8d3c26cb7c6a20f02666ead"}], "stats": {"total": 677, "additions": 674, "deletions": 3}, "files": [{"sha": "f4d076eb4814cbd2c0d1aeb04de5844cc9f34f47", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -1,3 +1,39 @@\n+2008-08-20  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/33979 (partial)\n+\t* include/bits/postypes.h (u16streampos, u32streampos): Add.\n+\t* include/bits/char_traits.h (char_traits<char16_t>,\n+\tchar_traits<char32_t>): Add.\n+\t* include/bits/stringfwd.h (u16string, u32string): Add.\n+\t* include/ext/vstring_fwd.h: Add typedefs for char16_t/char32_t.\n+\t* testsuite/21_strings/char_traits/requirements/char32_t/typedefs.cc:\n+\tNew.\n+\t* testsuite/21_strings/char_traits/requirements/\n+\texplicit_instantiation/short/1.cc: Likewise.\n+\t* testsuite/21_strings/char_traits/requirements/\n+\texplicit_instantiation/char32_t/1.cc: Likewise.\n+\t* testsuite/21_strings/char_traits/requirements/\n+\texplicit_instantiation/wchar_t/1.cc: Likewise.\n+\t* testsuite/21_strings/char_traits/requirements/\n+\texplicit_instantiation/char16_t/1.cc: Likewise.\n+\t* testsuite/21_strings/char_traits/requirements/\n+\texplicit_instantiation/char/1.cc: Likewise.\n+\t* testsuite/21_strings/char_traits/requirements/char16_t/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/requirements/\n+\texplicit_instantiation/char32_t/1.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/requirements/\n+\texplicit_instantiation/wchar_t/1.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/requirements/\n+\texplicit_instantiation/char16_t/1.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/requirements/\n+\texplicit_instantiation/char/1.cc: Likewise.\n+\t* testsuite/21_strings/headers/string/types_std_c++0x.cc: Likewise.\n+\t* testsuite/ext/vstring/requirements/explicit_instantiation/\n+\tchar32_t/1.cc: Likewise.\n+\t* testsuite/ext/vstring/requirements/explicit_instantiation/\n+\tchar16_t/1.cc: Likewise.\n+\n 2008-08-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/37149"}, {"sha": "9dac222623763765cb9aff11ce2ac13f44d51613", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 190, "deletions": 1, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -374,6 +374,195 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n+#if (defined(__GXX_EXPERIMENTAL_CXX0X__) \\\n+     && defined(_GLIBCXX_USE_C99_STDINT_TR1))\n+\n+#include <cstdint>\n+\n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n+  template<>\n+    struct char_traits<char16_t>\n+    {\n+      typedef char16_t          char_type;\n+      typedef uint_least16_t    int_type;\n+      typedef streamoff         off_type;\n+      typedef u16streampos      pos_type;\n+      typedef mbstate_t         state_type;\n+\n+      static void\n+      assign(char_type& __c1, const char_type& __c2)\n+      { __c1 = __c2; }\n+\n+      static bool\n+      eq(const char_type& __c1, const char_type& __c2)\n+      { return __c1 == __c2; }\n+\n+      static bool\n+      lt(const char_type& __c1, const char_type& __c2)\n+      { return __c1 < __c2; }\n+\n+      static int\n+      compare(const char_type* __s1, const char_type* __s2, size_t __n)\n+      {\n+\tfor (size_t __i = 0; __i < __n; ++__i)\n+\t  if (lt(__s1[__i], __s2[__i]))\n+\t    return -1;\n+\t  else if (lt(__s2[__i], __s1[__i]))\n+\t    return 1;\n+\treturn 0;\n+      }\n+\n+      static size_t\n+      length(const char_type* __s)\n+      {\n+\tsize_t __i = 0;\n+\twhile (!eq(__s[__i], char_type()))\n+\t  ++__i;\n+\treturn __i;\n+      }\n+\n+      static const char_type*\n+      find(const char_type* __s, size_t __n, const char_type& __a)\n+      {\n+\tfor (size_t __i = 0; __i < __n; ++__i)\n+\t  if (eq(__s[__i], __a))\n+\t    return __s + __i;\n+\treturn 0;\n+      }\n+\n+      static char_type*\n+      move(char_type* __s1, const char_type* __s2, size_t __n)\n+      {\n+\treturn (static_cast<char_type*>\n+\t\t(__builtin_memmove(__s1, __s2, __n * sizeof(char_type))));\n+      }\n+\n+      static char_type*\n+      copy(char_type* __s1, const char_type* __s2, size_t __n)\n+      {\n+\treturn (static_cast<char_type*>\n+\t\t(__builtin_memcpy(__s1, __s2, __n * sizeof(char_type))));\n+      }\n+\n+      static char_type*\n+      assign(char_type* __s, size_t __n, char_type __a)\n+      { \n+\tstd::fill_n(__s, __n, __a);\n+\treturn __s;\n+      }\n+\n+      static char_type\n+      to_char_type(const int_type& __c) { return char_type(__c); }\n+\n+      static int_type\n+      to_int_type(const char_type& __c) { return int_type(__c); }\n+\n+      static bool\n+      eq_int_type(const int_type& __c1, const int_type& __c2)\n+      { return __c1 == __c2; }\n+\n+      static int_type\n+      eof() { return static_cast<int_type>(-1); }\n+\n+      static int_type\n+      not_eof(const int_type& __c)\n+      { return eq_int_type(__c, eof()) ? 0 : __c; }\n+    };\n+\n+  template<>\n+    struct char_traits<char32_t>\n+    {\n+      typedef char32_t          char_type;\n+      typedef uint_least32_t    int_type;\n+      typedef streamoff         off_type;\n+      typedef u32streampos      pos_type;\n+      typedef mbstate_t         state_type;\n+\n+      static void\n+      assign(char_type& __c1, const char_type& __c2)\n+      { __c1 = __c2; }\n+\n+      static bool\n+      eq(const char_type& __c1, const char_type& __c2)\n+      { return __c1 == __c2; }\n+\n+      static bool\n+      lt(const char_type& __c1, const char_type& __c2)\n+      { return __c1 < __c2; }\n+\n+      static int\n+      compare(const char_type* __s1, const char_type* __s2, size_t __n)\n+      {\n+\tfor (size_t __i = 0; __i < __n; ++__i)\n+\t  if (lt(__s1[__i], __s2[__i]))\n+\t    return -1;\n+\t  else if (lt(__s2[__i], __s1[__i]))\n+\t    return 1;\n+\treturn 0;\n+      }\n+\n+      static size_t\n+      length(const char_type* __s)\n+      {\n+\tsize_t __i = 0;\n+\twhile (!eq(__s[__i], char_type()))\n+\t  ++__i;\n+\treturn __i;\n+      }\n+\n+      static const char_type*\n+      find(const char_type* __s, size_t __n, const char_type& __a)\n+      {\n+\tfor (size_t __i = 0; __i < __n; ++__i)\n+\t  if (eq(__s[__i], __a))\n+\t    return __s + __i;\n+\treturn 0;\n+      }\n+\n+      static char_type*\n+      move(char_type* __s1, const char_type* __s2, size_t __n)\n+      {\n+\treturn (static_cast<char_type*>\n+\t\t(__builtin_memmove(__s1, __s2, __n * sizeof(char_type))));\n+      }\n+\n+      static char_type*\n+      copy(char_type* __s1, const char_type* __s2, size_t __n)\n+      { \n+\treturn (static_cast<char_type*>\n+\t\t(__builtin_memcpy(__s1, __s2, __n * sizeof(char_type))));\n+      }\n+\n+      static char_type*\n+      assign(char_type* __s, size_t __n, char_type __a)\n+      {\n+\tstd::fill_n(__s, __n, __a);\n+\treturn __s;\n+      }\n+\n+      static char_type\n+      to_char_type(const int_type& __c) { return char_type(__c); }\n+\n+      static int_type\n+      to_int_type(const char_type& __c) { return int_type(__c); }\n+\n+      static bool\n+      eq_int_type(const int_type& __c1, const int_type& __c2)\n+      { return __c1 == __c2; }\n+\n+      static int_type\n+      eof() { return static_cast<int_type>(-1); }\n+\n+      static int_type\n+      not_eof(const int_type& __c)\n+      { return eq_int_type(__c, eof()) ? 0 : __c; }\n+    };\n+\n+_GLIBCXX_END_NAMESPACE\n+\n+#endif \n+\n #undef _CHAR_TRAITS_EOF\n \n-#endif\n+#endif // _CHAR_TRAITS_H"}, {"sha": "6d57a24701e0c9dc83e11a20afb01f49c8d9b82c", "filename": "libstdc++-v3/include/bits/postypes.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -222,6 +222,13 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   /// File position for wchar_t streams.\n   typedef fpos<mbstate_t> wstreampos;\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  /// File position for char16_t streams.\n+  typedef fpos<mbstate_t> u16streampos;\n+  /// File position for char32_t streams.\n+  typedef fpos<mbstate_t> u32streampos;\n+#endif\n+\n _GLIBCXX_END_NAMESPACE\n \n #endif"}, {"sha": "10ecfd70236b474812816e3df9654750a62e1273", "filename": "libstdc++-v3/include/bits/stringfwd.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -1,6 +1,7 @@\n // String support -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -65,6 +66,17 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   typedef basic_string<wchar_t> wstring;\n #endif\n \n+#if (defined(__GXX_EXPERIMENTAL_CXX0X__) \\\n+     && defined(_GLIBCXX_USE_C99_STDINT_TR1))\n+\n+  template<> struct char_traits<char16_t>;\n+  template<> struct char_traits<char32_t>;\n+\n+  typedef basic_string<char16_t> u16string;\n+  typedef basic_string<char32_t> u32string;\n+\n+#endif\n+\n _GLIBCXX_END_NAMESPACE\n \n #endif\t// _STRINGFWD_H"}, {"sha": "1dd0b65fe8fd27d7eea373a02ef4961cebf7cd5b", "filename": "libstdc++-v3/include/ext/vstring_fwd.h", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_fwd.h?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -1,6 +1,6 @@\n // Versatile string forward -*- C++ -*-\n \n-// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -70,6 +70,23 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \t\t std::allocator<wchar_t>, __rc_string_base> __wrc_string;\n #endif  \n \n+#if (defined(__GXX_EXPERIMENTAL_CXX0X__) \\\n+     && defined(_GLIBCXX_USE_C99_STDINT_TR1))\n+\n+  typedef __versa_string<char16_t>                          __u16vstring;\n+  typedef __u16vstring                                      __u16sso_string;\n+  typedef \n+  __versa_string<char16_t, std::char_traits<char16_t>,\n+\t\t std::allocator<char16_t>, __rc_string_base> __u16rc_string;\n+\n+  typedef __versa_string<char32_t>                          __u32vstring;\n+  typedef __u32vstring                                      __u32sso_string;\n+  typedef \n+  __versa_string<char32_t, std::char_traits<char32_t>,\n+\t\t std::allocator<char32_t>, __rc_string_base> __u32rc_string;\n+\n+#endif\n+\n _GLIBCXX_END_NAMESPACE\n \n #endif /* _VSTRING_FWD_H */"}, {"sha": "95b6846c2250bae9ff7355d2db0bf14fdfbbdc04", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/explicit_instantiation/char/1.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::basic_string<char>;"}, {"sha": "27401fe43527c57560ec77d2198ef004cf48b545", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/explicit_instantiation/char16_t/1.cc", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::basic_string<char16_t>;"}, {"sha": "cdc6a8246c75d920a2ce2238ba06ee2bb910185f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/explicit_instantiation/char32_t/1.cc", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::basic_string<char32_t>;"}, {"sha": "fcf0dad31c7b632b738ea2a2e5d5da72ec352fda", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/explicit_instantiation/wchar_t/1.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexplicit_instantiation%2Fwchar_t%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::basic_string<wchar_t>;"}, {"sha": "dd7de958bfbcdd495aabcde61cc6df8ccfd7db32", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/char16_t/typedefs.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar16_t%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar16_t%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar16_t%2Ftypedefs.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,41 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+#include <cstdint>\n+\n+int main()\n+{\n+  // Check for required typedefs.\n+  typedef std::char_traits<char16_t> test_type;\n+  typedef test_type::char_type char_type;\n+  typedef test_type::int_type int_type;\n+  typedef test_type::off_type off_type;\n+  typedef test_type::pos_type pos_type;\n+  typedef test_type::state_type state_type;\n+\n+  // char_traits<char16_t>::int_type == uint_least16_t\n+  test_type::int_type* p = 0;\n+  std::uint_least16_t* q __attribute__((unused)) = p;                   \n+\n+  return 0;\n+}"}, {"sha": "819a78cc2bf29e0464481771a73c3f9c2bd02b88", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/char32_t/typedefs.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar32_t%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar32_t%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar32_t%2Ftypedefs.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,41 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+#include <cstdint>\n+\n+int main()\n+{\n+  // Check for required typedefs.\n+  typedef std::char_traits<char32_t> test_type;\n+  typedef test_type::char_type char_type;\n+  typedef test_type::int_type int_type;\n+  typedef test_type::off_type off_type;\n+  typedef test_type::pos_type pos_type;\n+  typedef test_type::state_type state_type;\n+\n+  // char_traits<char16_t>::int_type == uint_least32_t\n+  test_type::int_type* p = 0;\n+  std::uint_least32_t* q __attribute__((unused)) = p;                   \n+\n+  return 0;\n+}"}, {"sha": "6bb5a7e6f56f0356ae917128f49af404dd2a7f4a", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/explicit_instantiation/char/1.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::char_traits<char>;"}, {"sha": "9626e10d34ba0cb12691403e34f2ee8f60e04030", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/explicit_instantiation/char16_t/1.cc", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::char_traits<char16_t>;"}, {"sha": "be94c6c52a790c73b3083f83236814bd337861fa", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/explicit_instantiation/char32_t/1.cc", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::char_traits<char32_t>;"}, {"sha": "d31c3250b0b1c425163f34095b15880e788efb88", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/explicit_instantiation/short/1.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fshort%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fshort%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fshort%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::char_traits<short>;"}, {"sha": "dbe5362ac4e549ba3db4bb4e2e7e1ea917b1043b", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/explicit_instantiation/wchar_t/1.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fexplicit_instantiation%2Fwchar_t%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA.\n+\n+#include <string>\n+\n+template class std::char_traits<wchar_t>;"}, {"sha": "b26463d94848aabcd76ba5bd83dae4610f7edc9c", "filename": "libstdc++-v3/testsuite/21_strings/headers/string/types_std_c++0x.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fheaders%2Fstring%2Ftypes_std_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fheaders%2Fstring%2Ftypes_std_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fheaders%2Fstring%2Ftypes_std_c%2B%2B0x.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,29 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <string>\n+\n+namespace gnu\n+{\n+  typedef std::u16string t3;\n+  typedef std::u32string t4;\n+}"}, {"sha": "7f62f3e03941ae63068d892966c51e23710bdd3e", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/explicit_instantiation/char16_t/1.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexplicit_instantiation%2Fchar16_t%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of __versa_string\n+\n+#include <ext/vstring.h>\n+\n+template class __gnu_cxx::__versa_string<char16_t, std::char_traits<char16_t>,\n+\t\t\t\t\t std::allocator<char16_t>,\n+\t\t\t\t\t __gnu_cxx::__sso_string_base>;\n+\n+template class __gnu_cxx::__versa_string<char16_t, std::char_traits<char16_t>,\n+\t\t\t\t\t std::allocator<char16_t>,\n+\t\t\t\t\t __gnu_cxx::__rc_string_base>;"}, {"sha": "6fd0b78ac7179754f52a8f888b08cea68eb4d12b", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/explicit_instantiation/char32_t/1.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e44d591c87e04e4a9acf6817f729a053dcfbc89/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexplicit_instantiation%2Fchar32_t%2F1.cc?ref=5e44d591c87e04e4a9acf6817f729a053dcfbc89", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file tests explicit instantiation of __versa_string\n+\n+#include <ext/vstring.h>\n+\n+template class __gnu_cxx::__versa_string<char32_t, std::char_traits<char32_t>,\n+\t\t\t\t\t std::allocator<char32_t>,\n+\t\t\t\t\t __gnu_cxx::__sso_string_base>;\n+\n+template class __gnu_cxx::__versa_string<char32_t, std::char_traits<char32_t>,\n+\t\t\t\t\t std::allocator<char32_t>,\n+\t\t\t\t\t __gnu_cxx::__rc_string_base>;"}]}