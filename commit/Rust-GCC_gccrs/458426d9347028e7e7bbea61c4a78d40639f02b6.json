{"sha": "458426d9347028e7e7bbea61c4a78d40639f02b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4NDI2ZDkzNDcwMjhlN2U3YmJlYTYxYzRhNzhkNDA2MzlmMDJiNg==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@aim.com", "date": "2008-06-18T22:11:05Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2008-06-18T22:11:05Z"}, "message": "forwprop-6.c: Use long or int to match size of float.\n\n* gcc.dg/tree-ssa/forwprop-6.c: Use long or int to match size of float. Otherwise error.\n* gcc.dg/tree-ssa/ssa-fre-7.c: Ditto.\n* gcc.dg/tree-ssa/ssa-fre-8.c: Ditto.\n\nFrom-SVN: r136923", "tree": {"sha": "3eaa6bf69928606e4e083201e32079a0372d1b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eaa6bf69928606e4e083201e32079a0372d1b55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458426d9347028e7e7bbea61c4a78d40639f02b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458426d9347028e7e7bbea61c4a78d40639f02b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458426d9347028e7e7bbea61c4a78d40639f02b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458426d9347028e7e7bbea61c4a78d40639f02b6/comments", "author": null, "committer": null, "parents": [{"sha": "5d597439cbe0d01c7806300b1898ba59ec30f703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d597439cbe0d01c7806300b1898ba59ec30f703", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d597439cbe0d01c7806300b1898ba59ec30f703"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "8b38601d9def3e5befa0fe04cec0718f15c3beb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458426d9347028e7e7bbea61c4a78d40639f02b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458426d9347028e7e7bbea61c4a78d40639f02b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=458426d9347028e7e7bbea61c4a78d40639f02b6", "patch": "@@ -1,3 +1,10 @@\n+2008-06-18  Andy Hutchinson  <hutchinsonandy@aim.com>\n+\n+\t* gcc.dg/tree-ssa/forwprop-6.c: Use long or int to match size of\n+\tfloat. Otherwise error.\n+\t* gcc.dg/tree-ssa/ssa-fre-7.c: Ditto.\n+\t* gcc.dg/tree-ssa/ssa-fre-8.c: Ditto.\n+\n 2008-06-18  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \t* gcc.c-torture/execute/20020619-1.c: Correct for targets"}, {"sha": "987f8a3909a187b82b4ec1e3e1a18e97abbfec10", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-6.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458426d9347028e7e7bbea61c4a78d40639f02b6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458426d9347028e7e7bbea61c4a78d40639f02b6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-6.c?ref=458426d9347028e7e7bbea61c4a78d40639f02b6", "patch": "@@ -1,13 +1,19 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-forwprop1 -W -Wall\" } */\n+#if (__SIZEOF_INT__ == __SIZEOF_FLOAT__)\n+typedef int intflt;\n+#elif (__SIZEOF_LONG__ == __SIZEOF_FLOAT__)\n+typedef long intflt;\n+#else\n+#error Add target support here for type that will union float size\n+#endif\n \n-\n-int b;\n+intflt b;\n void f(void)\n {\n   float a;\n   a = 1;\n-  b = *(int*)&a; /* { dg-warning \"aliasing\" } */\n+  b = *(intflt*)&a; /* { dg-warning \"aliasing\" } */\n }\n \n /* We should be able to convert the cast to a VCE in forwprop1,"}, {"sha": "bd81831eba82147c593abcea692d19609e00f29c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-7.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458426d9347028e7e7bbea61c4a78d40639f02b6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458426d9347028e7e7bbea61c4a78d40639f02b6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c?ref=458426d9347028e7e7bbea61c4a78d40639f02b6", "patch": "@@ -1,16 +1,23 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fdump-tree-fre-details -fdump-tree-optimized\" } */\n+#if (__SIZEOF_INT__ == __SIZEOF_FLOAT__)\n+typedef int intflt;\n+#elif (__SIZEOF_LONG__ == __SIZEOF_FLOAT__)\n+typedef long intflt;\n+#else\n+#error Add target support here for type that will union float size\n+#endif\n \n struct X {\n   int i;\n   union {\n-    int j;\n-    int k;\n+    intflt j;\n+    intflt k;\n     float f;\n   } u;\n };\n \n-int foo(int j)\n+intflt foo(intflt j)\n {\n   struct X a;\n "}, {"sha": "6e17bd531b36a5f21d78c6216082dd1544212828", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-8.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458426d9347028e7e7bbea61c4a78d40639f02b6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458426d9347028e7e7bbea61c4a78d40639f02b6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c?ref=458426d9347028e7e7bbea61c4a78d40639f02b6", "patch": "@@ -1,11 +1,17 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fdump-tree-fre-details\" } */\n-\n+#if (__SIZEOF_INT__ == __SIZEOF_FLOAT__)\n+typedef int intflt;\n+#elif (__SIZEOF_LONG__ == __SIZEOF_FLOAT__)\n+typedef long intflt;\n+#else\n+#error Add target support here for type that will union float size\n+#endif\n union U {\n-  int i;\n+  intflt i;\n   float f;\n };\n-int foo(int i, int b)\n+intflt foo(int i, int b)\n {\n   union U u;\n   if (b)"}]}