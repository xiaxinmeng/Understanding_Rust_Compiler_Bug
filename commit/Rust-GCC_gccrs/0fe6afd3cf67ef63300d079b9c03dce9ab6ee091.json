{"sha": "0fe6afd3cf67ef63300d079b9c03dce9ab6ee091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZlNmFmZDNjZjY3ZWY2MzMwMGQwNzliOWMwM2RjZTlhYjZlZTA5MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-01-03T15:40:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-01-03T15:40:15Z"}, "message": "s-osinte-darwin.ads, [...]: Clean up darwin port by using proper type definitions from header files.\n\n\t* s-osinte-darwin.ads, s-osinte-darwin.adb: Clean up\n\tdarwin port by using proper type definitions from header files.\n\tUse SIGTERM instead of SIGABRT for SIGADAABORT.\n\nFrom-SVN: r92845", "tree": {"sha": "9c716029427f5331d9c10f42c75c3586b3eb565e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c716029427f5331d9c10f42c75c3586b3eb565e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fe6afd3cf67ef63300d079b9c03dce9ab6ee091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe6afd3cf67ef63300d079b9c03dce9ab6ee091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fe6afd3cf67ef63300d079b9c03dce9ab6ee091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe6afd3cf67ef63300d079b9c03dce9ab6ee091/comments", "author": null, "committer": null, "parents": [{"sha": "8d75f39cb25d5068ad009729a174b0f93fb8e3ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d75f39cb25d5068ad009729a174b0f93fb8e3ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d75f39cb25d5068ad009729a174b0f93fb8e3ba"}], "stats": {"total": 117, "additions": 32, "deletions": 85}, "files": [{"sha": "440f0f1ffa7873893caa6415bb53898a394eb6cc", "filename": "gcc/ada/s-osinte-darwin.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe6afd3cf67ef63300d079b9c03dce9ab6ee091/gcc%2Fada%2Fs-osinte-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe6afd3cf67ef63300d079b9c03dce9ab6ee091/gcc%2Fada%2Fs-osinte-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.adb?ref=0fe6afd3cf67ef63300d079b9c03dce9ab6ee091", "patch": "@@ -78,19 +78,19 @@ package body System.OS_Interface is\n       end if;\n \n       return timespec'(tv_sec => S,\n-        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n+        tv_nsec => int32_t (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n    ----------------\n    -- To_Timeval --\n    ----------------\n \n    function To_Timeval (D : Duration) return struct_timeval is\n-      S : long;\n+      S : int32_t;\n       F : Duration;\n \n    begin\n-      S := long (Long_Long_Integer (D));\n+      S := int32_t (D);\n       F := D - Duration (S);\n \n       --  If F has negative value due to a round-up, adjust for positive F\n@@ -101,8 +101,9 @@ package body System.OS_Interface is\n          F := F + 1.0;\n       end if;\n \n-      return struct_timeval'(tv_sec => S,\n-        tv_usec => long (Long_Long_Integer (F * 10#1#E6)));\n+      return struct_timeval'\n+               (Tv_Sec  => S,\n+                tv_usec => int32_t (Long_Long_Integer (F * 10#1#E6)));\n    end To_Timeval;\n \n    -------------------"}, {"sha": "c25c1aea7a55b8aa681abdf0469d9344dda00a0c", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 26, "deletions": 80, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe6afd3cf67ef63300d079b9c03dce9ab6ee091/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe6afd3cf67ef63300d079b9c03dce9ab6ee091/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=0fe6afd3cf67ef63300d079b9c03dce9ab6ee091", "patch": "@@ -109,7 +109,7 @@ package System.OS_Interface is\n    SIGUSR1    : constant := 30; --  user defined signal 1\n    SIGUSR2    : constant := 31; --  user defined signal 2\n \n-   SIGADAABORT : constant := SIGABRT;\n+   SIGADAABORT : constant := SIGTERM;\n    --  Change this if you want to use another signal for task abort.\n    --  SIGTERM might be a good one.\n \n@@ -308,7 +308,7 @@ package System.OS_Interface is\n      (how  : int;\n       set  : sigset_t_ptr;\n       oset : sigset_t_ptr) return int;\n-   pragma Import (C, pthread_sigmask, \"sigprocmask\");\n+   pragma Import (C, pthread_sigmask, \"pthread_sigmask\");\n \n    --------------------------\n    -- POSIX.1c  Section 11 --\n@@ -390,9 +390,13 @@ package System.OS_Interface is\n      (C, pthread_mutexattr_setprioceiling,\n       \"pthread_mutexattr_setprioceiling\");\n \n+   type padding is array (int range <>) of Interfaces.C.char;\n+\n    type struct_sched_param is record\n       sched_priority : int;  --  scheduling priority\n+      opaque         : padding (1 .. 4);\n    end record;\n+   pragma Convention (C, struct_sched_param);\n \n    function pthread_setschedparam\n      (thread : pthread_t;\n@@ -475,35 +479,33 @@ package System.OS_Interface is\n \n private\n \n-   type array_type_1 is array (Integer range 0 .. 3) of unsigned_long;\n-   type sigset_t is record\n-      X_X_sigbits  : array_type_1;\n-   end record;\n-   pragma Convention (C, sigset_t);\n+   type sigset_t is new unsigned;\n+\n+   type int32_t is new int;\n \n-   type pid_t is new long;\n+   type pid_t is new int32_t;\n \n    type time_t is new long;\n \n    type timespec is record\n       tv_sec  : time_t;\n-      tv_nsec : long;\n+      tv_nsec : int32_t;\n    end record;\n    pragma Convention (C, timespec);\n \n    type clockid_t is new int;\n    CLOCK_REALTIME : constant clockid_t := 0;\n \n    type struct_timeval is record\n-      tv_sec  : long;\n-      tv_usec : long;\n+      tv_sec  : int32_t;\n+      tv_usec : int32_t;\n    end record;\n    pragma Convention (C, struct_timeval);\n \n    --\n    --  Darwin specific signal implementation\n    --\n-   type Pad_Type is array (0 .. 7) of int;\n+   type Pad_Type is array (1 .. 7) of unsigned;\n    type siginfo_t is record\n       si_signo  : int;               --  signal number\n       si_errno  : int;               --  errno association\n@@ -544,98 +546,42 @@ private\n \n    type pthread_lock_t is new long;\n \n-   type sched_param_pad is array (0 .. 3) of plain_char;\n-   type sched_param is record\n-      sched_priority : int;\n-      opaque         : sched_param_pad;\n-   end record;\n-   pragma Convention (C, sched_param);\n-   type boolean_t is new int;\n-\n    type pthread_attr_t is record\n-      sig             : long;\n-      lock            : pthread_lock_t;\n-      detached        : int;\n-      inherit         : int;\n-      policy          : int;\n-      param           : sched_param;\n-      stackaddr       : System.Address;\n-      stacksize       : long;\n-      freeStackOnExit : boolean_t;\n+      sig    : long;\n+      opaque : padding (1 .. 36);\n    end record;\n    pragma Convention (C, pthread_attr_t);\n \n    type pthread_mutexattr_t is record\n-      sig         : long;\n-      prioceiling : int;\n-      protocol    : int;\n+      sig    : long;\n+      opaque : padding (1 .. 8);\n    end record;\n    pragma Convention (C, pthread_mutexattr_t);\n \n-   type mach_port_t is new unsigned_long;\n-\n    type pthread_mutex_t is record\n-      sig         : long;\n-      lock        : pthread_lock_t;\n-      prioceiling : int;\n-      priority    : int;\n-      protocol    : int;\n-      owner       : pthread_t;\n-      next        : pthread_mutex_ptr;\n-      prev        : pthread_mutex_ptr;\n-      busy        : pthread_cond_ptr;\n-      field       : int;\n-      sem         : mach_port_t;\n+      sig    : long;\n+      opaque : padding (1 .. 40);\n    end record;\n    pragma Convention (C, pthread_mutex_t);\n \n    type pthread_condattr_t is record\n-      sig         : long;\n-      unsupported : int;\n+      sig    : long;\n+      opaque : padding (1 .. 4);\n    end record;\n    pragma Convention (C, pthread_condattr_t);\n \n    type pthread_cond_t is record\n-      sig         : long;\n-      lock        : pthread_lock_t;\n-      sem         : mach_port_t;\n-      next        : pthread_cond_ptr;\n-      prev        : pthread_cond_ptr;\n-      busy        : pthread_mutex_ptr;\n-      waiters     : short;\n-      sigspending : short;\n+      sig    : long;\n+      opaque : padding (1 .. 24);\n    end record;\n    pragma Convention (C, pthread_cond_t);\n \n    type pthread_once_t is record\n-      sig  : long;\n-      lock : pthread_lock_t;\n+      sig    : long;\n+      opaque : padding (1 .. 4);\n    end record;\n    pragma Convention (C, pthread_once_t);\n \n-   type rwlockattr_rfu_array is array (0 .. 1) of int;\n-\n-   type pthread_rwlockattr_t is record\n-      sig     : long;\n-      pshared : int;\n-      rfu     : rwlockattr_rfu_array;\n-   end record;\n-   pragma Convention (C, pthread_rwlockattr_t);\n-\n-   type rwlock_rfu_array is array (0 .. 2) of int;\n-\n-   type pthread_rwlock_t is record\n-      sig           : long;\n-      lock          : pthread_mutex_t;\n-      state         : int;\n-      read_signal   : pthread_cond_t;\n-      write_signal  : pthread_cond_t;\n-      block_writers : int;\n-      pshared       : int;\n-      rfu           : rwlock_rfu_array;\n-   end record;\n-   pragma Convention (C, pthread_rwlock_t);\n-\n    type pthread_key_t is new unsigned_long;\n \n end System.OS_Interface;"}]}