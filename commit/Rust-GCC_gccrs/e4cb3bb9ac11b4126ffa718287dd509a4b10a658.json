{"sha": "e4cb3bb9ac11b4126ffa718287dd509a4b10a658", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRjYjNiYjlhYzExYjQxMjZmZmE3MTgyODdkZDUwOWE0YjEwYTY1OA==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-08-31T19:00:53Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-08-31T19:00:53Z"}, "message": "Fortran - extend set of substring expressions handled in length simplification\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/100950\n\t* simplify.c (substring_has_constant_len): Minimize checks for\n\tsubstring expressions being allowed.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/100950\n\t* gfortran.dg/pr100950.f90: Extend coverage.", "tree": {"sha": "377c78a77a0ff99a60516e7237a95aa59ab9c173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/377c78a77a0ff99a60516e7237a95aa59ab9c173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4cb3bb9ac11b4126ffa718287dd509a4b10a658", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4cb3bb9ac11b4126ffa718287dd509a4b10a658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4cb3bb9ac11b4126ffa718287dd509a4b10a658", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4cb3bb9ac11b4126ffa718287dd509a4b10a658/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef7becc9c8a48804d3fd9dac032f7b33e561a612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7becc9c8a48804d3fd9dac032f7b33e561a612", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef7becc9c8a48804d3fd9dac032f7b33e561a612"}], "stats": {"total": 43, "additions": 14, "deletions": 29}, "files": [{"sha": "b46cbfa90ab8daafa2910f81a371a8c605539d93", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 2, "deletions": 29, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cb3bb9ac11b4126ffa718287dd509a4b10a658/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cb3bb9ac11b4126ffa718287dd509a4b10a658/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=e4cb3bb9ac11b4126ffa718287dd509a4b10a658", "patch": "@@ -4533,14 +4533,7 @@ substring_has_constant_len (gfc_expr *e)\n       || !ref->u.ss.start\n       || ref->u.ss.start->expr_type != EXPR_CONSTANT\n       || !ref->u.ss.end\n-      || ref->u.ss.end->expr_type != EXPR_CONSTANT\n-      || !ref->u.ss.length)\n-    return false;\n-\n-  /* For non-deferred strings the given length shall be constant.  */\n-  if (!e->ts.deferred\n-      && (!ref->u.ss.length->length\n-\t  || ref->u.ss.length->length->expr_type != EXPR_CONSTANT))\n+      || ref->u.ss.end->expr_type != EXPR_CONSTANT)\n     return false;\n \n   /* Basic checks on substring starting and ending indices.  */\n@@ -4551,27 +4544,7 @@ substring_has_constant_len (gfc_expr *e)\n   iend = gfc_mpz_get_hwi (ref->u.ss.end->value.integer);\n \n   if (istart <= iend)\n-    {\n-      if (istart < 1)\n-\t{\n-\t  gfc_error (\"Substring start index (%wd) at %L below 1\",\n-\t\t     istart, &ref->u.ss.start->where);\n-\t  return false;\n-\t}\n-\n-      /* For deferred strings use end index as proxy for length.  */\n-      if (e->ts.deferred)\n-\tlength = iend;\n-      else\n-\tlength = gfc_mpz_get_hwi (ref->u.ss.length->length->value.integer);\n-      if (iend > length)\n-\t{\n-\t  gfc_error (\"Substring end index (%wd) at %L exceeds string length\",\n-\t\t     iend, &ref->u.ss.end->where);\n-\t  return false;\n-\t}\n-      length = iend - istart + 1;\n-    }\n+    length = iend - istart + 1;\n   else\n     length = 0;\n "}, {"sha": "a19409c250795d069ac63bb20a5f0bbfc5823cb6", "filename": "gcc/testsuite/gfortran.dg/pr100950.f90", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cb3bb9ac11b4126ffa718287dd509a4b10a658/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr100950.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cb3bb9ac11b4126ffa718287dd509a4b10a658/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr100950.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr100950.f90?ref=e4cb3bb9ac11b4126ffa718287dd509a4b10a658", "patch": "@@ -46,6 +46,18 @@ program p\n     integer, parameter :: l9 = len (r(1)%u(:)(3:4))\n     if (l9 /= 2) stop 13\n   end block\n+\n+  call sub (42, \"abcde\")\n+contains\n+  subroutine sub (m, c)\n+    integer,          intent(in) :: m\n+    character(len=*), intent(in) :: c\n+    character(len=m)    :: p, o(3)\n+    integer, parameter  :: l10 = len (p(6:7))\n+    integer, parameter  :: l11 = len (o(:)(6:7))\n+    integer, parameter  :: l12 = len (c(2:3))\n+    if (l10 /= 2 .or. l11 /= 2 .or. l12 /= 2) stop 14\n+  end subroutine sub\n end\n \n ! { dg-final { scan-tree-dump-times \"_gfortran_stop_numeric\" 2 \"original\" } }"}]}