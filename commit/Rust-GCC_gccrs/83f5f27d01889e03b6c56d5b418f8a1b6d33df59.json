{"sha": "83f5f27d01889e03b6c56d5b418f8a1b6d33df59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNmNWYyN2QwMTg4OWUwM2I2YzU2ZDViNDE4ZjhhMWI2ZDMzZGY1OQ==", "commit": {"author": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-04-26T11:51:23Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-04-26T11:51:23Z"}, "message": "Verify __builtin_unreachable and __builtin_trap are not called with arguments\n\n2016-04-26  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-cfg.c (verify_gimple_call): Check that calls to\n\t__builtin_unreachable or __builtin_trap do not have actual arguments.\n\nFrom-SVN: r235439", "tree": {"sha": "94d6d8dafd1139bcde15dd0c068416493073bb9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94d6d8dafd1139bcde15dd0c068416493073bb9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83f5f27d01889e03b6c56d5b418f8a1b6d33df59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f5f27d01889e03b6c56d5b418f8a1b6d33df59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83f5f27d01889e03b6c56d5b418f8a1b6d33df59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f5f27d01889e03b6c56d5b418f8a1b6d33df59/comments", "author": null, "committer": null, "parents": [{"sha": "5a0802ea0811cf7fbcd34cd96564e7e9338ba5f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a0802ea0811cf7fbcd34cd96564e7e9338ba5f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a0802ea0811cf7fbcd34cd96564e7e9338ba5f5"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e1fdc9e2bce0da7bcde8cab762f46910ea29f227", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f5f27d01889e03b6c56d5b418f8a1b6d33df59/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f5f27d01889e03b6c56d5b418f8a1b6d33df59/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=83f5f27d01889e03b6c56d5b418f8a1b6d33df59", "patch": "@@ -3414,6 +3414,30 @@ verify_gimple_call (gcall *stmt)\n       return true;\n     }\n \n+  if (fndecl && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL)\n+    {\n+      switch (DECL_FUNCTION_CODE (fndecl))\n+\t{\n+\tcase BUILT_IN_UNREACHABLE:\n+\tcase BUILT_IN_TRAP:\n+\t  if (gimple_call_num_args (stmt) > 0)\n+\t    {\n+\t      /* Built-in unreachable with parameters might not be caught by\n+\t\t undefined behavior sanitizer.  Front-ends do check users do not\n+\t\t call them that way but we also produce calls to\n+\t\t __builtin_unreachable internally, for example when IPA figures\n+\t\t out a call cannot happen in a legal program.  In such cases,\n+\t\t we must make sure arguments are stripped off.  */\n+\t      error (\"__builtin_unreachable or __builtin_trap call with \"\n+\t\t     \"arguments\");\n+\t      return true;\n+\t    }\n+\t  break;\n+\tdefault:\n+\t  break;\n+\t}\n+    }\n+\n   /* ???  The C frontend passes unpromoted arguments in case it\n      didn't see a function declaration before the call.  So for now\n      leave the call arguments mostly unverified.  Once we gimplify"}]}