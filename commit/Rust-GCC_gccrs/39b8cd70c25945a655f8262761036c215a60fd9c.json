{"sha": "39b8cd70c25945a655f8262761036c215a60fd9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzliOGNkNzBjMjU5NDVhNjU1ZjgyNjI3NjEwMzZjMjE1YTYwZmQ5Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-03-03T10:29:14Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-03-03T10:29:14Z"}, "message": "PR libstdc++/28080 (partial)\n\n2007-03-03  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/28080 (partial)\n\t* include/bits/stl_algobase.h: Do not include <iosfwd>,\n\t<bits/functexcept.h> is enough; adjust __copy_aux declarations;\n\tremove declaration of copy overload for istreambuf_iterator /\n\tostreambuf_iterator.\n\t* src/debug.cc: Include <cstdio>.\n\t* include/ext/rope: Include <iosfwd>.\n\t* include/bits/char_traits.h: Include <cstdio> and <cwchar>.\n\t* include/bits/stl_algo.h: Remove declaration of find overload\n\tfor istreambuf_iterator.\n\t* include/std/queue: Clean up includes.\n\t* include/std/stack: Likewise.\n\t* include/std/memory: Likewise.\n\t* include/std/algorithm: Likewise.\n\t* include/std/vector: Likewise.\n\t* include/std/deque: Likewise.\n\t* include/std/list: Likewise.\n\t* include/bits/stl_tree.h: Likewise.\n\t* testsuite/ext/type_traits/remove_unsigned_integer_neg.cc: Adjust\n\tdg-error markers.\n\t* testsuite/ext/type_traits/add_unsigned_floating_neg.cc: Likewise.\n\t* testsuite/ext/type_traits/remove_unsigned_floating_neg.cc: Likewise.\n\t* testsuite/ext/type_traits/add_unsigned_integer_neg.cc: Likewise.\n\t* testsuite/23_containers/set/operators/1_neg.cc: Likewise.\n\t* testsuite/23_containers/map/operators/1_neg.cc: Likewise.\n\t* testsuite/20_util/auto_ptr/assign_neg.cc: Likewise.\n\n\t* include/ext/type_traits.h: Fix type of __max_digits10; clean up\n\tincludes.\n\n\t* testsuite/util/testsuite_hooks.h: Do not include <cstddef>.\n\t* testsuite/util/testsuite_hooks.cc: Do it here.\n\nFrom-SVN: r122502", "tree": {"sha": "9c11143e43b585952f5dbea6270fee64275a31e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c11143e43b585952f5dbea6270fee64275a31e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39b8cd70c25945a655f8262761036c215a60fd9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39b8cd70c25945a655f8262761036c215a60fd9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39b8cd70c25945a655f8262761036c215a60fd9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39b8cd70c25945a655f8262761036c215a60fd9c/comments", "author": null, "committer": null, "parents": [{"sha": "7314b3ad2af869108d6d6df69017ef604f938645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7314b3ad2af869108d6d6df69017ef604f938645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7314b3ad2af869108d6d6df69017ef604f938645"}], "stats": {"total": 183, "additions": 101, "deletions": 82}, "files": [{"sha": "55f3ce745dbec01432284b93ed73dec7694fd2a0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,3 +1,38 @@\n+2007-03-03  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/28080 (partial)\n+\t* include/bits/stl_algobase.h: Do not include <iosfwd>,\n+\t<bits/functexcept.h> is enough; adjust __copy_aux declarations;\n+\tremove declaration of copy overload for istreambuf_iterator /\n+\tostreambuf_iterator.\n+\t* src/debug.cc: Include <cstdio>.\n+\t* include/ext/rope: Include <iosfwd>.\n+\t* include/bits/char_traits.h: Include <cstdio> and <cwchar>.\n+\t* include/bits/stl_algo.h: Remove declaration of find overload\n+\tfor istreambuf_iterator.\n+\t* include/std/queue: Clean up includes.\n+\t* include/std/stack: Likewise.\n+\t* include/std/memory: Likewise.\n+\t* include/std/algorithm: Likewise.\n+\t* include/std/vector: Likewise.\n+\t* include/std/deque: Likewise.\n+\t* include/std/list: Likewise.\n+\t* include/bits/stl_tree.h: Likewise.\n+\t* testsuite/ext/type_traits/remove_unsigned_integer_neg.cc: Adjust\n+\tdg-error markers.\n+\t* testsuite/ext/type_traits/add_unsigned_floating_neg.cc: Likewise.\n+\t* testsuite/ext/type_traits/remove_unsigned_floating_neg.cc: Likewise.\n+\t* testsuite/ext/type_traits/add_unsigned_integer_neg.cc: Likewise.\n+\t* testsuite/23_containers/set/operators/1_neg.cc: Likewise.\n+\t* testsuite/23_containers/map/operators/1_neg.cc: Likewise.\n+\t* testsuite/20_util/auto_ptr/assign_neg.cc: Likewise.\n+\n+\t* include/ext/type_traits.h: Fix type of __max_digits10; clean up\n+\tincludes.\n+\n+\t* testsuite/util/testsuite_hooks.h: Do not include <cstddef>.\n+\t* testsuite/util/testsuite_hooks.cc: Do it here.\n+\n 2007-03-02  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/27_io/objects/wchar_t/9661-1.cc: Include <cstdlib>."}, {"sha": "03d744c643ac5c8c66f9d12f6842bfe5878e52d1", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,7 @@\n // Character Traits for use by standard string and iostream -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -42,9 +43,11 @@\n \n #pragma GCC system_header\n \n-#include <cstring>            // For memmove, memset, memchr\n-#include <bits/stl_algobase.h>// For copy, lexicographical_compare, fill_n\n-#include <bits/postypes.h>    // For streampos\n+#include <cstring>              // For memmove, memset, memchr\n+#include <bits/stl_algobase.h>  // For copy, fill_n\n+#include <bits/postypes.h>      // For streampos\n+#include <cstdio>               // For EOF\n+#include <cwchar>               // For WEOF, wmemmove, wmemset, etc.\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n "}, {"sha": "75a89b78ae6bac39292fd1d5f64823461e4dd6d7", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -63,7 +63,7 @@\n #define _ALGO_H 1\n \n #include <bits/stl_heap.h>\n-#include <bits/stl_tempbuf.h>     // for _Temporary_buffer\n+#include <bits/stl_tempbuf.h>  // for _Temporary_buffer\n #include <debug/debug.h>\n \n // See concept_check.h for the __glibcxx_*_requires macros.\n@@ -294,17 +294,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t}\n     }\n \n-  /**\n-   *  @if maint\n-   *  This is an overload of find() for streambuf iterators.\n-   *  @endif\n-  */\n-  template<typename _CharT>\n-    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,\n-\t\t\t\t    istreambuf_iterator<_CharT> >::__type\n-    find(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,\n-\t const _CharT&);\n-\n   /**\n    *  @brief Find the first occurrence of a value in a sequence.\n    *  @param  first  An input iterator."}, {"sha": "a6d155a95a4522167feaf4f09da2a93cb9c9145a", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -67,7 +67,7 @@\n #include <cwchar>\n #include <cstdlib>\n #include <cstddef>\n-#include <iosfwd>\n+#include <bits/functexcept.h>\n #include <bits/stl_pair.h>\n #include <bits/cpp_type_traits.h>\n #include <ext/type_traits.h>\n@@ -317,21 +317,33 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     }\n \n   // Helpers for streambuf iterators (either istream or ostream).\n+  // NB: avoid including <iosfwd>, relatively large.\n+  template<typename _CharT>\n+    struct char_traits;\n+\n+  template<typename _CharT, typename _Traits>\n+    class istreambuf_iterator;\n+\n+  template<typename _CharT, typename _Traits>\n+    class ostreambuf_iterator;\n+\n   template<typename _CharT>\n     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, \n-\t\t\t\t    ostreambuf_iterator<_CharT> >::__type\n-    __copy_aux(_CharT*, _CharT*, ostreambuf_iterator<_CharT>);\n+\t     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type\n+    __copy_aux(_CharT*, _CharT*,\n+\t       ostreambuf_iterator<_CharT, char_traits<_CharT> >);\n \n   template<typename _CharT>\n     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, \n-\t\t\t\t    ostreambuf_iterator<_CharT> >::__type\n-    __copy_aux(const _CharT*, const _CharT*, ostreambuf_iterator<_CharT>);\n+\t     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type\n+    __copy_aux(const _CharT*, const _CharT*,\n+\t       ostreambuf_iterator<_CharT, char_traits<_CharT> >);\n \n   template<typename _CharT>\n     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,\n \t\t\t\t    _CharT*>::__type\n-    __copy_aux(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,\n-\t       _CharT*);\n+    __copy_aux(istreambuf_iterator<_CharT, char_traits<_CharT> >,\n+\t       istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);\n \n   template<bool, bool>\n     struct __copy_normal\n@@ -403,13 +415,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t\t\t\t\t\t\t__result);\n     }\n \n-  // Overload for streambuf iterators.\n-  template<typename _CharT>\n-    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, \n-  \t       \t\t\t    ostreambuf_iterator<_CharT> >::__type\n-    copy(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,\n-\t ostreambuf_iterator<_CharT>);\n-\n   template<bool, typename>\n     struct __copy_backward\n     {"}, {"sha": "0bb653947185557d5ed92e7fd00e60ac8e8f53f9", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,6 @@\n // RB tree implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -66,7 +66,6 @@\n \n #include <bits/stl_algobase.h>\n #include <bits/allocator.h>\n-#include <bits/stl_construct.h>\n #include <bits/stl_function.h>\n #include <bits/cpp_type_traits.h>\n "}, {"sha": "45c5de85dad1bbda91e11d151f933b8a72206446", "filename": "libstdc++-v3/include/ext/rope", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,6 @@\n // SGI's rope class -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -57,6 +57,7 @@\n #include <bits/stl_numeric.h>\n #include <bits/allocator.h>\n #include <ext/hash_fun.h>\n+#include <iosfwd>\n \n # ifdef __GC\n #   define __GC_CONST const"}, {"sha": "a4ea1ce48cf4827e61dc9161748180a55981274e", "filename": "libstdc++-v3/include/ext/type_traits.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftype_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftype_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftype_traits.h?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -37,10 +37,7 @@\n \n #pragma GCC system_header\n \n-#include <cstddef>\n-#include <utility>\n #include <limits>\n-#include <iosfwd> // std::streamsize\n #include <bits/cpp_type_traits.h>\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n@@ -182,12 +179,12 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     struct __numeric_traits_floating\n     {\n       // Only floating point types. See N1822. \n-      static const std::streamsize __max_digits10 =\n+      static const int __max_digits10 =\n \t2 + std::numeric_limits<_Value>::digits * 3010/10000;\n     };\n \n   template<typename _Value>\n-    const std::streamsize __numeric_traits_floating<_Value>::__max_digits10;\n+    const int __numeric_traits_floating<_Value>::__max_digits10;\n \n   template<typename _Value>\n     struct __numeric_traits "}, {"sha": "d579bbd1b8daf55a19e12ca7af7029b50293b20b", "filename": "libstdc++-v3/include/std/algorithm", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,7 @@\n // <algorithm> -*- C++ -*-\n \n-// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -63,8 +64,6 @@\n #pragma GCC system_header\n \n #include <bits/stl_algobase.h>\n-#include <bits/stl_construct.h>\n-#include <bits/stl_uninitialized.h>\n #include <bits/stl_algo.h>\n \n #endif /* _GLIBCXX_ALGORITHM */"}, {"sha": "93ca4caa7761e6ff16731198f938980a27c0a2a3", "filename": "libstdc++-v3/include/std/deque", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,7 @@\n // <deque> -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -62,7 +63,6 @@\n \n #pragma GCC system_header\n \n-#include <bits/functexcept.h>\n #include <bits/stl_algobase.h>\n #include <bits/allocator.h>\n #include <bits/stl_construct.h>"}, {"sha": "10461a18317fcafe1603135af9133c0af65b1b76", "filename": "libstdc++-v3/include/std/list", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -63,10 +63,8 @@\n \n #pragma GCC system_header\n \n-#include <bits/functexcept.h>\n #include <bits/stl_algobase.h>\n #include <bits/allocator.h>\n-#include <bits/stl_construct.h>\n #include <bits/stl_list.h>\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE"}, {"sha": "f604ac9f39ef2ec44597413ae8425c755dd4293d", "filename": "libstdc++-v3/include/std/memory", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,6 @@\n // <memory> -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -54,7 +54,6 @@\n #include <bits/stl_algobase.h>\n #include <bits/allocator.h>\n #include <bits/stl_construct.h>\n-#include <bits/stl_iterator_base_types.h> //for iterator_traits\n #include <bits/stl_uninitialized.h>\n #include <bits/stl_raw_storage_iter.h>\n #include <debug/debug.h>"}, {"sha": "2d919d0dfdccd8d6a66e8d35f4f442698a122b9a", "filename": "libstdc++-v3/include/std/queue", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,7 @@\n // <queue> -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -62,16 +63,10 @@\n \n #pragma GCC system_header\n \n-#include <bits/c++config.h>\n-#include <bits/functexcept.h>\n-#include <bits/stl_algobase.h>\n-#include <bits/allocator.h>\n-#include <bits/stl_construct.h>\n-#include <bits/stl_uninitialized.h>\n-#include <bits/stl_heap.h>\n-#include <bits/stl_function.h>\n #include <deque>\n #include <vector>\n+#include <bits/stl_heap.h>\n+#include <bits/stl_function.h>\n #include <bits/stl_queue.h>\n \n #endif /* _GLIBCXX_QUEUE */"}, {"sha": "b51155e64a33ee35e46dc9f2911481a65a9dd61a", "filename": "libstdc++-v3/include/std/stack", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,7 @@\n // <stack> -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -62,10 +63,6 @@\n \n #pragma GCC system_header\n \n-#include <bits/stl_algobase.h>\n-#include <bits/allocator.h>\n-#include <bits/stl_construct.h>\n-#include <bits/stl_uninitialized.h>\n #include <deque>\n #include <bits/stl_stack.h>\n "}, {"sha": "d7aba96e0bfd0edf08ecbc8aac679661c18186fb", "filename": "libstdc++-v3/include/std/vector", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,7 @@\n // <vector> -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -62,7 +63,6 @@\n \n #pragma GCC system_header\n \n-#include <bits/functexcept.h>\n #include <bits/stl_algobase.h>\n #include <bits/allocator.h>\n #include <bits/stl_construct.h>"}, {"sha": "4129f68666737fabf17aeeec032a210ac55570d6", "filename": "libstdc++-v3/src/debug.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Fsrc%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Fsrc%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fdebug.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,6 @@\n // Debugging mode support code -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -35,6 +35,7 @@\n #include <cassert>\n #include <cstring>\n #include <cctype>\n+#include <cstdio>\n \n using namespace std;\n "}, {"sha": "1c78672b70c4266f34f8c4eca00f8a0380b0bbf7", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/assign_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2Fassign_neg.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2002, 2003, 2004, 2005, 2006 Free Software Foundation\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,5 +46,5 @@ main()\n   test01();\n   return 0;\n }\n-// { dg-error \"candidates\" \"\" { target *-*-* } 224 } \n-// { dg-error \"::auto_ptr\" \"\" { target *-*-* } 354 } \n+// { dg-error \"candidates\" \"\" { target *-*-* } 223 } \n+// { dg-error \"::auto_ptr\" \"\" { target *-*-* } 353 } "}, {"sha": "7d66059b1fd9d84c4bce775ebbd84226e596602d", "filename": "libstdc++-v3/testsuite/23_containers/map/operators/1_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -42,5 +42,5 @@ void test01()\n   test &= itr == mapByName.end(); // { dg-error \"no\" } \n }\n  \n-// { dg-error \"candidates are\" \"\" { target *-*-* } 211 }\n-// { dg-error \"candidates are\" \"\" { target *-*-* } 215 }\n+// { dg-error \"candidates are\" \"\" { target *-*-* } 210 }\n+// { dg-error \"candidates are\" \"\" { target *-*-* } 214 }"}, {"sha": "a999e5b9697f1e6b3d8381ff45ef331d9bcafa41", "filename": "libstdc++-v3/testsuite/23_containers/set/operators/1_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -40,5 +40,5 @@ void test01()\n   test &= itr == setByName.end(); // { dg-error \"no\" } \n }\n \n-// { dg-error \"candidates are\" \"\" { target *-*-* } 286 }\n-// { dg-error \"candidates are\" \"\" { target *-*-* } 290 }\n+// { dg-error \"candidates are\" \"\" { target *-*-* } 285 }\n+// { dg-error \"candidates are\" \"\" { target *-*-* } 289 }"}, {"sha": "27696998f658fa170f6072a7fd2287d375b1d57c", "filename": "libstdc++-v3/testsuite/ext/type_traits/add_unsigned_floating_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_floating_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_floating_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_floating_neg.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,5 +36,5 @@ int main()\n }\n \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 29 } \n-// { dg-error \"no type\" \"\" { target *-*-* } 76 } \n+// { dg-error \"no type\" \"\" { target *-*-* } 73 } \n // { dg-excess-errors \"In instantiation of\" }"}, {"sha": "2b42e41ff93b2ca8789e95ab582d334feac7b2ec", "filename": "libstdc++-v3/testsuite/ext/type_traits/add_unsigned_integer_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_integer_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_integer_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_integer_neg.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,4 +37,4 @@ int main()\n }\n \n // { dg-error \"invalid use of incomplete\" \"\" { target *-*-* } 29 } \n-// { dg-error \"declaration of\" \"\" { target *-*-* } 71 } \n+// { dg-error \"declaration of\" \"\" { target *-*-* } 68 } "}, {"sha": "7e655f88b4ecf4fca8722010db6dbccbc212de1b", "filename": "libstdc++-v3/testsuite/ext/type_traits/remove_unsigned_floating_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_floating_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_floating_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_floating_neg.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,5 +36,5 @@ int main()\n }\n \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 29 }\n-// { dg-error \"no type\" \"\" { target *-*-* } 119 }\n+// { dg-error \"no type\" \"\" { target *-*-* } 116 }\n // { dg-excess-errors \"In instantiation of\" }"}, {"sha": "50a0b14fab535eb18cbc996c6eadbdaadac5f8c7", "filename": "libstdc++-v3/testsuite/ext/type_traits/remove_unsigned_integer_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_integer_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_integer_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_integer_neg.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile }\n // -*- C++ -*-\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,4 +37,4 @@ int main()\n }\n \n // { dg-error \"invalid use of incomplete\" \"\" { target *-*-* } 29 } \n-// { dg-error \"declaration of\" \"\" { target *-*-* } 114 } \n+// { dg-error \"declaration of\" \"\" { target *-*-* } 111 } "}, {"sha": "50347f82dd8ee28fefda945a958a5722a9223a64", "filename": "libstdc++-v3/testsuite/util/testsuite_hooks.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -37,9 +37,11 @@\n #include <sys/time.h>\n #include <sys/resource.h>\n #endif\n+\n #include <list>\n #include <string>\n #include <stdexcept>\n+#include <cstddef>\n #include <clocale>\n #include <locale>\n #include <cxxabi.h>"}, {"sha": "8e22ec0c2b14c6b9fc579b127c01aa75a70b2b53", "filename": "libstdc++-v3/testsuite/util/testsuite_hooks.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39b8cd70c25945a655f8262761036c215a60fd9c/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.h?ref=39b8cd70c25945a655f8262761036c215a60fd9c", "patch": "@@ -58,7 +58,6 @@\n \n #include <bits/c++config.h>\n #include <bits/functexcept.h>\n-#include <cstddef>\n #include <ctime>\n \n #ifdef _GLIBCXX_HAVE_SYS_STAT_H"}]}