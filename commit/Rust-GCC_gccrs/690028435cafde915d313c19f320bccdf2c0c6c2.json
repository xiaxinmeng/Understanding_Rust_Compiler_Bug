{"sha": "690028435cafde915d313c19f320bccdf2c0c6c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkwMDI4NDM1Y2FmZGU5MTVkMzEzYzE5ZjMyMGJjY2RmMmMwYzZjMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-06-02T11:08:00Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-06-02T11:08:00Z"}, "message": "i386.md (*cmpfp_<mode>): Enable for optimize_size.\n\n\t* config/i386/i386.md (*cmpfp_<mode>): Enable for optimize_size.\n\t(*cmpfp_<mode>_cc): Ditto.\n\t(*fp_jcc_8<mode>_387): Ditto.\n\t(*fop_<MODEF:mode>_2_i387): Ditto.\n\t(*fop_<MODEF:mode>_3_i387): Ditto.\n\t(*fop_xf_2_i387): Ditto.\n\t(*fop_xf_3_i387): Ditto.\n\nFrom-SVN: r136276", "tree": {"sha": "f774e780ea1880e5a04003d17187f0c2b1678ac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f774e780ea1880e5a04003d17187f0c2b1678ac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/690028435cafde915d313c19f320bccdf2c0c6c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690028435cafde915d313c19f320bccdf2c0c6c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/690028435cafde915d313c19f320bccdf2c0c6c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690028435cafde915d313c19f320bccdf2c0c6c2/comments", "author": null, "committer": null, "parents": [{"sha": "5f9e56b3f27c9b2e9437b1b819b61b2c04669eaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9e56b3f27c9b2e9437b1b819b61b2c04669eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f9e56b3f27c9b2e9437b1b819b61b2c04669eaa"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "0cc0223e2d813cda71f9b7ef9cb7083c7b1db0ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690028435cafde915d313c19f320bccdf2c0c6c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690028435cafde915d313c19f320bccdf2c0c6c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=690028435cafde915d313c19f320bccdf2c0c6c2", "patch": "@@ -1,6 +1,16 @@\n+2008-05-31  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*cmpfp_<mode>): Enable for optimize_size.\n+\t(*cmpfp_<mode>_cc): Ditto.\n+\t(*fp_jcc_8<mode>_387): Ditto.\n+\t(*fop_<MODEF:mode>_2_i387): Ditto.\n+\t(*fop_<MODEF:mode>_3_i387): Ditto.\n+\t(*fop_xf_2_i387): Ditto.\n+\t(*fop_xf_3_i387): Ditto.\n+\n 2008-06-02  Tomas Bily  <tbily@suse.cz>\n \n-        * tree-ssa-ifcombine.c (get_name_for_bit_test): Use CONVERT_EXPR_P.\n+\t* tree-ssa-ifcombine.c (get_name_for_bit_test): Use CONVERT_EXPR_P.\n \n 2008-06-01  Richard Sandiford  <rdsandiford@googlemail.com>\n \n@@ -116,14 +126,14 @@\n \tRevert\n \t2007-11-29  Zdenek Dvorak  <ook@ucw.cz>\n \n-        PR tree-optimization/34244\n-        * tree-vrp.c (adjust_range_with_scev): Clear scev cache.\n-        (record_numbers_of_iterations): New function.\n-        (execute_vrp): Cache the numbers of iterations of loops.\n-        * tree-scalar-evolution.c (scev_reset_except_niters):\n-        New function.\n-        (scev_reset): Use scev_reset_except_niters.\n-        * tree-scalar-evolution.h (scev_reset_except_niters): Declare.\n+\tPR tree-optimization/34244\n+\t* tree-vrp.c (adjust_range_with_scev): Clear scev cache.\n+\t(record_numbers_of_iterations): New function.\n+\t(execute_vrp): Cache the numbers of iterations of loops.\n+\t* tree-scalar-evolution.c (scev_reset_except_niters):\n+\tNew function.\n+\t(scev_reset): Use scev_reset_except_niters.\n+\t* tree-scalar-evolution.h (scev_reset_except_niters): Declare.\n \n 2008-05-31  Bernd Schmidt  <bernd.schmidt@analog.com>\n "}, {"sha": "2eec13e91a4a83b8a19b9129ee39657a946f2f10", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690028435cafde915d313c19f320bccdf2c0c6c2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690028435cafde915d313c19f320bccdf2c0c6c2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=690028435cafde915d313c19f320bccdf2c0c6c2", "patch": "@@ -1169,7 +1169,7 @@\n \t       [(match_operand:X87MODEI12 2 \"memory_operand\" \"m\")]))]\n \t  UNSPEC_FNSTSW))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && TARGET_USE_<MODE>MODE_FIOP\n+   && (TARGET_USE_<MODE>MODE_FIOP || optimize_size)\n    && (GET_MODE (operands [3]) == GET_MODE (operands[1]))\"\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"multi\")\n@@ -1186,7 +1186,7 @@\n    (clobber (match_operand:HI 0 \"register_operand\" \"=a\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n    && TARGET_SAHF && !TARGET_CMOVE\n-   && TARGET_USE_<MODE>MODE_FIOP\n+   && (TARGET_USE_<MODE>MODE_FIOP || optimize_size)\n    && (GET_MODE (operands [3]) == GET_MODE (operands[1]))\"\n   \"#\"\n   \"&& reload_completed\"\n@@ -14288,7 +14288,7 @@\n    (clobber (reg:CCFP FLAGS_REG))\n    (clobber (match_scratch:HI 5 \"=a,a\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[3]))\n-   && TARGET_USE_<MODE>MODE_FIOP\n+   && (TARGET_USE_<MODE>MODE_FIOP || optimize_size)\n    && GET_MODE (operands[1]) == GET_MODE (operands[3])\n    && !ix86_use_fcomi_compare (swap_condition (GET_CODE (operands[0])))\n    && ix86_fp_compare_mode (swap_condition (GET_CODE (operands[0]))) == CCFPmode\n@@ -15926,7 +15926,7 @@\n \t     (match_operand:X87MODEI12 1 \"nonimmediate_operand\" \"m,?r\"))\n \t   (match_operand:MODEF 2 \"register_operand\" \"0,0\")]))]\n   \"TARGET_80387 && !TARGET_SSE_MATH\n-   && TARGET_USE_<X87MODEI12:MODE>MODE_FIOP\"\n+   && (TARGET_USE_<X87MODEI12:MODE>MODE_FIOP || optimize_size)\"\n   \"* return which_alternative ? \\\"#\\\" : output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n         (cond [(match_operand:MODEF 3 \"mult_operator\" \"\")\n@@ -15945,7 +15945,7 @@\n \t   (float:MODEF\n \t     (match_operand:X87MODEI12 2 \"nonimmediate_operand\" \"m,?r\"))]))]\n   \"TARGET_80387 && !TARGET_SSE_MATH\n-   && TARGET_USE_<X87MODEI12:MODE>MODE_FIOP\"\n+   && (TARGET_USE_<X87MODEI12:MODE>MODE_FIOP || optimize_size)\"\n   \"* return which_alternative ? \\\"#\\\" : output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n         (cond [(match_operand:MODEF 3 \"mult_operator\" \"\")\n@@ -15960,7 +15960,8 @@\n (define_insn \"*fop_df_4_i387\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:DF 3 \"binary_fp_operator\"\n-\t   [(float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"fm,0\"))\n+\t   [(float_extend:DF\n+\t     (match_operand:SF 1 \"nonimmediate_operand\" \"fm,0\"))\n \t    (match_operand:DF 2 \"register_operand\" \"0,f\")]))]\n   \"TARGET_80387 && !(TARGET_SSE2 && TARGET_SSE_MATH)\n    && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n@@ -16046,7 +16047,7 @@\n \t  [(float:XF\n \t     (match_operand:X87MODEI12 1 \"nonimmediate_operand\" \"m,?r\"))\n \t   (match_operand:XF 2 \"register_operand\" \"0,0\")]))]\n-  \"TARGET_80387 && TARGET_USE_<MODE>MODE_FIOP\"\n+  \"TARGET_80387 && (TARGET_USE_<MODE>MODE_FIOP || optimize_size)\"\n   \"* return which_alternative ? \\\"#\\\" : output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n         (cond [(match_operand:XF 3 \"mult_operator\" \"\")\n@@ -16064,7 +16065,7 @@\n \t  [(match_operand:XF 1 \"register_operand\" \"0,0\")\n \t   (float:XF\n \t     (match_operand:X87MODEI12 2 \"nonimmediate_operand\" \"m,?r\"))]))]\n-  \"TARGET_80387 && TARGET_USE_<MODE>MODE_FIOP\"\n+  \"TARGET_80387 && (TARGET_USE_<MODE>MODE_FIOP || optimize_size)\"\n   \"* return which_alternative ? \\\"#\\\" : output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\")\n         (cond [(match_operand:XF 3 \"mult_operator\" \"\")"}]}