{"sha": "c6b12b802cd943af0985fbd3e74d773775b2b544", "node_id": "C_kwDOANBUbNoAKGM2YjEyYjgwMmNkOTQzYWYwOTg1ZmJkM2U3NGQ3NzM3NzViMmI1NDQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-11T00:17:43Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-11T00:17:43Z"}, "message": "Daily bump.", "tree": {"sha": "c6437ce82f2024d51d1ea4b1f6b878259a616754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6437ce82f2024d51d1ea4b1f6b878259a616754"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6b12b802cd943af0985fbd3e74d773775b2b544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b12b802cd943af0985fbd3e74d773775b2b544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b12b802cd943af0985fbd3e74d773775b2b544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b12b802cd943af0985fbd3e74d773775b2b544/comments", "author": null, "committer": null, "parents": [{"sha": "ae4438537fbc2ed04f3b0fb32d4e02b0ed6977a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4438537fbc2ed04f3b0fb32d4e02b0ed6977a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae4438537fbc2ed04f3b0fb32d4e02b0ed6977a1"}], "stats": {"total": 110, "additions": 109, "deletions": 1}, "files": [{"sha": "18f1326a229bc0c2757ce3117df8457889fb5ca4", "filename": "contrib/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b12b802cd943af0985fbd3e74d773775b2b544/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b12b802cd943af0985fbd3e74d773775b2b544/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=c6b12b802cd943af0985fbd3e74d773775b2b544", "patch": "@@ -1,3 +1,14 @@\n+2022-12-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gcc-changelog/git_commit.py (default_changelog_locations): Add\n+\t'gcc/rust'.\n+\t(bug_components): Add 'rust'.\n+\n+2022-12-10  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gcc-changelog/git_commit.py (default_changelog_locations):\n+\tNew entry for gcc/m2.  New entry for libgm2.\n+\n 2022-12-06  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.doxy (INPUT): Add gcc/analyzer subdirectory."}, {"sha": "e2a0facc476dc41f031475a93fb6f2eed8d8b0c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b12b802cd943af0985fbd3e74d773775b2b544/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b12b802cd943af0985fbd3e74d773775b2b544/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6b12b802cd943af0985fbd3e74d773775b2b544", "patch": "@@ -1,3 +1,11 @@\n+2022-12-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/107997\n+\t* tree-ssa-loop-ivopts.cc: Include cfganal.h.\n+\t(create_new_iv) <case IP_END>: If ip_end_pos bb is non-empty and ends\n+\twith a stmt which ends bb, instead of adding iv update after it split\n+\tthe latch edge and insert iterator into the new latch bb.\n+\n 2022-12-09  Jiufu Guo  <guojiufu@linux.ibm.com>\n \n \t* config/rs6000/rs6000.cc (rs6000_emit_set_const): Remove copy_rtx."}, {"sha": "0706710bce803c97f6d2a0fe7901109c2fc73c6c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b12b802cd943af0985fbd3e74d773775b2b544/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b12b802cd943af0985fbd3e74d773775b2b544/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=c6b12b802cd943af0985fbd3e74d773775b2b544", "patch": "@@ -1 +1 @@\n-20221210\n+20221211"}, {"sha": "de713a88888ddb036b8362e6b93f388b5197e233", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b12b802cd943af0985fbd3e74d773775b2b544/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b12b802cd943af0985fbd3e74d773775b2b544/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c6b12b802cd943af0985fbd3e74d773775b2b544", "patch": "@@ -1,3 +1,20 @@\n+2022-12-10  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/106911\n+\t* simplify.cc (gfc_simplify_ishftc): If the SIZE argument is known\n+\tto be outside the allowed range, terminate simplification.\n+\n+2022-12-10  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* match.cc (gfc_match_member_sep): Use %<...%> in gfc_error.\n+\t* openmp.cc (gfc_match_oacc_routine, gfc_match_omp_context_selector,\n+\tgfc_match_omp_context_selector_specification,\n+\tgfc_match_omp_declare_variant, resolve_omp_clauses): Likewise;\n+\tuse %qs instead of '%s'.\n+\t* primary.cc (match_real_constant, gfc_match_varspec): Likewise.\n+\t* resolve.cc (gfc_resolve_formal_arglist, resolve_operator,\n+\tresolve_ordinary_assign): Likewise.\n+\n 2022-12-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/107872"}, {"sha": "c53b4176062bd12a43736242bb2de1812a5646af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b12b802cd943af0985fbd3e74d773775b2b544/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b12b802cd943af0985fbd3e74d773775b2b544/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6b12b802cd943af0985fbd3e74d773775b2b544", "patch": "@@ -1,3 +1,13 @@\n+2022-12-10  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/106911\n+\t* gfortran.dg/pr106911.f90: New test.\n+\n+2022-12-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/107997\n+\t* gcc.c-torture/compile/pr107997.c: New test.\n+\n 2022-12-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/107872"}, {"sha": "cbfe70958e3a7e4181631ec485a151b7ebb3a593", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b12b802cd943af0985fbd3e74d773775b2b544/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b12b802cd943af0985fbd3e74d773775b2b544/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=c6b12b802cd943af0985fbd3e74d773775b2b544", "patch": "@@ -1,3 +1,28 @@\n+2022-12-10  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* elf.c (ZSTD_TABLE_*): Use elf_zstd_fse_baseline_entry.\n+\t(ZSTD_ENCODE_BASELINE_BITS): Define.\n+\t(ZSTD_DECODE_BASELINE, ZSTD_DECODE_BASEBITS): Define.\n+\t(elf_zstd_literal_length_base): New static const array.\n+\t(elf_zstd_match_length_base): Likewise.\n+\t(struct elf_zstd_fse_baseline_entry): Define.\n+\t(elf_zstd_make_literal_baseline_fse): New static function.\n+\t(elf_zstd_make_offset_baseline_fse): Likewise.\n+\t(elf_zstd_make_match_baseline_fse): Likewise.\n+\t(print_table, main): Use elf_zstd_fse_baseline_entry.\n+\t(elf_zstd_lit_table, elf_zstd_match_table): Likewise.\n+\t(elf_zstd_offset_table): Likewise.\n+\t(struct elf_zstd_seq_decode): Likewise.  Remove use_rle and rle\n+\tfields.\n+\t(elf_zstd_unpack_seq_decode): Use elf_zstd_fse_baseline_entry,\n+\ttaking a conversion function.  Convert RLE to FSE.\n+\t(elf_zstd_literal_length_baseline): Remove.\n+\t(elf_zstd_literal_length_bits): Remove.\n+\t(elf_zstd_match_length_baseline): Remove.\n+\t(elf_zstd_match_length_bits): Remove.\n+\t(elf_zstd_decompress): Use elf_zstd_fse_baseline_entry.  Rewrite\n+\tand simplify main loop.\n+\n 2022-12-08  Ian Lance Taylor  <iant@golang.org>\n \n \t* configure.ac: Check for zstd library and"}, {"sha": "04b4e4f0fc0cb72cbe863f0c7dee7b49de6f0f12", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b12b802cd943af0985fbd3e74d773775b2b544/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b12b802cd943af0985fbd3e74d773775b2b544/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=c6b12b802cd943af0985fbd3e74d773775b2b544", "patch": "@@ -1,3 +1,40 @@\n+2022-12-10  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.h (struct target_mem_desc): Predeclare; move\n+\tbelow after 'reverse_splay_tree_node' and add rev_array\n+\tmember.\n+\t(struct reverse_splay_tree_key_s, reverse_splay_compare): New.\n+\t(reverse_splay_tree_node, reverse_splay_tree,\n+\treverse_splay_tree_key): New typedef.\n+\t(struct gomp_device_descr): Add mem_map_rev member.\n+\t* oacc-host.c (host_dispatch): NULL init .mem_map_rev.\n+\t* plugin/plugin-nvptx.c (GOMP_OFFLOAD_get_num_devices): Claim\n+\tsupport for GOMP_REQUIRES_REVERSE_OFFLOAD.\n+\t* splay-tree.h (splay_tree_callback_stop): New typedef; like\n+\tsplay_tree_callback but returning int not void.\n+\t(splay_tree_foreach_lazy): Define; like splay_tree_foreach but\n+\ttaking splay_tree_callback_stop as argument.\n+\t* splay-tree.c (splay_tree_foreach_internal_lazy,\n+\tsplay_tree_foreach_lazy): New; but early exit if callback returns\n+\tnonzero.\n+\t* target.c: Instatiate splay_tree_c with splay_tree_prefix 'reverse'.\n+\t(gomp_map_lookup_rev): New.\n+\t(gomp_load_image_to_device): Handle reverse-offload function\n+\tlookup table.\n+\t(gomp_unload_image_from_device): Free devicep->mem_map_rev.\n+\t(struct gomp_splay_tree_rev_lookup_data, gomp_splay_tree_rev_lookup,\n+\tgomp_map_rev_lookup, struct cpy_data, gomp_map_cdata_lookup_int,\n+\tgomp_map_cdata_lookup): New auxiliary structs and functions for\n+\tgomp_target_rev.\n+\t(gomp_target_rev): Implement reverse offloading and its mapping.\n+\t(gomp_target_init): Init current_device.mem_map_rev.root.\n+\t* testsuite/libgomp.fortran/reverse-offload-2.f90: New test.\n+\t* testsuite/libgomp.fortran/reverse-offload-3.f90: New test.\n+\t* testsuite/libgomp.fortran/reverse-offload-4.f90: New test.\n+\t* testsuite/libgomp.fortran/reverse-offload-5.f90: New test.\n+\t* testsuite/libgomp.fortran/reverse-offload-5a.f90: New test without\n+\tmapping of on-device allocated variables.\n+\n 2022-12-09  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* libgomp.texi (5.1 Impl. Status): Split allocate clause/directive"}]}