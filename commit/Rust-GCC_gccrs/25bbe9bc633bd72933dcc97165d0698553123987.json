{"sha": "25bbe9bc633bd72933dcc97165d0698553123987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViYmU5YmM2MzNiZDcyOTMzZGNjOTcxNjVkMDY5ODU1MzEyMzk4Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-10-19T14:49:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-10-19T14:49:38Z"}, "message": "2008-10-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_tree.h (_Rb_tree_node<>::_Rb_tree_node<>\n\t(_Args&&...)): Add in C++0x mode.\n\t(_Rb_tree<>::_M_create_node<>(_Args&&...)): Add in C++0x mode,\n\tuse _M_get_Node_allocator.\n\t(_Rb_tree<>::_M_destroy_node(_Link_type): Use _M_get_Node_allocator\n\tin C++0x mode.\n\t* testsuite/23_containers/set/operators/1_neg.cc: Adjust dg-error\n\tline numbers.\n\t* testsuite/23_containers/map/operators/1_neg.cc: Likewise.\n\nFrom-SVN: r141226", "tree": {"sha": "e3730756efc6cdc0b9fb99534017a5a3cfdf4309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3730756efc6cdc0b9fb99534017a5a3cfdf4309"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25bbe9bc633bd72933dcc97165d0698553123987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25bbe9bc633bd72933dcc97165d0698553123987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25bbe9bc633bd72933dcc97165d0698553123987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25bbe9bc633bd72933dcc97165d0698553123987/comments", "author": null, "committer": null, "parents": [{"sha": "a7e72022ce7fbf78637fb8475e9c357f00ff120d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e72022ce7fbf78637fb8475e9c357f00ff120d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e72022ce7fbf78637fb8475e9c357f00ff120d"}], "stats": {"total": 72, "additions": 59, "deletions": 13}, "files": [{"sha": "10f226d04bcf6a3f3bcc3f5cee0660496562a021", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bbe9bc633bd72933dcc97165d0698553123987/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bbe9bc633bd72933dcc97165d0698553123987/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=25bbe9bc633bd72933dcc97165d0698553123987", "patch": "@@ -1,3 +1,15 @@\n+2008-10-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_tree.h (_Rb_tree_node<>::_Rb_tree_node<>\n+\t(_Args&&...)): Add in C++0x mode.\n+\t(_Rb_tree<>::_M_create_node<>(_Args&&...)): Add in C++0x mode,\n+\tuse _M_get_Node_allocator.\n+\t(_Rb_tree<>::_M_destroy_node(_Link_type): Use _M_get_Node_allocator\n+\tin C++0x mode.\n+\t* testsuite/23_containers/set/operators/1_neg.cc: Adjust dg-error\n+\tline numbers.\n+\t* testsuite/23_containers/map/operators/1_neg.cc: Likewise.\n+\n 2008-10-18  Douglas Gregor  <doug.gregor@gmail.com>\n \n \t* include/bits/stl_pair.h (__may_be_null_pointer_init): New."}, {"sha": "c80dbefc31885fed97469fba22981ab60a0baa96", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 41, "deletions": 7, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bbe9bc633bd72933dcc97165d0698553123987/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bbe9bc633bd72933dcc97165d0698553123987/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=25bbe9bc633bd72933dcc97165d0698553123987", "patch": "@@ -133,6 +133,13 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     {\n       typedef _Rb_tree_node<_Val>* _Link_type;\n       _Val _M_value_field;\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      template<typename... _Args>\n+        _Rb_tree_node(_Args&&... __args)\n+\t: _Rb_tree_node_base(),\n+\t  _M_value_field(std::forward<_Args>(__args)...) { }\n+#endif\n     };\n \n   _Rb_tree_node_base*\n@@ -360,6 +367,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       _M_put_node(_Link_type __p)\n       { _M_impl._Node_allocator::deallocate(__p, 1); }\n \n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n       _Link_type\n       _M_create_node(const value_type& __x)\n       {\n@@ -374,6 +382,39 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \treturn __tmp;\n       }\n \n+      void\n+      _M_destroy_node(_Link_type __p)\n+      {\n+\tget_allocator().destroy(&__p->_M_value_field);\n+\t_M_put_node(__p);\n+      }\n+#else\n+      template<typename... _Args>\n+        _Link_type\n+        _M_create_node(_Args&&... __args)\n+\t{\n+\t  _Link_type __tmp = _M_get_node();\n+\t  try\n+\t    {\n+\t      _M_get_Node_allocator().construct(__tmp,\n+\t\t\t\t\t     std::forward<_Args>(__args)...);\n+\t    }\n+\t  catch(...)\n+\t    {\n+\t      _M_put_node(__tmp);\n+\t      __throw_exception_again;\n+\t    }\n+\t  return __tmp;\n+\t}\n+\n+      void\n+      _M_destroy_node(_Link_type __p)\n+      {\n+\t_M_get_Node_allocator().destroy(__p);\n+\t_M_put_node(__p);\n+      }\n+#endif\n+\n       _Link_type\n       _M_clone_node(_Const_Link_type __x)\n       {\n@@ -384,13 +425,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \treturn __tmp;\n       }\n \n-      void\n-      _M_destroy_node(_Link_type __p)\n-      {\n-\tget_allocator().destroy(&__p->_M_value_field);\n-\t_M_put_node(__p);\n-      }\n-\n     protected:\n       template<typename _Key_compare, \n \t       bool _Is_pod_comparator = __is_pod(_Key_compare)>"}, {"sha": "dd8888af3d20c8a45a40427adeae7bc89a1cd924", "filename": "libstdc++-v3/testsuite/23_containers/map/operators/1_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bbe9bc633bd72933dcc97165d0698553123987/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bbe9bc633bd72933dcc97165d0698553123987/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc?ref=25bbe9bc633bd72933dcc97165d0698553123987", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -42,5 +42,5 @@ void test01()\n   test &= itr == mapByName.end(); // { dg-error \"no\" } \n }\n  \n-// { dg-error \"candidates are\" \"\" { target *-*-* } 210 }\n-// { dg-error \"candidates are\" \"\" { target *-*-* } 214 }\n+// { dg-error \"candidates are\" \"\" { target *-*-* } 217 }\n+// { dg-error \"candidates are\" \"\" { target *-*-* } 221 }"}, {"sha": "5dfb45e98c96dbc8d8682d7ff874e243941cf085", "filename": "libstdc++-v3/testsuite/23_containers/set/operators/1_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25bbe9bc633bd72933dcc97165d0698553123987/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25bbe9bc633bd72933dcc97165d0698553123987/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc?ref=25bbe9bc633bd72933dcc97165d0698553123987", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -40,5 +40,5 @@ void test01()\n   test &= itr == setByName.end(); // { dg-error \"no\" } \n }\n \n-// { dg-error \"candidates are\" \"\" { target *-*-* } 285 }\n-// { dg-error \"candidates are\" \"\" { target *-*-* } 289 }\n+// { dg-error \"candidates are\" \"\" { target *-*-* } 292 }\n+// { dg-error \"candidates are\" \"\" { target *-*-* } 296 }"}]}