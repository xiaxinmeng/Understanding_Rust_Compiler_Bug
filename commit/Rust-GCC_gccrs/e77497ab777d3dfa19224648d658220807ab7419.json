{"sha": "e77497ab777d3dfa19224648d658220807ab7419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc3NDk3YWI3NzdkM2RmYTE5MjI0NjQ4ZDY1ODIyMDgwN2FiNzQxOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-05-14T18:57:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-05-14T18:57:45Z"}, "message": "PR libstdc++/81256 fix exception handling in basic_filebuf::close\n\n\tPR libstdc++/81256\n\t* include/bits/fstream.tcc (basic_filebuf::close): Do not swallow\n\texceptions from _M_terminate_output().\n\t* include/std/fstream (basic_filebuf::~basic_filebuf): Swallow any\n\texceptions from close().\n\t* testsuite/27_io/basic_filebuf/close/81256.cc: New.\n\nFrom-SVN: r260236", "tree": {"sha": "d5fba065c2bb36115f0dd1d56dfcc530062c568d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5fba065c2bb36115f0dd1d56dfcc530062c568d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e77497ab777d3dfa19224648d658220807ab7419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e77497ab777d3dfa19224648d658220807ab7419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e77497ab777d3dfa19224648d658220807ab7419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e77497ab777d3dfa19224648d658220807ab7419/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10c54e5b0e098b5b1e7a0b79716bc113fe96c45e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c54e5b0e098b5b1e7a0b79716bc113fe96c45e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10c54e5b0e098b5b1e7a0b79716bc113fe96c45e"}], "stats": {"total": 127, "additions": 123, "deletions": 4}, "files": [{"sha": "46d43d7ace08f8f6dc8546a1c69e0a8ccee4e169", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e77497ab777d3dfa19224648d658220807ab7419/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e77497ab777d3dfa19224648d658220807ab7419/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e77497ab777d3dfa19224648d658220807ab7419", "patch": "@@ -1,5 +1,12 @@\n 2018-05-14  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/81256\n+\t* include/bits/fstream.tcc (basic_filebuf::close): Do not swallow\n+\texceptions from _M_terminate_output().\n+\t* include/std/fstream (basic_filebuf::~basic_filebuf): Swallow any\n+\texceptions from close().\n+\t* testsuite/27_io/basic_filebuf/close/81256.cc: New.\n+\n \t* include/bits/valarray_array.h (__valarray_get_memory): Remove.\n \t(__valarray_get_storage): Call operator new directly. Remove ignored\n \ttop-level restrict qualifier and add malloc attribute instead."}, {"sha": "08cf189ee06c76c0523875f84f58efa8b74317d6", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e77497ab777d3dfa19224648d658220807ab7419/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e77497ab777d3dfa19224648d658220807ab7419/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=e77497ab777d3dfa19224648d658220807ab7419", "patch": "@@ -239,13 +239,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    if (!_M_terminate_output())\n \t      __testfail = true;\n \t  }\n-\t__catch(__cxxabiv1::__forced_unwind&)\n+\t__catch(...)\n \t  {\n \t    _M_file.close();\n \t    __throw_exception_again;\n \t  }\n-\t__catch(...)\n-\t  { __testfail = true; }\n       }\n \n       if (!_M_file.close())"}, {"sha": "05661d9d58f1ab2e92db3edd90a172330dc2b940", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e77497ab777d3dfa19224648d658220807ab7419/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e77497ab777d3dfa19224648d658220807ab7419/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=e77497ab777d3dfa19224648d658220807ab7419", "patch": "@@ -244,7 +244,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       virtual\n       ~basic_filebuf()\n-      { this->close(); }\n+      {\n+\t__try\n+\t  { this->close(); }\n+\t__catch(...)\n+\t  { }\n+      }\n \n #if __cplusplus >= 201103L\n       basic_filebuf& operator=(const basic_filebuf&) = delete;"}, {"sha": "aef7364526b35332e741c47b0f99d6d9f7e62422", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/close/81256.cc", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e77497ab777d3dfa19224648d658220807ab7419/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2F81256.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e77497ab777d3dfa19224648d658220807ab7419/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2F81256.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2F81256.cc?ref=e77497ab777d3dfa19224648d658220807ab7419", "patch": "@@ -0,0 +1,109 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 } }\n+\n+#include <fstream>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+struct E : std::runtime_error\n+{\n+  E() : runtime_error(\"\") { }\n+};\n+\n+struct Cvt : std::codecvt<wchar_t, char, std::mbstate_t>\n+{\n+  explicit Cvt(size_t refs) : codecvt(refs) { }\n+\n+  mutable int exceptions_thrown = 0;\n+\n+private:\n+  int\n+  do_encoding() const noexcept override\n+  { return -1; }\n+\n+  bool\n+  do_always_noconv() const noexcept override\n+  { return false; }\n+\n+  result\n+  do_unshift(state_type&, char*, char*, char*&) const override\n+  {\n+    ++exceptions_thrown;\n+    throw E();\n+  }\n+};\n+\n+struct filebuf : std::basic_filebuf<wchar_t>\n+{\n+  explicit filebuf(Cvt* c)\n+  {\n+    std::locale loc(std::locale::classic(), c);\n+    imbue(loc);\n+  }\n+};\n+\n+void\n+test01()\n+{\n+  // This facet needs to still be valid when ~basic_filebuf runs:\n+  Cvt conv{1};\n+  {\n+    filebuf fb(&conv);\n+    fb.open(\"output.txt\", std::wios::out);\n+    fb.sputn(L\"x\", 1);\n+\n+    bool caught = false;\n+    try\n+    {\n+      /* [filebuf.members] p7: If one of these calls throws an exception,\n+       * the exception is caught and rethrown after closing the file.  */\n+      fb.close();\n+    }\n+    catch (const E&)\n+    {\n+      caught = true;\n+    }\n+    VERIFY( conv.exceptions_thrown == 1 );\n+    VERIFY( caught );\n+  }\n+  VERIFY( conv.exceptions_thrown == 1 );\n+}\n+\n+void\n+test02()\n+{\n+  // This facet needs to still be valid when ~basic_filebuf runs:\n+  Cvt conv{1};\n+  {\n+    filebuf fb(&conv);\n+    fb.open(\"output.txt\", std::wios::out);\n+    fb.sputn(L\"x\", 1);\n+    /* [filebuf.cons] p5: If an exception occurs during the destruction\n+     * of the object, including the call to close(), the exception is\n+     * caught but not rethrown.  */\n+  }\n+  VERIFY( conv.exceptions_thrown == 1 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+}"}]}