{"sha": "1f05db639b5c76eccc50a2a38835c1889df5385f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYwNWRiNjM5YjVjNzZlY2NjNTBhMmEzODgzNWMxODg5ZGY1Mzg1Zg==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-08-28T14:07:03Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-08-28T14:07:03Z"}, "message": "error.c (gfc_error_init_1): Remove blank line in front of function body.\n\n* error.c (gfc_error_init_1): Remove blank line in front of\nfunction body. Add missing blank.\n(gfc_buffer_error, error_char, error_string): Remove blank line in\nfront of function body.\n(show_locus): Add comma in comment.\n(gfc_clear_warning, gfc_warning_check, gfc_clear_error,\ngfc_push_error, gfc_pop_error): Remove blank line in front of\nfunction body.\n(gfc_get_errors): Typo fix in comment in front of function. Remove\nblank line in front of function body.\n\nFrom-SVN: r86691", "tree": {"sha": "02a42d877c11b9aade56fcdd953e471a06e82a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a42d877c11b9aade56fcdd953e471a06e82a4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f05db639b5c76eccc50a2a38835c1889df5385f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f05db639b5c76eccc50a2a38835c1889df5385f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f05db639b5c76eccc50a2a38835c1889df5385f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f05db639b5c76eccc50a2a38835c1889df5385f/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1506eac19b37c73ddca179aeb33aa6e431ac1305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1506eac19b37c73ddca179aeb33aa6e431ac1305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1506eac19b37c73ddca179aeb33aa6e431ac1305"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "18cda1674175ff1aa1b018cccc072c0ef8ab39e4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f05db639b5c76eccc50a2a38835c1889df5385f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f05db639b5c76eccc50a2a38835c1889df5385f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1f05db639b5c76eccc50a2a38835c1889df5385f", "patch": "@@ -1,3 +1,16 @@\n+2004-08-28  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* error.c (gfc_error_init_1): Remove blank line in front of\n+\tfunction body. Add missing blank.\n+\t(gfc_buffer_error, error_char, error_string): Remove blank line in\n+\tfront of function body.\n+\t(show_locus): Add comma in comment.\n+\t(gfc_clear_warning, gfc_warning_check, gfc_clear_error,\n+\tgfc_push_error, gfc_pop_error): Remove blank line in front of\n+\tfunction body.\n+\t(gfc_get_errors): Typo fix in comment in front of function. Remove\n+\tblank line in front of function body.\n+\n 2004-08-27  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.h (gfc_default_*_kind): Remove prototypes, add extern"}, {"sha": "d028d5a2b3aecf0583a020ddc9b6c50d89e7f8dd", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f05db639b5c76eccc50a2a38835c1889df5385f/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f05db639b5c76eccc50a2a38835c1889df5385f/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=1f05db639b5c76eccc50a2a38835c1889df5385f", "patch": "@@ -52,8 +52,7 @@ static gfc_error_buf error_buffer, warning_buffer;\n void\n gfc_error_init_1 (void)\n {\n-\n-  terminal_width = gfc_terminal_width();\n+  terminal_width = gfc_terminal_width ();\n   errors = 0;\n   warnings = 0;\n   buffer_flag = 0;\n@@ -65,7 +64,6 @@ gfc_error_init_1 (void)\n void\n gfc_buffer_error (int flag)\n {\n-\n   buffer_flag = flag;\n }\n \n@@ -76,7 +74,6 @@ gfc_buffer_error (int flag)\n static void\n error_char (char c)\n {\n-\n   if (buffer_flag)\n     {\n       if (use_warning_buffer)\n@@ -105,13 +102,12 @@ error_char (char c)\n static void\n error_string (const char *p)\n {\n-\n   while (*p)\n     error_char (*p++);\n }\n \n \n-/* Show the file, where it was included and the source line give a\n+/* Show the file, where it was included and the source line, give a\n    locus.  Calls error_printf() recursively, but the recursion is at\n    most one level deep.  */\n \n@@ -555,7 +551,6 @@ gfc_warning_now (const char *format, ...)\n void\n gfc_clear_warning (void)\n {\n-\n   warning_buffer.flag = 0;\n }\n \n@@ -566,7 +561,6 @@ gfc_clear_warning (void)\n void\n gfc_warning_check (void)\n {\n-\n   if (warning_buffer.flag)\n     {\n       warnings++;\n@@ -667,7 +661,6 @@ gfc_internal_error (const char *format, ...)\n void\n gfc_clear_error (void)\n {\n-\n   error_buffer.flag = 0;\n }\n \n@@ -698,7 +691,6 @@ gfc_error_check (void)\n void\n gfc_push_error (gfc_error_buf * err)\n {\n-\n   err->flag = error_buffer.flag;\n   if (error_buffer.flag)\n     strcpy (err->message, error_buffer.message);\n@@ -712,7 +704,6 @@ gfc_push_error (gfc_error_buf * err)\n void\n gfc_pop_error (gfc_error_buf * err)\n {\n-\n   error_buffer.flag = err->flag;\n   if (error_buffer.flag)\n     strcpy (error_buffer.message, err->message);\n@@ -744,12 +735,11 @@ gfc_status_char (char c)\n }\n \n \n-/* Report the number of warnings and errors that occored to the caller.  */\n+/* Report the number of warnings and errors that occured to the caller.  */\n \n void\n gfc_get_errors (int *w, int *e)\n {\n-\n   if (w != NULL)\n     *w = warnings;\n   if (e != NULL)"}]}