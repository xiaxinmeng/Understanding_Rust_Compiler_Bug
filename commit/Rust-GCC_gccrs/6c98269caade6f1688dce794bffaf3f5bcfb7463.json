{"sha": "6c98269caade6f1688dce794bffaf3f5bcfb7463", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM5ODI2OWNhYWRlNmYxNjg4ZGNlNzk0YmZmYWYzZjViY2ZiNzQ2Mw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2001-01-15T16:17:08Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2001-01-15T16:17:08Z"}, "message": "arm.md (cbranchsi4): Correct calculation of branch ranges.\n\n* arm.md (cbranchsi4): Correct calculation of branch ranges.\n(negated_cbranchsi4): Likewise.\n\nFrom-SVN: r39039", "tree": {"sha": "079a5b2826eac27935426b6909a01d0d7505244b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/079a5b2826eac27935426b6909a01d0d7505244b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c98269caade6f1688dce794bffaf3f5bcfb7463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c98269caade6f1688dce794bffaf3f5bcfb7463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c98269caade6f1688dce794bffaf3f5bcfb7463", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c98269caade6f1688dce794bffaf3f5bcfb7463/comments", "author": null, "committer": null, "parents": [{"sha": "b3c5b2be07540878bc999983433ae8b81aad8561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c5b2be07540878bc999983433ae8b81aad8561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3c5b2be07540878bc999983433ae8b81aad8561"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "c70dc0abb644d481b487413d2d9540155d4453de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c98269caade6f1688dce794bffaf3f5bcfb7463/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c98269caade6f1688dce794bffaf3f5bcfb7463/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c98269caade6f1688dce794bffaf3f5bcfb7463", "patch": "@@ -1,3 +1,8 @@\n+2001-01-15  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (cbranchsi4): Correct calculation of branch ranges.\n+\t(negated_cbranchsi4): Likewise.\n+\n 2001-01-15  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/semi.h (SUBTARGET_EXTRA_SPECS): Define."}, {"sha": "103d5ad7ecd489a198408ccdfb30f93c8eda8c28", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c98269caade6f1688dce794bffaf3f5bcfb7463/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c98269caade6f1688dce794bffaf3f5bcfb7463/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=6c98269caade6f1688dce794bffaf3f5bcfb7463", "patch": "@@ -5520,7 +5520,22 @@\n \n \f\n \n-;; Comapre & branch insns\n+;; Compare & branch insns\n+;; The range calcualations are based as follows:\n+;; For forward branches, the address calculation returns the address of\n+;; the next instruction.  This is 2 beyond the branch instruction.\n+;; For backward branches, the address calculation returns the address of\n+;; the first instruction in this pattern (cmp).  This is 2 before the branch\n+;; instruction for the shortest sequence, and 4 before the branch instruction\n+;; if we have to jump around an unconditional branch.\n+;; To the basic branch range the PC offset must be added (this is +4).\n+;; So for forward branches we have \n+;;   (pos_range - pos_base_offs + pc_offs) = (pos_range - 2 + 4).\n+;; And for backward branches we have \n+;;   (neg_range - neg_base_offs + pc_offs) = (neg_range - (-2 or -4) + 4).\n+;;\n+;; For a 'b'       pos_range = 2046, neg_range = -2048 giving (-2040->2048).\n+;; For a 'b<cond>' pos_range = 254,  neg_range = -256  giving (-250 ->256).\n \n (define_insn \"cbranchsi4\"\n   [(set (pc)\n@@ -5552,7 +5567,7 @@\n \t    (const_int 4)\n \t    (if_then_else\n \t        (and (ge (minus (match_dup 3) (pc)) (const_int -2040))\n-\t\t     (le (minus (match_dup 3) (pc)) (const_int 2054)))\n+\t\t     (le (minus (match_dup 3) (pc)) (const_int 2048)))\n \t\t(const_int 6)\n \t\t(const_int 8))))]\n )\n@@ -5583,11 +5598,11 @@\n    (set (attr \"length\") \n         (if_then_else\n \t    (and (ge (minus (match_dup 3) (pc)) (const_int -250))\n-\t         (le (minus (match_dup 3) (pc)) (const_int 254)))\n+\t         (le (minus (match_dup 3) (pc)) (const_int 256)))\n \t    (const_int 4)\n \t    (if_then_else\n-\t        (and (ge (minus (match_dup 3) (pc)) (const_int -2044))\n-\t\t     (le (minus (match_dup 3) (pc)) (const_int 2044)))\n+\t        (and (ge (minus (match_dup 3) (pc)) (const_int -2040))\n+\t\t     (le (minus (match_dup 3) (pc)) (const_int 2048)))\n \t\t(const_int 6)\n \t\t(const_int 8))))]\n )"}]}