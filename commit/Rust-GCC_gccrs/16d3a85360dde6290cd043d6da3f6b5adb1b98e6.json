{"sha": "16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZkM2E4NTM2MGRkZTYyOTBjZDA0M2Q2ZGEzZjZiNWFkYjFiOThlNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-22T10:42:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-22T10:42:42Z"}, "message": "[multiple changes]\n\n2013-04-22  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi, exp_util.adb, sem_prag.adb, sem_prag.ads, par-ch2.adb,\n\topt.ads, sem_ch13.adb: Minor correction of typos in comments/doc.\n\n2013-04-22  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Check_Library_Attributes): Set Library_Dir to\n\tNo_Path_Information only when Directories_Must_Exist_In_Projects\n\tis False.\n\t(Get_Directories): Set Object_Directory\n\tor Exec_Directory to No_Path_Information only when\n\tDirectories_Must_Exist_In_Projects is False.\n\nFrom-SVN: r198129", "tree": {"sha": "744392d7c5ba077f115bb465cd7fe606a8a326c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/744392d7c5ba077f115bb465cd7fe606a8a326c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/comments", "author": null, "committer": null, "parents": [{"sha": "ddb8a2c7c199ce0f49375bb6d947a45f0f439e6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb8a2c7c199ce0f49375bb6d947a45f0f439e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb8a2c7c199ce0f49375bb6d947a45f0f439e6b"}], "stats": {"total": 95, "additions": 57, "deletions": 38}, "files": [{"sha": "1b2d967de290f48e2b5249988c9278ae34d70106", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -1,3 +1,17 @@\n+2013-04-22  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_rm.texi, exp_util.adb, sem_prag.adb, sem_prag.ads, par-ch2.adb,\n+\topt.ads, sem_ch13.adb: Minor correction of typos in comments/doc.\n+\n+2013-04-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Check_Library_Attributes): Set Library_Dir to\n+\tNo_Path_Information only when Directories_Must_Exist_In_Projects\n+\tis False.\n+\t(Get_Directories): Set Object_Directory\n+\tor Exec_Directory to No_Path_Information only when\n+\tDirectories_Must_Exist_In_Projects is False.\n+\n 2013-04-22  Yannick Moy  <moy@adacore.com>\n \n \t* par-prag.adb, sem_attr.adb, sem_ch6.adb, sem_prag.adb, sem_warn.adb,"}, {"sha": "aa40b3d56e4a984a637c613b6003befabc29abae", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -5589,7 +5589,7 @@ package body Exp_Util is\n \n    begin\n       --  Compute proper name to use, we need to get this right so that the\n-      --  right set of check policies apply to the CHeck pragma we are making.\n+      --  right set of check policies apply to the Check pragma we are making.\n \n       if Has_Dynamic_Predicate_Aspect (Typ) then\n          Nam := Name_Dynamic_Predicate;"}, {"sha": "a70a78dec6c3cc9902d720867f22edf3062a2438", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -1235,7 +1235,7 @@ Syntax:\n @smallexample @c ada\n pragma Assertion_Policy (CHECK | DISABLE | IGNORE);\n \n-Pragma Assertion_Policy (\n+pragma Assertion_Policy (\n     ASSERTION_KIND => POLICY_IDENTIFIER\n  @{, ASSERTION_KIND => POLICY_IDENTIFIER@});\n \n@@ -1442,8 +1442,11 @@ pragma Check (\n      [Check   =>] Boolean_EXPRESSION\n   [, [Message =>] string_EXPRESSION] );\n \n-CHECK_KIND ::= IDENTIFIER |\n-               Pre'Class | Post'Class | Type_Invariant'Class\n+CHECK_KIND ::= IDENTIFIER           |\n+               Pre'Class            |\n+               Post'Class           |\n+               Type_Invariant'Class |\n+               Invariant'Class\n @end smallexample\n \n @noindent\n@@ -1557,7 +1560,7 @@ pragma Check_Policy\n  ([Name   =>] CHECK_KIND,\n   [Policy =>] POLICY_IDENTIFIER);\n \n-Pragma Check_Policy (\n+pragma Check_Policy (\n     CHECK_KIND => POLICY_IDENTIFIER\n  @{, CHECK_KIND => POLICY_IDENTIFIER@});\n \n@@ -1589,14 +1592,14 @@ and if the check kind corresponds to one of the assertion kinds that\n are allowed by @code{Assertion_Policy}, then the effect is identical.\n \n If the first argument is Debug, then the policy applies to Debug pragmas,\n-disabling their effect if the policy is @code{Off}, @code{Disable}, or\n-@code{Ignore}, and allowing them to execute with normal semantics if\n-the policy is @code{On} or @code{Check}. In addition if the policy is\n-@code{Disable}, then the procedure call in @code{Debug} pragmas will\n-be totally ignored and not analyzed semanticslly.\n+disabling their effect if the policy is @code{OFF}, @code{DISABLE}, or\n+@code{IGNORE}, and allowing them to execute with normal semantics if\n+the policy is @code{ON} or @code{CHECK}. In addition if the policy is\n+@code{DISABLE}, then the procedure call in @code{Debug} pragmas will\n+be totally ignored and not analyzed semantically.\n \n Finally the first argument may be some other identifier than the above\n-posibilities, in which case it controls a set of named assertions\n+possibilities, in which case it controls a set of named assertions\n that can be checked using pragma @code{Check}. For example, if the pragma:\n \n @smallexample @c ada"}, {"sha": "7473a5c11e65acb959fd8be4e1c5bd56f7ed8aca", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -301,7 +301,7 @@ package Opt is\n    --  terminated by Empty. The order is most recently processed first. Note\n    --  that Push_Scope and Pop_Scope in Sem_Ch8 save and restore the value\n    --  of this variable, implementing the required scope control for pragmas\n-   --  appearing a declarative part.\n+   --  appearing in a declarative part.\n \n    Check_Readonly_Files : Boolean := False;\n    --  GNATMAKE"}, {"sha": "224c63b7eb9b2c3d847a9a190f805c058a2a621a", "filename": "gcc/ada/par-ch2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fpar-ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fpar-ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch2.adb?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -459,7 +459,7 @@ package body Ch2 is\n    --  | [pragma_argument_ASPECT_MARK =>] EXPRESSION\n \n    --  where the interesting allowed cases (which do not fit the syntax of the\n-   --  first alternative above are\n+   --  first alternative above) are\n \n    --  ASPECT_MARK ::=\n    --    Pre'Class | Post'Class | Invariant'Class | Type_Invariant'Class"}, {"sha": "1ead9365e5b02d820457bbad2a0b730f38ede4b4", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -3166,9 +3166,10 @@ package body Prj.Nmsc is\n                     (Data.Flags,\n                      \"library directory { does not exist\",\n                      Lib_Dir.Location, Project);\n-               end if;\n \n-               Project.Library_Dir := No_Path_Information;\n+               else\n+                  Project.Library_Dir := No_Path_Information;\n+               end if;\n \n             --  Checks for object/source directories\n \n@@ -5421,10 +5422,10 @@ package body Prj.Nmsc is\n                     (Data.Flags, Data.Flags.Require_Obj_Dirs,\n                      \"object directory { not found\",\n                      Project.Location, Project);\n-               end if;\n-\n-               Project.Object_Directory := No_Path_Information;\n \n+               else\n+                  Project.Object_Directory := No_Path_Information;\n+               end if;\n             end if;\n          end if;\n \n@@ -5502,9 +5503,10 @@ package body Prj.Nmsc is\n                   Error_Or_Warning\n                     (Data.Flags, Data.Flags.Missing_Source_Files,\n                      \"exec directory { not found\", Project.Location, Project);\n-               end if;\n \n-               Project.Exec_Directory := No_Path_Information;\n+               else\n+                  Project.Exec_Directory := No_Path_Information;\n+               end if;\n             end if;\n          end if;\n       end if;"}, {"sha": "e100756496bd73f892106ec2be90edded9e061c1", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -1460,7 +1460,7 @@ package body Sem_Ch13 is\n                           Expression => Relocate_Node (Expr))),\n                       Class_Present                => Class_Present (Aspect),\n                       Pragma_Identifier            =>\n-                                 Make_Identifier (Sloc (Id), Name_Invariant));\n+                        Make_Identifier (Sloc (Id), Name_Invariant));\n \n                   --  Add message unless exception messages are suppressed\n "}, {"sha": "bc1c63b8a3ff95658a41ecc6a22ece9a10556403", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -7467,7 +7467,7 @@ package body Sem_Prag is\n          --                        Type_Invariant       |\n          --                        Type_Invariant'Class\n \n-         --  ID_ASSERTION_KIND ::= Assert_And_Cut       }\n+         --  ID_ASSERTION_KIND ::= Assert_And_Cut       |\n          --                        Assume               |\n          --                        Contract_Cases       |\n          --                        Debug                |\n@@ -7490,11 +7490,11 @@ package body Sem_Prag is\n          --  the corresponding assertion. If Disable is specified, then the\n          --  argument of the assertion is not even analyzed. This is useful\n          --  when the aspect/pragma argument references entities in a with'ed\n-         --  packaqe that is replaced by a dummy package in the final build.\n+         --  package that is replaced by a dummy package in the final build.\n \n          --  Note: the attribute forms Pre'Class, Post'Class, Invariant'Class,\n          --  and Type_Invariant'Class were recognized by the parser and\n-         --  transformed into referencea to the special internal identifiers\n+         --  transformed into references to the special internal identifiers\n          --  _Pre, _Post, _Invariant, and _Type_Invariant, so no special\n          --  processing is required here.\n \n@@ -7513,9 +7513,9 @@ package body Sem_Prag is\n             if Is_Configuration_Pragma then\n                null;\n \n-            --  It can also appear in a declaration or package spec in Ada\n-            --  2012 mode. We allow this in other modes, but in that case\n-            --  we consider that we have an Ada 2012 pragma on our hands.\n+            --  It can also appear in a declarative part or package spec in Ada\n+            --  2012 mode. We allow this in other modes, but in that case we\n+            --  consider that we have an Ada 2012 pragma on our hands.\n \n             else\n                Check_Is_In_Decl_Part_Or_Package_Spec;\n@@ -8338,8 +8338,8 @@ package body Sem_Prag is\n \n             --  For the new syntax, what we do is to convert each argument to\n             --  an old syntax equivalent. We do that because we want to chain\n-            --  old style Check_Pragmas for the search (we don't wnat to have\n-            --  to deal with multiple arguments in the search)\n+            --  old style Check_Policy pragmas for the search (we don't want\n+            --  to have to deal with multiple arguments in the search.)\n \n             else\n                declare\n@@ -17923,7 +17923,7 @@ package body Sem_Prag is\n                when Name_Pre            => Ename := Name_uPre;\n                when Name_Post           => Ename := Name_uPost;\n                when Name_Type_Invariant => Ename := Name_uType_Invariant;\n-               when others           => raise Program_Error;\n+               when others              => raise Program_Error;\n             end case;\n          end if;\n       end if;"}, {"sha": "8d0d53d5c401903c7b61416dafbb57945d4052a0", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16d3a85360dde6290cd043d6da3f6b5adb1b98e6/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=16d3a85360dde6290cd043d6da3f6b5adb1b98e6", "patch": "@@ -75,15 +75,15 @@ package Sem_Prag is\n \n    procedure Check_Applicable_Policy (N : Node_Id);\n    --  N is either an N_Aspect or an N_Pragma node. There are two cases. If\n-   --  the name of the aspect or pragma is not one of those recognized as a\n-   --  assertion kind by an Assertion_Kind pragma, then the call has no effect.\n-   --  Note that in the case of a pragma derived from an aspect, the name\n-   --  we use for the purpose of this procedure is the aspect name, which may\n-   --  be different from the pragma name (e.g. Precondition for Pre aspect).\n-   --  In addition, 'Class aspects are recognized (and the corresponding\n-   --  special names used in the processing).\n+   --  the name of the aspect or pragma is not one of those recognized as\n+   --  an assertion kind by an Assertion_Policy pragma, then the call has\n+   --  no effect. Note that in the case of a pragma derived from an aspect,\n+   --  the name we use for the purpose of this procedure is the aspect name,\n+   --  which may be different from the pragma name (e.g. Precondition for\n+   --  Pre aspect). In addition, 'Class aspects are recognized (and the\n+   --  corresponding special names used in the processing).\n    --\n-   --  If the name is valid ASSERTION_KIND name, then the Check_Policy pragma\n+   --  If the name is a valid assertion kind name, then the Check_Policy pragma\n    --  chain is checked for a matching entry (or for an Assertion entry which\n    --  matches all possibilities). If a matching entry is found then the policy\n    --  is checked. If it is Off, Ignore, or Disable, then the Is_Ignored flag"}]}