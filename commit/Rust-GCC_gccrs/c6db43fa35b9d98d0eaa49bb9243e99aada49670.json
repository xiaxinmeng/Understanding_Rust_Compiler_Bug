{"sha": "c6db43fa35b9d98d0eaa49bb9243e99aada49670", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZkYjQzZmEzNWI5ZDk4ZDBlYWE0OWJiOTI0M2U5OWFhZGE0OTY3MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-02-28T14:31:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2018-02-28T14:31:02Z"}, "message": "i-cexten.ads (Float_128): New type.\n\nada/\n\t* libgnat/i-cexten.ads (Float_128): New type.\nc-family/\n\t* c-ada-spec.c (dump_ada_node) <NULLPTR_TYPE>: New case.\n\t<REAL_TYPE>: Deal specifically with _Float128/__float128.\n\nFrom-SVN: r258068", "tree": {"sha": "f717f97ad11b6f22dac5a8cb17ffbbe1190c4287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f717f97ad11b6f22dac5a8cb17ffbbe1190c4287"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6db43fa35b9d98d0eaa49bb9243e99aada49670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6db43fa35b9d98d0eaa49bb9243e99aada49670", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6db43fa35b9d98d0eaa49bb9243e99aada49670", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6db43fa35b9d98d0eaa49bb9243e99aada49670/comments", "author": null, "committer": null, "parents": [{"sha": "9e25c7ed961ca501496015a68fea46563c177684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e25c7ed961ca501496015a68fea46563c177684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e25c7ed961ca501496015a68fea46563c177684"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "4d721f22f89383e279f9f9abfbdbd3e7680679e2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6db43fa35b9d98d0eaa49bb9243e99aada49670/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6db43fa35b9d98d0eaa49bb9243e99aada49670/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c6db43fa35b9d98d0eaa49bb9243e99aada49670", "patch": "@@ -1,3 +1,7 @@\n+2018-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* libgnat/i-cexten.ads (Float_128): New type.\n+\n 2018-02-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (array_type_has_nonaliased_component): Return"}, {"sha": "8e770b5f859a3ac116c2aba5723c6d7904175cdb", "filename": "gcc/ada/libgnat/i-cexten.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6db43fa35b9d98d0eaa49bb9243e99aada49670/gcc%2Fada%2Flibgnat%2Fi-cexten.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6db43fa35b9d98d0eaa49bb9243e99aada49670/gcc%2Fada%2Flibgnat%2Fi-cexten.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-cexten.ads?ref=c6db43fa35b9d98d0eaa49bb9243e99aada49670", "patch": "@@ -72,6 +72,15 @@ package Interfaces.C.Extensions is\n    pragma Convention (C_Pass_By_Copy, Signed_128);\n    for Signed_128'Alignment use unsigned_long_long'Alignment * 2;\n \n+   --  128-bit floating-point type available on x86:\n+   --  typedef long_double float_128 __attribute__ ((mode (TF)));\n+\n+   type Float_128 is record\n+      low, high : unsigned_long_long;\n+   end record;\n+   pragma Convention (C_Pass_By_Copy, Float_128);\n+   for Float_128'Alignment use unsigned_long_long'Alignment * 2;\n+\n    --  Types for bitfields\n \n    type Unsigned_1 is mod 2 ** 1;"}, {"sha": "950591c053e83c5b69b5dbb92c5df06553cee7c5", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6db43fa35b9d98d0eaa49bb9243e99aada49670/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6db43fa35b9d98d0eaa49bb9243e99aada49670/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c6db43fa35b9d98d0eaa49bb9243e99aada49670", "patch": "@@ -1,3 +1,8 @@\n+2018-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.c (dump_ada_node) <NULLPTR_TYPE>: New case.\n+\t<REAL_TYPE>: Deal specifically with _Float128/__float128.\n+\n 2018-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-ada-spec.c (dump_ada_double_name) <ENUMERAL_TYPE>: New case."}, {"sha": "288a4611de0378fc42946c9bf819a49bcba2979c", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6db43fa35b9d98d0eaa49bb9243e99aada49670/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6db43fa35b9d98d0eaa49bb9243e99aada49670/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=c6db43fa35b9d98d0eaa49bb9243e99aada49670", "patch": "@@ -2126,6 +2126,7 @@ dump_ada_node (pretty_printer *buffer, tree node, tree type, int spc,\n       pp_string (buffer, \"--- unexpected node: TREE_VEC\");\n       return 0;\n \n+    case NULLPTR_TYPE:\n     case VOID_TYPE:\n       if (package_prefix)\n \t{\n@@ -2151,8 +2152,20 @@ dump_ada_node (pretty_printer *buffer, tree node, tree type, int spc,\n \tdump_ada_enum_type (buffer, node, type, spc, true);\n       break;\n \n-    case INTEGER_TYPE:\n     case REAL_TYPE:\n+      if (TYPE_NAME (node)\n+\t  && TREE_CODE (TYPE_NAME (node)) == TYPE_DECL\n+\t  && IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (node))) [0] == '_'\n+\t  && (id_equal (DECL_NAME (TYPE_NAME (node)), \"_Float128\")\n+\t      || id_equal (DECL_NAME (TYPE_NAME (node)), \"__float128\")))\n+\t{\n+\t  append_withs (\"Interfaces.C.Extensions\", false);\n+\t  pp_string (buffer, \"Extensions.Float_128\");\n+\t  break;\n+\t}\n+      /* fallthrough */\n+\n+    case INTEGER_TYPE:\n     case FIXED_POINT_TYPE:\n     case BOOLEAN_TYPE:\n       if (TYPE_NAME (node))\n@@ -2233,9 +2246,8 @@ dump_ada_node (pretty_printer *buffer, tree node, tree type, int spc,\n \t    {\n \t      if (TREE_CODE (node) == POINTER_TYPE\n \t\t  && TREE_CODE (TREE_TYPE (node)) == INTEGER_TYPE\n-\t\t  && !strcmp\n-\t\t\t(IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME\n-\t\t\t  (TREE_TYPE (node)))), \"char\"))\n+\t\t  && id_equal (DECL_NAME (TYPE_NAME (TREE_TYPE (node))),\n+\t\t\t       \"char\"))\n \t\t{\n \t\t  if (!name_only)\n \t\t    pp_string (buffer, \"new \");"}]}