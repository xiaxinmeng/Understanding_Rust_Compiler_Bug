{"sha": "2346b8064304115b851646532e1738d4afdc89b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM0NmI4MDY0MzA0MTE1Yjg1MTY0NjUzMmUxNzM4ZDRhZmRjODliOA==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2015-10-16T13:28:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T13:28:39Z"}, "message": "Code clean up.\n\nFrom-SVN: r228903", "tree": {"sha": "bc189abbb70e8d29051f535c1457d8438dc5df15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc189abbb70e8d29051f535c1457d8438dc5df15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2346b8064304115b851646532e1738d4afdc89b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2346b8064304115b851646532e1738d4afdc89b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2346b8064304115b851646532e1738d4afdc89b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2346b8064304115b851646532e1738d4afdc89b8/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51cf5b3e0a163af22fc48c441ee03dc097650778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51cf5b3e0a163af22fc48c441ee03dc097650778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51cf5b3e0a163af22fc48c441ee03dc097650778"}], "stats": {"total": 60, "additions": 8, "deletions": 52}, "files": [{"sha": "9c0689623cbb2271de559e8b7bcb0d11b0c8c2ee", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2346b8064304115b851646532e1738d4afdc89b8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2346b8064304115b851646532e1738d4afdc89b8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2346b8064304115b851646532e1738d4afdc89b8", "patch": "@@ -12,7 +12,8 @@\n \n \t* s-taprop-linux.adb (Monotonic_Clock): Call clock_gettime\n \tinstead of gettimeofday.\n-\t* s-osinte-linux.ads (clock_gettime): New imported subprogram.\n+\t* s-osinte-android.ads, s-osinte-android.adb, s-osinte-linux.ads\n+\t(clock_gettime): New imported subprogram.\n \n 2015-10-16  Hristian Kirtchev  <kirtchev@adacore.com>\n "}, {"sha": "0105a4c88ff1587a28fb4a53791af14cdaba154a", "filename": "gcc/ada/a-extiin.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2346b8064304115b851646532e1738d4afdc89b8/gcc%2Fada%2Fa-extiin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2346b8064304115b851646532e1738d4afdc89b8/gcc%2Fada%2Fa-extiin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-extiin.ads?ref=2346b8064304115b851646532e1738d4afdc89b8", "patch": "@@ -19,8 +19,8 @@ package Ada.Execution_Time.Interrupts is\n \n    pragma Unimplemented_Unit;\n \n-   function Clock (Interrupt : Ada.Interrupts.Interrupt_Id) return CPU_Time;\n+   function Clock (Interrupt : Ada.Interrupts.Interrupt_ID) return CPU_Time;\n \n-   function Supported (Interrupt : Ada.Interrupts.Interrupt_Id) return Boolean;\n+   function Supported (Interrupt : Ada.Interrupts.Interrupt_ID) return Boolean;\n \n end Ada.Execution_Time.Interrupts;"}, {"sha": "81103ee78d199f42834fab171f262ab0d3c6a274", "filename": "gcc/ada/s-osinte-android.adb", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2346b8064304115b851646532e1738d4afdc89b8/gcc%2Fada%2Fs-osinte-android.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2346b8064304115b851646532e1738d4afdc89b8/gcc%2Fada%2Fs-osinte-android.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-android.adb?ref=2346b8064304115b851646532e1738d4afdc89b8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---                     Copyright (C) 1995-2014, AdaCore                     --\n+--                     Copyright (C) 1995-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,6 @@ pragma Polling (Off);\n --  that are needed by children of System.\n \n with Interfaces.C;            use Interfaces.C;\n-with Interfaces.C.Extensions; use Interfaces.C.Extensions;\n \n package body System.OS_Interface is\n \n@@ -76,48 +75,4 @@ package body System.OS_Interface is\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   -------------------\n-   -- clock_gettime --\n-   -------------------\n-\n-   function clock_gettime\n-     (clock_id : clockid_t;\n-      tp       : access timespec) return int\n-   is\n-      pragma Unreferenced (clock_id);\n-\n-      --  Android/Linux don't have clock_gettime, so use gettimeofday\n-\n-      use Interfaces;\n-\n-      type timeval is array (1 .. 3) of C.long;\n-      --  The timeval array is sized to contain long_long sec and long usec.\n-      --  If long_long'Size = long'Size then it will be overly large but that\n-      --  won't effect the implementation since it's not accessed directly.\n-\n-      procedure timeval_to_duration\n-        (T    : not null access timeval;\n-         sec  : not null access C.Extensions.long_long;\n-         usec : not null access C.long);\n-      pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n-\n-      Micro  : constant := 10**6;\n-      sec    : aliased C.Extensions.long_long;\n-      usec   : aliased C.long;\n-      TV     : aliased timeval;\n-      Result : int;\n-\n-      function gettimeofday\n-        (Tv : access timeval;\n-         Tz : System.Address := System.Null_Address) return int;\n-      pragma Import (C, gettimeofday, \"gettimeofday\");\n-\n-   begin\n-      Result := gettimeofday (TV'Access, System.Null_Address);\n-      pragma Assert (Result = 0);\n-      timeval_to_duration (TV'Access, sec'Access, usec'Access);\n-      tp.all := To_Timespec (Duration (sec) + Duration (usec) / Micro);\n-      return Result;\n-   end clock_gettime;\n-\n end System.OS_Interface;"}, {"sha": "0fd39da4570b93fc5eda003e23674733299c6b0c", "filename": "gcc/ada/s-osinte-android.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2346b8064304115b851646532e1738d4afdc89b8/gcc%2Fada%2Fs-osinte-android.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2346b8064304115b851646532e1738d4afdc89b8/gcc%2Fada%2Fs-osinte-android.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-android.ads?ref=2346b8064304115b851646532e1738d4afdc89b8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -208,8 +208,8 @@ package System.OS_Interface is\n    type clockid_t is new int;\n \n    function clock_gettime\n-     (clock_id : clockid_t;\n-      tp       : access timespec) return int;\n+     (clock_id : clockid_t; tp : access timespec) return int;\n+   pragma Import (C, clock_gettime, \"clock_gettime\");\n \n    function clock_getres\n      (clock_id : clockid_t;"}]}