{"sha": "67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc2NDViZGVlNmE1YzU3YjJjZTUxYmJhZmJiNjljZjUxMGViZjE4OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-31T09:33:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-31T09:33:35Z"}, "message": "[multiple changes]\n\n2011-08-31  Jose Ruiz  <ruiz@adacore.com>\n\n\t* aspects.ads (Aspect_Id, Aspect_Argument, Aspect_Names): Add the\n\tdispatching domain aspect.\n\t* aspects.adb (Canonical_Aspect): Add entry for the dispatching domain\n\taspect.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Analyze the\n\tDispatching_Domain aspect in a similar way as we do for the Priority\n\taspect.\n\t* exp_ch9.adb (Expand_N_Task_Type_Declaration): Add the\n\tDispatching_Domain component if a Dispatching_Domain pragma or aspect\n\tis present.\n\t(Make_Task_Create_Call): Add the Dispatching_Domain when creating a task\n\t* par-prag.adb (Prag): Add Pragma_Dispatching_Domain as a known pragma.\n\t* sem_prag.adb (Analyze_Pragma): Check the correctness of a pragma\n\tDispatching_Domain and add it to the task definition.\n\t(Sig_Flags): Add Pragma_Dispatching_Domain.\n\t* rtsfind.ads, rtsfind.adb (RTU_Id, RE_Id, Get_Unit_Name): Add the\n\tsupport to find the types Dispatching_Domain and\n\tDispatching_Domain_Access.\n\t* sinfo.ads, sinfo.adb (Has_Pragma_Dispatching_Domain,\n\tSet_Has_Pragma_Dispatching_Domain): Add these subprograms to set and\n\tquery the availability of a pragma Dispatching_Domain.\n\t* snames.ads-tmpl (Name_uDispatching_Domain): Add this name required by\n\tthe expander to pass the Dispatching_Domain when creating a task.\n\t(Name_Dispatching_Domain): Add this new name for a pragma.\n\t(Pragma_Id): Add the new Pragma_Dispatching_Domain.\n\t* s-tassta.ads, s-tassta.adb (Create_Task): Set the domain to which the\n\ttask has been allocated at creation time.\n\t* s-tarest.adb (Create_Restricted_Task): The dispatching domain using\n\tRavenscar is always null.\n\t* s-taskin.ads, s-taskin.adb (Initialize_ATCB): Set the domain to which\n\tthe task has been allocated at creation time.\n\t* s-tporft.adb (Register_Foreign_Thread): A foreign task will not have\n\ta specific dispatching domain.\n\t* s-taprop-linux.adb, s-taprop-solaris.adb, s-taprop-vxworks.adb,\n\ts-taprop-mingw.adb (Create_Task): Check whether both Dispatching_Domain\n\tand CPU are specified for the task, and the CPU value is not contained\n\twithin the range of processors for the domain.\n\n2011-08-31  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Original_Gcc) : New constant String_Access.\n\t(Gnatmake): For VM targets, do not use VM version of the compiler if\n\t--GCC= has been specified.\n\n2011-08-31  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch5.adb: Minor reformatting.\n\n2011-08-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_pakd.adb (Convert_To_PAT_Type): If prefix is a function call, do\n\tnot reanalyze it.\n\n2011-08-31  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Selected_Component): Use the full type, in case\n\tthe access type is private; we don't care about privacy in expansion.\n\n2011-08-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Aggregate): In an instance, ignore aggregate\n\tsubcomponents tnat may be limited, because they originate in view\n\tconflicts. If the original aggregate is legal and the actuals are\n\tlegal, the aggregate itself is legal.\n\nFrom-SVN: r178371", "tree": {"sha": "ecfcc124dc910e1d344cfe25372f89ace3e7ecc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecfcc124dc910e1d344cfe25372f89ace3e7ecc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/comments", "author": null, "committer": null, "parents": [{"sha": "b87897272f39da4bb0fb15bf275f18f5411d1915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87897272f39da4bb0fb15bf275f18f5411d1915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87897272f39da4bb0fb15bf275f18f5411d1915"}], "stats": {"total": 439, "additions": 385, "deletions": 54}, "files": [{"sha": "58e43deeec14628bb35d1c555dffb8f489cdae14", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -1,3 +1,70 @@\n+2011-08-31  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* aspects.ads (Aspect_Id, Aspect_Argument, Aspect_Names): Add the\n+\tdispatching domain aspect.\n+\t* aspects.adb (Canonical_Aspect): Add entry for the dispatching domain\n+\taspect.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Analyze the\n+\tDispatching_Domain aspect in a similar way as we do for the Priority\n+\taspect.\n+\t* exp_ch9.adb (Expand_N_Task_Type_Declaration): Add the\n+\tDispatching_Domain component if a Dispatching_Domain pragma or aspect\n+\tis present.\n+\t(Make_Task_Create_Call): Add the Dispatching_Domain when creating a task\n+\t* par-prag.adb (Prag): Add Pragma_Dispatching_Domain as a known pragma.\n+\t* sem_prag.adb (Analyze_Pragma): Check the correctness of a pragma\n+\tDispatching_Domain and add it to the task definition.\n+\t(Sig_Flags): Add Pragma_Dispatching_Domain.\n+\t* rtsfind.ads, rtsfind.adb (RTU_Id, RE_Id, Get_Unit_Name): Add the\n+\tsupport to find the types Dispatching_Domain and\n+\tDispatching_Domain_Access.\n+\t* sinfo.ads, sinfo.adb (Has_Pragma_Dispatching_Domain,\n+\tSet_Has_Pragma_Dispatching_Domain): Add these subprograms to set and\n+\tquery the availability of a pragma Dispatching_Domain.\n+\t* snames.ads-tmpl (Name_uDispatching_Domain): Add this name required by\n+\tthe expander to pass the Dispatching_Domain when creating a task.\n+\t(Name_Dispatching_Domain): Add this new name for a pragma.\n+\t(Pragma_Id): Add the new Pragma_Dispatching_Domain.\n+\t* s-tassta.ads, s-tassta.adb (Create_Task): Set the domain to which the\n+\ttask has been allocated at creation time.\n+\t* s-tarest.adb (Create_Restricted_Task): The dispatching domain using\n+\tRavenscar is always null.\n+\t* s-taskin.ads, s-taskin.adb (Initialize_ATCB): Set the domain to which\n+\tthe task has been allocated at creation time.\n+\t* s-tporft.adb (Register_Foreign_Thread): A foreign task will not have\n+\ta specific dispatching domain.\n+\t* s-taprop-linux.adb, s-taprop-solaris.adb, s-taprop-vxworks.adb,\n+\ts-taprop-mingw.adb (Create_Task): Check whether both Dispatching_Domain\n+\tand CPU are specified for the task, and the CPU value is not contained\n+\twithin the range of processors for the domain.\n+\n+2011-08-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Original_Gcc) : New constant String_Access.\n+\t(Gnatmake): For VM targets, do not use VM version of the compiler if\n+\t--GCC= has been specified.\n+\n+2011-08-31  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch5.adb: Minor reformatting.\n+\n+2011-08-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_pakd.adb (Convert_To_PAT_Type): If prefix is a function call, do\n+\tnot reanalyze it.\n+\n+2011-08-31  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Selected_Component): Use the full type, in case\n+\tthe access type is private; we don't care about privacy in expansion.\n+\n+2011-08-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Aggregate): In an instance, ignore aggregate\n+\tsubcomponents tnat may be limited, because they originate in view\n+\tconflicts. If the original aggregate is legal and the actuals are\n+\tlegal, the aggregate itself is legal.\n+\n 2011-08-31  Matthew Heaney  <heaney@adacore.com>\n \n \t* a-rbtgbo.adb (Clear_Tree): Assert representation invariant for lock"}, {"sha": "5d374c81401003b42680bfb8746342f3caf2d3b7", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -223,6 +223,7 @@ package body Aspects is\n     Aspect_Default_Iterator             => Aspect_Default_Iterator,\n     Aspect_Default_Value                => Aspect_Default_Value,\n     Aspect_Discard_Names                => Aspect_Discard_Names,\n+    Aspect_Dispatching_Domain           => Aspect_Dispatching_Domain,\n     Aspect_Dynamic_Predicate            => Aspect_Predicate,\n     Aspect_External_Tag                 => Aspect_External_Tag,\n     Aspect_Favor_Top_Level              => Aspect_Favor_Top_Level,"}, {"sha": "82ddec2b6e9e0629826ccce80e76a64c86a1de8b", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -53,6 +53,7 @@ package Aspects is\n       Aspect_Default_Component_Value,\n       Aspect_Default_Iterator,\n       Aspect_Default_Value,\n+      Aspect_Dispatching_Domain,\n       Aspect_Dynamic_Predicate,\n       Aspect_External_Tag,\n       Aspect_Implicit_Dereference,\n@@ -190,6 +191,7 @@ package Aspects is\n                         Aspect_Default_Component_Value => Expression,\n                         Aspect_Default_Iterator        => Name,\n                         Aspect_Default_Value           => Expression,\n+                        Aspect_Dispatching_Domain      => Expression,\n                         Aspect_Dynamic_Predicate       => Expression,\n                         Aspect_External_Tag            => Expression,\n                         Aspect_Implicit_Dereference    => Name,\n@@ -250,6 +252,7 @@ package Aspects is\n      Aspect_Default_Value                => Name_Default_Value,\n      Aspect_Default_Component_Value      => Name_Default_Component_Value,\n      Aspect_Discard_Names                => Name_Discard_Names,\n+     Aspect_Dispatching_Domain           => Name_Dispatching_Domain,\n      Aspect_Dynamic_Predicate            => Name_Dynamic_Predicate,\n      Aspect_Elaborate_Body               => Name_Elaborate_Body,\n      Aspect_External_Tag                 => Name_External_Tag,"}, {"sha": "e7d179150e371480d8affd06b39d780221cace55", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -7920,6 +7920,7 @@ package body Exp_Ch4 is\n       --  Insert explicit dereference if required\n \n       if Is_Access_Type (Ptyp) then\n+         Set_Etype (P, Ptyp); -- in case it's private\n          Insert_Explicit_Dereference (P);\n          Analyze_And_Resolve (P, Designated_Type (Ptyp));\n "}, {"sha": "4dd7a434d75fc4369f096b27f593051403396b85", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 68, "deletions": 6, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -10422,12 +10422,14 @@ package body Exp_Ch9 is\n    --  values of this task. The general form of this type declaration is\n \n    --    type taskV (discriminants) is record\n-   --      _Task_Id     : Task_Id;\n-   --      entry_family : array (bounds) of Void;\n-   --      _Priority    : Integer         := priority_expression;\n-   --      _Size        : Size_Type       := Size_Type (size_expression);\n-   --      _Task_Info   : Task_Info_Type  := task_info_expression;\n-   --      _CPU         : Integer         := cpu_range_expression;\n+   --      _Task_Id           : Task_Id;\n+   --      entry_family       : array (bounds) of Void;\n+   --      _Priority          : Integer            := priority_expression;\n+   --      _Size              : Size_Type          := size_expression;\n+   --      _Task_Info         : Task_Info_Type     := task_info_expression;\n+   --      _CPU               : Integer            := cpu_range_expression;\n+   --      _Relative_Deadline : Time_Span          := time_span_expression;\n+   --      _Domain            : Dispatching_Domain := dd_expression;\n    --    end record;\n \n    --  The discriminants are present only if the corresponding task type has\n@@ -10471,6 +10473,11 @@ package body Exp_Ch9 is\n    --  argument that was present in the pragma, and is used to provide the\n    --  Relative_Deadline parameter to the call to Create_Task.\n \n+   --  The _Domain field is present only if a Dispatching_Domain pragma or\n+   --  aspect appears in the task definition. The expression captures the\n+   --  argument that was present in the pragma or aspect, and is used to\n+   --  provide the Dispatching_Domain parameter to the call to Create_Task.\n+\n    --  When a task is declared, an instance of the task value record is\n    --  created. The elaboration of this declaration creates the correct bounds\n    --  for the entry families, and also evaluates the size, priority, and\n@@ -10833,6 +10840,36 @@ package body Exp_Ch9 is\n                          (Taskdef, Name_Relative_Deadline))))))));\n       end if;\n \n+      --  Add the _Dispatching_Domain component if a Dispatching_Domain pragma\n+      --  or aspect is present. If we are using a restricted run time this\n+      --  component will not be added (dispatching domains are not allowed by\n+      --  the Ravenscar profile).\n+\n+      if not Restricted_Profile\n+        and then Present (Taskdef)\n+        and then Has_Pragma_Dispatching_Domain (Taskdef)\n+      then\n+         Append_To (Cdecls,\n+           Make_Component_Declaration (Loc,\n+             Defining_Identifier =>\n+               Make_Defining_Identifier (Loc, Name_uDispatching_Domain),\n+\n+             Component_Definition =>\n+               Make_Component_Definition (Loc,\n+                 Aliased_Present    => False,\n+                 Subtype_Indication =>\n+                   New_Reference_To\n+                     (RTE (RE_Dispatching_Domain_Access), Loc)),\n+\n+             Expression =>\n+               Unchecked_Convert_To (RTE (RE_Dispatching_Domain_Access),\n+                 Relocate_Node (\n+                   Expression (First (\n+                     Pragma_Argument_Associations (\n+                       Find_Task_Or_Protected_Pragma\n+                         (Taskdef, Name_Dispatching_Domain))))))));\n+      end if;\n+\n       Insert_After (Size_Decl, Rec_Decl);\n \n       --  Analyze the record declaration immediately after construction,\n@@ -12782,6 +12819,31 @@ package body Exp_Ch9 is\n               New_Reference_To (RTE (RE_Time_Span_Zero), Loc));\n          end if;\n \n+         --  Dispatching_Domain parameter. If no Dispatching_Domain pragma or\n+         --  aspect is present, then the dispatching domain is null. If a\n+         --  pragma or aspect is present, then the dispatching domain is taken\n+         --  from the _Dispatching_Domain field of the task value record,\n+         --  which was set from the pragma value. Note that this parameter\n+         --  must not be generated for the restricted profiles since Ravenscar\n+         --  does not allow dispatching domains.\n+\n+         --  Case where pragma or aspect Dispatching_Domain applies: use given\n+         --  value.\n+\n+         if Present (Tdef) and then Has_Pragma_Dispatching_Domain (Tdef) then\n+            Append_To (Args,\n+              Make_Selected_Component (Loc,\n+                Prefix        =>\n+                  Make_Identifier (Loc, Name_uInit),\n+                Selector_Name =>\n+                  Make_Identifier (Loc, Name_uDispatching_Domain)));\n+\n+         --  No pragma or aspect Dispatching_Domain apply to the task\n+\n+         else\n+            Append_To (Args, Make_Null (Loc));\n+         end if;\n+\n          --  Number of entries. This is an expression of the form:\n \n          --    n + _Init.a'Length + _Init.a'B'Length + ..."}, {"sha": "9b95adc829e4925eec6dd02e76ee9ca95c12e9d9", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -702,7 +702,9 @@ package body Exp_Pakd is\n       --  see Reset_Packed_Prefix. On the other hand, if the prefix is a simple\n       --  array reference, reanalysis can produce spurious type errors when the\n       --  PAT type is replaced again with the original type of the array. Same\n-      --  for the case of a dereference. The following is correct and minimal,\n+      --  for the case of a dereference. Ditto for function calls: expansion\n+      --  may introduce additional actuals which will trigger errors if call\n+      --  is reanalyzed. The following is correct and minimal,\n       --  but the handling of more complex packed expressions in actuals is\n       --  confused. Probably the problem only remains for actuals in calls.\n \n@@ -713,6 +715,7 @@ package body Exp_Pakd is\n            (Nkind (Aexp) = N_Indexed_Component\n              and then Is_Entity_Name (Prefix (Aexp)))\n         or else Nkind (Aexp) = N_Explicit_Dereference\n+        or else Nkind (Aexp) = N_Function_Call\n       then\n          Set_Analyzed (Aexp);\n       end if;"}, {"sha": "13777bbf0c519b188e7f198677953a0257d4724c", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -671,7 +671,12 @@ package body Make is\n    -- Compiler, Binder & Linker Data and Subprograms --\n    ----------------------------------------------------\n \n-   Gcc      : String_Access := Program_Name (\"gcc\", \"gnatmake\");\n+   Gcc          : String_Access := Program_Name (\"gcc\", \"gnatmake\");\n+   Original_Gcc : constant String_Access := Gcc;\n+   --  Original_Gcc is used to check if Gcc has been modified by a switch\n+   --  --GCC=, so that for VM platforms, it is not modified again, as it can\n+   --  result in incorrect error messages if the compiler cannot be found.\n+\n    Gnatbind : String_Access := Program_Name (\"gnatbind\", \"gnatmake\");\n    Gnatlink : String_Access := Program_Name (\"gnatlink\", \"gnatmake\");\n    --  Default compiler, binder, linker programs\n@@ -5973,10 +5978,6 @@ package body Make is\n          Gnatlink := Saved_Gnatlink;\n       end if;\n \n-      Gcc_Path       := GNAT.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n-      Gnatbind_Path  := GNAT.OS_Lib.Locate_Exec_On_Path (Gnatbind.all);\n-      Gnatlink_Path  := GNAT.OS_Lib.Locate_Exec_On_Path (Gnatlink.all);\n-\n       Bad_Compilation.Init;\n \n       --  If project files are used, create the mapping of all the sources, so\n@@ -6068,16 +6069,29 @@ package body Make is\n                      --  instead.\n \n                      Check_Object_Consistency := False;\n-                     Gcc := new String'(\"jvm-gnatcompile\");\n+\n+                     --  Do not modify Gcc is --GCC= was specified\n+\n+                     if Gcc = Original_Gcc then\n+                        Gcc := new String'(\"jvm-gnatcompile\");\n+                     end if;\n \n                   when Targparm.CLI_Target =>\n-                     Gcc := new String'(\"dotnet-gnatcompile\");\n+                     --  Do not modify Gcc is --GCC= was specified\n+\n+                     if Gcc = Original_Gcc then\n+                        Gcc := new String'(\"dotnet-gnatcompile\");\n+                     end if;\n \n                   when Targparm.No_VM =>\n                      raise Program_Error;\n                end case;\n             end if;\n \n+            Gcc_Path       := GNAT.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n+            Gnatbind_Path  := GNAT.OS_Lib.Locate_Exec_On_Path (Gnatbind.all);\n+            Gnatlink_Path  := GNAT.OS_Lib.Locate_Exec_On_Path (Gnatlink.all);\n+\n             --  If we have specified -j switch both from the project file\n             --  and on the command line, the one from the command line takes\n             --  precedence."}, {"sha": "5ab9f94a4a87e177e23f5d577fd8361dcd65f1ef", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -1128,6 +1128,7 @@ begin\n            Pragma_Default_Storage_Pool          |\n            Pragma_Dimension                     |\n            Pragma_Discard_Names                 |\n+           Pragma_Dispatching_Domain            |\n            Pragma_Eliminate                     |\n            Pragma_Elaborate                     |\n            Pragma_Elaborate_All                 |"}, {"sha": "bb963d097e8a2396de3cc167c4a4d8a52afa7a2e", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -321,6 +321,10 @@ package body Rtsfind is\n       elsif U_Id in System_Child then\n          Name_Buffer (7) := '.';\n \n+         if U_Id in System_Multiprocessors_Child then\n+            Name_Buffer (23) := '.';\n+         end if;\n+\n          if U_Id in System_Storage_Pools_Child then\n             Name_Buffer (21) := '.';\n          end if;"}, {"sha": "46b43dad3d8cae1cbfd21b23b4f3a108b969bfe2", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -371,6 +371,10 @@ package Rtsfind is\n       System_WWd_Enum,\n       System_WWd_Wchar,\n \n+      --  Children of System.Multiprocessors\n+\n+      System_Multiprocessors_Dispatching_Domains,\n+\n       --  Children of System.Storage_Pools\n \n       System_Storage_Pools_Subpools,\n@@ -440,6 +444,11 @@ package Rtsfind is\n      range System_Address_Image .. System_Tasking_Stages;\n    --  Range of values for children or grandchildren of System\n \n+   subtype System_Multiprocessors_Child is RTU_Id\n+     range System_Multiprocessors_Dispatching_Domains ..\n+       System_Multiprocessors_Dispatching_Domains;\n+   --  Range of values for children of System.Multiprocessors\n+\n    subtype System_Storage_Pools_Child is RTU_Id\n      range System_Storage_Pools_Subpools .. System_Storage_Pools_Subpools;\n \n@@ -1446,6 +1455,8 @@ package Rtsfind is\n \n      RE_Unspecified_CPU,                 -- System.Tasking\n \n+     RE_Dispatching_Domain_Access,       -- System.Tasking\n+\n      RE_Abort_Defer,                     -- System.Soft_Links\n      RE_Abort_Undefer,                   -- System.Soft_Links\n      RE_Complete_Master,                 -- System.Soft_Links\n@@ -1588,6 +1599,8 @@ package Rtsfind is\n      RE_Width_Wide_Character,            -- System.Wid_WChar\n      RE_Width_Wide_Wide_Character,       -- System.Wid_WChar\n \n+     RE_Dispatching_Domain,              -- Dispatching_Domains\n+\n      RE_Protected_Entry_Body_Array,      -- Tasking.Protected_Objects.Entries\n      RE_Protection_Entries,              -- Tasking.Protected_Objects.Entries\n      RE_Protection_Entries_Access,       -- Tasking.Protected_Objects.Entries\n@@ -2635,6 +2648,8 @@ package Rtsfind is\n \n      RE_Unspecified_CPU                  => System_Tasking,\n \n+     RE_Dispatching_Domain_Access        => System_Tasking,\n+\n      RE_Abort_Defer                      => System_Soft_Links,\n      RE_Abort_Undefer                    => System_Soft_Links,\n      RE_Complete_Master                  => System_Soft_Links,\n@@ -2778,6 +2793,9 @@ package Rtsfind is\n      RE_Width_Wide_Character             => System_Wid_WChar,\n      RE_Width_Wide_Wide_Character        => System_Wid_WChar,\n \n+     RE_Dispatching_Domain               =>\n+       System_Multiprocessors_Dispatching_Domains,\n+\n      RE_Protected_Entry_Body_Array       =>\n        System_Tasking_Protected_Objects_Entries,\n      RE_Protection_Entries               =>"}, {"sha": "cc1650f8b4d0bb11b35831104663a096a4c39df1", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -818,6 +818,18 @@ package body System.Task_Primitives.Operations is\n       use type System.Multiprocessors.CPU_Range;\n \n    begin\n+      --  Check whether both Dispatching_Domain and CPU are specified for the\n+      --  task, and the CPU value is not contained within the range of\n+      --  processors for the domain.\n+\n+      if T.Common.Domain /= null and then\n+        (T.Common.Base_CPU not in T.Common.Domain'Range\n+         or else not T.Common.Domain (T.Common.Base_CPU))\n+      then\n+         Succeeded := False;\n+         return;\n+      end if;\n+\n       Adjusted_Stack_Size :=\n          Interfaces.C.size_t (Stack_Size + Alternate_Stack_Size);\n "}, {"sha": "861ef245d66c08d6263502a63ec631d0e791bc1b", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -895,9 +895,19 @@ package body System.Task_Primitives.Operations is\n       Result         : DWORD;\n       Entry_Point    : PTHREAD_START_ROUTINE;\n \n-      use type System.Multiprocessors.CPU_Range;\n-\n    begin\n+      --  Check whether both Dispatching_Domain and CPU are specified for the\n+      --  task, and the CPU value is not contained within the range of\n+      --  processors for the domain.\n+\n+      if T.Common.Domain /= null and then\n+        (T.Common.Base_CPU not in T.Common.Domain'Range\n+         or else not T.Common.Domain (T.Common.Base_CPU))\n+      then\n+         Succeeded := False;\n+         return;\n+      end if;\n+\n       pTaskParameter := To_Address (T);\n \n       Entry_Point := To_PTHREAD_START_ROUTINE (Wrapper);"}, {"sha": "f77061d08dfc6dfb8292495614703537a3d0efcd", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -976,6 +976,18 @@ package body System.Task_Primitives.Operations is\n       use System.Task_Info;\n \n    begin\n+      --  Check whether both Dispatching_Domain and CPU are specified for the\n+      --  task, and the CPU value is not contained within the range of\n+      --  processors for the domain.\n+\n+      if T.Common.Domain /= null and then\n+        (T.Common.Base_CPU not in T.Common.Domain'Range\n+         or else not T.Common.Domain (T.Common.Base_CPU))\n+      then\n+         Succeeded := False;\n+         return;\n+      end if;\n+\n       Adjusted_Stack_Size := Interfaces.C.size_t (Stack_Size + Page_Size);\n \n       --  Since the initial signal mask of a thread is inherited from the"}, {"sha": "86372226a5b0b79ed139375ac33dbd0677bf0944", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -891,6 +891,18 @@ package body System.Task_Primitives.Operations is\n       Adjusted_Stack_Size : size_t;\n \n    begin\n+      --  Check whether both Dispatching_Domain and CPU are specified for the\n+      --  task, and the CPU value is not contained within the range of\n+      --  processors for the domain.\n+\n+      if T.Common.Domain /= null and then\n+        (T.Common.Base_CPU not in T.Common.Domain'Range\n+         or else not T.Common.Domain (T.Common.Base_CPU))\n+      then\n+         Succeeded := False;\n+         return;\n+      end if;\n+\n       --  Ask for four extra bytes of stack space so that the ATCB pointer can\n       --  be stored below the stack limit, plus extra space for the frame of\n       --  Task_Wrapper. This is so the user gets the amount of stack requested"}, {"sha": "aab0ac7319e53c214a051c09a4956d7ca0ee027b", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -505,11 +505,13 @@ package body System.Tasking.Restricted.Stages is\n       Write_Lock (Self_ID);\n \n       --  With no task hierarchy, the parent of all non-Environment tasks that\n-      --  are created must be the Environment task\n+      --  are created must be the Environment task. Dispatching domains are\n+      --  not allowed in Ravenscar, so the dispatching domain parameter will\n+      --  always be null.\n \n       Initialize_ATCB\n         (Self_ID, State, Discriminants, Self_ID, Elaborated, Base_Priority,\n-         Base_CPU, Task_Info, Size, Created_Task, Success);\n+         Base_CPU, null, Task_Info, Size, Created_Task, Success);\n \n       --  If we do our job right then there should never be any failures, which\n       --  was probably said about the Titanic; so just to be safe, let's retain"}, {"sha": "feb1fe91d3714f153680537f9cbf0ab1d773ad8c", "filename": "gcc/ada/s-taskin.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taskin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taskin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -99,6 +99,7 @@ package body System.Tasking is\n       Elaborated       : Access_Boolean;\n       Base_Priority    : System.Any_Priority;\n       Base_CPU         : System.Multiprocessors.CPU_Range;\n+      Domain           : Dispatching_Domain_Access;\n       Task_Info        : System.Task_Info.Task_Info_Type;\n       Stack_Size       : System.Parameters.Size_Type;\n       T                : Task_Id;\n@@ -121,6 +122,7 @@ package body System.Tasking is\n       T.Common.Parent                   := Parent;\n       T.Common.Base_Priority            := Base_Priority;\n       T.Common.Base_CPU                 := Base_CPU;\n+      T.Common.Domain                   := Domain;\n       T.Common.Current_Priority         := 0;\n       T.Common.Protected_Action_Nesting := 0;\n       T.Common.Call                     := null;\n@@ -209,7 +211,7 @@ package body System.Tasking is\n       T := STPO.New_ATCB (0);\n       Initialize_ATCB\n         (null, null, Null_Address, Null_Task, null, Base_Priority, Base_CPU,\n-         Task_Info.Unspecified_Task_Info, 0, T, Success);\n+         null, Task_Info.Unspecified_Task_Info, 0, T, Success);\n       pragma Assert (Success);\n \n       STPO.Initialize (T);"}, {"sha": "67e380a0445004e2b7e094cf5929cfba0098402a", "filename": "gcc/ada/s-taskin.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.ads?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -1136,6 +1136,7 @@ package System.Tasking is\n       Elaborated       : Access_Boolean;\n       Base_Priority    : System.Any_Priority;\n       Base_CPU         : System.Multiprocessors.CPU_Range;\n+      Domain           : Dispatching_Domain_Access;\n       Task_Info        : System.Task_Info.Task_Info_Type;\n       Stack_Size       : System.Parameters.Size_Type;\n       T                : Task_Id;"}, {"sha": "994b3958757070797de49ec7be445d3ec09f1602", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -475,6 +475,7 @@ package body System.Tasking.Stages is\n       Task_Info         : System.Task_Info.Task_Info_Type;\n       CPU               : Integer;\n       Relative_Deadline : Ada.Real_Time.Time_Span;\n+      Domain            : Dispatching_Domain_Access;\n       Num_Entries       : Task_Entry_Index;\n       Master            : Master_Level;\n       State             : Task_Procedure_Access;\n@@ -591,7 +592,7 @@ package body System.Tasking.Stages is\n       end if;\n \n       Initialize_ATCB (Self_ID, State, Discriminants, P, Elaborated,\n-        Base_Priority, Base_CPU, Task_Info, Size, T, Success);\n+        Base_Priority, Base_CPU, Domain, Task_Info, Size, T, Success);\n \n       if not Success then\n          Free (T);\n@@ -642,12 +643,13 @@ package body System.Tasking.Stages is\n          T.Common.Task_Image_Len := Len;\n       end if;\n \n-      --  ??? For the moment the task inherits the dispatching domain of the\n-      --  parent. It will change when support for the Dispatching_Domain\n-      --  aspect will be added, because that will allow setting the domain\n-      --  in the spec of the task.\n+      --  The task inherits the dispatching domain of the parent only if no\n+      --  specific domain has been defined in the spec of the task (using the\n+      --  dispatching domain pragma or aspect).\n \n-      if T.Common.Activator /= null then\n+      if T.Common.Domain /= null then\n+         null;\n+      elsif T.Common.Activator /= null then\n          T.Common.Domain := T.Common.Activator.Common.Domain;\n       else\n          T.Common.Domain := System.Tasking.System_Domain;"}, {"sha": "9058d068a4a7441a68886325f19e4ab524d9cab9", "filename": "gcc/ada/s-tassta.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-tassta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-tassta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.ads?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -172,6 +172,7 @@ package System.Tasking.Stages is\n       Task_Info         : System.Task_Info.Task_Info_Type;\n       CPU               : Integer;\n       Relative_Deadline : Ada.Real_Time.Time_Span;\n+      Domain            : Dispatching_Domain_Access;\n       Num_Entries       : Task_Entry_Index;\n       Master            : Master_Level;\n       State             : Task_Procedure_Access;\n@@ -195,6 +196,8 @@ package System.Tasking.Stages is\n    --   before setting the affinity at run time.\n    --  Relative_Deadline is the relative deadline associated with the created\n    --   task by means of a pragma Relative_Deadline, or 0.0 if none.\n+   --  Domain is the dispatching domain associated with the created task by\n+   --   means of a Dispatching_Domain pragma or aspect, or null if none.\n    --  State is the compiler generated task's procedure body\n    --  Discriminants is a pointer to a limited record whose discriminants\n    --   are those of the task to create. This parameter should be passed as"}, {"sha": "1da2290199731ce1bb1f49d803c52621c30d44b8", "filename": "gcc/ada/s-tporft.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-tporft.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fs-tporft.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tporft.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 2002-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,7 +65,7 @@ begin\n    System.Tasking.Initialize_ATCB\n      (Self_Id, null, Null_Address, Null_Task,\n       Foreign_Task_Elaborated'Access,\n-      System.Priority'First, System.Multiprocessors.Not_A_Specific_CPU,\n+      System.Priority'First, System.Multiprocessors.Not_A_Specific_CPU, null,\n       Task_Info.Unspecified_Task_Info, 0, Self_Id, Succeeded);\n    Unlock_RTS;\n    pragma Assert (Succeeded);"}, {"sha": "ebd6e9393b0880bc251b4daf80a2905f8c1ea398", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -1052,8 +1052,14 @@ package body Sem_Aggr is\n       end if;\n \n       --  Ada 2005 (AI-287): Limited aggregates allowed\n+      --  In an instance, ignore aggregate subcomponents tnat may be limited,\n+      --  because they originate in view conflicts. If the original aggregate\n+      --  is legal and the actuals are legal, the aggregate itself is legal.\n \n-      if Is_Limited_Type (Typ) and then Ada_Version < Ada_2005 then\n+      if Is_Limited_Type (Typ)\n+        and then Ada_Version < Ada_2005\n+        and then not In_Instance\n+      then\n          Error_Msg_N (\"aggregate type cannot be limited\", N);\n          Explain_Limited_Type (Typ, N);\n "}, {"sha": "f703a5bbc346067b1273c23b393c5d228a5efd63", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 36, "deletions": 23, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -1149,29 +1149,36 @@ package body Sem_Ch13 is\n \n                   pragma Assert (not Delay_Required);\n \n-               when Aspect_Priority | Aspect_Interrupt_Priority => declare\n-                  Pname : Name_Id;\n+               when Aspect_Priority           |\n+                    Aspect_Interrupt_Priority |\n+                    Aspect_Dispatching_Domain =>\n+                  declare\n+                     Pname : Name_Id;\n+                  begin\n+                     if A_Id = Aspect_Priority then\n+                        Pname := Name_Priority;\n \n-               begin\n-                  if A_Id = Aspect_Priority then\n-                     Pname := Name_Priority;\n-                  else\n-                     Pname := Name_Interrupt_Priority;\n-                  end if;\n+                     elsif A_Id = Aspect_Interrupt_Priority then\n+                        Pname := Name_Interrupt_Priority;\n \n-                  Aitem :=\n-                    Make_Pragma (Loc,\n-                      Pragma_Identifier            =>\n-                        Make_Identifier (Sloc (Id), Pname),\n-                      Pragma_Argument_Associations =>\n-                        New_List\n-                          (Make_Pragma_Argument_Association\n-                            (Sloc (Id), Expression => Relocate_Node (Expr))));\n+                     else\n+                        Pname := Name_Dispatching_Domain;\n+                     end if;\n \n-                  Set_From_Aspect_Specification (Aitem, True);\n+                     Aitem :=\n+                       Make_Pragma (Loc,\n+                           Pragma_Identifier            =>\n+                             Make_Identifier (Sloc (Id), Pname),\n+                           Pragma_Argument_Associations =>\n+                             New_List\n+                               (Make_Pragma_Argument_Association\n+                                  (Sloc       => Sloc (Id),\n+                                   Expression => Relocate_Node (Expr))));\n \n-                  pragma Assert (not Delay_Required);\n-               end;\n+                     Set_From_Aspect_Specification (Aitem, True);\n+\n+                     pragma Assert (not Delay_Required);\n+                  end;\n \n                --  Aspects Pre/Post generate Precondition/Postcondition pragmas\n                --  with a first argument that is the expression, and a second\n@@ -1490,7 +1497,9 @@ package body Sem_Ch13 is\n                      --  protected definition, which we need to create if it's\n                      --  not there.\n \n-                     when Aspect_Priority | Aspect_Interrupt_Priority =>\n+                     when Aspect_Priority           |\n+                          Aspect_Interrupt_Priority |\n+                          Aspect_Dispatching_Domain =>\n                         declare\n                            T : Node_Id; -- the type declaration\n                            L : List_Id; -- list of decls of task/protected\n@@ -1503,7 +1512,9 @@ package body Sem_Ch13 is\n                               T := N;\n                            end if;\n \n-                           if Nkind (T) = N_Protected_Type_Declaration then\n+                           if Nkind (T) = N_Protected_Type_Declaration\n+                             and then A_Id /= Aspect_Dispatching_Domain\n+                           then\n                               pragma Assert\n                                 (Present (Protected_Definition (T)));\n \n@@ -1520,8 +1531,7 @@ package body Sem_Ch13 is\n                                        End_Label => Empty));\n                               end if;\n \n-                              L := Visible_Declarations\n-                                     (Task_Definition (T));\n+                              L := Visible_Declarations (Task_Definition (T));\n \n                            else\n                               raise Program_Error;\n@@ -5880,6 +5890,9 @@ package body Sem_Ch13 is\n          when Aspect_Bit_Order =>\n             T := RTE (RE_Bit_Order);\n \n+         when Aspect_Dispatching_Domain =>\n+            T := RTE (RE_Dispatching_Domain);\n+\n          when Aspect_External_Tag =>\n             T := Standard_String;\n "}, {"sha": "e93d00ec6ea59f88742aa691e9772bd12b8ec05d", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -2058,7 +2058,7 @@ package body Sem_Ch5 is\n                         end if;\n \n                         --  Set kind of loop parameter, which may be used in\n-                        --  the subsequent analysis of of the condition in a\n+                        --  the subsequent analysis of the condition in a\n                         --  quantified expression.\n \n                         Set_Ekind (Id, E_Loop_Parameter);"}, {"sha": "8f5909fdb7f7d87ea6c7b48f67ffb87a9c966a53", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -7866,6 +7866,54 @@ package body Sem_Prag is\n             end if;\n          end Discard_Names;\n \n+         ------------------------\n+         -- Dispatching_Domain --\n+         ------------------------\n+\n+         --  pragma Dispatching_Domain (EXPRESSION);\n+\n+         when Pragma_Dispatching_Domain => Dispatching_Domain : declare\n+            P   : constant Node_Id := Parent (N);\n+            Arg : Node_Id;\n+\n+         begin\n+            Ada_2012_Pragma;\n+            Check_No_Identifiers;\n+            Check_Arg_Count (1);\n+\n+            --  This pragma is born obsolete, but not the aspect\n+\n+            if not From_Aspect_Specification (N) then\n+               Check_Restriction\n+                 (No_Obsolescent_Features, Pragma_Identifier (N));\n+            end if;\n+\n+            if Nkind (P) = N_Task_Definition then\n+               Arg := Get_Pragma_Arg (Arg1);\n+\n+               --  The expression must be analyzed in the special manner\n+               --  described in \"Handling of Default and Per-Object\n+               --  Expressions\" in sem.ads.\n+\n+               Preanalyze_Spec_Expression (Arg, RTE (RE_Dispatching_Domain));\n+\n+            --  Anything else is incorrect\n+\n+            else\n+               Pragma_Misplaced;\n+            end if;\n+\n+            if Has_Pragma_Dispatching_Domain (P) then\n+               Error_Pragma (\"duplicate pragma% not allowed\");\n+            else\n+               Set_Has_Pragma_Dispatching_Domain (P, True);\n+\n+               if Nkind (P) = N_Task_Definition then\n+                  Record_Rep_Item (Defining_Identifier (Parent (P)), N);\n+               end if;\n+            end if;\n+         end Dispatching_Domain;\n+\n          ---------------\n          -- Elaborate --\n          ---------------\n@@ -14462,6 +14510,7 @@ package body Sem_Prag is\n       Pragma_Default_Storage_Pool          => -1,\n       Pragma_Dimension                     => -1,\n       Pragma_Discard_Names                 =>  0,\n+      Pragma_Dispatching_Domain            => -1,\n       Pragma_Elaborate                     => -1,\n       Pragma_Elaborate_All                 => -1,\n       Pragma_Elaborate_Body                => -1,"}, {"sha": "4c9d6aa5d5edcce21fc153b0c10bcd195292983d", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -1471,6 +1471,14 @@ package body Sinfo is\n       return Flag14 (N);\n    end Has_Pragma_CPU;\n \n+   function Has_Pragma_Dispatching_Domain\n+     (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Task_Definition);\n+      return Flag15 (N);\n+   end Has_Pragma_Dispatching_Domain;\n+\n    function Has_Pragma_Priority\n       (N : Node_Id) return Boolean is\n    begin\n@@ -4513,6 +4521,14 @@ package body Sinfo is\n       Set_Flag14 (N, Val);\n    end Set_Has_Pragma_CPU;\n \n+   procedure Set_Has_Pragma_Dispatching_Domain\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Task_Definition);\n+      Set_Flag15 (N, Val);\n+   end Set_Has_Pragma_Dispatching_Domain;\n+\n    procedure Set_Has_Pragma_Priority\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "5e520cb5200d69f4b45afbe6c5e328c4ebfb34ce", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -1145,6 +1145,11 @@ package Sinfo is\n    --    flag the presence of a CPU pragma in the declaration sequence (public\n    --    or private in the task case).\n \n+   --  Has_Pragma_Dispatching_Domain (Flag15-Sem)\n+   --    A flag present in N_Task_Definition nodes to flag the presence of a\n+   --    Dispatching_Domain pragma in the declaration sequence (public or\n+   --    private in the task case).\n+\n    --  Has_Pragma_Suppress_All (Flag14-Sem)\n    --    This flag is set in an N_Compilation_Unit node if the Suppress_All\n    --    pragma appears anywhere in the unit. This accommodates the rather\n@@ -5061,6 +5066,7 @@ package Sinfo is\n       --  Has_Task_Name_Pragma (Flag8-Sem)\n       --  Has_Relative_Deadline_Pragma (Flag9-Sem)\n       --  Has_Pragma_CPU (Flag14-Sem)\n+      --  Has_Pragma_Dispatching_Domain (Flag15-Sem)\n \n       --------------------\n       -- 9.1  Task Item --\n@@ -8493,6 +8499,9 @@ package Sinfo is\n    function Has_Pragma_CPU\n      (N : Node_Id) return Boolean;    -- Flag14\n \n+   function Has_Pragma_Dispatching_Domain\n+     (N : Node_Id) return Boolean;    -- Flag15\n+\n    function Has_Pragma_Priority\n      (N : Node_Id) return Boolean;    -- Flag6\n \n@@ -9462,6 +9471,9 @@ package Sinfo is\n    procedure Set_Has_Pragma_CPU\n      (N : Node_Id; Val : Boolean := True);    -- Flag14\n \n+   procedure Set_Has_Pragma_Dispatching_Domain\n+     (N : Node_Id; Val : Boolean := True);    -- Flag15\n+\n    procedure Set_Has_Pragma_Priority\n      (N : Node_Id; Val : Boolean := True);    -- Flag6\n \n@@ -11875,6 +11887,7 @@ package Sinfo is\n    pragma Inline (Has_Self_Reference);\n    pragma Inline (Has_No_Elaboration_Code);\n    pragma Inline (Has_Pragma_CPU);\n+   pragma Inline (Has_Pragma_Dispatching_Domain);\n    pragma Inline (Has_Pragma_Priority);\n    pragma Inline (Has_Pragma_Suppress_All);\n    pragma Inline (Has_Private_View);\n@@ -12194,6 +12207,7 @@ package Sinfo is\n    pragma Inline (Set_Has_Dynamic_Range_Check);\n    pragma Inline (Set_Has_No_Elaboration_Code);\n    pragma Inline (Set_Has_Pragma_CPU);\n+   pragma Inline (Set_Has_Pragma_Dispatching_Domain);\n    pragma Inline (Set_Has_Pragma_Priority);\n    pragma Inline (Set_Has_Pragma_Suppress_All);\n    pragma Inline (Set_Has_Private_View);"}, {"sha": "964e516bc62a6451f930d565b413d18b0f827f84", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67645bdee6a5c57b2ce51bbafbb69cf510ebf189/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=67645bdee6a5c57b2ce51bbafbb69cf510ebf189", "patch": "@@ -156,6 +156,7 @@ package Snames is\n    Name_uChain                         : constant Name_Id := N + $;\n    Name_uController                    : constant Name_Id := N + $;\n    Name_uCPU                           : constant Name_Id := N + $;\n+   Name_uDispatching_Domain            : constant Name_Id := N + $;\n    Name_uEntry_Bodies                  : constant Name_Id := N + $;\n    Name_uExpunge                       : constant Name_Id := N + $;\n    Name_uFinalizer                     : constant Name_Id := N + $;\n@@ -360,6 +361,7 @@ package Snames is\n    Name_Detect_Blocking                : constant Name_Id := N + $; -- Ada 05\n    Name_Default_Storage_Pool           : constant Name_Id := N + $; -- Ada 12\n    Name_Discard_Names                  : constant Name_Id := N + $;\n+   Name_Dispatching_Domain             : constant Name_Id := N + $; -- Ada 12\n    Name_Elaboration_Checks             : constant Name_Id := N + $; -- GNAT\n    Name_Eliminate                      : constant Name_Id := N + $; -- GNAT\n    Name_Extend_System                  : constant Name_Id := N + $; -- GNAT\n@@ -1523,6 +1525,7 @@ package Snames is\n       Pragma_Detect_Blocking,\n       Pragma_Default_Storage_Pool,\n       Pragma_Discard_Names,\n+      Pragma_Dispatching_Domain,\n       Pragma_Elaboration_Checks,\n       Pragma_Eliminate,\n       Pragma_Extend_System,"}]}