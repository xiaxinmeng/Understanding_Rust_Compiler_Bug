{"sha": "e84b920c7c572f009e90ab39bab51c715de99c84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg0YjkyMGM3YzU3MmYwMDllOTBhYjM5YmFiNTFjNzE1ZGU5OWM4NA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-04-18T17:21:24Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-04-18T17:21:24Z"}, "message": "re PR fortran/18918 (Eventually support Fortran 2008's coarrays [co-arrays])\n\n2011-04-18  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        * array.c (gfc_match_array_ref): Check for too many\n        * codimensions.\n        * check.c (gfc_check_image_index): Check number of elements\n        in SUB argument.\n        * simplify.c (gfc_simplify_image_index): Remove unreachable\n        * checks.\n\n2011-04-18  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        * gfortran.dg/coarray_17.f90: New.\n        * gfortran.dg/coarray_10.f90: Update dg-error.\n\nFrom-SVN: r172658", "tree": {"sha": "bf6b6c568e6f3d79086e78008f4e7cd747eee634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf6b6c568e6f3d79086e78008f4e7cd747eee634"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e84b920c7c572f009e90ab39bab51c715de99c84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84b920c7c572f009e90ab39bab51c715de99c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e84b920c7c572f009e90ab39bab51c715de99c84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84b920c7c572f009e90ab39bab51c715de99c84/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c41356cd209d7f8fd8a7a548a291f08a383c768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c41356cd209d7f8fd8a7a548a291f08a383c768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c41356cd209d7f8fd8a7a548a291f08a383c768"}], "stats": {"total": 77, "additions": 62, "deletions": 15}, "files": [{"sha": "a55e1c0d3d2a45143c31f39224436b04cb78a13a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e84b920c7c572f009e90ab39bab51c715de99c84", "patch": "@@ -1,3 +1,11 @@\n+2011-04-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\t* array.c (gfc_match_array_ref): Check for too many codimensions.\n+\t* check.c (gfc_check_image_index): Check number of elements\n+\tin SUB argument.\n+\t* simplify.c (gfc_simplify_image_index): Remove unreachable checks.\n+\n 2011-04-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "750d73315f2d7194ddc355451d28295f40512b06", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=e84b920c7c572f009e90ab39bab51c715de99c84", "patch": "@@ -237,6 +237,12 @@ gfc_match_array_ref (gfc_array_ref *ar, gfc_array_spec *as, int init,\n \t\t\t corank, ar->codimen);\n \t      return MATCH_ERROR;\n \t    }\n+\t  if (ar->codimen > corank)\n+\t    {\n+\t      gfc_error (\"Too many codimensions at %C, expected %d not %d\",\n+\t\t\t corank, ar->codimen);\n+\t      return MATCH_ERROR;\n+\t    }\n \t  return MATCH_YES;\n \t}\n "}, {"sha": "864114206731c2cc99fba1240eaf0b3c734504d8", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=e84b920c7c572f009e90ab39bab51c715de99c84", "patch": "@@ -3667,6 +3667,8 @@ gfc_check_stat_sub (gfc_expr *name, gfc_expr *array, gfc_expr *status)\n gfc_try\n gfc_check_image_index (gfc_expr *coarray, gfc_expr *sub)\n {\n+  mpz_t nelems;\n+\n   if (gfc_option.coarray == GFC_FCOARRAY_NONE)\n     {\n       gfc_fatal_error (\"Coarrays disabled at %C, use -fcoarray= to enable\");\n@@ -3683,6 +3685,21 @@ gfc_check_image_index (gfc_expr *coarray, gfc_expr *sub)\n       return FAILURE;\n     }\n \n+  if (gfc_array_size (sub, &nelems) == SUCCESS)\n+    {\n+      int corank = gfc_get_corank (coarray);\n+\n+      if (mpz_cmp_ui (nelems, corank) != 0)\n+\t{\n+\t  gfc_error (\"The number of array elements of the SUB argument to \"\n+\t\t     \"IMAGE_INDEX at %L shall be %d (corank) not %d\",\n+\t\t     &sub->where, corank, (int) mpz_get_si (nelems));\n+\t  mpz_clear (nelems);\n+\t  return FAILURE;\n+\t}\n+      mpz_clear (nelems);\n+    }\n+\n   return SUCCESS;\n }\n "}, {"sha": "784f27fc7931c0ea795fa839c5d2fe361262dfe1", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=e84b920c7c572f009e90ab39bab51c715de99c84", "patch": "@@ -6211,12 +6211,7 @@ gfc_simplify_image_index (gfc_expr *coarray, gfc_expr *sub)\n       gfc_expr *ca_bound;\n       int cmp;\n \n-      if (sub_cons == NULL)\n-\t{\n-\t  gfc_error (\"Too few elements in expression for SUB= argument at %L\",\n-\t\t     &sub->where);\n-\t  return &gfc_bad_expr;\n-\t}\n+      gcc_assert (sub_cons != NULL);\n \n       ca_bound = simplify_bound_dim (coarray, NULL, d + as->rank, 0, as,\n \t\t\t\t     NULL, true);\n@@ -6278,13 +6273,7 @@ gfc_simplify_image_index (gfc_expr *coarray, gfc_expr *sub)\n       sub_cons = gfc_constructor_next (sub_cons);\n     }\n \n-  if (sub_cons != NULL)\n-    {\n-      gfc_error (\"Too many elements in expression for SUB= argument at %L\",\n-\t\t &sub->where);\n-      return &gfc_bad_expr;\n-    }\n-\n+  gcc_assert (sub_cons == NULL);\n \n   if (gfc_option.coarray != GFC_FCOARRAY_SINGLE && !first_image)\n     return NULL;"}, {"sha": "58bf81ac2a890f07de26412dc7628882f5a8deb6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e84b920c7c572f009e90ab39bab51c715de99c84", "patch": "@@ -1,3 +1,9 @@\n+2011-04-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\t* gfortran.dg/coarray_17.f90: New.\n+\t* gfortran.dg/coarray_10.f90: Update dg-error.\n+\n 2011-04-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR testsuite/48251"}, {"sha": "99f5782e35b2a81ecd279cd3ddbb94be8f1ae9b2", "filename": "gcc/testsuite/gfortran.dg/coarray_10.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_10.f90?ref=e84b920c7c572f009e90ab39bab51c715de99c84", "patch": "@@ -11,8 +11,8 @@ subroutine image_idx_test1()\n   WRITE (*,*) IMAGE_INDEX (array, [2,0,3,1])\n   WRITE (*,*) IMAGE_INDEX (array, [0,0,3,1])  ! { dg-error \"for dimension 1, SUB has 0 and COARRAY lower bound is 1\" }\n   WRITE (*,*) IMAGE_INDEX (array, [1,2,9,0])  ! { dg-error \"for dimension 3, SUB has 9 and COARRAY upper bound is 8\" }\n-  WRITE (*,*) IMAGE_INDEX (array, [2,0,3])    ! { dg-error \"Too few elements\" }\n-  WRITE (*,*) IMAGE_INDEX (array, [2,0,3,1,1])! { dg-error \"Too many elements\" }\n+  WRITE (*,*) IMAGE_INDEX (array, [2,0,3])    ! { dg-error \"array elements of the SUB argument to IMAGE_INDEX at .1. shall be 4\" }\n+  WRITE (*,*) IMAGE_INDEX (array, [2,0,3,1,1])! { dg-error \"array elements of the SUB argument to IMAGE_INDEX at .1. shall be 4\" }\n end subroutine\n \n subroutine this_image_check()"}, {"sha": "ad6da29f1a38bbacc17f258e51ef1b7742d3cde5", "filename": "gcc/testsuite/gfortran.dg/coarray_17.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e84b920c7c572f009e90ab39bab51c715de99c84/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_17.f90?ref=e84b920c7c572f009e90ab39bab51c715de99c84", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+!\n+! Two simple diagnostics, which were initially not thought of\n+!\n+! General coarray PR: PR fortran/18918\n+! \n+\n+subroutine one\n+    integer, allocatable :: a(:)[:,:]  ! corank = 2\n+    integer :: index,nn1,nn2,nn3,mm0\n+\n+    allocate(a(mm0)[nn1:nn2,nn3,*]) ! { dg-error \"Too many codimensions at .1., expected 2 not 3\" }\n+end subroutine one\n+\n+subroutine two\n+    integer, allocatable :: a(:)[:,:,:], b(:)[:,:], c(:)[:]\n+    index1 = image_index(a, [2, 1, 1] )  !OK\n+    index2 = image_index(b, [2, 1, 1] )  ! { dg-error \"array elements of the SUB argument to IMAGE_INDEX at .1. shall be 2 .corank. not 3\" }\n+    index3 = image_index(c, [1] )        !OK\n+end subroutine two"}]}