{"sha": "b0bd3e52c1b5b59bd416298ae0794342ec319d86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBiZDNlNTJjMWI1YjU5YmQ0MTYyOThhZTA3OTQzNDJlYzMxOWQ4Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-11T13:42:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-11T13:42:29Z"}, "message": "re PR tree-optimization/83435 (ICE in set_value_range, at tree-vrp.c:211)\n\n2018-01-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/83435\n\t* graphite.c (canonicalize_loop_form): Ignore fake loop exit edges.\n\t* graphite-scop-detection.c (scop_detection::get_sese): Likewise.\n\t* tree-vrp.c (add_assert_info): Drop TREE_OVERFLOW if they appear.\n\n\t* gcc.dg/graphite/pr83435.c: New testcase.\n\nFrom-SVN: r256535", "tree": {"sha": "b6b57883c1591658b34b98aae4e2bb2aaa9362d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6b57883c1591658b34b98aae4e2bb2aaa9362d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0bd3e52c1b5b59bd416298ae0794342ec319d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0bd3e52c1b5b59bd416298ae0794342ec319d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0bd3e52c1b5b59bd416298ae0794342ec319d86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0bd3e52c1b5b59bd416298ae0794342ec319d86/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc6401818b1509cf7617879b9c00bba5daba5c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6401818b1509cf7617879b9c00bba5daba5c66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc6401818b1509cf7617879b9c00bba5daba5c66"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "6c8fdd1645f379af02080a653eb8be8e3bcfbc9d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0bd3e52c1b5b59bd416298ae0794342ec319d86", "patch": "@@ -1,3 +1,10 @@\n+2018-01-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83435\n+\t* graphite.c (canonicalize_loop_form): Ignore fake loop exit edges.\n+\t* graphite-scop-detection.c (scop_detection::get_sese): Likewise.\n+\t* tree-vrp.c (add_assert_info): Drop TREE_OVERFLOW if they appear.\n+\n 2018-01-11  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "1f2f990b690d7f9f5dd62c201ebd32b75cdac91b", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=b0bd3e52c1b5b59bd416298ae0794342ec319d86", "patch": "@@ -428,7 +428,7 @@ scop_detection::get_sese (loop_p loop)\n \n   edge scop_begin = loop_preheader_edge (loop);\n   edge scop_end = single_exit (loop);\n-  if (!scop_end || (scop_end->flags & EDGE_COMPLEX))\n+  if (!scop_end || (scop_end->flags & (EDGE_COMPLEX|EDGE_FAKE)))\n     return invalid_sese;\n   /* Include the BB with the loop-closed SSA PHI nodes.\n      canonicalize_loop_closed_ssa makes sure that is in proper shape.  */"}, {"sha": "bcf48284f755744043e67581b7d9d137d6015fa7", "filename": "gcc/graphite.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=b0bd3e52c1b5b59bd416298ae0794342ec319d86", "patch": "@@ -324,7 +324,7 @@ canonicalize_loop_form (void)\n   FOR_EACH_LOOP (loop, LI_FROM_INNERMOST)\n     {\n       edge e = single_exit (loop);\n-      if (!e || (e->flags & EDGE_COMPLEX))\n+      if (!e || (e->flags & (EDGE_COMPLEX|EDGE_FAKE)))\n \tcontinue;\n \n       canonicalize_loop_closed_ssa (loop, e);"}, {"sha": "fde8bcc383e19021f908a81884be21337eed95af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b0bd3e52c1b5b59bd416298ae0794342ec319d86", "patch": "@@ -1,3 +1,8 @@\n+2018-01-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83435\n+\t* gcc.dg/graphite/pr83435.c: New testcase.\n+\n 2018-01-11  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "1b70c861f4339afe19c8798313941cf1f44ec72f", "filename": "gcc/testsuite/gcc.dg/graphite/pr83435.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83435.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83435.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83435.c?ref=b0bd3e52c1b5b59bd416298ae0794342ec319d86", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-parallelize-loops=2 -floop-parallelize-all\" } */\n+\n+int yj, ax;\n+\n+void\n+gf (signed char mp)\n+{\n+  int *dh = &yj;\n+\n+  for (;;)\n+    {\n+      signed char sb;\n+\n+      for (sb = 0; sb < 1; sb -= 8)\n+\t{\n+\t}\n+\n+      mp &= mp <= sb;\n+      if (mp == 0)\n+\tdh = &ax;\n+      mp = 0;\n+      *dh = 0;\n+    }\n+}"}, {"sha": "3294bde9b94081e850b537b9caa1e24a2df0fa11", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0bd3e52c1b5b59bd416298ae0794342ec319d86/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=b0bd3e52c1b5b59bd416298ae0794342ec319d86", "patch": "@@ -2786,6 +2786,8 @@ add_assert_info (vec<assert_info> &asserts,\n   assert_info info;\n   info.comp_code = comp_code;\n   info.name = name;\n+  if (TREE_OVERFLOW_P (val))\n+    val = drop_tree_overflow (val);\n   info.val = val;\n   info.expr = expr;\n   asserts.safe_push (info);"}]}