{"sha": "0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVjOGYwYzZkNjI4OGVkNWNmNGYyMmVhNjk5Nzk4ZmI3ZjBlMDgwZQ==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2017-10-10T16:26:03Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-10-10T16:26:03Z"}, "message": "fold-vec-splats-char.c: New.\n\n[testsuite]\n\n2017-10-10  Will Schmidt <will_schmidt@vnet.ibm.com>\n\n\t* gcc.target/powerpc/fold-vec-splats-char.c: New.\n\t* gcc.target/powerpc/fold-vec-splats-floatdouble.c: New.\n\t* gcc.target/powerpc/fold-vec-splats-int.c: New.\n\t* gcc.target/powerpc/fold-vec-splats-longlong.c: New.\n\t* gcc.target/powerpc/fold-vec-splats-short.c: New.\n\nFrom-SVN: r253590", "tree": {"sha": "8a76232f633c6cf01a0bb29cd5eca7edd6975fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a76232f633c6cf01a0bb29cd5eca7edd6975fce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "802b38c91f7c5a03e69e37bd4a1ad54a46020671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/802b38c91f7c5a03e69e37bd4a1ad54a46020671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/802b38c91f7c5a03e69e37bd4a1ad54a46020671"}], "stats": {"total": 124, "additions": 124, "deletions": 0}, "files": [{"sha": "29b5277180ef9dfa9f3fe8d3d43c5925c5cf7714", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "patch": "@@ -1,3 +1,11 @@\n+2017-10-10  Will Schmidt <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-splats-char.c: New.\n+\t* gcc.target/powerpc/fold-vec-splats-floatdouble.c: New.\n+\t* gcc.target/powerpc/fold-vec-splats-int.c: New.\n+\t* gcc.target/powerpc/fold-vec-splats-longlong.c: New.\n+\t* gcc.target/powerpc/fold-vec-splats-short.c: New.\n+\n 2017-10-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/82437"}, {"sha": "8f211537d2891dce27e25cde17f74b0f96bd4420", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-splats-char.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-char.c?ref=0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "patch": "@@ -0,0 +1,22 @@\n+/* Verify that overloaded built-ins for vec_splats() with char\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2 \" } */\n+\n+#include <altivec.h>\n+\n+vector signed char\n+test1s (signed char x)\n+{\n+  return vec_splats (x);\n+}\n+\n+vector unsigned char\n+test1u (unsigned char x)\n+{\n+  return vec_splats (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vspltb\" 2 } } */"}, {"sha": "c4544f1a4523a6b58c088aa19988a8b6916734e9", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-splats-floatdouble.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-floatdouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-floatdouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-floatdouble.c?ref=0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "patch": "@@ -0,0 +1,27 @@\n+/* Verify that overloaded built-ins for vec_splat with float and\n+   double inputs for VSX produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O1\" } */\n+\n+#include <altivec.h>\n+\n+vector float\n+test1d (float x)\n+{\n+  return vec_splats (x);\n+}\n+\n+vector double\n+test1f (double x)\n+{\n+  return vec_splats (x);\n+}\n+\n+// float test generates the permute instruction.\n+/* { dg-final { scan-assembler-times \"xxpermdi\" 1 } } */\n+\n+// double test generates a convert (double to single non-signalling) followed by a splat.\n+/* { dg-final { scan-assembler-times {\\mxscvdpspn?\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mvspltw\\M|\\mxxspltw\\M} 1 } } */"}, {"sha": "66715233bc74672af320edeac68601a3d35115d1", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-splats-int.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-int.c?ref=0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "patch": "@@ -0,0 +1,22 @@\n+/* Verify that overloaded built-ins for vec_splat with int\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile { target { powerpc*-*-linux* && lp64 } } } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2 \" } */\n+\n+#include <altivec.h>\n+\n+vector signed int\n+test3s (signed int x)\n+{\n+  return vec_splats (x);\n+}\n+\n+vector unsigned int\n+test3u (unsigned int x)\n+{\n+  return vec_splats (x);\n+}\n+\n+/* { dg-final { scan-assembler-times {\\mvspltw\\M|\\mxxspltw\\M} 2 } } */"}, {"sha": "c5884ba88f48aa17bddf521b423fb15cb9988c92", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-splats-longlong.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-longlong.c?ref=0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "patch": "@@ -0,0 +1,22 @@\n+/* Verify that overloaded built-ins for vec_splat with long long\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile { target { powerpc*-*-linux* && lp64 } } } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed long long\n+test3s (signed long long x)\n+{\n+  return vec_splats (x);\n+}\n+\n+vector unsigned long long\n+test3u (unsigned long long x)\n+{\n+  return vec_splats (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xxpermdi\" 2 } } */"}, {"sha": "18102ac12547b03fa0e0e08a05f191fe28cb96b7", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-splats-short.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splats-short.c?ref=0ec8f0c6d6288ed5cf4f22ea699798fb7f0e080e", "patch": "@@ -0,0 +1,23 @@\n+/* Verify that overloaded built-ins for vec_splat with short\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed short\n+test3s (signed short x)\n+{\n+  return vec_splats (x);\n+}\n+\n+vector unsigned short\n+test3u (unsigned short x)\n+{\n+  return vec_splats (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vsplth\" 2 } } */\n+"}]}