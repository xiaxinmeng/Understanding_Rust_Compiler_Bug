{"sha": "3f34855a08b426c05d3c462fd4563c649ad15476", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YzNDg1NWEwOGI0MjZjMDVkM2M0NjJmZDQ1NjNjNjQ5YWQxNTQ3Ng==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-07-13T17:26:02Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-07-13T17:26:02Z"}, "message": "re PR fortran/43665 (INTENT(IN) etc. optimization of calls: function annotations for noclobber/noescape arguments)\n\n2010-07-13  Tobias Burnus  <burnus@net-b.de>\n            Daniel Franke  <franke.daniel@gmail.com>\n\n        PR fortran/43665\n        * trans.h (gfc_build_library_function_decl_with_spec): New\n        prototype.\n        * trans-decl.c (gfc_build_library_function_decl_with_spec):\n        Removed static.\n        * trans-io (gfc_build_io_library_fndecls): Add \"fn spec\"\n        annotations.\n\n\nCo-Authored-By: Daniel Franke <franke.daniel@gmail.com>\n\nFrom-SVN: r162147", "tree": {"sha": "92540a822807a8fc4a28791bf197ff51ffc63012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92540a822807a8fc4a28791bf197ff51ffc63012"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f34855a08b426c05d3c462fd4563c649ad15476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f34855a08b426c05d3c462fd4563c649ad15476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f34855a08b426c05d3c462fd4563c649ad15476", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f34855a08b426c05d3c462fd4563c649ad15476/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b3ea3a8065e75562b94971c3e9874974d359b40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b3ea3a8065e75562b94971c3e9874974d359b40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b3ea3a8065e75562b94971c3e9874974d359b40"}], "stats": {"total": 194, "additions": 95, "deletions": 99}, "files": [{"sha": "6f42aecb149d99688b8209cc9b8f6abea1fabb35", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f34855a08b426c05d3c462fd4563c649ad15476/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f34855a08b426c05d3c462fd4563c649ad15476/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3f34855a08b426c05d3c462fd4563c649ad15476", "patch": "@@ -1,3 +1,12 @@\n+2010-07-13  Tobias Burnus  <burnus@net-b.de>\n+\t    Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/43665\n+\t* trans.h (gfc_build_library_function_decl_with_spec): New prototype.\n+\t* trans-decl.c (gfc_build_library_function_decl_with_spec): Removed\n+\tstatic.\n+\t* trans-io (gfc_build_io_library_fndecls): Add \"fn spec\" annotations.\n+\n 2010-07-13  Daniel Franke  <franke.daniel@gmail.com>\n \t    Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "99cccde65a807b9d6cf4d5516a0ffe6979af8b64", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f34855a08b426c05d3c462fd4563c649ad15476/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f34855a08b426c05d3c462fd4563c649ad15476/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=3f34855a08b426c05d3c462fd4563c649ad15476", "patch": "@@ -2388,7 +2388,7 @@ gfc_build_library_function_decl (tree name, tree rettype, int nargs, ...)\n    The SPEC parameter specifies the function argument and return type\n    specification according to the fnspec function type attribute.  */\n \n-static tree\n+tree\n gfc_build_library_function_decl_with_spec (tree name, const char *spec,\n \t\t\t\t\t   tree rettype, int nargs, ...)\n {"}, {"sha": "a806d42341781295ba60d263a097447b95407e80", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 83, "deletions": 98, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f34855a08b426c05d3c462fd4563c649ad15476/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f34855a08b426c05d3c462fd4563c649ad15476/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=3f34855a08b426c05d3c462fd4563c649ad15476", "patch": "@@ -303,132 +303,117 @@ gfc_build_io_library_fndecls (void)\n   for (ptype = IOPARM_ptype_common; ptype < IOPARM_ptype_num; ptype++)\n     gfc_build_st_parameter ((enum ioparam_type) ptype, types);\n \n-  /* Define the transfer functions.  */\n+  /* Define the transfer functions.\n+     TODO: Split them between READ and WRITE to allow further\n+     optimizations, e.g. by using aliases?  */\n \n   dt_parm_type = build_pointer_type (st_parameter[IOPARM_ptype_dt].type);\n \n-  iocall[IOCALL_X_INTEGER] =\n-    gfc_build_library_function_decl (get_identifier\n-\t\t\t\t     (PREFIX(\"transfer_integer\")),\n-\t\t\t\t     void_type_node, 3, dt_parm_type,\n-\t\t\t\t     pvoid_type_node, gfc_int4_type_node);\n-\n-  iocall[IOCALL_X_LOGICAL] =\n-    gfc_build_library_function_decl (get_identifier\n-\t\t\t\t     (PREFIX(\"transfer_logical\")),\n-\t\t\t\t     void_type_node, 3, dt_parm_type,\n-\t\t\t\t     pvoid_type_node, gfc_int4_type_node);\n-\n-  iocall[IOCALL_X_CHARACTER] =\n-    gfc_build_library_function_decl (get_identifier\n-\t\t\t\t     (PREFIX(\"transfer_character\")),\n-\t\t\t\t     void_type_node, 3, dt_parm_type,\n-\t\t\t\t     pvoid_type_node, gfc_int4_type_node);\n-\n-  iocall[IOCALL_X_CHARACTER_WIDE] =\n-    gfc_build_library_function_decl (get_identifier\n-\t\t\t\t     (PREFIX(\"transfer_character_wide\")),\n-\t\t\t\t     void_type_node, 4, dt_parm_type,\n-\t\t\t\t     pvoid_type_node, gfc_charlen_type_node,\n-\t\t\t\t     gfc_int4_type_node);\n-\n-  iocall[IOCALL_X_REAL] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"transfer_real\")),\n-\t\t\t\t     void_type_node, 3, dt_parm_type,\n-\t\t\t\t     pvoid_type_node, gfc_int4_type_node);\n-\n-  iocall[IOCALL_X_COMPLEX] =\n-    gfc_build_library_function_decl (get_identifier\n-\t\t\t\t     (PREFIX(\"transfer_complex\")),\n-\t\t\t\t     void_type_node, 3, dt_parm_type,\n-\t\t\t\t     pvoid_type_node, gfc_int4_type_node);\n-\n-  iocall[IOCALL_X_ARRAY] =\n-    gfc_build_library_function_decl (get_identifier\n-\t\t\t\t     (PREFIX(\"transfer_array\")),\n-\t\t\t\t     void_type_node, 4, dt_parm_type,\n-\t\t\t\t     pvoid_type_node, integer_type_node,\n-\t\t\t\t     gfc_charlen_type_node);\n+  iocall[IOCALL_X_INTEGER] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"transfer_integer\")), \".wW\",\n+\tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n+\n+  iocall[IOCALL_X_LOGICAL] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"transfer_logical\")), \".wW\",\n+\tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n+\n+  iocall[IOCALL_X_CHARACTER] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"transfer_character\")), \".wW\",\n+\tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n+\n+  iocall[IOCALL_X_CHARACTER_WIDE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"transfer_character_wide\")), \".wW\",\n+\tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n+\tgfc_charlen_type_node, gfc_int4_type_node);\n+\n+  iocall[IOCALL_X_REAL] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"transfer_real\")), \".wW\",\n+\tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n+\n+  iocall[IOCALL_X_COMPLEX] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"transfer_complex\")), \".wW\",\n+\tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n+\n+  iocall[IOCALL_X_ARRAY] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"transfer_array\")), \".wW\",\n+\tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n+\tinteger_type_node, gfc_charlen_type_node);\n \n   /* Library entry points */\n \n-  iocall[IOCALL_READ] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_read\")),\n-\t\t\t\t     void_type_node, 1, dt_parm_type);\n+  iocall[IOCALL_READ] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_read\")), \".w\",\n+\tvoid_type_node, 1, dt_parm_type);\n \n-  iocall[IOCALL_WRITE] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_write\")),\n-\t\t\t\t     void_type_node, 1, dt_parm_type);\n+  iocall[IOCALL_WRITE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_write\")), \".w\",\n+\tvoid_type_node, 1, dt_parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_open].type);\n-  iocall[IOCALL_OPEN] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_open\")),\n-\t\t\t\t     void_type_node, 1, parm_type);\n-\n+  iocall[IOCALL_OPEN] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_open\")), \".w\",\n+\tvoid_type_node, 1, parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_close].type);\n-  iocall[IOCALL_CLOSE] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_close\")),\n-\t\t\t\t     void_type_node, 1, parm_type);\n+  iocall[IOCALL_CLOSE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_close\")), \".w\",\n+\tvoid_type_node, 1, parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_inquire].type);\n-  iocall[IOCALL_INQUIRE] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_inquire\")),\n-\t\t\t\t     gfc_int4_type_node, 1, parm_type);\n+  iocall[IOCALL_INQUIRE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_inquire\")), \".w\",\n+\tgfc_int4_type_node, 1, parm_type);\n \n-  iocall[IOCALL_IOLENGTH] =\n-    gfc_build_library_function_decl(get_identifier (PREFIX(\"st_iolength\")),\n-\t\t\t\t    void_type_node, 1, dt_parm_type);\n+  iocall[IOCALL_IOLENGTH] = gfc_build_library_function_decl_with_spec(\n+\tget_identifier (PREFIX(\"st_iolength\")), \".w\",\n+\tvoid_type_node, 1, dt_parm_type);\n \n+  /* TODO: Change when asynchronous I/O is implemented.  */\n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_wait].type);\n-  iocall[IOCALL_WAIT] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_wait\")),\n-\t\t\t\t     gfc_int4_type_node, 1, parm_type);\n+  iocall[IOCALL_WAIT] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_wait\")), \".X\",\n+\tgfc_int4_type_node, 1, parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_filepos].type);\n-  iocall[IOCALL_REWIND] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_rewind\")),\n-\t\t\t\t     gfc_int4_type_node, 1, parm_type);\n+  iocall[IOCALL_REWIND] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_rewind\")), \".w\",\n+\tgfc_int4_type_node, 1, parm_type);\n \n-  iocall[IOCALL_BACKSPACE] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_backspace\")),\n-\t\t\t\t     gfc_int4_type_node, 1, parm_type);\n+  iocall[IOCALL_BACKSPACE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_backspace\")), \".w\",\n+\tgfc_int4_type_node, 1, parm_type);\n \n-  iocall[IOCALL_ENDFILE] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_endfile\")),\n-\t\t\t\t     gfc_int4_type_node, 1, parm_type);\n+  iocall[IOCALL_ENDFILE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_endfile\")), \".w\",\n+\tgfc_int4_type_node, 1, parm_type);\n \n-  iocall[IOCALL_FLUSH] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_flush\")),\n-\t\t\t\t     gfc_int4_type_node, 1, parm_type);\n+  iocall[IOCALL_FLUSH] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_flush\")), \".w\",\n+\tgfc_int4_type_node, 1, parm_type);\n \n   /* Library helpers */\n \n-  iocall[IOCALL_READ_DONE] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_read_done\")),\n-\t\t\t\t     gfc_int4_type_node, 1, dt_parm_type);\n-\n-  iocall[IOCALL_WRITE_DONE] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_write_done\")),\n-\t\t\t\t     gfc_int4_type_node, 1, dt_parm_type);\n+  iocall[IOCALL_READ_DONE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_read_done\")), \".w\",\n+\tgfc_int4_type_node, 1, dt_parm_type);\n \n-  iocall[IOCALL_IOLENGTH_DONE] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_iolength_done\")),\n-\t\t\t\t     gfc_int4_type_node, 1, dt_parm_type);\n+  iocall[IOCALL_WRITE_DONE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_write_done\")), \".w\",\n+\tgfc_int4_type_node, 1, dt_parm_type);\n \n+  iocall[IOCALL_IOLENGTH_DONE] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_iolength_done\")), \".w\",\n+\tgfc_int4_type_node, 1, dt_parm_type);\n \n-  iocall[IOCALL_SET_NML_VAL] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_set_nml_var\")),\n-\t\t\t\t     void_type_node, 6, dt_parm_type,\n-\t\t\t\t     pvoid_type_node, pvoid_type_node,\n-\t\t\t\t     gfc_int4_type_node, gfc_charlen_type_node,\n-\t\t\t\t     gfc_int4_type_node);\n+  iocall[IOCALL_SET_NML_VAL] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_set_nml_var\")), \".w.R\",\n+\tvoid_type_node, 6, dt_parm_type, pvoid_type_node, pvoid_type_node,\n+\tgfc_int4_type_node, gfc_charlen_type_node, gfc_int4_type_node);\n \n-  iocall[IOCALL_SET_NML_VAL_DIM] =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_set_nml_var_dim\")),\n-\t\t\t\t     void_type_node, 5, dt_parm_type,\n-\t\t\t\t     gfc_int4_type_node, gfc_array_index_type,\n-\t\t\t\t     gfc_array_index_type, gfc_array_index_type);\n+  iocall[IOCALL_SET_NML_VAL_DIM] = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"st_set_nml_var_dim\")), \".w\",\n+\tvoid_type_node, 5, dt_parm_type, gfc_int4_type_node,\n+\tgfc_array_index_type, gfc_array_index_type, gfc_array_index_type);\n }\n \n "}, {"sha": "cd80282f15ecad77af39f2bcd23e3e785c3bf60e", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f34855a08b426c05d3c462fd4563c649ad15476/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f34855a08b426c05d3c462fd4563c649ad15476/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=3f34855a08b426c05d3c462fd4563c649ad15476", "patch": "@@ -502,6 +502,8 @@ void gfc_trans_io_runtime_check (tree, tree, int, const char *, stmtblock_t *);\n void gfc_build_io_library_fndecls (void);\n /* Build a function decl for a library function.  */\n tree gfc_build_library_function_decl (tree, tree, int, ...);\n+tree gfc_build_library_function_decl_with_spec (tree name, const char *spec,\n+\t\t\t\t\t\ttree rettype, int nargs, ...);\n \n /* Process the local variable decls of a block construct.  */\n void gfc_process_block_locals (gfc_namespace*);"}]}