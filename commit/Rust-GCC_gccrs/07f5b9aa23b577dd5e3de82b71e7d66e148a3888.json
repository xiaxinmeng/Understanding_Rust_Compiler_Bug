{"sha": "07f5b9aa23b577dd5e3de82b71e7d66e148a3888", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdmNWI5YWEyM2I1NzdkZDVlM2RlODJiNzFlN2Q2NmUxNDhhMzg4OA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-06-30T20:56:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-06-30T20:56:46Z"}, "message": "sh.c (sh_expand_epilogue): Emit a blockage insn before cutting back the stack.\n\n        * sh.c (sh_expand_epilogue): Emit a blockage insn before\n        cutting back the stack.\n\nFrom-SVN: r14362", "tree": {"sha": "208b58dc160635d6aff80f09c0caef15f527bcda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/208b58dc160635d6aff80f09c0caef15f527bcda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07f5b9aa23b577dd5e3de82b71e7d66e148a3888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07f5b9aa23b577dd5e3de82b71e7d66e148a3888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07f5b9aa23b577dd5e3de82b71e7d66e148a3888", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07f5b9aa23b577dd5e3de82b71e7d66e148a3888/comments", "author": null, "committer": null, "parents": [{"sha": "38c1f2d7e6de970a7345b7d7fabe3952f2f7af89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c1f2d7e6de970a7345b7d7fabe3952f2f7af89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c1f2d7e6de970a7345b7d7fabe3952f2f7af89"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "30406f66acb08a6c4a54904ea0d340300965dbf4", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07f5b9aa23b577dd5e3de82b71e7d66e148a3888/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07f5b9aa23b577dd5e3de82b71e7d66e148a3888/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=07f5b9aa23b577dd5e3de82b71e7d66e148a3888", "patch": "@@ -2705,15 +2705,24 @@ sh_expand_epilogue ()\n \n   if (frame_pointer_needed)\n     {\n-      /* We deliberately make the add dependent on the frame_pointer,\n-\t to ensure that instruction scheduling won't move the stack pointer\n-\t adjust before instructions reading from the frame.  This can fail\n-\t if there is an interrupt which then writes to the stack.  */\n       output_stack_adjust (get_frame_size (), frame_pointer_rtx, 7);\n+\n+      /* We must avoid moving the stack pointer adjustment past code\n+\t which reads from the local frame, else an interrupt could\n+\t occur after the SP adjustment and clobber data in the local\n+\t frame.  */\n+      emit_insn (gen_blockage ());\n       emit_insn (gen_movsi (stack_pointer_rtx, frame_pointer_rtx));\n     }\n-  else\n-    output_stack_adjust (get_frame_size (), stack_pointer_rtx, 7);\n+  else if (get_frame_size ())\n+    {\n+      /* We must avoid moving the stack pointer adjustment past code\n+\t which reads from the local frame, else an interrupt could\n+\t occur after the SP adjustment and clobber data in the local\n+\t frame.  */\n+      emit_insn (gen_blockage ());\n+      output_stack_adjust (get_frame_size (), stack_pointer_rtx, 7);\n+    }\n \n   /* Pop all the registers.  */\n "}]}