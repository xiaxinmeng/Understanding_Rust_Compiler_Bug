{"sha": "0409aa5a2de9ce3164933814a4a7adc91f6acb96", "node_id": "C_kwDOANBUbNoAKDA0MDlhYTVhMmRlOWNlMzE2NDkzMzgxNGE0YTdhZGM5MWY2YWNiOTY", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2023-03-23T14:28:34Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2023-03-24T13:11:09Z"}, "message": "Ranger cache dominator queries should ignore backedges.\n\nWhen querying dominators for cache values, ignore back edges in\nread-only mode.\n\n\tPR tree-optimization/109238\n\tgcc/\n\t* gimple-range-cache.cc (ranger_cache::resolve_dom): Ignore\n\tpredecessors which this block dominates.\n\n\tgcc/testsuite/\n\t* gcc.dg/pr109238.c: New.", "tree": {"sha": "0cd410bc9183c6ceaaccf083f61c04d7b60fd52f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cd410bc9183c6ceaaccf083f61c04d7b60fd52f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0409aa5a2de9ce3164933814a4a7adc91f6acb96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0409aa5a2de9ce3164933814a4a7adc91f6acb96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0409aa5a2de9ce3164933814a4a7adc91f6acb96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0409aa5a2de9ce3164933814a4a7adc91f6acb96/comments", "author": null, "committer": null, "parents": [{"sha": "ed626f18b189920aeed9974aded3f9cb6f25b543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed626f18b189920aeed9974aded3f9cb6f25b543", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed626f18b189920aeed9974aded3f9cb6f25b543"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "6a098d8ec289cf9952155a541dd10228ce2d8581", "filename": "gcc/gimple-range-cache.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0409aa5a2de9ce3164933814a4a7adc91f6acb96/gcc%2Fgimple-range-cache.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0409aa5a2de9ce3164933814a4a7adc91f6acb96/gcc%2Fgimple-range-cache.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-cache.cc?ref=0409aa5a2de9ce3164933814a4a7adc91f6acb96", "patch": "@@ -1404,6 +1404,11 @@ ranger_cache::resolve_dom (vrange &r, tree name, basic_block bb)\n   Value_Range er (TREE_TYPE (name));\n   FOR_EACH_EDGE (e, ei, bb->preds)\n     {\n+      // If the predecessor is dominated by this block, then there is a back\n+      // edge, and won't provide anything useful.  We'll actually end up with\n+      // VARYING as we will not resolve this node.\n+      if (dominated_by_p (CDI_DOMINATORS, e->src, bb))\n+\tcontinue;\n       edge_range (er, e, name, RFD_READ_ONLY);\n       r.union_ (er);\n     }"}, {"sha": "0cad82372088dd57081cd554d7c108e76088c2e0", "filename": "gcc/testsuite/gcc.dg/pr109238.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0409aa5a2de9ce3164933814a4a7adc91f6acb96/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109238.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0409aa5a2de9ce3164933814a4a7adc91f6acb96/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109238.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109238.c?ref=0409aa5a2de9ce3164933814a4a7adc91f6acb96", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/109238 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall\" } */\n+\n+void foo (void *) __attribute__((noreturn));\n+void bar (void *);\n+\n+void\n+baz (void *p)\n+{\n+  void *c = __builtin_realloc (p, 16);\n+  if (c)\n+    foo (c);\n+  for (;;)\n+    bar (__builtin_realloc (p, 8));\t/* { dg-bogus \"pointer 'p' may be used after '__builtin_realloc'\" } */\n+}"}]}