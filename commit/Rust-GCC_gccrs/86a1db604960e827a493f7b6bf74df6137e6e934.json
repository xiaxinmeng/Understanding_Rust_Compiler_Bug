{"sha": "86a1db604960e827a493f7b6bf74df6137e6e934", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZhMWRiNjA0OTYwZTgyN2E0OTNmN2I2YmY3NGRmNjEzN2U2ZTkzNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-03-09T15:49:53Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-03-09T15:49:53Z"}, "message": "flow.c (tidy_fallthru_edge): Be more careful finding the last BARRIER of a list.\n\n* flow.c (tidy_fallthru_edge): Be more careful finding the last\nBARRIER of a list.  Delete the cc0 setter as well as a cond jump.\n\nFrom-SVN: r25656", "tree": {"sha": "5cd66d0b370b33ae53c4b5e3bc6f7c9c6789230e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cd66d0b370b33ae53c4b5e3bc6f7c9c6789230e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86a1db604960e827a493f7b6bf74df6137e6e934", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a1db604960e827a493f7b6bf74df6137e6e934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a1db604960e827a493f7b6bf74df6137e6e934", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a1db604960e827a493f7b6bf74df6137e6e934/comments", "author": null, "committer": null, "parents": [{"sha": "39842893a1d85009d64f29d653b8291d9257648b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39842893a1d85009d64f29d653b8291d9257648b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39842893a1d85009d64f29d653b8291d9257648b"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "171d2eaebd55156ec1d2e045f82e31839045a069", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a1db604960e827a493f7b6bf74df6137e6e934/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a1db604960e827a493f7b6bf74df6137e6e934/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86a1db604960e827a493f7b6bf74df6137e6e934", "patch": "@@ -1,3 +1,8 @@\n+Tue Mar  9 15:48:15 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* flow.c (tidy_fallthru_edge): Be more careful finding the last\n+\tBARRIER of a list.  Delete the cc0 setter as well as a cond jump.\n+\n Tue Mar  9 15:26:02 1999  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* i386.md (ashlsi3 splitter): Fix typo in last change."}, {"sha": "1e17112208e248c1a3dcb7bcf32370d78f0cbf67", "filename": "gcc/flow.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86a1db604960e827a493f7b6bf74df6137e6e934/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86a1db604960e827a493f7b6bf74df6137e6e934/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=86a1db604960e827a493f7b6bf74df6137e6e934", "patch": "@@ -1933,7 +1933,7 @@ tidy_fallthru_edge (e, b, c)\n      edge e;\n      basic_block b, c;\n {\n-  rtx p, q, h;\n+  rtx q, h;\n \n   /* ??? In a late-running flow pass, other folks may have deleted basic\n      blocks by nopping out blocks, leaving multiple BARRIERs between here\n@@ -1943,12 +1943,10 @@ tidy_fallthru_edge (e, b, c)\n      barriers and notes.  */\n \n   q = NEXT_INSN (b->end);\n-  do\n-    {\n-      p = q;\n-      q = next_nonnote_insn (q);\n-    }\n-  while (GET_CODE (q) == BARRIER);\n+  if (q && GET_CODE (q) == NOTE)\n+    q = next_nonnote_insn (q);\n+  while (q && GET_CODE (q) == BARRIER)\n+    q = next_nonnote_insn (q);\n \n   /* Assert that we now actually do fall through.  */\n   h = c->head;\n@@ -1963,6 +1961,13 @@ tidy_fallthru_edge (e, b, c)\n   q = b->end;\n   if (GET_CODE (q) == JUMP_INSN)\n     {\n+#ifdef HAVE_cc0\n+      /* If this was a conditional jump, we need to also delete\n+\t the insn that set cc0.  */\n+      if (! simplejump_p (q) && condjump_p (q))\n+\tq = PREV_INSN (q);\n+#endif\n+\n       if (b->head == q)\n \t{\n \t  PUT_CODE (q, NOTE);\n@@ -1974,7 +1979,8 @@ tidy_fallthru_edge (e, b, c)\n     }\n \n   /* Selectively unlink the sequence.  */\n-  delete_insn_chain (NEXT_INSN (q), p);\n+  if (q != PREV_INSN (c->head))\n+    delete_insn_chain (NEXT_INSN (q), PREV_INSN (c->head));\n \n   e->flags |= EDGE_FALLTHRU;\n }"}]}