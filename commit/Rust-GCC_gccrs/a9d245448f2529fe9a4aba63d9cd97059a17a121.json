{"sha": "a9d245448f2529fe9a4aba63d9cd97059a17a121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlkMjQ1NDQ4ZjI1MjlmZTlhNGFiYTYzZDljZDk3MDU5YTE3YTEyMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-06-06T17:12:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-06-06T17:12:25Z"}, "message": "re PR c++/49264 (Internal compiler error: segmentation fault)\n\n\tPR c++/49264\n\t* gimple-fold.c (fold_stmt_1): Don't try to fold *& on the lhs\n\tif stmt folded into nothing.\n\t* tree-inline.c (fold_marked_statements): If a builtin at the\n\tend of a bb folded into nothing, just update cgraph edges\n\tand move to next bb.\n\t* cgraph.c (cgraph_update_edges_for_call_stmt_node): Allow new_stmt\n\tto be NULL.  Don't compute count and frequency if new_call is NULL.\n\n\t* g++.dg/opt/pr49264.C: New test.\n\nFrom-SVN: r174711", "tree": {"sha": "49149b6774ee1bc9cd12c2261a21557049cfe8b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49149b6774ee1bc9cd12c2261a21557049cfe8b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9d245448f2529fe9a4aba63d9cd97059a17a121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9d245448f2529fe9a4aba63d9cd97059a17a121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9d245448f2529fe9a4aba63d9cd97059a17a121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9d245448f2529fe9a4aba63d9cd97059a17a121/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a2fc6ada427baaff5b41dcad27861fe28255c82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2fc6ada427baaff5b41dcad27861fe28255c82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2fc6ada427baaff5b41dcad27861fe28255c82"}], "stats": {"total": 73, "additions": 67, "deletions": 6}, "files": [{"sha": "165783f85c7197929b1200b2737506fba184e382", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9d245448f2529fe9a4aba63d9cd97059a17a121", "patch": "@@ -1,3 +1,14 @@\n+2011-06-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/49264\n+\t* gimple-fold.c (fold_stmt_1): Don't try to fold *& on the lhs\n+\tif stmt folded into nothing.\n+\t* tree-inline.c (fold_marked_statements): If a builtin at the\n+\tend of a bb folded into nothing, just update cgraph edges\n+\tand move to next bb.\n+\t* cgraph.c (cgraph_update_edges_for_call_stmt_node): Allow new_stmt\n+\tto be NULL.  Don't compute count and frequency if new_call is NULL.\n+\n 2011-06-04  Diego Novillo  <dnovillo@google.com>\n \n \t* Makefile.in (lto-compress.o): Add dependency on LTO_STREAMER_H."}, {"sha": "02bf6ebeb2686d259954b0bb7246a79b1ea65989", "filename": "gcc/cgraph.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=a9d245448f2529fe9a4aba63d9cd97059a17a121", "patch": "@@ -1233,13 +1233,17 @@ cgraph_make_edge_direct (struct cgraph_edge *edge, struct cgraph_node *callee,\n \n /* Update or remove the corresponding cgraph edge if a GIMPLE_CALL\n    OLD_STMT changed into NEW_STMT.  OLD_CALL is gimple_call_fndecl\n-   of OLD_STMT if it was previously call statement.  */\n+   of OLD_STMT if it was previously call statement.\n+   If NEW_STMT is NULL, the call has been dropped without any\n+   replacement.  */\n \n static void\n cgraph_update_edges_for_call_stmt_node (struct cgraph_node *node,\n-\t\t\t\t\tgimple old_stmt, tree old_call, gimple new_stmt)\n+\t\t\t\t\tgimple old_stmt, tree old_call,\n+\t\t\t\t\tgimple new_stmt)\n {\n-  tree new_call = (is_gimple_call (new_stmt)) ? gimple_call_fndecl (new_stmt) : 0;\n+  tree new_call = (new_stmt && is_gimple_call (new_stmt))\n+\t\t  ? gimple_call_fndecl (new_stmt) : 0;\n \n   /* We are seeing indirect calls, then there is nothing to update.  */\n   if (!new_call && !old_call)\n@@ -1277,7 +1281,7 @@ cgraph_update_edges_for_call_stmt_node (struct cgraph_node *node,\n \t  frequency = e->frequency;\n \t  cgraph_remove_edge (e);\n \t}\n-      else\n+      else if (new_call)\n \t{\n \t  /* We are seeing new direct call; compute profile info based on BB.  */\n \t  basic_block bb = gimple_bb (new_stmt);"}, {"sha": "eaff1b3a4ee34d92061fb34d9700426247c9e27e", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=a9d245448f2529fe9a4aba63d9cd97059a17a121", "patch": "@@ -1577,6 +1577,11 @@ fold_stmt_1 (gimple_stmt_iterator *gsi, bool inplace)\n   bool changed = false;\n   gimple stmt = gsi_stmt (*gsi);\n   unsigned i;\n+  gimple_stmt_iterator gsinext = *gsi;\n+  gimple next_stmt;\n+\n+  gsi_next (&gsinext);\n+  next_stmt = gsi_end_p (gsinext) ? NULL : gsi_stmt (gsinext);\n \n   /* Fold the main computation performed by the statement.  */\n   switch (gimple_code (stmt))\n@@ -1665,10 +1670,19 @@ fold_stmt_1 (gimple_stmt_iterator *gsi, bool inplace)\n     default:;\n     }\n \n+  /* If stmt folds into nothing and it was the last stmt in a bb,\n+     don't call gsi_stmt.  */\n+  if (gsi_end_p (*gsi))\n+    {\n+      gcc_assert (next_stmt == NULL);\n+      return changed;\n+    }\n+\n   stmt = gsi_stmt (*gsi);\n \n-  /* Fold *& on the lhs.  */\n-  if (gimple_has_lhs (stmt))\n+  /* Fold *& on the lhs.  Don't do this if stmt folded into nothing,\n+     as we'd changing the next stmt.  */\n+  if (gimple_has_lhs (stmt) && stmt != next_stmt)\n     {\n       tree lhs = gimple_get_lhs (stmt);\n       if (lhs && REFERENCE_CLASS_P (lhs))"}, {"sha": "6d27ed9ff437ce920ae8f7da9e9dd51e4c81d1e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9d245448f2529fe9a4aba63d9cd97059a17a121", "patch": "@@ -1,3 +1,8 @@\n+2011-06-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/49264\n+\t* g++.dg/opt/pr49264.C: New test.\n+\n 2011-06-06  Mikael Pettersson  <mikpe@it.uu.se>\n \n \tPR tree-optimization/49243"}, {"sha": "dc23740f8f93bc6534b20c3f1fddeaed36d490f7", "filename": "gcc/testsuite/g++.dg/opt/pr49264.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr49264.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr49264.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr49264.C?ref=a9d245448f2529fe9a4aba63d9cd97059a17a121", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/49264\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct B { };\n+struct A { char a[sizeof (B) + 1]; } a;\n+\n+static inline void\n+foo (const B &b)\n+{\n+  __builtin_memcpy (&a, &b, sizeof (b));\n+}\n+\n+void\n+bar ()\n+{\n+  B c;\n+  foo (c);\n+}"}, {"sha": "dc3288b5b37e778b34d61811ac49fbe2cd32423c", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9d245448f2529fe9a4aba63d9cd97059a17a121/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=a9d245448f2529fe9a4aba63d9cd97059a17a121", "patch": "@@ -4055,6 +4055,14 @@ fold_marked_statements (int first, struct pointer_set_t *statements)\n \t\t  if (fold_stmt (&gsi))\n \t\t    {\n \t\t      gimple new_stmt;\n+\t\t      /* If a builtin at the end of a bb folded into nothing,\n+\t\t\t the following loop won't work.  */\n+\t\t      if (gsi_end_p (gsi))\n+\t\t\t{\n+\t\t\t  cgraph_update_edges_for_call_stmt (old_stmt,\n+\t\t\t\t\t\t\t     old_decl, NULL);\n+\t\t\t  break;\n+\t\t\t}\n \t\t      if (gsi_end_p (i2))\n \t\t\ti2 = gsi_start_bb (BASIC_BLOCK (first));\n \t\t      else"}]}