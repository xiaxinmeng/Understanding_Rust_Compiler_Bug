{"sha": "c240b3e0de184a2bbb4f78e86126bee4748ab147", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI0MGIzZTBkZTE4NGEyYmJiNGY3OGU4NjEyNmJlZTQ3NDhhYjE0Nw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-11-09T04:17:53Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-11-09T04:17:53Z"}, "message": "New obstack_next_free is not an lvalue\n\nNew obstack.h casts obstack_next_free to (void *), resulting in it\nbeing a non-lvalue, and warnings on pointer arithmetic.\n\ngcc/\n\t* gensupport.c (add_mnemonic_string): Make len param a size_t.\n\t(gen_mnemonic_setattr): Make \"size\" var a size_t.  Use\n\tobstack_blank_fast to shrink obstack.  Cast obstack_next_free\n\treturn value.\ngcc/objc/\n\t* objc-encoding.c (encode_aggregate_within): Cast obstack_next_free\n\treturn value.\n\nFrom-SVN: r229984", "tree": {"sha": "40d04b5ff75eb1362564309965f342bdd9391702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40d04b5ff75eb1362564309965f342bdd9391702"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c240b3e0de184a2bbb4f78e86126bee4748ab147", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c240b3e0de184a2bbb4f78e86126bee4748ab147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c240b3e0de184a2bbb4f78e86126bee4748ab147", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c240b3e0de184a2bbb4f78e86126bee4748ab147/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4c8d5ede1f35643163942af46bcb51d3c03c8d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c8d5ede1f35643163942af46bcb51d3c03c8d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c8d5ede1f35643163942af46bcb51d3c03c8d7"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "dfb83509b1a66aee8aea340df858f8e886eb5dff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c240b3e0de184a2bbb4f78e86126bee4748ab147/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c240b3e0de184a2bbb4f78e86126bee4748ab147/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c240b3e0de184a2bbb4f78e86126bee4748ab147", "patch": "@@ -1,3 +1,10 @@\n+2015-11-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* gensupport.c (add_mnemonic_string): Make len param a size_t.\n+\t(gen_mnemonic_setattr): Make \"size\" var a size_t.  Use\n+\tobstack_blank_fast to shrink obstack.  Cast obstack_next_free\n+\treturn value.\n+\n 2015-11-09  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/68182"}, {"sha": "484ead2f3e700a4695453fcc487ca12f6cf23b49", "filename": "gcc/gensupport.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c240b3e0de184a2bbb4f78e86126bee4748ab147/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c240b3e0de184a2bbb4f78e86126bee4748ab147/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=c240b3e0de184a2bbb4f78e86126bee4748ab147", "patch": "@@ -2253,7 +2253,7 @@ htab_eq_string (const void *s1, const void *s2)\n    and a permanent heap copy of STR is created.  */\n \n static void\n-add_mnemonic_string (htab_t mnemonic_htab, const char *str, int len)\n+add_mnemonic_string (htab_t mnemonic_htab, const char *str, size_t len)\n {\n   char *new_str;\n   void **slot;\n@@ -2306,7 +2306,7 @@ gen_mnemonic_setattr (htab_t mnemonic_htab, rtx insn)\n   for (i = 0; *cp; )\n     {\n       const char *ep, *sp;\n-      int size = 0;\n+      size_t size = 0;\n \n       while (ISSPACE (*cp))\n \tcp++;\n@@ -2333,8 +2333,7 @@ gen_mnemonic_setattr (htab_t mnemonic_htab, rtx insn)\n \t    {\n \t      /* Don't set a value if there are more than one\n \t\t instruction in the string.  */\n-\t      obstack_next_free (&string_obstack) =\n-\t\tobstack_next_free (&string_obstack) - size;\n+\t      obstack_blank_fast (&string_obstack, -size);\n \t      size = 0;\n \n \t      cp = sp;\n@@ -2346,7 +2345,7 @@ gen_mnemonic_setattr (htab_t mnemonic_htab, rtx insn)\n \tobstack_1grow (&string_obstack, '*');\n       else\n \tadd_mnemonic_string (mnemonic_htab,\n-\t\t\t     obstack_next_free (&string_obstack) - size,\n+\t\t\t     (char *) obstack_next_free (&string_obstack) - size,\n \t\t\t     size);\n       i++;\n     }"}, {"sha": "57b5db48bcb6e314b1cae1144afde5494dd806b6", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c240b3e0de184a2bbb4f78e86126bee4748ab147/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c240b3e0de184a2bbb4f78e86126bee4748ab147/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=c240b3e0de184a2bbb4f78e86126bee4748ab147", "patch": "@@ -1,3 +1,8 @@\n+2015-11-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* objc-encoding.c (encode_aggregate_within): Cast obstack_next_free\n+\treturn value.\n+\n 2015-10-29  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* objc-lang.c: Reorder #include's and remove duplicates."}, {"sha": "9c577e93bae8c699da1b0a45477861450499b460", "filename": "gcc/objc/objc-encoding.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c240b3e0de184a2bbb4f78e86126bee4748ab147/gcc%2Fobjc%2Fobjc-encoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c240b3e0de184a2bbb4f78e86126bee4748ab147/gcc%2Fobjc%2Fobjc-encoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-encoding.c?ref=c240b3e0de184a2bbb4f78e86126bee4748ab147", "patch": "@@ -495,13 +495,14 @@ encode_aggregate_within (tree type, int curtype, int format, int left,\n \n   if (flag_next_runtime)\n     {\n-      if (ob_size > 0  &&  *(obstack_next_free (&util_obstack) - 1) == '^')\n+      if (ob_size > 0\n+\t  && *((char *) obstack_next_free (&util_obstack) - 1) == '^')\n \tpointed_to = true;\n \n       if ((format == OBJC_ENCODE_INLINE_DEFS || generating_instance_variables)\n \t  && (!pointed_to || ob_size - curtype == 1\n \t      || (ob_size - curtype == 2\n-\t\t  && *(obstack_next_free (&util_obstack) - 2) == 'r')))\n+\t\t  && *((char *) obstack_next_free (&util_obstack) - 2) == 'r')))\n \tinline_contents = true;\n     }\n   else\n@@ -512,9 +513,10 @@ encode_aggregate_within (tree type, int curtype, int format, int left,\n \t comment above applies: in that case we should avoid encoding\n \t the names of instance variables.\n       */\n-      char c1 = ob_size > 1 ? *(obstack_next_free (&util_obstack) - 2) : 0;\n-      char c0 = ob_size > 0 ? *(obstack_next_free (&util_obstack) - 1) : 0;\n+      char c0, c1;\n \n+      c1 = ob_size > 1 ? *((char *) obstack_next_free (&util_obstack) - 2) : 0;\n+      c0 = ob_size > 0 ? *((char *) obstack_next_free (&util_obstack) - 1) : 0;\n       if (c0 == '^' || (c1 == '^' && c0 == 'r'))\n \tpointed_to = true;\n "}]}