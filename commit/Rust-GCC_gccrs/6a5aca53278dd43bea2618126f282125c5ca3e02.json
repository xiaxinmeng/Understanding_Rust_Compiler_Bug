{"sha": "6a5aca53278dd43bea2618126f282125c5ca3e02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE1YWNhNTMyNzhkZDQzYmVhMjYxODEyNmYyODIxMjVjNWNhM2UwMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-02-19T18:29:52Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-02-19T18:29:52Z"}, "message": "Fix ubsan in gimple-fold.c (PR tree-optimization/82491).\n\n2018-02-19  Martin Liska  <mliska@suse.cz>\n\t    Richard Sandiford  <richard.sandiford@linaro.org>\n\n\tPR tree-optimization/82491\n\t* gimple-fold.c (get_base_constructor): Make earlier bail out\n\tto prevent ubsan.\n\nCo-Authored-By: Richard Sandiford <richard.sandiford@linaro.org>\n\nFrom-SVN: r257816", "tree": {"sha": "0faf090d04bbffe5e6dd904eeb72d6e34234cb3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0faf090d04bbffe5e6dd904eeb72d6e34234cb3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a5aca53278dd43bea2618126f282125c5ca3e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5aca53278dd43bea2618126f282125c5ca3e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a5aca53278dd43bea2618126f282125c5ca3e02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5aca53278dd43bea2618126f282125c5ca3e02/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a197d3406c4c2c472b8f38fb5de2bdc4e3db9476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a197d3406c4c2c472b8f38fb5de2bdc4e3db9476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a197d3406c4c2c472b8f38fb5de2bdc4e3db9476"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "7a37db734da6afe97213e6727f6ebd7f8b82a9bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5aca53278dd43bea2618126f282125c5ca3e02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5aca53278dd43bea2618126f282125c5ca3e02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a5aca53278dd43bea2618126f282125c5ca3e02", "patch": "@@ -1,3 +1,10 @@\n+2018-02-19  Martin Liska  <mliska@suse.cz>\n+\t    Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR tree-optimization/82491\n+\t* gimple-fold.c (get_base_constructor): Make earlier bail out\n+\tto prevent ubsan.\n+\n 2018-02-19  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def: Change NEG macro expansions from"}, {"sha": "c9dad6f42d13638995db9019a0861cc7501b811a", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5aca53278dd43bea2618126f282125c5ca3e02/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5aca53278dd43bea2618126f282125c5ca3e02/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=6a5aca53278dd43bea2618126f282125c5ca3e02", "patch": "@@ -6442,13 +6442,9 @@ get_base_constructor (tree base, poly_int64_pod *bit_offset,\n \n   if (TREE_CODE (base) == MEM_REF)\n     {\n-      if (!integer_zerop (TREE_OPERAND (base, 1)))\n-\t{\n-\t  if (!tree_fits_shwi_p (TREE_OPERAND (base, 1)))\n-\t    return NULL_TREE;\n-\t  *bit_offset += (mem_ref_offset (base).force_shwi ()\n-\t\t\t  * BITS_PER_UNIT);\n-\t}\n+      poly_offset_int boff = *bit_offset + mem_ref_offset (base) * BITS_PER_UNIT;\n+      if (!boff.to_shwi (bit_offset))\n+\treturn NULL_TREE;\n \n       if (valueize\n \t  && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME)"}]}