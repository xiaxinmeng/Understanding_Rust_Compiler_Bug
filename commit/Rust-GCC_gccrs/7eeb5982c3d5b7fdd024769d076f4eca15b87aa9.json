{"sha": "7eeb5982c3d5b7fdd024769d076f4eca15b87aa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VlYjU5ODJjM2Q1YjdmZGQwMjQ3NjlkMDc2ZjRlY2ExNWI4N2FhOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-08-14T10:14:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-08-14T10:14:25Z"}, "message": "Add more entries to the C++ get_std_name_hint array\n\n\t* name-lookup.c (get_std_name_hint): Add more entries.\n\nFrom-SVN: r274475", "tree": {"sha": "7ffe401db4062f815ae737f5d15089ed7c55c7ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ffe401db4062f815ae737f5d15089ed7c55c7ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eeb5982c3d5b7fdd024769d076f4eca15b87aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eeb5982c3d5b7fdd024769d076f4eca15b87aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eeb5982c3d5b7fdd024769d076f4eca15b87aa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eeb5982c3d5b7fdd024769d076f4eca15b87aa9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b0f6ee8b58dedc18192933e35f81b2b71d44fe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b0f6ee8b58dedc18192933e35f81b2b71d44fe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b0f6ee8b58dedc18192933e35f81b2b71d44fe7"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "186ee7bea0f25238524220e440013d112a053631", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eeb5982c3d5b7fdd024769d076f4eca15b87aa9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eeb5982c3d5b7fdd024769d076f4eca15b87aa9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7eeb5982c3d5b7fdd024769d076f4eca15b87aa9", "patch": "@@ -1,3 +1,7 @@\n+2019-08-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* name-lookup.c (get_std_name_hint): Add more entries.\n+\n 2019-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl2.c (grok_array_decl): Use the location of the open square"}, {"sha": "d5e491e9072a34db0eba50b9726035794c2d4e0f", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eeb5982c3d5b7fdd024769d076f4eca15b87aa9/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eeb5982c3d5b7fdd024769d076f4eca15b87aa9/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=7eeb5982c3d5b7fdd024769d076f4eca15b87aa9", "patch": "@@ -5550,9 +5550,11 @@ get_std_name_hint (const char *name)\n     {\"make_any\", \"<any>\", cxx17},\n     /* <array>.  */\n     {\"array\", \"<array>\", cxx11},\n+    {\"to_array\", \"<array>\", cxx2a},\n     /* <atomic>.  */\n     {\"atomic\", \"<atomic>\", cxx11},\n     {\"atomic_flag\", \"<atomic>\", cxx11},\n+    {\"atomic_ref\", \"<atomic>\", cxx2a},\n     /* <bitset>.  */\n     {\"bitset\", \"<bitset>\", cxx11},\n     /* <complex>.  */\n@@ -5575,9 +5577,17 @@ get_std_name_hint (const char *name)\n     {\"ofstream\", \"<fstream>\", cxx98},\n     /* <functional>.  */\n     {\"bind\", \"<functional>\", cxx11},\n+    {\"bind_front\", \"<functional>\", cxx2a},\n     {\"function\", \"<functional>\", cxx11},\n     {\"hash\", \"<functional>\", cxx11},\n+    {\"invoke\", \"<functional>\", cxx17},\n     {\"mem_fn\", \"<functional>\", cxx11},\n+    {\"not_fn\", \"<functional>\", cxx17},\n+    {\"reference_wrapper\", \"<functional>\", cxx11},\n+    {\"unwrap_reference\", \"<functional>\", cxx2a},\n+    {\"unwrap_reference_t\", \"<functional>\", cxx2a},\n+    {\"unwrap_ref_decay\", \"<functional>\", cxx2a},\n+    {\"unwrap_ref_decay_t\", \"<functional>\", cxx2a},\n     /* <future>. */\n     {\"async\", \"<future>\", cxx11},\n     {\"future\", \"<future>\", cxx11},\n@@ -5618,11 +5628,16 @@ get_std_name_hint (const char *name)\n     {\"map\", \"<map>\", cxx98},\n     {\"multimap\", \"<map>\", cxx98},\n     /* <memory>.  */\n+    {\"allocate_shared\", \"<memory>\", cxx11},\n+    {\"allocator\", \"<memory>\", cxx98},\n+    {\"allocator_traits\", \"<memory>\", cxx11},\n     {\"make_shared\", \"<memory>\", cxx11},\n     {\"make_unique\", \"<memory>\", cxx11},\n     {\"shared_ptr\", \"<memory>\", cxx11},\n     {\"unique_ptr\", \"<memory>\", cxx11},\n     {\"weak_ptr\", \"<memory>\", cxx11},\n+    /* <memory_resource>.  */\n+    {\"pmr\", \"<memory_resource>\", cxx17},\n     /* <mutex>.  */\n     {\"mutex\", \"<mutex>\", cxx11},\n     {\"timed_mutex\", \"<mutex>\", cxx11},\n@@ -5672,14 +5687,39 @@ get_std_name_hint (const char *name)\n     {\"u16string\", \"<string>\", cxx11},\n     {\"u32string\", \"<string>\", cxx11},\n     /* <string_view>.  */\n+    {\"basic_string_view\", \"<string_view>\", cxx17},\n     {\"string_view\", \"<string_view>\", cxx17},\n     /* <thread>.  */\n     {\"thread\", \"<thread>\", cxx11},\n+    {\"this_thread\", \"<thread>\", cxx11},\n     /* <tuple>.  */\n+    {\"apply\", \"<tuple>\", cxx17},\n+    {\"forward_as_tuple\", \"<tuple>\", cxx11},\n+    {\"make_from_tuple\", \"<tuple>\", cxx17},\n     {\"make_tuple\", \"<tuple>\", cxx11},\n+    {\"tie\", \"<tuple>\", cxx11},\n     {\"tuple\", \"<tuple>\", cxx11},\n+    {\"tuple_cat\", \"<tuple>\", cxx11},\n     {\"tuple_element\", \"<tuple>\", cxx11},\n+    {\"tuple_element_t\", \"<tuple>\", cxx14},\n     {\"tuple_size\", \"<tuple>\", cxx11},\n+    {\"tuple_size_v\", \"<tuple>\", cxx17},\n+    /* <type_traits>.  */\n+    {\"enable_if\", \"<type_traits>\", cxx11},\n+    {\"enable_if_t\", \"<type_traits>\", cxx14},\n+    {\"invoke_result\", \"<type_traits>\", cxx17},\n+    {\"invoke_result_t\", \"<type_traits>\", cxx17},\n+    {\"remove_cvref\", \"<type_traits>\", cxx2a},\n+    {\"remove_cvref_t\", \"<type_traits>\", cxx2a},\n+    {\"type_identity\", \"<type_traits>\", cxx2a},\n+    {\"type_identity_t\", \"<type_traits>\", cxx2a},\n+    {\"void_t\", \"<type_traits>\", cxx17},\n+    {\"conjunction\", \"<type_traits>\", cxx17},\n+    {\"conjunction_v\", \"<type_traits>\", cxx17},\n+    {\"disjunction\", \"<type_traits>\", cxx17},\n+    {\"disjunction_v\", \"<type_traits>\", cxx17},\n+    {\"negation\", \"<type_traits>\", cxx17},\n+    {\"negation_v\", \"<type_traits>\", cxx17},\n     /* <unordered_map>.  */\n     {\"unordered_map\", \"<unordered_map>\", cxx11},\n     {\"unordered_multimap\", \"<unordered_map>\", cxx11},"}]}