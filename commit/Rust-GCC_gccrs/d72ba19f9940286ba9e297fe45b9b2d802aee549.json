{"sha": "d72ba19f9940286ba9e297fe45b9b2d802aee549", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcyYmExOWY5OTQwMjg2YmE5ZTI5N2ZlNDViOWIyZDgwMmFlZTU0OQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2018-05-24T13:06:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:06:34Z"}, "message": "[Ada] Improve GNATprove messages on unproved checks\n\nGNATprove messages may point out to part of an assertion as not being proved,\nand in such a case it displays the sub-expression. This code relies on\nPprint.Expression_Image, which is improved here to display better some kinds of\nexpressions.\n\nThere is no impact on compilation.\n\n2018-05-24  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* pprint.adb (Expression_Image): Improve the printing of expressions,\n\tby taking more cases into account, in particular qualified expressions\n\tand aggregates.  Also count more the number of parentheses to close\n\tafter the expression.\n\nFrom-SVN: r260665", "tree": {"sha": "f43b5f352e5bc281c8b22e5a3332fb0c231848ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f43b5f352e5bc281c8b22e5a3332fb0c231848ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d72ba19f9940286ba9e297fe45b9b2d802aee549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72ba19f9940286ba9e297fe45b9b2d802aee549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d72ba19f9940286ba9e297fe45b9b2d802aee549", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72ba19f9940286ba9e297fe45b9b2d802aee549/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "24e959661f42da6c5c65de96a7c9d88082c3ffd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e959661f42da6c5c65de96a7c9d88082c3ffd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e959661f42da6c5c65de96a7c9d88082c3ffd8"}], "stats": {"total": 74, "additions": 66, "deletions": 8}, "files": [{"sha": "2e1c794e0dc45867f49f4a000de18e7ca5b948c5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72ba19f9940286ba9e297fe45b9b2d802aee549/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72ba19f9940286ba9e297fe45b9b2d802aee549/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d72ba19f9940286ba9e297fe45b9b2d802aee549", "patch": "@@ -1,3 +1,10 @@\n+2018-05-24  Yannick Moy  <moy@adacore.com>\n+\n+\t* pprint.adb (Expression_Image): Improve the printing of expressions,\n+\tby taking more cases into account, in particular qualified expressions\n+\tand aggregates.  Also count more the number of parentheses to close\n+\tafter the expression.\n+\n 2018-05-24  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch3.adb (Is_Visible_Component): For untagged types add missing"}, {"sha": "aa793d80f7ba6e749e44c427c715e1b605b4930f", "filename": "gcc/ada/pprint.adb", "status": "modified", "additions": 59, "deletions": 8, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72ba19f9940286ba9e297fe45b9b2d802aee549/gcc%2Fada%2Fpprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72ba19f9940286ba9e297fe45b9b2d802aee549/gcc%2Fada%2Fpprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpprint.adb?ref=d72ba19f9940286ba9e297fe45b9b2d802aee549", "patch": "@@ -51,7 +51,7 @@ package body Pprint is\n       From_Source  : constant Boolean :=\n                        Comes_From_Source (Expr)\n                          and then not Opt.Debug_Generated_Code;\n-      Append_Paren : Boolean := False;\n+      Append_Paren : Natural := 0;\n       Left         : Node_Id := Original_Node (Expr);\n       Right        : Node_Id := Original_Node (Expr);\n \n@@ -732,7 +732,9 @@ package body Pprint is\n             when N_Range =>\n                Left := Original_Node (Low_Bound (Left));\n \n-            when N_Type_Conversion =>\n+            when N_Qualified_Expression\n+               | N_Type_Conversion\n+            =>\n                Left := Original_Node (Subtype_Mark (Left));\n \n             --  For any other item, quit loop\n@@ -756,6 +758,20 @@ package body Pprint is\n             =>\n                Right := Original_Node (Selector_Name (Right));\n \n+            when N_Qualified_Expression\n+               | N_Type_Conversion\n+            =>\n+               Right := Original_Node (Expression (Right));\n+\n+               --  If argument does not already account for a closing\n+               --  parenthesis, count one here.\n+\n+               if not Nkind_In (Right, N_Quantified_Expression,\n+                                       N_Aggregate)\n+               then\n+                  Append_Paren := Append_Paren + 1;\n+               end if;\n+\n             when N_Designator =>\n                Right := Original_Node (Identifier (Right));\n \n@@ -768,9 +784,16 @@ package body Pprint is\n             when N_Parameter_Association =>\n                Right := Original_Node (Explicit_Actual_Parameter (Right));\n \n+            when N_Component_Association =>\n+               if Present (Expression (Right)) then\n+                  Right := Expression (Right);\n+               else\n+                  Right := Last (Choices (Right));\n+               end if;\n+\n             when N_Indexed_Component =>\n                Right := Original_Node (Last (Sinfo.Expressions (Right)));\n-               Append_Paren := True;\n+               Append_Paren := Append_Paren + 1;\n \n             when N_Function_Call =>\n                if Present (Sinfo.Parameter_Associations (Right)) then\n@@ -787,13 +810,16 @@ package body Pprint is\n                      while Present (Rover) loop\n                         if Comes_From_Source (Original_Node (Rover)) then\n                            Right := Original_Node (Rover);\n-                           Append_Paren := True;\n                            Found := True;\n                         end if;\n \n                         Next (Rover);\n                      end loop;\n \n+                     if Found then\n+                        Append_Paren := Append_Paren + 1;\n+                     end if;\n+\n                      --  Quit loop if no Comes_From_Source parameters\n \n                      exit when not Found;\n@@ -807,6 +833,33 @@ package body Pprint is\n \n             when N_Quantified_Expression =>\n                Right := Original_Node (Condition (Right));\n+               Append_Paren := Append_Paren + 1;\n+\n+            when N_Aggregate =>\n+               declare\n+                  Aggr : constant Node_Id := Right;\n+                  Sub  : Node_Id;\n+               begin\n+                  Sub := First (Expressions (Aggr));\n+                  while Present (Sub) loop\n+                     if Sloc (Sub) > Sloc (Right) then\n+                        Right := Sub;\n+                     end if;\n+                     Next (Sub);\n+                  end loop;\n+\n+                  Sub := First (Component_Associations (Aggr));\n+                  while Present (Sub) loop\n+                     if Sloc (Sub) > Sloc (Right) then\n+                        Right := Sub;\n+                     end if;\n+                     Next (Sub);\n+                  end loop;\n+\n+                  exit when Right = Aggr;\n+\n+                  Append_Paren := Append_Paren + 1;\n+               end;\n \n             --  For all other items, quit the loop\n \n@@ -886,11 +939,9 @@ package body Pprint is\n                   end if;\n                end;\n \n-            elsif Append_Paren then\n-               return Buffer (1 .. Index) & Expr_Name (Right, False) & ')';\n-\n             else\n-               return Buffer (1 .. Index) & Expr_Name (Right, False);\n+               return Buffer (1 .. Index) & Expr_Name (Right, False)\n+                 & (1 .. Append_Paren => ')');\n             end if;\n          end;\n       end;"}]}