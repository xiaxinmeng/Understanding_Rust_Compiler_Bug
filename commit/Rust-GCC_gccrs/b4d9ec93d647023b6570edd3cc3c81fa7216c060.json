{"sha": "b4d9ec93d647023b6570edd3cc3c81fa7216c060", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkOWVjOTNkNjQ3MDIzYjY1NzBlZGQzY2MzYzgxZmE3MjE2YzA2MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-11-13T11:35:56Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-11-13T11:35:56Z"}, "message": "deque.tcc (deque<>::_M_push_back_aux, [...]): Do not copy unnecessarily to __t_copy.\n\n2007-11-13  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/deque.tcc (deque<>::_M_push_back_aux,\n\t_M_push_front_aux): Do not copy unnecessarily to __t_copy.\n\nFrom-SVN: r130136", "tree": {"sha": "8842f0d90d5b9e5642ed49804f54315ce7586c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8842f0d90d5b9e5642ed49804f54315ce7586c3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4d9ec93d647023b6570edd3cc3c81fa7216c060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d9ec93d647023b6570edd3cc3c81fa7216c060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d9ec93d647023b6570edd3cc3c81fa7216c060", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d9ec93d647023b6570edd3cc3c81fa7216c060/comments", "author": null, "committer": null, "parents": [{"sha": "983a6f8dd33096a5de1e48c70fc860cca41d57d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983a6f8dd33096a5de1e48c70fc860cca41d57d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/983a6f8dd33096a5de1e48c70fc860cca41d57d8"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "d4fb6715c10961ece7648343f4e481bd077a9991", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d9ec93d647023b6570edd3cc3c81fa7216c060/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d9ec93d647023b6570edd3cc3c81fa7216c060/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b4d9ec93d647023b6570edd3cc3c81fa7216c060", "patch": "@@ -1,3 +1,8 @@\n+2007-11-13  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/deque.tcc (deque<>::_M_push_back_aux,\n+\t_M_push_front_aux): Do not copy unnecessarily to __t_copy.\n+\n 2007-11-12  Chris Jefferson  <chris@bubblescope.net>\n \t    Paolo Carlini  <pcarlini@suse.de>\n "}, {"sha": "7267accf41e48e264ba640d21894918e1a9289ac", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d9ec93d647023b6570edd3cc3c81fa7216c060/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d9ec93d647023b6570edd3cc3c81fa7216c060/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=b4d9ec93d647023b6570edd3cc3c81fa7216c060", "patch": "@@ -350,21 +350,22 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       void\n       deque<_Tp, _Alloc>::\n       _M_push_back_aux(_Args&&... __args)\n-      {\n-\tvalue_type __t_copy(std::forward<_Args>(__args)...);\n #else\n       void\n       deque<_Tp, _Alloc>::\n       _M_push_back_aux(const value_type& __t)\n-      {\n-\tvalue_type __t_copy = __t;\n #endif\n+      {\n \t_M_reserve_map_at_back();\n \t*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();\n \ttry\n \t  {\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n \t    this->_M_impl.construct(this->_M_impl._M_finish._M_cur,\n-\t\t\t\t    _GLIBCXX_MOVE(__t_copy));\n+\t\t\t\t    std::forward<_Args>(__args)...);\n+#else\n+\t    this->_M_impl.construct(this->_M_impl._M_finish._M_cur, __t);\n+#endif\n \t    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node\n \t\t\t\t\t\t+ 1);\n \t    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;\n@@ -383,24 +384,25 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       void\n       deque<_Tp, _Alloc>::\n       _M_push_front_aux(_Args&&... __args)\n-      {\n-\tvalue_type __t_copy(std::forward<_Args>(__args)...);\n #else\n       void\n       deque<_Tp, _Alloc>::\n       _M_push_front_aux(const value_type& __t)\n-      {\n-\tvalue_type __t_copy = __t;\n #endif\n+      {\n \t_M_reserve_map_at_front();\n \t*(this->_M_impl._M_start._M_node - 1) = this->_M_allocate_node();\n \ttry\n \t  {\n \t    this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node\n \t\t\t\t\t       - 1);\n \t    this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_last - 1;\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n \t    this->_M_impl.construct(this->_M_impl._M_start._M_cur,\n-\t\t\t\t    _GLIBCXX_MOVE(__t_copy));\n+\t\t\t\t    std::forward<_Args>(__args)...);\n+#else\n+\t    this->_M_impl.construct(this->_M_impl._M_start._M_cur, __t);\n+#endif\n \t  }\n \tcatch(...)\n \t  {"}]}