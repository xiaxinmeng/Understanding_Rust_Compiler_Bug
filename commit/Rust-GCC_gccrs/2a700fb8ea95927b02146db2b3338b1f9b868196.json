{"sha": "2a700fb8ea95927b02146db2b3338b1f9b868196", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE3MDBmYjhlYTk1OTI3YjAyMTQ2ZGIyYjMzMzhiMWY5Yjg2ODE5Ng==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-08-02T16:33:50Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-08-09T11:39:38Z"}, "message": "Don't consider '-foffload-abi' in 'DEF_GOACC_BUILTIN', 'DEF_GOMP_BUILTIN'\n\nSince Tom's PR64707 commit r220037 (Git commit\n1506ae0e1e865fb7a42fc37a47f1799b71f21c53) \"Make fopenmp an LTO option\" as well\nas PR64672 commit r220038 (Git commit a0c88d0629a33161add8d5bc083f1e59f3f756f7)\n\"Make fopenacc an LTO option\", we're now actually passing\n'-fopenacc'/'-fopenmp' to the 'mkoffload's, which will pass these on to the\noffload compilers.\n\n\tgcc/\n\t* builtins.def (DEF_GOACC_BUILTIN, DEF_GOMP_BUILTIN): Don't\n\tconsider '-foffload-abi'.\n\t* common.opt (-foffload-abi): Remove 'Var', 'Init'.\n\t* opts.c (common_handle_option) <-foffload-abi> [ACCEL_COMPILER]:\n\tIgnore.", "tree": {"sha": "5bf70253579d416f882328157f04ddb28db47598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf70253579d416f882328157f04ddb28db47598"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a700fb8ea95927b02146db2b3338b1f9b868196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a700fb8ea95927b02146db2b3338b1f9b868196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a700fb8ea95927b02146db2b3338b1f9b868196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a700fb8ea95927b02146db2b3338b1f9b868196/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5230519305946338ddc7107ce45c740812142b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5230519305946338ddc7107ce45c740812142b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5230519305946338ddc7107ce45c740812142b4"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "45a09b4d42def5753ee6740b59d1209dd6e7a3d1", "filename": "gcc/builtins.def", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a700fb8ea95927b02146db2b3338b1f9b868196/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a700fb8ea95927b02146db2b3338b1f9b868196/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=2a700fb8ea95927b02146db2b3338b1f9b868196", "patch": "@@ -205,14 +205,11 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Builtin used by the implementation of OpenACC and OpenMP.  Few of these are\n    actually implemented in the compiler; most are in libgomp.  */\n-/* These builtins also need to be enabled in offloading compilers invoked from\n-   mkoffload; for that purpose, we're checking the -foffload-abi flag here.  */\n #undef DEF_GOACC_BUILTIN\n #define DEF_GOACC_BUILTIN(ENUM, NAME, TYPE, ATTRS) \\\n   DEF_BUILTIN (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE, TYPE,    \\\n \t       false, true, true, ATTRS, false, \\\n-\t       (flag_openacc \\\n-\t\t|| flag_offload_abi != OFFLOAD_ABI_UNSET))\n+\t       flag_openacc)\n #undef DEF_GOACC_BUILTIN_COMPILER\n #define DEF_GOACC_BUILTIN_COMPILER(ENUM, NAME, TYPE, ATTRS) \\\n   DEF_BUILTIN (ENUM, \"__builtin_\" NAME, BUILT_IN_NORMAL, TYPE, TYPE,    \\\n@@ -227,8 +224,7 @@ along with GCC; see the file COPYING3.  If not see\n                false, true, true, ATTRS, false, \\\n \t       (flag_openacc \\\n \t\t|| flag_openmp \\\n-\t\t|| flag_tree_parallelize_loops > 1 \\\n-\t\t|| flag_offload_abi != OFFLOAD_ABI_UNSET))\n+\t\t|| flag_tree_parallelize_loops > 1))\n \n /* Builtin used by the implementation of GNU TM.  These\n    functions are mapped to the actual implementation of the STM library. */"}, {"sha": "ed8ab5fbe13d4009f1d8be4adbe1f19ef457daf1", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a700fb8ea95927b02146db2b3338b1f9b868196/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a700fb8ea95927b02146db2b3338b1f9b868196/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=2a700fb8ea95927b02146db2b3338b1f9b868196", "patch": "@@ -2112,7 +2112,7 @@ Common Driver Joined MissingArgError(options or targets=options missing after %q\n -foffload-options=<targets>=<options>\tSpecify options for the offloading targets.\n \n foffload-abi=\n-Common Joined RejectNegative Enum(offload_abi) Var(flag_offload_abi) Init(OFFLOAD_ABI_UNSET)\n+Common Joined RejectNegative Enum(offload_abi)\n -foffload-abi=[lp64|ilp32]\tSet the ABI to use in an offload compiler.\n \n Enum"}, {"sha": "1f52e1139c75fcfa976f65a055e97ec9d2eeb3a7", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a700fb8ea95927b02146db2b3338b1f9b868196/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a700fb8ea95927b02146db2b3338b1f9b868196/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=2a700fb8ea95927b02146db2b3338b1f9b868196", "patch": "@@ -2737,12 +2737,14 @@ common_handle_option (struct gcc_options *opts,\n       /* Deferred.  */\n       break;\n \n-#ifndef ACCEL_COMPILER\n     case OPT_foffload_abi_:\n+#ifdef ACCEL_COMPILER\n+      /* Handled in the 'mkoffload's.  */\n+#else\n       error_at (loc, \"%<-foffload-abi%> option can be specified only for \"\n \t\t\"offload compiler\");\n-      break;\n #endif\n+      break;\n \n     case OPT_fpack_struct_:\n       if (value <= 0 || (value & (value - 1)) || value > 16)"}]}