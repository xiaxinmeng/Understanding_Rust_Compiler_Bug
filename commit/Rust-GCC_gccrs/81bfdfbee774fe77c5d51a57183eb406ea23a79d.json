{"sha": "81bfdfbee774fe77c5d51a57183eb406ea23a79d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFiZmRmYmVlNzc0ZmU3N2M1ZDUxYTU3MTgzZWI0MDZlYTIzYTc5ZA==", "commit": {"author": {"name": "Graham Stott", "email": "graham.stott@btinternet.com", "date": "2003-10-25T23:14:14Z"}, "committer": {"name": "Graham Stott", "email": "grahams@gcc.gnu.org", "date": "2003-10-25T23:14:14Z"}, "message": "Fix bootstrap failure.\n\n       * expmed.c (store_bit_field): Don't compare bitsize against\n       modes with zero bit-size.\n\n       (extract_bit_field): Likewise\n\nFrom-SVN: r72937", "tree": {"sha": "1d85f341e9733337f4c46eca42129f144c2d6acc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d85f341e9733337f4c46eca42129f144c2d6acc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81bfdfbee774fe77c5d51a57183eb406ea23a79d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81bfdfbee774fe77c5d51a57183eb406ea23a79d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81bfdfbee774fe77c5d51a57183eb406ea23a79d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81bfdfbee774fe77c5d51a57183eb406ea23a79d/comments", "author": {"login": "Graham-stott", "id": 17800827, "node_id": "MDQ6VXNlcjE3ODAwODI3", "avatar_url": "https://avatars.githubusercontent.com/u/17800827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Graham-stott", "html_url": "https://github.com/Graham-stott", "followers_url": "https://api.github.com/users/Graham-stott/followers", "following_url": "https://api.github.com/users/Graham-stott/following{/other_user}", "gists_url": "https://api.github.com/users/Graham-stott/gists{/gist_id}", "starred_url": "https://api.github.com/users/Graham-stott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Graham-stott/subscriptions", "organizations_url": "https://api.github.com/users/Graham-stott/orgs", "repos_url": "https://api.github.com/users/Graham-stott/repos", "events_url": "https://api.github.com/users/Graham-stott/events{/privacy}", "received_events_url": "https://api.github.com/users/Graham-stott/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b97e55dac008806787ba2dc411a503e3a721569f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97e55dac008806787ba2dc411a503e3a721569f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b97e55dac008806787ba2dc411a503e3a721569f"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "5aaa633976060a79eff21ebc3d33d7aee8fbcf09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81bfdfbee774fe77c5d51a57183eb406ea23a79d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81bfdfbee774fe77c5d51a57183eb406ea23a79d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81bfdfbee774fe77c5d51a57183eb406ea23a79d", "patch": "@@ -1,3 +1,11 @@\n+2003-10-26  Graham Stott  <graham.stott@btinternet.com>\n+\n+\tFix bootstrap failure.\n+\t* expmed.c (store_bit_field): Don't compare bitsize against\n+\tmodes with zero bit-size.\n+\n+\t(extract_bit_field): Likewise\n+\n 2003-10-25  Jan Hubicka  <jh@suse.cz>\n \n \t* dwarf2out.c (dw_cfi_oprnd_struct): Offset is HOST_WIDE_INT."}, {"sha": "cb30ff35db6f3b9ab629735c815cb8d7b69b72d5", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81bfdfbee774fe77c5d51a57183eb406ea23a79d/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81bfdfbee774fe77c5d51a57183eb406ea23a79d/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=81bfdfbee774fe77c5d51a57183eb406ea23a79d", "patch": "@@ -335,6 +335,7 @@ store_bit_field (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n                 + (offset * UNITS_PER_WORD);\n \n   if (bitpos == 0\n+      && GET_MODE_BITSIZE (fieldmode) != 0\n       && bitsize >= GET_MODE_BITSIZE (fieldmode)\n       && (GET_CODE (op0) != MEM\n \t  ? ((GET_MODE_SIZE (fieldmode) >= UNITS_PER_WORD\n@@ -1032,6 +1033,7 @@ extract_bit_field (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n   if (GET_CODE (op0) == REG\n       && mode == GET_MODE (op0)\n       && bitnum == 0\n+      && GET_MODE_BITSIZE (GET_MODE (op0)) != 0\n       && bitsize >= GET_MODE_BITSIZE (GET_MODE (op0)))\n     {\n       /* We're trying to extract a full register from itself."}]}