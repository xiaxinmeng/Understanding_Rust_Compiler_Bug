{"sha": "7c23b88c1fc2303d7c5c09334f00d10c5456aa53", "node_id": "C_kwDOANBUbNoAKDdjMjNiODhjMWZjMjMwM2Q3YzVjMDkzMzRmMDBkMTBjNTQ1NmFhNTM", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-07-18T14:14:55Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-05T07:21:02Z"}, "message": "[Ada] Cleanup analysis of quantified expressions with empty ranges\n\nCleanup handling of quantified expressions before using it as an inspiration\nfor fixing the handling of iterated component associations. Behavior is\nunaffected.\n\ngcc/ada/\n\n\t* sem_ch4.adb\n\t(Is_Empty_Range): Move error reporting to the caller.\n\t(Analyze_Qualified_Expression): Move error reporting from Is_Empty_Range;\n\tadd matching call to End_Scope before rewriting and returning.", "tree": {"sha": "11b386598963d8dc2ec9a9b015fd5df885a698d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11b386598963d8dc2ec9a9b015fd5df885a698d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c23b88c1fc2303d7c5c09334f00d10c5456aa53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c23b88c1fc2303d7c5c09334f00d10c5456aa53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c23b88c1fc2303d7c5c09334f00d10c5456aa53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c23b88c1fc2303d7c5c09334f00d10c5456aa53/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72c5ce77a028e57048c8666a7b782e3b921ee28c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72c5ce77a028e57048c8666a7b782e3b921ee28c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72c5ce77a028e57048c8666a7b782e3b921ee28c"}], "stats": {"total": 59, "additions": 27, "deletions": 32}, "files": [{"sha": "ed2f621c9d9519712ca3bfc31796fb516daa2fc3", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 27, "deletions": 32, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c23b88c1fc2303d7c5c09334f00d10c5456aa53/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c23b88c1fc2303d7c5c09334f00d10c5456aa53/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=7c23b88c1fc2303d7c5c09334f00d10c5456aa53", "patch": "@@ -4394,9 +4394,8 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Quantified_Expression (N : Node_Id) is\n       function Is_Empty_Range (Typ : Entity_Id) return Boolean;\n-      --  If the iterator is part of a quantified expression, and the range is\n-      --  known to be statically empty, emit a warning and replace expression\n-      --  with its static value. Returns True if the replacement occurs.\n+      --  Return True if the iterator is part of a quantified expression and\n+      --  the range is known to be statically empty.\n \n       function No_Else_Or_Trivial_True (If_Expr : Node_Id) return Boolean;\n       --  Determine whether if expression If_Expr lacks an else part or if it\n@@ -4407,36 +4406,12 @@ package body Sem_Ch4 is\n       --------------------\n \n       function Is_Empty_Range (Typ : Entity_Id) return Boolean is\n-         Loc : constant Source_Ptr := Sloc (N);\n-\n       begin\n-         if Is_Array_Type (Typ)\n+         return Is_Array_Type (Typ)\n            and then Compile_Time_Known_Bounds (Typ)\n            and then\n-             (Expr_Value (Type_Low_Bound  (Etype (First_Index (Typ)))) >\n-              Expr_Value (Type_High_Bound (Etype (First_Index (Typ)))))\n-         then\n-            Preanalyze_And_Resolve (Condition (N), Standard_Boolean);\n-\n-            if All_Present (N) then\n-               Error_Msg_N\n-                 (\"??quantified expression with ALL \"\n-                  & \"over a null range has value True\", N);\n-               Rewrite (N, New_Occurrence_Of (Standard_True, Loc));\n-\n-            else\n-               Error_Msg_N\n-                 (\"??quantified expression with SOME \"\n-                  & \"over a null range has value False\", N);\n-               Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n-            end if;\n-\n-            Analyze (N);\n-            return True;\n-\n-         else\n-            return False;\n-         end if;\n+             Expr_Value (Type_Low_Bound  (Etype (First_Index (Typ)))) >\n+             Expr_Value (Type_High_Bound (Etype (First_Index (Typ))));\n       end Is_Empty_Range;\n \n       -----------------------------\n@@ -4456,6 +4431,7 @@ package body Sem_Ch4 is\n       --  Local variables\n \n       Cond    : constant Node_Id := Condition (N);\n+      Loc     : constant Source_Ptr := Sloc (N);\n       Loop_Id : Entity_Id;\n       QE_Scop : Entity_Id;\n \n@@ -4466,7 +4442,7 @@ package body Sem_Ch4 is\n       --  expression. The scope is needed to provide proper visibility of the\n       --  loop variable.\n \n-      QE_Scop := New_Internal_Entity (E_Loop, Current_Scope, Sloc (N), 'L');\n+      QE_Scop := New_Internal_Entity (E_Loop, Current_Scope, Loc, 'L');\n       Set_Etype  (QE_Scop, Standard_Void_Type);\n       Set_Scope  (QE_Scop, Current_Scope);\n       Set_Parent (QE_Scop, N);\n@@ -4482,11 +4458,30 @@ package body Sem_Ch4 is\n          Preanalyze (Iterator_Specification (N));\n \n          --  Do not proceed with the analysis when the range of iteration is\n-         --  empty. The appropriate error is issued by Is_Empty_Range.\n+         --  empty.\n \n          if Is_Entity_Name (Name (Iterator_Specification (N)))\n            and then Is_Empty_Range (Etype (Name (Iterator_Specification (N))))\n          then\n+            Preanalyze_And_Resolve (Condition (N), Standard_Boolean);\n+            End_Scope;\n+\n+            --  Emit a warning and replace expression with its static value\n+\n+            if All_Present (N) then\n+               Error_Msg_N\n+                 (\"??quantified expression with ALL \"\n+                  & \"over a null range has value True\", N);\n+               Rewrite (N, New_Occurrence_Of (Standard_True, Loc));\n+\n+            else\n+               Error_Msg_N\n+                 (\"??quantified expression with SOME \"\n+                  & \"over a null range has value False\", N);\n+               Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n+            end if;\n+\n+            Analyze (N);\n             return;\n          end if;\n "}]}