{"sha": "b972d95b2cfb0737b5f1ca06cd042356b907c609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk3MmQ5NWIyY2ZiMDczN2I1ZjFjYTA2Y2QwNDIzNTZiOTA3YzYwOQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2011-04-30T11:46:31Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2011-04-30T11:46:31Z"}, "message": "re PR fortran/48746 (Matmul with allocate on assignment)\n\n2011-04-30  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/48746\n\t* trans-expr.c (fcncall_realloc_result): Set the bounds and the\n\toffset so that the lbounds are one.\n\t(gfc_trans_arrayfunc_assign): Add rank to arguments of above.\n\n2011-04-30  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/48746\n\t* gfortran.dg/realloc_on_assign_7.f03: Test bounds.\n\nFrom-SVN: r173213", "tree": {"sha": "af36f24ec5a73350b13eb55374d655032eda6563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af36f24ec5a73350b13eb55374d655032eda6563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b972d95b2cfb0737b5f1ca06cd042356b907c609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b972d95b2cfb0737b5f1ca06cd042356b907c609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b972d95b2cfb0737b5f1ca06cd042356b907c609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b972d95b2cfb0737b5f1ca06cd042356b907c609/comments", "author": null, "committer": null, "parents": [{"sha": "46e43d2b55f6d0e54c564b38e73f306f63a66f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e43d2b55f6d0e54c564b38e73f306f63a66f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e43d2b55f6d0e54c564b38e73f306f63a66f9e"}], "stats": {"total": 60, "additions": 54, "deletions": 6}, "files": [{"sha": "e5b8d31e8b4c313db7deb291791c5360425da451", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b972d95b2cfb0737b5f1ca06cd042356b907c609/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b972d95b2cfb0737b5f1ca06cd042356b907c609/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b972d95b2cfb0737b5f1ca06cd042356b907c609", "patch": "@@ -1,3 +1,10 @@\n+2011-04-30  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/48746\n+\t* trans-expr.c (fcncall_realloc_result): Set the bounds and the\n+\toffset so that the lbounds are one.\n+\t(gfc_trans_arrayfunc_assign): Add rank to arguments of above.\n+\n 2011-04-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/48462"}, {"sha": "3dde29837cbf0d2d46bb3b1fc0c25b1e6bed3f7c", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 39, "deletions": 6, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b972d95b2cfb0737b5f1ca06cd042356b907c609/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b972d95b2cfb0737b5f1ca06cd042356b907c609/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=b972d95b2cfb0737b5f1ca06cd042356b907c609", "patch": "@@ -5539,11 +5539,13 @@ realloc_lhs_loop_for_fcn_call (gfc_se *se, locus *where, gfc_ss **ss,\n    result to the original descriptor.  */\n \n static void\n-fcncall_realloc_result (gfc_se *se)\n+fcncall_realloc_result (gfc_se *se, int rank)\n {\n   tree desc;\n   tree res_desc;\n   tree tmp;\n+  tree offset;\n+  int n;\n \n   /* Use the allocation done by the library.  Substitute the lhs\n      descriptor with a copy, whose data field is nulled.*/\n@@ -5555,13 +5557,44 @@ fcncall_realloc_result (gfc_se *se)\n   gfc_conv_descriptor_data_set (&se->pre, res_desc, null_pointer_node);\n   se->expr = gfc_build_addr_expr (TREE_TYPE (se->expr), res_desc);\n \n-  /* Free the lhs after the function call and copy the result data to\n-     it.  */\n+  /* Free the lhs after the function call and copy the result to\n+     the lhs descriptor.  */\n   tmp = gfc_conv_descriptor_data_get (desc);\n   tmp = gfc_call_free (fold_convert (pvoid_type_node, tmp));\n   gfc_add_expr_to_block (&se->post, tmp);\n-  tmp = gfc_conv_descriptor_data_get (res_desc);\n-  gfc_conv_descriptor_data_set (&se->post, desc, tmp);\n+  gfc_add_modify (&se->post, desc, res_desc);\n+\n+  offset = gfc_index_zero_node;\n+  tmp = gfc_index_one_node;\n+  /* Now reset the bounds from zero based to unity based.  */\n+  for (n = 0 ; n < rank; n++)\n+    {\n+      /* Accumulate the offset.  */\n+      offset = fold_build2_loc (input_location, MINUS_EXPR,\n+\t\t\t\tgfc_array_index_type,\n+\t\t\t\toffset, tmp);\n+      /* Now do the bounds.  */\n+      gfc_conv_descriptor_offset_set (&se->post, desc, tmp);\n+      tmp = gfc_conv_descriptor_ubound_get (desc, gfc_rank_cst[n]);\n+      tmp = fold_build2_loc (input_location, PLUS_EXPR,\n+\t\t\t     gfc_array_index_type,\n+\t\t\t     tmp, gfc_index_one_node);\n+      gfc_conv_descriptor_lbound_set (&se->post, desc,\n+\t\t\t\t      gfc_rank_cst[n],\n+\t\t\t\t      gfc_index_one_node);\n+      gfc_conv_descriptor_ubound_set (&se->post, desc,\n+\t\t\t\t      gfc_rank_cst[n], tmp);\n+\n+      /* The extent for the next contribution to offset.  */\n+      tmp = fold_build2_loc (input_location, MINUS_EXPR,\n+\t\t\t     gfc_array_index_type,\n+\t\t\t     gfc_conv_descriptor_ubound_get (desc, gfc_rank_cst[n]),\n+\t\t\t     gfc_conv_descriptor_lbound_get (desc, gfc_rank_cst[n]));\n+      tmp = fold_build2_loc (input_location, PLUS_EXPR,\n+\t\t\t     gfc_array_index_type,\n+\t\t\t     tmp, gfc_index_one_node);\n+    }\n+  gfc_conv_descriptor_offset_set (&se->post, desc, offset);\n }\n \n \n@@ -5631,7 +5664,7 @@ gfc_trans_arrayfunc_assign (gfc_expr * expr1, gfc_expr * expr2)\n \t  ss->is_alloc_lhs = 1;\n \t}\n       else\n-\tfcncall_realloc_result (&se);\n+\tfcncall_realloc_result (&se, expr1->rank);\n     }\n \n   gfc_conv_function_expr (&se, expr2);"}, {"sha": "a4599ca9e56a70e03c6a18f04d004c27e740ca94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b972d95b2cfb0737b5f1ca06cd042356b907c609/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b972d95b2cfb0737b5f1ca06cd042356b907c609/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b972d95b2cfb0737b5f1ca06cd042356b907c609", "patch": "@@ -1,3 +1,8 @@\n+2011-04-30  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/48746\n+\t* gfortran.dg/realloc_on_assign_7.f03: Test bounds.\n+\n 2011-04-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/48809"}, {"sha": "f871d273942b3d9284f7daea0892d99685ecc51e", "filename": "gcc/testsuite/gfortran.dg/realloc_on_assign_7.f03", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b972d95b2cfb0737b5f1ca06cd042356b907c609/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b972d95b2cfb0737b5f1ca06cd042356b907c609/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_7.f03?ref=b972d95b2cfb0737b5f1ca06cd042356b907c609", "patch": "@@ -77,5 +77,8 @@ subroutine pr48746\n     call random_number(a)\n     call random_number(b)\n     tmp = matmul(a,b)\n+    if (any (lbound (tmp) .ne. [1,1])) call abort\n+    if (any (ubound (tmp) .ne. [10,12])) call abort\n   end subroutine\n end program main\n+"}]}