{"sha": "16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZmMmE3YTRhNTM1NTRlNDU0ZDUzNzNlNmVmNjg5ZGE4ZmM4NGVmNA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-05-14T21:32:53Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-05-14T21:32:53Z"}, "message": "re PR fortran/36233 (Array valued actual procedure argument rejected)\n\n2008-05-14  Paul Thomas  <pault@gcc.gnu.org>\n\n       PR fortran/36233\n       * interface.c (compare_actual_formal): Do not check sizes if the\n       actual is BT_PROCEDURE.\n\n2008-05-14  Paul Thomas  <pault@gcc.gnu.org>\n\n       PR fortran/36233\n       * gfortran.dg/actual_procedure_1.f90: New test\n\nFrom-SVN: r135307", "tree": {"sha": "e8a141cbda81cabe41a14743340390177c00174d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8a141cbda81cabe41a14743340390177c00174d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/comments", "author": null, "committer": null, "parents": [{"sha": "4c7382bba925267cd4c71d29c0255c2964b4cb67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7382bba925267cd4c71d29c0255c2964b4cb67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c7382bba925267cd4c71d29c0255c2964b4cb67"}], "stats": {"total": 87, "additions": 86, "deletions": 1}, "files": [{"sha": "2facb39a3f02171d468aa6ddf5618cdd6da1c507", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "patch": "@@ -1,3 +1,9 @@\n+2008-05-14  Paul Thomas  <pault@gcc.gnu.org>\n+\n+       PR fortran/36233\n+       * interface.c (compare_actual_formal): Do not check sizes if the\n+       actual is BT_PROCEDURE.\n+\n 2008-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/35682"}, {"sha": "f70cedba949c460d5f604639e710c77d4c026d02", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "patch": "@@ -1942,7 +1942,9 @@ compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \n       actual_size = get_expr_storage_size (a->expr);\n       formal_size = get_sym_storage_size (f->sym);\n-      if (actual_size != 0 && actual_size < formal_size)\n+      if (actual_size != 0\n+\t    && actual_size < formal_size\n+\t    && a->expr->ts.type != BT_PROCEDURE)\n \t{\n \t  if (a->expr->ts.type == BT_CHARACTER && !f->sym->as && where)\n \t    gfc_warning (\"Character length of actual argument shorter \""}, {"sha": "1815f53c65a83fd2c814d477069e32eeaa326486", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "patch": "@@ -1,3 +1,8 @@\n+2008-05-14  Paul Thomas  <pault@gcc.gnu.org>\n+\n+       PR fortran/36233\n+       * gfortran.dg/actual_procedure_1.f90: New test\n+\n 2008-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/35682"}, {"sha": "5327cb73d7f522e4c196d5f77c077abba8b15506", "filename": "gcc/testsuite/gfortran.dg/actual_procedure_1.f90", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_procedure_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f2a7a4a53554e454d5373e6ef689da8fc84ef4/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_procedure_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Factual_procedure_1.f90?ref=16f2a7a4a53554e454d5373e6ef689da8fc84ef4", "patch": "@@ -0,0 +1,72 @@\n+! { dg-do run }\n+! Tests the fix for PR36433 in which a check for the array size\n+! or character length of the actual arguments of foo and bar\n+! would reject this legal code.\n+!\n+! Contributed by Paul Thomas <pault@gcc.gnu.org>\n+!\n+module m\n+contains\n+  function proc4 (arg, chr)\n+    integer, dimension(10) :: proc4\n+    integer, intent(in) :: arg\n+    character(8), intent(inout) :: chr\n+    proc4 = arg\n+    chr = \"proc4\"\n+  end function\n+  function chr_proc ()\n+    character(8) :: chr_proc\n+    chr_proc = \"chr_proc\"\n+  end function\n+end module\n+\n+program procPtrTest\n+  use m\n+  character(8) :: chr\n+  interface\n+    function proc_ext (arg, chr)\n+      integer, dimension(10) :: proc_ext\n+      integer, intent(in) :: arg\n+      character(8), intent(inout) :: chr\n+    end function\n+  end interface\n+! Check the passing of a module function\n+  call foo (proc4, chr)\n+  if (trim (chr) .ne. \"proc4\") call abort\n+! Check the passing of an external function\n+  call foo (proc_ext, chr)\n+! Check the passing of a character function\n+  if (trim (chr) .ne. \"proc_ext\") call abort\n+  call bar (chr_proc)\n+contains\n+  subroutine foo (p, chr)\n+    character(8), intent(inout) :: chr\n+    integer :: i(10)\n+    interface\n+      function p (arg, chr)\n+        integer, dimension(10) :: p\n+        integer, intent(in) :: arg\n+        character(8), intent(inout) :: chr\n+      end function\n+    end interface\n+    i = p (99, chr)\n+    if (any(i .ne. 99)) call abort\n+  end subroutine\n+  subroutine bar (p)\n+    interface\n+      function p ()\n+        character(8):: p\n+      end function\n+    end interface\n+    if (p () .ne. \"chr_proc\") call abort\n+  end subroutine\n+end program \n+\n+function proc_ext (arg, chr)\n+  integer, dimension(10) :: proc_ext\n+  integer, intent(in) :: arg\n+  character(8), intent(inout) :: chr\n+  proc_ext = arg\n+  chr = \"proc_ext\"\n+end function\n+! { dg-final { cleanup-modules \"m\" } }\n\\ No newline at end of file"}]}