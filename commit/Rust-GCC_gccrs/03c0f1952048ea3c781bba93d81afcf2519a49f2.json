{"sha": "03c0f1952048ea3c781bba93d81afcf2519a49f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNjMGYxOTUyMDQ4ZWEzYzc4MWJiYTkzZDgxYWZjZjI1MTlhNDlmMg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2014-05-24T19:26:02Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2014-05-24T19:26:02Z"}, "message": "re PR libfortran/61173 (Erroneous \"end of file\" with internal read)\n\n2014-05-23  Jerry DeLisle  <jvdelisle@gcc.gnu>\n\n\tPR libfortran/61173\n\t* io/list_read.c (eat_spaces): If the next character pointed to\n\tis a space, don't seek, must be at the end.\n\nFrom-SVN: r210898", "tree": {"sha": "af89e009992f855776a49c47ce4bd0fb173a37a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af89e009992f855776a49c47ce4bd0fb173a37a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03c0f1952048ea3c781bba93d81afcf2519a49f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c0f1952048ea3c781bba93d81afcf2519a49f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03c0f1952048ea3c781bba93d81afcf2519a49f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c0f1952048ea3c781bba93d81afcf2519a49f2/comments", "author": null, "committer": null, "parents": [{"sha": "63cbc2d48f9b76d3dc4eb6b9abdd063087db8653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cbc2d48f9b76d3dc4eb6b9abdd063087db8653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63cbc2d48f9b76d3dc4eb6b9abdd063087db8653"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "cead92d2ed8671a275fbf2a676ea484c96ae07f8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03c0f1952048ea3c781bba93d81afcf2519a49f2/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03c0f1952048ea3c781bba93d81afcf2519a49f2/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=03c0f1952048ea3c781bba93d81afcf2519a49f2", "patch": "@@ -1,3 +1,9 @@\n+2014-05-23  Jerry DeLisle  <jvdelisle@gcc.gnu>\n+\n+\tPR libfortran/61173\n+\t* io/list_read.c (eat_spaces): If the next character pointed to\n+\tis a space, don't seek, must be at the end.\n+\n 2014-05-23  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* configure.ac [with_newlib] (HAVE_STRNLEN, HAVE_STRNDUP): Define."}, {"sha": "5ccd0220ac1567c783fa7411d051e09cca022194", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03c0f1952048ea3c781bba93d81afcf2519a49f2/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03c0f1952048ea3c781bba93d81afcf2519a49f2/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=03c0f1952048ea3c781bba93d81afcf2519a49f2", "patch": "@@ -398,7 +398,7 @@ eat_spaces (st_parameter_dt *dtp)\n   if (is_array_io (dtp))\n     {\n       gfc_offset offset = stell (dtp->u.p.current_unit->s);\n-      gfc_offset limit = dtp->u.p.current_unit->bytes_left;\n+      gfc_offset limit = offset + dtp->u.p.current_unit->bytes_left;\n \n       if (dtp->common.unit) /* kind=4 */\n \t{\n@@ -410,13 +410,15 @@ eat_spaces (st_parameter_dt *dtp)\n \t      offset += (sizeof (gfc_char4_t));\n \t      dtp->u.p.current_unit->bytes_left--;\n \t    }\n-\t  while (offset < limit && (cc == (gfc_char4_t)' '\n-\t\t  || cc == (gfc_char4_t)'\\t'));\n+\t  while (offset < limit && cc == (gfc_char4_t)' ');\n \t  /* Back up, seek ahead, and fall through to complete the\n \t     process so that END conditions are handled correctly.  */\n \t  dtp->u.p.current_unit->bytes_left++;\n-\t  sseek (dtp->u.p.current_unit->s,\n-\t\t  offset-(sizeof (gfc_char4_t)), SEEK_SET);\n+\n+\t  cc = dtp->internal_unit[offset];\n+\t  if (cc != (gfc_char4_t)' ')\n+\t    sseek (dtp->u.p.current_unit->s,\n+\t\t   offset-(sizeof (gfc_char4_t)), SEEK_SET);\n \t}\n       else\n \t{\n@@ -425,11 +427,13 @@ eat_spaces (st_parameter_dt *dtp)\n \t      c = dtp->internal_unit[offset++];\n \t      dtp->u.p.current_unit->bytes_left--;\n \t    }\n-\t  while (offset < limit && (c == ' ' || c == '\\t'));\n+\t  while (offset < limit && c == ' ');\n \t  /* Back up, seek ahead, and fall through to complete the\n \t     process so that END conditions are handled correctly.  */\n \t  dtp->u.p.current_unit->bytes_left++;\n-\t  sseek (dtp->u.p.current_unit->s, offset-1, SEEK_SET);\n+\n+\t  if (dtp->internal_unit[offset] != ' ')\n+\t    sseek (dtp->u.p.current_unit->s, offset - 1, SEEK_SET);\n \t}\n     }\n   /* Now skip spaces, EOF and EOL are handled in next_char.  */"}]}