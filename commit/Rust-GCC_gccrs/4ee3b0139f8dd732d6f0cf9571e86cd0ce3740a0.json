{"sha": "4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVlM2IwMTM5ZjhkZDczMmQ2ZjBjZjk1NzFlODZjZDBjZTM3NDBhMA==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2010-11-06T15:04:52Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-11-06T15:04:52Z"}, "message": "re PR middle-end/46314 (frontends use ASM_GENERATE_INTERNAL_LABEL)\n\n\tPR middle-end/46314\ngcc:\n\t* target.def (generate_internal_label): New asm_out hook.\n\t* output.h (default_generate_internal_label): Declare.\n\t* varasm.c (default_generate_internal_label): Define.\ngcc/cp:\n\t* method.c (make_alias_for_thunk):\n\tUse targetm.asm_out.generate_internal_label.\ngcc/java:\n\t* class.c: Include target.h.\n\t(make_local_function_alias):\n\tUse targetm.asm_out.generate_internal_label.\n\t* expr.c (lookup_label, generate_name): Likewise.\n\nFrom-SVN: r166404", "tree": {"sha": "b56460ca5534a7fdbf2c285dcfdd238b028c3201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b56460ca5534a7fdbf2c285dcfdd238b028c3201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/comments", "author": null, "committer": null, "parents": [{"sha": "a9625a91d2cd2ef2cc6d82f6ace9be5199745fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9625a91d2cd2ef2cc6d82f6ace9be5199745fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9625a91d2cd2ef2cc6d82f6ace9be5199745fdf"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "9809534250e537121fde2f7b9c2ba4d28a775e3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -1,3 +1,10 @@\n+2010-11-06  Joern Rennecke  <amylaar@spamcop.net>\n+\n+\tPR middle-end/46314\n+\t* target.def (generate_internal_label): New asm_out hook.\n+\t* output.h (default_generate_internal_label): Declare.\n+\t* varasm.c (default_generate_internal_label): Define.\n+\n 2010-11-06  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tPR target/44981"}, {"sha": "bfa4af439166dd346e8a1abf9be0011d797c0acc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -1,3 +1,9 @@\n+2010-11-06  Joern Rennecke  <amylaar@spamcop.net>\n+\n+\tPR middle-end/46314\n+\t* method.c (make_alias_for_thunk):\n+\tUse targetm.asm_out.generate_internal_label.\n+\n 2010-11-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/45473"}, {"sha": "d0ed0f4e9cb34734d49cc8aaae14f2aede025c5d", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -252,7 +252,7 @@ make_alias_for_thunk (tree function)\n   tree alias;\n   char buf[256];\n \n-  ASM_GENERATE_INTERNAL_LABEL (buf, \"LTHUNK\", thunk_labelno);\n+  targetm.asm_out.generate_internal_label (buf, \"LTHUNK\", thunk_labelno);\n   thunk_labelno++;\n \n   alias = make_alias_for (function, get_identifier (buf));"}, {"sha": "4b9767768fe6675db16068d54d2f6d90fe326e33", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -1,3 +1,11 @@\n+2010-11-06  Joern Rennecke  <amylaar@spamcop.net>\n+\n+\tPR middle-end/46314\n+\t* class.c: Include target.h.\n+\t(make_local_function_alias):\n+\tUse targetm.asm_out.generate_internal_label.\n+\t* expr.c (lookup_label, generate_name): Likewise.\n+\n 2010-11-03  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR bootstrap/44335"}, {"sha": "a1dc9c08b2597027a28fad7cb0023b470ea62d32", "filename": "gcc/java/class.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -43,6 +43,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"tree-iterator.h\"\n #include \"vecprim.h\"\n #include \"tm.h\"         /* FIXME: For gcc_obstack_init from defaults.h.  */\n+#include \"target.h\"\n \n /* DOS brain-damage */\n #ifndef O_BINARY\n@@ -1399,7 +1400,7 @@ make_local_function_alias (tree method)\n   *name = 'L';\n   strcpy (name + 1, method_name);\n \n-  ASM_GENERATE_INTERNAL_LABEL (buf, name, alias_labelno++);  \n+  targetm.asm_out.generate_internal_label (buf, name, alias_labelno++);  \n   alias = build_decl (input_location,\n \t\t      FUNCTION_DECL, get_identifier (buf),\n \t\t      TREE_TYPE (method));"}, {"sha": "85cf1a2bcaeea309a25abc7cac22c5fdcc759da3", "filename": "gcc/java/expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -1763,7 +1763,8 @@ lookup_label (int pc)\n   char buf[32];\n   if (pc > highest_label_pc_this_method)\n     highest_label_pc_this_method = pc;\n-  ASM_GENERATE_INTERNAL_LABEL(buf, \"LJpc=\", start_label_pc_this_method + pc);\n+  targetm.asm_out.generate_internal_label (buf, \"LJpc=\",\n+\t\t\t\t\t   start_label_pc_this_method + pc);\n   name = get_identifier (buf);\n   if (IDENTIFIER_LOCAL_VALUE (name))\n     return IDENTIFIER_LOCAL_VALUE (name);\n@@ -1783,7 +1784,7 @@ generate_name (void)\n {\n   static int l_number = 0;\n   char buff [32];\n-  ASM_GENERATE_INTERNAL_LABEL(buff, \"LJv\", l_number);\n+  targetm.asm_out.generate_internal_label (buff, \"LJv\", l_number);\n   l_number++;\n   return get_identifier (buff);\n }"}, {"sha": "fa223d5cf7e64b8ebf20cf2741273c16769823ab", "filename": "gcc/output.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -627,6 +627,8 @@ extern void default_globalize_label (FILE *, const char *);\n extern void default_globalize_decl_name (FILE *, tree);\n extern void default_emit_unwind_label (FILE *, tree, int, int);\n extern void default_emit_except_table_label (FILE *);\n+extern void default_generate_internal_label (char *, const char *,\n+\t\t\t\t\t     unsigned long);\n extern void default_internal_label (FILE *, const char *, unsigned long);\n extern void default_asm_declare_constant_name (FILE *, const char *,\n \t\t\t\t\t       const_tree, HOST_WIDE_INT);"}, {"sha": "66006aee9f9129c3f99c05f3c02e948fe6a8d003", "filename": "gcc/target.def", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -200,6 +200,14 @@ DEFHOOKPOD\n  be called afterward.\",\n  bool, true)\n \n+/* Generate an internal label.\n+   For now this is just a wrapper for ASM_GENERATE_INTERNAL_LABEL.  */\n+DEFHOOK_UNDOC\n+(generate_internal_label,\n+ \"\",\n+ void, (char *buf, const char *prefix, unsigned long labelno),\n+ default_generate_internal_label)\n+\n /* Output an internal label.  */\n DEFHOOK\n (internal_label,"}, {"sha": "fe60bb2397d3657700f72db10889ad10888d40c4", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "patch": "@@ -6607,6 +6607,16 @@ default_emit_except_table_label (FILE * stream ATTRIBUTE_UNUSED)\n {\n }\n \n+/* This is how to output an internal numbered label where PREFIX is\n+   the class of label and LABELNO is the number within the class.  */\n+\n+void\n+default_generate_internal_label (char *buf, const char *prefix,\n+\t\t\t\t unsigned long labelno)\n+{\n+  ASM_GENERATE_INTERNAL_LABEL (buf, prefix, labelno);\n+}\n+\n /* This is how to output an internal numbered label where PREFIX is\n    the class of label and LABELNO is the number within the class.  */\n "}]}