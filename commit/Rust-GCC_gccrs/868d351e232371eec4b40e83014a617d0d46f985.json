{"sha": "868d351e232371eec4b40e83014a617d0d46f985", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY4ZDM1MWUyMzIzNzFlZWM0YjQwZTgzMDE0YTYxN2QwZDQ2Zjk4NQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2020-05-14T06:16:27Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2020-05-14T06:16:27Z"}, "message": "IBM Z: stack clash prot: add missing updates of last_probe_offset\n\nAfter emitting probes in a loop last_probe_offset needs to be updated.\nNot doing this usually assumes a too low distance to the last access\nwhen emitting the remainder leading to stack probes being omitted.\n\ngcc/ChangeLog:\n\n2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/s390.c (allocate_stack_space): Add missing updates\n\tof last_probe_offset.\n\ngcc/testsuite/ChangeLog:\n\n2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/stack-clash-1.c: New test.", "tree": {"sha": "2522293ac34cd5af3a0560d149c79f35da6d44ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2522293ac34cd5af3a0560d149c79f35da6d44ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/868d351e232371eec4b40e83014a617d0d46f985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868d351e232371eec4b40e83014a617d0d46f985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/868d351e232371eec4b40e83014a617d0d46f985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868d351e232371eec4b40e83014a617d0d46f985/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3e5bae174d9d2ed115a364d5b404d179458a622", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3e5bae174d9d2ed115a364d5b404d179458a622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3e5bae174d9d2ed115a364d5b404d179458a622"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "51d3e425ad5c96e2dfcb1604b1f4206c2082cf60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868d351e232371eec4b40e83014a617d0d46f985/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868d351e232371eec4b40e83014a617d0d46f985/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=868d351e232371eec4b40e83014a617d0d46f985", "patch": "@@ -1,3 +1,8 @@\n+2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.c (allocate_stack_space): Add missing updates\n+\tof last_probe_offset.\n+\n 2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.md (\"allocate_stack\"): Call"}, {"sha": "b4897256af5bcd401d3e58bbde4b904bae94e947", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868d351e232371eec4b40e83014a617d0d46f985/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868d351e232371eec4b40e83014a617d0d46f985/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=868d351e232371eec4b40e83014a617d0d46f985", "patch": "@@ -10996,6 +10996,8 @@ allocate_stack_space (rtx size, HOST_WIDE_INT last_probe_offset,\n \t\t\t\t\t\t       stack_pointer_rtx,\n \t\t\t\t\t\t       offset));\n \t\t}\n+\t      if (num_probes > 0)\n+\t\tlast_probe_offset = INTVAL (offset);\n \t      dump_stack_clash_frame_info (PROBE_INLINE, residual != 0);\n \t    }\n \t  else\n@@ -11029,6 +11031,7 @@ allocate_stack_space (rtx size, HOST_WIDE_INT last_probe_offset,\n \t      s390_prologue_plus_offset (stack_pointer_rtx, temp_reg,\n \t\t\t\t\t const0_rtx, true);\n \t      temp_reg_clobbered_p = true;\n+\t      last_probe_offset = INTVAL (offset);\n \t      dump_stack_clash_frame_info (PROBE_LOOP, residual != 0);\n \t    }\n "}, {"sha": "8ff0bbcc85b4f1cdad08527beb7326cf005ba45b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868d351e232371eec4b40e83014a617d0d46f985/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868d351e232371eec4b40e83014a617d0d46f985/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=868d351e232371eec4b40e83014a617d0d46f985", "patch": "@@ -1,3 +1,7 @@\n+2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/stack-clash-1.c: New test.\n+\n 2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/stack-clash-3.c: New test."}, {"sha": "3d29cab94468818923b6692dfa1a80d9d83f61ba", "filename": "gcc/testsuite/gcc.target/s390/stack-clash-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868d351e232371eec4b40e83014a617d0d46f985/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstack-clash-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868d351e232371eec4b40e83014a617d0d46f985/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstack-clash-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstack-clash-1.c?ref=868d351e232371eec4b40e83014a617d0d46f985", "patch": "@@ -0,0 +1,17 @@\n+/* Make sure a stack probe is emitted also for the remaining bytes\n+   after the loop probing the large chunk.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=z9-ec -fstack-clash-protection\" } */\n+\n+void large_stack() {\n+  volatile int stack[8000];\n+  int i;\n+  for (i = 0; i < sizeof(stack) / sizeof(int); ++i)\n+    stack[i] = i;\n+}\n+\n+/* We use a compare for the stack probe.  There needs to be one inside\n+   a loop and another for the remaining bytes.  */\n+/* { dg-final { scan-assembler-times \"cg\\t\" 2 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times \"c\\t\" 2 { target { ! lp64 } } } } */"}]}