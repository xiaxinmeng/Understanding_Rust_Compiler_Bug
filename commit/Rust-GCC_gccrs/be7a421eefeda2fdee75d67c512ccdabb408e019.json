{"sha": "be7a421eefeda2fdee75d67c512ccdabb408e019", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU3YTQyMWVlZmVkYTJmZGVlNzVkNjdjNTEyY2NkYWJiNDA4ZTAxOQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-05-31T20:19:00Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-05-31T20:19:00Z"}, "message": "output.h (__gcc_host_wide_int__): Move to hwint.h.\n\n\t* output.h (__gcc_host_wide_int__): Move to hwint.h.\n\t(decl_default_tls_model): Move to tree.h\n\t(dump_file): Move to system.h.\n\t(default_stabs_asm_out_destructor, default_stabs_asm_out_constructor,\n\tdbxout_int, dbxout_stabd, dbxout_begin_stabn, dbxout_begin_stabn_sline,\n\tdbxout_begin_empty_stabs, dbxout_begin_simple_stabs,\n\tdbxout_begin_simple_stabs_desc, dbxout_stab_value_zero,\n\tdbxout_stab_value_zero, dbxout_stab_value_label_diff,\n\tdbxout_stab_value_internal_label,\n\tdbxout_stab_value_internal_label_diff): Move from here ...\n\t* dbxout.h: ... to here.\n\t* system.h (dump_file): Moved here from output.h.\n\t* hwint.h (__gcc_host_wide_int__): Moved here from output.h.\n\t* tree.h (decl_default_tls_model): Moved here from output.h.\n\t* varasm.c (default_stabs_asm_out_destructor,\n\tdefault_stabs_asm_out_constructor): Move from here ...\n\t* dbxout.c: ... to here.\n\n\t* gcov-dump.c (dump_file): Rename to dump_gcov_file.  Update callers.\n\n\t* collect2.h (dump_file): Rename to dump_ld_file.\n\t* collect2.c: Likewise.\n\t* tlink.c: Likewise.\n\n\t* alias.c: Do not include output.h.\n\t* auto-inc-dec.c: Likewise.\n\t* bt-load.c: Likewise.\n\t* caller-save.c: Likewise.\n\t* cfg.c: Likewise.\n\t* cfgbuild.c: Likewise.\n\t* cfgcleanup.c: Likewise.\n\t* cfglayout.c: Likewise.\n\t* cfgloop.c: Likewise.\n\t* cfgloopanal.c: Likewise.\n\t* cfgloopmanip.c: Likewise.\n\t* cfgrtl.c: Likewise.\n\t* cgraph.c: Likewise.\n\t* cgraphclones.c: Likewise.\n\t* combine-stack-adj.c: Likewise.\n\t* combine.c: Likewise.\n\t* cprop.c: Likewise.\n\t* cse.c: Likewise.\n\t* cselib.c: Likewise.\n\t* dbgcnt.c: Likewise.\n\t* df-problems.c: Likewise.\n\t* df-scan.c: Likewise.\n\t* dojump.c: Likewise.\n\t* fwprop.c: Likewise.\n\t* gcse.c: Likewise.\n\t* graph.c: Likewise.\n\t* haifa-sched.c: Likewise.\n\t* hw-doloop.c: Likewise.\n\t* ipa-inline-transform.c: Likewise.\n\t* ipa-pure-const.c: Likewise.\n\t* ipa-reference.c: Likewise.\n\t* ipa-utils.c: Likewise.\n\t* ira-build.c: Likewise.\n\t* ira-emit.c: Likewise.\n\t* lcm.c: Likewise.\n\t* loop-doloop.c: Likewise.\n\t* loop-invariant.c: Likewise.\n\t* loop-iv.c: Likewise.\n\t* loop-unroll.c: Likewise.\n\t* loop-unswitch.c: Likewise.\n\t* lto-cgraph.c: Likewise.\n\t* lto-section-in.c: Likewise.\n\t* lto-streamer-in.c: Likewise.\n\t* mcf.c: Likewise.\n\t* mode-switching.c: Likewise.\n\t* postreload-gcse.c: Likewise.\n\t* postreload.c: Likewise.\n\t* predict.c: Likewise.\n\t* profile.c: Likewise.\n\t* ree.c: Likewise.\n\t* reg-stack.c: Likewise.\n\t* regcprop.c: Likewise.\n\t* regmove.c: Likewise.\n\t* regstat.c: Likewise.\n\t* reload1.c: Likewise.\n\t* sched-ebb.c: Likewise.\n\t* sel-sched-dump.c: Likewise.\n\t* simplify-rtx.c: Likewise.\n\t* stor-layout.c: Likewise.\n\t* store-motion.c: Likewise.\n\t* tracer.c: Likewise.\n\t* tree-affine.c: Likewise.\n\t* tree-cfg.c: Likewise.\n\t* tree-cfgcleanup.c: Likewise.\n\t* tree-dfa.c: Likewise.\n\t* tree-into-ssa.c: Likewise.\n\t* tree-nomudflap.c: Likewise.\n\t* tree-optimize.c: Likewise.\n\t* tree-pretty-print.c: Likewise.\n\t* tree-profile.c: Likewise.\n\t* tree-ssa-address.c: Likewise.\n\t* tree-ssa-ccp.c: Likewise.\n\t* tree-ssa-copy.c: Likewise.\n\t* tree-ssa-dom.c: Likewise.\n\t* tree-ssa-loop-ch.c: Likewise.\n\t* tree-ssa-loop-im.c: Likewise.\n\t* tree-ssa-loop-manip.c: Likewise.\n\t* tree-ssa-loop-niter.c: Likewise.\n\t* tree-ssa-loop-prefetch.c: Likewise.\n\t* tree-ssa-loop-unswitch.c: Likewise.\n\t* tree-ssa-loop.c: Likewise.\n\t* tree-ssa-propagate.c: Likewise.\n\t* tree-ssa-structalias.c: Likewise.\n\t* tree-ssa-tail-merge.c: Likewise.\n\t* tree-ssa-threadedge.c: Likewise.\n\t* tree-ssa-threadupdate.c: Likewise.\n\t* tree-ssa-uncprop.c: Likewise.\n\t* tree-ssa-uninit.c: Likewise.\n\t* tree-ssa.c: Likewise.\n\t* value-prof.c: Likewise.\n\t* var-tracking.c: Likewise.\n\t* web.c: Likewise.\n\n\t* config/m32r/m32r.c: Include dbxout.h.\n\t* config/pa/pa.c: Likewise.\n\t* config/rs6000/rs6000.c: Likewise.\n\n\t* Makefile.in: Fix dependencies.\n\t* config/rs6000/t-rs5000: Likewise.\n\nc-family/\n\t* c-ada-spec.c: Do not include output.h.\n\t* c-semantics.c: Likewise.\n\ncp/\n\t* call.c: Do not include output.h.\n\t* class.c: Likewise.\n\t* except.c: Likewise.\n\t* friend.c: Likewise.\n\t* init.c: Likewise.\n\t* lex.c: Likewise.\n\t* method.c: Likewise.\n\t* parser.c: Likewise.\n\t* pt.c: Likewise.\n\t* rtti.c: Likewise.\n\t* search.c: Likewise.\n\nobjc/\n\t* objc-act.c: Do not include output.h.\n\nfortran/\n\t* trans-common.c: Do not include output.h.\n\t* trans-decl.c: Likewise.\n\njava/\n\t* resource.c: Do not include output.h.\n\nFrom-SVN: r188082", "tree": {"sha": "6ebcab211844d1a9387f950716f6b1c382244e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ebcab211844d1a9387f950716f6b1c382244e82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be7a421eefeda2fdee75d67c512ccdabb408e019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7a421eefeda2fdee75d67c512ccdabb408e019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be7a421eefeda2fdee75d67c512ccdabb408e019", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7a421eefeda2fdee75d67c512ccdabb408e019/comments", "author": null, "committer": null, "parents": [{"sha": "039496da00fe37d2cc92600039e6877ea132a50b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039496da00fe37d2cc92600039e6877ea132a50b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039496da00fe37d2cc92600039e6877ea132a50b"}], "stats": {"total": 639, "additions": 346, "deletions": 293}, "files": [{"sha": "c4e513203377f8e72730d79b72db1563dc7fcf5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -1,3 +1,129 @@\n+2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* output.h (__gcc_host_wide_int__): Move to hwint.h.\n+\t(decl_default_tls_model): Move to tree.h\n+\t(dump_file): Move to system.h.\n+\t(default_stabs_asm_out_destructor, default_stabs_asm_out_constructor,\n+\tdbxout_int, dbxout_stabd, dbxout_begin_stabn, dbxout_begin_stabn_sline,\n+\tdbxout_begin_empty_stabs, dbxout_begin_simple_stabs,\n+\tdbxout_begin_simple_stabs_desc, dbxout_stab_value_zero,\n+\tdbxout_stab_value_zero, dbxout_stab_value_label_diff,\n+\tdbxout_stab_value_internal_label,\n+\tdbxout_stab_value_internal_label_diff): Move from here ...\n+\t* dbxout.h: ... to here.\n+\t* system.h (dump_file): Moved here from output.h.\n+\t* hwint.h (__gcc_host_wide_int__): Moved here from output.h.\n+\t* tree.h (decl_default_tls_model): Moved here from output.h.\n+\t* varasm.c (default_stabs_asm_out_destructor,\n+\tdefault_stabs_asm_out_constructor): Move from here ...\n+\t* dbxout.c: ... to here.\n+\n+\t* gcov-dump.c (dump_file): Rename to dump_gcov_file.  Update callers.\n+\n+\t* collect2.h (dump_file): Rename to dump_ld_file.\n+\t* collect2.c: Likewise.\n+\t* tlink.c: Likewise.\n+\n+\t* alias.c: Do not include output.h.\n+\t* auto-inc-dec.c: Likewise.\n+\t* bt-load.c: Likewise.\n+\t* caller-save.c: Likewise.\n+\t* cfg.c: Likewise.\n+\t* cfgbuild.c: Likewise.\n+\t* cfgcleanup.c: Likewise.\n+\t* cfglayout.c: Likewise.\n+\t* cfgloop.c: Likewise.\n+\t* cfgloopanal.c: Likewise.\n+\t* cfgloopmanip.c: Likewise.\n+\t* cfgrtl.c: Likewise.\n+\t* cgraph.c: Likewise.\n+\t* cgraphclones.c: Likewise.\n+\t* combine-stack-adj.c: Likewise.\n+\t* combine.c: Likewise.\n+\t* cprop.c: Likewise.\n+\t* cse.c: Likewise.\n+\t* cselib.c: Likewise.\n+\t* dbgcnt.c: Likewise.\n+\t* df-problems.c: Likewise.\n+\t* df-scan.c: Likewise.\n+\t* dojump.c: Likewise.\n+\t* fwprop.c: Likewise.\n+\t* gcse.c: Likewise.\n+\t* graph.c: Likewise.\n+\t* haifa-sched.c: Likewise.\n+\t* hw-doloop.c: Likewise.\n+\t* ipa-inline-transform.c: Likewise.\n+\t* ipa-pure-const.c: Likewise.\n+\t* ipa-reference.c: Likewise.\n+\t* ipa-utils.c: Likewise.\n+\t* ira-build.c: Likewise.\n+\t* ira-emit.c: Likewise.\n+\t* lcm.c: Likewise.\n+\t* loop-doloop.c: Likewise.\n+\t* loop-invariant.c: Likewise.\n+\t* loop-iv.c: Likewise.\n+\t* loop-unroll.c: Likewise.\n+\t* loop-unswitch.c: Likewise.\n+\t* lto-cgraph.c: Likewise.\n+\t* lto-section-in.c: Likewise.\n+\t* lto-streamer-in.c: Likewise.\n+\t* mcf.c: Likewise.\n+\t* mode-switching.c: Likewise.\n+\t* postreload-gcse.c: Likewise.\n+\t* postreload.c: Likewise.\n+\t* predict.c: Likewise.\n+\t* profile.c: Likewise.\n+\t* ree.c: Likewise.\n+\t* reg-stack.c: Likewise.\n+\t* regcprop.c: Likewise.\n+\t* regmove.c: Likewise.\n+\t* regstat.c: Likewise.\n+\t* reload1.c: Likewise.\n+\t* sched-ebb.c: Likewise.\n+\t* sel-sched-dump.c: Likewise.\n+\t* simplify-rtx.c: Likewise.\n+\t* stor-layout.c: Likewise.\n+\t* store-motion.c: Likewise.\n+\t* tracer.c: Likewise.\n+\t* tree-affine.c: Likewise.\n+\t* tree-cfg.c: Likewise.\n+\t* tree-cfgcleanup.c: Likewise.\n+\t* tree-dfa.c: Likewise.\n+\t* tree-into-ssa.c: Likewise.\n+\t* tree-nomudflap.c: Likewise.\n+\t* tree-optimize.c: Likewise.\n+\t* tree-pretty-print.c: Likewise.\n+\t* tree-profile.c: Likewise.\n+\t* tree-ssa-address.c: Likewise.\n+\t* tree-ssa-ccp.c: Likewise.\n+\t* tree-ssa-copy.c: Likewise.\n+\t* tree-ssa-dom.c: Likewise.\n+\t* tree-ssa-loop-ch.c: Likewise.\n+\t* tree-ssa-loop-im.c: Likewise.\n+\t* tree-ssa-loop-manip.c: Likewise.\n+\t* tree-ssa-loop-niter.c: Likewise.\n+\t* tree-ssa-loop-prefetch.c: Likewise.\n+\t* tree-ssa-loop-unswitch.c: Likewise.\n+\t* tree-ssa-loop.c: Likewise.\n+\t* tree-ssa-propagate.c: Likewise.\n+\t* tree-ssa-structalias.c: Likewise.\n+\t* tree-ssa-tail-merge.c: Likewise.\n+\t* tree-ssa-threadedge.c: Likewise.\n+\t* tree-ssa-threadupdate.c: Likewise.\n+\t* tree-ssa-uncprop.c: Likewise.\n+\t* tree-ssa-uninit.c: Likewise.\n+\t* tree-ssa.c: Likewise.\n+\t* value-prof.c: Likewise.\n+\t* var-tracking.c: Likewise.\n+\t* web.c: Likewise.\n+\n+\t* config/m32r/m32r.c: Include dbxout.h.\n+\t* config/pa/pa.c: Likewise.\n+\t* config/rs6000/rs6000.c: Likewise.\n+\n+\t* Makefile.in: Fix dependencies.\n+\t* config/rs6000/t-rs5000: Likewise.\n+\n 2012-05-31  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR tree-optimization/52558"}, {"sha": "887a56e76f58947501b527f6324b4350bf123386", "filename": "gcc/Makefile.in", "status": "modified", "additions": 92, "deletions": 92, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -1912,7 +1912,7 @@ c-typeck.o : c-typeck.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \n \n \n-graph.o: graph.c $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) output.h \\\n+graph.o: graph.c $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) \\\n     $(RTL_H) $(FUNCTION_H) hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(OBSTACK_H) \\\n     $(CONFIG_H) $(EMIT_RTL_H)\n \n@@ -2055,13 +2055,13 @@ c-family/c-pretty-print.o : c-family/c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n \t$(DIAGNOSTIC_H) tree-iterator.h intl.h $(TREE_PRETTY_PRINT_H)\n \n c-family/c-semantics.o : c-family/c-semantics.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) output.h \\\n+\tcoretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) \\\n \t$(C_COMMON_H) $(FUNCTION_H) langhooks.h $(SPLAY_TREE_H) $(TIMEVAR_H) \\\n \ttree-iterator.h\n \n c-family/c-ada-spec.o : c-family/c-ada-spec.c c-family/c-ada-spec.h \\\n \t$(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPP_ID_DATA_H) $(TM_H) \\\n-\tcoretypes.h tree-iterator.h $(TREE_PASS_H) output.h\n+\tcoretypes.h tree-iterator.h $(TREE_PASS_H)\n \n c-family/stub-objc.o : c-family/stub-objc.c $(CONFIG_H) $(SYSTEM_H) \\\n \tcoretypes.h $(TREE_H) $(C_COMMON_H) c-family/c-objc.h\n@@ -2237,13 +2237,13 @@ lto-cgraph.o: lto-cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h   \\\n    $(TM_H) $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) langhooks.h $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) $(DIAGNOSTIC_CORE_H) \\\n-   $(EXCEPT_H) $(TIMEVAR_H) output.h pointer-set.h $(LTO_STREAMER_H) \\\n+   $(EXCEPT_H) $(TIMEVAR_H) pointer-set.h $(LTO_STREAMER_H) \\\n    $(GCOV_IO_H) $(DATA_STREAMER_H) $(TREE_STREAMER_H)\n lto-streamer-in.o: lto-streamer-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) $(CGRAPH_H) \\\n    $(FUNCTION_H) $(GGC_H) $(DIAGNOSTIC_H) $(LIBFUNCS_H) $(EXCEPT_H) debug.h \\\n-   $(TIMEVAR_H) output.h $(IPA_UTILS_H) $(LTO_STREAMER_H) toplev.h \\\n+   $(TIMEVAR_H) $(IPA_UTILS_H) $(LTO_STREAMER_H) toplev.h \\\n    $(DATA_STREAMER_H) $(GIMPLE_STREAMER_H) $(TREE_STREAMER_H)\n lto-streamer-out.o : lto-streamer-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n@@ -2255,7 +2255,7 @@ lto-streamer-out.o : lto-streamer-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n lto-section-in.o: lto-section-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(CGRAPH_H) $(FUNCTION_H) \\\n-   $(GGC_H) $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(TIMEVAR_H) output.h \\\n+   $(GGC_H) $(DIAGNOSTIC_CORE_H) $(EXCEPT_H) $(TIMEVAR_H) \\\n    $(LTO_STREAMER_H) lto-compress.h\n lto-section-out.o : lto-section-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(EXPR_H) $(PARAMS_H) input.h \\\n@@ -2299,38 +2299,38 @@ print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H\n    $(GGC_H) langhooks.h tree-iterator.h \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) $(GIMPLE_PRETTY_PRINT_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) output.h $(RTL_H) \\\n+   $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h \\\n    $(DIAGNOSTIC_CORE_H) $(CGRAPH_H) $(TREE_INLINE_H) $(TREE_DUMP_H) $(GIMPLE_H)\n tree-ssa-tail-merge.o: tree-ssa-tail-merge.c \\\n    $(SYSTEM_H) $(CONFIG_H) coretypes.h $(TM_H) $(BITMAP_H) \\\n-   $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) output.h \\\n+   $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) tree-ssa-sccvn.h \\\n    $(CGRAPH_H) $(GIMPLE_PRETTY_PRINT_H) $(PARAMS_H)\n tree-ssa-structalias.o: tree-ssa-structalias.c \\\n    $(SYSTEM_H) $(CONFIG_H) coretypes.h $(TM_H) $(GGC_H) $(OBSTACK_H) $(BITMAP_H) \\\n-   $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) output.h \\\n+   $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(HASHTAB_H) $(FUNCTION_H) $(CGRAPH_H) \\\n    $(TREE_PASS_H) $(TIMEVAR_H) alloc-pool.h $(SPLAY_TREE_H) $(PARAMS_H) \\\n    $(CGRAPH_H) $(ALIAS_H) pointer-set.h\n tree-ssa-uninit.o : tree-ssa-uninit.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(EXPR_H) $(DIAGNOSTIC_H) \\\n    toplev.h $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(GGC_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(TARGET_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(CFGLOOP_H)\n tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    langhooks.h domwalk.h $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n    $(BITMAP_H) $(CFGLOOP_H) $(FLAGS_H) $(HASHTAB_H) \\\n@@ -2374,35 +2374,35 @@ tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_PASS_H) \\\n    langhooks.h $(TREE_PRETTY_PRINT_H)\n tree-ssa-copy.o : tree-ssa-copy.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h tree-ssa-propagate.h \\\n    $(FLAGS_H) $(CFGLOOP_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h $(VEC_H) value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n    $(GIMPLE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H) \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-uncprop.o : tree-ssa-uncprop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) \\\n    langhooks.h tree-ssa-propagate.h\n tree-ssa-threadedge.o : tree-ssa-threadedge.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) $(TM_P_H) \\\n-   $(BASIC_BLOCK_H) $(CFGLOOP_H) output.h \\\n+   $(BASIC_BLOCK_H) $(CFGLOOP_H) \\\n    $(FUNCTION_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_FLOW_H) \\\n    $(TREE_PASS_H) tree-ssa-propagate.h langhooks.h \\\n    $(PARAMS_H)\n tree-ssa-threadupdate.o : tree-ssa-threadupdate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(BASIC_BLOCK_H) $(FLAGS_H) $(TREE_PASS_H) $(CFGLOOP_H)\n tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2439,13 +2439,13 @@ tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) intl.h \\\n    $(GIMPLE_PRETTY_PRINT_H) gimple-fold.h $(OPTABS_H) $(EXPR_H)\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(GGC_H) $(FLAGS_H) output.h \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) $(FLAGS_H) \\\n    $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(CFGLAYOUT_H) $(BASIC_BLOCK_H) \\\n    value-prof.h tree-ssa-propagate.h $(TREE_INLINE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(GGC_H) $(FLAGS_H) output.h \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) $(FLAGS_H) \\\n    $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(BASIC_BLOCK_H) $(HASHTAB_H)  \\\n@@ -2472,7 +2472,7 @@ tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    coretypes.h $(GGC_H) tree-iterator.h $(GIMPLE_H) gt-tree-iterator.h\n tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n@@ -2487,37 +2487,37 @@ tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h toplev.h \\\n    $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H)\n tree-ssa-loop.o : tree-ssa-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) output.h \\\n+   $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n    $(CFGLOOP_H) $(FLAGS_H) $(TREE_INLINE_H) $(SCEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H)\n tree-ssa-loop-unswitch.o : tree-ssa-loop-unswitch.c $(TREE_FLOW_H) \\\n    $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n-   $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n+   $(PARAMS_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(BASIC_BLOCK_H) \\\n     $(TREE_INLINE_H)\n tree-ssa-address.o : tree-ssa-address.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(FLAGS_H) $(TREE_INLINE_H) $(RECOG_H) insn-config.h \\\n    $(EXPR_H) gt-tree-ssa-address.h $(GGC_H) tree-affine.h $(TARGET_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n-   $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(TREE_PASS_H) $(TREE_DATA_REF_H) \\\n    $(BASIC_BLOCK_H) $(GGC_H) intl.h $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n-   $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(FLAGS_H) $(TREE_PASS_H) $(SCEV_H) $(BASIC_BLOCK_H) $(TARGET_H) \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-loop-ch.o : tree-ssa-loop-ch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(TREE_INLINE_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H)\n tree-ssa-loop-prefetch.o: tree-ssa-loop-prefetch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(RECOG_H) insn-config.h $(HASHTAB_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_CORE_H) langhooks.h $(TREE_INLINE_H) $(TREE_DATA_REF_H) \\\n@@ -2535,16 +2535,16 @@ tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) tree-ssa-propagate.h\n tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n    $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n-   output.h coretypes.h $(TREE_DUMP_H) $(FLAGS_H) \\\n+   coretypes.h $(TREE_DUMP_H) $(FLAGS_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-ssa-loop-manip.o : tree-ssa-loop-manip.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(BASIC_BLOCK_H) output.h $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n+   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n    $(TIMEVAR_H) $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(SCEV_H) $(PARAMS_H) $(TREE_INLINE_H) langhooks.h\n tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n-   $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(PARAMS_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n    pointer-set.h tree-affine.h tree-ssa-propagate.h $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-math-opts.o : tree-ssa-math-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2565,7 +2565,7 @@ tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(VEC_H) langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(DIAGNOSTIC_CORE_H)\n tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(TM_P_H) $(GGC_H) output.h \\\n+   $(TREE_H) $(TM_P_H) $(GGC_H) \\\n    $(DIAGNOSTIC_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(TREE_DUMP_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) langhooks.h \\\n    $(FLAGS_H) $(CGRAPH_H) $(PLUGIN_H) \\\n@@ -2838,7 +2838,7 @@ expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TM_P_H) \\\n    $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) $(OPTABS_H) $(INSN_ATTR_H) insn-config.h \\\n-   langhooks.h $(GGC_H) gt-dojump.h vecprim.h $(BASIC_BLOCK_H) output.h\n+   langhooks.h $(GGC_H) gt-dojump.h vecprim.h $(BASIC_BLOCK_H)\n builtins.o : builtins.c builtins.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) $(GIMPLE_H) $(FLAGS_H) $(TARGET_H) $(FUNCTION_H) $(REGS_H) \\\n    $(EXPR_H) $(OPTABS_H) insn-config.h $(RECOG_H) output.h typeclass.h \\\n@@ -2914,14 +2914,14 @@ jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(PREDICT_H) $(TIMEVAR_H) $(TARGET_H)\n simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n+   $(RECOG_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n    $(TREE_H) $(TARGET_H)\n symtab.o : symtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n    $(HASHTAB_H) gt-symtab.h\n cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n-   gt-cgraph.h output.h intl.h $(BASIC_BLOCK_H) debug.h $(HASHTAB_H) \\\n+   gt-cgraph.h intl.h $(BASIC_BLOCK_H) debug.h $(HASHTAB_H) \\\n    $(TREE_INLINE_H) $(TREE_DUMP_H) $(TREE_FLOW_H) cif-code.def \\\n    value-prof.h $(EXCEPT_H) $(IPA_UTILS_H) $(DIAGNOSTIC_CORE_H) \\\n    ipa-inline.h $(LTO_STREAMER_H) $(CFGLOOP_H) $(GIMPLE_PRETTY_PRINT_H)\n@@ -2937,7 +2937,7 @@ cgraphclones.o : cgraphclones.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(GIMPLE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) debug.h $(DIAGNOSTIC_H) \\\n-   $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) $(IPA_PROP_H) \\\n+   $(FIBHEAP_H) $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) $(IPA_PROP_H) \\\n    tree-iterator.h $(COVERAGE_H) $(TREE_DUMP_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) ipa-inline.h $(IPA_UTILS_H) \\\n    $(LTO_STREAMER_H) output.h $(EXCEPT_H) $(GCC_PLUGIN_H) gt-cgraphclones.h\n@@ -2995,17 +2995,17 @@ ipa-inline-transform.o : ipa-inline-transform.c $(CONFIG_H) $(SYSTEM_H) coretype\n ipa-utils.o : ipa-utils.c $(IPA_UTILS_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(GIMPLE_H) $(SPLAY_TREE_H) \\\n-   $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H)\n+   $(CGRAPH_H) $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H)\n ipa-reference.o : ipa-reference.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_REFERENCE_H) $(IPA_UTILS_H) $(SPLAY_TREE_H) \\\n-   $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) \\\n+   $(GIMPLE_H) $(CGRAPH_H) $(FLAGS_H) $(TREE_PASS_H) \\\n    $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(LTO_STREAMER_H) \\\n    $(DIAGNOSTIC_CORE_H) $(DATA_STREAMER_H)\n ipa-pure-const.o : ipa-pure-const.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_UTILS_H) $(TARGET_H) \\\n-   $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n+   $(GIMPLE_H) $(CGRAPH_H) $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n    $(DIAGNOSTIC_H) $(CFGLOOP_H) $(SCEV_H) $(LTO_STREAMER_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(DATA_STREAMER_H) $(TREE_STREAMER_H)\n coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -3015,12 +3015,12 @@ coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(DIAGNOSTIC_CORE_H) intl.h gt-coverage.h $(TARGET_H)\n cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) \\\n-   $(EMIT_RTL_H) $(DIAGNOSTIC_CORE_H) output.h $(FUNCTION_H) $(TREE_PASS_H) \\\n+   $(EMIT_RTL_H) $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TREE_PASS_H) \\\n    cselib.h gt-cselib.h $(GGC_H) $(TM_P_H) $(PARAMS_H) alloc-pool.h \\\n    $(HASHTAB_H) $(TARGET_H) $(BITMAP_H)\n cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n-   output.h $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n+   $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n    $(EXCEPT_H) $(TARGET_H) $(PARAMS_H) rtlhooks-def.h $(TREE_PASS_H) \\\n    $(DF_H) $(DBGCNT_H)\n dce.o : dce.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3034,43 +3034,43 @@ dse.o : dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(BITMAP_H) $(PARAMS_H) $(TREE_FLOW_H)\n fwprop.o : fwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H) $(FLAGS_H) $(OBSTACK_H) $(BASIC_BLOCK_H) \\\n-   output.h $(DF_H) alloc-pool.h $(TIMEVAR_H) $(TREE_PASS_H) $(TARGET_H) \\\n+   $(DF_H) alloc-pool.h $(TIMEVAR_H) $(TREE_PASS_H) $(TARGET_H) \\\n    $(TM_P_H) $(CFGLOOP_H) $(EMIT_RTL_H) domwalk.h sparseset.h\n web.o : web.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(DIAGNOSTIC_CORE_H) \\\n+   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) \\\n    insn-config.h $(RECOG_H) $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) $(TREE_PASS_H)\n ree.o : ree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h \\\n+   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n    $(DF_H) $(TIMEVAR_H) $(TREE_PASS_H) $(RECOG_H) $(EXPR_H) \\\n    $(REGS_H) $(TREE_H) $(TM_P_H) insn-config.h $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TARGET_H) $(OPTABS_H) insn-codes.h rtlhooks-def.h $(PARAMS_H) $(CGRAPH_H)\n cprop.o : cprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h $(DIAGNOSTIC_CORE_H) \\\n+   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(TM_P_H) $(PARAMS_H) cselib.h $(EXCEPT_H) $(TREE_H) $(TIMEVAR_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H) \\\n    $(DF_H) $(CFGLOOP_H)\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(GGC_H) \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h $(DIAGNOSTIC_CORE_H) \\\n+   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(TM_P_H) $(PARAMS_H) cselib.h $(EXCEPT_H) gt-gcse.h $(TREE_H) $(TIMEVAR_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H) \\\n    $(DF_H) gcse.h\n store-motion.o : store-motion.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(GGC_H) \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h toplev.h $(DIAGNOSTIC_CORE_H) \\\n+   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n    $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TIMEVAR_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(REGS_H) $(FLAGS_H) output.h $(RESOURCE_H) $(DF_H) \\\n    $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) $(INSN_ATTR_H) $(EXCEPT_H) $(PARAMS_H) $(TM_P_H)\n lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(RECOG_H) \\\n-   $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) output.h sbitmap.h\n+   $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) sbitmap.h\n mode-switching.o : mode-switching.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(INSN_ATTR_H) $(RECOG_H) $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) \\\n-   output.h $(TREE_PASS_H) $(TIMEVAR_H) $(DF_H) $(TARGET_H) $(EMIT_RTL_H)\n+   $(TREE_PASS_H) $(TIMEVAR_H) $(DF_H) $(TARGET_H) $(EMIT_RTL_H)\n tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n     coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n@@ -3080,7 +3080,7 @@ tree-call-cdce.o : tree-call-cdce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n     $(GIMPLE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) output.h \\\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h  $(PARAMS_H) \\\n    tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H) \\\n@@ -3096,7 +3096,7 @@ tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h alloc-pool.h \\\n tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(TREE_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \\\n-    $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) output.h \\\n+    $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n     $(GGC_H) $(OBSTACK_H) $(PARAMS_H) $(CPPLIB_H) $(PARAMS_H) \\\n     $(GIMPLE_PRETTY_PRINT_H) langhooks.h\n tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n@@ -3117,47 +3117,47 @@ df-core.o : df-core.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n df-problems.o : df-problems.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n    hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h $(TIMEVAR_H) \\\n-   $(TM_P_H) $(TARGET_H) $(FLAGS_H) output.h $(EXCEPT_H) dce.h vecprim.h\n+   $(TM_P_H) $(TARGET_H) $(FLAGS_H) $(EXCEPT_H) dce.h vecprim.h\n df-scan.o : df-scan.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n    hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h $(TIMEVAR_H) \\\n-   $(TM_P_H) $(FLAGS_H) $(TARGET_H) $(TARGET_DEF_H) $(TREE_H) output.h \\\n+   $(TM_P_H) $(FLAGS_H) $(TARGET_H) $(TARGET_DEF_H) $(TREE_H) \\\n    $(TREE_PASS_H) $(EMIT_RTL_H)\n regstat.o : regstat.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TM_P_H) $(FLAGS_H) $(REGS_H) output.h $(EXCEPT_H) hard-reg-set.h \\\n+   $(TM_P_H) $(FLAGS_H) $(REGS_H) $(EXCEPT_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) $(TIMEVAR_H) $(DF_H)\n var-tracking.o : var-tracking.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) hard-reg-set.h insn-config.h reload.h $(FLAGS_H) \\\n-   $(BASIC_BLOCK_H) output.h sbitmap.h alloc-pool.h $(FIBHEAP_H) $(HASHTAB_H) \\\n+   $(BASIC_BLOCK_H) bitmap.h alloc-pool.h $(FIBHEAP_H) $(HASHTAB_H) \\\n    $(REGS_H) $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H) $(TREE_FLOW_H) \\\n    cselib.h $(TARGET_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(DIAGNOSTIC_H) pointer-set.h \\\n    $(RECOG_H) $(TM_P_H) $(TREE_PRETTY_PRINT_H)\n profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) $(FUNCTION_H) $(BASIC_BLOCK_H) \\\n+   $(TREE_H) $(FLAGS_H) $(REGS_H) $(EXPR_H) $(FUNCTION_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_FLOW_H) value-prof.h cfghooks.h \\\n    $(CFGLOOP_H) $(TIMEVAR_H) $(TREE_PASS_H) profile.h\n mcf.o : mcf.c profile.h $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h \\\n-   $(BASIC_BLOCK_H) output.h langhooks.h $(GCOV_IO_H) $(TREE_H) \n+   $(BASIC_BLOCK_H) langhooks.h $(GCOV_IO_H) $(TREE_H) \n tree-profile.o : tree-profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FLAGS_H) $(FUNCTION_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(TREE_FLOW_H) $(TIMEVAR_H) gt-tree-profile.h $(CGRAPH_H)\n value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h profile.h value-prof.h $(EXPR_H) output.h $(FLAGS_H) \\\n+   $(BASIC_BLOCK_H) hard-reg-set.h profile.h value-prof.h $(EXPR_H) $(FLAGS_H) \\\n    $(RECOG_H) insn-config.h $(OPTABS_H) $(REGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(TREE_H) $(COVERAGE_H) $(RTL_H) $(GCOV_IO_H) $(TREE_FLOW_H) \\\n    tree-flow-inline.h $(TIMEVAR_H) $(TREE_PASS_H) $(DIAGNOSTIC_CORE_H) pointer-set.h \\\n    $(GIMPLE_PRETTY_PRINT_H)\n loop-doloop.o : loop-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H) output.h $(PARAMS_H) $(TARGET_H)\n+   $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H) $(PARAMS_H) $(TARGET_H)\n alloc-pool.o : alloc-pool.c $(CONFIG_H) $(SYSTEM_H) alloc-pool.h $(HASHTAB_H)\n auto-inc-dec.o : auto-inc-dec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) insn-config.h \\\n-   $(REGS_H) $(FLAGS_H) output.h $(FUNCTION_H) $(EXCEPT_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) \\\n+   $(REGS_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) \\\n    $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H)\n cfg.o : cfg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n-   $(REGS_H) hard-reg-set.h output.h $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(EXCEPT_H) $(GGC_H) \\\n+   $(REGS_H) hard-reg-set.h $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(EXCEPT_H) $(GGC_H) \\\n    $(TM_P_H) $(TIMEVAR_H) $(OBSTACK_H) $(TREE_H) alloc-pool.h \\\n    $(HASHTAB_H) $(DF_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n cfghooks.o: cfghooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3171,7 +3171,7 @@ cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(INSN_ATTR_H) $(CFGLOOP_H)\n cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n-   output.h  $(FUNCTION_H) $(EXCEPT_H) $(TM_P_H) $(INSN_ATTR_H) \\\n+   $(FUNCTION_H) $(EXCEPT_H) $(TM_P_H) $(INSN_ATTR_H) \\\n    insn-config.h $(EXPR_H) \\\n    $(CFGLAYOUT_H) $(CFGLOOP_H) $(OBSTACK_H) $(TARGET_H) $(TREE_H) \\\n    $(TREE_PASS_H) $(DF_H) $(GGC_H) $(COMMON_TARGET_H)\n@@ -3180,42 +3180,42 @@ cfganal.o : cfganal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TIMEVAR_H) $(OBSTACK_H) $(DIAGNOSTIC_CORE_H) vecprim.h sbitmap.h \\\n    $(BITMAP_H) $(CFGLOOP_H)\n cfgbuild.o : cfgbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h $(DIAGNOSTIC_CORE_H) \\\n+   $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h $(DIAGNOSTIC_CORE_H) \\\n    $(FUNCTION_H) $(EXCEPT_H) $(TIMEVAR_H) $(TREE_H) $(EXPR_H) sbitmap.h\n cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TIMEVAR_H) hard-reg-set.h output.h $(FLAGS_H) $(RECOG_H) \\\n+   $(RTL_H) $(TIMEVAR_H) hard-reg-set.h $(FLAGS_H) $(RECOG_H) \\\n    $(DIAGNOSTIC_CORE_H) insn-config.h cselib.h $(TARGET_H) $(TM_P_H) $(PARAMS_H) \\\n    $(REGS_H) $(EMIT_RTL_H) $(CFGLAYOUT_H) $(TREE_PASS_H) $(CFGLOOP_H) $(EXPR_H) \\\n    $(DF_H) $(DBGCNT_H) dce.h\n cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(FLAGS_H) $(FUNCTION_H) \\\n-   $(OBSTACK_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_H) pointer-set.h output.h \\\n+   $(OBSTACK_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_H) pointer-set.h \\\n    $(GGC_H)\n cfgloopanal.o : cfgloopanal.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) \\\n-   $(OBSTACK_H) output.h graphds.h $(PARAMS_H)\n+   $(OBSTACK_H) graphds.h $(PARAMS_H)\n graphds.o : graphds.c graphds.h $(CONFIG_H) $(SYSTEM_H) $(BITMAP_H) $(OBSTACK_H) \\\n    coretypes.h $(VEC_H) vecprim.h\n loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H) \\\n-   output.h intl.h $(DIAGNOSTIC_CORE_H) $(DF_H) $(HASHTAB_H)\n+   intl.h $(DIAGNOSTIC_CORE_H) $(DF_H) $(HASHTAB_H)\n loop-invariant.o : loop-invariant.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) \\\n    coretypes.h $(TM_H) $(TM_P_H) $(FUNCTION_H) $(FLAGS_H) $(DF_H) \\\n-   $(OBSTACK_H) output.h $(HASHTAB_H) $(EXCEPT_H) $(PARAMS_H) $(REGS_H) ira.h\n+   $(OBSTACK_H) $(HASHTAB_H) $(EXCEPT_H) $(PARAMS_H) $(REGS_H) ira.h\n cfgloopmanip.o : cfgloopmanip.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) output.h \\\n+   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n    coretypes.h $(TM_H) cfghooks.h $(OBSTACK_H) $(TREE_FLOW_H)\n loop-init.o : loop-init.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n    coretypes.h $(TM_H) $(OBSTACK_H) $(TREE_PASS_H) $(TIMEVAR_H) $(FLAGS_H) \\\n    $(DF_H)\n loop-unswitch.o : loop-unswitch.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) $(PARAMS_H) \\\n-   output.h $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H)\n+   $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H)\n loop-unroll.o: loop-unroll.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) $(PARAMS_H) \\\n-   output.h $(EXPR_H) coretypes.h $(TM_H) $(HASHTAB_H) $(RECOG_H) \\\n+   $(EXPR_H) coretypes.h $(TM_H) $(HASHTAB_H) $(RECOG_H) \\\n    $(OBSTACK_H)\n dominance.o : dominance.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h $(OBSTACK_H) $(DIAGNOSTIC_CORE_H) \\\n@@ -3225,7 +3225,7 @@ et-forest.o : et-forest.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(FUNCTION_H) insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n    rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) hard-reg-set.h \\\n-   $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(TREE_H) $(TARGET_H) output.h $(PARAMS_H) $(OPTABS_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(TREE_H) $(TARGET_H) $(PARAMS_H) $(OPTABS_H) \\\n    insn-codes.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) vecprim.h $(CGRAPH_H) \\\n    $(OBSTACK_H)\n reginfo.o : reginfo.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3243,27 +3243,27 @@ reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h $(DIAGNOSTIC_CORE_H)\n reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n-   $(BASIC_BLOCK_H) $(RECOG_H) output.h $(FUNCTION_H)  $(TM_P_H) \\\n+   $(BASIC_BLOCK_H) $(RECOG_H) $(FUNCTION_H)  $(TM_P_H) \\\n    addresses.h $(EXCEPT_H) $(TREE_H) $(FLAGS_H) $(MACHMODE_H) \\\n    $(OBSTACK_H) $(DF_H) $(TARGET_H) $(EMIT_RTL_H) ira.h\n rtlhooks.o :  rtlhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    rtlhooks-def.h $(EXPR_H) $(RECOG_H)\n postreload.o : postreload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) \\\n-   hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) output.h \\\n+   hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) \\\n    $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) cselib.h $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(MACHMODE_H) \\\n    $(OBSTACK_H) $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n postreload-gcse.o : postreload-gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(DIAGNOSTIC_CORE_H) \\\n+   $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TARGET_H) $(HASHTAB_H) intl.h $(OBSTACK_H) \\\n    $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DBGCNT_H)\n caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n    addresses.h $(RECOG_H) reload.h $(EXPR_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(DF_H) \\\n-   output.h gt-caller-save.h $(GGC_H)\n+   gt-caller-save.h $(GGC_H)\n bt-load.o : bt-load.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(EXCEPT_H) \\\n-   $(RTL_H) hard-reg-set.h $(REGS_H) $(TM_P_H) $(FIBHEAP_H) output.h $(EXPR_H) \\\n+   $(RTL_H) hard-reg-set.h $(REGS_H) $(TM_P_H) $(FIBHEAP_H) $(EXPR_H) \\\n    $(TARGET_H) $(FLAGS_H) $(INSN_ATTR_H) $(FUNCTION_H) $(TREE_PASS_H) \\\n    $(DIAGNOSTIC_CORE_H) $(DF_H) vecprim.h $(RECOG_H)\n reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3272,7 +3272,7 @@ reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(EXPR_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(TM_P_H) $(OBSTACK_H) $(RESOURCE_H) \\\n    $(TIMEVAR_H) $(TARGET_H) $(TREE_PASS_H)\n alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) $(DIAGNOSTIC_CORE_H) output.h \\\n+   $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) $(DIAGNOSTIC_CORE_H) \\\n    $(ALIAS_H) $(EMIT_RTL_H) $(GGC_H) $(FUNCTION_H) cselib.h $(TREE_H) $(TM_P_H) \\\n    langhooks.h $(TARGET_H) gt-alias.h $(TIMEVAR_H) $(CGRAPH_H) \\\n    $(SPLAY_TREE_H) $(DF_H) $(TREE_PASS_H) \\\n@@ -3286,7 +3286,7 @@ init-regs.o : init-regs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n ira-build.o: ira-build.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h $(RECOG_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n-   $(PARAMS_H) $(DF_H) sparseset.h $(IRA_INT_H) output.h reload.h\n+   $(PARAMS_H) $(DF_H) sparseset.h $(IRA_INT_H) reload.h\n ira-costs.o: ira-costs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    hard-reg-set.h $(RTL_H) $(EXPR_H) $(TM_P_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n    $(REGS_H) addresses.h insn-config.h $(RECOG_H) $(DIAGNOSTIC_CORE_H) $(TARGET_H) \\\n@@ -3302,7 +3302,7 @@ ira-color.o: ira-color.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n ira-emit.o: ira-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(REGS_H) $(RTL_H) $(TM_P_H) $(TARGET_H) $(FLAGS_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) $(EXPR_H) $(RECOG_H) $(PARAMS_H) $(TIMEVAR_H) \\\n-   $(TREE_PASS_H) output.h reload.h $(DF_H) $(IRA_INT_H)\n+   $(TREE_PASS_H) reload.h $(DF_H) $(IRA_INT_H)\n ira-lives.o: ira-lives.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) $(EXCEPT_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h $(RECOG_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(PARAMS_H) \\\n@@ -3314,12 +3314,12 @@ ira.o: ira.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(EXCEPT_H) reload.h toplev.h $(DIAGNOSTIC_CORE_H) $(DF_H) $(GGC_H) $(IRA_INT_H)\n regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) \\\n-   $(RECOG_H) output.h $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n+   $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(EXPR_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n    $(EXCEPT_H) ira.h reload.h $(TARGET_H)\n combine-stack-adj.o : combine-stack-adj.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) insn-config.h $(TIMEVAR_H) $(TREE_PASS_H) \\\n-   $(RECOG_H) output.h $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n+   $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(EXPR_H) $(BASIC_BLOCK_H) $(TM_P_H) $(DF_H) $(EXCEPT_H) reload.h\n compare-elim.o : compare-elim.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TM_P_H) insn-config.h $(RECOG_H) $(FLAGS_H) \\\n@@ -3337,7 +3337,7 @@ modulo-sched.o : modulo-sched.c $(DDG_H) $(CONFIG_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(DF_H) $(DBGCNT_H)\n haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(FUNCTION_H) \\\n-   $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) $(TARGET_H) output.h \\\n+   $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) $(TARGET_H) \\\n    $(PARAMS_H) $(DBGCNT_H) $(CFGLOOP_H) ira.h $(EMIT_RTL_H) $(COMMON_TARGET_H) \\\n    $(HASHTAB_H)\n sched-deps.o : sched-deps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -3352,7 +3352,7 @@ sched-rgn.o : sched-rgn.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n sched-ebb.o : sched-ebb.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) \\\n-   $(PARAMS_H) $(CFGLAYOUT_H) $(TARGET_H) output.h\n+   $(PARAMS_H) $(CFGLAYOUT_H) $(TARGET_H)\n sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) hard-reg-set.h $(BASIC_BLOCK_H) $(OBSTACK_H) \\\n    $(TREE_PASS_H) $(INSN_ATTR_H)\n@@ -3367,7 +3367,7 @@ sel-sched-dump.o : sel-sched-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n    $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n    $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(SEL_SCHED_DUMP_H) $(GGC_H) $(TREE_H) $(LANGHOOKS_DEF_H) $(SEL_SCHED_IR_H) \\\n-   output.h $(BASIC_BLOCK_H) cselib.h\n+   $(BASIC_BLOCK_H) cselib.h\n sel-sched-ir.o : sel-sched-ir.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n@@ -3390,12 +3390,12 @@ recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n-   $(BASIC_BLOCK_H) output.h $(TIMEVAR_H) \\\n+   $(BASIC_BLOCK_H) $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(TARGET_H) vecprim.h $(DF_H) $(EMIT_RTL_H)\n sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h sreal.h\n predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) \\\n-   hard-reg-set.h output.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(FUNCTION_H) $(EXCEPT_H) \\\n+   hard-reg-set.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(FUNCTION_H) $(EXCEPT_H) \\\n    $(TM_P_H) $(PREDICT_H) sreal.h $(PARAMS_H) $(TARGET_H) $(CFGLOOP_H) \\\n    $(COVERAGE_H) $(SCEV_H) $(GGC_H) predict.def $(TIMEVAR_H) $(TREE_DUMP_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(EXPR_H) pointer-set.h\n@@ -3407,18 +3407,18 @@ bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(PARAMS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H) $(DF_H) \\\n    $(EXCEPT_H) bb-reorder.h\n tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TREE_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h $(CFGLAYOUT_H) \\\n+   $(TREE_H) $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLAYOUT_H) \\\n    $(FLAGS_H) $(TIMEVAR_H) $(PARAMS_H) $(COVERAGE_H) $(FIBHEAP_H) \\\n    $(TREE_PASS_H) $(TREE_FLOW_H) $(TREE_INLINE_H) $(CFGLOOP_H)\n cfglayout.o : cfglayout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TREE_H) insn-config.h $(BASIC_BLOCK_H) hard-reg-set.h output.h \\\n+   $(RTL_H) $(TREE_H) insn-config.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n    $(FUNCTION_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(TARGET_H) gt-cfglayout.h \\\n    $(GGC_H) alloc-pool.h $(FLAGS_H) $(OBSTACK_H) $(TREE_PASS_H) vecprim.h \\\n    $(DF_H) $(EMIT_RTL_H) $(COMMON_TARGET_H)\n timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) $(TIMEVAR_H)\n regcprop.o : regcprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n-   output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n+   $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n    addresses.h reload.h $(DIAGNOSTIC_CORE_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n@@ -3437,7 +3437,7 @@ hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n pretty-print.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(PRETTY_PRINT_H)\n errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) errors.h\n dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) $(DBGCNT_H) \\\n-   $(TM_H) $(RTL_H) output.h\n+   $(TM_H) $(RTL_H)\n lower-subreg.o : lower-subreg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(MACHMODE_H) $(TM_H) $(RTL_H) $(TM_P_H) $(TIMEVAR_H) $(FLAGS_H) \\\n    insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) $(OBSTACK_H) $(BITMAP_H) \\\n@@ -3450,7 +3450,7 @@ target-globals.o : target-globals.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    lower-subreg.h\n hw-doloop.o : hw-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n-   $(DF_H) $(CFGLAYOUT_H) $(CFGLOOP_H) output.h $(RECOG_H) $(TARGET_H) \\\n+   $(DF_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(RECOG_H) $(TARGET_H) \\\n    $(REGS_H) hw-doloop.h\n $(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h insn-config.h conditions.h \\"}, {"sha": "322fe0ca1b6289207eb27d03469585e4e59daa8c", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"diagnostic-core.h\"\n #include \"cselib.h\"\n #include \"splay-tree.h\""}, {"sha": "f64dbe0dcca1640d1b303387c1c924a5fde532f5", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\""}, {"sha": "7ec4454746dc948918ce45ad479b4bcfab338acd", "filename": "gcc/bt-load.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fbt-load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fbt-load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbt-load.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n #include \"fibheap.h\"\n-#include \"output.h\"\n #include \"target.h\"\n #include \"expr.h\"\n #include \"flags.h\""}, {"sha": "a5b9c1f8660431b6a3107c48f3961f1b5d885314", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -1,3 +1,8 @@\n+2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-ada-spec.c: Do not include output.h.\n+\t* c-semantics.c: Likewise.\n+\n 2012-05-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-common.c: Fix typo."}, {"sha": "8946624be23a977a1f401f8548b1651b8dad6315", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"tree-pass.h\"\t/* For TDI_ada and friends.  */\n-#include \"output.h\"\n #include \"c-ada-spec.h\"\n #include \"cpplib.h\"\n #include \"c-pragma.h\""}, {"sha": "d9bd823fde272803c0750427ae101c1a2d221000", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"tree.h\"\n #include \"input.h\"\n-#include \"output.h\"\n+#include \"output.h\" /* for asm_out_file */\n #include \"c-common.h\"\n #include \"flags.h\"\n #include \"timevar.h\""}, {"sha": "091f58a6cff6daa9df9b486febaa8f8da41151a8", "filename": "gcc/c-family/c-pch.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pch.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"c-common.h\"\n-#include \"output.h\"\n+#include \"output.h\" /* for asm_out_file */\n #include \"debug.h\"\n #include \"c-pragma.h\"\n #include \"ggc.h\""}, {"sha": "1a21ec17f83ff3b02f43725dd0f4690fd3b032bf", "filename": "gcc/c-family/c-semantics.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fc-family%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-semantics.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"splay-tree.h\"\n #include \"c-common.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"tree-iterator.h\"\n \n /* Create an empty statement tree rooted at T.  */"}, {"sha": "ecb862b079ca80e551d0af30fa3d4702f0ec44de", "filename": "gcc/caller-save.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\"\n #include \"addresses.h\"\n-#include \"output.h\"\n #include \"ggc.h\"\n \n #define MOVE_MAX_WORDS (MOVE_MAX / UNITS_PER_WORD)"}, {"sha": "667e0977b4f74bd8d938dd309d9d73b78af3b27b", "filename": "gcc/cfg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -54,7 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\""}, {"sha": "07ef949d20e09b48f04653f7ebb7e2394ed7f891", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"except.h\"\n #include \"expr.h\""}, {"sha": "619b274e46af3163a8fc8bbc246e6a109debcadc", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n #include \"timevar.h\"\n-#include \"output.h\"\n #include \"insn-config.h\"\n #include \"flags.h\"\n #include \"recog.h\""}, {"sha": "3ab0ec0a138271d5dda2324d87a61da23877b227", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"obstack.h\"\n #include \"basic-block.h\"\n #include \"insn-config.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"cfglayout.h\"\n #include \"cfgloop.h\""}, {"sha": "8b3cde691e528b284980ae3e49e11d9a2a6b74a2", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tree-flow.h\"\n #include \"pointer-set.h\"\n-#include \"output.h\"\n #include \"ggc.h\"\n \n static void flow_loops_cfg_dump (FILE *);"}, {"sha": "cec33fbb97e3876e55d8c3fdddc973d69247c96c", "filename": "gcc/cfgloopanal.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgloopanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgloopanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"expr.h\"\n-#include \"output.h\"\n #include \"graphds.h\"\n #include \"params.h\"\n "}, {"sha": "0454603d158c353f16625ba215348c3953f7723d", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"cfglayout.h\"\n #include \"cfghooks.h\"\n-#include \"output.h\"\n #include \"tree-flow.h\"\n \n static void copy_loops_to (struct loop **, int,"}, {"sha": "031dc259e95a93c5aa6658fa94d1dd1f635b2dea", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -48,7 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"except.h\"\n #include \"rtl-error.h\""}, {"sha": "217644df74a0eea9d4995af24a0d2325490ebc80", "filename": "gcc/cgraph.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"basic-block.h\"\n #include \"cgraph.h\"\n-#include \"output.h\"\n #include \"intl.h\"\n #include \"gimple.h\"\n #include \"tree-dump.h\""}, {"sha": "ab97bd34bcae9ce5ba3bc4ad8b47de1665a06c58", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -70,7 +70,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"output.h\"\n #include \"rtl.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\""}, {"sha": "fc69e2f71bf224f6a5395a0171723349bc787424", "filename": "gcc/collect2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -406,13 +406,13 @@ collect_exit (int status)\n \n   if (ldout != 0 && ldout[0])\n     {\n-      dump_file (ldout, stdout);\n+      dump_ld_file (ldout, stdout);\n       maybe_unlink (ldout);\n     }\n \n   if (lderrout != 0 && lderrout[0])\n     {\n-      dump_file (lderrout, stderr);\n+      dump_ld_file (lderrout, stderr);\n       maybe_unlink (lderrout);\n     }\n \n@@ -518,7 +518,7 @@ extract_string (const char **pp)\n }\n \f\n void\n-dump_file (const char *name, FILE *to)\n+dump_ld_file (const char *name, FILE *to)\n {\n   FILE *stream = fopen (name, \"r\");\n "}, {"sha": "7dedd6579b4a43919c2f6facfc7f2a23f35f1726", "filename": "gcc/collect2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcollect2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcollect2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.h?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -30,7 +30,7 @@ extern void collect_exit (int) ATTRIBUTE_NORETURN;\n \n extern int collect_wait (const char *, struct pex_obj *);\n \n-extern void dump_file (const char *, FILE *);\n+extern void dump_ld_file (const char *, FILE *);\n \n extern int file_exists (const char *);\n "}, {"sha": "b3ee785711a9a59ee778c2e6364914efc5fccf3a", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -48,7 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n-#include \"output.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\""}, {"sha": "70b80bca738e662d026968e600184a4ba1fcc2ec", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -97,8 +97,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"optabs.h\"\n #include \"insn-codes.h\"\n #include \"rtlhooks-def.h\"\n-/* Include output.h for dump_file.  */\n-#include \"output.h\"\n #include \"params.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\""}, {"sha": "273864688445396910d9206712aa8b1700f454a7", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -29,6 +29,7 @@\n #include \"insn-config.h\"\n #include \"conditions.h\"\n #include \"output.h\"\n+#include \"dbxout.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"expr.h\""}, {"sha": "25ae5d81f57791eca228ad740187152a940460a5", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tree.h\"\n #include \"output.h\"\n+#include \"dbxout.h\"\n #include \"except.h\"\n #include \"expr.h\"\n #include \"optabs.h\""}, {"sha": "5796e4add0a9b2e8af0bc32ada49d109bbae3f35", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -40,6 +40,7 @@\n #include \"except.h\"\n #include \"function.h\"\n #include \"output.h\"\n+#include \"dbxout.h\"\n #include \"basic-block.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\""}, {"sha": "f912e54f218228f6a6e30ef8643147a613f629ab", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,7 @@ rs6000.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) $(REGS_H) hard-reg-set.h \\\n   real.h insn-config.h conditions.h insn-attr.h flags.h $(RECOG_H) \\\n   $(OBSTACK_H) $(TREE_H) $(EXPR_H) $(OPTABS_H) except.h function.h \\\n-  output.h $(BASIC_BLOCK_H) toplev.h $(GGC_H) $(HASHTAB_H) \\\n+  output.h dbxout.h $(BASIC_BLOCK_H) toplev.h $(GGC_H) $(HASHTAB_H) \\\n   $(TM_P_H) $(TARGET_H) $(TARGET_DEF_H) langhooks.h reload.h gt-rs6000.h \\\n   cfglayout.h cfgloop.h $(OPTS_H) $(COMMON_TARGET_H)\n "}, {"sha": "b1f073460ace5dfacc95332b7d1c87edcf47b7e8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -1,3 +1,17 @@\n+2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* call.c: Do not include output.h.\n+\t* class.c: Likewise.\n+\t* except.c: Likewise.\n+\t* friend.c: Likewise.\n+\t* init.c: Likewise.\n+\t* lex.c: Likewise.\n+\t* method.c: Likewise.\n+\t* parser.c: Likewise.\n+\t* pt.c: Likewise.\n+\t* rtti.c: Likewise.\n+\t* search.c: Likewise.\n+\n 2012-05-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/53356"}, {"sha": "a6de644ba2a334ffa7924ed8d06ec4e770ee0f80", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -265,7 +265,7 @@ CXX_PARSER_H = tree.h c-family/c-pragma.h cp/parser.h\n CXX_PRETTY_PRINT_H = cp/cxx-pretty-print.h $(C_PRETTY_PRINT_H)\n \n cp/lex.o: cp/lex.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n-  $(C_PRAGMA_H) output.h input.h cp/operators.def $(TM_P_H) \\\n+  $(C_PRAGMA_H) input.h cp/operators.def $(TM_P_H) \\\n   c-family/c-objc.h\n cp/cp-lang.o: cp/cp-lang.c $(CXX_TREE_H) $(TM_H) debug.h langhooks.h \\\n   $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-cp.h gt-cp-cp-lang.h \\\n@@ -334,7 +334,7 @@ cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) \\\n cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) $(REAL_H) \\\n   gt-cp-mangle.h $(TARGET_H) $(TM_P_H) $(CGRAPH_H)\n cp/parser.o: cp/parser.c $(CXX_TREE_H) $(TM_H) $(DIAGNOSTIC_CORE_H) \\\n-  gt-cp-parser.h output.h $(TARGET_H) $(PLUGIN_H) intl.h \\\n+  gt-cp-parser.h $(TARGET_H) $(PLUGIN_H) intl.h \\\n   c-family/c-objc.h tree-pretty-print.h $(CXX_PARSER_H) $(TIMEVAR.H)\n cp/cp-gimplify.o: cp/cp-gimplify.c $(CXX_TREE_H) $(C_COMMON_H) \\\n \t$(TM_H) coretypes.h pointer-set.h tree-iterator.h $(SPLAY_TREE_H)"}, {"sha": "6745afd379da696b64481fac4e2b288ec2b8b3fa", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n #include \"diagnostic-core.h\""}, {"sha": "c30054d57097d1b24f906a54f2eea4b0254ebf43", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"toplev.h\"\n #include \"target.h\"\n #include \"convert.h\""}, {"sha": "6fe3cce2b30ac98870bde767fd6068cbcafcedd3", "filename": "gcc/cp/except.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"tree-inline.h\"\n #include \"tree-iterator.h\"\n #include \"target.h\""}, {"sha": "5bd46cb4b0d0ed16d7e79592cfbc6d855bf1fd1c", "filename": "gcc/cp/init.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"target.h\"\n \n static bool begin_init_stmts (tree *, tree *);"}, {"sha": "743f4752c1c0623e3490a4e76e91d5c375b8efa4", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"c-family/c-pragma.h\"\n #include \"c-family/c-objc.h\"\n-#include \"output.h\"\n #include \"tm_p.h\"\n #include \"timevar.h\"\n "}, {"sha": "6e2952131ba5e27de370b0b338fec6475e6aa22a", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n #include \"tm_p.h\""}, {"sha": "547f9e214388bfe375e1a58aefb9301b548d1825", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"decl.h\"\n #include \"flags.h\"\n #include \"diagnostic-core.h\"\n-#include \"output.h\"\n #include \"target.h\"\n #include \"cgraph.h\"\n #include \"c-family/c-common.h\""}, {"sha": "c55687bb95fea9a85431bed520f45ee39e065f64", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-objcp-common.h\"\n #include \"tree-inline.h\"\n #include \"decl.h\"\n-#include \"output.h\"\n #include \"toplev.h\"\n #include \"timevar.h\"\n #include \"tree-iterator.h\""}, {"sha": "e79b02e6837fc8be01bac1f720e1445ccb7b35fd", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"convert.h\"\n #include \"target.h\"\n #include \"c-family/c-pragma.h\""}, {"sha": "e6d6be814c6b27bdd571f53962d367955d561b25", "filename": "gcc/cp/search.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"intl.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"toplev.h\"\n #include \"target.h\"\n "}, {"sha": "29495e000df936c685838dccf2d49aa6eb788762", "filename": "gcc/cprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"except.h\""}, {"sha": "783c932aed01de3c1b949a0298425da2d490fa0a", "filename": "gcc/cse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n-#include \"output.h\"\n #include \"ggc.h\"\n #include \"timevar.h\"\n #include \"except.h\""}, {"sha": "5e6d049b0e37c2f280a17da2280d17b37102f1a2", "filename": "gcc/cselib.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"emit-rtl.h\"\n #include \"diagnostic-core.h\"\n-#include \"output.h\"\n #include \"ggc.h\"\n #include \"hashtab.h\"\n #include \"tree-pass.h\""}, {"sha": "532e4d0e57a1d542ef56c9439069cb746f4b9da7", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ See dbgcnt.def for usage information.  */\n #include \"diagnostic-core.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n-#include \"output.h\"\n \n #include \"dbgcnt.h\"\n "}, {"sha": "a6b7b99841f8942d7c6c5067a103d5acfea59e97", "filename": "gcc/dbxout.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -3817,4 +3817,40 @@ dbxout_begin_function (tree decl)\n \n #endif /* DBX_DEBUGGING_INFO || XCOFF_DEBUGGING_INFO */\n \n+/* Record an element in the table of global destructors.  SYMBOL is\n+   a SYMBOL_REF of the function to be called; PRIORITY is a number\n+   between 0 and MAX_INIT_PRIORITY.  */\n+\n+void\n+default_stabs_asm_out_destructor (rtx symbol ATTRIBUTE_UNUSED,\n+\t\t\t\t  int priority ATTRIBUTE_UNUSED)\n+{\n+#if defined DBX_DEBUGGING_INFO || defined XCOFF_DEBUGGING_INFO\n+  /* Tell GNU LD that this is part of the static destructor set.\n+     This will work for any system that uses stabs, most usefully\n+     aout systems.  */\n+  dbxout_begin_simple_stabs (\"___DTOR_LIST__\", 22 /* N_SETT */);\n+  dbxout_stab_value_label (XSTR (symbol, 0));\n+#else\n+  sorry (\"global destructors not supported on this target\");\n+#endif\n+}\n+\n+/* Likewise for global constructors.  */\n+\n+void\n+default_stabs_asm_out_constructor (rtx symbol ATTRIBUTE_UNUSED,\n+\t\t\t\t   int priority ATTRIBUTE_UNUSED)\n+{\n+#if defined DBX_DEBUGGING_INFO || defined XCOFF_DEBUGGING_INFO\n+  /* Tell GNU LD that this is part of the static destructor set.\n+     This will work for any system that uses stabs, most usefully\n+     aout systems.  */\n+  dbxout_begin_simple_stabs (\"___CTOR_LIST__\", 22 /* N_SETT */);\n+  dbxout_stab_value_label (XSTR (symbol, 0));\n+#else\n+  sorry (\"global constructors not supported on this target\");\n+#endif\n+}\n+\n #include \"gt-dbxout.h\""}, {"sha": "84c78362ff17fc9a963f0688841a3dda45a3a878", "filename": "gcc/dbxout.h", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdbxout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdbxout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.h?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,6 +26,28 @@ extern void dbxout_parms (tree);\n extern void dbxout_reg_parms (tree);\n extern int dbxout_syms (tree);\n \n+extern void default_stabs_asm_out_destructor (rtx, int);\n+extern void default_stabs_asm_out_constructor (rtx, int);\n+\n+/* dbxout helper functions */\n+#if defined DBX_DEBUGGING_INFO || defined XCOFF_DEBUGGING_INFO\n+\n+extern void dbxout_int (int);\n+extern void dbxout_stabd (int, int);\n+extern void dbxout_begin_stabn (int);\n+extern void dbxout_begin_stabn_sline (int);\n+extern void dbxout_begin_empty_stabs (int);\n+extern void dbxout_begin_simple_stabs (const char *, int);\n+extern void dbxout_begin_simple_stabs_desc (const char *, int, int);\n+\n+extern void dbxout_stab_value_zero (void);\n+extern void dbxout_stab_value_label (const char *);\n+extern void dbxout_stab_value_label_diff (const char *, const char *);\n+extern void dbxout_stab_value_internal_label (const char *, int *);\n+extern void dbxout_stab_value_internal_label_diff (const char *, int *,\n+\t\t\t\t\t\t   const char *);\n+#endif\n+\n /* Language description for N_SO stabs.  */\n #define N_SO_AS          1\n #define N_SO_C           2"}, {"sha": "a020e28ad2756cda21b4917d9982f11da4f0ae5b", "filename": "gcc/df-problems.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"function.h\"\n #include \"regs.h\"\n-#include \"output.h\"\n #include \"alloc-pool.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\""}, {"sha": "0d36ad13893f7f966367b9f6dbdcd40dd225b9d0", "filename": "gcc/df-scan.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"function.h\"\n #include \"regs.h\"\n-#include \"output.h\"\n #include \"alloc-pool.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\""}, {"sha": "c2900b30d21c776cdacab28c72ef3d39d6232bd5", "filename": "gcc/dojump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"ggc.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tm_p.h\"\n \n static bool prefer_and_bit_test (enum machine_mode, int);"}, {"sha": "a75ab0a2c44abf2271a2412e6e9d12e43f881bc4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -1,3 +1,8 @@\n+2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* trans-common.c: Do not include output.h.\n+\t* trans-decl.c: Likewise.\n+\n 2012-05-31  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/53521"}, {"sha": "7bcc19d3c7a401c4e5ac805bec7d48c8fb1c2962", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -330,7 +330,7 @@ $(F95_PARSER_OBJS): fortran/gfortran.h fortran/libgfortran.h \\\n \t\tfortran/parse.h fortran/arith.h fortran/target-memory.h \\\n \t\t$(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TM_P_H) coretypes.h \\\n \t\t$(RTL_H) $(TREE_H) $(TREE_DUMP_H) $(GGC_H) $(EXPR_H) \\\n-\t\t$(FLAGS_H) output.h $(DIAGNOSTIC_H) errors.h $(FUNCTION_H) \\\n+\t\t$(FLAGS_H) $(DIAGNOSTIC_H) errors.h $(FUNCTION_H) \\\n \t\tfortran/iso-c-binding.def fortran/iso-fortran-env.def\n fortran/openmp.o: pointer-set.h $(TARGET_H) toplev.h\n "}, {"sha": "86cf0070ed33a8f69abcaa0fb8f815f4ee1e8f13", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -99,7 +99,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"output.h\"\t/* For decl_default_tls_model.  */\n #include \"gfortran.h\"\n #include \"trans.h\"\n #include \"trans-types.h\""}, {"sha": "637376b7412ba35f5585ac675608e9c0c986c715", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"diagnostic-core.h\"\t/* For internal_error.  */\n #include \"toplev.h\"\t/* For announce_function.  */\n-#include \"output.h\"\t/* For decl_default_tls_model.  */\n #include \"target.h\"\n #include \"function.h\"\n #include \"flags.h\""}, {"sha": "e3ca1fd13afc9d631b8bd808271915a35e82cc9a", "filename": "gcc/fwprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"obstack.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"df.h\"\n #include \"target.h\"\n #include \"cfgloop.h\""}, {"sha": "59b8380f299f39bde5850a3ee6c37b063dd1d48f", "filename": "gcc/gcov-dump.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fgcov-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fgcov-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-dump.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -29,7 +29,7 @@ along with Gcov; see the file COPYING3.  If not see\n #include \"gcov-io.h\"\n #include \"gcov-io.c\"\n \n-static void dump_file (const char *);\n+static void dump_gcov_file (const char *);\n static void print_prefix (const char *, unsigned, gcov_position_t);\n static void print_usage (void);\n static void print_version (void);\n@@ -116,7 +116,7 @@ main (int argc ATTRIBUTE_UNUSED, char **argv)\n     }\n \n   while (argv[optind])\n-    dump_file (argv[optind++]);\n+    dump_gcov_file (argv[optind++]);\n   return 0;\n }\n \n@@ -153,7 +153,7 @@ print_prefix (const char *filename, unsigned depth, gcov_position_t position)\n }\n \n static void\n-dump_file (const char *filename)\n+dump_gcov_file (const char *filename)\n {\n   unsigned tags[4];\n   unsigned depth = 0;"}, {"sha": "18e963d1ff097268bc124060c83f36f2b41b97f4", "filename": "gcc/gcse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -150,7 +150,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"except.h\""}, {"sha": "f9319f46b318ba655efcf3a6d91e36e2631e03a5", "filename": "gcc/graph.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"hard-reg-set.h\"\n #include \"obstack.h\""}, {"sha": "b959bc5e9cef6fb47d6ea11784a2288a0573fc24", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -142,7 +142,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"sched-int.h\"\n #include \"target.h\"\n #include \"common/common-target.h\"\n-#include \"output.h\"\n #include \"params.h\"\n #include \"vecprim.h\"\n #include \"dbgcnt.h\""}, {"sha": "dabcdcce4953e59780e20680ab272438bb80f30d", "filename": "gcc/hw-doloop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fhw-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fhw-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhw-doloop.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"cfglayout.h\"\n #include \"cfgloop.h\"\n-#include \"output.h\"\n #include \"recog.h\"\n #include \"target.h\"\n #include \"hw-doloop.h\""}, {"sha": "9885911a01aa9d4d1a9ed7ab6a229f867b3633b6", "filename": "gcc/hwint.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fhwint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fhwint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.h?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -74,6 +74,11 @@ extern char sizeof_long_long_must_be_8[sizeof(long long) == 8 ? 1 : -1];\n # endif\n #endif\n \n+/* This is a magic identifier which allows GCC to figure out the type\n+   of HOST_WIDE_INT for %wd specifier checks.  You must issue this\n+   typedef before using the __asm_fprintf__ format attribute.  */\n+typedef HOST_WIDE_INT __gcc_host_wide_int__;\n+\n /* Various printf format strings for HOST_WIDE_INT.  */\n \n #if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG"}, {"sha": "9fdfbb91b2437c2226cf13a20fa3d332f05cc49a", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"cgraph.h\"\n #include \"timevar.h\"\n-#include \"output.h\"\n #include \"intl.h\"\n #include \"coverage.h\"\n #include \"ggc.h\""}, {"sha": "4cfd1368990e326ebceb305ff2cde629ca9022c8", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -46,7 +46,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-utils.h\"\n #include \"gimple.h\"\n #include \"cgraph.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\""}, {"sha": "33b265bca8d59e2fbf198d729b9669a737dd89ed", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -53,7 +53,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-reference.h\"\n #include \"gimple.h\"\n #include \"cgraph.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\""}, {"sha": "b83c87b96ad9a4db9bbc97e52786cf84a2d4fcc4", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-reference.h\"\n #include \"gimple.h\"\n #include \"cgraph.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\""}, {"sha": "d0d4495e07a8593db8ef772839d06357194b887f", "filename": "gcc/ira-build.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fira-build.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fira-build.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-build.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"params.h\"\n #include \"df.h\"\n-#include \"output.h\"\n #include \"reload.h\"\n #include \"sparseset.h\"\n #include \"ira-int.h\""}, {"sha": "a994a427d074acda92b6ad6c2f60606234c34b0c", "filename": "gcc/ira-emit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fira-emit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fira-emit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-emit.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -84,7 +84,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\"\n-#include \"output.h\"\n #include \"reload.h\"\n #include \"df.h\"\n #include \"ira-int.h\""}, {"sha": "6cece34294c94b07e702e1f4640a72f24535e213", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -1,3 +1,7 @@\n+2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* resource.c: Do not include output.h.\n+\n 2012-05-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR java/52815"}, {"sha": "2339b0d7e6b6a3d912f1ecb8c5e54e01769a38a6", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -309,7 +309,7 @@ java/mangle.o: java/mangle.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) $(SYSTEM_H) \\\n java/mangle_name.o: java/mangle_name.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) \\\n   $(SYSTEM_H) coretypes.h $(GGC_H)\n java/resource.o: java/resource.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(JAVA_TREE_H) java/jcf.h java/parse.h toplev.h output.h $(GGC_H) \\\n+  $(JAVA_TREE_H) java/jcf.h java/parse.h toplev.h $(GGC_H) \\\n   $(TARGET_H) $(FUNCTION_H) gt-java-resource.h\n java/typeck.o: java/typeck.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n   $(SYSTEM_H) coretypes.h $(GGC_H) $(REAL_H)"}, {"sha": "1558dcdff2d02fe56063274833fae8357a4ee263", "filename": "gcc/java/resource.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fjava%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fjava%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fresource.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -30,7 +30,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"jcf.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n-#include \"output.h\"\n #include \"parse.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "2a61a51ac384389316712631ba923a3a829baf0f", "filename": "gcc/lcm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Flcm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Flcm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flcm.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -60,7 +60,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"sbitmap.h\""}, {"sha": "4ace1748358c758593dd9f3273a2ad3964c15500", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\"\n #include \"cfgloop.h\"\n-#include \"output.h\"\n #include \"params.h\"\n #include \"target.h\"\n "}, {"sha": "f8405dde268c32f1b8134d604a6844f1df034a43", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -47,7 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"flags.h\"\n #include \"df.h\""}, {"sha": "32d5e878bf13d78cbc309c276d8d72240c0c2f42", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -59,7 +59,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"expr.h\"\n #include \"intl.h\"\n-#include \"output.h\"\n #include \"diagnostic-core.h\"\n #include \"df.h\"\n #include \"hashtab.h\""}, {"sha": "13f41cf19f4118d84b6b201e985aa950a4d1df89", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"cfglayout.h\"\n #include \"params.h\"\n-#include \"output.h\"\n #include \"expr.h\"\n #include \"hashtab.h\"\n #include \"recog.h\""}, {"sha": "700dbfeb8169fa1d48e550911d426d27a742f7aa", "filename": "gcc/loop-unswitch.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Floop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unswitch.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"cfglayout.h\"\n #include \"params.h\"\n-#include \"output.h\"\n #include \"expr.h\"\n \n /* This pass moves constant conditions out of loops, duplicating the loop"}, {"sha": "c349709989d5bd4a525df97fa3791e2592aa1034", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"vec.h\"\n #include \"timevar.h\"\n-#include \"output.h\"\n #include \"pointer-set.h\"\n #include \"lto-streamer.h\"\n #include \"data-streamer.h\""}, {"sha": "ad4077e04f39fc6a7a63cc739eb9984b8f8924ed", "filename": "gcc/lto-section-in.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Flto-section-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Flto-section-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-in.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"vec.h\"\n #include \"timevar.h\"\n-#include \"output.h\"\n #include \"lto-streamer.h\"\n #include \"lto-compress.h\"\n #include \"ggc.h\""}, {"sha": "ddb91d8557c5257812d333762a1f95e788c8a880", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"debug.h\"\n #include \"vec.h\"\n #include \"timevar.h\"\n-#include \"output.h\"\n #include \"ipa-utils.h\"\n #include \"data-streamer.h\"\n #include \"gimple-streamer.h\""}, {"sha": "81949ab5bc503dd01a5047c3de5d17d327fffe7a", "filename": "gcc/mcf.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fmcf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fmcf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmcf.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -48,7 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"langhooks.h\"\n #include \"tree.h\"\n #include \"gcov-io.h\""}, {"sha": "a5967319385d753503eb8e7447ad81f3bfdb4ca5", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"tree-pass.h\""}, {"sha": "4d40f3c5d478f2cfefa0b01ed472020a7352f0be", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -1,3 +1,7 @@\n+2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* objc-act.c: Do not include output.h.\n+\n 2012-05-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR objc++/53388"}, {"sha": "9399376e4370d75d6b4e50383f054dc066d50ba0", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -126,7 +126,7 @@ objc/objc-act.o : objc/objc-act.c \\\n    gt-objc-objc-act.h \\\n    $(START_HDRS) \\\n    $(GGC_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) input.h \\\n-   toplev.h $(FUNCTION_H) output.h debug.h $(LANGHOOKS_DEF_H) \\\n+   toplev.h $(FUNCTION_H) debug.h $(LANGHOOKS_DEF_H) \\\n    $(HASHTAB_H) $(GIMPLE_H) \\\n    $(C_PRAGMA_H) $(C_TARGET_H) \\\n    objc/objc-encoding.h \\"}, {"sha": "14e1d5f0599bb6d32ccf4b160f379f83ad13128a", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"objc-map.h\"\n #include \"input.h\"\n #include \"function.h\"\n-#include \"output.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n #include \"debug.h\""}, {"sha": "151930e961ff58b08d3e87e64650a642848187b0", "filename": "gcc/objc/objc-next-runtime-abi-01.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-01.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -49,7 +49,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"ggc.h\"\n #include \"target.h\"\n-#include \"output.h\"\n+#include \"output.h\" /* for asm_out_file */\n #include \"tree-iterator.h\"\n \n #include \"objc-runtime-hooks.h\""}, {"sha": "855e5fc686184de480931b3798093de0ce2549c6", "filename": "gcc/output.h", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -121,10 +121,6 @@ extern void output_addr_const (FILE *, rtx);\n    and fixed syntactic prefixes.  */\n #if GCC_VERSION >= 3004\n #define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)\n-/* This is a magic identifier which allows GCC to figure out the type\n-   of HOST_WIDE_INT for %wd specifier checks.  You must issue this\n-   typedef before using the __asm_fprintf__ format attribute.  */\n-typedef HOST_WIDE_INT __gcc_host_wide_int__;\n #else\n #define ATTRIBUTE_ASM_FPRINTF(m, n) ATTRIBUTE_NONNULL(m)\n #endif\n@@ -169,9 +165,6 @@ extern void merge_weak (tree, tree);\n /* Emit any pending weak declarations.  */\n extern void weak_finish (void);\n \n-/* Return the default TLS model for a given variable.  */\n-extern enum tls_model decl_default_tls_model (const_tree);\n-\n /* Decode an `asm' spec for a declaration as a register name.\n    Return the register number, or -1 if nothing specified,\n    or -2 if the ASMSPEC is not `cc' or `memory' and is not recognized,\n@@ -384,12 +377,6 @@ extern int current_function_sp_is_unchanging;\n \n extern int current_function_uses_only_leaf_regs;\n \n-/* Default file in which to dump debug output.  */\n-\n-#ifdef BUFSIZ\n-extern FILE *dump_file;\n-#endif\n-\n /* Nonnull if the insn currently being emitted was a COND_EXEC pattern.  */\n extern rtx current_insn_predicate;\n \n@@ -627,10 +614,8 @@ extern enum section_category categorize_decl_for_section (const_tree, int);\n extern void default_coff_asm_named_section (const char *, unsigned int, tree);\n extern void default_pe_asm_named_section (const char *, unsigned int, tree);\n \n-extern void default_stabs_asm_out_destructor (rtx, int);\n extern void default_named_section_asm_out_destructor (rtx, int);\n extern void default_dtor_section_asm_out_destructor (rtx, int);\n-extern void default_stabs_asm_out_constructor (rtx, int);\n extern void default_named_section_asm_out_constructor (rtx, int);\n extern void default_ctor_section_asm_out_constructor (rtx, int);\n \n@@ -678,24 +663,4 @@ extern int default_address_cost (rtx, bool);\n /* Output stack usage information.  */\n extern void output_stack_usage (void);\n \n-/* dbxout helper functions */\n-#if defined DBX_DEBUGGING_INFO || defined XCOFF_DEBUGGING_INFO\n-\n-extern void dbxout_int (int);\n-extern void dbxout_stabd (int, int);\n-extern void dbxout_begin_stabn (int);\n-extern void dbxout_begin_stabn_sline (int);\n-extern void dbxout_begin_empty_stabs (int);\n-extern void dbxout_begin_simple_stabs (const char *, int);\n-extern void dbxout_begin_simple_stabs_desc (const char *, int, int);\n-\n-extern void dbxout_stab_value_zero (void);\n-extern void dbxout_stab_value_label (const char *);\n-extern void dbxout_stab_value_label_diff (const char *, const char *);\n-extern void dbxout_stab_value_internal_label (const char *, int *);\n-extern void dbxout_stab_value_internal_label_diff (const char *, int *,\n-\t\t\t\t\t\t   const char *);\n-\n-#endif\n-\n #endif /* ! GCC_OUTPUT_H */"}, {"sha": "efef130ba7ed928b5335e905ac992f316b0ccb16", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"except.h\""}, {"sha": "e0663446e542440afb23ad00c8b4754aa9c73e1b", "filename": "gcc/postreload.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"reload.h\"\n #include \"recog.h\"\n-#include \"output.h\"\n #include \"cselib.h\"\n #include \"diagnostic-core.h\"\n #include \"except.h\""}, {"sha": "776ea7e9a79d9d4cba0d5902e372f10dea140fd5", "filename": "gcc/predict.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\""}, {"sha": "927257b447fecca2d991329984c63996f442aa92", "filename": "gcc/profile.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -55,7 +55,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"regs.h\"\n #include \"expr.h\"\n #include \"function.h\""}, {"sha": "5edf44d675ece6cdaf549434ef6f0db38e5abe7c", "filename": "gcc/ree.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -237,8 +237,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"optabs.h\"\n #include \"insn-codes.h\"\n #include \"rtlhooks-def.h\"\n-/* Include output.h for dump_file.  */\n-#include \"output.h\"\n #include \"params.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\""}, {"sha": "b534431f1840df62707c0ca5431b4e0fa3fe693d", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -164,7 +164,6 @@\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n-#include \"output.h\"\n #include \"basic-block.h\"\n #include \"reload.h\"\n #include \"ggc.h\""}, {"sha": "70fc0c09ecf9b4136ba63bb0114687760c37887c", "filename": "gcc/regcprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -30,7 +30,6 @@\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"reload.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"recog.h\"\n #include \"flags.h\""}, {"sha": "f3549c7904bb35081ab3f38c9efb04612327cd3a", "filename": "gcc/regmove.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"target.h\"\n-#include \"output.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\""}, {"sha": "cecc7278999688c75abdc7e63e3cefcd3fefec01", "filename": "gcc/regstat.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fregstat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fregstat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregstat.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"regs.h\"\n-#include \"output.h\"\n #include \"except.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\""}, {"sha": "00980ce8786ff87cb2451ad05f6c70f5e106e4b3", "filename": "gcc/reload1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"reload.h\"\n #include \"recog.h\"\n-#include \"output.h\"\n #include \"except.h\"\n #include \"tree.h\"\n #include \"ira.h\""}, {"sha": "9f1f1127c814d4905a7f6a80a0261b7d7b502582", "filename": "gcc/sched-ebb.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fsched-ebb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fsched-ebb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-ebb.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"sched-int.h\"\n #include \"target.h\"\n-#include \"output.h\"\n \n \f\n #ifdef INSN_SCHEDULING"}, {"sha": "999c50c3a5a1817a9daaeffbd5c0afe4f1b0eadc", "filename": "gcc/sel-sched-dump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fsel-sched-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fsel-sched-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-dump.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n #include \"params.h\"\n-#include \"output.h\"\n #include \"basic-block.h\"\n #include \"cselib.h\"\n #include \"target.h\""}, {"sha": "6481a362d3760c0322aded047747463a0ee29648", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n-#include \"output.h\"\n #include \"ggc.h\"\n #include \"target.h\"\n "}, {"sha": "e360f60dcbd7089c032249ecef10516d39233a5f", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"function.h\"\n #include \"expr.h\"\n-#include \"output.h\"\n #include \"diagnostic-core.h\"\n #include \"ggc.h\"\n #include \"target.h\""}, {"sha": "bd0d7edc6d2fc424708797eb74e06c3a387f22aa", "filename": "gcc/store-motion.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fstore-motion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fstore-motion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstore-motion.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"except.h\""}, {"sha": "d0be753431b2b0d5da0993fde845ebb785beec90", "filename": "gcc/system.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -663,6 +663,14 @@ extern int vsnprintf(char *, size_t, const char *, va_list);\n #define __builtin_expect(a, b) (a)\n #endif\n \n+/* Default file in which to dump debug output.  Here for lack of a better\n+   place to put it.  This used to be defined in output.h, but that results\n+   in almost all files including output.h, even if they don't output anything\n+   except, maybe, something to the dump file.  */\n+#ifdef BUFSIZ\n+extern FILE *dump_file;\n+#endif\n+\n /* Redefine abort to report an internal error w/o coredump, and\n    reporting the location of the error in the source file.  */\n extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;"}, {"sha": "4c3feca39d17bc0739b748c68143e8717eb03e33", "filename": "gcc/tlink.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -835,8 +835,8 @@ do_tlink (char **ld_argv, char **object_lst ATTRIBUTE_UNUSED)\n \t  {\n \t    if (tlink_verbose >= 3)\n \t      {\n-\t\tdump_file (ldout, stdout);\n-\t\tdump_file (lderrout, stderr);\n+\t\tdump_ld_file (ldout, stdout);\n+\t\tdump_ld_file (lderrout, stderr);\n \t      }\n \t    demangle_new_symbols ();\n \t    if (! scan_linker_output (ldout)\n@@ -850,9 +850,9 @@ do_tlink (char **ld_argv, char **object_lst ATTRIBUTE_UNUSED)\n \t  }\n     }\n \n-  dump_file (ldout, stdout);\n+  dump_ld_file (ldout, stdout);\n   unlink (ldout);\n-  dump_file (lderrout, stderr);\n+  dump_ld_file (lderrout, stderr);\n   unlink (lderrout);\n   if (exit)\n     {"}, {"sha": "b350fc09b3a4684eba7b6e2317468e81b7def046", "filename": "gcc/tracer.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftracer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftracer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftracer.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -42,7 +42,6 @@\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"cfglayout.h\"\n #include \"fibheap.h\"\n #include \"flags.h\""}, {"sha": "04f166dc5bf118c6eac6042b9d8342705402658d", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -21,7 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n-#include \"output.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-dump.h\"\n #include \"pointer-set.h\""}, {"sha": "fb7e300d14995f4c89e7ab629ad6c58ef9480bc8", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "78583c47e1b7fb11a22fa9716b6ae104a9a32ac2", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"diagnostic-core.h\"\n #include \"flags.h\"\n #include \"function.h\""}, {"sha": "ecd496250f8ba7ffc10fc447ad3aa278a90e39a0", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"timevar.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\""}, {"sha": "102b699c5008b2a53479658cb26ef4af7e820bc3", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"langhooks.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\""}, {"sha": "b7a41e1a8572c07699823e5dbf5fc82032b579a9", "filename": "gcc/tree-nomudflap.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-nomudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-nomudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nomudflap.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"gimple.h\"\n #include \"hashtab.h\"\n-#include \"output.h\"\n #include \"langhooks.h\"\n #include \"tree-mudflap.h\"\n #include \"tree-pass.h\""}, {"sha": "b48c5c50e48ab3cd8287c4952413787302116555", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\""}, {"sha": "f810d772d594970a9f6c175bd4196cf64b9abb8d", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"output.h\"\n #include \"tree-pretty-print.h\"\n #include \"hashtab.h\"\n #include \"tree-flow.h\""}, {"sha": "dfd0ef0467735ed9ea819f9712f3fead789a31bf", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -44,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"profile.h\"\n #include \"target.h\"\n-#include \"output.h\"\n \n static GTY(()) tree gcov_type_node;\n static GTY(()) tree gcov_type_tmp_var;"}, {"sha": "9fc523e108f8ac4a0e7c332640cfa1e266d05ef9", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\""}, {"sha": "c248cf23c735bc386cac5254fa6313b76474e6ac", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -118,7 +118,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\""}, {"sha": "696f3f33a22dcd9fa9561b0e55f590962af1b862", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\""}, {"sha": "19a1c7b01a28c6839b5060561bd887fd1cc62703", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\""}, {"sha": "384500454085ebb29f106e88d27749f312834572", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"tree-pass.h\""}, {"sha": "9c093f83dded63c0399dd626e2ed235da3fbbfa2", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\""}, {"sha": "e2e76058251a13ccbada9c59e3fa6b0142df0922", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\""}, {"sha": "c7c4a15bef4d228ae9c1686986fcbaf069725444", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"intl.h\""}, {"sha": "0f592a1f099045de7c28dc4faae23a965c8c860c", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\""}, {"sha": "48cb7e06a39914aa324b79fd5ab5c8da4598be80", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\""}, {"sha": "c6304c4cccbcf6edec292935ab289f489cec242a", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\"\n #include \"tree-pass.h\""}, {"sha": "d58ec11e1594055e4f34731733a4aa4bf79fda0f", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -27,7 +27,6 @@\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"gimple-pretty-print.h\"\n #include \"timevar.h\""}, {"sha": "cb3e54b1110e73a82f3d3a82a637b667835eaebc", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@\n #include \"bitmap.h\"\n #include \"flags.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\""}, {"sha": "da5878ad797acf0249af7b634cb683c3fbce2d15", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -187,7 +187,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"tree-flow.h\""}, {"sha": "514ffd0a1b66b43d71ac91d2ab27116f01188e9a", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\""}, {"sha": "65be1b926a63d004f637d32a7a8d33991baef434", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"tree-flow.h\"\n #include \"tree-dump.h\""}, {"sha": "f74bad6b8e6ef7a469a777c6033ca892dc156e8a", "filename": "gcc/tree-ssa-uncprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-uncprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-uncprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uncprop.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"timevar.h\"\n #include \"tree-dump.h\""}, {"sha": "109578fa555dd1bae35d68c081bd0edae36cbe43", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"langhooks.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"gimple-pretty-print.h\"\n #include \"bitmap.h\""}, {"sha": "d545ffd21d29af126a1800f059b40d26e6f8704f", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\""}, {"sha": "5645fbc0d9c013df3d3c4283905eeb96e3465565", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -5678,6 +5678,8 @@ extern void set_user_assembler_name (tree, const char *);\n extern void process_pending_assemble_externals (void);\n extern bool decl_replaceable_p (tree);\n extern bool decl_binds_to_current_def_p (tree);\n+extern enum tls_model decl_default_tls_model (const_tree);\n+\n /* In stmt.c */\n extern void expand_computed_goto (tree);\n extern bool parse_output_constraint (const char **, int, int, int,"}, {"sha": "dabe41951000c428db6c2ce18a4f8415a0c10917", "filename": "gcc/value-prof.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"value-prof.h\"\n-#include \"output.h\"\n #include \"flags.h\"\n #include \"insn-config.h\"\n #include \"recog.h\""}, {"sha": "07cabe7930520ec30bac7820efaf4cb08a87483a", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -96,7 +96,6 @@\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"insn-config.h\"\n #include \"reload.h\"\n #include \"sbitmap.h\""}, {"sha": "2428686b9fe26046c2e38dd674dfe81d7eac49ee", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -1371,25 +1371,6 @@ assemble_asm (tree string)\n   fprintf (asm_out_file, \"\\t%s\\n\", TREE_STRING_POINTER (string));\n }\n \n-/* Record an element in the table of global destructors.  SYMBOL is\n-   a SYMBOL_REF of the function to be called; PRIORITY is a number\n-   between 0 and MAX_INIT_PRIORITY.  */\n-\n-void\n-default_stabs_asm_out_destructor (rtx symbol ATTRIBUTE_UNUSED,\n-\t\t\t\t  int priority ATTRIBUTE_UNUSED)\n-{\n-#if defined DBX_DEBUGGING_INFO || defined XCOFF_DEBUGGING_INFO\n-  /* Tell GNU LD that this is part of the static destructor set.\n-     This will work for any system that uses stabs, most usefully\n-     aout systems.  */\n-  dbxout_begin_simple_stabs (\"___DTOR_LIST__\", 22 /* N_SETT */);\n-  dbxout_stab_value_label (XSTR (symbol, 0));\n-#else\n-  sorry (\"global destructors not supported on this target\");\n-#endif\n-}\n-\n /* Write the address of the entity given by SYMBOL to SEC.  */\n void\n assemble_addr_to_section (rtx symbol, section *sec)\n@@ -1439,23 +1420,6 @@ default_dtor_section_asm_out_destructor (rtx symbol,\n }\n #endif\n \n-/* Likewise for global constructors.  */\n-\n-void\n-default_stabs_asm_out_constructor (rtx symbol ATTRIBUTE_UNUSED,\n-\t\t\t\t   int priority ATTRIBUTE_UNUSED)\n-{\n-#if defined DBX_DEBUGGING_INFO || defined XCOFF_DEBUGGING_INFO\n-  /* Tell GNU LD that this is part of the static destructor set.\n-     This will work for any system that uses stabs, most usefully\n-     aout systems.  */\n-  dbxout_begin_simple_stabs (\"___CTOR_LIST__\", 22 /* N_SETT */);\n-  dbxout_stab_value_label (XSTR (symbol, 0));\n-#else\n-  sorry (\"global constructors not supported on this target\");\n-#endif\n-}\n-\n void\n default_named_section_asm_out_constructor (rtx symbol, int priority)\n {"}, {"sha": "4e102211816ef36c4469e2542d1ccde9f81cbfef", "filename": "gcc/web.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fweb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7a421eefeda2fdee75d67c512ccdabb408e019/gcc%2Fweb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fweb.c?ref=be7a421eefeda2fdee75d67c512ccdabb408e019", "patch": "@@ -45,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"obstack.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"df.h\"\n #include \"function.h\"\n #include \"insn-config.h\""}]}