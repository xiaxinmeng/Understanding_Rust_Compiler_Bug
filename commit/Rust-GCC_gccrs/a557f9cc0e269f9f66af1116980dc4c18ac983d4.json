{"sha": "a557f9cc0e269f9f66af1116980dc4c18ac983d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU1N2Y5Y2MwZTI2OWY5ZjY2YWYxMTE2OTgwZGM0YzE4YWM5ODNkNA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2010-10-07T12:47:52Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2010-10-07T12:47:52Z"}, "message": "rs6000.c (rs6000_emit_prologue): Use gen_int_mode rather than sign extension by hand.\n\n\t* config/rs6000/rs6000.c (rs6000_emit_prologue): Use gen_int_mode\n\trather than sign extension by hand.\n\nFrom-SVN: r165101", "tree": {"sha": "f107e89140f51aa0ed1131ca12dd9950eb05167b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f107e89140f51aa0ed1131ca12dd9950eb05167b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a557f9cc0e269f9f66af1116980dc4c18ac983d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a557f9cc0e269f9f66af1116980dc4c18ac983d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a557f9cc0e269f9f66af1116980dc4c18ac983d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a557f9cc0e269f9f66af1116980dc4c18ac983d4/comments", "author": null, "committer": null, "parents": [{"sha": "2e79de51b02b742c716f5bf94bb2cbff62b5fa6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e79de51b02b742c716f5bf94bb2cbff62b5fa6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e79de51b02b742c716f5bf94bb2cbff62b5fa6e"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "e18f7008a5d0388932190ab215d21dc0ce8a273d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a557f9cc0e269f9f66af1116980dc4c18ac983d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a557f9cc0e269f9f66af1116980dc4c18ac983d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a557f9cc0e269f9f66af1116980dc4c18ac983d4", "patch": "@@ -1,3 +1,8 @@\n+2010-10-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_emit_prologue): Use gen_int_mode\n+\trather than sign extension by hand.\n+\n 2010-10-07  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/45926\n@@ -20,17 +25,17 @@\n \t* doc/tm.texi.in (CLASS_LIKELY_SPILLED_P): Remove documentation.\n \t* doc/tm.texi.in: Regenerate.\n \t* system.h (CLASS_LIKELY_SPILLED_P): Poison.\n-\t* targhooks.c (default_class_likely_spilled_p): Don't use the \n+\t* targhooks.c (default_class_likely_spilled_p): Don't use the\n \tCLASS_LIKELY_SPILLED_P macro.\n \n-\t* config\\arm\\arm.md: Update comment.\n+\t* config/arm/arm.md: Update comment.\n \n 2010-10-06  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa.c (cgraph_remove_unreachable_nodes): External references can always\n-\tbe removed.\n-\t(cgraph_externally_visible_p): We can not bring local comdats that are known\n-\tto linker; fix handling of internal visibility.\n+\t* ipa.c (cgraph_remove_unreachable_nodes): External references can\n+\talways be removed.\n+\t(cgraph_externally_visible_p): We can not bring local comdats that\n+\tare known to linker; fix handling of internal visibility.\n \t(function_and_variable_visibility): Likewise.\n \n 2010-10-06  Eric Botcazou  <ebotcazou@adacore.com>\n@@ -65,7 +70,7 @@\n \n 2010-10-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n-\tImplemented fast enumeration for Objective-C.\t\n+\tImplemented fast enumeration for Objective-C.\n \t* c-parser.c (objc_could_be_foreach_context): New.\n \t(c_lex_one_token): Recognize RID_IN keyword in a potential\n \tObjective-C foreach context.\n@@ -87,7 +92,7 @@\n \tperform checks on the loop declarations.\n \t* c-tree.h (check_for_loop_decls): Updated declaration.\n \t* doc/objc.texi: Document fast enumeration.\n-\t\n+\n 2010-10-06  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.h (FIRST_PSEUDO_REGISTER): Increment by\n@@ -431,8 +436,7 @@\n 2010-10-04  Andi Kleen <ak@linux.intel.com>\n \n \t* Makefile.in (xgcc, cpp, cc1, collect2, lto-wrapper, gcov,\n-        gcov-dump, cc1-dummy, genprog, build/gcov-iov):\n-        Add + to build rule.\n+\tgcov-dump, cc1-dummy, genprog, build/gcov-iov): Add + to build rule.\n \n 2010-10-04  Matthias Klose  <doko@ubuntu.com>\n \n@@ -993,7 +997,7 @@\n \t* extend.texi (interrupt_handler): Add MicroBlaze to list.\n \t(save_volatiles): Describe option for MicroBlaze.\n \t* invoke.texi: Add MicroBlaze Options.\n-\t* contrib.texi: Add acknowledgment. \n+\t* contrib.texi: Add acknowledgment.\n \t* md.texi: Add MicroBlaze d and z constraints.\n \t* install.texi: Add microblaze-*-elf.\n \t* configure.ac: Add microblaze-*-* to target list.\n@@ -1111,7 +1115,7 @@\n \tand RID_AT_PUBLIC instead of RID_PUBLIC.\n \t(c_parser_statement_after_labels): Use RID_AT_TRY instead of\n \tRID_TRY and RID_AT_CATCH instead of RID_CATCH.\n-\t\n+\n 2010-09-30  Tom G. Christensen <tgc@jupiterrise.com>\n \n \t* doc/install.texi (Binaries): Update link to HP-UX porting centre.\n@@ -1121,7 +1125,7 @@\n \n \tMerge from 'apple/trunk' branch on FSF servers.\n \t* c-parser.c: Applied change originally in c-parse.in.\n-\t\n+\n \t2005-10-04  Fariborz Jahanian <fjahanian@apple.com>\n \n \tRadar 4281748\n@@ -9203,7 +9207,7 @@\n \n 2010-07-22  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n- \tPR target/43698\n+\tPR target/43698\n \t* config/arm/arm.md: Split arm_rev into *arm_rev and *thumb1_rev.\n \tSet *arm_rev to be predicable.\n \n@@ -12081,7 +12085,7 @@\n \n \t* ipa-split.c (split_function): For aggregate values, set the return\n \tslot optimization bit.  When passing DECL_BY_REFERENCE, produce\n- \t*<retval> = fncall.part ().\n+\t*<retval> = fncall.part ().\n \t(execute_split_functions): Do not care about DECL_BY_REFERENCE.\n \n 2010-07-02  Sandra Loosemore  <sandra@codesourcery.com>"}, {"sha": "509000ba8225af331481792b4116a40730c91546", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a557f9cc0e269f9f66af1116980dc4c18ac983d4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a557f9cc0e269f9f66af1116980dc4c18ac983d4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a557f9cc0e269f9f66af1116980dc4c18ac983d4", "patch": "@@ -20214,7 +20214,7 @@ rs6000_emit_prologue (void)\n   /* In AIX ABI we need to make sure r2 is really saved.  */\n   if (TARGET_AIX && crtl->calls_eh_return)\n     {\n-      rtx tmp_reg, tmp_reg_si, compare_result, toc_save_done, jump;\n+      rtx tmp_reg, tmp_reg_si, hi, lo, compare_result, toc_save_done, jump;\n       long toc_restore_insn;\n \n       gcc_assert (frame_reg_rtx == frame_ptr_rtx\n@@ -20232,15 +20232,13 @@ rs6000_emit_prologue (void)\n \t toc adjusting stub.  */\n       emit_move_insn (tmp_reg_si, gen_rtx_MEM (SImode, tmp_reg));\n       toc_restore_insn = TARGET_32BIT ? 0x80410014 : 0xE8410028;\n-      toc_restore_insn = (toc_restore_insn ^ 0x80000000) - 0x80000000;\n-      emit_insn (gen_xorsi3 (tmp_reg_si, tmp_reg_si,\n-\t\t\t     GEN_INT (toc_restore_insn & ~0xffff)));\n+      hi = gen_int_mode (toc_restore_insn & ~0xffff, SImode);\n+      emit_insn (gen_xorsi3 (tmp_reg_si, tmp_reg_si, hi));\n       compare_result = gen_rtx_REG (CCUNSmode, CR0_REGNO);\n       validate_condition_mode (EQ, CCUNSmode);\n+      lo = gen_int_mode (toc_restore_insn & 0xffff, SImode);\n       emit_insn (gen_rtx_SET (VOIDmode, compare_result,\n-\t\t\t      gen_rtx_COMPARE (CCUNSmode, tmp_reg_si,\n-\t\t\t\t\t       GEN_INT (toc_restore_insn\n-\t\t\t\t\t\t\t& 0xffff))));\n+\t\t\t      gen_rtx_COMPARE (CCUNSmode, tmp_reg_si, lo)));\n       toc_save_done = gen_label_rtx ();\n       jump = gen_rtx_IF_THEN_ELSE (VOIDmode,\n \t\t\t\t   gen_rtx_EQ (VOIDmode, compare_result,"}]}