{"sha": "688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "node_id": "C_kwDOANBUbNoAKDY4OGY0ZWIyODE4NmRhZjMzM2Y3YTdmNWIxYmRjMWRmNDNiYjZjNDc", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2022-12-12T11:07:45Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2022-12-12T11:07:45Z"}, "message": "aarch64: Add __ARM_FEATURE_PAUTH and __ARM_FEATURE_BTI ACLE defines\n\nRecent ACLE additions specified the __ARM_FEATURE_PAUTH and __ARM_FEATURE_BTI macros [1] that the compiler\nshould define when the pointer authentication and BTI instructions are available (and don't act as NOPs).\nWe've received requests to enable them in GCC for aarch64, similar to clang [2].\nIt's a fairly simple patch and should be non-intrusive at this stage.\nPointer authentication has its own \"pauth\" feature flag, whereas BTI depends on an architecture level\nof Armv8.5-a or later.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\n[1] https://github.com/ARM-software/acle/blob/main/main/acle.md#pointer-authentication\n[2] https://reviews.llvm.org/rG7d40baa82b1f272f68de63f3c4f68d970bdcd6ed\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-c.cc (aarch64_update_cpp_builtins): Define\n\t__ARM_FEATURE_PAUTH and __ARM_FEATURE_BTI when appropriate.\n\t* config/aarch64/aarch64.h (TARGET_BTI): Define.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/acle/bti_def.c: New test.\n\t* gcc.target/aarch64/acle/pauth_def.c: New test.", "tree": {"sha": "65973cd6a3145240a6feb8fd29bb27f7e29b3015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65973cd6a3145240a6feb8fd29bb27f7e29b3015"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49bf49bb6174734879adcba7fb340c1c8f5dd253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49bf49bb6174734879adcba7fb340c1c8f5dd253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49bf49bb6174734879adcba7fb340c1c8f5dd253"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "e47b6a870e20867003393d7496f761e47057e804", "filename": "gcc/config/aarch64/aarch64-c.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/gcc%2Fconfig%2Faarch64%2Faarch64-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/gcc%2Fconfig%2Faarch64%2Faarch64-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-c.cc?ref=688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "patch": "@@ -195,6 +195,8 @@ aarch64_update_cpp_builtins (cpp_reader *pfile)\n       builtin_define_with_int_value (\"__ARM_FEATURE_PAC_DEFAULT\", v);\n     }\n \n+  aarch64_def_or_undef (TARGET_PAUTH, \"__ARM_FEATURE_PAUTH\", pfile);\n+  aarch64_def_or_undef (TARGET_BTI, \"__ARM_FEATURE_BTI\", pfile);\n   aarch64_def_or_undef (TARGET_I8MM, \"__ARM_FEATURE_MATMUL_INT8\", pfile);\n   aarch64_def_or_undef (TARGET_BF16_SIMD,\n \t\t\t\"__ARM_FEATURE_BF16_VECTOR_ARITHMETIC\", pfile);"}, {"sha": "db6ec5c48d8f57d57c983f410315cdffe8d45a27", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "patch": "@@ -312,6 +312,11 @@ enum class aarch64_feature : unsigned char {\n /* PAUTH instructions are enabled through +pauth.  */\n #define TARGET_PAUTH (AARCH64_ISA_PAUTH)\n \n+/* BTI instructions exist from Armv8.5-a onwards.  Their automatic use is\n+   enabled through -mbranch-protection by using NOP-space instructions,\n+   but this TARGET_ is used for defining BTI-related ACLE things.  */\n+#define TARGET_BTI (AARCH64_ISA_V8_5A)\n+\n /* MOPS instructions are enabled through +mops.  */\n #define TARGET_MOPS (AARCH64_ISA_MOPS)\n "}, {"sha": "db94769ec8b9dcad2b0f3b84753ad4b8d7d4b412", "filename": "gcc/testsuite/gcc.target/aarch64/acle/bti_def.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fbti_def.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fbti_def.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fbti_def.c?ref=688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+\n+#pragma GCC target \"arch=armv8.5-a\"\n+#ifndef __ARM_FEATURE_BTI\n+#error \"__ARM_FEATURE_BTI is not defined but should be!\"\n+#endif\n+\n+void\n+foo (void) {}\n+"}, {"sha": "400a0f61deb0749b3512322fad637a4c793b0dfb", "filename": "gcc/testsuite/gcc.target/aarch64/acle/pauth_def.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fpauth_def.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688f4eb28186daf333f7a7f5b1bdc1df43bb6c47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fpauth_def.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fpauth_def.c?ref=688f4eb28186daf333f7a7f5b1bdc1df43bb6c47", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+\n+#pragma GCC target \"+pauth\"\n+#ifndef __ARM_FEATURE_PAUTH\n+#error \"__ARM_FEATURE_PAUTH is not defined but should be!\"\n+#endif\n+\n+void\n+foo (void) {}\n+"}]}