{"sha": "6e790ca4615443fa395ac5cdba1ab6c87810985c", "node_id": "C_kwDOANBUbNoAKDZlNzkwY2E0NjE1NDQzZmEzOTVhYzVjZGJhMWFiNmM4NzgxMDk4NWM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-08-16T11:15:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-08-16T11:15:32Z"}, "message": "c++: Implement P2327R1 - De-deprecating volatile compound operations\n\nFrom what I can see, this has been voted in as a DR and as it means\nwe warn less often than before in -std={gnu,c}++2{0,3} modes or with\n-Wvolatile, I wonder if it shouldn't be backported to affected release\nbranches as well.\n\n2022-08-16  Jakub Jelinek  <jakub@redhat.com>\n\n\t* typeck.cc (cp_build_modify_expr): Implement\n\tP2327R1 - De-deprecating volatile compound operations.  Don't warn\n\tfor |=, &= or ^= with volatile lhs.\n\t* expr.cc (mark_use) <case MODIFY_EXPR>: Adjust warning wording,\n\tleave out simple.\n\n\t* g++.dg/cpp2a/volatile1.C: Adjust for de-deprecation of volatile\n\tcompound |=, &= and ^= operations.\n\t* g++.dg/cpp2a/volatile3.C: Likewise.\n\t* g++.dg/cpp2a/volatile5.C: Likewise.", "tree": {"sha": "00ceed0766b075550459790275efcfde267a9f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00ceed0766b075550459790275efcfde267a9f05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e790ca4615443fa395ac5cdba1ab6c87810985c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e790ca4615443fa395ac5cdba1ab6c87810985c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e790ca4615443fa395ac5cdba1ab6c87810985c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e790ca4615443fa395ac5cdba1ab6c87810985c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e56b695aa3aed3c0c80616bba569bbeb4a06b5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56b695aa3aed3c0c80616bba569bbeb4a06b5e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56b695aa3aed3c0c80616bba569bbeb4a06b5e5"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "f3e155b7ba33415bdf7b42e7953a8b4a1ff6ae53", "filename": "gcc/cp/expr.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Fcp%2Fexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Fcp%2Fexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.cc?ref=6e790ca4615443fa395ac5cdba1ab6c87810985c", "patch": "@@ -220,7 +220,7 @@ mark_use (tree expr, bool rvalue_p, bool read_p,\n     case MODIFY_EXPR:\n \t{\n \t  tree lhs = TREE_OPERAND (expr, 0);\n-\t  /* [expr.ass] \"A simple assignment whose left operand is of\n+\t  /* [expr.ass] \"An assignment whose left operand is of\n \t     a volatile-qualified type is deprecated unless the assignment\n \t     is either a discarded-value expression or appears in an\n \t     unevaluated context.\"  */\n@@ -230,7 +230,7 @@ mark_use (tree expr, bool rvalue_p, bool read_p,\n \t      && !TREE_THIS_VOLATILE (expr))\n \t    {\n \t      if (warning_at (location_of (expr), OPT_Wvolatile,\n-\t\t\t      \"using value of simple assignment with \"\n+\t\t\t      \"using value of assignment with \"\n \t\t\t      \"%<volatile%>-qualified left operand is \"\n \t\t\t      \"deprecated\"))\n \t\t/* Make sure not to warn about this assignment again.  */"}, {"sha": "6b38c8c7a0053b3cf833fde3b5805d51bbfaef6c", "filename": "gcc/cp/typeck.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Fcp%2Ftypeck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Fcp%2Ftypeck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.cc?ref=6e790ca4615443fa395ac5cdba1ab6c87810985c", "patch": "@@ -9136,10 +9136,14 @@ cp_build_modify_expr (location_t loc, tree lhs, enum tree_code modifycode,\n \n \t  /* An expression of the form E1 op= E2.  [expr.ass] says:\n \t     \"Such expressions are deprecated if E1 has volatile-qualified\n-\t     type.\"  We warn here rather than in cp_genericize_r because\n+\t     type and op is not one of the bitwise operators |, &, ^.\"\n+\t     We warn here rather than in cp_genericize_r because\n \t     for compound assignments we are supposed to warn even if the\n \t     assignment is a discarded-value expression.  */\n-\t  if (TREE_THIS_VOLATILE (lhs) || CP_TYPE_VOLATILE_P (lhstype))\n+\t  if (modifycode != BIT_AND_EXPR\n+\t      && modifycode != BIT_IOR_EXPR\n+\t      && modifycode != BIT_XOR_EXPR\n+\t      && (TREE_THIS_VOLATILE (lhs) || CP_TYPE_VOLATILE_P (lhstype)))\n \t    warning_at (loc, OPT_Wvolatile,\n \t\t\t\"compound assignment with %<volatile%>-qualified left \"\n \t\t\t\"operand is deprecated\");"}, {"sha": "a0264a47bc711f60649c5536fc428425cd81cfad", "filename": "gcc/testsuite/g++.dg/cpp2a/volatile1.C", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile1.C?ref=6e790ca4615443fa395ac5cdba1ab6c87810985c", "patch": "@@ -56,6 +56,9 @@ fn2 ()\n   vi = i;\n   vi = i = 42;\n   i = vi = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  i = vi |= 42; // { dg-warning \"using value of assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  i = vi &= 42; // { dg-warning \"using value of assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  i = vi ^= 42; // { dg-warning \"using value of assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n   &(vi = i); // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n   (vi = 42, 45);\n   (i = vi = 42, 10); // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n@@ -74,8 +77,9 @@ fn2 ()\n   vi += i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n   vi -= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n   vi %= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n-  vi ^= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n-  vi |= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  vi ^= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi |= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi &= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi /= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n   vi = vi += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n   vi += vi = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n@@ -131,7 +135,8 @@ void raccoon ()\n   volatile T t, u;\n   t = 42;\n   u = t = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n-  t &= 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  t += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" \"\" { target c++20 } }\n+  t &= 42; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n }\n \n void"}, {"sha": "58816dc3084d4ccd670ae59bb03ba99e8fc5d9b7", "filename": "gcc/testsuite/g++.dg/cpp2a/volatile3.C", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile3.C?ref=6e790ca4615443fa395ac5cdba1ab6c87810985c", "patch": "@@ -57,6 +57,9 @@ fn2 ()\n   vi = i;\n   vi = i = 42;\n   i = vi = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  i = vi |= 42; // { dg-warning \"using value of assignment with .volatile.-qualified left operand is deprecated\" }\n+  i = vi &= 42; // { dg-warning \"using value of assignment with .volatile.-qualified left operand is deprecated\" }\n+  i = vi ^= 42; // { dg-warning \"using value of assignment with .volatile.-qualified left operand is deprecated\" }\n   &(vi = i); // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n   (vi = 42, 45);\n   (i = vi = 42, 10); // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n@@ -75,8 +78,9 @@ fn2 ()\n   vi += i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi -= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi %= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  vi ^= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  vi |= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi ^= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi |= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  vi &= i; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi /= i; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi = vi += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n   vi += vi = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n@@ -132,7 +136,8 @@ void raccoon ()\n   volatile T t, u;\n   t = 42;\n   u = t = 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n-  t &= 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  t += 42; // { dg-warning \"assignment with .volatile.-qualified left operand is deprecated\" }\n+  t &= 42; // { dg-bogus \"assignment with .volatile.-qualified left operand is deprecated\" }\n }\n \n void"}, {"sha": "3684be9837ea08a4523c64052bbbb2966c032bb1", "filename": "gcc/testsuite/g++.dg/cpp2a/volatile5.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e790ca4615443fa395ac5cdba1ab6c87810985c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fvolatile5.C?ref=6e790ca4615443fa395ac5cdba1ab6c87810985c", "patch": "@@ -8,8 +8,8 @@ f (bool b)\n {\n   (b ? x : y) = 1;\n   (b ? x : y) += 1; // { dg-warning \"compound assignment\" \"\" { target c++20 } }\n-  z = (b ? x : y) = 1; // { dg-warning \"using value of simple assignment\" \"\" { target c++20 } }\n-  ((z = 2) ? x : y) = 1; // { dg-warning \"using value of simple assignment\" \"\" { target c++20 } }\n-  (b ? (x = 2) : y) = 1; // { dg-warning \"using value of simple assignment\" \"\" { target c++20 } }\n-  (b ? x : (y = 5)) = 1; // { dg-warning \"using value of simple assignment\" \"\" { target c++20 } }\n+  z = (b ? x : y) = 1; // { dg-warning \"using value of assignment\" \"\" { target c++20 } }\n+  ((z = 2) ? x : y) = 1; // { dg-warning \"using value of assignment\" \"\" { target c++20 } }\n+  (b ? (x = 2) : y) = 1; // { dg-warning \"using value of assignment\" \"\" { target c++20 } }\n+  (b ? x : (y = 5)) = 1; // { dg-warning \"using value of assignment\" \"\" { target c++20 } }\n }"}]}