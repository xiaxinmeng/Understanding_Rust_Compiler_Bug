{"sha": "0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ0ODQ0NmZmMzBkNmUwMTc4ZjNkNDBiZjFkMjBlYThjYTE5YmQ0Yw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-07-26T20:48:20Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-07-26T20:48:20Z"}, "message": "pr71675.c: Replace the unsupported c11 target selector with dg-options.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/atomic/pr71675.c: Replace the unsupported c11 target\n\tselector with dg-options.\n\nFrom-SVN: r238766", "tree": {"sha": "8179da71d7730eb5df026ca96604b7a66277ba75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8179da71d7730eb5df026ca96604b7a66277ba75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e63c3aab1e0b93dfe563da7edf9b9b5d2289665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e63c3aab1e0b93dfe563da7edf9b9b5d2289665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e63c3aab1e0b93dfe563da7edf9b9b5d2289665"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "23a30625ccf2e028fa3ba0ebb1372494be0939f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c", "patch": "@@ -1,3 +1,8 @@\n+2016-07-26  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gcc.dg/atomic/pr71675.c: Replace the unsupported c11 target\n+\tselector with dg-options.\n+\n 2016-07-26  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR tree-optimization/18046"}, {"sha": "8952bb26b5b2dee9b14baf0dc34abe6a96b0a184", "filename": "gcc/testsuite/gcc.dg/atomic/pr71675.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fpr71675.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fpr71675.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fpr71675.c?ref=0d48446ff30d6e0178f3d40bf1d20ea8ca19bd4c", "patch": "@@ -1,6 +1,8 @@\n-/* PR c++/71675 - __atomic_compare_exchange_n returns wrong type for typed enum\n- */\n-/* { dg-do compile { target c11 } } */\n+/* PR c++/71675 - __atomic_compare_exchange_n returns wrong type for typed\n+   enum  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c11\" } */\n+\n \n #define Test(T)\t\t\t\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\"}]}