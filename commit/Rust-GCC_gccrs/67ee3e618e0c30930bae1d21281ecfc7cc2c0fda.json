{"sha": "67ee3e618e0c30930bae1d21281ecfc7cc2c0fda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlZTNlNjE4ZTBjMzA5MzBiYWUxZDIxMjgxZWNmYzdjYzJjMGZkYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-01-20T13:39:10Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-01-20T13:39:10Z"}, "message": "re PR c++/59937 ([constexpr] bogus diagnostic \"used in its own initializer\")\n\n2015-01-20  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59937\n\t* g++.dg/cpp0x/constexpr-59937-1.C: New.\n\t* g++.dg/cpp0x/constexpr-59937-2.C: Likewise.\n\nFrom-SVN: r219894", "tree": {"sha": "392d0ce0271f122d445c13a76a5cbd8052cdab3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/392d0ce0271f122d445c13a76a5cbd8052cdab3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda/comments", "author": null, "committer": null, "parents": [{"sha": "237c70c35210df194355513b3e4edf384e2e46c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/237c70c35210df194355513b3e4edf384e2e46c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/237c70c35210df194355513b3e4edf384e2e46c3"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "4d45666b0e0d5664cad7f42cfcc3c57f6ed781ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67ee3e618e0c30930bae1d21281ecfc7cc2c0fda", "patch": "@@ -1,3 +1,9 @@\n+2015-01-20  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/59937\n+\t* g++.dg/cpp0x/constexpr-59937-1.C: New.\n+\t* g++.dg/cpp0x/constexpr-59937-2.C: Likewise.\n+\n 2015-01-20  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/64684"}, {"sha": "d9fbd33c94f9e9d17cc33d27dfb723cea920cbfc", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-59937-1.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-59937-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-59937-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-59937-1.C?ref=67ee3e618e0c30930bae1d21281ecfc7cc2c0fda", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/59937\n+// { dg-do compile { target c++11 } }\n+\n+constexpr const char * const &r = \"\";\n+constexpr const char * const &s = r;"}, {"sha": "e67d9467a46eeb3e1720eb8bbaf7e94c73fa5bc3", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-59937-2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-59937-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67ee3e618e0c30930bae1d21281ecfc7cc2c0fda/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-59937-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-59937-2.C?ref=67ee3e618e0c30930bae1d21281ecfc7cc2c0fda", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/59937\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T> constexpr bool truth(const T&) { return true; }\n+\n+template<typename T>\n+void test()\n+{\n+  int i[1];\n+  constexpr bool untrue = !truth(i);\n+  static_assert(!untrue, \"\");\n+}"}]}