{"sha": "c0742514bdd2e2e51b3bfcf267719bf5f9a146f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA3NDI1MTRiZGQyZTJlNTFiM2JmY2YyNjc3MTliZjVmOWExNDZmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-12-05T09:33:42Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-12-05T09:33:42Z"}, "message": "200x-xx-xx Jakub Jelinek <jakub@redhat.com> Richard Sandiford <rsandifo@nildram.co.uk>\n\ngcc/\n200x-xx-xx  Jakub Jelinek  <jakub@redhat.com>\n\t    Richard Sandiford  <rsandifo@nildram.co.uk>\n\n\t* optabs.c (clear_insn_codes): New function.\n\t(new_optab): Delete.\n\t(init_optab, init_optabv): Don't call new_optab.\n\t(init_convert_optab): Don't clear the insn codes.\n\t(init_optabs): Call clear_insn_codes.\n\nCo-Authored-By: Richard Sandiford <rsandifo@nildram.co.uk>\n\nFrom-SVN: r130618", "tree": {"sha": "51f0538a1209bbff57d683aabda738a0e2d4a193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51f0538a1209bbff57d683aabda738a0e2d4a193"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0742514bdd2e2e51b3bfcf267719bf5f9a146f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0742514bdd2e2e51b3bfcf267719bf5f9a146f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0742514bdd2e2e51b3bfcf267719bf5f9a146f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0742514bdd2e2e51b3bfcf267719bf5f9a146f0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07c7262ec307bd36b24943cc6014d0c0f060089e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c7262ec307bd36b24943cc6014d0c0f060089e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07c7262ec307bd36b24943cc6014d0c0f060089e"}], "stats": {"total": 71, "additions": 45, "deletions": 26}, "files": [{"sha": "1ec0e79c9f1b978d2ac25d55c7f0973a026c5b6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0742514bdd2e2e51b3bfcf267719bf5f9a146f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0742514bdd2e2e51b3bfcf267719bf5f9a146f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0742514bdd2e2e51b3bfcf267719bf5f9a146f0", "patch": "@@ -1,3 +1,12 @@\n+2007-12-05  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* optabs.c (clear_insn_codes): New function.\n+\t(new_optab): Delete.\n+\t(init_optab, init_optabv): Don't call new_optab.\n+\t(init_convert_optab): Don't clear the insn codes.\n+\t(init_optabs): Call clear_insn_codes.\n+\n 2007-12-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* omp-low.c (optimize_omp_library_calls): New function."}, {"sha": "089fcccc993ed9569a4a742654acbeeaaf0fe751", "filename": "gcc/optabs.c", "status": "modified", "additions": 36, "deletions": 26, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0742514bdd2e2e51b3bfcf267719bf5f9a146f0/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0742514bdd2e2e51b3bfcf267719bf5f9a146f0/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c0742514bdd2e2e51b3bfcf267719bf5f9a146f0", "patch": "@@ -59,7 +59,7 @@ __extension__ struct optab optab_table[OTI_MAX]\n   = { [0 ... OTI_MAX - 1].handlers[0 ... NUM_MACHINE_MODES - 1].insn_code\n       = CODE_FOR_nothing };\n #else\n-/* new_optab will do runtime initialization otherwise.  */\n+/* init_insn_codes will do runtime initialization otherwise.  */\n struct optab optab_table[OTI_MAX];\n #endif\n \n@@ -5564,31 +5564,38 @@ have_insn_for (enum rtx_code code, enum machine_mode mode)\n \t      != CODE_FOR_nothing));\n }\n \n-/* Create a blank optab.  */\n-#if GCC_VERSION >= 4000\n-static inline void\n-new_optab (optab op ATTRIBUTE_UNUSED)\n-{\n-  /* All insn_code fields are already initialized using\n-     designated initializers.  */\n-}\n-#else\n+/* Set all insn_code fields to CODE_FOR_nothing.  */\n+\n static void\n-new_optab (optab op)\n+init_insn_codes (void)\n {\n-  int i;\n+  unsigned int i;\n \n-  for (i = 0; i < NUM_MACHINE_MODES; i++)\n-    optab_handler (op, i)->insn_code = CODE_FOR_nothing;\n+  for (i = 0; i < (unsigned int) OTI_MAX; i++)\n+    {\n+      unsigned int j;\n+      optab op;\n+\n+      op = &optab_table[i];\n+      for (j = 0; j < NUM_MACHINE_MODES; j++)\n+\toptab_handler (op, j)->insn_code = CODE_FOR_nothing;\n+    }\n+  for (i = 0; i < (unsigned int) COI_MAX; i++)\n+    {\n+      unsigned int j, k;\n+      convert_optab op;\n+\n+      op = &convert_optab_table[i];\n+      for (j = 0; j < NUM_MACHINE_MODES; j++)\n+\tfor (k = 0; k < NUM_MACHINE_MODES; k++)\n+\t  convert_optab_handler (op, j, k)->insn_code = CODE_FOR_nothing;\n+    }\n }\n-#endif\n \n-/* Same, but fill in its code as CODE, and write it into the\n-   code_to_optab table.  */\n+/* Initialize OP's code to CODE, and write it into the code_to_optab table.  */\n static inline void\n init_optab (optab op, enum rtx_code code)\n {\n-  new_optab (op);\n   op->code = code;\n   code_to_optab[(int) code] = op;\n }\n@@ -5598,21 +5605,13 @@ init_optab (optab op, enum rtx_code code)\n static inline void\n init_optabv (optab op, enum rtx_code code)\n {\n-  new_optab (op);\n   op->code = code;\n }\n \n /* Conversion optabs never go in the code_to_optab table.  */\n static void\n init_convert_optab (convert_optab op, enum rtx_code code)\n {\n-#if !(GCC_VERSION >= 4000)\n-  int i, j;\n-\n-  for (i = 0; i < NUM_MACHINE_MODES; i++)\n-    for (j = 0; j < NUM_MACHINE_MODES; j++)\n-      convert_optab_handler (op, i, j)->insn_code = CODE_FOR_nothing;\n-#endif\n   op->code = code;\n }\n \n@@ -6241,6 +6240,7 @@ init_optabs (void)\n {\n   unsigned int i;\n   enum machine_mode int_mode;\n+  static bool reinit;\n \n   libfunc_hash = htab_create_ggc (10, hash_libfunc, eq_libfunc, NULL);\n   /* Start by initializing all tables to contain CODE_FOR_nothing.  */\n@@ -6259,6 +6259,14 @@ init_optabs (void)\n       vcondu_gen_code[i] = CODE_FOR_nothing;\n     }\n \n+#if GCC_VERSION >= 4000\n+  /* We statically initialize the insn_codes with CODE_FOR_nothing.  */\n+  if (reinit)\n+    init_insn_codes ();\n+#else\n+  init_insn_codes ();\n+#endif\n+\n   init_optab (add_optab, PLUS);\n   init_optabv (addv_optab, PLUS);\n   init_optab (sub_optab, MINUS);\n@@ -6736,6 +6744,8 @@ init_optabs (void)\n \n   /* Allow the target to add more libcalls or rename some, etc.  */\n   targetm.init_libfuncs ();\n+\n+  reinit = true;\n }\n \n /* Print information about the current contents of the optabs on"}]}