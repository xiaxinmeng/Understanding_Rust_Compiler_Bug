{"sha": "d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlkN2EyNmNmMWFkMTUzYzIxODVhOGQwZDAxZjExZWY2MGNlMzIxYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-04-02T09:08:37Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-04-02T09:08:37Z"}, "message": "lang.opt (feliminate-unused-debug-types): Delete.\n\n\t* gcc-interface/lang.opt (feliminate-unused-debug-types): Delete.\n\t* gcc-interface/misc.c (gnat_handle_option): Remove special handling\n\tcode for -feliminate-unused-debug-types\n\t(gnat_post_options): Likewise.\n\nFrom-SVN: r171886", "tree": {"sha": "54e1b3e42c64d67498a9d7783808baf875a4be83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54e1b3e42c64d67498a9d7783808baf875a4be83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b/comments", "author": null, "committer": null, "parents": [{"sha": "4cb12a90e73ccb9ce365e8462ea68e6163493746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb12a90e73ccb9ce365e8462ea68e6163493746", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cb12a90e73ccb9ce365e8462ea68e6163493746"}], "stats": {"total": 34, "additions": 9, "deletions": 25}, "files": [{"sha": "ced5b7a6b9c61e9711089086ced36af8f1fe5493", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b", "patch": "@@ -1,3 +1,10 @@\n+2011-04-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/lang.opt (feliminate-unused-debug-types): Delete.\n+\t* gcc-interface/misc.c (gnat_handle_option): Remove special handling\n+\tcode for -feliminate-unused-debug-types\n+\t(gnat_post_options): Likewise.\n+\n 2011-04-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (gnat_pushdecl): If this is a non-artificial"}, {"sha": "9f1a69f982022e853f067f729e5d7bf63b054e08", "filename": "gcc/ada/gcc-interface/lang.opt", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b/gcc%2Fada%2Fgcc-interface%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b/gcc%2Fada%2Fgcc-interface%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang.opt?ref=d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b", "patch": "@@ -1,5 +1,5 @@\n ; Options for the Ada front end.\n-; Copyright (C) 2003, 2007, 2008, 2010 Free Software Foundation, Inc.\n+; Copyright (C) 2003, 2007, 2008, 2010, 2011 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -94,12 +94,6 @@ nostdlib\n Ada\n ; Don't look for object files\n \n-feliminate-unused-debug-types\n-Ada\n-; Effect documented for C - intercepted for Ada to force the associated flag\n-; not to be set by default, as it currently eliminates unreferenced parallel\n-; types we need for encoding descriptions to the debugger.\n-\n fRTS=\n Ada Joined RejectNegative\n ; Selects the runtime"}, {"sha": "c35a22ae9bc7a9396786dc0ad59d463699fb2f2b", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=d9d7a26cf1ad153c2185a8d0d01f11ef60ce321b", "patch": "@@ -125,14 +125,6 @@ gnat_handle_option (size_t scode, const char *arg ATTRIBUTE_UNUSED, int value,\n       /* These are used in the GCC Makefile.  */\n       break;\n \n-    case OPT_feliminate_unused_debug_types:\n-      /* We arrange for post_option to be able to only set the corresponding\n-\t flag to 1 when explicitly requested by the user.  We expect the\n-\t default flag value to be either 0 or positive, and expose a positive\n-\t -f as a negative value to post_option.  */\n-      flag_eliminate_unused_debug_types = -value;\n-      break;\n-\n     case OPT_gant:\n       warning (0, \"%<-gnat%> misspelled as %<-gant%>\");\n \n@@ -232,8 +224,7 @@ enum stack_check_type flag_stack_check = NO_STACK_CHECK;\n static bool\n gnat_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n {\n-  /* Excess precision other than \"fast\" requires front-end\n-     support.  */\n+  /* Excess precision other than \"fast\" requires front-end support.  */\n   if (flag_excess_precision_cmdline == EXCESS_PRECISION_STANDARD\n       && TARGET_FLT_EVAL_METHOD_NON_DEFAULT)\n     sorry (\"-fexcess-precision=standard for Ada\");\n@@ -245,14 +236,6 @@ gnat_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n   /* No psABI change warnings for Ada.  */\n   warn_psabi = 0;\n \n-  /* Force eliminate_unused_debug_types to 0 unless an explicit positive\n-     -f has been passed.  This forces the default to 0 for Ada, which might\n-     differ from the common default.  */\n-  if (flag_eliminate_unused_debug_types < 0)\n-    flag_eliminate_unused_debug_types = 1;\n-  else\n-    flag_eliminate_unused_debug_types = 0;\n-\n   optimize = global_options.x_optimize;\n   optimize_size = global_options.x_optimize_size;\n   flag_compare_debug = global_options.x_flag_compare_debug;"}]}