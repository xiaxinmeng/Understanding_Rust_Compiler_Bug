{"sha": "260ba9ce680ed9ee88d427523e403f4667e6023e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYwYmE5Y2U2ODBlZDllZTg4ZDQyNzUyM2U0MDNmNDY2N2U2MDIzZQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-08-18T17:57:03Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-08-18T17:57:03Z"}, "message": "class.c (make_local_function_alias): New function.\n\n2004-08-18  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* class.c (make_local_function_alias): New function. Create local\n\talias for public method DECL.\n\t(make_method_value): Use make_local_function_alias.\n\t* parse.y (craft_constructor): Don't special-case anonymous classes.\n\tAlways set ctor_name to init_identifier_node.\n\t(lookup_method_invoke): Call layout_class_method when creating\n\tanonymous class constructor.\n\nFrom-SVN: r86196", "tree": {"sha": "0bf7d0c572a4f666bdfd34856e04e1f858b83cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bf7d0c572a4f666bdfd34856e04e1f858b83cf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/260ba9ce680ed9ee88d427523e403f4667e6023e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260ba9ce680ed9ee88d427523e403f4667e6023e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260ba9ce680ed9ee88d427523e403f4667e6023e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260ba9ce680ed9ee88d427523e403f4667e6023e/comments", "author": null, "committer": null, "parents": [{"sha": "62164eb49e501141f015c71410f625b2bf133570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62164eb49e501141f015c71410f625b2bf133570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62164eb49e501141f015c71410f625b2bf133570"}], "stats": {"total": 71, "additions": 58, "deletions": 13}, "files": [{"sha": "5fb1dedec409f7136d500f527d64a991d4b8fe70", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260ba9ce680ed9ee88d427523e403f4667e6023e/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260ba9ce680ed9ee88d427523e403f4667e6023e/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=260ba9ce680ed9ee88d427523e403f4667e6023e", "patch": "@@ -1,3 +1,13 @@\n+2004-08-18  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* class.c (make_local_function_alias): New function. Create local\n+\talias for public method DECL.\n+\t(make_method_value): Use make_local_function_alias.\n+\t* parse.y (craft_constructor): Don't special-case anonymous classes.\n+\tAlways set ctor_name to init_identifier_node.\n+\t(lookup_method_invoke): Call layout_class_method when creating\n+\tanonymous class constructor.\n+\n 2004-08-18  Richard Henderson  <rth@redhat.com>\n \n \t* java-gimplify.c (java_gimplify_expr): Move '2' handling into"}, {"sha": "25f27043827c26581e472516f899b016a2010caf", "filename": "gcc/java/class.c", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260ba9ce680ed9ee88d427523e403f4667e6023e/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260ba9ce680ed9ee88d427523e403f4667e6023e/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=260ba9ce680ed9ee88d427523e403f4667e6023e", "patch": "@@ -1198,6 +1198,46 @@ get_access_flags_from_decl (tree decl)\n   abort ();\n }\n \n+static GTY (()) int alias_labelno = 0;\n+\n+/* Create a private alias for METHOD. Using this alias instead of the method\n+decl ensures that ncode entries in the method table point to the real function \n+at runtime, not a PLT entry.  */\n+\n+static tree\n+make_local_function_alias (tree method)\n+{\n+  tree alias;\n+  const char *method_name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (method));\n+  char *name = alloca (strlen (method_name) + 1);\n+  char *buf = alloca (strlen (method_name) + 128);\n+  \n+  /* Prefix method_name with 'L' for the alias label.  */\n+  *name = 'L';\n+  strcpy (name + 1, method_name);\n+\n+  ASM_GENERATE_INTERNAL_LABEL (buf, name, alias_labelno++);  \n+  alias = build_decl (FUNCTION_DECL, get_identifier (buf),\n+\t\t      TREE_TYPE (method));\n+  DECL_CONTEXT (alias) = NULL;\n+  TREE_READONLY (alias) = TREE_READONLY (method);\n+  TREE_THIS_VOLATILE (alias) = TREE_THIS_VOLATILE (method);\n+  TREE_PUBLIC (alias) = 0;\n+  DECL_EXTERNAL (alias) = 0;\n+  DECL_ARTIFICIAL (alias) = 1;\n+  DECL_INLINE (alias) = 0;\n+  DECL_INITIAL (alias) = error_mark_node;\n+  TREE_ADDRESSABLE (alias) = 1;\n+  TREE_USED (alias) = 1;\n+  SET_DECL_ASSEMBLER_NAME (alias, DECL_NAME (alias));\n+  TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (alias)) = 1;\n+  if (!flag_syntax_only)\n+    assemble_alias (alias, DECL_ASSEMBLER_NAME (method));\n+  return alias;\n+}\n+\n+/** Make reflection data (_Jv_Field) for field FDECL. */\n+\n static tree\n make_field_value (tree fdecl)\n {\n@@ -1242,6 +1282,8 @@ make_field_value (tree fdecl)\n   return finit;\n }\n \n+/** Make reflection data (_Jv_Method) for method MDECL. */\n+\n static tree\n make_method_value (tree mdecl)\n {\n@@ -1265,7 +1307,8 @@ make_method_value (tree mdecl)\n \n   code = null_pointer_node;\n   if (DECL_RTL_SET_P (mdecl))\n-    code = build1 (ADDR_EXPR, nativecode_ptr_type_node, mdecl);\n+    code = build1 (ADDR_EXPR, nativecode_ptr_type_node, \n+\t\t   make_local_function_alias (mdecl));\n   START_RECORD_CONSTRUCTOR (minit, method_type_node);\n   PUSH_FIELD_VALUE (minit, \"name\",\n \t\t    build_utf8_ref (DECL_CONSTRUCTOR_P (mdecl) ?"}, {"sha": "85be4b71bf4597351b8b56b9c340025afbd1bbcc", "filename": "gcc/java/parse.y", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260ba9ce680ed9ee88d427523e403f4667e6023e/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260ba9ce680ed9ee88d427523e403f4667e6023e/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=260ba9ce680ed9ee88d427523e403f4667e6023e", "patch": "@@ -5422,13 +5422,7 @@ craft_constructor (tree class_decl, tree args)\n   tree decl, ctor_name;\n   char buffer [80];\n \n-  /* The constructor name is <init> unless we're dealing with an\n-     anonymous class, in which case the name will be fixed after having\n-     be expanded. */\n-  if (ANONYMOUS_CLASS_P (class_type))\n-    ctor_name = DECL_NAME (class_decl);\n-  else\n-    ctor_name = init_identifier_node;\n+  ctor_name = init_identifier_node;\n \n   /* If we're dealing with an inner class constructor, we hide the\n      this$<n> decl in the name field of its parameter declaration. */\n@@ -10930,12 +10924,10 @@ lookup_method_invoke (int lc, tree cl, tree class, tree name, tree arg_list)\n \n   if (lc && ANONYMOUS_CLASS_P (class))\n     {\n-      tree saved_current_class;\n       tree mdecl = craft_constructor (TYPE_NAME (class), atl);\n-      saved_current_class = current_class;\n-      current_class = class;\n-      fix_constructors (mdecl);\n-      current_class = saved_current_class;\n+      /* The anonymous class may have already been laid out, so make sure\n+         the new constructor is laid out here.  */\n+      layout_class_method (class, CLASSTYPE_SUPER (class), mdecl, NULL_TREE);\n     }\n \n   /* Find all candidates and then refine the list, searching for the"}]}