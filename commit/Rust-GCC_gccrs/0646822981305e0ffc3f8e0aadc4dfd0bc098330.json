{"sha": "0646822981305e0ffc3f8e0aadc4dfd0bc098330", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY0NjgyMjk4MTMwNWUwZmZjM2Y4ZTBhYWRjNGRmZDBiYzA5ODMzMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-01-09T14:06:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-01-09T14:06:31Z"}, "message": "re PR tree-optimization/51775 (FAIL: gnat.dg/pack9.adb scan-tree-dump-not optimized \"gnat_rcheck\")\n\n2012-01-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/51775\n\t* tree-ssa-sccvn.c (visit_use): Value-number throwing stmts.\n\t* tree-ssa-pre.c (eliminate): Properly fixup EH info.\n\nFrom-SVN: r183012", "tree": {"sha": "08b0129c03278f0e05ec4fa8bd1ed08aa3472e1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08b0129c03278f0e05ec4fa8bd1ed08aa3472e1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0646822981305e0ffc3f8e0aadc4dfd0bc098330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0646822981305e0ffc3f8e0aadc4dfd0bc098330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0646822981305e0ffc3f8e0aadc4dfd0bc098330", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0646822981305e0ffc3f8e0aadc4dfd0bc098330/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12aa62e921a3a26ab78b3be5ff10269c3e856288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12aa62e921a3a26ab78b3be5ff10269c3e856288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12aa62e921a3a26ab78b3be5ff10269c3e856288"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "1df29212233976490a2c8c6652c462400ec44270", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0646822981305e0ffc3f8e0aadc4dfd0bc098330/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0646822981305e0ffc3f8e0aadc4dfd0bc098330/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0646822981305e0ffc3f8e0aadc4dfd0bc098330", "patch": "@@ -1,3 +1,9 @@\n+2012-01-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/51775\n+\t* tree-ssa-sccvn.c (visit_use): Value-number throwing stmts.\n+\t* tree-ssa-pre.c (eliminate): Properly fixup EH info.\n+\n 2012-01-09  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n \n \t* config/arm/arm-cores.def (cortex-a15): Use cortex_a15_tune for"}, {"sha": "c5d253c941ae69ce3d4b3000726e8339c7adc8ae", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0646822981305e0ffc3f8e0aadc4dfd0bc098330/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0646822981305e0ffc3f8e0aadc4dfd0bc098330/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=0646822981305e0ffc3f8e0aadc4dfd0bc098330", "patch": "@@ -4194,6 +4194,7 @@ eliminate (void)\n \t      tree sprime = NULL;\n \t      pre_expr lhsexpr = get_or_alloc_expr_for_name (lhs);\n \t      pre_expr sprimeexpr;\n+\t      gimple orig_stmt = stmt;\n \n \t      sprimeexpr = bitmap_find_leader (AVAIL_OUT (b),\n \t\t\t\t\t       get_expr_value_id (lhsexpr),\n@@ -4231,6 +4232,16 @@ eliminate (void)\n \t\t  propagate_tree_value_into_stmt (&gsi, sprime);\n \t\t  stmt = gsi_stmt (gsi);\n \t\t  update_stmt (stmt);\n+\n+\t\t  /* If we removed EH side-effects from the statement, clean\n+\t\t     its EH information.  */\n+\t\t  if (maybe_clean_or_replace_eh_stmt (orig_stmt, stmt))\n+\t\t    {\n+\t\t      bitmap_set_bit (need_eh_cleanup,\n+\t\t\t\t      gimple_bb (stmt)->index);\n+\t\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t\tfprintf (dump_file, \"  Removed EH side-effects.\\n\");\n+\t\t    }\n \t\t  continue;\n \t\t}\n \n@@ -4286,7 +4297,7 @@ eliminate (void)\n \n \t\t  /* If we removed EH side-effects from the statement, clean\n \t\t     its EH information.  */\n-\t\t  if (maybe_clean_or_replace_eh_stmt (stmt, stmt))\n+\t\t  if (maybe_clean_or_replace_eh_stmt (orig_stmt, stmt))\n \t\t    {\n \t\t      bitmap_set_bit (need_eh_cleanup,\n \t\t\t\t      gimple_bb (stmt)->index);"}, {"sha": "ca11ca1cdfcf3246e76b6acb8a339fb4a18d021e", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0646822981305e0ffc3f8e0aadc4dfd0bc098330/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0646822981305e0ffc3f8e0aadc4dfd0bc098330/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=0646822981305e0ffc3f8e0aadc4dfd0bc098330", "patch": "@@ -3178,8 +3178,7 @@ visit_use (tree use)\n       if (gimple_code (stmt) == GIMPLE_PHI)\n \tchanged = visit_phi (stmt);\n       else if (!gimple_has_lhs (stmt)\n-\t       || gimple_has_volatile_ops (stmt)\n-\t       || stmt_could_throw_p (stmt))\n+\t       || gimple_has_volatile_ops (stmt))\n \tchanged = defs_to_varying (stmt);\n       else if (is_gimple_assign (stmt))\n \t{"}]}