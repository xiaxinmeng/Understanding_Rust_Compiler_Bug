{"sha": "d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmOTliMmNjNWRjNmZlMzI2OWZiM2JjNWI4NzJjOWNjOWNkYmJkMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-09-14T21:17:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-09-14T21:17:14Z"}, "message": "s390.md: Use match_test rather than eq/ne symbol_ref throughout file.\n\ngcc/\n\t* config/s390/s390.md: Use match_test rather than eq/ne symbol_ref\n\tthroughout file.\n\nFrom-SVN: r178867", "tree": {"sha": "b0e1a6183a66b3d6520c2981e3abab2466eec35e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0e1a6183a66b3d6520c2981e3abab2466eec35e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26b996c6aec1b3e8521ed28721de1655f0fd40ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26b996c6aec1b3e8521ed28721de1655f0fd40ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26b996c6aec1b3e8521ed28721de1655f0fd40ff"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "e22908ab39c288d7d53a34f1d326fb674caed5ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3", "patch": "@@ -1,3 +1,8 @@\n+2011-09-14  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/s390/s390.md: Use match_test rather than eq/ne symbol_ref\n+\tthroughout file.\n+\n 2011-09-14  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/rs6000/rs6000.md: Use match_test rather than eq/ne symbol_ref"}, {"sha": "018f6b4921410a60eea95e355a3063783ac96315", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=d7f99b2cc5dc6fe3269fb3bc5b872c9cc9cdbbd3", "patch": "@@ -283,31 +283,31 @@\n \t (const_int 1)\n \n          (and (eq_attr \"cpu_facility\" \"ieee\")\n-\t      (ne (symbol_ref \"TARGET_CPU_IEEE_FLOAT\") (const_int 0)))\n+\t      (match_test \"TARGET_CPU_IEEE_FLOAT\"))\n \t (const_int 1)\n \n \t (and (eq_attr \"cpu_facility\" \"zarch\")\n-\t      (ne (symbol_ref \"TARGET_ZARCH\") (const_int 0)))\n+\t      (match_test \"TARGET_ZARCH\"))\n \t (const_int 1)\n \n \t (and (eq_attr \"cpu_facility\" \"longdisp\")\n-\t      (ne (symbol_ref \"TARGET_LONG_DISPLACEMENT\") (const_int 0)))\n+\t      (match_test \"TARGET_LONG_DISPLACEMENT\"))\n \t (const_int 1)\n \n          (and (eq_attr \"cpu_facility\" \"extimm\")\n-\t      (ne (symbol_ref \"TARGET_EXTIMM\") (const_int 0)))\n+\t      (match_test \"TARGET_EXTIMM\"))\n \t (const_int 1)\n \n          (and (eq_attr \"cpu_facility\" \"dfp\")\n-\t      (ne (symbol_ref \"TARGET_DFP\") (const_int 0)))\n+\t      (match_test \"TARGET_DFP\"))\n \t (const_int 1)\n \n          (and (eq_attr \"cpu_facility\" \"z10\")\n-              (ne (symbol_ref \"TARGET_Z10\") (const_int 0)))\n+              (match_test \"TARGET_Z10\"))\n \t (const_int 1)\n \n          (and (eq_attr \"cpu_facility\" \"z196\")\n-              (ne (symbol_ref \"TARGET_Z196\") (const_int 0)))\n+              (match_test \"TARGET_Z196\"))\n \t (const_int 1)]\n \t(const_int 0)))\n \n@@ -7726,7 +7726,7 @@\n   [(set_attr \"op_type\" \"RI\")\n    (set_attr \"type\"    \"branch\")\n    (set (attr \"length\")\n-        (if_then_else (eq (symbol_ref \"flag_pic\") (const_int 0))\n+        (if_then_else (not (match_test \"flag_pic\"))\n           (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                         (const_int 4) (const_int 6))\n           (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n@@ -7789,7 +7789,7 @@\n   [(set_attr \"op_type\" \"RI\")\n    (set_attr \"type\"    \"branch\")\n    (set (attr \"length\")\n-        (if_then_else (eq (symbol_ref \"flag_pic\") (const_int 0))\n+        (if_then_else (not (match_test \"flag_pic\"))\n           (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                         (const_int 4) (const_int 6))\n           (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n@@ -8170,7 +8170,7 @@\n    (set_attr \"z10prop\"  \"z10_super_E1\")\n    (set_attr \"type\"  \"branch\")\n    (set (attr \"length\")\n-        (if_then_else (eq (symbol_ref \"flag_pic\") (const_int 0))\n+        (if_then_else (not (match_test \"flag_pic\"))\n           (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                         (const_int 4) (const_int 6))\n           (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n@@ -8282,7 +8282,7 @@\n   [(set_attr \"op_type\" \"RI\")\n    (set_attr \"type\"  \"branch\")\n    (set (attr \"length\")\n-        (if_then_else (eq (symbol_ref \"flag_pic\") (const_int 0))\n+        (if_then_else (not (match_test \"flag_pic\"))\n           (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                         (const_int 4) (const_int 6))\n           (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n@@ -9102,7 +9102,7 @@\n   gcc_unreachable ();\n }\n   [(set (attr \"type\")\n-        (if_then_else (ne (symbol_ref \"TARGET_CPU_ZARCH\") (const_int 0))\n+        (if_then_else (match_test \"TARGET_CPU_ZARCH\")\n                       (const_string \"larl\") (const_string \"la\")))])\n \n (define_insn \"reload_base_31\""}]}