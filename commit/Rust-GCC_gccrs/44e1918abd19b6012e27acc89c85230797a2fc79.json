{"sha": "44e1918abd19b6012e27acc89c85230797a2fc79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRlMTkxOGFiZDE5YjYwMTJlMjdhY2M4OWM4NTIzMDc5N2EyZmM3OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:25:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:25:51Z"}, "message": "make.adb (Check_Mains, [...]): Adapt to name changes in package Prj (Current_Spec_Suffix => Ada_Spec_Suffix...\n\n\t* make.adb (Check_Mains, Switches_Of): Adapt to name changes in\n\tpackage Prj (Current_Spec_Suffix => Ada_Spec_Suffix,\n\tCurrent_Body_Suffix => Ada_Body_Suffix).\n\tTake into account Externally_Built attribute.\n\n\t* clean.adb (In_Extension_Chain): Always return False when one of the\n\tparameter is No_Project.\n\t(Clean_Project): Adapt to changes in package Prj (Lang_Ada =>\n\tAda_Language_Index).\n\t(Gnatclean): Adapt to change in package Prj.Pars (no parameter\n\tProcess_Languages for procedure Parse).\n\n\t* gnatcmd.adb (Carg_Switches): New table.\n\t(GNATCmd): Put all switches following -cargs in the Carg_Switches table.\n\tAdapt to name changes in package Prj (Current_Spec_Suffix =>\n\tAda_Spec_Suffix, Current_Body_Suffix => Ada_Body_Suffix).\n\n\t* mlib-prj.adb: Adapt to changes in packages Prj and Prj.Com: type\n\tHeader_Num and function Hash are now declared in package Prj,\n\tnot Prj.Com.\n\n\t* prj.adb (Suffix_Of): New function.\n\t(Set (Suffix)): New procedure.\n\t(Hash): One function moved from Prj.Com\n\t(Is_Present, Language_Processing_Data_Of): New functions\n\t(Set): Two new procedures\n\t(Add_Language_Name, Display_Language_Name): New procedures\n\n\t* prj.ads: (Suffix_Of): New function\n\t(Set (Suffix)): New procedure\n\tAdd several types and tables for multi-language support.\n\t(Header_Num): Type moved from Prj.Com\n\t(Hash): Two functions moved from Prj.Com\n\t(Is_Present, Language_Processing_Data_Of): New functions\n\t(Set): Two new procedures\n\t(Add_Language_Name, Display_Language_Name): New procedures\n\t(Naming): Component name changes:\n\tCurrent_Spec_Suffix => Ada_Spec_Suffix,\n\tCurrent_Body_Suffix => Ada_Body_Suffix. Add new components:\n\tImpl_Suffixes, Supp_Suffixes.\n\t(Project_Data): New components: Externally_Built, Supp_Languages,\n\tFirst_Language_Processing, Supp_Language_Processing, Default_Linker,\n\tDefault_Linker_Path.\n\n\t* prj-attr.adb: Add new attributes Ada_Roots and Externally_Built and\n\tnew package Language_Processing with its attributes (Compiler_Driver,\n\tCompiler_Kind, Dependency_Option, Compute_Dependency, Include_Option,\n\tBinder_Driver, Default_Linker).\n\n\t* prj-com.ads, prj-com.adb (Hash): Function moved to package Prj.\n\t(Header_Num): Type moved to package Prj\n\n\t* prj-env.adb: Adapt to name changes in package Prj\n\t(Current_Spec_Suffix => Ada_Spec_Suffix,\n\tCurrent_Body_Suffix => Ada_Body_Suffix).\n\n\t* prj-ext.adb: Add the default project dir (<prefix>/log/gnat) by\n\tdefault to the project path, except the \"-\" is one of the directories\n\tin env var ADA_PROJECT_PATH.\n\t(Current_Project_Path): Global variable, replacing Project_Path\n\tthat was in the body of Prj.Part.\n\t(Project_Path): New function\n\t(Set_Project_Path): New procedure\n\tInitialize Current_Project_Path during elaboration of the package\n\tRemove dependency on Prj.Com, no longer needed\n\n\t* prj-ext.ads (Project_Path): New function\n\t(Set_Project_Path): New procedure\n\n\t* prj-nmsc.adb (Body_Suffix_Of): New function. Returns .<lang> when no\n\tsuffix is defined for language <lang>.\n\t(Find_Sources, Record_Other_Sources): Use Body_Suffix_Of, instead of\n\taccessing directly the components of Naming.\n\t(Look_For_Sources): Use Set (Suffix) to set the suffix of a language.\n\tReorganise of this package.\n\tBreak procedure Check in several procedures.\n\n\t* prj-nmsc.ads: Replace all procedures (Ada_Check,\n\tOther_Languages_Check and Language_Independent_Check) with a single\n\tprocedure Check.\n\n\t* prj-pars.ads, prj-pars.adb (Parse): Remove parameter\n\tProcess_Languages, no longer needed.\n\n\t* prj-part.adb (Project_Path): Move to the body of Prj.Ext as\n\tCurrent_Project_Path.\n\tRemove elaboration code, moved to the body of Prj.Ext\n\tUse new function Prj.Ext.Project_Path instead of old variable\n\tProject_Path.\n\t(Post_Parse_Context_Clause): Get Resolved_Path as a case-sensitive path.\n\tWhen comparing with project paths on the stack, first put the resolved\n\tpath in canonical case.\n\t(Parse_Single_Project): Set the path name of the project file in the\n\ttree to the normalized path.\n\n\t* prj-proc.ads, prj-proc.adb (Check, Recursive_Check, Process): Remove\n\tparameter Process_Languages, no longer needed.\n\t(Recursive_Check): Call Prj.Nmsc.Check, instead of Ada_Check and\n\tOther_Languages_Check.\n\n\t* prj-tree.ads (Project_Name_And_Node): New component Canonical_Path\n\tto store the resolved canonical path of the project file.\n\tRemove dependency to Prj.Com, no longer needed\n\n\t* prj-util.adb: Adapt to name changes in package Prj\n\t(Current_Spec_Suffix => Ada_Spec_Suffix, Current_Body_Suffix =>\n\tAda_Body_Suffix).\n\n\t* snames.ads, snames.adb: New standard names: Ada_Roots, Binder_Driver,\n\tCompiler_Driver, Compiler_Kind, Compute_Dependency, Default_Linker,\n\tExternally_Built, Include_Option, Language_Processing.\n\n\t* makegpr.adb: Numerous changes due to changes in packages\n\tPrj and Prj.Nmsc.\n\n\t* gnatls.adb: Add the default project dir (<prefix>/log/gnat) by\n\tdefault to the project path, except whe \"-\" is one of the directories\n\tin env var ADA_PROJECT_PATH.\n\t(Gnatls): In verbose mode, add the new section \"Project Search Path:\"\n\nFrom-SVN: r91877", "tree": {"sha": "5f264e895f21f42a7c2b643a609e2b267faf6e7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f264e895f21f42a7c2b643a609e2b267faf6e7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44e1918abd19b6012e27acc89c85230797a2fc79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e1918abd19b6012e27acc89c85230797a2fc79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44e1918abd19b6012e27acc89c85230797a2fc79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e1918abd19b6012e27acc89c85230797a2fc79/comments", "author": null, "committer": null, "parents": [{"sha": "a7e5b6df8d190ca4d8bc15abf1da93088b57afc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e5b6df8d190ca4d8bc15abf1da93088b57afc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e5b6df8d190ca4d8bc15abf1da93088b57afc1"}], "stats": {"total": 7665, "additions": 4220, "deletions": 3445}, "files": [{"sha": "3af321115eac21e3dd9914b7a2ebb08d7696db99", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -30,7 +30,7 @@ with ALI;      use ALI;\n with Csets;\n with Gnatvsn;\n with Hostparm;\n-with Makeutl;  use Makeutl;\n+with Makeutl;\n with MLib.Tgt; use MLib.Tgt;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -593,7 +593,7 @@ package body Clean is\n          Put_Line (\"\"\"\");\n       end if;\n \n-      --  Add project to the list of proceesed projects\n+      --  Add project to the list of processed projects\n \n       Processed_Projects.Increment_Last;\n       Processed_Projects.Table (Processed_Projects.Last) := Project;\n@@ -611,7 +611,7 @@ package body Clean is\n             --  Look through the units to find those that are either immediate\n             --  sources or inherited sources of the project.\n \n-            if Data.Languages (Lang_Ada) then\n+            if Data.Languages (Ada_Language_Index) then\n                for Unit in 1 .. Prj.Com.Units.Last loop\n                   U_Data := Prj.Com.Units.Table (Unit);\n                   File_Name1 := No_Name;\n@@ -787,7 +787,9 @@ package body Clean is\n                --  If it is a library with only non Ada sources, delete\n                --  the fake archive and the dependency file, if they exist.\n \n-               if Data.Library and then not Data.Languages (Lang_Ada) then\n+               if Data.Library\n+                 and then not Data.Languages (Ada_Language_Index)\n+               then\n                   Clean_Archive (Project);\n                end if;\n             end if;\n@@ -1105,8 +1107,7 @@ package body Clean is\n          Prj.Pars.Parse\n            (Project           => Main_Project,\n             Project_File_Name => Project_File_Name.all,\n-            Packages_To_Check => Packages_To_Check_By_Gnatmake,\n-            Process_Languages => All_Languages);\n+            Packages_To_Check => Packages_To_Check_By_Gnatmake);\n \n          if Main_Project = No_Project then\n             Fail (\"\"\"\" & Project_File_Name.all & \"\"\" processing failed\");\n@@ -1202,6 +1203,10 @@ package body Clean is\n       Data : Project_Data;\n \n    begin\n+      if Prj = No_Project or else Of_Project = No_Project then\n+         return False;\n+      end if;\n+\n       if Of_Project = Prj then\n          return True;\n       end if;\n@@ -1276,13 +1281,13 @@ package body Clean is\n    begin\n       --  Do not insert an empty name or an already marked source\n \n-      if Lib_File /= No_Name and then not Is_Marked (Lib_File) then\n+      if Lib_File /= No_Name and then not Makeutl.Is_Marked (Lib_File) then\n          Q.Table (Q.Last) := Lib_File;\n          Q.Increment_Last;\n \n          --  Mark the source that has been just added to the Q\n \n-         Mark (Lib_File);\n+         Makeutl.Mark (Lib_File);\n       end if;\n    end Insert_Q;\n "}, {"sha": "0a83604307199c19ac1c903a6ed4974c54c11f22", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 71, "deletions": 13, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -74,15 +74,23 @@ procedure GNATCmd is\n    --  files to pass to a tool, when there are more than\n    --  Max_Files_On_The_Command_Line files.\n \n-   --  A table to keep the switches from the project file\n-\n    package First_Switches is new Table.Table\n      (Table_Component_Type => String_Access,\n       Table_Index_Type     => Integer,\n       Table_Low_Bound      => 1,\n       Table_Initial        => 20,\n       Table_Increment      => 100,\n       Table_Name           => \"Gnatcmd.First_Switches\");\n+   --  A table to keep the switches from the project file\n+\n+   package Carg_Switches is new Table.Table\n+     (Table_Component_Type => String_Access,\n+      Table_Index_Type     => Integer,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 20,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Gnatcmd.Carg_Switches\");\n+   --  A table to keep the switches following -cargs for ASIS tools\n \n    package Library_Paths is new Table.Table (\n      Table_Component_Type => String_Access,\n@@ -152,6 +160,10 @@ procedure GNATCmd is\n    -- Local Subprograms --\n    -----------------------\n \n+   procedure Add_To_Carg_Switches (Switch : String_Access);\n+   --  Add a switch to the Carg_Switches table. If it is the first one,\n+   --  put the switch \"-cargs\" at the beginning of the table.\n+\n    procedure Check_Files;\n    --  For GNAT LIST, GNAT PRETTY and GNAT METRIC, check if a project\n    --  file is specified, without any file arguments. If it is the case,\n@@ -209,6 +221,23 @@ procedure GNATCmd is\n    --  If it is and it includes directory information, prepend the path with\n    --  Parent.This subprogram is only called when using project files.\n \n+   --------------------------\n+   -- Add_To_Carg_Switches --\n+   --------------------------\n+\n+   procedure Add_To_Carg_Switches (Switch : String_Access) is\n+   begin\n+      --  If the Carg_Switches table is empty, put \"-cargs\" at the beginning\n+\n+      if Carg_Switches.Last = 0 then\n+         Carg_Switches.Increment_Last;\n+         Carg_Switches.Table (Carg_Switches.Last) := new String'(\"-cargs\");\n+      end if;\n+\n+      Carg_Switches.Increment_Last;\n+      Carg_Switches.Table (Carg_Switches.Last) := Switch;\n+   end Add_To_Carg_Switches;\n+\n    -----------------\n    -- Check_Files --\n    -----------------\n@@ -966,6 +995,8 @@ begin\n \n    First_Switches.Init;\n    First_Switches.Set_Last (0);\n+   Carg_Switches.Init;\n+   Carg_Switches.Set_Last (0);\n \n    VMS_Conv.Initialize;\n \n@@ -1626,20 +1657,40 @@ begin\n            or else The_Command = Stub\n            or else The_Command = Elim\n          then\n+            --  If -cargs is one of the switches, move the following\n+            --  switches to the Carg_Switches table.\n+\n+            for J in 1 .. First_Switches.Last loop\n+               if First_Switches.Table (J).all = \"-cargs\" then\n+                  for K in J + 1 .. First_Switches.Last loop\n+                     Add_To_Carg_Switches (First_Switches.Table (K));\n+                  end loop;\n+                  First_Switches.Set_Last (J - 1);\n+                  exit;\n+               end if;\n+            end loop;\n+\n+            for J in 1 .. Last_Switches.Last loop\n+               if Last_Switches.Table (J).all = \"-cargs\" then\n+                  for K in J + 1 .. Last_Switches.Last loop\n+                     Add_To_Carg_Switches (Last_Switches.Table (K));\n+                  end loop;\n+                  Last_Switches.Set_Last (J - 1);\n+                  exit;\n+               end if;\n+            end loop;\n+\n             declare\n                CP_File : constant Name_Id := Configuration_Pragmas_File;\n-\n             begin\n                if CP_File /= No_Name then\n-                  First_Switches.Increment_Last;\n-\n                   if The_Command = Elim then\n+                     First_Switches.Increment_Last;\n                      First_Switches.Table (First_Switches.Last)  :=\n                        new String'(\"-C\" & Get_Name_String (CP_File));\n-\n                   else\n-                     First_Switches.Table (First_Switches.Last) :=\n-                       new String'(\"-gnatec=\" & Get_Name_String (CP_File));\n+                     Add_To_Carg_Switches\n+                       (new String'(\"-gnatec=\" & Get_Name_String (CP_File)));\n                   end if;\n                end if;\n             end;\n@@ -1698,7 +1749,7 @@ begin\n                --  indicate to gnatstub the name of the body file with\n                --  a -o switch.\n \n-               if Data.Naming.Current_Spec_Suffix /=\n+               if Data.Naming.Ada_Spec_Suffix /=\n                  Prj.Default_Ada_Spec_Suffix\n                then\n                   if File_Index /= 0 then\n@@ -1708,14 +1759,14 @@ begin\n                         Last : Natural := Spec'Last;\n \n                      begin\n-                        Get_Name_String (Data.Naming.Current_Spec_Suffix);\n+                        Get_Name_String (Data.Naming.Ada_Spec_Suffix);\n \n                         if Spec'Length > Name_Len\n                           and then Spec (Last - Name_Len + 1 .. Last) =\n                           Name_Buffer (1 .. Name_Len)\n                         then\n                            Last := Last - Name_Len;\n-                           Get_Name_String (Data.Naming.Current_Body_Suffix);\n+                           Get_Name_String (Data.Naming.Ada_Body_Suffix);\n                            Last_Switches.Increment_Last;\n                            Last_Switches.Table (Last_Switches.Last) :=\n                              new String'(\"-o\");\n@@ -1753,7 +1804,7 @@ begin\n          end if;\n \n          --  For gnatmetric, the generated files should be put in the\n-         --  object directory. This must be the first dwitch, because it may\n+         --  object directory. This must be the first switch, because it may\n          --  be overriden by a switch in package Metrics in the project file\n          --  or by a command line option.\n \n@@ -1783,7 +1834,9 @@ begin\n \n       declare\n          The_Args : Argument_List\n-                      (1 .. First_Switches.Last + Last_Switches.Last);\n+                      (1 .. First_Switches.Last +\n+                            Last_Switches.Last +\n+                            Carg_Switches.Last);\n          Arg_Num  : Natural := 0;\n \n       begin\n@@ -1797,6 +1850,11 @@ begin\n             The_Args (Arg_Num) := Last_Switches.Table (J);\n          end loop;\n \n+         for J in 1 .. Carg_Switches.Last loop\n+            Arg_Num := Arg_Num + 1;\n+            The_Args (Arg_Num) := Carg_Switches.Table (J);\n+         end loop;\n+\n          --  If Display_Command is on, only display the generated command\n \n          if Display_Command then"}, {"sha": "f8fec48d0e41275786955d882c548141380713fc", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -38,6 +38,7 @@ with Osint;       use Osint;\n with Osint.L;     use Osint.L;\n with Output;      use Output;\n with Rident;      use Rident;\n+with Sdefault;\n with Snames;\n with Targparm;    use Targparm;\n with Types;       use Types;\n@@ -47,6 +48,18 @@ with GNAT.Case_Util; use GNAT.Case_Util;\n procedure Gnatls is\n    pragma Ident (Gnat_Static_Version_String);\n \n+   Ada_Project_Path : constant String := \"ADA_PROJECT_PATH\";\n+   --  Name of the env. variable that contains path name(s) of directories\n+   --  where project files may reside.\n+\n+   Project_Search_Path : constant String := \"Project Search Path:\";\n+   --  Label displayed in verbose mode before the directories in the project\n+   --  search path.\n+   --  NOTE: This string may be used by other tools, such as GPS; so, it\n+   --        should not be modified inconsiderately.\n+\n+   No_Project_Default_Dir : constant String := \"-\";\n+\n    Max_Column : constant := 80;\n \n    No_Obj : aliased String := \"<no_obj>\";\n@@ -1522,6 +1535,105 @@ begin\n          Write_Eol;\n       end loop;\n \n+      Write_Eol;\n+      Write_Eol;\n+      Write_Str (Project_Search_Path);\n+      Write_Eol;\n+      Write_Str (\"   <Current_Directory>\");\n+      Write_Eol;\n+\n+      declare\n+         Project_Path : constant String_Access := Getenv (Ada_Project_Path);\n+\n+         Lib    : constant String :=\n+                    Directory_Separator & \"lib\" & Directory_Separator;\n+\n+         First : Natural;\n+         Last  : Natural;\n+\n+         Add_Default_Dir : Boolean := True;\n+\n+      begin\n+         --  If there is a project path, display each directory in the path\n+\n+         if Project_Path.all /= \"\" then\n+            First := Project_Path'First;\n+\n+            loop\n+               while First <= Project_Path'Last\n+                 and then (Project_Path (First) = Path_Separator)\n+               loop\n+                  First := First + 1;\n+               end loop;\n+\n+               exit when First > Project_Path'Last;\n+\n+               Last := First;\n+\n+               while Last < Project_Path'Last\n+                 and then Project_Path (Last + 1) /= Path_Separator\n+               loop\n+                  Last := Last + 1;\n+               end loop;\n+\n+               --  If the directory is No_Default_Project_Dir, set\n+               --  Add_Default_Dir to False\n+\n+               if Project_Path (First .. Last) = No_Project_Default_Dir then\n+                  Add_Default_Dir := False;\n+\n+               elsif First /= Last or else Project_Path (First) /= '.' then\n+                  --  If the directory is \".\", skip it as it is the current\n+                  --  directory and it is already the first directory in the\n+                  --  project path.\n+\n+                  Write_Str (\"   \");\n+                  Write_Str (Project_Path (First .. Last));\n+                  Write_Eol;\n+               end if;\n+\n+               First := Last + 1;\n+            end loop;\n+         end if;\n+\n+         --  Add the default dir, except if \"-\" was one of the \"directories\"\n+         --  specified in ADA_PROJECT_DIR.\n+\n+         if Add_Default_Dir then\n+            Name_Len := 0;\n+            Add_Str_To_Name_Buffer (Sdefault.Search_Dir_Prefix.all);\n+\n+            --  On Windows, make sure that all directory separators are '\\'\n+\n+            if Directory_Separator /= '/' then\n+               for J in 1 .. Name_Len loop\n+                  if Name_Buffer (J) = '/' then\n+                     Name_Buffer (J) := Directory_Separator;\n+                  end if;\n+               end loop;\n+            end if;\n+\n+            --  Find the sequence \"/lib/\"\n+\n+            while Name_Len >= Lib'Length\n+              and then Name_Buffer (Name_Len - 4 .. Name_Len) /= Lib\n+            loop\n+               Name_Len := Name_Len - 1;\n+            end loop;\n+\n+            --  If the sequence \"/lib\"/ was found, display the default\n+            --  directory <prefix>/lib/gnat/.\n+\n+            if Name_Len >= 5 then\n+               Write_Str (\"   \");\n+               Write_Str (Name_Buffer (1 .. Name_Len));\n+               Write_Str (\"gnat\");\n+               Write_Char (Directory_Separator);\n+               Write_Eol;\n+            end if;\n+         end if;\n+      end;\n+\n       Write_Eol;\n    end if;\n "}, {"sha": "7d9be713f8cdb89a175b5f84872d155eb11a3d06", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 117, "deletions": 98, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -43,7 +43,6 @@ with Namet;    use Namet;\n with Opt;      use Opt;\n with Osint.M;  use Osint.M;\n with Osint;    use Osint;\n-with Gnatvsn;\n with Output;   use Output;\n with Prj;      use Prj;\n with Prj.Com;\n@@ -120,7 +119,7 @@ package body Make is\n    --  reinitialized, the elements between Q.First and Q.Last - 1 are unmarked.\n \n    procedure Init_Q;\n-   --  Must be called to (re)initialize the Q.\n+   --  Must be called to (re)initialize the Q\n \n    procedure Insert_Q\n      (Source_File : File_Name_Type;\n@@ -130,13 +129,13 @@ package body Make is\n    --  for external use (gnatdist). Provide index for multi-unit sources.\n \n    function Empty_Q return Boolean;\n-   --  Returns True if Q is empty.\n+   --  Returns True if Q is empty\n \n    procedure Extract_From_Q\n      (Source_File  : out File_Name_Type;\n       Source_Unit  : out Unit_Name_Type;\n       Source_Index : out Int);\n-   --  Extracts the first element from the Q.\n+   --  Extracts the first element from the Q\n \n    procedure Insert_Project_Sources\n      (The_Project  : Project_Id;\n@@ -151,10 +150,10 @@ package body Make is\n    --  from projects being extended.\n \n    First_Q_Initialization : Boolean := True;\n-   --  Will be set to false after Init_Q has been called once.\n+   --  Will be set to false after Init_Q has been called once\n \n    Q_Front : Natural;\n-   --  Points to the first valid element in the Q.\n+   --  Points to the first valid element in the Q\n \n    Unique_Compile : Boolean := False;\n    --  Set to True if -u or -U or a project file with no main is used\n@@ -182,7 +181,7 @@ package body Make is\n      Table_Initial        => 4000,\n      Table_Increment      => 100,\n      Table_Name           => \"Make.Q\");\n-   --  This is the actual Q.\n+   --  This is the actual Q\n \n    --  The following instantiations and variables are necessary to save what\n    --  is found on the command line, in case there is a project file specified.\n@@ -284,7 +283,7 @@ package body Make is\n    --  Avoid calling Change_Dir if the current working directory is already\n    --  this directory\n \n-   --  Packages of project files where unknown attributes are errors.\n+   --  Packages of project files where unknown attributes are errors\n \n    Naming_String   : aliased String := \"naming\";\n    Builder_String  : aliased String := \"builder\";\n@@ -338,7 +337,7 @@ package body Make is\n      Table_Initial        => 20,\n      Table_Increment      => 100,\n      Table_Name           => \"Make.Bad_Compilation\");\n-   --  Full name of all the source files for which compilation fails.\n+   --  Full name of all the source files for which compilation fails\n \n    Do_Compile_Step : Boolean := True;\n    Do_Bind_Step    : Boolean := True;\n@@ -411,7 +410,7 @@ package body Make is\n       This       : Name_Id;\n       Depends_On : Name_Id;\n    end record;\n-   --  Components of table Dependencies below.\n+   --  Components of table Dependencies below\n \n    package Dependencies is new Table.Table (\n      Table_Component_Type => Dependency,\n@@ -473,10 +472,10 @@ package body Make is\n    --  between the call to Compile_Sources and List_Depend.)\n \n    procedure Inform (N : Name_Id := No_Name; Msg : String);\n-   --  Prints out the program name followed by a colon, N and S.\n+   --  Prints out the program name followed by a colon, N and S\n \n    procedure List_Bad_Compilations;\n-   --  Prints out the list of all files for which the compilation failed.\n+   --  Prints out the list of all files for which the compilation failed\n \n    procedure Verbose_Msg\n      (N1     : Name_Id;\n@@ -485,9 +484,8 @@ package body Make is\n       S2     : String  := \"\";\n       Prefix : String  := \"  -> \");\n    --  If the verbose flag (Verbose_Mode) is set then print Prefix to standard\n-   --  output followed by N1 and S1. If N2 /= No_Name then N2 is then printed\n-   --  after S1. S2 is printed last. Both N1 and N2 are printed in quotation\n-   --  marks.\n+   --  output followed by N1 and S1. If N2 /= No_Name then N2 is printed after\n+   --  S1. S2 is printed last. Both N1 and N2 are printed in quotation marks.\n \n    Usage_Needed : Boolean := True;\n    --  Flag used to make sure Makeusg is call at most once\n@@ -497,7 +495,7 @@ package body Make is\n    --  Set Usage_Needed to False.\n \n    procedure Debug_Msg (S : String; N : Name_Id);\n-   --  If Debug.Debug_Flag_W is set outputs string S followed by name N.\n+   --  If Debug.Debug_Flag_W is set outputs string S followed by name N\n \n    procedure Recursive_Compute_Depth\n      (Project : Project_Id;\n@@ -587,7 +585,7 @@ package body Make is\n    Saved_Gcc       : String_Access := null;\n    Saved_Gnatbind  : String_Access := null;\n    Saved_Gnatlink  : String_Access := null;\n-   --  Given by the command line. Will be used, if non null.\n+   --  Given by the command line. Will be used, if non null\n \n    Gcc_Path        : String_Access :=\n                        GNAT.OS_Lib.Locate_Exec_On_Path (Gcc.all);\n@@ -613,7 +611,7 @@ package body Make is\n    --  Set to True when compiling with -gnats\n \n    Display_Executed_Programs : Boolean := True;\n-   --  Set to True if name of commands should be output on stderr.\n+   --  Set to True if name of commands should be output on stderr\n \n    Output_File_Name_Seen : Boolean := False;\n    --  Set to True after having scanned the file_name for\n@@ -624,14 +622,14 @@ package body Make is\n    --  switch \"-D obj_dir\".\n \n    Object_Directory_Path : String_Access := null;\n-   --  The path name of the object directory, set with switch -D.\n+   --  The path name of the object directory, set with switch -D\n \n    type Make_Program_Type is (None, Compiler, Binder, Linker);\n \n    Program_Args : Make_Program_Type := None;\n    --  Used to indicate if we are scanning gnatmake, gcc, gnatbind, or gnatbind\n-   --  options within the gnatmake command line.\n-   --  Used in Scan_Make_Arg only, but must be a global variable.\n+   --  options within the gnatmake command line. Used in Scan_Make_Arg only,\n+   --  but must be global since value preserved from one call to another.\n \n    Temporary_Config_File : Boolean := False;\n    --  Set to True when there is a temporary config file used for a project\n@@ -1209,13 +1207,13 @@ package body Make is\n       --  Full name of current library file\n \n       Full_Obj_File : File_Name_Type;\n-      --  Full name of the object file corresponding to Lib_File.\n+      --  Full name of the object file corresponding to Lib_File\n \n       Lib_Stamp : Time_Stamp_Type;\n-      --  Time stamp of the current ada library file.\n+      --  Time stamp of the current ada library file\n \n       Obj_Stamp : Time_Stamp_Type;\n-      --  Time stamp of the current object file.\n+      --  Time stamp of the current object file\n \n       Modified_Source : File_Name_Type;\n       --  The first source in Lib_File whose current time stamp differs\n@@ -1640,13 +1638,13 @@ package body Make is\n       O_File  := No_File;\n       O_Stamp := (others => ' ');\n \n-      --  Process linker options from the ALI files.\n+      --  Process linker options from the ALI files\n \n       for Opt in 1 .. Linker_Options.Last loop\n          Check_File (Linker_Options.Table (Opt).Name);\n       end loop;\n \n-      --  Process options given on the command line.\n+      --  Process options given on the command line\n \n       for Opt in Linker_Switches.First .. Linker_Switches.Last loop\n \n@@ -1907,7 +1905,7 @@ package body Make is\n       end record;\n \n       Running_Compile : array (1 .. Max_Process) of Compilation_Data;\n-      --  Used to save information about outstanding compilations.\n+      --  Used to save information about outstanding compilations\n \n       Outstanding_Compiles : Natural := 0;\n       --  Current number of outstanding compiles\n@@ -1928,17 +1926,19 @@ package body Make is\n       --  Full name of the current library file\n \n       Obj_File : File_Name_Type;\n-      --  Full name of the object file corresponding to Lib_File.\n+      --  Full name of the object file corresponding to Lib_File\n \n       Obj_Stamp : Time_Stamp_Type;\n-      --  Time stamp of the current object file.\n+      --  Time stamp of the current object file\n \n       Sfile : File_Name_Type;\n       --  Contains the source file of the units withed by Source_File\n \n       ALI : ALI_Id;\n       --  ALI Id of the current ALI file\n \n+      --  Comment following declarations ???\n+\n       Read_Only : Boolean := False;\n \n       Compilation_OK  : Boolean;\n@@ -1950,10 +1950,13 @@ package body Make is\n       Mfile : Natural := No_Mapping_File;\n \n       Need_To_Check_Standard_Library : Boolean :=\n-        Check_Readonly_Files and not Unique_Compile;\n+                                         Check_Readonly_Files\n+                                           and not Unique_Compile;\n \n       Mapping_File_Arg : String_Access;\n \n+      Process_Created : Boolean := False;\n+\n       procedure Add_Process\n         (Pid    : Process_Id;\n          Sfile  : File_Name_Type;\n@@ -1982,7 +1985,7 @@ package body Make is\n       --  to wait for.\n \n       function Bad_Compilation_Count return Natural;\n-      --  Returns the number of compilation failures.\n+      --  Returns the number of compilation failures\n \n       procedure Check_Standard_Library;\n       --  Check if s-stalib.adb needs to be compiled\n@@ -2008,17 +2011,17 @@ package body Make is\n         Table_Initial        => 50,\n         Table_Increment      => 100,\n         Table_Name           => \"Make.Good_ALI\");\n-      --  Contains the set of valid ALI files that have not yet been scanned.\n+      --  Contains the set of valid ALI files that have not yet been scanned\n \n       function Good_ALI_Present return Boolean;\n-      --  Returns True if any ALI file was recorded in the previous set.\n+      --  Returns True if any ALI file was recorded in the previous set\n \n       procedure Get_Mapping_File (Project : Project_Id);\n       --  Get a mapping file name. If there is one to be reused, reuse it.\n       --  Otherwise, create a new mapping file.\n \n       function Get_Next_Good_ALI return ALI_Id;\n-      --  Returns the next good ALI_Id record;\n+      --  Returns the next good ALI_Id record\n \n       procedure Record_Failure\n         (File  : File_Name_Type;\n@@ -2029,7 +2032,7 @@ package body Make is\n       --  could not find it. Records also Unit when possible.\n \n       procedure Record_Good_ALI (A : ALI_Id);\n-      --  Records in the previous set the Id of an ALI file.\n+      --  Records in the previous set the Id of an ALI file\n \n       -----------------\n       -- Add_Process --\n@@ -2197,9 +2200,12 @@ package body Make is\n         (Source_File : File_Name_Type; Source_Index : Int)\n       is\n       begin\n+         --  Process_Created will be set True if an attempt is made to compile\n+         --  the source, that is if it is not in an externally built project.\n+\n+         Process_Created := False;\n \n-         --  If arguments have not yet been collected (in Check), collect them\n-         --  now.\n+         --  If arguments not yet collected (in Check), collect them now\n \n          if not Arguments_Collected then\n             Collect_Arguments (Source_File, Source_Index, Args);\n@@ -2215,57 +2221,61 @@ package body Make is\n          --  check for an eventual library project, and use the full path.\n \n          if Arguments_Project /= No_Project then\n-            Prj.Env.Set_Ada_Paths (Arguments_Project, True);\n+            if not Projects.Table (Arguments_Project).Externally_Built then\n+               Prj.Env.Set_Ada_Paths (Arguments_Project, True);\n \n-            if MLib.Tgt.Support_For_Libraries /= MLib.Tgt.None then\n-               declare\n-                  The_Data : Project_Data :=\n-                    Projects.Table (Arguments_Project);\n-                  Prj      : Project_Id   := Arguments_Project;\n+               if MLib.Tgt.Support_For_Libraries /= MLib.Tgt.None then\n+                  declare\n+                     The_Data : Project_Data :=\n+                                  Projects.Table (Arguments_Project);\n \n-               begin\n-                  while The_Data.Extended_By /= No_Project loop\n-                     Prj := The_Data.Extended_By;\n-                     The_Data := Projects.Table (Prj);\n-                  end loop;\n+                     Prj : Project_Id := Arguments_Project;\n \n-                  if The_Data.Library\n-                    and then not The_Data.Need_To_Build_Lib\n-                  then\n-                     --  Add to the Q all sources of the project that\n-                     --  have not been marked\n+                  begin\n+                     while The_Data.Extended_By /= No_Project loop\n+                        Prj := The_Data.Extended_By;\n+                        The_Data := Projects.Table (Prj);\n+                     end loop;\n \n-                     Insert_Project_Sources\n-                       (The_Project  => Prj,\n-                        All_Projects => False,\n-                        Into_Q       => True);\n+                     if The_Data.Library\n+                       and then not The_Data.Need_To_Build_Lib\n+                     then\n+                        --  Add to the Q all sources of the project that\n+                        --  have not been marked\n \n-                     --  Now mark the project as processed\n+                        Insert_Project_Sources\n+                          (The_Project  => Prj,\n+                           All_Projects => False,\n+                           Into_Q       => True);\n \n-                     Projects.Table (Prj).Need_To_Build_Lib := True;\n-                  end if;\n-               end;\n-            end if;\n+                        --  Now mark the project as processed\n \n-            --  Change to the object directory of the project file,\n-            --  if necessary.\n+                        Projects.Table (Prj).Need_To_Build_Lib := True;\n+                     end if;\n+                  end;\n+               end if;\n \n-            Change_To_Object_Directory (Arguments_Project);\n+               --  Change to the object directory of the project file,\n+               --  if necessary.\n \n-            Pid := Compile (Arguments_Path_Name, Lib_File, Source_Index,\n-                            Arguments (1 .. Last_Argument));\n+               Change_To_Object_Directory (Arguments_Project);\n+\n+               Pid := Compile (Arguments_Path_Name, Lib_File, Source_Index,\n+                               Arguments (1 .. Last_Argument));\n+               Process_Created := True;\n+            end if;\n \n          else\n-            --  If this is a source outside of any project file, make sure\n-            --  it will be compiled in the object directory of the main project\n-            --  file.\n+            --  If this is a source outside of any project file, make sure it\n+            --  will be compiled in object directory of the main project file.\n \n             if Main_Project /= No_Project then\n                Change_To_Object_Directory (Arguments_Project);\n             end if;\n \n             Pid := Compile (Full_Source_File, Lib_File, Source_Index,\n                             Arguments (1 .. Last_Argument));\n+            Process_Created := True;\n          end if;\n       end Collect_Arguments_And_Compile;\n \n@@ -2403,8 +2413,7 @@ package body Make is\n            L /= Strip_Directory (L) or else\n            Object_Directory_Path /= null\n          then\n-\n-            --  Build -o argument.\n+            --  Build -o argument\n \n             Get_Name_String (L);\n \n@@ -2542,7 +2551,7 @@ package body Make is\n    begin\n       pragma Assert (Args'First = 1);\n \n-      --  Package and Queue initializations.\n+      --  Package and Queue initializations\n \n       Good_ALI.Init;\n       Output.Set_Standard_Error;\n@@ -2690,7 +2699,7 @@ package body Make is\n \n                   if not Need_To_Compile then\n \n-                     --  The ALI file is up-to-date. Record its Id.\n+                     --  The ALI file is up-to-date. Record its Id\n \n                      Record_Good_ALI (ALI);\n \n@@ -2742,15 +2751,17 @@ package body Make is\n \n                      --  Make sure we could successfully start the compilation\n \n-                     if Pid = Invalid_Pid then\n-                        Record_Failure (Full_Source_File, Source_Unit);\n-                     else\n-                        Add_Process\n-                          (Pid,\n-                           Full_Source_File,\n-                           Lib_File,\n-                           Source_Unit,\n-                           Mfile);\n+                     if Process_Created then\n+                        if Pid = Invalid_Pid then\n+                           Record_Failure (Full_Source_File, Source_Unit);\n+                        else\n+                           Add_Process\n+                             (Pid,\n+                              Full_Source_File,\n+                              Lib_File,\n+                              Source_Unit,\n+                              Mfile);\n+                        end if;\n                      end if;\n                   end if;\n                end if;\n@@ -2970,7 +2981,7 @@ package body Make is\n       function Absolute_Path\n         (Path    : Name_Id;\n          Project : Project_Id) return String;\n-      --  Returns an absolute path for a configuration pragmas file.\n+      --  Returns an absolute path for a configuration pragmas file\n \n       -------------------\n       -- Absolute_Path --\n@@ -3455,14 +3466,14 @@ package body Make is\n                        Locate_Regular_File\n                          (Main &\n                           Get_Name_String\n-                            (Data.Naming.Current_Body_Suffix),\n+                            (Data.Naming.Ada_Body_Suffix),\n                           \"\");\n                      if Real_Path = null then\n                         Real_Path :=\n                           Locate_Regular_File\n                             (Main &\n                              Get_Name_String\n-                               (Data.Naming.Current_Spec_Suffix),\n+                               (Data.Naming.Ada_Spec_Suffix),\n                              \"\");\n                      end if;\n \n@@ -3970,6 +3981,13 @@ package body Make is\n          Write_Eol;\n       end if;\n \n+      if Main_Project /= No_Project\n+        and then Projects.Table (Main_Project).Externally_Built\n+      then\n+         Make_Failed\n+           (\"nothing to do for a main project that is externally built\");\n+      end if;\n+\n       if Osint.Number_Of_Files = 0 then\n          if Main_Project /= No_Project\n            and then Projects.Table (Main_Project).Library\n@@ -4338,12 +4356,13 @@ package body Make is\n             for Proj in Projects.First .. Projects.Last loop\n                if Projects.Table (Proj).Library then\n                   Projects.Table (Proj).Need_To_Build_Lib :=\n-                    not MLib.Tgt.Library_Exists_For (Proj);\n+                    (not MLib.Tgt.Library_Exists_For (Proj))\n+                    and then (not Projects.Table (Proj).Externally_Built);\n \n                   if Projects.Table (Proj).Need_To_Build_Lib then\n+\n                      --  If there is no object directory, then it will be\n-                     --  impossible to build the library. So, we fail\n-                     --  immediately.\n+                     --  impossible to build the library. So fail immediately.\n \n                      if Projects.Table (Proj).Object_Directory = No_Name then\n                         Make_Failed\n@@ -4640,13 +4659,13 @@ package body Make is\n \n                   Name_Buffer (Name_Len + 1 ..\n                                        Name_Len + Exec_File_Name'Length) :=\n-                      Exec_File_Name;\n+                    Exec_File_Name;\n+\n                   Name_Len := Name_Len + Exec_File_Name'Length;\n                   Executable := Name_Find;\n                   Non_Std_Executable := True;\n                end if;\n             end;\n-\n          end if;\n \n          if Do_Compile_Step then\n@@ -4658,7 +4677,7 @@ package body Make is\n                Youngest_Obj_Stamp  : Time_Stamp_Type;\n \n                Executable_Stamp : Time_Stamp_Type;\n-               --  Executable is the final executable program.\n+               --  Executable is the final executable program\n \n                Library_Rebuilt : Boolean := False;\n \n@@ -4701,7 +4720,6 @@ package body Make is\n                if Total_Compilation_Failures /= 0 then\n                   if Keep_Going then\n                      goto Next_Main;\n-\n                   else\n                      List_Bad_Compilations;\n                      raise Compilation_Failed;\n@@ -4736,6 +4754,7 @@ package body Make is\n \n                         if Projects.Table (Proj1).Library\n                           and then not Projects.Table (Proj1).Need_To_Build_Lib\n+                          and then not Projects.Table (Proj1).Externally_Built\n                         then\n                            MLib.Prj.Check_Library (Proj1);\n                         end if;\n@@ -5289,7 +5308,7 @@ package body Make is\n             end Link_Step;\n          end if;\n \n-         --  We go to here when we skip the bind and link steps.\n+         --  We go to here when we skip the bind and link steps\n \n          <<Next_Main>>\n \n@@ -5631,7 +5650,7 @@ package body Make is\n \n       Check_Object_Consistency := True;\n \n-      --  Package initializations. The order of calls is important here.\n+      --  Package initializations. The order of calls is important here\n \n       Output.Set_Standard_Error;\n \n@@ -6270,7 +6289,7 @@ package body Make is\n       B : Byte;\n \n    begin\n-      --  Dir last character is supposed to be a directory separator.\n+      --  Dir last character is supposed to be a directory separator\n \n       Name_Len := Dir'Length;\n       Name_Buffer (1 .. Name_Len) := Dir;\n@@ -6971,9 +6990,9 @@ package body Make is\n             Name        : String (1 .. Source_File_Name'Length + 3);\n             Last        : Positive := Source_File_Name'Length;\n             Spec_Suffix : constant String :=\n-                            Get_Name_String (Naming.Current_Spec_Suffix);\n+                            Get_Name_String (Naming.Ada_Spec_Suffix);\n             Body_Suffix : constant String :=\n-                            Get_Name_String (Naming.Current_Body_Suffix);\n+                            Get_Name_String (Naming.Ada_Body_Suffix);\n             Truncated   : Boolean := False;\n \n          begin"}, {"sha": "4806a9a7300c86fa2c8801aa0c5a041d3272abdf", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 104, "deletions": 97, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -105,15 +105,27 @@ package body Makegpr is\n    Last_Source : Natural := 0;\n    --  The index of the last valid component of Source_Indexes\n \n-   Compiler_Names : array (Programming_Language) of String_Access;\n+   Compiler_Names : array (First_Language_Indexes) of String_Access;\n    --  The names of the compilers to be used. Set up by Get_Compiler.\n    --  Used to display the commands spawned.\n \n-   Compiler_Paths : array (Programming_Language) of String_Access;\n+   Gnatmake_String       : constant String_Access := new String'(\"gnatmake\");\n+   GCC_String            : constant String_Access := new String'(\"gcc\");\n+   G_Plus_Plus_String    : constant String_Access := new String'(\"g++\");\n+\n+   Default_Compiler_Names : constant array\n+     (First_Language_Indexes range\n+        Ada_Language_Index .. C_Plus_Plus_Language_Index)\n+     of String_Access :=\n+       (Ada_Language_Index         => Gnatmake_String,\n+        C_Language_Index           => GCC_String,\n+        C_Plus_Plus_Language_Index => G_Plus_Plus_String);\n+\n+   Compiler_Paths : array (First_Language_Indexes) of String_Access;\n    --  The path names of the compiler to be used. Set up by Get_Compiler.\n    --  Used to spawn compiling/linking processes.\n \n-   Compiler_Is_Gcc : array (Programming_Language) of Boolean;\n+   Compiler_Is_Gcc : array (First_Language_Indexes) of Boolean;\n    --  An indication that a compiler is a GCC compiler, to be able to use\n    --  specific GCC switches.\n \n@@ -163,7 +175,7 @@ package body Makegpr is\n    Current_Processor : Processor := None;\n    --  This variable changes when switches -*args are used\n \n-   Current_Language  : Programming_Language := Lang_Ada;\n+   Current_Language  : Language_Index := Ada_Language_Index;\n    --  The compiler language to consider when Processor is Compiler\n \n    package Comp_Opts is new GNAT.Dynamic_Tables\n@@ -172,7 +184,7 @@ package body Makegpr is\n       Table_Low_Bound      => 1,\n       Table_Initial        => 20,\n       Table_Increment      => 100);\n-   Options : array (Programming_Language) of Comp_Opts.Instance;\n+   Options : array (First_Language_Indexes) of Comp_Opts.Instance;\n    --  Tables to store compiling options for the different compilers\n \n    package Linker_Options is new Table.Table\n@@ -300,7 +312,7 @@ package body Makegpr is\n    --  The environment variable to set when compiler is a GCC compiler\n    --  to indicate the include directory path.\n \n-   Current_Include_Paths : array (Programming_Language) of String_Access;\n+   Current_Include_Paths : array (First_Language_Indexes) of String_Access;\n    --  A cache for the paths of included directories, to avoid setting\n    --  env var CPATH unnecessarily.\n \n@@ -357,7 +369,7 @@ package body Makegpr is\n \n    procedure Add_Search_Directories\n      (Data     : Project_Data;\n-      Language : Programming_Language);\n+      Language : First_Language_Indexes);\n    --  Either add to the Arguments the necessary -I switches needed to\n    --  compile, or, when compiler is gcc/g++, set up the C*INCLUDE_PATH\n    --  environment variable, if necessary.\n@@ -368,7 +380,7 @@ package body Makegpr is\n    procedure Add_Switches\n      (Data      : Project_Data;\n       Proc      : Processor;\n-      Language  : Other_Programming_Language;\n+      Language  : Language_Index;\n       File_Name : Name_Id);\n    --  Add to Arguments the switches, if any, for a source (attribute Switches)\n    --  or language (attribute Default_Switches), coming from package Compiler\n@@ -435,7 +447,7 @@ package body Makegpr is\n    --  Display the command for a spawned process, if in Verbose_Mode or\n    --  not in Quiet_Output.\n \n-   procedure Get_Compiler (For_Language : Programming_Language);\n+   procedure Get_Compiler (For_Language : First_Language_Indexes);\n    --  Find the compiler name and path name for a specified programming\n    --  language, if not already done. Results are in the corresponding\n    --  elements of arrays Compiler_Names and Compiler_Paths. Name of compiler\n@@ -877,7 +889,7 @@ package body Makegpr is\n \n    procedure Add_Search_Directories\n      (Data     : Project_Data;\n-      Language : Programming_Language)\n+      Language : First_Language_Indexes)\n    is\n    begin\n       --  If a GNU compiler is used, set the CPATH environment variable,\n@@ -901,7 +913,7 @@ package body Makegpr is\n    procedure Add_Switches\n      (Data      : Project_Data;\n       Proc      : Processor;\n-      Language  : Other_Programming_Language;\n+      Language  : Language_Index;\n       File_Name : Name_Id)\n    is\n       Switches       : Variable_Value;\n@@ -953,7 +965,7 @@ package body Makegpr is\n            (Name      => Name_Default_Switches,\n             In_Arrays => Packages.Table (Pkg).Decl.Arrays);\n          Switches := Prj.Util.Value_Of\n-           (Index     => Lang_Name_Ids (Language),\n+           (Index     => Language_Names.Table (Language),\n             Src_Index => 0,\n             In_Array  => Defaults);\n       end if;\n@@ -1546,7 +1558,7 @@ package body Makegpr is\n          --  If there are sources in Ada, then gnatmake will build the\n          --  library, so nothing to do.\n \n-         if not Data.Languages (Lang_Ada) then\n+         if not Data.Languages (Ada_Language_Index) then\n \n             --  Get all the object files of the project\n \n@@ -1574,14 +1586,14 @@ package body Makegpr is\n                --  building the library may fail with unresolved symbols.\n \n                if C_Plus_Plus_Is_Used then\n-                  if Compiler_Names (Lang_C_Plus_Plus) = null then\n-                     Get_Compiler (Lang_C_Plus_Plus);\n+                  if Compiler_Names (C_Plus_Plus_Language_Index) = null then\n+                     Get_Compiler (C_Plus_Plus_Language_Index);\n                   end if;\n \n-                  if Compiler_Is_Gcc (Lang_C_Plus_Plus) then\n+                  if Compiler_Is_Gcc (C_Plus_Plus_Language_Index) then\n                      Name_Len := 0;\n                      Add_Str_To_Name_Buffer\n-                       (Compiler_Names (Lang_C_Plus_Plus).all);\n+                       (Compiler_Names (C_Plus_Plus_Language_Index).all);\n                      Driver_Name := Name_Find;\n                   end if;\n                end if;\n@@ -2022,7 +2034,9 @@ package body Makegpr is\n       C_Plus_Plus_Is_Used := False;\n \n       for Project in 1 .. Projects.Last loop\n-         if Projects.Table (Project).Languages (Lang_C_Plus_Plus) then\n+         if\n+           Projects.Table (Project).Languages (C_Plus_Plus_Language_Index)\n+         then\n             C_Plus_Plus_Is_Used := True;\n             exit;\n          end if;\n@@ -2171,7 +2185,8 @@ package body Makegpr is\n       if Compiler_Is_Gcc (Source.Language) then\n          Add_Argument (Dash_x, Verbose_Mode);\n          Add_Argument\n-           (Lang_Names (Source.Language), Verbose_Mode);\n+           (Get_Name_String (Language_Names.Table (Source.Language)),\n+            Verbose_Mode);\n       end if;\n \n       Add_Argument (Dash_c, True);\n@@ -2293,7 +2308,8 @@ package body Makegpr is\n       Project_Name : String := Get_Name_String (Data.Name);\n       Dummy        : Boolean := False;\n \n-      Ada_Is_A_Language : constant Boolean := Data.Languages (Lang_Ada);\n+      Ada_Is_A_Language : constant Boolean :=\n+                            Data.Languages (Ada_Language_Index);\n \n    begin\n       Ada_Mains.Init;\n@@ -2398,7 +2414,7 @@ package body Makegpr is\n \n       --  Get the gnatmake to invoke\n \n-      Get_Compiler (Lang_Ada);\n+      Get_Compiler (Ada_Language_Index);\n \n       --  Specify the project file\n \n@@ -2480,11 +2496,11 @@ package body Makegpr is\n \n       --  If there are compiling options for Ada, transmit them to gnatmake\n \n-      if Comp_Opts.Last (Options (Lang_Ada)) /= 0 then\n+      if Comp_Opts.Last (Options (Ada_Language_Index)) /= 0 then\n          Add_Argument (Dash_cargs, True);\n \n-         for Arg in 1 .. Comp_Opts.Last (Options (Lang_Ada)) loop\n-            Add_Argument (Options (Lang_Ada).Table (Arg), True);\n+         for Arg in 1 .. Comp_Opts.Last (Options (Ada_Language_Index)) loop\n+            Add_Argument (Options (Ada_Language_Index).Table (Arg), True);\n          end loop;\n       end if;\n \n@@ -2513,18 +2529,21 @@ package body Makegpr is\n       --  And invoke gnatmake\n \n       Display_Command\n-        (Compiler_Names (Lang_Ada).all, Compiler_Paths (Lang_Ada));\n+        (Compiler_Names (Ada_Language_Index).all,\n+         Compiler_Paths (Ada_Language_Index));\n \n       Spawn\n-        (Compiler_Paths (Lang_Ada).all,\n+        (Compiler_Paths (Ada_Language_Index).all,\n          Arguments (1 .. Last_Argument),\n          Success);\n \n       --  Report an error if call to gnatmake failed\n \n       if not Success then\n          Report_Error\n-           (\"invocation of \", Compiler_Names (Lang_Ada).all, \" failed\");\n+           (\"invocation of \",\n+            Compiler_Names (Ada_Language_Index).all,\n+            \" failed\");\n       end if;\n \n    end Compile_Link_With_Gnatmake;\n@@ -2612,7 +2631,7 @@ package body Makegpr is\n \n             if not Local_Errors\n               and then Data.Library\n-              and then not Data.Languages (Lang_Ada)\n+              and then not Data.Languages (Ada_Language_Index)\n               and then not Compile_Only\n             then\n                Build_Library (Project, Need_To_Rebuild_Archive);\n@@ -2770,7 +2789,7 @@ package body Makegpr is\n    -- Get_Compiler --\n    ------------------\n \n-   procedure Get_Compiler (For_Language : Programming_Language) is\n+   procedure Get_Compiler (For_Language : First_Language_Indexes) is\n       Data : constant Project_Data := Projects.Table (Main_Project);\n \n       Ide : constant Package_Id :=\n@@ -2779,7 +2798,7 @@ package body Makegpr is\n \n       Compiler : constant Variable_Value :=\n         Value_Of\n-          (Name                    => Lang_Name_Ids (For_Language),\n+          (Name                    => Language_Names.Table (For_Language),\n            Index                   => 0,\n            Attribute_Or_Array_Name => Name_Compiler_Command,\n            In_Package              => Ide);\n@@ -2794,8 +2813,16 @@ package body Makegpr is\n          --  IDE, use the default compiler for this language.\n \n          if Compiler = Nil_Variable_Value then\n-            Compiler_Names (For_Language) :=\n-              Default_Compiler_Names (For_Language);\n+            if For_Language in Default_Compiler_Names'Range then\n+               Compiler_Names (For_Language) :=\n+                 Default_Compiler_Names (For_Language);\n+\n+            else\n+               Osint.Fail\n+                 (\"unknow compiler name for language \"\"\",\n+                  Get_Name_String (Language_Names.Table (For_Language)),\n+                  \"\"\"\");\n+            end if;\n \n          else\n             Compiler_Names (For_Language) :=\n@@ -2825,15 +2852,16 @@ package body Makegpr is\n          --  Fail if compiler cannot be found\n \n          if Compiler_Paths (For_Language) = null then\n-            if For_Language = Lang_Ada then\n+            if For_Language = Ada_Language_Index then\n                Osint.Fail\n                  (\"unable to locate \"\"\",\n                   Compiler_Names (For_Language).all,\n                   \"\"\"\");\n \n             else\n                Osint.Fail\n-                 (\"unable to locate \" & Lang_Display_Names (For_Language).all,\n+                 (\"unable to locate \" &\n+                  Get_Name_String (Language_Names.Table (For_Language)),\n                   \" compiler \"\"\", Compiler_Names (For_Language).all & '\"');\n             end if;\n          end if;\n@@ -3031,8 +3059,7 @@ package body Makegpr is\n       Prj.Pars.Parse\n         (Project           => Main_Project,\n          Project_File_Name => Project_File_Name.all,\n-         Packages_To_Check => Packages_To_Check,\n-         Process_Languages => Other_Languages);\n+         Packages_To_Check => Packages_To_Check);\n \n       --  Fail if parsing/processing was unsuccessful\n \n@@ -3238,9 +3265,9 @@ package body Makegpr is\n \n       procedure Add_C_Plus_Plus_Link_For_Gnatmake is\n       begin\n-         if Compiler_Is_Gcc (Lang_C_Plus_Plus) then\n+         if Compiler_Is_Gcc (C_Plus_Plus_Language_Index) then\n             Add_Argument\n-              (\"--LINK=\" & Compiler_Names (Lang_C_Plus_Plus).all,\n+              (\"--LINK=\" & Compiler_Names (C_Plus_Plus_Language_Index).all,\n                Verbose_Mode);\n \n          else\n@@ -3313,11 +3340,11 @@ package body Makegpr is\n \n       procedure Choose_C_Plus_Plus_Link_Process is\n       begin\n-         if Compiler_Names (Lang_C_Plus_Plus) = null then\n-            Get_Compiler (Lang_C_Plus_Plus);\n+         if Compiler_Names (C_Plus_Plus_Language_Index) = null then\n+            Get_Compiler (C_Plus_Plus_Language_Index);\n          end if;\n \n-         if not Compiler_Is_Gcc (Lang_C_Plus_Plus) then\n+         if not Compiler_Is_Gcc (C_Plus_Plus_Language_Index) then\n             Change_Dir (Object_Dir);\n \n             declare\n@@ -3332,7 +3359,7 @@ package body Makegpr is\n                Put_Line (File, \"LIBGCC=`gcc -print-libgcc-file-name`\");\n                Put_Line\n                  (File,\n-                  Compiler_Names (Lang_C_Plus_Plus).all &\n+                  Compiler_Names (C_Plus_Plus_Language_Index).all &\n                   \" $* ${LIBGCC}\");\n \n                Close (File);\n@@ -3538,7 +3565,7 @@ package body Makegpr is\n \n          --  Only Ada sources in the main project, and even maybe not\n \n-         if not Data.Languages (Lang_Ada) then\n+         if not Data.Languages (Ada_Language_Index) then\n \n             --  Fail if the main project has no source of any language\n \n@@ -3568,7 +3595,7 @@ package body Makegpr is\n          --  There are other language sources. First check if there are also\n          --  sources in Ada.\n \n-         if Data.Languages (Lang_Ada) then\n+         if Data.Languages (Ada_Language_Index) then\n \n             --  There is a mix of Ada and other language sources in the main\n             --  project. Any main that is not a source of the other languages\n@@ -3694,7 +3721,7 @@ package body Makegpr is\n                --  If C++ is one of the languages, add the --LINK switch to\n                --  the linking switches.\n \n-               if Data.Languages (Lang_C_Plus_Plus) then\n+               if Data.Languages (C_Plus_Plus_Language_Index) then\n                   Add_Argument (Dash_largs, Verbose_Mode);\n                   Add_C_Plus_Plus_Link_For_Gnatmake;\n                   Add_Argument (Dash_margs, Verbose_Mode);\n@@ -3710,15 +3737,15 @@ package body Makegpr is\n \n             --  First, get the linker to invoke\n \n-            if Data.Languages (Lang_C_Plus_Plus) then\n-               Get_Compiler (Lang_C_Plus_Plus);\n-               Linker_Name := Compiler_Names (Lang_C_Plus_Plus);\n-               Linker_Path := Compiler_Paths (Lang_C_Plus_Plus);\n+            if Data.Languages (C_Plus_Plus_Language_Index) then\n+               Get_Compiler (C_Plus_Plus_Language_Index);\n+               Linker_Name := Compiler_Names (C_Plus_Plus_Language_Index);\n+               Linker_Path := Compiler_Paths (C_Plus_Plus_Language_Index);\n \n             else\n-               Get_Compiler (Lang_C);\n-               Linker_Name := Compiler_Names (Lang_C);\n-               Linker_Path := Compiler_Paths (Lang_C);\n+               Get_Compiler (C_Language_Index);\n+               Linker_Name := Compiler_Names (C_Language_Index);\n+               Linker_Path := Compiler_Paths (C_Language_Index);\n             end if;\n \n             Link_Done := False;\n@@ -3883,31 +3910,28 @@ package body Makegpr is\n \n       --  Set the processor/language for the following switches\n \n-      --  -c???args: Compiler arguments\n+      --  -cargs: Ada compiler arguments\n \n-      elsif Arg'Length >= 6\n-        and then Arg (Arg'First .. Arg'First + 1) = \"-c\"\n-        and then Arg (Arg'Last - 3 .. Arg'Last) = \"args\"\n-      then\n-         declare\n-            OK          : Boolean := False;\n-            Args_String : constant String :=\n-                            Arg (Arg'First + 2 .. Arg'Last - 4);\n+      elsif Arg = \"-cargs\" then\n+         Current_Language  := Ada_Language_Index;\n+         Current_Processor := Compiler;\n+\n+      elsif Arg'Length > 7 and then Arg (1 .. 7) = \"-cargs:\" then\n+         Name_Len := 0;\n+         Add_Str_To_Name_Buffer (Arg (8 .. Arg'Last));\n+         To_Lower (Name_Buffer (1 .. Name_Len));\n \n+         declare\n+            Lang : constant Name_Id := Name_Find;\n          begin\n-            for Lang in Programming_Language loop\n-               if Args_String = Lang_Args (Lang).all then\n-                  OK := True;\n-                  Current_Language := Lang;\n-                  exit;\n-               end if;\n-            end loop;\n+            Current_Language := Language_Indexes.Get (Lang);\n \n-            if OK then\n-               Current_Processor := Compiler;\n-            else\n-               Osint.Fail (\"illegal option \"\"\", Arg, \"\"\"\");\n+            if Current_Language = No_Language_Index then\n+               Add_Language_Name (Lang);\n+               Current_Language := Last_Language_Index;\n             end if;\n+\n+            Current_Processor := Compiler;\n          end;\n \n       elsif Arg = \"-largs\" then\n@@ -4045,10 +4069,8 @@ package body Makegpr is\n          Osint.Write_Program_Name;\n          Write_Str (\" -P<project file> [opts]  [name] {\");\n \n-         for Lang in Programming_Language loop\n-            Write_Str (\"[-c\");\n-            Write_Str (Lang_Args (Lang).all);\n-            Write_Str (\"args opts] \");\n+         for Lang in First_Language_Indexes loop\n+            Write_Str (\"[-cargs:lang opts] \");\n          end loop;\n \n          Write_Str (\"[-largs opts] [-gargs opts]}\");\n@@ -4116,30 +4138,15 @@ package body Makegpr is\n          Write_Eol;\n          Write_Eol;\n \n-         --  Lines for -c*args\n-\n-         for Lang in Programming_Language loop\n-            declare\n-               Column : Positive := 13 + Lang_Args (Lang)'Length;\n-               --  \"  -cargs opts\" is the minimum and is 13 character long\n+         --  Line for -cargs\n \n-            begin\n-               Write_Str (\"  -c\");\n-               Write_Str (Lang_Args (Lang).all);\n-               Write_Str (\"args opts\");\n+         Write_Line (\"  -cargs opts     opts are passed to the Ada compiler\");\n \n-               loop\n-                  Write_Char (' ');\n-                  Column := Column + 1;\n-                  exit when Column >= 17;\n-               end loop;\n+         --  Line for -cargs:lang\n \n-               Write_Str (\"opts are passed to the \");\n-               Write_Str (Lang_Display_Names (Lang).all);\n-               Write_Str (\" compiler\");\n-               Write_Eol;\n-            end;\n-         end loop;\n+         Write_Line (\"  -cargs:<lang> opts\");\n+         Write_Line (\"     opts are passed to the compiler \" &\n+                     \"for language < lang > \");\n \n          --  Line for -largs\n "}, {"sha": "c33559c39681f9fdd58606274668de8310d35466", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -109,11 +109,11 @@ package body MLib.Prj is\n       Table_Increment      => 100);\n \n    package Objects_Htable is new GNAT.HTable.Simple_HTable\n-     (Header_Num => Com.Header_Num,\n+     (Header_Num => Header_Num,\n       Element    => Boolean,\n       No_Element => False,\n       Key        => Name_Id,\n-      Hash       => Com.Hash,\n+      Hash       => Hash,\n       Equal      => \"=\");\n \n    --  List of non-Ada object files\n@@ -155,42 +155,42 @@ package body MLib.Prj is\n    --  All the ALI file in the library\n \n    package Library_ALIs is new GNAT.HTable.Simple_HTable\n-     (Header_Num => Com.Header_Num,\n+     (Header_Num => Header_Num,\n       Element    => Boolean,\n       No_Element => False,\n       Key        => Name_Id,\n-      Hash       => Com.Hash,\n+      Hash       => Hash,\n       Equal      => \"=\");\n \n    --  The ALI files in the interface sets\n \n    package Interface_ALIs is new GNAT.HTable.Simple_HTable\n-     (Header_Num => Com.Header_Num,\n+     (Header_Num => Header_Num,\n       Element    => Boolean,\n       No_Element => False,\n       Key        => Name_Id,\n-      Hash       => Com.Hash,\n+      Hash       => Hash,\n       Equal      => \"=\");\n \n    --  The ALI files that have been processed to check if the corresponding\n    --  library unit is in the interface set.\n \n    package Processed_ALIs is new GNAT.HTable.Simple_HTable\n-     (Header_Num => Com.Header_Num,\n+     (Header_Num => Header_Num,\n       Element    => Boolean,\n       No_Element => False,\n       Key        => Name_Id,\n-      Hash       => Com.Hash,\n+      Hash       => Hash,\n       Equal      => \"=\");\n \n    --  The projects imported directly or indirectly.\n \n    package Processed_Projects is new GNAT.HTable.Simple_HTable\n-     (Header_Num => Com.Header_Num,\n+     (Header_Num => Header_Num,\n       Element    => Boolean,\n       No_Element => False,\n       Key        => Name_Id,\n-      Hash       => Com.Hash,\n+      Hash       => Hash,\n       Equal      => \"=\");\n \n    --  The library projects imported directly or indirectly."}, {"sha": "349a0d445d1077e9cec0b4214141e58e135ca46d", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -82,6 +82,8 @@ package body Prj.Attr is\n      \"lVmain#\" &\n      \"LVlanguages#\" &\n      \"SVmain_language#\" &\n+     \"LVada_roots#\" &\n+     \"SVexternally_built#\" &\n \n    --  package Naming\n \n@@ -184,6 +186,17 @@ package body Prj.Attr is\n      \"SVvcs_file_check#\" &\n      \"SVvcs_log_check#\" &\n \n+   --  package Language_Processing\n+\n+     \"Planguage_processing#\" &\n+     \"Lacompiler_driver#\" &\n+     \"Sacompiler_kind#\" &\n+     \"Ladependency_option#\" &\n+     \"Lacompute_dependency#\" &\n+     \"Lainclude_option#\" &\n+     \"Sabinder_driver#\" &\n+     \"SVdefault_linker#\" &\n+\n      \"#\";\n \n    Initialized : Boolean := False;"}, {"sha": "bc2583fc007baff482181e5963cea59d37d3751f", "filename": "gcc/ada/prj-com.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-com.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-com.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-com.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2000-2003 Free Software Foundation, Inc.       --\n+--             Copyright (C) 2000-2004 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,11 +33,6 @@ package body Prj.Com is\n    -- Hash --\n    ----------\n \n-   function Hash (Name : Name_Id) return Header_Num is\n-   begin\n-      return Hash (Get_Name_String (Name));\n-   end Hash;\n-\n    function Hash (Name : String_Id) return Header_Num is\n    begin\n       String_To_Name_Buffer (Name);"}, {"sha": "f5f692fc5bf68793ca61c703f2315ad2e2d1a8c7", "filename": "gcc/ada/prj-com.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-com.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-com.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-com.ads?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -84,12 +84,6 @@ package Prj.Com is\n       Table_Increment      => 100,\n       Table_Name           => \"Prj.Com.Units\");\n \n-   type Header_Num is range 0 .. 2047;\n-\n-   function Hash is new GNAT.HTable.Hash (Header_Num => Header_Num);\n-\n-   function Hash (Name : Name_Id) return Header_Num;\n-\n    function Hash (Name : String_Id) return Header_Num;\n \n    package Units_Htable is new GNAT.HTable.Simple_HTable"}, {"sha": "1ce1209b82b22c786575db2d941657803b084dce", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -703,7 +703,7 @@ package body Prj.Env is\n                  (File, \"pragma Source_File_Name_Project\");\n                Put_Line\n                  (File, \"  (Spec_File_Name  => \"\"*\" &\n-                  Namet.Get_Name_String (Data.Naming.Current_Spec_Suffix) &\n+                  Namet.Get_Name_String (Data.Naming.Ada_Spec_Suffix) &\n                   \"\"\",\");\n                Put_Line\n                  (File, \"   Casing          => \" &\n@@ -719,7 +719,7 @@ package body Prj.Env is\n                  (File, \"pragma Source_File_Name_Project\");\n                Put_Line\n                  (File, \"  (Body_File_Name  => \"\"*\" &\n-                  Namet.Get_Name_String (Data.Naming.Current_Body_Suffix) &\n+                  Namet.Get_Name_String (Data.Naming.Ada_Body_Suffix) &\n                   \"\"\",\");\n                Put_Line\n                  (File, \"   Casing          => \" &\n@@ -732,7 +732,7 @@ package body Prj.Env is\n                --  and maybe separate\n \n                if\n-                 Data.Naming.Current_Body_Suffix /= Data.Naming.Separate_Suffix\n+                 Data.Naming.Ada_Body_Suffix /= Data.Naming.Separate_Suffix\n                then\n                   Put_Line\n                     (File, \"pragma Source_File_Name_Project\");\n@@ -1186,10 +1186,10 @@ package body Prj.Env is\n \n       Extended_Spec_Name : String :=\n                              Name & Namet.Get_Name_String\n-                                      (Data.Naming.Current_Spec_Suffix);\n+                                      (Data.Naming.Ada_Spec_Suffix);\n       Extended_Body_Name : String :=\n                              Name & Namet.Get_Name_String\n-                                      (Data.Naming.Current_Body_Suffix);\n+                                      (Data.Naming.Ada_Body_Suffix);\n \n       Unit : Unit_Data;\n \n@@ -1674,10 +1674,10 @@ package body Prj.Env is\n \n       Extended_Spec_Name : String :=\n                              Name & Namet.Get_Name_String\n-                                     (Data.Naming.Current_Spec_Suffix);\n+                                     (Data.Naming.Ada_Spec_Suffix);\n       Extended_Body_Name : String :=\n                              Name & Namet.Get_Name_String\n-                                     (Data.Naming.Current_Body_Suffix);\n+                                     (Data.Naming.Ada_Body_Suffix);\n \n       First   : Unit_Id := Units.First;\n       Current : Unit_Id;\n@@ -1862,10 +1862,10 @@ package body Prj.Env is\n \n       Extended_Spec_Name : String :=\n                              Name & Namet.Get_Name_String\n-                                      (Data.Naming.Current_Spec_Suffix);\n+                                      (Data.Naming.Ada_Spec_Suffix);\n       Extended_Body_Name : String :=\n                              Name & Namet.Get_Name_String\n-                                      (Data.Naming.Current_Body_Suffix);\n+                                      (Data.Naming.Ada_Body_Suffix);\n \n       Unit : Unit_Data;\n "}, {"sha": "118534b7c33e8a2d7c501453cee4884acdab2ec1", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 108, "deletions": 2, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2000-2003 Free Software Foundation, Inc.       --\n+--             Copyright (C) 2000-2004 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,14 +26,28 @@\n \n with Namet;   use Namet;\n with Osint;   use Osint;\n-with Prj.Com; use Prj.Com;\n+with Sdefault;\n with Types;   use Types;\n \n with GNAT.HTable;\n with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n package body Prj.Ext is\n \n+   Ada_Project_Path : constant String := \"ADA_PROJECT_PATH\";\n+   --  Name of the env. variable that contains path name(s) of directories\n+   --  where project files may reside.\n+\n+   Prj_Path : constant String_Access := Getenv (Ada_Project_Path);\n+   --  The path name(s) of directories where project files may reside.\n+   --  May be empty.\n+\n+   No_Project_Default_Dir : constant String := \"-\";\n+\n+   Current_Project_Path : String_Access;\n+   --  The project path; initialized during elaboration of package\n+   --  Contains at least the current working directory.\n+\n    package Htable is new GNAT.HTable.Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => Name_Id,\n@@ -91,6 +105,15 @@ package body Prj.Ext is\n       return False;\n    end Check;\n \n+   ------------------\n+   -- Project_Path --\n+   ------------------\n+\n+   function Project_Path return String is\n+   begin\n+      return Current_Project_Path.all;\n+   end Project_Path;\n+\n    -----------\n    -- Reset --\n    -----------\n@@ -100,6 +123,16 @@ package body Prj.Ext is\n       Htable.Reset;\n    end Reset;\n \n+   ----------------------\n+   -- Set_Project_Path --\n+   ----------------------\n+\n+   procedure Set_Project_Path (New_Path : String) is\n+   begin\n+      Free (Current_Project_Path);\n+      Current_Project_Path := new String'(New_Path);\n+   end Set_Project_Path;\n+\n    --------------\n    -- Value_Of --\n    --------------\n@@ -144,4 +177,77 @@ package body Prj.Ext is\n       end;\n    end Value_Of;\n \n+begin\n+   --  Initialize Current_Project_Path during package elaboration\n+\n+   declare\n+      Add_Default_Dir : Boolean := True;\n+      First           : Positive;\n+      Last            : Positive;\n+\n+   begin\n+      --  The current directory is always first\n+\n+      Name_Len := 1;\n+      Name_Buffer (Name_Len) := '.';\n+\n+      --  If env. var. is defined and not empty, add its content\n+\n+      if Prj_Path.all /= \"\" then\n+         Name_Len := Name_Len + 1;\n+         Name_Buffer (Name_Len) := Path_Separator;\n+\n+         Add_Str_To_Name_Buffer (Prj_Path.all);\n+\n+         --  Scan the directory path to see if \"-\" is one of the directories.\n+         --  Remove each occurence of \"-\" and set Add_Default_Dir to False.\n+\n+         First := 3;\n+         loop\n+            while First <= Name_Len\n+              and then (Name_Buffer (First) = Path_Separator)\n+            loop\n+               First := First + 1;\n+            end loop;\n+\n+            exit when First > Name_Len;\n+\n+            Last := First;\n+\n+            while Last < Name_Len\n+              and then Name_Buffer (Last + 1) /= Path_Separator\n+            loop\n+               Last := Last + 1;\n+            end loop;\n+\n+            --  If the directory is \"-\", set Add_Default_Dir to False and\n+            --  remove from path.\n+\n+            if Name_Buffer (First .. Last) = No_Project_Default_Dir then\n+               Add_Default_Dir := False;\n+\n+               for J in Last + 1 .. Name_Len loop\n+                  Name_Buffer (J - No_Project_Default_Dir'Length - 1) :=\n+                    Name_Buffer (J);\n+               end loop;\n+\n+               Name_Len := Name_Len - No_Project_Default_Dir'Length - 1;\n+            end if;\n+\n+            First := Last + 1;\n+         end loop;\n+      end if;\n+\n+      --  Set the initial value of Current_Project_Path\n+\n+      if Add_Default_Dir then\n+         Current_Project_Path :=\n+           new String'(Name_Buffer (1 .. Name_Len) & Path_Separator &\n+                       Sdefault.Search_Dir_Prefix.all & \"..\" &\n+                       Directory_Separator & \"..\" & Directory_Separator &\n+                       \"..\" & Directory_Separator & \"gnat\");\n+      else\n+         Current_Project_Path := new String'(Name_Buffer (1 .. Name_Len));\n+      end if;\n+   end;\n end Prj.Ext;"}, {"sha": "8b7dbf7dbdefca02d3d5562fb558c7b7794e0fbd", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2000-2003 Free Software Foundation, Inc.       --\n+--             Copyright (C) 2000-2004 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,16 @@ with Types; use Types;\n \n package Prj.Ext is\n \n+   function Project_Path return String;\n+   --  Return the current value of the project path, either the value set\n+   --  during elaboration of the package or, if procedure Set_Project_Path has\n+   --  been called, the value set by the last call to Set_Project_Path.\n+\n+   procedure Set_Project_Path (New_Path : String);\n+   --  Give a new value to the project path. The new value New_Path should\n+   --  always start with the current directory (\".\") and the path separators\n+   --  should be the correct ones for the platform.\n+\n    procedure Add\n      (External_Name : String;\n       Value         : String);"}, {"sha": "b56bdcc56784628f4a5c12975ffc17c00d1e7862", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 2936, "deletions": 2850, "changes": 5786, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79"}, {"sha": "a8d4c9f3d5b2e4f13dc1ad279e0dd600071db01d", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -32,27 +32,23 @@ private package Prj.Nmsc is\n    --  procedures do (related to their names), rather than just an english\n    --  language summary of the implementation ???\n \n-   procedure Other_Languages_Check\n-     (Project      : Project_Id;\n-      Report_Error : Put_Line_Access);\n-   --  Call Language_Independent_Check\n-   --\n-   --  Check the naming scheme for the supported languages (c, c++, ...) other\n-   --  than Ada. Find the source files if any.\n-   --\n-   --  If Report_Error is null, use the standard error reporting mechanism\n-   --  (Errout). Otherwise, report errors using Report_Error.\n-\n-   procedure Ada_Check\n+   procedure Check\n      (Project      : Project_Id;\n       Report_Error : Put_Line_Access;\n       Follow_Links : Boolean);\n-   --  Call Language_Independent_Check\n+   --  Check the object directory and the source directories\n+   --\n+   --  Check the library attributes, including the library directory if any\n+   --\n+   --  Get the set of specification and implementation suffixes, if any\n    --\n    --  Check the naming scheme for Ada\n    --\n    --  Find the Ada source files if any\n    --\n+   --  Check the naming scheme for the supported languages (c, c++, ...) other\n+   --  than Ada. Find the source files if any.\n+   --\n    --  If Report_Error is null , use the standard error reporting mechanism\n    --  (Errout). Otherwise, report errors using Report_Error.\n    --\n@@ -61,16 +57,4 @@ private package Prj.Nmsc is\n    --  still valid if they point to a file which is outside of the project),\n    --  and that no directory has a name which is a valid source name.\n \n-   procedure Language_Independent_Check\n-     (Project      : Project_Id;\n-      Report_Error : Put_Line_Access);\n-   --  Check the object directory and the source directories\n-   --\n-   --  Check the library attributes, including the library directory if any\n-   --\n-   --  Get the set of specification and implementation suffixes, if any\n-   --\n-   --  If Report_Error is null , use the standard error reporting mechanism\n-   --  (Errout). Otherwise, report errors using Report_Error.\n-\n end Prj.Nmsc;"}, {"sha": "8ea1eac340a96bb189eedbfee199e39b6ba1ac50", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -43,8 +43,7 @@ package body Prj.Pars is\n    procedure Parse\n      (Project           : out Project_Id;\n       Project_File_Name : String;\n-      Packages_To_Check : String_List_Access := All_Packages;\n-      Process_Languages : Languages_Processed := Ada_Language)\n+      Packages_To_Check : String_List_Access := All_Packages)\n    is\n       Project_Tree      : Project_Node_Id := Empty_Node;\n       The_Project       : Project_Id      := No_Project;\n@@ -67,7 +66,6 @@ package body Prj.Pars is\n             Success           => Success,\n             From_Project_Node => Project_Tree,\n             Report_Error      => null,\n-            Process_Languages => Process_Languages,\n             Follow_Links      => Opt.Follow_Links);\n          Prj.Err.Finalize;\n "}, {"sha": "99800e39c243b8754004aa3cda2ce64fe4879a49", "filename": "gcc/ada/prj-pars.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-pars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-pars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.ads?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -24,24 +24,25 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Implements the parsing of project files.\n+--  Implements the parsing of project files\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n package Prj.Pars is\n \n    procedure Set_Verbosity (To : Verbosity);\n-   --  Set the verbosity when parsing the project files.\n+   --  Set the verbosity when parsing the project files\n \n    procedure Parse\n      (Project           : out Project_Id;\n       Project_File_Name : String;\n-      Packages_To_Check : String_List_Access := All_Packages;\n-      Process_Languages : Languages_Processed := Ada_Language);\n+      Packages_To_Check : String_List_Access := All_Packages);\n    --  Parse a project files and all its imported project files.\n+   --\n    --  If parsing is successful, Project_Id is the project ID\n    --  of the main project file; otherwise, Project_Id is set\n    --  to No_Project.\n+   --\n    --  Packages_To_Check indicates the packages where any unknown attribute\n    --  produces an error. For other packages, an unknown attribute produces\n    --  a warning."}, {"sha": "291fc23eb2accf8fa8f36c38e0192e9452f68e50", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 55, "deletions": 90, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -32,8 +32,8 @@ with Output;   use Output;\n with Prj.Com;  use Prj.Com;\n with Prj.Dect;\n with Prj.Err;  use Prj.Err;\n+with Prj.Ext;  use Prj.Ext;\n with Scans;    use Scans;\n-with Sdefault;\n with Sinput;   use Sinput;\n with Sinput.P; use Sinput.P;\n with Snames;\n@@ -54,18 +54,6 @@ package body Prj.Part is\n \n    Dir_Sep  : Character renames GNAT.OS_Lib.Directory_Separator;\n \n-   Project_Path : String_Access;\n-   --  The project path; initialized during package elaboration.\n-   --  Contains at least the current working directory.\n-\n-   Ada_Project_Path : constant String := \"ADA_PROJECT_PATH\";\n-   --  Name of the env. variable that contains path name(s) of directories\n-   --  where project files may reside.\n-\n-   Prj_Path : constant String_Access := Getenv (Ada_Project_Path);\n-   --  The path name(s) of directories where project files may reside.\n-   --  May be empty.\n-\n    type Extension_Origin is (None, Extending_Simple, Extending_All);\n    --  Type of parameter From_Extended for procedures Parse_Single_Project and\n    --  Post_Parse_Context_Clause. Extending_All means that we are parsing the\n@@ -449,7 +437,7 @@ package body Prj.Part is\n \n       if Current_Verbosity >= Medium then\n          Write_Str (\"ADA_PROJECT_PATH=\"\"\");\n-         Write_Str (Project_Path.all);\n+         Write_Str (Project_Path);\n          Write_Line (\"\"\"\");\n       end if;\n \n@@ -707,7 +695,7 @@ package body Prj.Part is\n                               Normalize_Pathname\n                                 (Imported_Path_Name,\n                                  Resolve_Links => True,\n-                                 Case_Sensitive => False);\n+                                 Case_Sensitive => True);\n \n             Withed_Project : Project_Node_Id := Empty_Node;\n \n@@ -763,6 +751,7 @@ package body Prj.Part is\n                   begin\n                      Name_Len := Resolved_Path'Length;\n                      Name_Buffer (1 .. Name_Len) := Resolved_Path;\n+                     Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n                      Canonical_Path_Name := Name_Find;\n \n                      for Index in 1 .. Project_Stack.Last loop\n@@ -922,73 +911,60 @@ package body Prj.Part is\n       Project_Stack.Table (Project_Stack.Last).Canonical_Path_Name :=\n         Canonical_Path_Name;\n \n-      --  Check if the project file has already been parsed.\n+      --  Check if the project file has already been parsed\n \n       while\n         A_Project_Name_And_Node /= Tree_Private_Part.No_Project_Name_And_Node\n       loop\n-         declare\n-            Path_Id : Name_Id := Path_Name_Of (A_Project_Name_And_Node.Node);\n-\n-         begin\n-            if Path_Id /= No_Name then\n-               Get_Name_String (Path_Id);\n-               Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n-               Path_Id := Name_Find;\n-            end if;\n-\n-            if Path_Id = Canonical_Path_Name then\n-               if Extended then\n+         if A_Project_Name_And_Node.Canonical_Path = Canonical_Path_Name then\n+            if Extended then\n \n-                  if A_Project_Name_And_Node.Extended then\n-                     Error_Msg\n-                       (\"cannot extend the same project file several times\",\n-                        Token_Ptr);\n-\n-                  else\n-                     Error_Msg\n-                       (\"cannot extend an already imported project file\",\n-                        Token_Ptr);\n-                  end if;\n+               if A_Project_Name_And_Node.Extended then\n+                  Error_Msg\n+                    (\"cannot extend the same project file several times\",\n+                     Token_Ptr);\n+               else\n+                  Error_Msg\n+                    (\"cannot extend an already imported project file\",\n+                     Token_Ptr);\n+               end if;\n \n-               elsif A_Project_Name_And_Node.Extended then\n-                  Extends_All :=\n-                    Is_Extending_All (A_Project_Name_And_Node.Node);\n+            elsif A_Project_Name_And_Node.Extended then\n+               Extends_All :=\n+                 Is_Extending_All (A_Project_Name_And_Node.Node);\n \n-                  --  If the imported project is an extended project A,\n-                  --  and we are in an extended project, replace A with the\n-                  --  ultimate project extending A.\n+               --  If the imported project is an extended project A,\n+               --  and we are in an extended project, replace A with the\n+               --  ultimate project extending A.\n \n-                  if From_Extended /= None then\n-                     declare\n-                        Decl : Project_Node_Id :=\n-                                 Project_Declaration_Of\n-                                   (A_Project_Name_And_Node.Node);\n+               if From_Extended /= None then\n+                  declare\n+                     Decl : Project_Node_Id :=\n+                              Project_Declaration_Of\n+                                (A_Project_Name_And_Node.Node);\n \n-                        Prj : Project_Node_Id :=\n-                                Extending_Project_Of (Decl);\n+                     Prj  : Project_Node_Id := Extending_Project_Of (Decl);\n \n-                     begin\n-                        loop\n-                           Decl := Project_Declaration_Of (Prj);\n-                           exit when Extending_Project_Of (Decl) = Empty_Node;\n-                           Prj := Extending_Project_Of (Decl);\n-                        end loop;\n+                  begin\n+                     loop\n+                        Decl := Project_Declaration_Of (Prj);\n+                        exit when Extending_Project_Of (Decl) = Empty_Node;\n+                        Prj := Extending_Project_Of (Decl);\n+                     end loop;\n \n-                        A_Project_Name_And_Node.Node := Prj;\n-                     end;\n-                  else\n-                     Error_Msg\n-                       (\"cannot import an already extended project file\",\n-                        Token_Ptr);\n-                  end if;\n+                     A_Project_Name_And_Node.Node := Prj;\n+                  end;\n+               else\n+                  Error_Msg\n+                    (\"cannot import an already extended project file\",\n+                     Token_Ptr);\n                end if;\n-\n-               Project := A_Project_Name_And_Node.Node;\n-               Project_Stack.Decrement_Last;\n-               return;\n             end if;\n-         end;\n+\n+            Project := A_Project_Name_And_Node.Node;\n+            Project_Stack.Decrement_Last;\n+            return;\n+         end if;\n \n          A_Project_Name_And_Node := Tree_Private_Part.Projects_Htable.Get_Next;\n       end loop;\n@@ -1037,7 +1013,7 @@ package body Prj.Part is\n       Project := Default_Project_Node (Of_Kind => N_Project);\n       Project_Stack.Table (Project_Stack.Last).Id := Project;\n       Set_Directory_Of (Project, Project_Directory);\n-      Set_Path_Name_Of (Project, Canonical_Path_Name);\n+      Set_Path_Name_Of (Project, Normed_Path_Name);\n       Set_Location_Of (Project, Token_Ptr);\n \n       Expect (Tok_Project, \"PROJECT\");\n@@ -1052,7 +1028,6 @@ package body Prj.Part is\n       --  Clear the Buffer\n \n       Buffer_Last := 0;\n-\n       loop\n          Expect (Tok_Identifier, \"identifier\");\n \n@@ -1201,9 +1176,10 @@ package body Prj.Part is\n \n                Tree_Private_Part.Projects_Htable.Set\n                  (K => Name_Of_Project,\n-                  E => (Name     => Name_Of_Project,\n-                        Node     => Project,\n-                        Extended => Extended));\n+                  E => (Name           => Name_Of_Project,\n+                        Node           => Project,\n+                        Canonical_Path => Canonical_Path_Name,\n+                        Extended       => Extended));\n             end if;\n          end;\n \n@@ -1370,7 +1346,7 @@ package body Prj.Part is\n          Project_Declaration : Project_Node_Id := Empty_Node;\n \n       begin\n-         --  No need to Scan past \"is\", Prj.Dect.Parse will do it.\n+         --  No need to Scan past \"is\", Prj.Dect.Parse will do it\n \n          Prj.Dect.Parse\n            (Declarations    => Project_Declaration,\n@@ -1630,7 +1606,7 @@ package body Prj.Part is\n            Locate_Regular_File\n            (File_Name => Directory & Directory_Separator &\n               Project_File_Name & Project_File_Extension,\n-            Path      => Project_Path.all);\n+            Path      => Project_Path);\n \n          --  Then we try <directory>/<file_name>\n \n@@ -1646,7 +1622,7 @@ package body Prj.Part is\n               Locate_Regular_File\n               (File_Name => Directory & Directory_Separator &\n                  Project_File_Name,\n-               Path      => Project_Path.all);\n+               Path      => Project_Path);\n          end if;\n       end if;\n \n@@ -1663,7 +1639,7 @@ package body Prj.Part is\n          Result :=\n            Locate_Regular_File\n            (File_Name => Project_File_Name & Project_File_Extension,\n-            Path      => Project_Path.all);\n+            Path      => Project_Path);\n       end if;\n \n       if Result = null then\n@@ -1678,7 +1654,7 @@ package body Prj.Part is\n          Result :=\n            Locate_Regular_File\n            (File_Name => Project_File_Name,\n-            Path      => Project_Path.all);\n+            Path      => Project_Path);\n       end if;\n \n       --  If we cannot find the project file, we return an empty string\n@@ -1700,15 +1676,4 @@ package body Prj.Part is\n       end if;\n    end Project_Path_Name_Of;\n \n-begin\n-   --  Initialize Project_Path during package elaboration\n-\n-   if Prj_Path.all = \"\" then\n-      Project_Path :=\n-        new String'(\".\" & Path_Separator & Sdefault.Search_Dir_Prefix.all &\n-                    \"..\" & Directory_Separator & \"..\" & Directory_Separator &\n-                    \"..\" & Directory_Separator & \"gnat\");\n-   else\n-      Project_Path := new String'(\".\" & Path_Separator & Prj_Path.all);\n-   end if;\n end Prj.Part;"}, {"sha": "7adcd08dac73ebd4b095c04c839099220af00f16", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 32, "deletions": 45, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -30,7 +30,6 @@ with Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Attr; use Prj.Attr;\n-with Prj.Com;  use Prj.Com;\n with Prj.Err;  use Prj.Err;\n with Prj.Ext;  use Prj.Ext;\n with Prj.Nmsc; use Prj.Nmsc;\n@@ -64,12 +63,10 @@ package body Prj.Proc is\n    --  values to the package or project with declarations Decl.\n \n    procedure Check\n-     (Project           : in out Project_Id;\n-      Process_Languages : Languages_Processed;\n-      Follow_Links      : Boolean);\n+     (Project      : in out Project_Id;\n+      Follow_Links : Boolean);\n    --  Set all projects to not checked, then call Recursive_Check for the\n    --  main project Project. Project is set to No_Project if errors occurred.\n-   --  See Prj.Nmsc.Ada_Check for information on Follow_Links.\n \n    function Expression\n      (Project           : Project_Id;\n@@ -111,13 +108,11 @@ package body Prj.Proc is\n    --  Then process the declarative items of the project.\n \n    procedure Recursive_Check\n-     (Project           : Project_Id;\n-      Process_Languages : Languages_Processed;\n-      Follow_Links      : Boolean);\n+     (Project      : Project_Id;\n+      Follow_Links : Boolean);\n    --  If Project is not marked as checked, mark it as checked, call\n    --  Check_Naming_Scheme for the project, then call itself for a\n    --  possible extended project and all the imported projects of Project.\n-   --  See Prj.Nmsc.Ada_Check for information on Follow_Links\n \n    ---------\n    -- Add --\n@@ -127,7 +122,7 @@ package body Prj.Proc is\n    begin\n       if To_Exp = Types.No_Name or else To_Exp = Empty_String then\n \n-         --  To_Exp is nil or empty. The result is Str.\n+         --  To_Exp is nil or empty. The result is Str\n \n          To_Exp := Str;\n \n@@ -213,18 +208,17 @@ package body Prj.Proc is\n    -----------\n \n    procedure Check\n-     (Project           : in out Project_Id;\n-      Process_Languages : Languages_Processed;\n-      Follow_Links      : Boolean) is\n+     (Project      : in out Project_Id;\n+      Follow_Links : Boolean)\n+   is\n    begin\n       --  Make sure that all projects are marked as not checked\n \n       for Index in 1 .. Projects.Last loop\n          Projects.Table (Index).Checked := False;\n       end loop;\n \n-      Recursive_Check (Project, Process_Languages, Follow_Links);\n-\n+      Recursive_Check (Project, Follow_Links);\n    end Check;\n \n    ----------------\n@@ -248,7 +242,7 @@ package body Prj.Proc is\n       --  The returned result\n \n       Last : String_List_Id := Nil_String;\n-      --  Reference to the last string elements in Result, when Kind is List.\n+      --  Reference to the last string elements in Result, when Kind is List\n \n    begin\n       Result.Project := Project;\n@@ -282,8 +276,7 @@ package body Prj.Proc is\n \n                      if Last = Nil_String then\n \n-                        --  This can happen in an expression such as\n-                        --  () & \"toto\"\n+                        --  This can happen in an expression like () & \"toto\"\n \n                         Result.Values := String_Elements.Last;\n \n@@ -300,7 +293,6 @@ package body Prj.Proc is\n                         Location => Location_Of (The_Current_Term),\n                         Flag     => False,\n                         Next     => Nil_String);\n-\n                end case;\n \n             when N_Literal_String_List =>\n@@ -856,7 +848,6 @@ package body Prj.Proc is\n       Success           : out Boolean;\n       From_Project_Node : Project_Node_Id;\n       Report_Error      : Put_Line_Access;\n-      Process_Languages : Languages_Processed := Ada_Language;\n       Follow_Links      : Boolean := True)\n    is\n       Obj_Dir    : Name_Id;\n@@ -881,7 +872,7 @@ package body Prj.Proc is\n          Extended_By       => No_Project);\n \n       if Project /= No_Project then\n-         Check (Project, Process_Languages, Follow_Links);\n+         Check (Project, Follow_Links);\n       end if;\n \n       --  If main project is an extending all project, set the object\n@@ -922,15 +913,20 @@ package body Prj.Proc is\n                Extending2 := Extending;\n \n                while Extending2 /= No_Project loop\n-                  if ((Process_Languages = Ada_Language\n-                       and then\n-                       Projects.Table (Extending2).Ada_Sources_Present)\n-                      or else\n-                       (Process_Languages = Other_Languages\n-                        and then\n-                        Projects.Table (Extending2).Other_Sources_Present))\n+\n+--  why is this code commented out ???\n+\n+--                if ((Process_Languages = Ada_Language\n+--                     and then\n+--                       Projects.Table (Extending2).Ada_Sources_Present)\n+--                    or else\n+--                      (Process_Languages = Other_Languages\n+--                       and then\n+--                         Projects.Table (Extending2).Other_Sources_Present))\n+\n+                  if Projects.Table (Extending2).Ada_Sources_Present\n                     and then\n-                      Projects.Table (Extending2).Object_Directory = Obj_Dir\n+                     Projects.Table (Extending2).Object_Directory = Obj_Dir\n                   then\n                      if Projects.Table (Extending2).Virtual then\n                         Error_Msg_Name_1 := Projects.Table (Proj).Name;\n@@ -1267,9 +1263,11 @@ package body Prj.Proc is\n                         --  Copy each array element\n \n                         while Orig_Element /= No_Array_Element loop\n-                           --  If it is the first element ...\n+\n+                           --  Case of first element\n \n                            if Prev_Element = No_Array_Element then\n+\n                               --  And there is no array element declared yet,\n                               --  create a new first array element.\n \n@@ -1324,6 +1322,7 @@ package body Prj.Proc is\n                            Prev_Element := New_Element;\n \n                            --  Go to the next element in the original array\n+\n                            Orig_Element :=\n                              Array_Elements.Table (Orig_Element).Next;\n                         end loop;\n@@ -1804,7 +1803,6 @@ package body Prj.Proc is\n \n    procedure Recursive_Check\n      (Project           : Project_Id;\n-      Process_Languages : Languages_Processed;\n       Follow_Links      : Boolean)\n    is\n       Data                  : Project_Data;\n@@ -1827,15 +1825,15 @@ package body Prj.Proc is\n          --  Call itself for a possible extended project.\n          --  (if there is no extended project, then nothing happens).\n \n-         Recursive_Check (Data.Extends, Process_Languages, Follow_Links);\n+         Recursive_Check (Data.Extends, Follow_Links);\n \n          --  Call itself for all imported projects\n \n          Imported_Project_List := Data.Imported_Projects;\n          while Imported_Project_List /= Empty_Project_List loop\n             Recursive_Check\n               (Project_Lists.Table (Imported_Project_List).Project,\n-               Process_Languages, Follow_Links);\n+               Follow_Links);\n             Imported_Project_List :=\n               Project_Lists.Table (Imported_Project_List).Next;\n          end loop;\n@@ -1846,18 +1844,7 @@ package body Prj.Proc is\n             Write_Line (\"\"\"\");\n          end if;\n \n-         case Process_Languages is\n-            when Ada_Language =>\n-               Prj.Nmsc.Ada_Check (Project, Error_Report, Follow_Links);\n-\n-            when Other_Languages =>\n-               Prj.Nmsc.Other_Languages_Check (Project, Error_Report);\n-\n-            when All_Languages =>\n-               Prj.Nmsc.Ada_Check (Project, Error_Report, Follow_Links);\n-               Prj.Nmsc.Other_Languages_Check (Project, Error_Report);\n-\n-         end case;\n+         Prj.Nmsc.Check (Project, Error_Report, Follow_Links);\n       end if;\n    end Recursive_Check;\n "}, {"sha": "dae791b27d61eb3829f4438b0c2dab57a1d45321", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -37,7 +37,6 @@ package Prj.Proc is\n       Success           : out Boolean;\n       From_Project_Node : Project_Node_Id;\n       Report_Error      : Put_Line_Access;\n-      Process_Languages : Languages_Processed := Ada_Language;\n       Follow_Links      : Boolean := True);\n    --  Process a project file tree into project file data structures.\n    --  If Report_Error is null, use the error reporting mechanism."}, {"sha": "e50be5d78783eb0f41eff8d38bfc34acfeff7bcb", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -24,12 +24,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package defines the structure of the Project File tree.\n+--  This package defines the structure of the Project File tree\n \n with GNAT.HTable;\n \n with Prj.Attr; use Prj.Attr;\n-with Prj.Com;  use Prj.Com;\n with Table;    use Table;\n with Types;    use Types;\n \n@@ -150,7 +149,7 @@ package Prj.Tree is\n    --  this node.\n \n    procedure Remove_Next_End_Node;\n-   --  Remove the top of the end node stack.\n+   --  Remove the top of the end node stack\n \n    ------------------------\n    -- Comment Processing --\n@@ -172,13 +171,13 @@ package Prj.Tree is\n    --  A table to store the comments that may be stored is the tree\n \n    procedure Scan;\n-   --  Scan the tokens and accumulate comments.\n+   --  Scan the tokens and accumulate comments\n \n    type Comment_Location is\n      (Before, After, Before_End, After_End, End_Of_Line);\n \n    procedure Add_Comments (To : Project_Node_Id; Where : Comment_Location);\n-   --  Add comments to this node.\n+   --  Add comments to this node\n \n    ----------------------\n    -- Access Functions --\n@@ -235,7 +234,7 @@ package Prj.Tree is\n \n    function Directory_Of (Node : Project_Node_Id) return Name_Id;\n    pragma Inline (Directory_Of);\n-   --  Only valid for N_Project nodes.\n+   --  Only valid for N_Project nodes\n \n    function Expression_Kind_Of (Node : Project_Node_Id) return Variable_Kind;\n    pragma Inline (Expression_Kind_Of);\n@@ -263,7 +262,7 @@ package Prj.Tree is\n \n    function Path_Name_Of (Node : Project_Node_Id) return Name_Id;\n    pragma Inline (Path_Name_Of);\n-   --  Only valid for N_Project and N_With_Clause nodes.\n+   --  Only valid for N_Project and N_With_Clause nodes\n \n    function String_Value_Of (Node : Project_Node_Id) return Name_Id;\n    pragma Inline (String_Value_Of);\n@@ -1046,12 +1045,18 @@ package Prj.Tree is\n          Node : Project_Node_Id;\n          --  Node of the project in table Project_Nodes\n \n+         Canonical_Path : Name_Id;\n+         --  Resolved and canonical path of the project file\n+\n          Extended : Boolean;\n          --  True when the project is being extended by another project\n       end record;\n \n       No_Project_Name_And_Node : constant Project_Name_And_Node :=\n-        (Name => No_Name, Node => Empty_Node, Extended => True);\n+        (Name           => No_Name,\n+         Node           => Empty_Node,\n+         Canonical_Path => No_Name,\n+         Extended       => True);\n \n       package Projects_Htable is new GNAT.HTable.Simple_HTable\n         (Header_Num => Header_Num,"}, {"sha": "a0709cbb8b15846d13440a60759abbb71884036a", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -107,12 +107,12 @@ package body Prj.Util is\n       Body_Append : constant String := Get_Name_String\n                                           (Projects.Table\n                                             (Project).\n-                                              Naming.Current_Body_Suffix);\n+                                              Naming.Ada_Body_Suffix);\n \n       Spec_Append : constant String := Get_Name_String\n                                           (Projects.Table\n                                             (Project).\n-                                               Naming.Current_Spec_Suffix);\n+                                               Naming.Ada_Spec_Suffix);\n \n    begin\n       if Builder_Package /= No_Package then\n@@ -131,9 +131,9 @@ package body Prj.Util is\n                           Projects.Table (Project).Naming;\n \n                Spec_Suffix : constant String :=\n-                               Get_Name_String (Naming.Current_Spec_Suffix);\n+                               Get_Name_String (Naming.Ada_Spec_Suffix);\n                Body_Suffix : constant String :=\n-                               Get_Name_String (Naming.Current_Body_Suffix);\n+                               Get_Name_String (Naming.Ada_Body_Suffix);\n \n                Truncated : Boolean := False;\n "}, {"sha": "602d3a5c550a3dd0e05e6856b6bf9778f9d05e49", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 314, "deletions": 25, "changes": 339, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -27,6 +27,7 @@\n with Ada.Characters.Handling; use Ada.Characters.Handling;\n \n with Namet;    use Namet;\n+with Output;   use Output;\n with Osint;    use Osint;\n with Prj.Attr;\n with Prj.Com;\n@@ -36,12 +37,15 @@ with Scans;    use Scans;\n with Snames;   use Snames;\n with Uintp;    use Uintp;\n \n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n+with GNAT.Case_Util; use GNAT.Case_Util;\n+with GNAT.OS_Lib;    use GNAT.OS_Lib;\n \n package body Prj is\n \n    The_Empty_String : Name_Id;\n \n+   Name_C_Plus_Plus : Name_Id;\n+\n    subtype Known_Casing is Casing_Type range All_Upper_Case .. Mixed_Case;\n \n    The_Casing_Images : constant array (Known_Casing) of String_Access :=\n@@ -55,15 +59,16 @@ package body Prj is\n      First_Name_Id + Character'Pos ('-');\n \n    Std_Naming_Data : Naming_Data :=\n-     (Current_Language          => No_Name,\n-      Dot_Replacement           => Standard_Dot_Replacement,\n+     (Dot_Replacement           => Standard_Dot_Replacement,\n       Dot_Repl_Loc              => No_Location,\n       Casing                    => All_Lower_Case,\n       Spec_Suffix               => No_Array_Element,\n-      Current_Spec_Suffix       => No_Name,\n+      Ada_Spec_Suffix           => No_Name,\n       Spec_Suffix_Loc           => No_Location,\n+      Impl_Suffixes             => No_Impl_Suffixes,\n+      Supp_Suffixes             => No_Supp_Language_Index,\n       Body_Suffix               => No_Array_Element,\n-      Current_Body_Suffix       => No_Name,\n+      Ada_Body_Suffix           => No_Name,\n       Body_Suffix_Loc           => No_Location,\n       Separate_Suffix           => No_Name,\n       Sep_Suffix_Loc            => No_Location,\n@@ -73,8 +78,9 @@ package body Prj is\n       Implementation_Exceptions => No_Array_Element);\n \n    Project_Empty : constant Project_Data :=\n-     (Languages                      => No_Languages,\n-      Impl_Suffixes                  => No_Impl_Suffixes,\n+     (Externally_Built               => False,\n+      Languages                      => No_Languages,\n+      Supp_Languages                 => No_Supp_Language_Index,\n       First_Referred_By              => No_Project,\n       Name                           => No_Name,\n       Path_Name                      => No_Name,\n@@ -114,6 +120,10 @@ package body Prj is\n       Extends                        => No_Project,\n       Extended_By                    => No_Project,\n       Naming                         => Std_Naming_Data,\n+      First_Language_Processing      => Default_First_Language_Processing_Data,\n+      Supp_Language_Processing       => No_Supp_Language_Index,\n+      Default_Linker                 => No_Name,\n+      Default_Linker_Path            => No_Name,\n       Decl                           => No_Declarations,\n       Imported_Projects              => Empty_Project_List,\n       Ada_Include_Path               => null,\n@@ -131,6 +141,18 @@ package body Prj is\n       Depth                          => 0,\n       Unkept_Comments                => False);\n \n+   -----------------------\n+   -- Add_Language_Name --\n+   -----------------------\n+\n+   procedure Add_Language_Name (Name : Name_Id) is\n+   begin\n+      Last_Language_Index := Last_Language_Index + 1;\n+      Language_Indexes.Set (Name, Last_Language_Index);\n+      Language_Names.Increment_Last;\n+      Language_Names.Table (Last_Language_Index) := Name;\n+   end Add_Language_Name;\n+\n    -------------------\n    -- Add_To_Buffer --\n    -------------------\n@@ -155,6 +177,17 @@ package body Prj is\n       Buffer_Last := Buffer_Last + S'Length;\n    end Add_To_Buffer;\n \n+   ---------------------------\n+   -- Display_Language_Name --\n+   ---------------------------\n+\n+   procedure Display_Language_Name (Language : Language_Index) is\n+   begin\n+      Get_Name_String (Language_Names.Table (Language));\n+      To_Upper (Name_Buffer (1 .. 1));\n+      Write_Str (Name_Buffer (1 .. Name_Len));\n+   end Display_Language_Name;\n+\n    -------------------\n    -- Empty_Project --\n    -------------------\n@@ -195,9 +228,12 @@ package body Prj is\n    is\n \n       procedure Check (Project : Project_Id);\n-      --  Check if a project has already been seen.\n-      --  If not seen, mark it as seen, call Action,\n-      --  and check all its imported projects.\n+      --  Check if a project has already been seen. If not seen, mark it as\n+      --  Seen, Call Action, and check all its imported projects.\n+\n+      -----------\n+      -- Check --\n+      -----------\n \n       procedure Check (Project : Project_Id) is\n          List : Project_List;\n@@ -215,6 +251,8 @@ package body Prj is\n          end if;\n       end Check;\n \n+   --  Start of procecessing for For_Every_Project_Imported\n+\n    begin\n       for Project in Projects.First .. Projects.Last loop\n          Projects.Table (Project).Seen := False;\n@@ -223,6 +261,15 @@ package body Prj is\n       Check (Project => By);\n    end For_Every_Project_Imported;\n \n+   ----------\n+   -- Hash --\n+   ----------\n+\n+   function Hash (Name : Name_Id) return Header_Num is\n+   begin\n+      return Hash (Get_Name_String (Name));\n+   end Hash;\n+\n    -----------\n    -- Image --\n    -----------\n@@ -253,18 +300,12 @@ package body Prj is\n          Name_Len := 1;\n          Name_Buffer (1) := '/';\n          Slash := Name_Find;\n+         Name_Len := 3;\n+         Name_Buffer (1 .. 3) := \"c++\";\n+         Name_C_Plus_Plus := Name_Find;\n \n-         for Lang in Programming_Language loop\n-            Name_Len := Lang_Names (Lang)'Length;\n-            Name_Buffer (1 .. Name_Len) := Lang_Names (Lang).all;\n-            Lang_Name_Ids (Lang) := Name_Find;\n-            Name_Len := Lang_Suffixes (Lang)'Length;\n-            Name_Buffer (1 .. Name_Len) := Lang_Suffixes (Lang).all;\n-            Lang_Suffix_Ids (Lang) := Name_Find;\n-         end loop;\n-\n-         Std_Naming_Data.Current_Spec_Suffix := Default_Ada_Spec_Suffix;\n-         Std_Naming_Data.Current_Body_Suffix := Default_Ada_Body_Suffix;\n+         Std_Naming_Data.Ada_Spec_Suffix := Default_Ada_Spec_Suffix;\n+         Std_Naming_Data.Ada_Body_Suffix := Default_Ada_Body_Suffix;\n          Std_Naming_Data.Separate_Suffix     := Default_Ada_Body_Suffix;\n          Register_Default_Naming_Scheme\n            (Language            => Name_Ada,\n@@ -275,9 +316,91 @@ package body Prj is\n          Set_Name_Table_Byte (Name_Project,  Token_Type'Pos (Tok_Project));\n          Set_Name_Table_Byte (Name_Extends,  Token_Type'Pos (Tok_Extends));\n          Set_Name_Table_Byte (Name_External, Token_Type'Pos (Tok_External));\n+\n+         Language_Indexes.Reset;\n+         Last_Language_Index := No_Language_Index;\n+         Language_Names.Init;\n+         Add_Language_Name (Name_Ada);\n+         Add_Language_Name (Name_C);\n+         Add_Language_Name (Name_C_Plus_Plus);\n       end if;\n    end Initialize;\n \n+   ----------------\n+   -- Is_Present --\n+   ----------------\n+\n+   function Is_Present\n+     (Language   : Language_Index;\n+      In_Project : Project_Data) return Boolean\n+   is\n+   begin\n+      case Language is\n+         when No_Language_Index =>\n+            return False;\n+\n+         when First_Language_Indexes =>\n+            return In_Project.Languages (Language);\n+\n+         when others =>\n+            declare\n+               Supp : Supp_Language;\n+               Supp_Index : Supp_Language_Index := In_Project.Supp_Languages;\n+\n+            begin\n+               while Supp_Index /= No_Supp_Language_Index loop\n+                  Supp := Present_Languages.Table (Supp_Index);\n+\n+                  if Supp.Index = Language then\n+                     return Supp.Present;\n+                  end if;\n+\n+                  Supp_Index := Supp.Next;\n+               end loop;\n+\n+               return False;\n+            end;\n+      end case;\n+   end Is_Present;\n+\n+   ---------------------------------\n+   -- Language_Processing_Data_Of --\n+   ---------------------------------\n+\n+   function Language_Processing_Data_Of\n+     (Language   : Language_Index;\n+      In_Project : Project_Data) return Language_Processing_Data\n+   is\n+   begin\n+      case Language is\n+         when No_Language_Index =>\n+            return Default_Language_Processing_Data;\n+\n+         when First_Language_Indexes =>\n+            return In_Project.First_Language_Processing (Language);\n+\n+         when others =>\n+            declare\n+               Supp : Supp_Language_Data;\n+               Supp_Index : Supp_Language_Index :=\n+                 In_Project.Supp_Language_Processing;\n+\n+            begin\n+               while Supp_Index /= No_Supp_Language_Index loop\n+                  Supp := Supp_Languages.Table (Supp_Index);\n+\n+                  if Supp.Index = Language then\n+                     return Supp.Data;\n+                  end if;\n+\n+                  Supp_Index := Supp.Next;\n+               end loop;\n+\n+               return Default_Language_Processing_Data;\n+            end;\n+      end case;\n+   end Language_Processing_Data_Of;\n+\n    ------------------------------------\n    -- Register_Default_Naming_Scheme --\n    ------------------------------------\n@@ -398,17 +521,145 @@ package body Prj is\n    ------------------------\n \n    function Same_Naming_Scheme\n-     (Left, Right : Naming_Data)\n-      return        Boolean\n+     (Left, Right : Naming_Data) return Boolean\n    is\n    begin\n       return Left.Dot_Replacement = Right.Dot_Replacement\n         and then Left.Casing = Right.Casing\n-        and then Left.Current_Spec_Suffix = Right.Current_Spec_Suffix\n-        and then Left.Current_Body_Suffix = Right.Current_Body_Suffix\n+        and then Left.Ada_Spec_Suffix = Right.Ada_Spec_Suffix\n+        and then Left.Ada_Body_Suffix = Right.Ada_Body_Suffix\n         and then Left.Separate_Suffix = Right.Separate_Suffix;\n    end Same_Naming_Scheme;\n \n+   ---------\n+   -- Set --\n+   ---------\n+\n+   procedure Set\n+     (Language   : Language_Index;\n+      Present    : Boolean;\n+      In_Project : in out Project_Data)\n+   is\n+   begin\n+      case Language is\n+         when No_Language_Index =>\n+            null;\n+\n+         when First_Language_Indexes =>\n+            In_Project.Languages (Language) := Present;\n+\n+         when others =>\n+            declare\n+               Supp : Supp_Language;\n+               Supp_Index : Supp_Language_Index := In_Project.Supp_Languages;\n+\n+            begin\n+               while Supp_Index /= No_Supp_Language_Index loop\n+                  Supp := Present_Languages.Table (Supp_Index);\n+\n+                  if Supp.Index = Language then\n+                     Present_Languages.Table (Supp_Index).Present := Present;\n+                     return;\n+                  end if;\n+\n+                  Supp_Index := Supp.Next;\n+               end loop;\n+\n+               Supp := (Index => Language, Present => Present,\n+                        Next  => In_Project.Supp_Languages);\n+               Present_Languages.Increment_Last;\n+               Supp_Index := Present_Languages.Last;\n+               Present_Languages.Table (Supp_Index) := Supp;\n+               In_Project.Supp_Languages := Supp_Index;\n+            end;\n+      end case;\n+   end Set;\n+\n+   procedure Set\n+     (Language_Processing : in Language_Processing_Data;\n+      For_Language        : Language_Index;\n+      In_Project          : in out Project_Data)\n+   is\n+   begin\n+      case For_Language is\n+         when No_Language_Index =>\n+            null;\n+\n+         when First_Language_Indexes =>\n+            In_Project.First_Language_Processing (For_Language) :=\n+              Language_Processing;\n+\n+         when others =>\n+            declare\n+               Supp : Supp_Language_Data;\n+               Supp_Index : Supp_Language_Index :=\n+                 In_Project.Supp_Language_Processing;\n+\n+            begin\n+               while Supp_Index /= No_Supp_Language_Index loop\n+                  Supp := Supp_Languages.Table (Supp_Index);\n+\n+                  if Supp.Index = For_Language then\n+                     Supp_Languages.Table (Supp_Index).Data :=\n+                       Language_Processing;\n+                     return;\n+                  end if;\n+\n+                  Supp_Index := Supp.Next;\n+               end loop;\n+\n+               Supp := (Index => For_Language, Data => Language_Processing,\n+                        Next  => In_Project.Supp_Language_Processing);\n+               Supp_Languages.Increment_Last;\n+               Supp_Index := Supp_Languages.Last;\n+               Supp_Languages.Table (Supp_Index) := Supp;\n+               In_Project.Supp_Language_Processing := Supp_Index;\n+            end;\n+      end case;\n+   end Set;\n+\n+   procedure Set\n+     (Suffix       : Name_Id;\n+      For_Language : Language_Index;\n+      In_Project   : in out Project_Data)\n+   is\n+   begin\n+      case For_Language is\n+         when No_Language_Index =>\n+            null;\n+\n+         when First_Language_Indexes =>\n+            In_Project.Naming.Impl_Suffixes (For_Language) := Suffix;\n+\n+         when others =>\n+            declare\n+               Supp : Supp_Suffix;\n+               Supp_Index : Supp_Language_Index :=\n+                 In_Project.Naming.Supp_Suffixes;\n+\n+            begin\n+               while Supp_Index /= No_Supp_Language_Index loop\n+                  Supp := Supp_Suffix_Table.Table (Supp_Index);\n+\n+                  if Supp.Index = For_Language then\n+                     Supp_Suffix_Table.Table (Supp_Index).Suffix := Suffix;\n+                     return;\n+                  end if;\n+\n+                  Supp_Index := Supp.Next;\n+               end loop;\n+\n+               Supp := (Index => For_Language, Suffix => Suffix,\n+                        Next  => In_Project.Naming.Supp_Suffixes);\n+               Supp_Suffix_Table.Increment_Last;\n+               Supp_Index := Supp_Suffix_Table.Last;\n+               Supp_Suffix_Table.Table (Supp_Index) := Supp;\n+               In_Project.Naming.Supp_Suffixes := Supp_Index;\n+            end;\n+      end case;\n+   end Set;\n+\n+\n    --------------------------\n    -- Standard_Naming_Data --\n    --------------------------\n@@ -419,6 +670,44 @@ package body Prj is\n       return Std_Naming_Data;\n    end Standard_Naming_Data;\n \n+   ---------------\n+   -- Suffix_Of --\n+   ---------------\n+\n+   function Suffix_Of\n+     (Language   : Language_Index;\n+      In_Project : Project_Data) return Name_Id\n+   is\n+   begin\n+      case Language is\n+         when No_Language_Index =>\n+            return No_Name;\n+\n+         when First_Language_Indexes =>\n+            return In_Project.Naming.Impl_Suffixes (Language);\n+\n+         when others =>\n+            declare\n+               Supp : Supp_Suffix;\n+               Supp_Index : Supp_Language_Index :=\n+                 In_Project.Naming.Supp_Suffixes;\n+\n+            begin\n+               while Supp_Index /= No_Supp_Language_Index loop\n+                  Supp := Supp_Suffix_Table.Table (Supp_Index);\n+\n+                  if Supp.Index = Language then\n+                     return Supp.Suffix;\n+                  end if;\n+\n+                  Supp_Index := Supp.Next;\n+               end loop;\n+\n+               return No_Name;\n+            end;\n+      end case;\n+   end  Suffix_Of;\n+\n    -----------\n    -- Value --\n    -----------"}, {"sha": "21c796c4977bcd3e4935f0e0be0331c1610c8550", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 210, "deletions": 89, "changes": 299, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -37,6 +37,8 @@ with Types;  use Types;\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n+with System.HTable; use System.HTable;\n+\n package Prj is\n \n    Empty_Name : Name_Id;\n@@ -66,96 +68,167 @@ package Prj is\n    Slash : Name_Id;\n    --  \"/\", used as the path of locally removed files\n \n-   type Languages_Processed is (Ada_Language, Other_Languages, All_Languages);\n-   --  To specify how to process project files\n+   type Language_Index is new Nat;\n+\n+   No_Language_Index           : constant Language_Index := 0;\n+   First_Language_Index        : constant Language_Index := 1;\n+   First_Language_Indexes_Last : constant Language_Index := 5;\n+\n+   Ada_Language_Index         : constant Language_Index :=\n+                                  First_Language_Index;\n+   C_Language_Index           : constant Language_Index :=\n+                                  Ada_Language_Index + 1;\n+   C_Plus_Plus_Language_Index : constant Language_Index :=\n+                                  C_Language_Index + 1;\n+\n+   Last_Language_Index : Language_Index := No_Language_Index;\n+\n+   subtype First_Language_Indexes is Language_Index\n+      range First_Language_Index .. First_Language_Indexes_Last;\n+\n+   type Header_Num is range 0 .. 2047;\n \n-   type Programming_Language is\n-     (Lang_Ada, Lang_C, Lang_C_Plus_Plus);\n-   --  The set of languages supported\n+   function Hash is new System.HTable.Hash (Header_Num => Header_Num);\n+\n+   function Hash (Name : Name_Id) return Header_Num;\n+\n+   package Language_Indexes is new System.HTable.Simple_HTable\n+     (Header_Num => Header_Num,\n+      Element    => Language_Index,\n+      No_Element => No_Language_Index,\n+      Key        => Name_Id,\n+      Hash       => Hash,\n+      Equal      => \"=\");\n+   --  Mapping of language names to language indexes\n+\n+   package Language_Names is new Table.Table\n+     (Table_Component_Type => Name_Id,\n+      Table_Index_Type     => Language_Index,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 4,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Prj.Language_Names\");\n+   --  The table for the name of programming languages\n \n-   subtype Other_Programming_Language is\n-     Programming_Language range Lang_C .. Programming_Language'Last;\n-   --  The set of non-Ada languages supported\n+   procedure Add_Language_Name (Name : Name_Id);\n \n-   type Languages_In_Project is array (Programming_Language) of Boolean;\n+   procedure Display_Language_Name (Language : Language_Index);\n+\n+   type Languages_In_Project is array (First_Language_Indexes) of Boolean;\n    --  Set of supported languages used in a project\n \n    No_Languages : constant Languages_In_Project := (others => False);\n    --  No supported languages are used\n \n-   type Impl_Suffix_Array is array (Programming_Language) of Name_Id;\n+   type Supp_Language_Index is new Nat;\n+   No_Supp_Language_Index  : constant Supp_Language_Index := 0;\n+\n+   type Supp_Language is record\n+      Index   : Language_Index := No_Language_Index;\n+      Present : Boolean := False;\n+      Next    : Supp_Language_Index := No_Supp_Language_Index;\n+   end record;\n+\n+   package Present_Languages is new Table.Table\n+     (Table_Component_Type => Supp_Language,\n+      Table_Index_Type     => Supp_Language_Index,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 4,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Prj.Present_Languages\");\n+   --  The table for the presence of languages with an index that is outside\n+   --  of First_Language_Indexes.\n+\n+   type Impl_Suffix_Array is array (First_Language_Indexes) of Name_Id;\n    --  Suffixes for the non spec sources of the different supported languages\n    --  in a project.\n \n    No_Impl_Suffixes : constant Impl_Suffix_Array := (others => No_Name);\n    --  A default value for the non spec source suffixes\n \n-   Lang_Ada_Name         : aliased String := \"ada\";\n-   Lang_C_Name           : aliased String := \"c\";\n-   Lang_C_Plus_Plus_Name : aliased String := \"c++\";\n-   Lang_Names : constant array (Programming_Language) of String_Access :=\n-     (Lang_Ada         => Lang_Ada_Name        'Access,\n-      Lang_C           => Lang_C_Name          'Access,\n-      Lang_C_Plus_Plus => Lang_C_Plus_Plus_Name'Access);\n-   --  Names of the supported programming languages, to be used after switch\n-   --  -x when using a GCC compiler.\n-\n-   Lang_Name_Ids : array (Programming_Language) of Name_Id;\n-   --  Same as Lang_Names, but using Name_Id, instead of String_Access.\n-   --  Initialized by Prj.Initialize.\n-\n-   Lang_Ada_Display_Name         : aliased String := \"Ada\";\n-   Lang_C_Display_Name           : aliased String := \"C\";\n-   Lang_C_Plus_Plus_Display_Name : aliased String := \"C++\";\n-   Lang_Display_Names :\n-     constant array (Programming_Language) of String_Access :=\n-       (Lang_Ada         => Lang_Ada_Display_Name        'Access,\n-        Lang_C           => Lang_C_Display_Name          'Access,\n-        Lang_C_Plus_Plus => Lang_C_Plus_Plus_Display_Name'Access);\n-   --  Names of the supported programming languages, to be used for display\n-   --  purposes.\n-\n-   Ada_Impl_Suffix         : aliased String := \".adb\";\n-   C_Impl_Suffix           : aliased String := \".c\";\n-   C_Plus_Plus_Impl_Suffix : aliased String := \".cc\";\n-   Lang_Suffixes : constant array (Programming_Language) of String_Access :=\n-     (Lang_Ada         => Ada_Impl_Suffix        'Access,\n-      Lang_C           => C_Impl_Suffix          'Access,\n-      Lang_C_Plus_Plus => C_Plus_Plus_Impl_Suffix'Access);\n-   --  Default extension of the sources of the different languages.\n-\n-   Lang_Suffix_Ids         : array (Programming_Language) of Name_Id;\n-   --  Same as Lang_Suffixes, but using Name_Id, instead of String_Access.\n-   --  Initialized by Prj.Initialize.\n-\n-   Gnatmake_String    : aliased String := \"gnatmake\";\n-   Gcc_String         : aliased String := \"gcc\";\n-   G_Plus_Plus_String : aliased String := \"g++\";\n-   Default_Compiler_Names  :\n-     constant array (Programming_Language) of String_Access :=\n-     (Lang_Ada         => Gnatmake_String   'Access,\n-      Lang_C           => Gcc_String        'Access,\n-      Lang_C_Plus_Plus => G_Plus_Plus_String'Access);\n-   --  Default names of the compilers for the supported languages.\n-   --  Used when no IDE'Compiler_Command is specified for a language.\n-   --  For Ada, specify the gnatmake executable.\n-\n-   Ada_Args_Strings        : aliased String := \"\";\n-   C_Args_String           : aliased String := \"c\";\n-   C_Plus_Plus_Args_String : aliased String := \"xx\";\n-   Lang_Args : constant array (Programming_Language) of String_Access :=\n-     (Lang_Ada         => Ada_Args_Strings       'Access,\n-      Lang_C           => C_Args_String          'Access,\n-      Lang_C_Plus_Plus => C_Plus_Plus_Args_String'Access);\n-   --  For each supported language, the string between \"-c\" and \"args\" to\n-   --  be used in the gprmake switch for the start of the compiling switch\n-   --  section for each supported language. For example, \"-ccargs\" indicates\n-   --  the start of the C compiler switch section.\n+   type Supp_Suffix is record\n+      Index   : Language_Index := No_Language_Index;\n+      Suffix  : Name_Id := No_Name;\n+      Next    : Supp_Language_Index := No_Supp_Language_Index;\n+   end record;\n+\n+   package Supp_Suffix_Table is new Table.Table\n+     (Table_Component_Type => Supp_Suffix,\n+      Table_Index_Type     => Supp_Language_Index,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 4,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Prj.Supp_Suffix_Table\");\n+   --  The table for the presence of languages with an index that is outside\n+   --  of First_Language_Indexes.\n+\n+   type Language_Kind is (GNU, other);\n+\n+   type Name_List_Index is new Nat;\n+   No_Name_List            : constant Name_List_Index := 0;\n+\n+   type Name_Node is record\n+      Name : Name_Id         := No_Name;\n+      Next : Name_List_Index := No_Name_List;\n+   end record;\n+\n+   package Name_Lists is new Table.Table\n+     (Table_Component_Type => Name_Node,\n+      Table_Index_Type     => Name_List_Index,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 10,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Prj.Name_Lists\");\n+   --  The table for lists of names used in package Language_Processing\n+\n+   type Language_Processing_Data is record\n+      Compiler_Drivers     : Name_List_Index := No_Name_List;\n+      Compiler_Paths       : Name_Id         := No_Name;\n+      Compiler_Kinds       : Language_Kind   := GNU;\n+      Dependency_Options   : Name_List_Index := No_Name_List;\n+      Compute_Dependencies : Name_List_Index := No_Name_List;\n+      Include_Options      : Name_List_Index := No_Name_List;\n+      Binder_Drivers       : Name_Id         := No_Name;\n+      Binder_Driver_Paths  : Name_Id         := No_Name;\n+   end record;\n+\n+   Default_Language_Processing_Data :\n+     constant Language_Processing_Data :=\n+       (Compiler_Drivers     => No_Name_List,\n+        Compiler_Paths       => No_Name,\n+        Compiler_Kinds       => GNU,\n+        Dependency_Options   => No_Name_List,\n+        Compute_Dependencies => No_Name_List,\n+        Include_Options      => No_Name_List,\n+        Binder_Drivers       => No_Name,\n+        Binder_Driver_Paths  => No_Name);\n+\n+   type First_Language_Processing_Data is\n+     array (First_Language_Indexes) of Language_Processing_Data;\n+\n+   Default_First_Language_Processing_Data : First_Language_Processing_Data :=\n+     (others => Default_Language_Processing_Data);\n+\n+   type Supp_Language_Data is record\n+      Index : Language_Index := No_Language_Index;\n+      Data  : Language_Processing_Data := Default_Language_Processing_Data;\n+      Next  : Supp_Language_Index := No_Supp_Language_Index;\n+   end record;\n+\n+   package Supp_Languages is new Table.Table\n+     (Table_Component_Type => Supp_Language_Data,\n+      Table_Index_Type     => Supp_Language_Index,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 4,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Prj.Supp_Languages\");\n+   --  The table for language data when there are more languages than\n+   --  in First_Language_Indexes.\n \n    type Other_Source_Id is new Nat;\n    No_Other_Source : constant Other_Source_Id := 0;\n    type Other_Source is record\n-      Language         : Programming_Language; --  language of the source\n+      Language         : Language_Index;       --  language of the source\n       File_Name        : Name_Id;              --  source file simple name\n       Path_Name        : Name_Id;              --  source full path name\n       Source_TS        : Time_Stamp_Type;      --  source file time stamp\n@@ -375,8 +448,6 @@ package Prj is\n    --  The following record contains data for a naming scheme\n \n    type Naming_Data is record\n-      Current_Language : Name_Id := No_Name;\n-      --  The programming language being currently considered\n \n       Dot_Replacement : Name_Id := No_Name;\n       --  The string to replace '.' in the source file name (for Ada).\n@@ -393,24 +464,28 @@ package Prj is\n       --  source file name of a spec.\n       --  Indexed by the programming language.\n \n-      Current_Spec_Suffix : Name_Id := No_Name;\n-      --  The \"spec\" suffix of the current programming language\n+      Ada_Spec_Suffix : Name_Id := No_Name;\n+      --  The suffix of the Ada spec sources\n \n       Spec_Suffix_Loc : Source_Ptr := No_Location;\n       --  The position in the project file source where\n-      --  Current_Spec_Suffix is defined.\n+      --  Ada_Spec_Suffix is defined.\n+\n+      Impl_Suffixes    : Impl_Suffix_Array   := No_Impl_Suffixes;\n+      Supp_Suffixes    : Supp_Language_Index := No_Supp_Language_Index;\n+      --  The source suffixes of the different languages\n \n       Body_Suffix : Array_Element_Id := No_Array_Element;\n       --  The string to append to the unit name for the\n       --  source file name of a body.\n       --  Indexed by the programming language.\n \n-      Current_Body_Suffix : Name_Id := No_Name;\n-      --  The \"body\" suffix of the current programming language\n+      Ada_Body_Suffix : Name_Id := No_Name;\n+      --  The suffix of the Ada body sources\n \n       Body_Suffix_Loc : Source_Ptr := No_Location;\n       --  The position in the project file source where\n-      --  Current_Body_Suffix is defined.\n+      --  Ada_Body_Suffix is defined.\n \n       Separate_Suffix : Name_Id := No_Name;\n       --  String to append to unit name for source file name of an Ada subunit.\n@@ -441,8 +516,7 @@ package Prj is\n    --  The standard GNAT naming scheme\n \n    function Same_Naming_Scheme\n-     (Left, Right : Naming_Data)\n-      return        Boolean;\n+     (Left, Right : Naming_Data) return Boolean;\n    --  Returns True if Left and Right are the same naming scheme\n    --  not considering Specs and Bodies.\n \n@@ -469,11 +543,11 @@ package Prj is\n    --  The following record describes a project file representation\n \n    type Project_Data is record\n-      Languages : Languages_In_Project := No_Languages;\n-      --  Indicate the different languages of the source of this project\n+      Externally_Built : Boolean := False;\n \n-      Impl_Suffixes : Impl_Suffix_Array := No_Impl_Suffixes;\n-      --  The source suffixes of the different languages other than Ada\n+      Languages      : Languages_In_Project := No_Languages;\n+      Supp_Languages : Supp_Language_Index  := No_Supp_Language_Index;\n+      --  Indicate the different languages of the source of this project\n \n       First_Referred_By  : Project_Id := No_Project;\n       --  The project, if any, that was the first to be known\n@@ -498,7 +572,7 @@ package Prj is\n       --  project. Set by Prj.Proc.Process.\n \n       Mains : String_List_Id := Nil_String;\n-      --  List of mains specified by attribute Main. Set by Prj.Nmsc.Ada_Check.\n+      --  List of mains specified by attribute Main. Set by Prj.Nmsc.Check.\n \n       Directory : Name_Id := No_Name;\n       --  Directory where the project file resides. Set by Prj.Proc.Process.\n@@ -548,11 +622,11 @@ package Prj is\n \n       Standalone_Library : Boolean := False;\n       --  Indicate that this is a Standalone Library Project File.\n-      --  Set by Prj.Nmsc.Ada_Check.\n+      --  Set by Prj.Nmsc.Check.\n \n       Lib_Interface_ALIs : String_List_Id := Nil_String;\n       --  For Standalone Library Project Files, indicate the list\n-      --  of Interface ALI files. Set by Prj.Nmsc.Ada_Check.\n+      --  of Interface ALI files. Set by Prj.Nmsc.Check.\n \n       Lib_Auto_Init : Boolean := False;\n       --  For non static Standalone Library Project Files, indicate if\n@@ -629,6 +703,15 @@ package Prj is\n       --  The naming scheme of this project file.\n       --  Set by Prj.Nmsc.Check_Naming_Scheme.\n \n+      First_Language_Processing : First_Language_Processing_Data :=\n+        Default_First_Language_Processing_Data;\n+\n+      Supp_Language_Processing      : Supp_Language_Index :=\n+                                       No_Supp_Language_Index;\n+\n+      Default_Linker                : Name_Id := No_Name;\n+      Default_Linker_Path           : Name_Id := No_Name;\n+\n       Decl : Declarations := No_Declarations;\n       --  The declarations (variables, attributes and packages) of this\n       --  project file. Set by Prj.Proc.Process.\n@@ -699,6 +782,44 @@ package Prj is\n \n    end record;\n \n+   function Is_Present\n+     (Language   : Language_Index;\n+      In_Project : Project_Data) return Boolean;\n+   --  Return True when Language is one of the languages used in\n+   --  project Project.\n+\n+   procedure Set\n+     (Language   : Language_Index;\n+      Present    : Boolean;\n+      In_Project : in out Project_Data);\n+   --  Indicate if Language is or not a language used in project Project\n+\n+   function Language_Processing_Data_Of\n+     (Language   : Language_Index;\n+      In_Project : Project_Data) return Language_Processing_Data;\n+   --  Return the Language_Processing_Data for language Language in project\n+   --  In_Project. Return the default when no Language_Processing_Data are\n+   --  defined for the language.\n+\n+   procedure Set\n+     (Language_Processing : Language_Processing_Data;\n+      For_Language        : Language_Index;\n+      In_Project          : in out Project_Data);\n+   --  Set the Language_Processing_Data for language Language in project\n+   --  In_Project.\n+\n+   function Suffix_Of\n+     (Language   : Language_Index;\n+      In_Project : Project_Data) return Name_Id;\n+   --  Return the suffix for language Language in project In_Project. Return\n+   --  No_Name when no suffix is defined for the language.\n+\n+   procedure Set\n+     (Suffix       : Name_Id;\n+      For_Language : Language_Index;\n+      In_Project   : in out Project_Data);\n+   --  Set the suffix for language Language in project In_Project\n+\n    Project_Error : exception;\n    --  Raised by some subprograms in Prj.Attr.\n "}, {"sha": "125455ca6bfc6f567012448d376c41bcccb43d2b", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -626,23 +626,33 @@ package body Snames is\n      \"requeue#\" &\n      \"tagged#\" &\n      \"raise_exception#\" &\n+     \"ada_roots#\" &\n      \"binder#\" &\n+     \"binder_driver#\" &\n      \"body_suffix#\" &\n      \"builder#\" &\n      \"compiler#\" &\n+     \"compiler_driver#\" &\n+     \"compiler_kind#\" &\n+     \"compute_dependency#\" &\n      \"cross_reference#\" &\n+     \"default_linker#\" &\n      \"default_switches#\" &\n+     \"dependency_option#\" &\n      \"exec_dir#\" &\n      \"executable#\" &\n      \"executable_suffix#\" &\n      \"extends#\" &\n+     \"externally_built#\" &\n      \"finder#\" &\n      \"global_configuration_pragmas#\" &\n      \"gnatls#\" &\n      \"gnatstub#\" &\n      \"implementation#\" &\n      \"implementation_exceptions#\" &\n      \"implementation_suffix#\" &\n+     \"include_option#\" &\n+     \"language_processing#\" &\n      \"languages#\" &\n      \"library_dir#\" &\n      \"library_auto_init#\" &"}, {"sha": "4fb6c255ba89d87c9d3373c230754c736416befe", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 62, "deletions": 51, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e1918abd19b6012e27acc89c85230797a2fc79/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=44e1918abd19b6012e27acc89c85230797a2fc79", "patch": "@@ -921,64 +921,75 @@ package Snames is\n \n    Name_Raise_Exception                : constant Name_Id := N + 568;\n \n-   --  Additional reserved words in GNAT Project Files\n+   --  Additional reserved words and identifiers used in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Binder                         : constant Name_Id := N + 569;\n-   Name_Body_Suffix                    : constant Name_Id := N + 570;\n-   Name_Builder                        : constant Name_Id := N + 571;\n-   Name_Compiler                       : constant Name_Id := N + 572;\n-   Name_Cross_Reference                : constant Name_Id := N + 573;\n-   Name_Default_Switches               : constant Name_Id := N + 574;\n-   Name_Exec_Dir                       : constant Name_Id := N + 575;\n-   Name_Executable                     : constant Name_Id := N + 576;\n-   Name_Executable_Suffix              : constant Name_Id := N + 577;\n-   Name_Extends                        : constant Name_Id := N + 578;\n-   Name_Finder                         : constant Name_Id := N + 579;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 580;\n-   Name_Gnatls                         : constant Name_Id := N + 581;\n-   Name_Gnatstub                       : constant Name_Id := N + 582;\n-   Name_Implementation                 : constant Name_Id := N + 583;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 584;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 585;\n-   Name_Languages                      : constant Name_Id := N + 586;\n-   Name_Library_Dir                    : constant Name_Id := N + 587;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 588;\n-   Name_Library_GCC                    : constant Name_Id := N + 589;\n-   Name_Library_Interface              : constant Name_Id := N + 590;\n-   Name_Library_Kind                   : constant Name_Id := N + 591;\n-   Name_Library_Name                   : constant Name_Id := N + 592;\n-   Name_Library_Options                : constant Name_Id := N + 593;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 594;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 595;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 596;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 597;\n-   Name_Library_Version                : constant Name_Id := N + 598;\n-   Name_Linker                         : constant Name_Id := N + 599;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 600;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 601;\n-   Name_Metrics                        : constant Name_Id := N + 602;\n-   Name_Naming                         : constant Name_Id := N + 603;\n-   Name_Object_Dir                     : constant Name_Id := N + 604;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 605;\n-   Name_Project                        : constant Name_Id := N + 606;\n-   Name_Separate_Suffix                : constant Name_Id := N + 607;\n-   Name_Source_Dirs                    : constant Name_Id := N + 608;\n-   Name_Source_Files                   : constant Name_Id := N + 609;\n-   Name_Source_List_File               : constant Name_Id := N + 610;\n-   Name_Spec                           : constant Name_Id := N + 611;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 612;\n-   Name_Specification                  : constant Name_Id := N + 613;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 614;\n-   Name_Specification_Suffix           : constant Name_Id := N + 615;\n-   Name_Switches                       : constant Name_Id := N + 616;\n+   Name_Ada_Roots                      : constant Name_Id := N + 569;\n+   Name_Binder                         : constant Name_Id := N + 570;\n+   Name_Binder_Driver                  : constant Name_Id := N + 571;\n+   Name_Body_Suffix                    : constant Name_Id := N + 572;\n+   Name_Builder                        : constant Name_Id := N + 573;\n+   Name_Compiler                       : constant Name_Id := N + 574;\n+   Name_Compiler_Driver                : constant Name_Id := N + 575;\n+   Name_Compiler_Kind                  : constant Name_Id := N + 576;\n+   Name_Compute_Dependency             : constant Name_Id := N + 577;\n+   Name_Cross_Reference                : constant Name_Id := N + 578;\n+   Name_Default_Linker                 : constant Name_Id := N + 579;\n+   Name_Default_Switches               : constant Name_Id := N + 580;\n+   Name_Dependency_Option              : constant Name_Id := N + 581;\n+   Name_Exec_Dir                       : constant Name_Id := N + 582;\n+   Name_Executable                     : constant Name_Id := N + 583;\n+   Name_Executable_Suffix              : constant Name_Id := N + 584;\n+   Name_Extends                        : constant Name_Id := N + 585;\n+   Name_Externally_Built               : constant Name_Id := N + 586;\n+   Name_Finder                         : constant Name_Id := N + 587;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 588;\n+   Name_Gnatls                         : constant Name_Id := N + 589;\n+   Name_Gnatstub                       : constant Name_Id := N + 590;\n+   Name_Implementation                 : constant Name_Id := N + 591;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 592;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 593;\n+   Name_Include_Option                 : constant Name_Id := N + 594;\n+   Name_Language_Processing            : constant Name_Id := N + 595;\n+   Name_Languages                      : constant Name_Id := N + 596;\n+   Name_Library_Dir                    : constant Name_Id := N + 597;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 598;\n+   Name_Library_GCC                    : constant Name_Id := N + 599;\n+   Name_Library_Interface              : constant Name_Id := N + 600;\n+   Name_Library_Kind                   : constant Name_Id := N + 601;\n+   Name_Library_Name                   : constant Name_Id := N + 602;\n+   Name_Library_Options                : constant Name_Id := N + 603;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 604;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 605;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 606;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 607;\n+   Name_Library_Version                : constant Name_Id := N + 608;\n+   Name_Linker                         : constant Name_Id := N + 609;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 610;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 611;\n+   Name_Metrics                        : constant Name_Id := N + 612;\n+   Name_Naming                         : constant Name_Id := N + 613;\n+   Name_Object_Dir                     : constant Name_Id := N + 614;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 615;\n+   Name_Project                        : constant Name_Id := N + 616;\n+   Name_Separate_Suffix                : constant Name_Id := N + 617;\n+   Name_Source_Dirs                    : constant Name_Id := N + 618;\n+   Name_Source_Files                   : constant Name_Id := N + 619;\n+   Name_Source_List_File               : constant Name_Id := N + 620;\n+   Name_Spec                           : constant Name_Id := N + 621;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 622;\n+   Name_Specification                  : constant Name_Id := N + 623;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 624;\n+   Name_Specification_Suffix           : constant Name_Id := N + 625;\n+   Name_Switches                       : constant Name_Id := N + 626;\n+\n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 617;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 627;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 617;\n+   Last_Predefined_Name                : constant Name_Id := N + 627;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;"}]}