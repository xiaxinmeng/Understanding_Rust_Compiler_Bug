{"sha": "4fc784235047bf77dc7b8b05820ac8a596ea4142", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZjNzg0MjM1MDQ3YmY3N2RjN2I4YjA1ODIwYWM4YTU5NmVhNDE0Mg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2007-01-31T15:06:19Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2007-01-31T15:06:19Z"}, "message": "re PR middle-end/29335 (transcendental functions with constant arguments should be resolved at compile-time)\n\n\tPR middle-end/29335\n\t* builtins.c (fold_builtin_sqrt): Use MPFR for constant args.\n\ntestsuite:\n\t* gcc.dg/torture/builtin-math-2.c: Add sqrt cases.\n\t* gcc.dg/torture/builtin-math-3.c: Likewise.\n\nFrom-SVN: r121423", "tree": {"sha": "b9b851f9784b75ef4fc4a39e72412270f9adf292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9b851f9784b75ef4fc4a39e72412270f9adf292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fc784235047bf77dc7b8b05820ac8a596ea4142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc784235047bf77dc7b8b05820ac8a596ea4142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc784235047bf77dc7b8b05820ac8a596ea4142", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc784235047bf77dc7b8b05820ac8a596ea4142/comments", "author": null, "committer": null, "parents": [{"sha": "677cc14d2d379a47a489cbbe14380983efe36884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677cc14d2d379a47a489cbbe14380983efe36884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677cc14d2d379a47a489cbbe14380983efe36884"}], "stats": {"total": 44, "additions": 31, "deletions": 13}, "files": [{"sha": "2f2e39acd0d5a2c4654fe610d678fcbfa6810b3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fc784235047bf77dc7b8b05820ac8a596ea4142", "patch": "@@ -1,3 +1,8 @@\n+2007-01-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\tPR middle-end/29335\n+\t* builtins.c (fold_builtin_sqrt): Use MPFR for constant args.\n+\n 2007-01-31  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* cfgloop.h: Include vec-prim.h."}, {"sha": "9f51553d0e51b50e38eb2d61b41ea12ded257298", "filename": "gcc/builtins.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=4fc784235047bf77dc7b8b05820ac8a596ea4142", "patch": "@@ -7200,22 +7200,15 @@ fold_builtin_sqrt (tree arglist, tree type)\n \n   enum built_in_function fcode;\n   tree arg = TREE_VALUE (arglist);\n-\n+  tree res;\n+  \n   if (!validate_arglist (arglist, REAL_TYPE, VOID_TYPE))\n     return NULL_TREE;\n \n-  /* Optimize sqrt of constant value.  */\n-  if (TREE_CODE (arg) == REAL_CST\n-      && !TREE_OVERFLOW (arg))\n-    {\n-      REAL_VALUE_TYPE r, x;\n-\n-      x = TREE_REAL_CST (arg);\n-      if (real_sqrt (&r, TYPE_MODE (type), &x)\n-\t  || (!flag_trapping_math && !flag_errno_math))\n-\treturn build_real (type, r);\n-    }\n-\n+  /* Calculate the result when the argument is a constant.  */\n+  if ((res = do_mpfr_arg1 (arg, type, mpfr_sqrt, &dconst0, NULL, true)))\n+    return res;\n+  \n   /* Optimize sqrt(expN(x)) = expN(x*0.5).  */\n   fcode = builtin_mathfn_code (arg);\n   if (flag_unsafe_math_optimizations && BUILTIN_EXPONENT_P (fcode))"}, {"sha": "b89e98594842ffc8f6ee49059564619abca47ab4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4fc784235047bf77dc7b8b05820ac8a596ea4142", "patch": "@@ -1,3 +1,8 @@\n+2007-01-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/torture/builtin-math-2.c: Add sqrt cases.\n+\t* gcc.dg/torture/builtin-math-3.c: Likewise.\n+\n 2007-01-31  Dirk Mueller  <dmueller@suse.de>\n \n \tgcc.dg/Wparentheses-2.c: Update and add new tests."}, {"sha": "23749927cc63ab9b02d6ca52c3b9d35b3a230721", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-2.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-2.c?ref=4fc784235047bf77dc7b8b05820ac8a596ea4142", "patch": "@@ -145,6 +145,11 @@ void bar()\n   fool (__builtin_fmal (__LDBL_MAX__, __LDBL_MAX__, 0.0L));\n   fool (__builtin_fmal (__LDBL_MAX__, 1.0L, __LDBL_MAX__));\n   fool (__builtin_fmal (__LDBL_MIN__, __LDBL_MIN__, 0.0L));\n+\n+  /* The sqrt arg must be [0 ... Inf] inclusive.  */\n+  TESTIT (sqrt, -0.5);\n+  TESTIT (sqrt, -0.0);\n+  TESTIT (sqrt, 0.0);\n }\n \n /* { dg-final { scan-tree-dump-times \"exp2 \" 9 \"original\" } } */\n@@ -183,4 +188,7 @@ void bar()\n /* { dg-final { scan-tree-dump-times \"fma \" 3 \"original\" } } */\n /* { dg-final { scan-tree-dump-times \"fmaf\" 3 \"original\" } } */\n /* { dg-final { scan-tree-dump-times \"fmal\" 3 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"sqrt \" 1 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"sqrtf\" 1 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"sqrtl\" 1 \"original\" } } */\n /* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "896edccaa7fd3d363a9d9139be378a6608597e0c", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-3.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc784235047bf77dc7b8b05820ac8a596ea4142/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-3.c?ref=4fc784235047bf77dc7b8b05820ac8a596ea4142", "patch": "@@ -363,5 +363,12 @@ int main (void)\n   if (__builtin_fmal(0.5L,__LDBL_MIN__, __LDBL_MIN__) != __LDBL_MIN__*1.5L)\n     link_error (__LINE__);\n \n+  TESTIT (sqrt, -0.0, -0.0); /* sqrt(-0) == -0 */\n+  TESTIT (sqrt, 0.0, 0.0); /* sqrt(0) == 0 */\n+  TESTIT (sqrt, 1.0, 1.0); /* sqrt(1) == 1 */\n+  TESTIT (sqrt, 4.0, 2.0); /* sqrt(4) == 2 */\n+  TESTIT_R (sqrt, 1.5, 1.22, 1.23); /* sqrt(1.5) == 1.224... */\n+  TESTIT_R (sqrt, 2.0, 1.41, 1.42); /* sqrt(2) == 1.414... */\n+\n   return 0;\n }"}]}