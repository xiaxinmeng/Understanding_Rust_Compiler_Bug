{"sha": "8bbd56856dcc5f73bd0662322805e60e159be353", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJiZDU2ODU2ZGNjNWY3M2JkMDY2MjMyMjgwNWU2MGUxNTliZTM1Mw==", "commit": {"author": {"name": "Charles G Waldman", "email": "cgw@alum.mit.edu", "date": "1999-02-16T00:41:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-16T00:41:58Z"}, "message": "c-common.c (shorten_compare): Get the min/max value from the underlying type of an enumeration...\n\n        * c-common.c (shorten_compare): Get the min/max value from the\n        underlying type of an enumeration, not the enumerated type itself.\n\nFrom-SVN: r25228", "tree": {"sha": "91e9b8d9748714d68afb7086061668a5b0af8fe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91e9b8d9748714d68afb7086061668a5b0af8fe7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bbd56856dcc5f73bd0662322805e60e159be353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bbd56856dcc5f73bd0662322805e60e159be353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bbd56856dcc5f73bd0662322805e60e159be353", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bbd56856dcc5f73bd0662322805e60e159be353/comments", "author": {"login": "cgwaldman", "id": 5557735, "node_id": "MDQ6VXNlcjU1NTc3MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5557735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgwaldman", "html_url": "https://github.com/cgwaldman", "followers_url": "https://api.github.com/users/cgwaldman/followers", "following_url": "https://api.github.com/users/cgwaldman/following{/other_user}", "gists_url": "https://api.github.com/users/cgwaldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgwaldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgwaldman/subscriptions", "organizations_url": "https://api.github.com/users/cgwaldman/orgs", "repos_url": "https://api.github.com/users/cgwaldman/repos", "events_url": "https://api.github.com/users/cgwaldman/events{/privacy}", "received_events_url": "https://api.github.com/users/cgwaldman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20496fa2c8810a2da8d3667e35616999ab6fd8d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20496fa2c8810a2da8d3667e35616999ab6fd8d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20496fa2c8810a2da8d3667e35616999ab6fd8d9"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "b6b1ba2aae22b06c235f6238fab2e2d76100dc2b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bbd56856dcc5f73bd0662322805e60e159be353/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bbd56856dcc5f73bd0662322805e60e159be353/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bbd56856dcc5f73bd0662322805e60e159be353", "patch": "@@ -1,3 +1,8 @@\n+Tue Feb 16 01:37:33 1999  Charles G Waldman  <cgw@alum.mit.edu>\n+\n+\t* c-common.c (shorten_compare): Get the min/max value from the\n+\tunderlying type of an enumeration, not the enumerated type itself.\n+\n Mon Feb 15 23:04:48 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* jump.c: Include insn-attr.h."}, {"sha": "aa94b087989caa9ff3b2d5172b53b85e0f5e3864", "filename": "gcc/c-common.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bbd56856dcc5f73bd0662322805e60e159be353/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bbd56856dcc5f73bd0662322805e60e159be353/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=8bbd56856dcc5f73bd0662322805e60e159be353", "patch": "@@ -2406,6 +2406,12 @@ shorten_compare (op0_ptr, op1_ptr, restype_ptr, rescode_ptr)\n \n       type = signed_or_unsigned_type (unsignedp0, TREE_TYPE (primop0));\n \n+      /* If TYPE is an enumeration, then we need to get its min/max\n+\t values from it's underlying integral type, not the enumerated\n+\t type itself.  */\n+      if (TREE_CODE (type) == ENUMERAL_TYPE)\n+\ttype = type_for_size (TYPE_PRECISION (type), unsignedp0);\n+\n       maxval = TYPE_MAX_VALUE (type);\n       minval = TYPE_MIN_VALUE (type);\n "}]}