{"sha": "0d06e8c794f37ded34e902ead35e7c70c3b112d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQwNmU4Yzc5NGYzN2RlZDM0ZTkwMmVhZDM1ZTdjNzBjM2IxMTJkMQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-03T15:08:36Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-03T15:08:36Z"}, "message": "[nvptx] Add nvptx_mach_vector_length, nvptx_mach_max_workers\n\nThe vector length and maximum number of workers are known compile-time.  Make\nthese easily available during code generation via new functions.\n\n2019-01-03  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.c (MACH_VECTOR_LENGTH, MACH_MAX_WORKERS): Define.\n\t(init_axis_dim, nvptx_mach_max_workers, nvptx_mach_vector_length): New\n\tfunction.\n\t* config/nvptx/nvptx.h (struct machine_function): Add axis_dims.\n\nFrom-SVN: r267558", "tree": {"sha": "48bb70600a1e76eff608fa85c6316541c9992bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48bb70600a1e76eff608fa85c6316541c9992bf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d06e8c794f37ded34e902ead35e7c70c3b112d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d06e8c794f37ded34e902ead35e7c70c3b112d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d06e8c794f37ded34e902ead35e7c70c3b112d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d06e8c794f37ded34e902ead35e7c70c3b112d1/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2498a6abcc83bcad1d33249f9a15b32daade2595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2498a6abcc83bcad1d33249f9a15b32daade2595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2498a6abcc83bcad1d33249f9a15b32daade2595"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "40b1fdf22ddabed67f44b370c46c102bcc928089", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d06e8c794f37ded34e902ead35e7c70c3b112d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d06e8c794f37ded34e902ead35e7c70c3b112d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d06e8c794f37ded34e902ead35e7c70c3b112d1", "patch": "@@ -1,3 +1,10 @@\n+2019-01-03  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.c (MACH_VECTOR_LENGTH, MACH_MAX_WORKERS): Define.\n+\t(init_axis_dim, nvptx_mach_max_workers, nvptx_mach_vector_length): New\n+\tfunction.\n+\t* config/nvptx/nvptx.h (struct machine_function): Add axis_dims.\n+\n 2019-01-03  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/nvptx.c (struct offload_attrs): New."}, {"sha": "5d0bab65d076f0f73bf636e035f0deaa21a0e5ee", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d06e8c794f37ded34e902ead35e7c70c3b112d1/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d06e8c794f37ded34e902ead35e7c70c3b112d1/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=0d06e8c794f37ded34e902ead35e7c70c3b112d1", "patch": "@@ -2883,6 +2883,47 @@ struct offload_attrs\n   int vector_length;\n };\n \n+/* Define entries for cfun->machine->axis_dim.  */\n+\n+#define MACH_VECTOR_LENGTH 0\n+#define MACH_MAX_WORKERS 1\n+\n+static void populate_offload_attrs (offload_attrs *oa);\n+\n+static void\n+init_axis_dim (void)\n+{\n+  offload_attrs oa;\n+  int max_workers;\n+\n+  populate_offload_attrs (&oa);\n+\n+  if (oa.num_workers == 0)\n+    max_workers = PTX_CTA_SIZE / oa.vector_length;\n+  else\n+    max_workers = oa.num_workers;\n+\n+  cfun->machine->axis_dim[MACH_VECTOR_LENGTH] = oa.vector_length;\n+  cfun->machine->axis_dim[MACH_MAX_WORKERS] = max_workers;\n+  cfun->machine->axis_dim_init_p = true;\n+}\n+\n+static int ATTRIBUTE_UNUSED\n+nvptx_mach_max_workers ()\n+{\n+  if (!cfun->machine->axis_dim_init_p)\n+    init_axis_dim ();\n+  return cfun->machine->axis_dim[MACH_MAX_WORKERS];\n+}\n+\n+static int ATTRIBUTE_UNUSED\n+nvptx_mach_vector_length ()\n+{\n+  if (!cfun->machine->axis_dim_init_p)\n+    init_axis_dim ();\n+  return cfun->machine->axis_dim[MACH_VECTOR_LENGTH];\n+}\n+\n /* Loop structure of the function.  The entire function is described as\n    a NULL loop.  */\n "}, {"sha": "a05ff7ec9bec9d8b4e21314b2f7286ef268b9465", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d06e8c794f37ded34e902ead35e7c70c3b112d1/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d06e8c794f37ded34e902ead35e7c70c3b112d1/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=0d06e8c794f37ded34e902ead35e7c70c3b112d1", "patch": "@@ -218,6 +218,9 @@ struct GTY(()) machine_function\n   int return_mode; /* Return mode of current fn.\n \t\t      (machine_mode not defined yet.) */\n   rtx axis_predicate[2]; /* Neutering predicates.  */\n+  int axis_dim[2]; /* Maximum number of threads on each axis, dim[0] is\n+\t\t      vector_length, dim[1] is num_workers.  */\n+  bool axis_dim_init_p;\n   rtx unisimt_master; /* 'Master lane index' for -muniform-simt.  */\n   rtx unisimt_predicate; /* Predicate for -muniform-simt.  */\n   rtx unisimt_location; /* Mask location for -muniform-simt.  */"}]}