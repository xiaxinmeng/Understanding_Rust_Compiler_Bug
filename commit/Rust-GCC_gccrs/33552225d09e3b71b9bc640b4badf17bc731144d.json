{"sha": "33552225d09e3b71b9bc640b4badf17bc731144d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM1NTIyMjVkMDllM2I3MWI5YmM2NDBiNGJhZGYxN2JjNzMxMTQ0ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-11-14T08:17:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-11-14T08:17:45Z"}, "message": "re PR middle-end/12526 ([tree-ssa] internal compiler error: Segmentation fault)\n\n        PR middle-end/12526\n        * tree.c (build): A CALL_EXPR has side-effects if its arguments do.\n        * calls.c (call_expr_flags): New fn.\n        * tree.h: Declare it.\n        * tree-cfg.c (call_expr_flags): Move to calls.c.\n        * tree-flow.h: Move prototype to tree.h.\n\nFrom-SVN: r73588", "tree": {"sha": "2ce08c8bfd68fc367128886e360f1df5321c96da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ce08c8bfd68fc367128886e360f1df5321c96da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33552225d09e3b71b9bc640b4badf17bc731144d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33552225d09e3b71b9bc640b4badf17bc731144d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33552225d09e3b71b9bc640b4badf17bc731144d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33552225d09e3b71b9bc640b4badf17bc731144d/comments", "author": null, "committer": null, "parents": [{"sha": "53ee1bf364053cbd75a451f449288caff1792a27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ee1bf364053cbd75a451f449288caff1792a27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53ee1bf364053cbd75a451f449288caff1792a27"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "e62364be15b7f9493f85ec438c79a829fdb26e30", "filename": "gcc/testsuite/g++.dg/init/cleanup2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33552225d09e3b71b9bc640b4badf17bc731144d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fcleanup2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33552225d09e3b71b9bc640b4badf17bc731144d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fcleanup2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fcleanup2.C?ref=33552225d09e3b71b9bc640b4badf17bc731144d", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/12526\n+\n+// We decided that the call to strcmp has no side-effects because strcmp is\n+// pure, even though the first argument has side-effects.  As a result, we\n+// stripped the CLEANUP_POINT_EXPR.  Hilarity ensued.\n+\n+extern \"C\" int strcmp (const char *, const char *);\n+\n+struct A {\n+  A(int);\n+  const char *str();\n+  ~A();\n+};\n+\n+void printQueryI()\n+{\n+  if(!strcmp(A(1).str(), \"foo\"))\n+    { }\n+}"}]}