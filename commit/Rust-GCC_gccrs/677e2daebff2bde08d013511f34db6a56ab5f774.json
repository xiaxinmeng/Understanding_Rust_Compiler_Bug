{"sha": "677e2daebff2bde08d013511f34db6a56ab5f774", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc3ZTJkYWViZmYyYmRlMDhkMDEzNTExZjM0ZGI2YTU2YWI1Zjc3NA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael.morin@sfr.fr", "date": "2011-10-07T20:22:50Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-10-07T20:22:50Z"}, "message": "trans.h (gfc_ss_info): Remove codimen field.\n\n\t* trans.h (gfc_ss_info): Remove codimen field.\n\t* trans-array.c (gfc_get_array_ss): Don't set codimen field.\n\t(gfc_trans_create_temp_array): Don't set descriptor's cobounds.\n\t(gfc_trans_constant_array_constructor): Update loop upper limit.\n\t(gfc_conv_ss_startstride): Don't set codimen field.\n\tDon't get descriptor's cobounds.\n\t(gfc_walk_variable_expr): Update dimension index.\n\t* trans-intrinsic.c (trans_this_image, trans_image_index,\n\tconv_intrinsic_cobound): Don't set codimen field\n\nFrom-SVN: r179690", "tree": {"sha": "e7fd839aad82953a1db2bd762d2d78325b485769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7fd839aad82953a1db2bd762d2d78325b485769"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/677e2daebff2bde08d013511f34db6a56ab5f774", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677e2daebff2bde08d013511f34db6a56ab5f774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677e2daebff2bde08d013511f34db6a56ab5f774", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677e2daebff2bde08d013511f34db6a56ab5f774/comments", "author": null, "committer": null, "parents": [{"sha": "c6d741b85b24960cf70afda7a3afddd57e3b4ef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d741b85b24960cf70afda7a3afddd57e3b4ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d741b85b24960cf70afda7a3afddd57e3b4ef5"}], "stats": {"total": 41, "additions": 17, "deletions": 24}, "files": [{"sha": "046635c5b27561088d894739c2bc86015d802b35", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677e2daebff2bde08d013511f34db6a56ab5f774/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677e2daebff2bde08d013511f34db6a56ab5f774/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=677e2daebff2bde08d013511f34db6a56ab5f774", "patch": "@@ -1,3 +1,15 @@\n+2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n+\n+\t* trans.h (gfc_ss_info): Remove codimen field.\n+\t* trans-array.c (gfc_get_array_ss): Don't set codimen field.\n+\t(gfc_trans_create_temp_array): Don't set descriptor's cobounds.\n+\t(gfc_trans_constant_array_constructor): Update loop upper limit.\n+\t(gfc_conv_ss_startstride): Don't set codimen field.\n+\tDon't get descriptor's cobounds.\n+\t(gfc_walk_variable_expr): Update dimension index.\n+\t* trans-intrinsic.c (trans_this_image, trans_image_index,\n+\tconv_intrinsic_cobound): Don't set codimen field\n+\n 2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n \n \t* trans.h (gfc_loopinfo): Remove codimen field.\n@@ -75,7 +87,7 @@\n 2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n \n \t* trans-array.c (gfc_conv_expr_descriptor): Simplify coarray\n-\tdescriptor setup code. \n+\tdescriptor setup code.\n \n 2011-10-07  Mikael Morin  <mikael.morin@sfr.fr>\n "}, {"sha": "fa05d2b5d00ade685c47ec78b98b69bc23237d08", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677e2daebff2bde08d013511f34db6a56ab5f774/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677e2daebff2bde08d013511f34db6a56ab5f774/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=677e2daebff2bde08d013511f34db6a56ab5f774", "patch": "@@ -526,7 +526,6 @@ gfc_get_array_ss (gfc_ss *next, gfc_expr *expr, int dimen, gfc_ss_type type)\n   ss->expr = expr;\n   info = &ss->data.info;\n   info->dimen = dimen;\n-  info->codimen = 0;\n   for (i = 0; i < info->dimen; i++)\n     info->dim[i] = i;\n \n@@ -973,13 +972,6 @@ gfc_trans_create_temp_array (stmtblock_t * pre, stmtblock_t * post,\n \t\t\t      size, tmp);\n       size = gfc_evaluate_now (size, pre);\n     }\n-  for (n = info->dimen; n < info->dimen + info->codimen; n++)\n-    {\n-      gfc_conv_descriptor_lbound_set (pre, desc, gfc_rank_cst[n],\n-                                      gfc_index_zero_node);\n-      if (n < info->dimen + info->codimen - 1)\n-\tgfc_conv_descriptor_ubound_set (pre, desc, gfc_rank_cst[n], loop->to[n]);\n-    }\n \n   /* Get the size of the array.  */\n \n@@ -1872,7 +1864,7 @@ gfc_trans_constant_array_constructor (gfc_loopinfo * loop,\n   info->data = gfc_build_addr_expr (NULL_TREE, tmp);\n   info->offset = gfc_index_zero_node;\n \n-  for (i = 0; i < info->dimen + info->codimen; i++)\n+  for (i = 0; i < info->dimen; i++)\n     {\n       info->delta[i] = gfc_index_zero_node;\n       info->start[i] = gfc_index_zero_node;\n@@ -3330,12 +3322,6 @@ gfc_conv_ss_startstride (gfc_loopinfo * loop)\n \t  for (n = 0; n < ss->data.info.dimen; n++)\n \t    gfc_conv_section_startstride (loop, ss, ss->data.info.dim[n],\n \t\t\t\t\t  false, false);\n-\t  for (n = ss->data.info.dimen;\n-\t       n < ss->data.info.dimen + ss->data.info.codimen; n++)\n-\t    gfc_conv_section_startstride (loop, ss, ss->data.info.dim[n], true,\n-\t\t\t\t\t  n == ss->data.info.dimen\n-\t\t\t\t\t       + ss->data.info.codimen -1);\n-\n \t  break;\n \n \tcase GFC_SS_INTRINSIC:\n@@ -7690,8 +7676,7 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n \t\tcase DIMEN_RANGE:\n                   /* We don't add anything for sections, just remember this\n                      dimension for later.  */\n-\t\t  newss->data.info.dim[newss->data.info.dimen\n-\t\t\t\t       + newss->data.info.codimen] = n;\n+\t\t  newss->data.info.dim[newss->data.info.dimen] = n;\n \t\t  if (n < ar->dimen)\n \t\t    newss->data.info.dimen++;\n \t\t  break;\n@@ -7703,8 +7688,7 @@ gfc_walk_variable_expr (gfc_ss * ss, gfc_expr * expr)\n \t\t\t\t\t      1, GFC_SS_VECTOR);\n \t\t  indexss->loop_chain = gfc_ss_terminator;\n \t\t  newss->data.info.subscript[n] = indexss;\n-\t\t  newss->data.info.dim[newss->data.info.dimen\n-\t\t\t\t       + newss->data.info.codimen] = n;\n+\t\t  newss->data.info.dim[newss->data.info.dimen] = n;\n \t\t  if (n < ar->dimen)\n \t\t    newss->data.info.dimen++;\n \t\t  break;"}, {"sha": "c47e678dfa7539a2ecfa385fc9677a714a8a4aa3", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677e2daebff2bde08d013511f34db6a56ab5f774/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677e2daebff2bde08d013511f34db6a56ab5f774/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=677e2daebff2bde08d013511f34db6a56ab5f774", "patch": "@@ -985,7 +985,6 @@ trans_this_image (gfc_se * se, gfc_expr *expr)\n   gfc_init_se (&argse, NULL);\n   ss = walk_coarray (expr->value.function.actual->expr);\n   gcc_assert (ss != gfc_ss_terminator);\n-  ss->data.info.codimen = corank;\n   argse.want_coarray = 1;\n   gfc_conv_expr_descriptor (&argse, expr->value.function.actual->expr, ss);\n   gfc_add_block_to_block (&se->pre, &argse.pre);\n@@ -1171,7 +1170,6 @@ trans_image_index (gfc_se * se, gfc_expr *expr)\n   gfc_init_se (&argse, NULL);\n   ss = walk_coarray (expr->value.function.actual->expr);\n   gcc_assert (ss != gfc_ss_terminator);\n-  ss->data.info.codimen = corank;\n   argse.want_coarray = 1;\n   gfc_conv_expr_descriptor (&argse, expr->value.function.actual->expr, ss);\n   gfc_add_block_to_block (&se->pre, &argse.pre);\n@@ -1496,7 +1494,6 @@ conv_intrinsic_cobound (gfc_se * se, gfc_expr * expr)\n \n   ss = walk_coarray (arg->expr);\n   gcc_assert (ss != gfc_ss_terminator);\n-  ss->data.info.codimen = corank;\n   gfc_init_se (&argse, NULL);\n   argse.want_coarray = 1;\n "}, {"sha": "535c207fcd4bad579dc61728daf0fd175a38e5a5", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677e2daebff2bde08d013511f34db6a56ab5f774/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677e2daebff2bde08d013511f34db6a56ab5f774/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=677e2daebff2bde08d013511f34db6a56ab5f774", "patch": "@@ -118,7 +118,7 @@ gfc_coarray_type;\n \n typedef struct gfc_ss_info\n {\n-  int dimen, codimen;\n+  int dimen;\n   /* The ref that holds information on this section.  */\n   gfc_ref *ref;\n   /* The descriptor of this array.  */"}]}