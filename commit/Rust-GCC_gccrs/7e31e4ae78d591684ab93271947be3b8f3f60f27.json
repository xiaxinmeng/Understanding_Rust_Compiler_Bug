{"sha": "7e31e4ae78d591684ab93271947be3b8f3f60f27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UzMWU0YWU3OGQ1OTE2ODRhYjkzMjcxOTQ3YmUzYjhmM2Y2MGYyNw==", "commit": {"author": {"name": "Bo Thorsen", "email": "bo@gcc.gnu.org", "date": "2002-07-19T00:37:03Z"}, "committer": {"name": "Bo Thorsen", "email": "bo@gcc.gnu.org", "date": "2002-07-19T00:37:03Z"}, "message": "Forgot this file.\n\nFrom-SVN: r55573", "tree": {"sha": "555e226429a4d316acffd33cb2be37731969adeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/555e226429a4d316acffd33cb2be37731969adeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e31e4ae78d591684ab93271947be3b8f3f60f27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e31e4ae78d591684ab93271947be3b8f3f60f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e31e4ae78d591684ab93271947be3b8f3f60f27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e31e4ae78d591684ab93271947be3b8f3f60f27/comments", "author": null, "committer": null, "parents": [{"sha": "437deefaca874a13682ee1693e19eb88e64a1f33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437deefaca874a13682ee1693e19eb88e64a1f33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437deefaca874a13682ee1693e19eb88e64a1f33"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "77193250311bbf98292a052417414bca71bfb713", "filename": "libffi/src/x86/ffi.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e31e4ae78d591684ab93271947be3b8f3f60f27/libffi%2Fsrc%2Fx86%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e31e4ae78d591684ab93271947be3b8f3f60f27/libffi%2Fsrc%2Fx86%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi.c?ref=7e31e4ae78d591684ab93271947be3b8f3f60f27", "patch": "@@ -38,12 +38,10 @@ void ffi_prep_args(char *stack, extended_cif *ecif)\n /*@=exportheader@*/\n {\n   register unsigned int i;\n-  register int tmp;\n   register void **p_argv;\n   register char *argp;\n   register ffi_type **p_arg;\n \n-  tmp = 0;\n   argp = stack;\n \n   if (ecif->cif->rtype->type == FFI_TYPE_STRUCT)\n@@ -268,12 +266,10 @@ ffi_prep_incoming_args_SYSV(char *stack, void **rvalue,\n /*@=exportheader@*/\n {\n   register unsigned int i;\n-  register int tmp;\n   register void **p_argv;\n   register char *argp;\n   register ffi_type **p_arg;\n \n-  tmp = 0;\n   argp = stack;\n \n   if ( cif->rtype->type == FFI_TYPE_STRUCT ) {"}]}