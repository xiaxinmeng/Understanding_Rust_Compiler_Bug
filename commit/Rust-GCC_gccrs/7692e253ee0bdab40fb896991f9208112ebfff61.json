{"sha": "7692e253ee0bdab40fb896991f9208112ebfff61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY5MmUyNTNlZTBiZGFiNDBmYjg5Njk5MWY5MjA4MTEyZWJmZmY2MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-08-20T15:28:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-08-20T15:28:15Z"}, "message": "[CPP PATCH] Fix warning & other cleanups.\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-08/msg01162.html\n\t* directives.c (do_undef): Use cpp_macro_p & cpp_builtin_macro_p.\n\t* include/cpplib.h (enum cpp_macro_kind): Remove trailing comma.\n\t(cpp_fun_like_macro_p): Make inline, define.\n\t* macro.c (cpp_define_lazily): Use UCHAR_MAX.\n\t(cpp_fun_like_macro_p): Delete.\n\nFrom-SVN: r263666", "tree": {"sha": "d7d8e0dbf2fb099ed1f39632f6d6f65ebdbd43c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7d8e0dbf2fb099ed1f39632f6d6f65ebdbd43c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7692e253ee0bdab40fb896991f9208112ebfff61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7692e253ee0bdab40fb896991f9208112ebfff61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7692e253ee0bdab40fb896991f9208112ebfff61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7692e253ee0bdab40fb896991f9208112ebfff61/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e11b709d2107a504c185d75d7e1a2b0b2a2dc6fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11b709d2107a504c185d75d7e1a2b0b2a2dc6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e11b709d2107a504c185d75d7e1a2b0b2a2dc6fe"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "01cc250867827b598ade5a0607b92ad07031297d", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7692e253ee0bdab40fb896991f9208112ebfff61/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7692e253ee0bdab40fb896991f9208112ebfff61/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=7692e253ee0bdab40fb896991f9208112ebfff61", "patch": "@@ -1,5 +1,11 @@\n 2018-08-20  Nathan Sidwell  <nathan@acm.org>\n \n+\t* directives.c (do_undef): Use cpp_macro_p & cpp_builtin_macro_p.\n+\t* include/cpplib.h (enum cpp_macro_kind): Remove trailing comma.\n+\t(cpp_fun_like_macro_p): Make inline, define.\n+\t* macro.c (cpp_define_lazily): Use UCHAR_MAX.\n+\t(cpp_fun_like_macro_p): Delete.\n+\n \t* Makefile.in (TAGS_SOURCES): Remove cpp-id-data.h.\n \t* include/cpp-id-data.h: Delete.\n \t* internal.h: Include cpplib.h not cpp-id-data.h."}, {"sha": "f04ed7cf2c1f51755860909908d71d31ad1e25db", "filename": "libcpp/directives.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7692e253ee0bdab40fb896991f9208112ebfff61/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7692e253ee0bdab40fb896991f9208112ebfff61/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=7692e253ee0bdab40fb896991f9208112ebfff61", "patch": "@@ -665,12 +665,12 @@ do_undef (cpp_reader *pfile)\n \n       /* 6.10.3.5 paragraph 2: [#undef] is ignored if the specified\n \t identifier is not currently defined as a macro name.  */\n-      if (node->type == NT_MACRO)\n+      if (cpp_macro_p (node))\n \t{\n \t  if (node->flags & NODE_WARN)\n \t    cpp_error (pfile, CPP_DL_WARNING,\n \t\t       \"undefining \\\"%s\\\"\", NODE_NAME (node));\n-\t  else if ((node->flags & NODE_BUILTIN)\n+\t  else if (cpp_builtin_macro_p (node)\n \t\t   && CPP_OPTION (pfile, warn_builtin_macro_redefined))\n \t    cpp_warning_with_line (pfile, CPP_W_BUILTIN_MACRO_REDEFINED,\n \t\t\t\t   pfile->directive_line, 0,"}, {"sha": "b784e0facd07f994b02f7c900383f2445f44f583", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7692e253ee0bdab40fb896991f9208112ebfff61/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7692e253ee0bdab40fb896991f9208112ebfff61/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=7692e253ee0bdab40fb896991f9208112ebfff61", "patch": "@@ -674,7 +674,7 @@ struct cpp_dir\n enum cpp_macro_kind {\n   cmk_macro,\t/* An ISO macro (token expansion).  */\n   cmk_assert,   /* An assertion.  */\n-  cmk_traditional,\t/* A traditional macro (text expansion).  */\n+  cmk_traditional\t/* A traditional macro (text expansion).  */\n };\n \n /* Each macro definition is recorded in a cpp_macro structure.\n@@ -972,7 +972,10 @@ inline bool cpp_macro_p (const cpp_hashnode *node)\n   return node->type == NT_MACRO;\n }\n /* Returns true if NODE is a function-like user macro.  */\n-extern bool cpp_fun_like_macro_p (cpp_hashnode *node);\n+inline bool cpp_fun_like_macro_p (cpp_hashnode *node)\n+{\n+  return cpp_user_macro_p (node) && node->value.macro->fun_like;\n+}\n \n extern const unsigned char *cpp_macro_definition (cpp_reader *,\n \t\t\t\t\t\t  cpp_hashnode *);"}, {"sha": "123f63d11771ea46c4f4cabd430e6f59116a6801", "filename": "libcpp/macro.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7692e253ee0bdab40fb896991f9208112ebfff61/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7692e253ee0bdab40fb896991f9208112ebfff61/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=7692e253ee0bdab40fb896991f9208112ebfff61", "patch": "@@ -3551,7 +3551,7 @@ cpp_define_lazily (cpp_reader *pfile, cpp_hashnode *node, unsigned num)\n {\n   cpp_macro *macro = node->value.macro;\n \n-  gcc_checking_assert (pfile->cb.user_lazy_macro && macro && num < 255);\n+  gcc_checking_assert (pfile->cb.user_lazy_macro && macro && num < UCHAR_MAX);\n \n   macro->lazy = num + 1;\n }\n@@ -3632,15 +3632,6 @@ check_trad_stringification (cpp_reader *pfile, const cpp_macro *macro,\n     }\n }\n \n-/* Returns true of NODE is a function-like macro.  */\n-bool\n-cpp_fun_like_macro_p (cpp_hashnode *node)\n-{\n-  return (node->type == NT_MACRO\n-\t  && (node->flags & (NODE_BUILTIN | NODE_MACRO_ARG)) == 0\n-\t  && node->value.macro->fun_like);\n-}\n-\n /* Returns the name, arguments and expansion of a macro, in a format\n    suitable to be read back in again, and therefore also for DWARF 2\n    debugging info.  e.g. \"PASTE(X, Y) X ## Y\", or \"MACNAME EXPANSION\"."}]}