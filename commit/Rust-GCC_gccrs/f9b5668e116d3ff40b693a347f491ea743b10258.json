{"sha": "f9b5668e116d3ff40b693a347f491ea743b10258", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjliNTY2OGUxMTZkM2ZmNDBiNjkzYTM0N2Y0OTFlYTc0M2IxMDI1OA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-10-15T23:04:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-10-15T23:04:06Z"}, "message": "pa.c (move_operand): Rely on memory_address_p to determine the validity of non-indexed memory addresses.\n\n        * pa.c (move_operand): Rely on memory_address_p to determine the\n        validity of non-indexed memory addresses.\n        * pa.h (GO_IF_LEGITIMATE_ADDRESS): Allow LO_SUM with a symbolic\n        operand in DFmode and SFmode when generating PA2.0 code.\n\nFrom-SVN: r30025", "tree": {"sha": "2469c31f92a4077956a4ae07315a9a83374e53fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2469c31f92a4077956a4ae07315a9a83374e53fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9b5668e116d3ff40b693a347f491ea743b10258", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b5668e116d3ff40b693a347f491ea743b10258", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b5668e116d3ff40b693a347f491ea743b10258", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b5668e116d3ff40b693a347f491ea743b10258/comments", "author": null, "committer": null, "parents": [{"sha": "d5e3e85b1828e742832f6dcb7ff2e75a0ac55000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e3e85b1828e742832f6dcb7ff2e75a0ac55000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e3e85b1828e742832f6dcb7ff2e75a0ac55000"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "54dac4ecf2a042583dbd97cb58dc3387e6dfa2c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5668e116d3ff40b693a347f491ea743b10258/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5668e116d3ff40b693a347f491ea743b10258/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9b5668e116d3ff40b693a347f491ea743b10258", "patch": "@@ -1,3 +1,10 @@\n+Fri Oct 15 17:02:09 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.c (move_operand): Rely on memory_address_p to determine the\n+\tvalidity of non-indexed memory addresses.\n+\t* pa.h (GO_IF_LEGITIMATE_ADDRESS): Allow LO_SUM with a symbolic\n+\toperand in DFmode and SFmode when generating PA2.0 code.\n+\n Fri Oct 15 14:25:19 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* print-rtl.c (print_rtx): Limit last 'u' change to LABEL_REF."}, {"sha": "6af006693ccb0285733282e95a5f1794f52c5424", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5668e116d3ff40b693a347f491ea743b10258/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5668e116d3ff40b693a347f491ea743b10258/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=f9b5668e116d3ff40b693a347f491ea743b10258", "patch": "@@ -331,9 +331,6 @@ move_operand (op, mode)\n     return 0;\n \n   op = XEXP (op, 0);\n-  if (GET_CODE (op) == LO_SUM)\n-    return (register_operand (XEXP (op, 0), Pmode)\n-\t    && CONSTANT_P (XEXP (op, 1)));\n \n   /* Since move_operand is only used for source operands, we can always\n      allow scaled indexing!  */"}, {"sha": "e233a75394983bdd84a7e3984a1977bf0ccf811c", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5668e116d3ff40b693a347f491ea743b10258/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5668e116d3ff40b693a347f491ea743b10258/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=f9b5668e116d3ff40b693a347f491ea743b10258", "patch": "@@ -1473,6 +1473,10 @@ extern struct rtx_def *hppa_va_arg();\n \t   && REG_OK_FOR_BASE_P (XEXP (X, 0))\t\t\\\n \t   && CONSTANT_P (XEXP (X, 1))\t\t\t\\\n \t   && (TARGET_SOFT_FLOAT\t\t\t\\\n+\t       /* We can allow symbolic LO_SUM addresses\\\n+\t\t  for PA2.0.  */\t\t\t\\\n+\t       || (TARGET_PA_20\t\t\t\t\\\n+\t           && GET_CODE (XEXP (X, 1)) != CONST_INT)\\\n \t       || ((MODE) != SFmode\t\t\t\\\n \t\t   && (MODE) != DFmode)))\t\t\\\n     goto ADDR;\t\t\t\t\t\t\\\n@@ -1482,6 +1486,10 @@ extern struct rtx_def *hppa_va_arg();\n \t   && REG_OK_FOR_BASE_P (SUBREG_REG (XEXP (X, 0)))\\\n \t   && CONSTANT_P (XEXP (X, 1))\t\t\t\\\n \t   && (TARGET_SOFT_FLOAT\t\t\t\\\n+\t       /* We can allow symbolic LO_SUM addresses\\\n+\t\t  for PA2.0.  */\t\t\t\\\n+\t       || (TARGET_PA_20\t\t\t\t\\\n+\t           && GET_CODE (XEXP (X, 1)) != CONST_INT)\\\n \t       || ((MODE) != SFmode\t\t\t\\\n \t\t   && (MODE) != DFmode)))\t\t\\\n     goto ADDR;\t\t\t\t\t\t\\"}]}