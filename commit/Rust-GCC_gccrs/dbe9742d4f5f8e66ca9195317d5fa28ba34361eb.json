{"sha": "dbe9742d4f5f8e66ca9195317d5fa28ba34361eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJlOTc0MmQ0ZjVmOGU2NmNhOTE5NTMxN2Q1ZmEyOGJhMzQzNjFlYg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-06-02T19:35:24Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-06-02T19:35:24Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1138", "tree": {"sha": "fd47f6b222d945ac0d943ac8b274f247faafae60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd47f6b222d945ac0d943ac8b274f247faafae60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbe9742d4f5f8e66ca9195317d5fa28ba34361eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe9742d4f5f8e66ca9195317d5fa28ba34361eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbe9742d4f5f8e66ca9195317d5fa28ba34361eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe9742d4f5f8e66ca9195317d5fa28ba34361eb/comments", "author": null, "committer": null, "parents": [{"sha": "d58c987538c199be667fd51fa0d954351e970681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58c987538c199be667fd51fa0d954351e970681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58c987538c199be667fd51fa0d954351e970681"}], "stats": {"total": 59, "additions": 47, "deletions": 12}, "files": [{"sha": "612b49582ac577ba76820dde86c1ebbd1817f36a", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe9742d4f5f8e66ca9195317d5fa28ba34361eb/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe9742d4f5f8e66ca9195317d5fa28ba34361eb/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=dbe9742d4f5f8e66ca9195317d5fa28ba34361eb", "patch": "@@ -3047,6 +3047,7 @@ mips_debugger_offset (addr, offset)\n \n   return offset;\n }\n+\n \f\n /* A C compound statement to output to stdio stream STREAM the\n    assembler syntax for an instruction operand X.  X is an RTL\n@@ -3663,6 +3664,45 @@ mips_declare_object (stream, name, init_string, final_string, size)\n     }\n }\n \n+\f\n+/* Output a double precision value to the assembler.  If both the\n+   host and target are IEEE, emit the values in hex.  */\n+\n+void\n+mips_output_double (stream, value)\n+     FILE *stream;\n+     REAL_VALUE_TYPE value;\n+{\n+#ifdef REAL_VALUE_TO_TARGET_DOUBLE\n+  long value_long[2];\n+  REAL_VALUE_TO_TARGET_DOUBLE (value, value_long);\n+\n+  fprintf (stream, \"\\t.word\\t0x%08lx\\t\\t# %.20g\\n\\t.word\\t0x%08lx\\n\",\n+\t   value_long[0], value, value_long[1]);\n+#else\n+  fprintf (stream, \"\\t.double\\t%.20g\\n\", value);\n+#endif\n+}\n+\n+\n+/* Output a single precision value to the assembler.  If both the\n+   host and target are IEEE, emit the values in hex.  */\n+\n+void\n+mips_output_float (stream, value)\n+     FILE *stream;\n+     REAL_VALUE_TYPE value;\n+{\n+#ifdef REAL_VALUE_TO_TARGET_SINGLE\n+  long value_long;\n+  REAL_VALUE_TO_TARGET_SINGLE (value, value_long);\n+\n+  fprintf (stream, \"\\t.word\\t0x%08lx\\t\\t# %.12g (float)\\n\", value_long, value);\n+#else\n+  fprintf (stream, \"\\t.float\\t%.12g\\n\", value);\n+#endif\n+}\n+\n \f\n /* Return the bytes needed to compute the frame pointer from the current\n    stack pointer."}, {"sha": "0e631e6ea29851ce15585ec38ccd6f9fb0236916", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe9742d4f5f8e66ca9195317d5fa28ba34361eb/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe9742d4f5f8e66ca9195317d5fa28ba34361eb/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=dbe9742d4f5f8e66ca9195317d5fa28ba34361eb", "patch": "@@ -147,7 +147,9 @@ extern int\t\tmips_epilogue_delay_slots ();\n extern char\t       *mips_fill_delay_slot ();\n extern char\t       *mips_move_1word ();\n extern char\t       *mips_move_2words ();\n+extern void\t\tmips_output_double ();\n extern int\t\tmips_output_external ();\n+extern void\t\tmips_output_float ();\n extern void\t\tmips_output_filename ();\n extern void\t\tmips_output_lineno ();\n extern char\t       *output_block_move ();\n@@ -426,7 +428,7 @@ while (0)\n \f\n /* Print subsidiary information on the compiler version in use.  */\n \n-#define MIPS_VERSION \"[AL 1.1, MM 18]\"\n+#define MIPS_VERSION \"[AL 1.1, MM 19]\"\n \n #ifndef MACHINE_TYPE\n #define MACHINE_TYPE \"BSD Mips\"\n@@ -3006,21 +3008,14 @@ while (0)\n /* This is how to output an assembler line defining a `double' constant.  */\n \n #define ASM_OUTPUT_DOUBLE(STREAM,VALUE)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  union { double d; long l[2]; } u2;\t\t\t\t\t\\\n-  u2.d = VALUE;\t\t\t\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\t.word\\t0x%08lx\\t\\t# %.20g\\n\\t.word\\t0x%08lx\\n\",\t\\\n-\t   u2.l[0], u2.d, u2.l[1]);\t\t\t\t\t\\\n-}\n+  mips_output_double (STREAM, VALUE)\n+\n \n /* This is how to output an assembler line defining a `float' constant.  */\n \n #define ASM_OUTPUT_FLOAT(STREAM,VALUE)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  union { float f; long l; } u2;\t\t\t\t\t\\\n-  u2.f = VALUE;\t\t\t\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\t.word\\t0x%08lx\\t\\t# %.12g\\n\", u2.l, u2.f);\t\\\n-}\n+  mips_output_float (STREAM, VALUE)\n+\n \n /* This is how to output an assembler line defining an `int' constant.  */\n "}]}