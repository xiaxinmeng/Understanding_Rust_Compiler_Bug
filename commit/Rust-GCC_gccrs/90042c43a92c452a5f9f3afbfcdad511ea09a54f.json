{"sha": "90042c43a92c452a5f9f3afbfcdad511ea09a54f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAwNDJjNDNhOTJjNDUyYTVmOWYzYWZiZmNkYWQ1MTFlYTA5YTU0Zg==", "commit": {"author": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2020-10-16T13:53:28Z"}, "committer": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2020-10-16T13:53:40Z"}, "message": "arm: Fix the warning -mcpu=cortex-m55 conflicting with -march=armv8.1-m.main (pr97327).\n\nThis patch fixes (PR97327) the warning -mcpu=cortex-m55 conflicts with -march=armv8.1-m.main\nfor -mfloat-abi=soft by adding the isa_bit_mve_float to clearing FP bit list.\n\nThe following combination are fixed with this patch:\n$ cat bug.c\nint main(){\nreturn 0;\n}\n\n$ arm-none-eabi-gcc -mcpu=cortex-m55 -mfloat-abi=soft bug.c -c\n$ arm-none-eabi-gcc -mcpu=cortex-m55 -mfloat-abi=soft -march=armv8.1-m.main+mve bug.c -c\n\nBefore this patch for above combinations:\ncc1: warning: switch '-mcpu=cortex-m55' conflicts with '-march=armv8.1-m.main' switch\n\nAfter this patch for above combinations no warning/errors.\n\ngcc/ChangeLog:\n\n2020-10-16  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n\n\tPR target/97327\n\t* config/arm/arm.c (fp_bitlist): Add isa_bit_mve_float to FP bits array.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/97327\n\t* gcc.target/arm/mve/intrinsics/pr97327.c: New test.", "tree": {"sha": "ffb38fd53681df7203601c5ecd05d595881bd37c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffb38fd53681df7203601c5ecd05d595881bd37c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90042c43a92c452a5f9f3afbfcdad511ea09a54f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90042c43a92c452a5f9f3afbfcdad511ea09a54f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90042c43a92c452a5f9f3afbfcdad511ea09a54f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90042c43a92c452a5f9f3afbfcdad511ea09a54f/comments", "author": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c6e0cafa38cee8309f37b846cb7db813a472a54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6e0cafa38cee8309f37b846cb7db813a472a54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6e0cafa38cee8309f37b846cb7db813a472a54"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "dfadaca6fdfe16cfd5b6531ae8564d01063bbe77", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90042c43a92c452a5f9f3afbfcdad511ea09a54f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90042c43a92c452a5f9f3afbfcdad511ea09a54f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=90042c43a92c452a5f9f3afbfcdad511ea09a54f", "patch": "@@ -3429,8 +3429,9 @@ arm_option_override (void)\n {\n   static const enum isa_feature fpu_bitlist_internal[]\n     = { ISA_ALL_FPU_INTERNAL, isa_nobit };\n+  /* isa_bit_mve_float is also part of FP bit list for arch v8.1-m.main.  */\n   static const enum isa_feature fp_bitlist[]\n-    = { ISA_ALL_FP, isa_nobit };\n+    = { ISA_ALL_FP, isa_bit_mve_float, isa_nobit };\n   static const enum isa_feature quirk_bitlist[] = { ISA_ALL_QUIRKS, isa_nobit};\n   cl_target_option opts;\n "}, {"sha": "8f6d36063811607623048c0a95920b29e43f4c39", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/pr97327.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90042c43a92c452a5f9f3afbfcdad511ea09a54f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fpr97327.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90042c43a92c452a5f9f3afbfcdad511ea09a54f/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fpr97327.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fpr97327.c?ref=90042c43a92c452a5f9f3afbfcdad511ea09a54f", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=hard\" } { \"\" } } */\n+/* { dg-additional-options \"-mcpu=cortex-m55 -mfloat-abi=soft -mfpu=auto -Werror\" } */\n+\n+int main ()\n+{\n+  return 0;\n+}"}]}