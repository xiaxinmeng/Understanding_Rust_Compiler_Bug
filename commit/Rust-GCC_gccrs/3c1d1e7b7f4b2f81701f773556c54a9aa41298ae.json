{"sha": "3c1d1e7b7f4b2f81701f773556c54a9aa41298ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxZDFlN2I3ZjRiMmY4MTcwMWY3NzM1NTZjNTRhOWFhNDEyOThhZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-10-12T18:57:52Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-10-12T18:57:52Z"}, "message": "re GNATS gcj/356 (gcjh bug: Can't #include <java/awt/Container.h>)\n\n\tFix for PR gcj/356:\n\t* gjavah.c (add_class_decl): Don't special-case inner classes.\n\t(add_namelet): Likewise.\n\nFrom-SVN: r36854", "tree": {"sha": "f6391197f6fa1bfe79419915b471b09e90f7f4fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6391197f6fa1bfe79419915b471b09e90f7f4fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c1d1e7b7f4b2f81701f773556c54a9aa41298ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c1d1e7b7f4b2f81701f773556c54a9aa41298ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c1d1e7b7f4b2f81701f773556c54a9aa41298ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c1d1e7b7f4b2f81701f773556c54a9aa41298ae/comments", "author": null, "committer": null, "parents": [{"sha": "9dcbdc7eea8409422de1ea120622ec7ab709a383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dcbdc7eea8409422de1ea120622ec7ab709a383", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dcbdc7eea8409422de1ea120622ec7ab709a383"}], "stats": {"total": 34, "additions": 12, "deletions": 22}, "files": [{"sha": "1f0229a9a3abda965dabe7d6bb89b0988701dd98", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1d1e7b7f4b2f81701f773556c54a9aa41298ae/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1d1e7b7f4b2f81701f773556c54a9aa41298ae/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3c1d1e7b7f4b2f81701f773556c54a9aa41298ae", "patch": "@@ -1,3 +1,9 @@\n+2000-10-12  Tom Tromey  <tromey@cygnus.com>\n+\n+\tFix for PR gcj/356:\n+\t* gjavah.c (add_class_decl): Don't special-case inner classes.\n+\t(add_namelet): Likewise.\n+\n 2000-10-10  Tom Tromey  <tromey@cygnus.com>\n \n \t* lex.c (java_new_lexer): Initialize out_first and out_last"}, {"sha": "4cf0e98257f9f5f3945d757d36eff7c09ed94f8f", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 6, "deletions": 22, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1d1e7b7f4b2f81701f773556c54a9aa41298ae/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1d1e7b7f4b2f81701f773556c54a9aa41298ae/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=3c1d1e7b7f4b2f81701f773556c54a9aa41298ae", "patch": "@@ -1463,7 +1463,7 @@ add_namelet (name, name_limit, parent)\n \treturn;\n     }\n \n-  for (p = name; p < name_limit && *p != '/' && *p != '$'; ++p)\n+  for (p = name; p < name_limit && *p != '/'; ++p)\n     ;\n \n   /* Search for this name beneath the PARENT node.  */\n@@ -1484,15 +1484,15 @@ add_namelet (name, name_limit, parent)\n       n->name = xmalloc (p - name + 1);\n       strncpy (n->name, name, p - name);\n       n->name[p - name] = '\\0';\n-      n->is_class = (p == name_limit || *p == '$');\n+      n->is_class = (p == name_limit);\n       n->subnamelets = NULL;\n       n->next = parent->subnamelets;\n       parent->subnamelets = n;\n     }\n \n   /* We recurse if there is more text, and if the trailing piece does\n      not represent an inner class. */\n-  if (p < name_limit && *p != '$')\n+  if (p < name_limit)\n     add_namelet (p + 1, name_limit, n);\n }\n \n@@ -1568,7 +1568,7 @@ add_class_decl (out, jcf, signature)\n \n   for (i = 0; i < len; ++i)\n     {\n-      int start, saw_dollar;\n+      int start;\n \n       /* If we see an array, then we include the array header.  */\n       if (s[i] == '[')\n@@ -1582,26 +1582,10 @@ add_class_decl (out, jcf, signature)\n       if (s[i] != 'L')\n \tcontinue;\n \n-      saw_dollar = 0;\n       for (start = ++i; i < len && s[i] != ';'; ++i)\n-\t{\n-\t  if (! saw_dollar && s[i] == '$' && out)\n-\t    {\n-\t      saw_dollar = 1;\n-\t      /* If this class represents an inner class, then\n-\t\t generate a `#include' for the outer class.  However,\n-\t\t don't generate the include if the outer class is the\n-\t\t class we are processing.  */\n-\t      if (i - start < tlen || strncmp (&s[start], tname, i - start))\n-\t\tprint_include (out, &s[start], i - start);\n-\t      break;\n-\t    }\n-\t}\n+\t;\n \n-      /* If we saw an inner class, then the generated #include will\n-\t declare the class.  So in this case we needn't bother.  */\n-      if (! saw_dollar)\n-\tadd_namelet (&s[start], &s[i], &root);\n+      add_namelet (&s[start], &s[i], &root);\n     }\n }\n "}]}