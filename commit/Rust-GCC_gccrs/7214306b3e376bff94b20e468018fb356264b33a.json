{"sha": "7214306b3e376bff94b20e468018fb356264b33a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIxNDMwNmIzZTM3NmJmZjk0YjIwZTQ2ODAxOGZiMzU2MjY0YjMzYQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-10-31T16:00:38Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2013-10-31T16:00:38Z"}, "message": "lra-constraints (process_alt_operands): Use the result elimination register for operand when matching constraints.\n\n2013-10-31  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* lra-constraints (process_alt_operands): Use the result\n\telimination register for operand when matching constraints.\n\nFrom-SVN: r204267", "tree": {"sha": "1df522176b3ea2c9f93e301107111dccb047243b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1df522176b3ea2c9f93e301107111dccb047243b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7214306b3e376bff94b20e468018fb356264b33a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7214306b3e376bff94b20e468018fb356264b33a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7214306b3e376bff94b20e468018fb356264b33a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7214306b3e376bff94b20e468018fb356264b33a/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1c2162eadef6e5101855bfd130e9aae154210a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c2162eadef6e5101855bfd130e9aae154210a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c2162eadef6e5101855bfd130e9aae154210a7"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "3da5361978f45de65bc13df572a83d8ff7f2eff2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7214306b3e376bff94b20e468018fb356264b33a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7214306b3e376bff94b20e468018fb356264b33a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7214306b3e376bff94b20e468018fb356264b33a", "patch": "@@ -1,3 +1,8 @@\n+2013-10-31  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* lra-constraints (process_alt_operands): Use the result\n+\telimination register for operand when matching constraints.\n+\n 2013-10-31  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-vrp.c (maybe_set_nonzero_bits): New function."}, {"sha": "ee82c6f496c0be229c4f3dd4bee6b02ed55017e5", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7214306b3e376bff94b20e468018fb356264b33a/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7214306b3e376bff94b20e468018fb356264b33a/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=7214306b3e376bff94b20e468018fb356264b33a", "patch": "@@ -1466,23 +1466,32 @@ process_alt_operands (int only_alternative)\n      function.\t*/\n   for (nop = 0; nop < n_operands; nop++)\n     {\n+      rtx reg;\n+\n       op = no_subreg_reg_operand[nop] = *curr_id->operand_loc[nop];\n       /* The real hard regno of the operand after the allocation.  */\n       hard_regno[nop] = get_hard_regno (op);\n \n-      operand_reg[nop] = op;\n-      biggest_mode[nop] = GET_MODE (operand_reg[nop]);\n-      if (GET_CODE (operand_reg[nop]) == SUBREG)\n+      operand_reg[nop] = reg = op;\n+      biggest_mode[nop] = GET_MODE (op);\n+      if (GET_CODE (op) == SUBREG)\n \t{\n-\t  operand_reg[nop] = SUBREG_REG (operand_reg[nop]);\n+\t  operand_reg[nop] = reg = SUBREG_REG (op);\n \t  if (GET_MODE_SIZE (biggest_mode[nop])\n-\t      < GET_MODE_SIZE (GET_MODE (operand_reg[nop])))\n-\t    biggest_mode[nop] = GET_MODE (operand_reg[nop]);\n+\t      < GET_MODE_SIZE (GET_MODE (reg)))\n+\t    biggest_mode[nop] = GET_MODE (reg);\n \t}\n-      if (REG_P (operand_reg[nop]))\n-\tno_subreg_reg_operand[nop] = operand_reg[nop];\n-      else\n+      if (! REG_P (reg))\n \toperand_reg[nop] = NULL_RTX;\n+      else if (REGNO (reg) >= FIRST_PSEUDO_REGISTER\n+\t       || ((int) REGNO (reg)\n+\t\t   == lra_get_elimination_hard_regno (REGNO (reg))))\n+\tno_subreg_reg_operand[nop] = reg;\n+      else\n+\toperand_reg[nop] = no_subreg_reg_operand[nop]\n+\t  /* Just use natural mode for elimination result.  It should\n+\t     be enough for extra constraints hooks.  */\n+\t  = regno_reg_rtx[hard_regno[nop]];\n     }\n \n   /* The constraints are made of several alternatives.\tEach operand's"}]}