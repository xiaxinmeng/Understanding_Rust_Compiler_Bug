{"sha": "4fe8591b5242e7ce738f1a8cce4e77d81982a141", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZlODU5MWI1MjQyZTdjZTczOGYxYThjY2U0ZTc3ZDgxOTgyYTE0MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-22T18:48:15Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-22T18:48:15Z"}, "message": "varasm.c (get_pool_mode_for_function, [...]): Remove.\n\n\t* varasm.c (get_pool_mode_for_function, get_pool_offset):\n\tRemove.\n\t* rtl.h: Remove the corresponding prototypes.\n\nFrom-SVN: r89465", "tree": {"sha": "8476ead14088b9822917e5736e11dcd448dd2534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8476ead14088b9822917e5736e11dcd448dd2534"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fe8591b5242e7ce738f1a8cce4e77d81982a141", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fe8591b5242e7ce738f1a8cce4e77d81982a141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fe8591b5242e7ce738f1a8cce4e77d81982a141", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fe8591b5242e7ce738f1a8cce4e77d81982a141/comments", "author": null, "committer": null, "parents": [{"sha": "385efa80b70c085c5856c2454236c0bdf0567c80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385efa80b70c085c5856c2454236c0bdf0567c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/385efa80b70c085c5856c2454236c0bdf0567c80"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "af043d073d88d3116db29fcf49682535069ea2ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fe8591b5242e7ce738f1a8cce4e77d81982a141/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fe8591b5242e7ce738f1a8cce4e77d81982a141/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fe8591b5242e7ce738f1a8cce4e77d81982a141", "patch": "@@ -1,3 +1,9 @@\n+2004-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* varasm.c (get_pool_mode_for_function, get_pool_offset):\n+\tRemove.\n+\t* rtl.h: Remove the corresponding prototypes.\n+\n 2004-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-cfg.c (thread_jumps_from_bb): Speed up by extracting"}, {"sha": "9b9bfcce6b7179ce60b23acd577601900ef5e20d", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fe8591b5242e7ce738f1a8cce4e77d81982a141/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fe8591b5242e7ce738f1a8cce4e77d81982a141/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=4fe8591b5242e7ce738f1a8cce4e77d81982a141", "patch": "@@ -1446,8 +1446,6 @@ extern rtx get_pool_constant (rtx);\n extern rtx get_pool_constant_mark (rtx, bool *);\n extern enum machine_mode get_pool_mode (rtx);\n extern rtx get_pool_constant_for_function (struct function *, rtx);\n-extern enum machine_mode get_pool_mode_for_function (struct function *, rtx);\n-extern int get_pool_offset (rtx);\n extern rtx simplify_subtraction (rtx);\n \n /* In function.c  */"}, {"sha": "f704f684dea058912595ce76a7bbb91964568e5d", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fe8591b5242e7ce738f1a8cce4e77d81982a141/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fe8591b5242e7ce738f1a8cce4e77d81982a141/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=4fe8591b5242e7ce738f1a8cce4e77d81982a141", "patch": "@@ -3039,20 +3039,6 @@ get_pool_mode (rtx addr)\n   return find_pool_constant (cfun->varasm->pool, addr)->mode;\n }\n \n-enum machine_mode\n-get_pool_mode_for_function (struct function *f, rtx addr)\n-{\n-  return find_pool_constant (f->varasm->pool, addr)->mode;\n-}\n-\n-/* Similar, return the offset in the constant pool.  */\n-\n-int\n-get_pool_offset (rtx addr)\n-{\n-  return find_pool_constant (cfun->varasm->pool, addr)->offset;\n-}\n-\n /* Return the size of the constant pool.  */\n \n int"}]}