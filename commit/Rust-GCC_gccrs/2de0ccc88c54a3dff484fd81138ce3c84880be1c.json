{"sha": "2de0ccc88c54a3dff484fd81138ce3c84880be1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRlMGNjYzg4YzU0YTNkZmY0ODRmZDgxMTM4Y2UzYzg0ODgwYmUxYw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-06-29T14:45:44Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-06-29T14:45:44Z"}, "message": "lex.c (maybe_add_lang_type_raw): Exit early, rather than use a flag.\n\n\t* lex.c (maybe_add_lang_type_raw): Exit early, rather than use a\n\tflag.\n\nFrom-SVN: r249790", "tree": {"sha": "fd540189d1753d75693a48935d82f4eef7258af7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd540189d1753d75693a48935d82f4eef7258af7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2de0ccc88c54a3dff484fd81138ce3c84880be1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2de0ccc88c54a3dff484fd81138ce3c84880be1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2de0ccc88c54a3dff484fd81138ce3c84880be1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2de0ccc88c54a3dff484fd81138ce3c84880be1c/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56b2a94b4377c86118f43297f7def1ff7d0b0e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b2a94b4377c86118f43297f7def1ff7d0b0e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b2a94b4377c86118f43297f7def1ff7d0b0e65"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "eefc3f03e870d250ea1843fe7414297f3f17306a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de0ccc88c54a3dff484fd81138ce3c84880be1c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de0ccc88c54a3dff484fd81138ce3c84880be1c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2de0ccc88c54a3dff484fd81138ce3c84880be1c", "patch": "@@ -1,5 +1,8 @@\n 2017-06-29  Nathan Sidwell  <nathan@acm.org>\n \n+\t* lex.c (maybe_add_lang_type_raw): Exit early, rather than use a\n+\tflag.\n+\n \t* call.c (check_dtor_name): Use constructor_name for enums too.\n \t(build_new_method_call_1): Use constructor_name for cdtors and\n \tshow ~ for dtor."}, {"sha": "d763716bfa3067ff26aa00b99501f44e42508955", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de0ccc88c54a3dff484fd81138ce3c84880be1c/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de0ccc88c54a3dff484fd81138ce3c84880be1c/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=2de0ccc88c54a3dff484fd81138ce3c84880be1c", "patch": "@@ -741,21 +741,21 @@ copy_type (tree type MEM_STAT_DECL)\n static bool\n maybe_add_lang_type_raw (tree t)\n {\n-  bool add = (RECORD_OR_UNION_CODE_P (TREE_CODE (t))\n-\t      || TREE_CODE (t) == BOUND_TEMPLATE_TEMPLATE_PARM);\n-  if (add)\n-    {\n-      TYPE_LANG_SPECIFIC (t)\n-\t= (struct lang_type *) (ggc_internal_cleared_alloc\n-\t\t\t\t(sizeof (struct lang_type)));\n+  if (!(RECORD_OR_UNION_CODE_P (TREE_CODE (t))\n+\t|| TREE_CODE (t) == BOUND_TEMPLATE_TEMPLATE_PARM))\n+    return false;\n+  \n+  TYPE_LANG_SPECIFIC (t)\n+    = (struct lang_type *) (ggc_internal_cleared_alloc\n+\t\t\t    (sizeof (struct lang_type)));\n \n-      if (GATHER_STATISTICS)\n-\t{\n-\t  tree_node_counts[(int)lang_type] += 1;\n-\t  tree_node_sizes[(int)lang_type] += sizeof (struct lang_type);\n-\t}\n+  if (GATHER_STATISTICS)\n+    {\n+      tree_node_counts[(int)lang_type] += 1;\n+      tree_node_sizes[(int)lang_type] += sizeof (struct lang_type);\n     }\n-  return add;\n+\n+  return true;\n }\n \n tree"}]}