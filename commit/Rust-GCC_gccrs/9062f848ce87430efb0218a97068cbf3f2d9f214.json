{"sha": "9062f848ce87430efb0218a97068cbf3f2d9f214", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA2MmY4NDhjZTg3NDMwZWZiMDIxOGE5NzA2OGNiZjNmMmQ5ZjIxNA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-06-28T12:06:52Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-06-28T12:06:52Z"}, "message": "java-tree.h (struct lang_type): Change type to a VEC.\n\n\t* java-tree.h (struct lang_type) [catch_classes]: Change type to a\n\tVEC.\n\t* except.c (prepare_eh_table_type): Call CONSTRUCTOR_APPEND_ELT\n\tinstead of tree_cons.\n\t* class.c (make_class): Add dummy entry to TYPE_CATCH_CLASSES.\n\t(emit_catch_table): Adjust for new type of TYPE_CATCH_CLASSES.\n\nFrom-SVN: r161487", "tree": {"sha": "aebfd63be8cd72586541ea999045763a67598c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aebfd63be8cd72586541ea999045763a67598c27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9062f848ce87430efb0218a97068cbf3f2d9f214", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9062f848ce87430efb0218a97068cbf3f2d9f214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9062f848ce87430efb0218a97068cbf3f2d9f214", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9062f848ce87430efb0218a97068cbf3f2d9f214/comments", "author": null, "committer": null, "parents": [{"sha": "04924d6a8881c2f4d4461e0e7a169846f2a34a05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04924d6a8881c2f4d4461e0e7a169846f2a34a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04924d6a8881c2f4d4461e0e7a169846f2a34a05"}], "stats": {"total": 48, "additions": 31, "deletions": 17}, "files": [{"sha": "e7589638f5400a2623821d18409d2f781548b915", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9062f848ce87430efb0218a97068cbf3f2d9f214/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9062f848ce87430efb0218a97068cbf3f2d9f214/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9062f848ce87430efb0218a97068cbf3f2d9f214", "patch": "@@ -1,3 +1,12 @@\n+2010-06-28  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* java-tree.h (struct lang_type) [catch_classes]: Change type to a\n+\tVEC.\n+\t* except.c (prepare_eh_table_type): Call CONSTRUCTOR_APPEND_ELT\n+\tinstead of tree_cons.\n+\t* class.c (make_class): Add dummy entry to TYPE_CATCH_CLASSES.\n+\t(emit_catch_table): Adjust for new type of TYPE_CATCH_CLASSES.\n+\n 2010-06-28  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* lang.c: Do not include except.h"}, {"sha": "7d90a032a81cf7d8790c8686b042c0004ab35fdd", "filename": "gcc/java/class.c", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9062f848ce87430efb0218a97068cbf3f2d9f214/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9062f848ce87430efb0218a97068cbf3f2d9f214/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=9062f848ce87430efb0218a97068cbf3f2d9f214", "patch": "@@ -382,6 +382,12 @@ make_class (void)\n      loading works.  */\n   TYPE_BINFO (type) = make_tree_binfo (0);\n   MAYBE_CREATE_TYPE_TYPE_LANG_SPECIFIC (type);\n+  TYPE_CATCH_CLASSES (type) = NULL;\n+  /* Push a dummy entry; we can't call make_catch_class_record here\n+     because other infrastructure may not be set up yet.  We'll come\n+     back and fill it in later once said infrastructure is\n+     initialized.  */\n+  CONSTRUCTOR_APPEND_ELT (TYPE_CATCH_CLASSES (type), NULL_TREE, NULL_TREE);\n \n   return type;\n }\n@@ -2960,26 +2966,25 @@ tree\n emit_catch_table (tree this_class)\n {\n   tree table, table_size, array_type;\n-  TYPE_CATCH_CLASSES (this_class) =\n-    tree_cons (NULL,\n-\t       make_catch_class_record (null_pointer_node, null_pointer_node),\n-\t       TYPE_CATCH_CLASSES (this_class));\n-  TYPE_CATCH_CLASSES (this_class) = nreverse (TYPE_CATCH_CLASSES (this_class));\n-  TYPE_CATCH_CLASSES (this_class) = \n-    tree_cons (NULL,\n-\t       make_catch_class_record (null_pointer_node, null_pointer_node),\n-\t       TYPE_CATCH_CLASSES (this_class));\n-  table_size = build_index_type\n-    (build_int_cst (NULL_TREE,\n-\t\t    list_length (TYPE_CATCH_CLASSES (this_class))));\n+  int n_catch_classes;\n+  constructor_elt *e;\n+  /* Fill in the dummy entry that make_class created.  */\n+  e = VEC_index (constructor_elt, TYPE_CATCH_CLASSES (this_class), 0);\n+  e->value = make_catch_class_record (null_pointer_node, null_pointer_node);\n+  CONSTRUCTOR_APPEND_ELT (TYPE_CATCH_CLASSES (this_class), NULL_TREE,\n+\t\t\t  make_catch_class_record (null_pointer_node,\n+\t\t\t\t\t\t   null_pointer_node));\n+  n_catch_classes = VEC_length (constructor_elt,\n+\t\t\t\tTYPE_CATCH_CLASSES (this_class));\n+  table_size = build_index_type (build_int_cst (NULL_TREE, n_catch_classes));\n   array_type \n     = build_array_type (TREE_TYPE (TREE_TYPE (TYPE_CTABLE_DECL (this_class))),\n \t\t\ttable_size);\n   table = \n     build_decl (input_location,\n \t\tVAR_DECL, DECL_NAME (TYPE_CTABLE_DECL (this_class)), array_type);\n   DECL_INITIAL (table) = \n-    build_constructor_from_list (array_type, TYPE_CATCH_CLASSES (this_class));\n+    build_constructor (array_type, TYPE_CATCH_CLASSES (this_class));\n   TREE_STATIC (table) = 1;\n   TREE_READONLY (table) = 1;  \n   DECL_IGNORED_P (table) = 1;"}, {"sha": "0033da30653ebce28b705d5b730b90c9f02bbf4e", "filename": "gcc/java/except.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9062f848ce87430efb0218a97068cbf3f2d9f214/gcc%2Fjava%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9062f848ce87430efb0218a97068cbf3f2d9f214/gcc%2Fjava%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexcept.c?ref=9062f848ce87430efb0218a97068cbf3f2d9f214", "patch": "@@ -419,9 +419,9 @@ prepare_eh_table_type (tree type)\n       layout_decl (decl, 0);\n       pushdecl (decl);\n       exp = build1 (ADDR_EXPR, build_pointer_type (utf8const_ptr_type), decl);\n-      TYPE_CATCH_CLASSES (output_class) = \n-\ttree_cons (NULL, make_catch_class_record (exp, utf8_ref), \n-\t\t   TYPE_CATCH_CLASSES (output_class));\n+      CONSTRUCTOR_APPEND_ELT (TYPE_CATCH_CLASSES (output_class),\n+\t\t\t      NULL_TREE,\n+\t\t\t      make_catch_class_record (exp, utf8_ref));\n     }\n \n   exp = convert (ptr_type_node, exp);"}, {"sha": "ccaa0e34eb78a7a6331515948c54d443498e2377", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9062f848ce87430efb0218a97068cbf3f2d9f214/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9062f848ce87430efb0218a97068cbf3f2d9f214/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=9062f848ce87430efb0218a97068cbf3f2d9f214", "patch": "@@ -952,7 +952,7 @@ struct GTY((variable_size)) lang_type {\n \n   tree ctable_decl;             /* The table of classes for the runtime\n \t\t\t\t   type matcher.  */\n-  tree catch_classes;\n+  VEC(constructor_elt,gc) *catch_classes;\n \n   htab_t GTY ((param_is (struct treetreehash_entry))) type_to_runtime_map;   \n                                 /* The mapping of classes to exception region"}]}