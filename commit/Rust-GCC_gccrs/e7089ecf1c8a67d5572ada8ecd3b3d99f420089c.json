{"sha": "e7089ecf1c8a67d5572ada8ecd3b3d99f420089c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcwODllY2YxYzhhNjdkNTU3MmFkYThlY2QzYjNkOTlmNDIwMDg5Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-09-18T11:28:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-09-18T11:28:18Z"}, "message": "re PR middle-end/37456 (ICE: verify_flow_info failed: control flow in the middle of basic block)\n\n2008-09-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/37456\n\t* tree-ssa-reassoc.c (build_and_add_sum): If the stmt we\n\twant to insert after ends a BB insert on the single fallthru\n\toutgoing edge.\n\n\t* testsuite/g++.dg/torture/pr37456.C: New testcase.\n\nFrom-SVN: r140449", "tree": {"sha": "3425753c73b058342d1341dd1cb58cdf9cf1deaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3425753c73b058342d1341dd1cb58cdf9cf1deaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "59a1bff3e2ddd006743684e3c5e09245ab0426f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a1bff3e2ddd006743684e3c5e09245ab0426f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a1bff3e2ddd006743684e3c5e09245ab0426f2"}], "stats": {"total": 58, "additions": 54, "deletions": 4}, "files": [{"sha": "7d0282997d75250a81fcbc3b9d4ea49ba37f8868", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7089ecf1c8a67d5572ada8ecd3b3d99f420089c", "patch": "@@ -1,3 +1,10 @@\n+2008-09-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37456\n+\t* tree-ssa-reassoc.c (build_and_add_sum): If the stmt we\n+\twant to insert after ends a BB insert on the single fallthru\n+\toutgoing edge.\n+\n 2008-09-18  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* doc/invoke.texi: Document -mhard-dfp, -mno-hard-dfp."}, {"sha": "cebd6736e5d0df7dae7611f4a2d377b3f2d10438", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7089ecf1c8a67d5572ada8ecd3b3d99f420089c", "patch": "@@ -1,3 +1,8 @@\n+2008-09-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37456\n+\t* testsuite/g++.dg/torture/pr37456.C: New testcase.\n+\n 2008-09-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR rtl-optimization/37544"}, {"sha": "cf2021be203511015d8a457ca5550495194023c4", "filename": "gcc/testsuite/g++.dg/torture/pr37456.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37456.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37456.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37456.C?ref=e7089ecf1c8a67d5572ada8ecd3b3d99f420089c", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+\n+int zot(int);\n+struct bar {\n+  ~bar() { }\n+};\n+int x;\n+void doit(int a, int b, int c)\n+{\n+  bar pn;\n+  int b1 = zot(a) * c;\n+  int b2 = zot(b) * c;\n+  x = b1 + b2;\n+}"}, {"sha": "bfe909d67384213b60dedfc0434ea887d1ae4c85", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7089ecf1c8a67d5572ada8ecd3b3d99f420089c/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=e7089ecf1c8a67d5572ada8ecd3b3d99f420089c", "patch": "@@ -859,8 +859,20 @@ build_and_add_sum (tree tmpvar, tree op1, tree op2, enum tree_code opcode)\n \t}\n       else\n \t{\n-\t  gsi = gsi_for_stmt (op2def);\n-\t  gsi_insert_after (&gsi, sum, GSI_NEW_STMT);\n+\t  if (!stmt_ends_bb_p (op2def))\n+\t    {\n+\t      gsi = gsi_for_stmt (op2def);\n+\t      gsi_insert_after (&gsi, sum, GSI_NEW_STMT);\n+\t    }\n+\t  else\n+\t    {\n+\t      edge e;\n+\t      edge_iterator ei;\n+\n+\t      FOR_EACH_EDGE (e, ei, gimple_bb (op2def)->succs)\n+\t\tif (e->flags & EDGE_FALLTHRU)\n+\t\t  gsi_insert_on_edge_immediate (e, sum);\n+\t    }\n \t}\n     }\n   else\n@@ -872,8 +884,20 @@ build_and_add_sum (tree tmpvar, tree op1, tree op2, enum tree_code opcode)\n \t}\n       else\n \t{\n-\t  gsi = gsi_for_stmt (op1def);\n-\t  gsi_insert_after (&gsi, sum, GSI_NEW_STMT);\n+\t  if (!stmt_ends_bb_p (op1def))\n+\t    {\n+\t      gsi = gsi_for_stmt (op1def);\n+\t      gsi_insert_after (&gsi, sum, GSI_NEW_STMT);\n+\t    }\n+\t  else\n+\t    {\n+\t      edge e;\n+\t      edge_iterator ei;\n+\n+\t      FOR_EACH_EDGE (e, ei, gimple_bb (op1def)->succs)\n+\t\tif (e->flags & EDGE_FALLTHRU)\n+\t\t  gsi_insert_on_edge_immediate (e, sum);\n+\t    }\n \t}\n     }\n   update_stmt (sum);"}]}