{"sha": "1eb0072d903cc740b71d452d611f9ffb59cf472f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWViMDA3MmQ5MDNjYzc0MGI3MWQ0NTJkNjExZjlmZmI1OWNmNDcyZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-26T11:59:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-26T11:59:09Z"}, "message": "decl.c (grokdeclarator): Complain about a variable using constructor syntax coming back null from start_decl.\n\n\t* decl.c (grokdeclarator): Complain about a variable using\n\tconstructor syntax coming back null from start_decl.\nFixes g++.other/decl2.C\n\t* friend.c (make_friend_class): Complain about trying to make\n\ta non-class type a friend.\nFixes g++.other/friend5.C\n\t* decl.c (grokfndecl): Set DECL_INITIAL for a defn here.\n\t(start_function): Not here.\nFixes g++.law/friend4.C\n\nFrom-SVN: r23353", "tree": {"sha": "539b807a659c1fa42b10fcfcca02cce43e7627b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/539b807a659c1fa42b10fcfcca02cce43e7627b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1eb0072d903cc740b71d452d611f9ffb59cf472f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb0072d903cc740b71d452d611f9ffb59cf472f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb0072d903cc740b71d452d611f9ffb59cf472f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb0072d903cc740b71d452d611f9ffb59cf472f/comments", "author": null, "committer": null, "parents": [{"sha": "26f63a7785248ef733ab3a89c56bede58860472c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26f63a7785248ef733ab3a89c56bede58860472c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26f63a7785248ef733ab3a89c56bede58860472c"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "55065688452499c6d218902c2a3a5ad384cb67b9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb0072d903cc740b71d452d611f9ffb59cf472f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb0072d903cc740b71d452d611f9ffb59cf472f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1eb0072d903cc740b71d452d611f9ffb59cf472f", "patch": "@@ -1,3 +1,14 @@\n+1998-10-26  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (grokdeclarator): Complain about a variable using\n+\tconstructor syntax coming back null from start_decl.\n+\n+\t* friend.c (make_friend_class): Complain about trying to make\n+\ta non-class type a friend.\n+\n+\t* decl.c (grokfndecl): Set DECL_INITIAL for a defn here.\n+\t(start_function): Not here.\n+\n 1998-10-26  Brendan Kehoe  <brendan@cygnus.com>\n \n \t* decl.c (grokdeclarator): Disallow `explicit' in a friend declaration."}, {"sha": "f5167467e4f5743bc11fe104d653c896ee4e4a11", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb0072d903cc740b71d452d611f9ffb59cf472f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb0072d903cc740b71d452d611f9ffb59cf472f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=1eb0072d903cc740b71d452d611f9ffb59cf472f", "patch": "@@ -8181,6 +8181,11 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n       && (! DECL_USE_TEMPLATE (decl) || name_mangling_version < 1))\n     set_mangled_name_for_decl (decl);\n \n+  if (funcdef_flag)\n+    /* Make the init_value nonzero so pushdecl knows this is not\n+       tentative.  error_mark_node is replaced later with the BLOCK.  */\n+    DECL_INITIAL (decl) = error_mark_node;\n+\n   /* Caller will do the rest of this.  */\n   if (check < 0)\n     return decl;\n@@ -8641,10 +8646,15 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\tinit = TREE_OPERAND (decl, 1);\n \n \t\tdecl = start_decl (declarator, declspecs, 1, NULL_TREE, NULL_TREE);\n-\t\t/* Look for __unused__ attribute */\n-\t\tif (TREE_USED (TREE_TYPE (decl)))\n-\t\t  TREE_USED (decl) = 1;\n-\t\tfinish_decl (decl, init, NULL_TREE);\n+\t\tif (decl)\n+\t\t  {\n+\t\t    /* Look for __unused__ attribute */\n+\t\t    if (TREE_USED (TREE_TYPE (decl)))\n+\t\t      TREE_USED (decl) = 1;\n+\t\t    finish_decl (decl, init, NULL_TREE);\n+\t\t  }\n+\t\telse\n+\t\t  cp_error (\"invalid declarator\");\n \t\treturn 0;\n \t      }\n \t    innermost_code = TREE_CODE (decl);\n@@ -12505,10 +12515,6 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n       && TREE_CODE (TREE_TYPE (fntype)) == VOID_TYPE)\n     cp_warning (\"`operator=' should return a reference to `*this'\");\n \n-  /* Make the init_value nonzero so pushdecl knows this is not tentative.\n-     error_mark_node is replaced below (in poplevel) with the BLOCK.  */\n-  DECL_INITIAL (decl1) = error_mark_node;\n-\n #ifdef SET_DEFAULT_DECL_ATTRIBUTES\n   SET_DEFAULT_DECL_ATTRIBUTES (decl1, attrs);\n #endif"}, {"sha": "c98fd4e2d5f8edb481c2f91b3dd0e5a8559da9ad", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb0072d903cc740b71d452d611f9ffb59cf472f/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb0072d903cc740b71d452d611f9ffb59cf472f/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=1eb0072d903cc740b71d452d611f9ffb59cf472f", "patch": "@@ -255,10 +255,9 @@ make_friend_class (type, friend_type)\n       error (\"`friend' declaration in signature definition\");\n       return;\n     }\n-  if (IS_SIGNATURE (friend_type))\n+  if (IS_SIGNATURE (friend_type) || ! IS_AGGR_TYPE (friend_type))\n     {\n-      error (\"signature type `%s' declared `friend'\",\n-\t     IDENTIFIER_POINTER (TYPE_IDENTIFIER (friend_type)));\n+      cp_error (\"invalid type `%T' declared `friend'\", friend_type);\n       return;\n     }\n "}]}