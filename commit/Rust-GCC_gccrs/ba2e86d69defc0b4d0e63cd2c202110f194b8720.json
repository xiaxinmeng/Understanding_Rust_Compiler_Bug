{"sha": "ba2e86d69defc0b4d0e63cd2c202110f194b8720", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEyZTg2ZDY5ZGVmYzBiNGQwZTYzY2QyYzIwMjExMGYxOTRiODcyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-05-03T20:28:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-05-03T20:28:09Z"}, "message": "cmdlne-dM-M.c: New test.\n\n\t* gcc.dg/cpp/cmdlne-dM-M.c: New test.\n\t* gcc.dg/cpp/cmdlne-dD-M.c: New test.\n\t* gcc.dg/cpp/cmdlne-dN-M.c: New test.\n\t* gcc.dg/cpp/cmdlne-dI-M.c: New test.\n\t* gcc.dg/cpp/cmdlne-dI-M.h: New aux file.\n\t* gcc.dg/cpp/cmdlne-dD-dM.c: New test.\n\t* gcc.dg/cpp/cmdlne-dM-dD.c: New test.\n\nFrom-SVN: r53121", "tree": {"sha": "37d40b5dd4cc3d6e3e402bbce4d66927e61da068", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37d40b5dd4cc3d6e3e402bbce4d66927e61da068"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba2e86d69defc0b4d0e63cd2c202110f194b8720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2e86d69defc0b4d0e63cd2c202110f194b8720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba2e86d69defc0b4d0e63cd2c202110f194b8720", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2e86d69defc0b4d0e63cd2c202110f194b8720/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a3085c52322177de6a1896d9c5388898b9daa54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3085c52322177de6a1896d9c5388898b9daa54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3085c52322177de6a1896d9c5388898b9daa54"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "2996a14ae891d0f96778d720393a3b86de8c0227", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba2e86d69defc0b4d0e63cd2c202110f194b8720", "patch": "@@ -1,3 +1,13 @@\n+2002-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/cpp/cmdlne-dM-M.c: New test.\n+\t* gcc.dg/cpp/cmdlne-dD-M.c: New test.\n+\t* gcc.dg/cpp/cmdlne-dN-M.c: New test.\n+\t* gcc.dg/cpp/cmdlne-dI-M.c: New test.\n+\t* gcc.dg/cpp/cmdlne-dI-M.h: New aux file.\n+\t* gcc.dg/cpp/cmdlne-dD-dM.c: New test.\n+\t* gcc.dg/cpp/cmdlne-dM-dD.c: New test.\n+\n 2002-05-03  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.dg/format/xopen-2.c: New test."}, {"sha": "1a0adc025c2ad3b5f13728fc0a29877abb2af2ad", "filename": "gcc/testsuite/gcc.dg/cpp/cmdlne-dD-M.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dD-M.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dD-M.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dD-M.c?ref=ba2e86d69defc0b4d0e63cd2c202110f194b8720", "patch": "@@ -0,0 +1,17 @@\n+/* Copyright (C) 2002 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-dD -M\" } */\n+\n+/* Test -dD -M does not fail.  It should print just\n+   the Makefile rule with dependencies.  */\n+\n+#define foo bar\n+#define funlike(like) fun like\n+int variable;\n+\n+/* { dg-final { if ![file exists cmdlne-dD-M.i] { return }                } }\n+   { dg-final { if { [grep cmdlne-dD-M.i \"^#define foo bar$\"] != \"\" } { fail \"cmdlne-dD-M.c: #define line printed\" } } }\n+   { dg-final { if { [grep cmdlne-dD-M.i \"variable\"] != \"\" } { fail \"cmdlne-dD-M.c: non-#define line printed\" } } }\n+   { dg-final { if { [grep cmdlne-dD-M.i \"^cmdlne-dD-M.*:.*cmdlne-dD-M.c\"] == \"\" } { xfail \"cmdlne-dD-M.c: dependency rule not printed\" } } }\n+   { dg-final { return } }  */"}, {"sha": "8a3fb346588aeada902e281782178ed8062e489b", "filename": "gcc/testsuite/gcc.dg/cpp/cmdlne-dD-dM.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dD-dM.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dD-dM.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dD-dM.c?ref=ba2e86d69defc0b4d0e63cd2c202110f194b8720", "patch": "@@ -0,0 +1,16 @@\n+/* Copyright (C) 2002 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-dD -dM\" } */\n+\n+/* Test -dD -dM does not fail.  It should give the same output\n+   as plain -dM.  */\n+\n+#define foo bar\n+#define funlike(like) fun like\n+int variable;\n+\n+/* { dg-final { if ![file exists cmdlne-dD-dM.i] { return }                } }\n+   { dg-final { if { [grep cmdlne-dD-dM.i \"^#define foo bar$\"] == \"\" } { fail \"cmdlne-dD-dM.c: #define line not printed\" } } }\n+   { dg-final { if { [grep cmdlne-dD-dM.i \"variable\"] != \"\" } { fail \"cmdlne-dD-dM.c: non-#define line printed\" } } }\n+   { dg-final { return } }  */"}, {"sha": "afa54f7bf7705181ed72aea3d5d625d6890f212b", "filename": "gcc/testsuite/gcc.dg/cpp/cmdlne-dI-M.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dI-M.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dI-M.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dI-M.c?ref=ba2e86d69defc0b4d0e63cd2c202110f194b8720", "patch": "@@ -0,0 +1,18 @@\n+/* Copyright (C) 2002 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-dI -M\" } */\n+\n+/* Test -dI -M does not fail.  It should print just\n+   the Makefile rule with dependencies.  */\n+\n+#define foo bar\n+#include \"cmdlne-dI-M.h\"\n+#define funlike(like) fun like\n+int variable;\n+\n+/* { dg-final { if ![file exists cmdlne-dI-M.i] { return }                } }\n+   { dg-final { if { [grep cmdlne-dI-M.i \"^#define foo bar$\"] != \"\" } { fail \"cmdlne-dI-M.c: #define line printed\" } } }\n+   { dg-final { if { [grep cmdlne-dI-M.i \"variable\"] != \"\" } { fail \"cmdlne-dI-M.c: non-#define line printed\" } } }\n+   { dg-final { if { [grep cmdlne-dI-M.i \"^cmdlne-dI-M.*:.*cmdlne-dI-M.c\"] == \"\" } { xfail \"cmdlne-dI-M.c: dependency rule not printed\" } } }\n+   { dg-final { return } }  */"}, {"sha": "cbaf810a5b8e1f7cdf5698b9247187e79bb924ef", "filename": "gcc/testsuite/gcc.dg/cpp/cmdlne-dI-M.h", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dI-M.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dI-M.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dI-M.h?ref=ba2e86d69defc0b4d0e63cd2c202110f194b8720", "patch": "@@ -0,0 +1,2 @@\n+#define baz baz\n+int othervar;"}, {"sha": "9d5a7df3710c5d573c1f73d4e52f21c5d0c5bbb4", "filename": "gcc/testsuite/gcc.dg/cpp/cmdlne-dM-M.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dM-M.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dM-M.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dM-M.c?ref=ba2e86d69defc0b4d0e63cd2c202110f194b8720", "patch": "@@ -0,0 +1,17 @@\n+/* Copyright (C) 2002 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-dM -M\" } */\n+\n+/* Test -dM -M does not fail.  It should print both the\n+   #define lines and a Makefile rule with dependencies.  */\n+\n+#define foo bar\n+#define funlike(like) fun like\n+int variable;\n+\n+/* { dg-final { if ![file exists cmdlne-dM-M.i] { return }                } }\n+   { dg-final { if { [grep cmdlne-dM-M.i \"^#define foo bar$\"] == \"\" } { fail \"cmdlne-dM-M.c: #define line not printed\" } } }\n+   { dg-final { if { [grep cmdlne-dM-M.i \"variable\"] != \"\" } { fail \"cmdlne-dM-M.c: non-#define line printed\" } } }\n+   { dg-final { if { [grep cmdlne-dM-M.i \"^cmdlne-dM-M.*:.*cmdlne-dM-M.c\"] == \"\" } { xfail \"cmdlne-dM-M.c: dependency rule not printed\" } } }\n+   { dg-final { return } }  */"}, {"sha": "0d3bb9ca0592362845e3218dc974b1378a173636", "filename": "gcc/testsuite/gcc.dg/cpp/cmdlne-dM-dD.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dM-dD.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dM-dD.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dM-dD.c?ref=ba2e86d69defc0b4d0e63cd2c202110f194b8720", "patch": "@@ -0,0 +1,16 @@\n+/* Copyright (C) 2002 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-dM -dD\" } */\n+\n+/* Test -dM -dD does not fail.  It should give the same output\n+   as plain -dD.  */\n+\n+#define foo bar\n+#define funlike(like) fun like\n+int variable;\n+\n+/* { dg-final { if ![file exists cmdlne-dM-dD.i] { return }                } }\n+   { dg-final { if { [grep cmdlne-dM-dD.i \"^#define foo bar$\"] == \"\" } { fail \"cmdlne-dM-dD.c: #define line not printed\" } } }\n+   { dg-final { if { [grep cmdlne-dM-dD.i \"variable\"] == \"\" } { fail \"cmdlne-dM-dD.c: non-#define line not printed\" } } }\n+   { dg-final { return } }  */"}, {"sha": "c4549fc849505df1db3b8470b34b929cf1d850ff", "filename": "gcc/testsuite/gcc.dg/cpp/cmdlne-dN-M.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dN-M.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2e86d69defc0b4d0e63cd2c202110f194b8720/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dN-M.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcmdlne-dN-M.c?ref=ba2e86d69defc0b4d0e63cd2c202110f194b8720", "patch": "@@ -0,0 +1,17 @@\n+/* Copyright (C) 2002 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-dN -M\" } */\n+\n+/* Test -dN -M does not fail.  It should print just\n+   the Makefile rule with dependencies.  */\n+\n+#define foo bar\n+#define funlike(like) fun like\n+int variable;\n+\n+/* { dg-final { if ![file exists cmdlne-dN-M.i] { return }                } }\n+   { dg-final { if { [grep cmdlne-dN-M.i \"^#define foo\"] != \"\" } { fail \"cmdlne-dN-M.c: #define line printed\" } } }\n+   { dg-final { if { [grep cmdlne-dN-M.i \"variable\"] != \"\" } { fail \"cmdlne-dN-M.c: non-#define line printed\" } } }\n+   { dg-final { if { [grep cmdlne-dN-M.i \"^cmdlne-dN-M.*:.*cmdlne-dN-M.c\"] == \"\" } { xfail \"cmdlne-dN-M.c: dependency rule not printed\" } } }\n+   { dg-final { return } }  */"}]}