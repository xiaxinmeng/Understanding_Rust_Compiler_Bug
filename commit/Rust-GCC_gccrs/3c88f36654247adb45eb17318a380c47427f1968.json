{"sha": "3c88f36654247adb45eb17318a380c47427f1968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M4OGYzNjY1NDI0N2FkYjQ1ZWIxNzMxOGEzODBjNDc0MjdmMTk2OA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2001-02-21T12:18:11Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2001-02-21T12:18:11Z"}, "message": "flow.c (mark_set_1): Make not_dead unsigned long.\n\n* flow.c (mark_set_1): Make not_dead unsigned long.  For\nnon-pseudos, use it as a bitmask of the hard regs that\ndon't die.\n\nFrom-SVN: r39943", "tree": {"sha": "a2c5f6838a1874f0988f45f01658065802bac97a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2c5f6838a1874f0988f45f01658065802bac97a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c88f36654247adb45eb17318a380c47427f1968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c88f36654247adb45eb17318a380c47427f1968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c88f36654247adb45eb17318a380c47427f1968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c88f36654247adb45eb17318a380c47427f1968/comments", "author": null, "committer": null, "parents": [{"sha": "eccad89471d28a230ba8177a5587dbc054bd36a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eccad89471d28a230ba8177a5587dbc054bd36a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eccad89471d28a230ba8177a5587dbc054bd36a7"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "f0ffdcc67543d46b846a6e7e9d4df3927287c158", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c88f36654247adb45eb17318a380c47427f1968/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c88f36654247adb45eb17318a380c47427f1968/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c88f36654247adb45eb17318a380c47427f1968", "patch": "@@ -1,3 +1,9 @@\n+2001-02-21  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* flow.c (mark_set_1): Make not_dead unsigned long.  For\n+\tnon-pseudos, use it as a bitmask of the hard regs that \n+\tdon't die.\n+\n 2001-02-21  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * cppfiles.c: Update comments."}, {"sha": "9137db512dce5673402e526eea52ace8f5218578", "filename": "gcc/flow.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c88f36654247adb45eb17318a380c47427f1968/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c88f36654247adb45eb17318a380c47427f1968/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=3c88f36654247adb45eb17318a380c47427f1968", "patch": "@@ -4667,7 +4667,7 @@ mark_set_1 (pbi, code, reg, cond, insn, flags)\n      int flags;\n {\n   int regno_first = -1, regno_last = -1;\n-  int not_dead = 0;\n+  unsigned long not_dead = 0;\n   int i;\n \n   /* Modifying just one hardware register of a multi-reg value or just a\n@@ -4698,7 +4698,7 @@ mark_set_1 (pbi, code, reg, cond, insn, flags)\n \t     || GET_CODE (reg) == STRICT_LOW_PART);\n       if (GET_CODE (reg) == MEM)\n \tbreak;\n-      not_dead = REGNO_REG_SET_P (pbi->reg_live, REGNO (reg));\n+      not_dead = (unsigned long) REGNO_REG_SET_P (pbi->reg_live, REGNO (reg));\n       /* Fall through.  */\n \n     case REG:\n@@ -4746,7 +4746,8 @@ mark_set_1 (pbi, code, reg, cond, insn, flags)\n \t\t    + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n \t\t  < ((GET_MODE_SIZE (inner_mode)\n \t\t      + UNITS_PER_WORD - 1) / UNITS_PER_WORD))\n-\t\tnot_dead = REGNO_REG_SET_P (pbi->reg_live, regno_first);\n+\t\tnot_dead = (unsigned long) REGNO_REG_SET_P (pbi->reg_live,\n+\t\t\t\t\t\t\t    regno_first);\n \n \t      reg = SUBREG_REG (reg);\n \t    }\n@@ -4842,7 +4843,7 @@ mark_set_1 (pbi, code, reg, cond, insn, flags)\n \t{\n \t  for (i = regno_first; i <= regno_last; ++i)\n \t    if (! mark_regno_cond_dead (pbi, i, cond))\n-\t      not_dead = 1;\n+\t      not_dead |= ((unsigned long) 1) << (i - regno_first);\n \t}\n #endif\n \n@@ -4955,15 +4956,15 @@ mark_set_1 (pbi, code, reg, cond, insn, flags)\n \n       /* Mark the register as being dead.  */\n       if (some_was_live\n-\t  && ! not_dead\n \t  /* The stack pointer is never dead.  Well, not strictly true,\n \t     but it's very difficult to tell from here.  Hopefully\n \t     combine_stack_adjustments will fix up the most egregious\n \t     errors.  */\n \t  && regno_first != STACK_POINTER_REGNUM)\n \t{\n \t  for (i = regno_first; i <= regno_last; ++i)\n-\t    CLEAR_REGNO_REG_SET (pbi->reg_live, i);\n+\t    if (!(not_dead & (((unsigned long) 1) << (i - regno_first))))\n+\t      CLEAR_REGNO_REG_SET (pbi->reg_live, i);\n \t}\n     }\n   else if (GET_CODE (reg) == REG)"}]}