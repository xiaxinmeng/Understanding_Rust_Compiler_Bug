{"sha": "119b4963ea4f68e88eb496f0efcb450e1fbbbe9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5YjQ5NjNlYTRmNjhlODhlYjQ5NmYwZWZjYjQ1MGUxZmJiYmU5Yg==", "commit": {"author": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2018-10-03T19:09:32Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2018-10-03T19:09:32Z"}, "message": "RISC-V: Add macro for ilp32e ABI.  Cleanup white space.\n\n\tgcc/\n\t* config/riscv/riscv-c.c (riscv_cpu_cpp_builtins): For ABI_ILP32E,\n\talso define __riscv_abi_rve.  Delete trailing white space.\n\nFrom-SVN: r264821", "tree": {"sha": "7cdee2c3093b151a9fa9658ddb78d267a2d8737d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cdee2c3093b151a9fa9658ddb78d267a2d8737d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/119b4963ea4f68e88eb496f0efcb450e1fbbbe9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/119b4963ea4f68e88eb496f0efcb450e1fbbbe9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/119b4963ea4f68e88eb496f0efcb450e1fbbbe9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/119b4963ea4f68e88eb496f0efcb450e1fbbbe9b/comments", "author": null, "committer": null, "parents": [{"sha": "5079ff15b537908ab0fcf2270c05d02e7412f442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5079ff15b537908ab0fcf2270c05d02e7412f442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5079ff15b537908ab0fcf2270c05d02e7412f442"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "8e7cb548c152ece70df1c92736f4a88d3025f594", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/119b4963ea4f68e88eb496f0efcb450e1fbbbe9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/119b4963ea4f68e88eb496f0efcb450e1fbbbe9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=119b4963ea4f68e88eb496f0efcb450e1fbbbe9b", "patch": "@@ -1,3 +1,8 @@\n+2018-10-03  Jim Wilson  <jimw@sifive.com>\n+\n+\t* config/riscv/riscv-c.c (riscv_cpu_cpp_builtins): For ABI_ILP32E,\n+\talso define __riscv_abi_rve.  Delete trailing white space.\n+\n 2018-10-03  Paul Koning  <ni1d@arrl.net>\n \n \tEnable LRA register allocator for PDP11."}, {"sha": "d3ecd0796e8bad6108733c7cad441baa9ee9446c", "filename": "gcc/config/riscv/riscv-c.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/119b4963ea4f68e88eb496f0efcb450e1fbbbe9b/gcc%2Fconfig%2Friscv%2Friscv-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/119b4963ea4f68e88eb496f0efcb450e1fbbbe9b/gcc%2Fconfig%2Friscv%2Friscv-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-c.c?ref=119b4963ea4f68e88eb496f0efcb450e1fbbbe9b", "patch": "@@ -35,62 +35,65 @@ void\n riscv_cpu_cpp_builtins (cpp_reader *pfile)\n {\n   builtin_define (\"__riscv\");\n-  \n+\n   if (TARGET_RVC)\n     builtin_define (\"__riscv_compressed\");\n-  \n+\n   if (TARGET_RVE)\n     builtin_define (\"__riscv_32e\");\n \n   if (TARGET_ATOMIC)\n     builtin_define (\"__riscv_atomic\");\n-  \n+\n   if (TARGET_MUL)\n     builtin_define (\"__riscv_mul\");\n   if (TARGET_DIV)\n     builtin_define (\"__riscv_div\");\n   if (TARGET_DIV && TARGET_MUL)\n     builtin_define (\"__riscv_muldiv\");\n-  \n+\n   builtin_define_with_int_value (\"__riscv_xlen\", UNITS_PER_WORD * 8);\n   if (TARGET_HARD_FLOAT)\n     builtin_define_with_int_value (\"__riscv_flen\", UNITS_PER_FP_REG * 8);\n-  \n+\n   if (TARGET_HARD_FLOAT && TARGET_FDIV)\n     {\n       builtin_define (\"__riscv_fdiv\");\n       builtin_define (\"__riscv_fsqrt\");\n     }\n-  \n+\n   switch (riscv_abi)\n     {\n-    case ABI_ILP32:\n     case ABI_ILP32E:\n+      builtin_define (\"__riscv_abi_rve\");\n+      gcc_fallthrough ();\n+\n+    case ABI_ILP32:\n     case ABI_LP64:\n       builtin_define (\"__riscv_float_abi_soft\");\n       break;\n-  \n+\n     case ABI_ILP32F:\n     case ABI_LP64F:\n       builtin_define (\"__riscv_float_abi_single\");\n       break;\n-  \n+\n     case ABI_ILP32D:\n     case ABI_LP64D:\n       builtin_define (\"__riscv_float_abi_double\");\n       break;\n     }\n-  \n+\n   switch (riscv_cmodel)\n     {\n     case CM_MEDLOW:\n       builtin_define (\"__riscv_cmodel_medlow\");\n       break;\n-  \n+\n     case CM_MEDANY:\n       builtin_define (\"__riscv_cmodel_medany\");\n       break;\n-  \n+\n     case CM_PIC:\n       builtin_define (\"__riscv_cmodel_pic\");\n       break;"}]}