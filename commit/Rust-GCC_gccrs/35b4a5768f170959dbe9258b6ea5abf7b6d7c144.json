{"sha": "35b4a5768f170959dbe9258b6ea5abf7b6d7c144", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzViNGE1NzY4ZjE3MDk1OWRiZTkyNThiNmVhNWFiZjdiNmQ3YzE0NA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-06-11T22:29:41Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-06-11T22:29:41Z"}, "message": "decl2.c (generate_ctor_or_dtor_function): Avoid expanding a global static constructor/destructor if it will be empty, i.e.\n\n\n\t* decl2.c (generate_ctor_or_dtor_function): Avoid expanding a\n\tglobal static constructor/destructor if it will be empty, i.e.\n\teither doesn't call any ctors/dtors or only calls pure or const\n\tctors/dtors.\n\nFrom-SVN: r67800", "tree": {"sha": "35e1c41a4ecab8f1106a32bf68cea6827d9368ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35e1c41a4ecab8f1106a32bf68cea6827d9368ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35b4a5768f170959dbe9258b6ea5abf7b6d7c144", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35b4a5768f170959dbe9258b6ea5abf7b6d7c144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35b4a5768f170959dbe9258b6ea5abf7b6d7c144", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35b4a5768f170959dbe9258b6ea5abf7b6d7c144/comments", "author": null, "committer": null, "parents": [{"sha": "7fb26bb00173af1f41d3df4b5a7a43be9e3f12db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb26bb00173af1f41d3df4b5a7a43be9e3f12db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb26bb00173af1f41d3df4b5a7a43be9e3f12db"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "03c02c4ef599816ac80efa8ee378bf2912dc7410", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35b4a5768f170959dbe9258b6ea5abf7b6d7c144/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35b4a5768f170959dbe9258b6ea5abf7b6d7c144/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=35b4a5768f170959dbe9258b6ea5abf7b6d7c144", "patch": "@@ -1,3 +1,10 @@\n+2003-06-11  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* decl2.c (generate_ctor_or_dtor_function): Avoid expanding a \n+\tglobal static constructor/destructor if it will be empty, i.e.\n+\teither doesn't call any ctors/dtors or only calls pure or const\n+\tctors/dtors.\n+\n 2003-06-11  Mark Mitchell  <mark@codesourcery.com>\n \n \t* mangle.c (tm_p.h): Include it."}, {"sha": "1413f3944b9b89d017fddd9c0feb2f0b5b1ca0c3", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 32, "deletions": 14, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35b4a5768f170959dbe9258b6ea5abf7b6d7c144/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35b4a5768f170959dbe9258b6ea5abf7b6d7c144/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=35b4a5768f170959dbe9258b6ea5abf7b6d7c144", "patch": "@@ -2467,6 +2467,7 @@ generate_ctor_or_dtor_function (bool constructor_p, int priority,\n {\n   char function_key;\n   tree arguments;\n+  tree fndecl;\n   tree body;\n   size_t i;\n \n@@ -2475,25 +2476,31 @@ generate_ctor_or_dtor_function (bool constructor_p, int priority,\n   \n   /* We use `I' to indicate initialization and `D' to indicate\n      destruction.  */\n-  if (constructor_p)\n-    function_key = 'I';\n-  else\n-    function_key = 'D';\n+  function_key = constructor_p ? 'I' : 'D';\n \n-  /* Begin the function.  */\n-  body = start_objects (function_key, priority);\n+  /* We emit the function lazily, to avoid generating empty\n+     global constructors and destructors.  */\n+  body = NULL_TREE;\n \n   /* Call the static storage duration function with appropriate\n      arguments.  */\n   if (ssdf_decls)\n     for (i = 0; i < ssdf_decls->elements_used; ++i) \n       {\n-\targuments = tree_cons (NULL_TREE, build_int_2 (priority, 0), \n-\t\t\t       NULL_TREE);\n-\targuments = tree_cons (NULL_TREE, build_int_2 (constructor_p, 0),\n-\t\t\t       arguments);\n-\tfinish_expr_stmt (build_function_call (VARRAY_TREE (ssdf_decls, i),\n-\t\t\t\t\t       arguments));\n+\tfndecl = VARRAY_TREE (ssdf_decls, i);\n+\n+\t/* Calls to pure or const functions will expand to nothing.  */\n+\tif (! (flags_from_decl_or_type (fndecl) & (ECF_CONST | ECF_PURE)))\n+\t  {\n+\t    if (! body)\n+\t      body = start_objects (function_key, priority);\n+\n+\t    arguments = tree_cons (NULL_TREE, build_int_2 (priority, 0), \n+\t\t\t\t   NULL_TREE);\n+\t    arguments = tree_cons (NULL_TREE, build_int_2 (constructor_p, 0),\n+\t\t\t\t   arguments);\n+\t    finish_expr_stmt (build_function_call (fndecl, arguments));\n+\t  }\n       }\n \n   /* If we're generating code for the DEFAULT_INIT_PRIORITY, throw in\n@@ -2506,11 +2513,22 @@ generate_ctor_or_dtor_function (bool constructor_p, int priority,\n       for (fns = constructor_p ? static_ctors : static_dtors; \n \t   fns;\n \t   fns = TREE_CHAIN (fns))\n-\tfinish_expr_stmt (build_function_call (TREE_VALUE (fns), NULL_TREE));\n+\t{\n+\t  fndecl = TREE_VALUE (fns);\n+\n+\t  /* Calls to pure/const functions will expand to nothing.  */\n+\t  if (! (flags_from_decl_or_type (fndecl) & (ECF_CONST | ECF_PURE)))\n+\t    {\n+\t      if (! body)\n+\t\tbody = start_objects (function_key, priority);\n+\t      finish_expr_stmt (build_function_call (fndecl, NULL_TREE));\n+\t    }\n+\t}\n     }\n \n   /* Close out the function.  */\n-  finish_objects (function_key, priority, body);\n+  if (body)\n+    finish_objects (function_key, priority, body);\n }\n \n /* Generate constructor and destructor functions for the priority"}]}