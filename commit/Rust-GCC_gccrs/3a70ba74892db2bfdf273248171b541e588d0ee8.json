{"sha": "3a70ba74892db2bfdf273248171b541e588d0ee8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3MGJhNzQ4OTJkYjJiZmRmMjczMjQ4MTcxYjU0MWU1ODhkMGVlOA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-01-25T10:34:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-01-25T10:34:40Z"}, "message": "decl.c (gnat_to_gnu_param): Make sure an Out parameter with Default_Value aspect is passed in by copy.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_param): Make sure an Out parameter\n\twith Default_Value aspect is passed in by copy.\n\nFrom-SVN: r207071", "tree": {"sha": "2a572fd390b966e11256c72919acbb54fb61a6ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a572fd390b966e11256c72919acbb54fb61a6ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a70ba74892db2bfdf273248171b541e588d0ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70ba74892db2bfdf273248171b541e588d0ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a70ba74892db2bfdf273248171b541e588d0ee8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70ba74892db2bfdf273248171b541e588d0ee8/comments", "author": null, "committer": null, "parents": [{"sha": "0c9d009cbf817ed852c7ffa47964604d8f3ba9ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c9d009cbf817ed852c7ffa47964604d8f3ba9ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c9d009cbf817ed852c7ffa47964604d8f3ba9ba"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "dceaa9995db72a514879f0c930252378afef6f1e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70ba74892db2bfdf273248171b541e588d0ee8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70ba74892db2bfdf273248171b541e588d0ee8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3a70ba74892db2bfdf273248171b541e588d0ee8", "patch": "@@ -1,3 +1,8 @@\n+2014-01-25  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_param): Make sure an Out parameter\n+\twith Default_Value aspect is passed in by copy.\n+\n 2014-01-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* set_targ.adb: Set Short_Enums."}, {"sha": "25e2e781cee0156259380df1ab6c95d3a9493bc3", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70ba74892db2bfdf273248171b541e588d0ee8/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70ba74892db2bfdf273248171b541e588d0ee8/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=3a70ba74892db2bfdf273248171b541e588d0ee8", "patch": "@@ -5842,7 +5842,8 @@ gnat_to_gnu_param (Entity_Id gnat_param, Mechanism_Type mech,\n      Out parameters with discriminants or implicit initial values to be\n      handled like In Out parameters.  These type are normally built as\n      aggregates, hence passed by reference, except for some packed arrays\n-     which end up encoded in special integer types.\n+     which end up encoded in special integer types.  Note that scalars can\n+     be given implicit initial values using the Default_Value aspect.\n \n      The exception we need to make is then for packed arrays of records\n      with discriminants or implicit initial values.  We have no light/easy\n@@ -5856,7 +5857,8 @@ gnat_to_gnu_param (Entity_Id gnat_param, Mechanism_Type mech,\n \t  || (mech != By_Descriptor\n               && mech != By_Short_Descriptor\n \t      && !POINTER_TYPE_P (gnu_param_type)\n-\t      && !AGGREGATE_TYPE_P (gnu_param_type)))\n+\t      && !AGGREGATE_TYPE_P (gnu_param_type)\n+\t      && !Has_Default_Aspect (Etype (gnat_param))))\n       && !(Is_Array_Type (Etype (gnat_param))\n \t   && Is_Packed (Etype (gnat_param))\n \t   && Is_Composite_Type (Component_Type (Etype (gnat_param)))))"}]}