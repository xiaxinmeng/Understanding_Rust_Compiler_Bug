{"sha": "029435a303a8081960fe6c7531ecf5f65c7d88ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI5NDM1YTMwM2E4MDgxOTYwZmU2Yzc1MzFlY2Y1ZjY1YzdkODhlZQ==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2018-06-06T23:16:06Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2018-06-06T23:16:06Z"}, "message": "vsx.md (first_match_index_<mode>): Calculate index using natural element order.\n\ngcc/ChangeLog:\n\n2018-06-04  Carl Love  <cel@us.ibm.com>\n\n\t* gcc/config/rs6000/vsx.md (first_match_index_<mode>): Calculate index\n\tusing natural element order.  Use gen_lshrsi3 instead of gen_ashrsi3\n\tas it is slightly cheaper.\n\t(first_match_or_eos_index_<mode>):\n\tCalculate index using natural element order.\n\t(first_match_index_<mode>):\n\tCalculate index using natural element order.\n\t(first_match_or_eos_index_<mode>):\n\tCalculate index using natural order.\n\t(define_insn vclzlsbb): Change to define_insn vclzlsbb_<mode>.\n\tfor BE and LE modes.\n\t* gcc/config/rs6000/rs6000-c.c: Rename P9V_BUILTIN_VCLZLSBB,\n\tP9V_BUILTIN_VCLZLSBB_V16QI.\n\t* gcc/config/rs6000/rs6000-builtin.def: Make VCLZLSBB mode\n\tspecific.\n\ngcc/testsuite/ChangeLog:\n\n2018-06-04  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-8-p9-runnable.c: Add additional\n\tdebug print statements.  Fix a few formating issues.\n\nFrom-SVN: r261255", "tree": {"sha": "3a1616c4d301ae14c4c8ead55e0a28d7bcdd1ea0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a1616c4d301ae14c4c8ead55e0a28d7bcdd1ea0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/029435a303a8081960fe6c7531ecf5f65c7d88ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029435a303a8081960fe6c7531ecf5f65c7d88ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/029435a303a8081960fe6c7531ecf5f65c7d88ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029435a303a8081960fe6c7531ecf5f65c7d88ee/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20f136afaf83286e58edb15a4b9bdd4486d76598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f136afaf83286e58edb15a4b9bdd4486d76598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f136afaf83286e58edb15a4b9bdd4486d76598"}], "stats": {"total": 604, "additions": 569, "deletions": 35}, "files": [{"sha": "4eaaa70b1c25d1d7635707e6b294530819329851", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=029435a303a8081960fe6c7531ecf5f65c7d88ee", "patch": "@@ -1,3 +1,21 @@\n+2018-06-04  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc/config/rs6000/vsx.md (first_match_index_<mode>): Calculate index\n+\tusing natural element order.  Use gen_lshrsi3 instead of gen_ashrsi3\n+\tas it is slightly cheaper.\n+\t(first_match_or_eos_index_<mode>):\n+\tCalculate index using natural element order.\n+\t(first_match_index_<mode>):\n+\tCalculate index using natural element order.\n+\t(first_match_or_eos_index_<mode>):\n+\tCalculate index using natural order.\n+\t(define_insn vclzlsbb): Change to define_insn vclzlsbb_<mode>.\n+\tfor BE and LE modes.\n+\t* gcc/config/rs6000/rs6000-c.c: Rename P9V_BUILTIN_VCLZLSBB,\n+\tP9V_BUILTIN_VCLZLSBB_V16QI.\n+\t* gcc/config/rs6000/rs6000-builtin.def: Make VCLZLSBB mode\n+\tspecific.\n+\n 2018-06-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \t* doc/extend.texi (PowerPC AltiVec Built-in Functions): Adjust"}, {"sha": "f799681540dc5839d6401db76533548a88b509d5", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=029435a303a8081960fe6c7531ecf5f65c7d88ee", "patch": "@@ -2214,7 +2214,9 @@ BU_P9V_64BIT_AV_X (STXVL,\t\"stxvl\",\tMISC)\n BU_P9V_64BIT_AV_X (XST_LEN_R,\t\"xst_len_r\",\tMISC)\n \n /* 1 argument vector functions added in ISA 3.0 (power9). */\n-BU_P9V_AV_1 (VCLZLSBB, \"vclzlsbb\",\t\tCONST,\tvclzlsbb)\n+BU_P9V_AV_1 (VCLZLSBB_V16QI, \"vclzlsbb_v16qi\",\tCONST,\tvclzlsbb_v16qi)\n+BU_P9V_AV_1 (VCLZLSBB_V8HI, \"vclzlsbb_v8hi\",\tCONST,\tvclzlsbb_v8hi)\n+BU_P9V_AV_1 (VCLZLSBB_V4SI, \"vclzlsbb_v4si\",\tCONST,\tvclzlsbb_v4si)\n BU_P9V_AV_1 (VCTZLSBB_V16QI, \"vctzlsbb_v16qi\",\tCONST,\tvctzlsbb_v16qi)\n BU_P9V_AV_1 (VCTZLSBB_V8HI, \"vctzlsbb_v8hi\",\tCONST,\tvctzlsbb_v8hi)\n BU_P9V_AV_1 (VCTZLSBB_V4SI, \"vctzlsbb_v4si\",\tCONST,\tvctzlsbb_v4si)"}, {"sha": "08326c277586fc21cd86039eec658b5b245d2da2", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=029435a303a8081960fe6c7531ecf5f65c7d88ee", "patch": "@@ -5437,9 +5437,9 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_bool_V4SI, RS6000_BTI_unsigned_V4SI,\n     RS6000_BTI_unsigned_V4SI, 0 },\n \n-  { P9V_BUILTIN_VEC_VCLZLSBB, P9V_BUILTIN_VCLZLSBB,\n+  { P9V_BUILTIN_VEC_VCLZLSBB, P9V_BUILTIN_VCLZLSBB_V16QI,\n     RS6000_BTI_INTSI, RS6000_BTI_V16QI, 0, 0 },\n-  { P9V_BUILTIN_VEC_VCLZLSBB, P9V_BUILTIN_VCLZLSBB,\n+  { P9V_BUILTIN_VEC_VCLZLSBB, P9V_BUILTIN_VCLZLSBB_V16QI,\n     RS6000_BTI_INTSI, RS6000_BTI_unsigned_V16QI, 0, 0 },\n \n   { P9V_BUILTIN_VEC_VCTZLSBB, P9V_BUILTIN_VCTZLSBB_V16QI,"}, {"sha": "0e016fe6e3341092faae384f673f02cb4634c0fb", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 53, "deletions": 17, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=029435a303a8081960fe6c7531ecf5f65c7d88ee", "patch": "@@ -4723,7 +4723,8 @@\n   \"vcmpnez<VSX_EXTRACT_WIDTH>. %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-;; Return first position of match between vectors\n+;; Return first position of match between vectors using natural order\n+;; for both LE and BE execution modes.\n (define_expand \"first_match_index_<mode>\"\n   [(match_operand:SI 0 \"register_operand\")\n    (unspec:SI [(match_operand:VSX_EXTRACT_I 1 \"register_operand\")\n@@ -4743,17 +4744,26 @@\n   sh = GET_MODE_SIZE (GET_MODE_INNER (<MODE>mode)) / 2;\n \n   if (<MODE>mode == V16QImode)\n-    emit_insn (gen_vctzlsbb_<mode> (operands[0], not_result));\n+    {\n+      if (!BYTES_BIG_ENDIAN)\n+        emit_insn (gen_vctzlsbb_<mode> (operands[0], not_result));\n+      else\n+        emit_insn (gen_vclzlsbb_<mode> (operands[0], not_result));\n+    }\n   else\n     {\n       rtx tmp = gen_reg_rtx (SImode);\n-      emit_insn (gen_vctzlsbb_<mode> (tmp, not_result));\n-      emit_insn (gen_ashrsi3 (operands[0], tmp, GEN_INT (sh)));\n+      if (!BYTES_BIG_ENDIAN)\n+        emit_insn (gen_vctzlsbb_<mode> (tmp, not_result));\n+      else\n+        emit_insn (gen_vclzlsbb_<mode> (tmp, not_result));\n+      emit_insn (gen_lshrsi3 (operands[0], tmp, GEN_INT (sh)));\n     }\n   DONE;\n })\n \n-;; Return first position of match between vectors or end of string (EOS)\n+;; Return first position of match between vectors or end of string (EOS) using\n+;; natural element order for both LE and BE execution modes.\n (define_expand \"first_match_or_eos_index_<mode>\"\n   [(match_operand:SI 0 \"register_operand\")\n    (unspec: SI [(match_operand:VSX_EXTRACT_I 1 \"register_operand\")\n@@ -4785,17 +4795,26 @@\n   sh = GET_MODE_SIZE (GET_MODE_INNER (<MODE>mode)) / 2;\n \n   if (<MODE>mode == V16QImode)\n-    emit_insn (gen_vctzlsbb_<mode> (operands[0], result));\n+    {\n+      if (!BYTES_BIG_ENDIAN)\n+        emit_insn (gen_vctzlsbb_<mode> (operands[0], result));\n+      else\n+        emit_insn (gen_vclzlsbb_<mode> (operands[0], result));\n+    }\n   else\n     {\n       rtx tmp = gen_reg_rtx (SImode);\n-      emit_insn (gen_vctzlsbb_<mode> (tmp, result));\n-      emit_insn (gen_ashrsi3 (operands[0], tmp, GEN_INT (sh)));\n+      if (!BYTES_BIG_ENDIAN)\n+        emit_insn (gen_vctzlsbb_<mode> (tmp, result));\n+      else\n+        emit_insn (gen_vclzlsbb_<mode> (tmp, result));\n+      emit_insn (gen_lshrsi3 (operands[0], tmp, GEN_INT (sh)));\n     }\n   DONE;\n })\n \n-;; Return first position of mismatch between vectors\n+;; Return first position of mismatch between vectors using natural\n+;; element order for both LE and BE execution modes.\n (define_expand \"first_mismatch_index_<mode>\"\n   [(match_operand:SI 0 \"register_operand\")\n    (unspec: SI [(match_operand:VSX_EXTRACT_I 1 \"register_operand\")\n@@ -4811,17 +4830,26 @@\n   sh = GET_MODE_SIZE (GET_MODE_INNER (<MODE>mode)) / 2;\n \n   if (<MODE>mode == V16QImode)\n-    emit_insn (gen_vctzlsbb_<mode> (operands[0], cmp_result));\n+    {\n+      if (!BYTES_BIG_ENDIAN)\n+        emit_insn (gen_vctzlsbb_<mode> (operands[0], cmp_result));\n+      else\n+        emit_insn (gen_vclzlsbb_<mode> (operands[0], cmp_result));\n+    }\n   else\n     {\n       rtx tmp = gen_reg_rtx (SImode);\n-      emit_insn (gen_vctzlsbb_<mode> (tmp, cmp_result));\n-      emit_insn (gen_ashrsi3 (operands[0], tmp, GEN_INT (sh)));\n+      if (!BYTES_BIG_ENDIAN)\n+        emit_insn (gen_vctzlsbb_<mode> (tmp, cmp_result));\n+      else\n+        emit_insn (gen_vclzlsbb_<mode> (tmp, cmp_result));\n+      emit_insn (gen_lshrsi3 (operands[0], tmp, GEN_INT (sh)));\n     }\n   DONE;\n })\n \n ;; Return first position of mismatch between vectors or end of string (EOS)\n+;; using natural element order for both LE and BE execution modes.\n (define_expand \"first_mismatch_or_eos_index_<mode>\"\n   [(match_operand:SI 0 \"register_operand\")\n    (unspec: SI [(match_operand:VSX_EXTRACT_I 1 \"register_operand\")\n@@ -4856,12 +4884,20 @@\n   sh = GET_MODE_SIZE (GET_MODE_INNER (<MODE>mode)) / 2;\n \n   if (<MODE>mode == V16QImode)\n-    emit_insn (gen_vctzlsbb_<mode> (operands[0], result));\n+    {\n+      if (!BYTES_BIG_ENDIAN)\n+        emit_insn (gen_vctzlsbb_<mode> (operands[0], result));\n+      else\n+        emit_insn (gen_vclzlsbb_<mode> (operands[0], result));\n+    }\n   else\n     {\n       rtx tmp = gen_reg_rtx (SImode);\n-      emit_insn (gen_vctzlsbb_<mode> (tmp, result));\n-      emit_insn (gen_ashrsi3 (operands[0], tmp, GEN_INT (sh)));\n+      if (!BYTES_BIG_ENDIAN)\n+        emit_insn (gen_vctzlsbb_<mode> (tmp, result));\n+      else\n+        emit_insn (gen_vclzlsbb_<mode> (tmp, result));\n+      emit_insn (gen_lshrsi3 (operands[0], tmp, GEN_INT (sh)));\n     }\n   DONE;\n })\n@@ -5040,10 +5076,10 @@\n   [(set_attr \"type\" \"vecsimple\")])\n \n ;; Vector Count Leading Zero Least-Significant Bits Byte\n-(define_insn \"vclzlsbb\"\n+(define_insn \"vclzlsbb_<mode>\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(unspec:SI\n-\t [(match_operand:V16QI 1 \"altivec_register_operand\" \"v\")]\n+\t [(match_operand:VSX_EXTRACT_I 1 \"altivec_register_operand\" \"v\")]\n \t UNSPEC_VCLZLSBB))]\n   \"TARGET_P9_VECTOR\"\n   \"vclzlsbb %0,%1\""}, {"sha": "db46ffc4e7ca5949387d0e5d4f405d8e6ae69429", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=029435a303a8081960fe6c7531ecf5f65c7d88ee", "patch": "@@ -1,3 +1,8 @@\n+2018-06-04  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-8-p9-runnable.c: Add additional\n+\tdebug print statements.  Fix a few formating issues.\n+\n 2018-06-06  Michael Meissner  <meissner@linux.ibm.com>\n \n \tPR target/85657"}, {"sha": "158de5eeea454db9c6533d7e4b987ddc3a9bda6a", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-8-p9-runnable.c", "status": "modified", "additions": 488, "deletions": 15, "changes": 503, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-8-p9-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/029435a303a8081960fe6c7531ecf5f65c7d88ee/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-8-p9-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-8-p9-runnable.c?ref=029435a303a8081960fe6c7531ecf5f65c7d88ee", "patch": "@@ -10,8 +10,84 @@\n #include <stdio.h>\n #endif\n \n+#ifdef DEBUG2\n+#include <stdio.h>\n+#endif\n+\n+\n void abort (void);\n \n+#ifdef DEBUG2\n+void print_signed_char (char *name, vector signed char src)\n+{\n+  int i;\n+\n+  for (i = 0; i < 8; i++)\n+    printf(\"%s[%d] = %d, \", name, i, src[i]);\n+\n+  printf(\"\\n\");\n+\n+  for (i = 8; i < 15; i++)\n+    printf(\"%s[%d] = %d, \", name, i, src[i]);\n+\n+  printf(\"%s[%d] = %d\\n\", name, 15, src[i]);\n+}\n+\n+void print_unsigned_char (char *name, vector unsigned char src)\n+{\n+  int i;\n+\n+  for (i = 0; i < 8; i++)\n+    printf(\"%s[%d] = %d, \", name, i, src[i]);\n+\n+  printf(\"\\n\");\n+\n+  for (i = 8; i < 15; i++)\n+    printf(\"%s[%d] = %d, \", name, i, src[i]);\n+\n+  printf(\"%s[%d] = %d\\n\", name, 15, src[i]);\n+}\n+\n+void print_signed_short_int (char *name, vector signed short int src)\n+{\n+  int i;\n+\n+  for (i = 0; i < 7; i++)\n+    printf(\"%s[%d] = %d, \", name, i, src[i]);\n+\n+  printf(\"%s[%d] = %d\\n\", name, 7, src[i]);\n+}\n+\n+void print_unsigned_short_int (char *name, vector unsigned short int src)\n+{\n+  int i;\n+\n+  for (i = 0; i < 7; i++)\n+    printf(\"%s[%d] = %d, \", name, i, src[i]);\n+\n+  printf(\"%s[%d] = %d\\n\", name, 7, src[i]);\n+}\n+\n+void print_signed_int (char *name, vector signed int src)\n+{\n+  int i;\n+\n+  for (i = 0; i < 3; i++)\n+    printf(\"%s[%d] = %d, \", name, i, src[i]);\n+\n+  printf(\"%s[%d] = %d\\n\", name, 3, src[i]);\n+}\n+\n+void print_unsigned_int (char *name, vector unsigned int src)\n+{\n+  int i;\n+\n+  for (i = 0; i < 3; i++)\n+    printf(\"%s[%d] = %d, \", name, i, src[i]);\n+\n+  printf(\"%s[%d] = %d\\n\", name, 3, src[i]);\n+}\n+#endif\n \n int main() {\n \n@@ -24,7 +100,9 @@ int main() {\n   unsigned int result, expected_result;\n \n \n-  /* Tests for: vec_first_match_index() */\n+  /* Tests for: vec_first_match_index()\n+     The element index in natural element order is returned for the\n+     first match or the number of elements if there is no match.  */\n   /* char */\n   char_src1 = (vector signed char) {-1, 2, 3, 4, -5, 6, 7, 8,\n \t\t\t\t    9, 10, 11, 12, 13, 14, 15, 16};\n@@ -34,6 +112,12 @@ int main() {\n \n   result = vec_first_match_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\" vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first match result (%d) does not match expected result (%d)\\n\",\n@@ -50,6 +134,12 @@ int main() {\n \n   result = vec_first_match_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first match result (%d) does not match expected result (%d)\\n\",\n@@ -66,6 +156,12 @@ int main() {\n \n   result = vec_first_match_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first match result (%d) does not match expected result (%d)\\n\",\n@@ -82,6 +178,12 @@ int main() {\n \n   result = vec_first_match_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first match result (%d) does not match expected result (%d)\\n\",\n@@ -98,6 +200,12 @@ int main() {\n \n   result = vec_first_match_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first match result (%d) does not match expected result (%d)\\n\",\n@@ -113,6 +221,12 @@ int main() {\n \n   result = vec_first_match_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first match result (%d) does not match expected result (%d)\\n\",\n@@ -128,6 +242,12 @@ int main() {\n \n   result = vec_first_match_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first match result (%d) does not match expected result (%d)\\n\",\n@@ -145,6 +265,12 @@ int main() {\n \n   result = vec_first_match_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first match result (%d) does not match expected result (%d)\\n\",\n@@ -161,6 +287,12 @@ int main() {\n \n   result = vec_first_match_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first match result (%d) does not match expected result (%d)\\n\",\n@@ -176,6 +308,12 @@ int main() {\n \n   result = vec_first_match_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first match result (%d) does not match expected result (%d)\\n\",\n@@ -191,6 +329,12 @@ int main() {\n \n   result = vec_first_match_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uint first match result (%d) does not match expected result (%d)\\n\",\n@@ -206,6 +350,12 @@ int main() {\n \n   result = vec_first_match_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_match_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uint first match result (%d) does not match expected result (%d)\\n\",\n@@ -214,7 +364,9 @@ int main() {\n     abort();\n #endif\n \n-  /* Tests for: vec_first_mismatch_index() */\n+  /* Tests for: vec_first_mismatch_index()\n+     The element index in BE order is returned for the first mismatch\n+     or the number of elements if there is no match.   */\n   /* char */\n   char_src1 = (vector signed char) {-1, 2, 3, 4, -5, 6, 7, 8,\n \t\t\t\t    9, 10, 11, 12, 13, 14, 15, 16};\n@@ -224,6 +376,12 @@ int main() {\n \n   result = vec_first_mismatch_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -240,6 +398,12 @@ int main() {\n \n   result = vec_first_mismatch_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -256,6 +420,12 @@ int main() {\n \n   result = vec_first_mismatch_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -272,10 +442,16 @@ int main() {\n \n   result = vec_first_mismatch_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first mismatch result (%d) does not match expected result (%d)\\n\",\n-\t     result, expected_result);\n+\t    result, expected_result);\n #else\n     abort();\n #endif\n@@ -288,6 +464,12 @@ int main() {\n \n   result = vec_first_mismatch_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -304,6 +486,12 @@ int main() {\n \n   result = vec_first_mismatch_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -319,6 +507,12 @@ int main() {\n \n   result = vec_first_mismatch_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -334,6 +528,12 @@ int main() {\n \n   result = vec_first_mismatch_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -349,6 +549,12 @@ int main() {\n \n   result = vec_first_mismatch_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -365,6 +571,12 @@ int main() {\n \n   result = vec_first_mismatch_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -380,6 +592,12 @@ int main() {\n \n   result = vec_first_mismatch_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -395,6 +613,12 @@ int main() {\n \n   result = vec_first_mismatch_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -410,6 +634,12 @@ int main() {\n \n   result = vec_first_mismatch_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uint first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -425,15 +655,24 @@ int main() {\n \n   result = vec_first_mismatch_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_mismatch_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n+\n #ifdef DEBUG\n     printf(\"Error: uint first mismatch result (%d) does not match expected result (%d)\\n\",\n \t   result, expected_result);\n #else\n     abort();\n #endif\n \n-  /* Tests for: vec_first_match_or_eos_index() */\n+  /* Tests for: vec_first_match_or_eos_index() \n+     The element index in BE order is returned for the first match\n+     or the number of elements if there is no match.  */\n   /* char */\n   char_src1 = (vector signed char) {-1, 2, 3, 4, -5, 6, 7, 8,\n \t\t\t\t    9, 10, 11, 12, 13, 14, 15, 16};\n@@ -443,6 +682,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first match result (%d) does not match expected result (%d)\\n\",\n@@ -459,6 +704,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -475,12 +726,18 @@ int main() {\n \n   result = vec_first_match_or_eos_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first match or EOS result (%d) does not match expected result (%d)\\n\",\n \t   result, expected_result);\n #else\n-     abort();\n+    abort();\n #endif\n \n   uchar_src1 = (vector unsigned char) {1, 2, 3, 4, 5, 6, 7, 8,\n@@ -491,6 +748,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -507,6 +770,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first match or EOS  result (%d) does not match expected result (%d)\\n\",\n@@ -523,6 +792,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -538,6 +813,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -553,6 +834,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -568,6 +855,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -583,6 +876,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -600,6 +899,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -616,10 +921,16 @@ int main() {\n \n   result = vec_first_match_or_eos_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n-     printf(\"Error: ushort int first match or EOS result (%d) does not match expected result (%d)\\n\",\n-\t    result, expected_result);\n+    printf(\"Error: ushort int first match or EOS result (%d) does not match expected result (%d)\\n\",\n+\t   result, expected_result);\n #else\n     abort();\n #endif\n@@ -632,6 +943,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -647,6 +964,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -662,10 +985,16 @@ int main() {\n \n   result = vec_first_match_or_eos_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n-     printf(\"Error: int first match or EOS result (%d) does not match expected result (%d)\\n\",\n-\t    result, expected_result);\n+    printf(\"Error: int first match or EOS result (%d) does not match expected result (%d)\\n\",\n+\t   result, expected_result);\n #else\n     abort();\n #endif\n@@ -677,6 +1006,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uint first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -692,6 +1027,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uint first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -707,6 +1048,12 @@ int main() {\n \n   result = vec_first_match_or_eos_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_match_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uint first match or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -715,7 +1062,9 @@ int main() {\n     abort();\n #endif\n \n-  /* Tests for: vec_first_mismatch_or_eos_index() */\n+  /* Tests for: vec_first_mismatch_or_eos_index()\n+     The element index in BE order is returned for the first mismatch\n+     or the number of elements if there is no match.   */\n   /* char */\n   char_src1 = (vector signed char) {-1, 2, 3, 4, -5, 6, 7, 8,\n \t\t\t\t    9, 10, 11, 12, 13, 14, 15, 16};\n@@ -725,6 +1074,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -741,6 +1096,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -757,6 +1118,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (char_src1, char_src2);\n \n+#ifdef DEBUG2\n+  print_signed_char(\"src1\", char_src1);\n+  print_signed_char(\"src2\", char_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: char first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -773,12 +1140,18 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n \t   result, expected_result);\n #else\n-     abort();\n+    abort();\n #endif\n \n   uchar_src1 = (vector unsigned char) {2, 3, 4, 5, 6, 7, 8, 9,\n@@ -789,6 +1162,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -805,6 +1184,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -821,6 +1206,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (uchar_src1, uchar_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_char(\"src1\", uchar_src1);\n+  print_unsigned_char(\"src2\", uchar_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: uchar first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -837,6 +1228,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -852,6 +1249,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -867,6 +1270,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -882,6 +1291,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (short_src1, short_src2);\n \n+#ifdef DEBUG2\n+  print_signed_short_int(\"src1\", short_src1);\n+  print_signed_short_int(\"src2\", short_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: short int first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -897,6 +1312,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -912,7 +1333,13 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (ushort_src1, ushort_src2);\n \n- if (result != expected_result)\n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n+  if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n \t   result, expected_result);\n@@ -927,6 +1354,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (ushort_src1, ushort_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_short_int(\"src1\", ushort_src1);\n+  print_unsigned_short_int(\"src2\", ushort_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: ushort int first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -943,6 +1376,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first mismatch or EOS result (%d) does not match expected result (%d)\\n\",\n@@ -958,6 +1397,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -973,6 +1418,12 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -988,6 +1439,11 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (int_src1, int_src2);\n \n+#ifdef DEBUG2\n+  print_signed_int(\"src1\", int_src1);\n+  print_signed_int(\"src2\", int_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n   if (result != expected_result)\n #ifdef DEBUG\n     printf(\"Error: int first mismatch result (%d) does not match expected result (%d)\\n\",\n@@ -1003,9 +1459,14 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n   if (result != expected_result)\n #ifdef DEBUG\n-    printf(\"Error: uint first mismatch result (%d) does not match expected result (%d)\\n\",\n+    printf(\"Error: uint first mismatch or eos index result (%d) does not match expected result (%d)\\n\",\n \t   result, expected_result);\n #else\n     abort();\n@@ -1018,9 +1479,15 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n-    printf(\"Error: uint first mismatch result (%d) does not match expected result (%d)\\n\",\n+    printf(\"Error: uint first mismatch or eos index result (%d) does not match expected result (%d)\\n\",\n \t   result, expected_result);\n #else\n     abort();\n@@ -1033,9 +1500,15 @@ int main() {\n \n   result = vec_first_mismatch_or_eos_index (uint_src1, uint_src2);\n \n+#ifdef DEBUG2\n+  print_unsigned_int(\"src1\", uint_src1);\n+  print_unsigned_int(\"src2\", uint_src2);\n+  printf(\"vec_first_mismatch_or_eos_index = %d\\n\\n\", result);\n+#endif\n+\n   if (result != expected_result)\n #ifdef DEBUG\n-    printf(\"Error: uint first mismatch result (%d) does not match expected result (%d)\\n\",\n+    printf(\"Error: uint first mismatch or eos index result (%d) does not match expected result (%d)\\n\",\n \t   result, expected_result);\n #else\n     abort();"}]}