{"sha": "8d0eca24faee76ac0ebc169695e4a79f390a5316", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQwZWNhMjRmYWVlNzZhYzBlYmMxNjk2OTVlNGE3OWYzOTBhNTMxNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-01-11T13:36:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-01-11T13:36:53Z"}, "message": "tree-ssa-sccvn.c (struct vn_binary_op_s): Move hashcode near opcode.\n\n2008-01-11  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (struct vn_binary_op_s): Move hashcode near opcode.\n\t(struct vn_unary_op_s): Likewise.\n\t(vn_reference_insert): Free old reference on hash collision.\n\nFrom-SVN: r131462", "tree": {"sha": "0c2eb0c12ff7e6f1df85bd4a8935956adc003fb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c2eb0c12ff7e6f1df85bd4a8935956adc003fb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d0eca24faee76ac0ebc169695e4a79f390a5316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0eca24faee76ac0ebc169695e4a79f390a5316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0eca24faee76ac0ebc169695e4a79f390a5316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0eca24faee76ac0ebc169695e4a79f390a5316/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "245af66d33bee358798bcc814f4ed45ad72cf4e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/245af66d33bee358798bcc814f4ed45ad72cf4e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/245af66d33bee358798bcc814f4ed45ad72cf4e5"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "7d9f5e74cfdc0bc74f9d9feb74a01193096ab051", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0eca24faee76ac0ebc169695e4a79f390a5316/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0eca24faee76ac0ebc169695e4a79f390a5316/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d0eca24faee76ac0ebc169695e4a79f390a5316", "patch": "@@ -1,3 +1,9 @@\n+2008-01-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (struct vn_binary_op_s): Move hashcode near opcode.\n+\t(struct vn_unary_op_s): Likewise.\n+\t(vn_reference_insert): Free old reference on hash collision.\n+\n 2008-01-10  Raksit Ashok  <raksit@google.com>\n \n \tPR rtl-optimization/27971"}, {"sha": "7f566dba8e1c417c71d401f1dd8d7a175e3eb1f8", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0eca24faee76ac0ebc169695e4a79f390a5316/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0eca24faee76ac0ebc169695e4a79f390a5316/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=8d0eca24faee76ac0ebc169695e4a79f390a5316", "patch": "@@ -125,10 +125,10 @@ typedef struct vn_tables_s\n typedef struct vn_binary_op_s\n {\n   enum tree_code opcode;\n+  hashval_t hashcode;\n   tree type;\n   tree op0;\n   tree op1;\n-  hashval_t hashcode;\n   tree result;\n } *vn_binary_op_t;\n typedef const struct vn_binary_op_s *const_vn_binary_op_t;\n@@ -140,9 +140,9 @@ typedef const struct vn_binary_op_s *const_vn_binary_op_t;\n typedef struct vn_unary_op_s\n {\n   enum tree_code opcode;\n+  hashval_t hashcode;\n   tree type;\n   tree op0;\n-  hashval_t hashcode;\n   tree result;\n } *vn_unary_op_t;\n typedef const struct vn_unary_op_s *const_vn_unary_op_t;\n@@ -280,6 +280,24 @@ VN_INFO_GET (tree name)\n }\n \n \n+/* Free a phi operation structure VP.  */\n+\n+static void\n+free_phi (void *vp)\n+{\n+  vn_phi_t phi = vp;\n+  VEC_free (tree, heap, phi->phiargs);\n+}\n+\n+/* Free a reference operation structure VP.  */\n+\n+static void\n+free_reference (void *vp)\n+{\n+  vn_reference_t vr = vp;\n+  VEC_free (vn_reference_op_s, heap, vr->operands);\n+}\n+\n /* Compare two reference operands P1 and P2 for equality.  return true if\n    they are equal, and false otherwise.  */\n \n@@ -691,6 +709,9 @@ vn_reference_insert (tree op, tree result, VEC (tree, gc) *vuses)\n      the other lookup functions, you cannot gcc_assert (!*slot)\n      here.  */\n \n+  /* But free the old slot in case of a collision.  */\n+  if (*slot)\n+    free_reference (*slot);\n \n   *slot = vr1;\n }\n@@ -1927,23 +1948,6 @@ DFS (tree name)\n   return true;\n }\n \n-static void\n-free_phi (void *vp)\n-{\n-  vn_phi_t phi = vp;\n-  VEC_free (tree, heap, phi->phiargs);\n-}\n-\n-\n-/* Free a reference operation structure VP.  */\n-\n-static void\n-free_reference (void *vp)\n-{\n-  vn_reference_t vr = vp;\n-  VEC_free (vn_reference_op_s, heap, vr->operands);\n-}\n-\n /* Allocate a value number table.  */\n \n static void"}]}