{"sha": "13ebf17b66c3ff8f4291f046158347191fe396c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNlYmYxN2I2NmMzZmY4ZjQyOTFmMDQ2MTU4MzQ3MTkxZmUzOTZjMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-09-28T21:23:35Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-09-28T21:23:35Z"}, "message": "re PR middle-end/40500 (Revision 148512 failed to build binutils)\n\n\tPR middle-end/40500\n\t* c-opts.c (c_common_handle_option): Don't set\n\twarn_jump_misses_init for -Wall.\n\t* doc/invoke.texi (Warning Options): Update documentation.\n\nFrom-SVN: r152252", "tree": {"sha": "cf4d27dc41d9d27b7f6b3b19622143ef67c50685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf4d27dc41d9d27b7f6b3b19622143ef67c50685"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13ebf17b66c3ff8f4291f046158347191fe396c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ebf17b66c3ff8f4291f046158347191fe396c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13ebf17b66c3ff8f4291f046158347191fe396c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ebf17b66c3ff8f4291f046158347191fe396c1/comments", "author": null, "committer": null, "parents": [{"sha": "2bc98066036afd3da5b7846c21f997cef4de52b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc98066036afd3da5b7846c21f997cef4de52b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bc98066036afd3da5b7846c21f997cef4de52b9"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "2a84e345669652c920988269185514697180f743", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ebf17b66c3ff8f4291f046158347191fe396c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ebf17b66c3ff8f4291f046158347191fe396c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13ebf17b66c3ff8f4291f046158347191fe396c1", "patch": "@@ -1,3 +1,10 @@\n+2009-09-28  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR middle-end/40500\n+\t* c-opts.c (c_common_handle_option): Don't set\n+\twarn_jump_misses_init for -Wall.\n+\t* doc/invoke.texi (Warning Options): Update documentation.\n+\n 2009-09-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in ($(out_object_file)): Depend on"}, {"sha": "e026fd97dc754c6e9f10d7abab6b5dff127fd5da", "filename": "gcc/c-opts.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ebf17b66c3ff8f4291f046158347191fe396c1/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ebf17b66c3ff8f4291f046158347191fe396c1/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=13ebf17b66c3ff8f4291f046158347191fe396c1", "patch": "@@ -397,8 +397,6 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n \twarn_strict_overflow = value;\n       warn_array_bounds = value;\n       warn_volatile_register_var = value;\n-      if (warn_jump_misses_init == -1)\n-\twarn_jump_misses_init = value;\n \n       /* Only warn about unknown pragmas that are not in system\n \t headers.  */\n@@ -450,7 +448,7 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       if (warn_enum_compare == -1 && value)\n \twarn_enum_compare = value;\n       /* Because C++ always warns about a goto which misses an\n-\t initialization, -Wc++-compat turns on -Wgoto-misses-init.  */\n+\t initialization, -Wc++-compat turns on -Wjump-misses-init.  */\n       if (warn_jump_misses_init == -1 && value)\n \twarn_jump_misses_init = value;\n       cpp_opts->warn_cxx_operator_names = value;"}, {"sha": "4ae8a024a58556ba569c28f9ac9b1f83aa007406", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ebf17b66c3ff8f4291f046158347191fe396c1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ebf17b66c3ff8f4291f046158347191fe396c1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=13ebf17b66c3ff8f4291f046158347191fe396c1", "patch": "@@ -3025,20 +3025,6 @@ requiring a non-null value by the @code{nonnull} function attribute.\n @option{-Wnonnull} is included in @option{-Wall} and @option{-Wformat}.  It\n can be disabled with the @option{-Wno-nonnull} option.\n \n-@item -Wjump-misses-init @r{(C, Objective-C only)}\n-@opindex Wjump-misses-init\n-@opindex Wno-jump-misses-init\n-Warn if a @code{goto} statement or a @code{switch} statement jumps\n-forward across the initialization of a variable, or jumps backward to a\n-label after the variable has been initialized.  This only warns about\n-variables which are initialized when they are declared.  This warning is\n-only supported for C and Objective C; in C++ this sort of branch is an\n-error in any case.\n-\n-@option{-Wjump-misses-init} is included in @option{-Wall} and\n-@option{-Wc++-compat}.  It can be disabled with the\n-@option{-Wno-jump-misses-init} option.\n-\n @item -Winit-self @r{(C, C++, Objective-C and Objective-C++ only)}\n @opindex Winit-self\n @opindex Wno-init-self\n@@ -3850,6 +3836,19 @@ Warn about a comparison between values of different enum types. In C++\n this warning is enabled by default.  In C this warning is enabled by\n @option{-Wall}.\n \n+@item -Wjump-misses-init @r{(C, Objective-C only)}\n+@opindex Wjump-misses-init\n+@opindex Wno-jump-misses-init\n+Warn if a @code{goto} statement or a @code{switch} statement jumps\n+forward across the initialization of a variable, or jumps backward to a\n+label after the variable has been initialized.  This only warns about\n+variables which are initialized when they are declared.  This warning is\n+only supported for C and Objective C; in C++ this sort of branch is an\n+error in any case.\n+\n+@option{-Wjump-misses-init} is included in @option{-Wc++-compat}.  It\n+can be disabled with the @option{-Wno-jump-misses-init} option.\n+\n @item -Wsign-compare\n @opindex Wsign-compare\n @opindex Wno-sign-compare"}]}