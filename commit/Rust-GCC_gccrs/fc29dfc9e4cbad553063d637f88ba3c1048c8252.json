{"sha": "fc29dfc9e4cbad553063d637f88ba3c1048c8252", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMyOWRmYzllNGNiYWQ1NTMwNjNkNjM3Zjg4YmEzYzEwNDhjODI1Mg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@cavium.com", "date": "2018-06-05T22:20:13Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2018-06-05T22:20:13Z"}, "message": "re PR target/79924 (aarch64: untranslated diagnostics in aarch64_err_no_fpadvsimd)\n\n2018-06-05  Steve Ellcey  <sellcey@cavium.com>\n\n\tPR target/79924\n\t* config/aarch64/aarch64-protos.h (aarch64_err_no_fpadvsimd): Remove\n\tsecond argument.\n\t* config/aarch64/aarch64-protos..c (aarch64_err_no_fpadvsimd):\n\tRemove second argument, change how error is called.\n\t(aarch64_layout_arg): Remove second argument from\n\taarch64_err_no_fpadvsimd call.\n\t(aarch64_init_cumulative_args): Ditto.\n\t(aarch64_gimplify_va_arg_expr): Ditto.\n\t* config/aarch64/aarch64.md (mov<mode>): Ditto.\n\nFrom-SVN: r261217", "tree": {"sha": "eb400da49dff24410b521921ee52310198fa4451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb400da49dff24410b521921ee52310198fa4451"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc29dfc9e4cbad553063d637f88ba3c1048c8252", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc29dfc9e4cbad553063d637f88ba3c1048c8252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc29dfc9e4cbad553063d637f88ba3c1048c8252", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc29dfc9e4cbad553063d637f88ba3c1048c8252/comments", "author": {"login": "sellcey", "id": 25938520, "node_id": "MDQ6VXNlcjI1OTM4NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/25938520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellcey", "html_url": "https://github.com/sellcey", "followers_url": "https://api.github.com/users/sellcey/followers", "following_url": "https://api.github.com/users/sellcey/following{/other_user}", "gists_url": "https://api.github.com/users/sellcey/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellcey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellcey/subscriptions", "organizations_url": "https://api.github.com/users/sellcey/orgs", "repos_url": "https://api.github.com/users/sellcey/repos", "events_url": "https://api.github.com/users/sellcey/events{/privacy}", "received_events_url": "https://api.github.com/users/sellcey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0b195b58aaa99cbdcb2bbe2996f6885562da987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0b195b58aaa99cbdcb2bbe2996f6885562da987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0b195b58aaa99cbdcb2bbe2996f6885562da987"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "dd6b2716502635a6aa184161eaa37ba9fa0821f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc29dfc9e4cbad553063d637f88ba3c1048c8252/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc29dfc9e4cbad553063d637f88ba3c1048c8252/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc29dfc9e4cbad553063d637f88ba3c1048c8252", "patch": "@@ -1,3 +1,16 @@\n+2018-06-05  Steve Ellcey  <sellcey@cavium.com>\n+\n+\tPR target/79924\n+\t* config/aarch64/aarch64-protos.h (aarch64_err_no_fpadvsimd): Remove\n+\tsecond argument.\n+\t* config/aarch64/aarch64-protos..c (aarch64_err_no_fpadvsimd):\n+\tRemove second argument, change how error is called.\n+\t(aarch64_layout_arg): Remove second argument from\n+\taarch64_err_no_fpadvsimd call.\n+\t(aarch64_init_cumulative_args): Ditto.\n+\t(aarch64_gimplify_va_arg_expr): Ditto.\n+\t* config/aarch64/aarch64.md (mov<mode>): Ditto.\n+\n 2018-06-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (simple_return_indirect_internal): New expander."}, {"sha": "87c6ae202783c1582913d07ecf38ca6c8fac4aac", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc29dfc9e4cbad553063d637f88ba3c1048c8252/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc29dfc9e4cbad553063d637f88ba3c1048c8252/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=fc29dfc9e4cbad553063d637f88ba3c1048c8252", "patch": "@@ -448,7 +448,7 @@ void aarch64_asm_output_labelref (FILE *, const char *);\n void aarch64_cpu_cpp_builtins (cpp_reader *);\n const char * aarch64_gen_far_branch (rtx *, int, const char *, const char *);\n const char * aarch64_output_probe_stack_range (rtx, rtx);\n-void aarch64_err_no_fpadvsimd (machine_mode, const char *);\n+void aarch64_err_no_fpadvsimd (machine_mode);\n void aarch64_expand_epilogue (bool);\n void aarch64_expand_mov_immediate (rtx, rtx, rtx (*) (rtx, rtx) = 0);\n void aarch64_emit_sve_pred_move (rtx, rtx, rtx);"}, {"sha": "bd0ac2f04d8f43fd54b58ff9581645493b8d0cd1", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc29dfc9e4cbad553063d637f88ba3c1048c8252/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc29dfc9e4cbad553063d637f88ba3c1048c8252/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=fc29dfc9e4cbad553063d637f88ba3c1048c8252", "patch": "@@ -1077,13 +1077,22 @@ aarch64_gen_far_branch (rtx * operands, int pos_label, const char * dest,\n }\n \n void\n-aarch64_err_no_fpadvsimd (machine_mode mode, const char *msg)\n+aarch64_err_no_fpadvsimd (machine_mode mode)\n {\n-  const char *mc = FLOAT_MODE_P (mode) ? \"floating-point\" : \"vector\";\n   if (TARGET_GENERAL_REGS_ONLY)\n-    error (\"%qs is incompatible with %s %s\", \"-mgeneral-regs-only\", mc, msg);\n+    if (FLOAT_MODE_P (mode))\n+      error (\"%qs is incompatible with the use of floating-point types\",\n+\t     \"-mgeneral-regs-only\");\n+    else\n+      error (\"%qs is incompatible with the use of vector types\",\n+\t     \"-mgeneral-regs-only\");\n   else\n-    error (\"%qs feature modifier is incompatible with %s %s\", \"+nofp\", mc, msg);\n+    if (FLOAT_MODE_P (mode))\n+      error (\"%qs feature modifier is incompatible with the use of\"\n+\t     \" floating-point types\", \"+nofp\");\n+    else\n+      error (\"%qs feature modifier is incompatible with the use of\"\n+\t     \" vector types\", \"+nofp\");\n }\n \n /* Implement TARGET_IRA_CHANGE_PSEUDO_ALLOCNO_CLASS.\n@@ -3519,7 +3528,7 @@ aarch64_layout_arg (cumulative_args_t pcum_v, machine_mode mode,\n   if (allocate_nvrn)\n     {\n       if (!TARGET_FLOAT)\n-\taarch64_err_no_fpadvsimd (mode, \"argument\");\n+\taarch64_err_no_fpadvsimd (mode);\n \n       if (nvrn + nregs <= NUM_FP_ARG_REGS)\n \t{\n@@ -3661,7 +3670,7 @@ aarch64_init_cumulative_args (CUMULATIVE_ARGS *pcum,\n       int nregs ATTRIBUTE_UNUSED; /* Likewise.  */\n       if (aarch64_vfp_is_call_or_return_candidate (TYPE_MODE (type), type,\n \t\t\t\t\t\t   &mode, &nregs, NULL))\n-\taarch64_err_no_fpadvsimd (TYPE_MODE (type), \"return type\");\n+\taarch64_err_no_fpadvsimd (TYPE_MODE (type));\n     }\n   return;\n }\n@@ -12254,7 +12263,7 @@ aarch64_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p,\n \n       /* TYPE passed in fp/simd registers.  */\n       if (!TARGET_FLOAT)\n-\taarch64_err_no_fpadvsimd (mode, \"varargs\");\n+\taarch64_err_no_fpadvsimd (mode);\n \n       f_top = build3 (COMPONENT_REF, TREE_TYPE (f_vrtop),\n \t\t      unshare_expr (valist), f_vrtop, NULL_TREE);"}, {"sha": "830f97603487d6ed07c4dc854a7898c4d17894d1", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc29dfc9e4cbad553063d637f88ba3c1048c8252/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc29dfc9e4cbad553063d637f88ba3c1048c8252/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=fc29dfc9e4cbad553063d637f88ba3c1048c8252", "patch": "@@ -1149,7 +1149,7 @@\n   {\n     if (!TARGET_FLOAT)\n       {\n-\taarch64_err_no_fpadvsimd (<MODE>mode, \"code\");\n+\taarch64_err_no_fpadvsimd (<MODE>mode);\n \tFAIL;\n       }\n "}]}