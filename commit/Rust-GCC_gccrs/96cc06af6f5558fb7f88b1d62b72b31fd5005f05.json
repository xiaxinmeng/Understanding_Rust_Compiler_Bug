{"sha": "96cc06af6f5558fb7f88b1d62b72b31fd5005f05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZjYzA2YWY2ZjU1NThmYjdmODhiMWQ2MmI3MmIzMWZkNTAwNWYwNQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-01T18:04:06Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-01T18:04:06Z"}, "message": "* config/h8300/h8300.md: Add comments for define_peephole2.\n\nFrom-SVN: r59690", "tree": {"sha": "4d61c9aa1a0984bf654d0f2a7653fff226aa2ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d61c9aa1a0984bf654d0f2a7653fff226aa2ad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96cc06af6f5558fb7f88b1d62b72b31fd5005f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cc06af6f5558fb7f88b1d62b72b31fd5005f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96cc06af6f5558fb7f88b1d62b72b31fd5005f05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cc06af6f5558fb7f88b1d62b72b31fd5005f05/comments", "author": null, "committer": null, "parents": [{"sha": "c9f8536c5dc8c115f26aaeb87585dbce0eeb4a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f8536c5dc8c115f26aaeb87585dbce0eeb4a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9f8536c5dc8c115f26aaeb87585dbce0eeb4a10"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "47f873553bd46e26f22b8f22fa1f32665e513e01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96cc06af6f5558fb7f88b1d62b72b31fd5005f05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96cc06af6f5558fb7f88b1d62b72b31fd5005f05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96cc06af6f5558fb7f88b1d62b72b31fd5005f05", "patch": "@@ -1,3 +1,7 @@\n+2002-12-01  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md: Add comments for define_peephole2.\n+\n 2002-12-01  Mark Mitchell  <mark@codesourcery.com>\n \n \t* builtin-types.def (BT_SIZE): Use size_type_node."}, {"sha": "c846ac67bbd21bf9b92770befaf5138965dc3d2e", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96cc06af6f5558fb7f88b1d62b72b31fd5005f05/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96cc06af6f5558fb7f88b1d62b72b31fd5005f05/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=96cc06af6f5558fb7f88b1d62b72b31fd5005f05", "patch": "@@ -2353,6 +2353,8 @@\n ;; PEEPHOLE PATTERNS\n ;; -----------------------------------------------------------------\n \n+;; Convert (A >> B) & C to (A & 255) >> B if C == 255 >> B.\n+\n (define_peephole2\n   [(parallel\n      [(set (match_operand:HI 0 \"register_operand\" \"\")\n@@ -2373,6 +2375,8 @@\n       (clobber (match_dup 2))])]\n   \"\")\n \n+;; Convert (A << B) & C to (A & 255) << B if C == 255 << B.\n+\n (define_peephole2\n   [(parallel\n      [(set (match_operand:HI 0 \"register_operand\" \"\")\n@@ -2393,6 +2397,8 @@\n       (clobber (match_dup 2))])]\n   \"\")\n \n+;; Convert (A >> B) & C to (A & 255) >> B if C == 255 >> B.\n+\n (define_peephole2\n   [(parallel\n      [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -2413,6 +2419,8 @@\n       (clobber (match_dup 2))])]\n   \"\")\n \n+;; Convert (A << B) & C to (A & 255) << B if C == 255 << B.\n+\n (define_peephole2\n   [(parallel\n      [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -2433,6 +2441,8 @@\n       (clobber (match_dup 2))])]\n   \"\")\n \n+;; Convert (A >> B) & C to (A & 65535) >> B if C == 65535 >> B.\n+\n (define_peephole2\n   [(parallel\n      [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -2453,6 +2463,8 @@\n       (clobber (match_dup 2))])]\n   \"\")\n \n+;; Convert (A << B) & C to (A & 65535) << B if C == 65535 << B.\n+\n (define_peephole2\n   [(parallel\n      [(set (match_operand:SI 0 \"register_operand\" \"\")"}]}