{"sha": "940bbc4363b4cee9682a96e17fbb536f61c50c21", "node_id": "C_kwDOANBUbNoAKDk0MGJiYzQzNjNiNGNlZTk2ODJhOTZlMTdmYmI1MzZmNjFjNTBjMjE", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-05-24T08:01:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-06T13:29:49Z"}, "message": "[Ada] Small tweak to gnat_to_gnu_subprog_type\n\nNo functional changes.\n\ngcc/ada/\n\n\t* gcc-interface/decl.cc (gnat_to_gnu_subprog_type): Constify a\n\tlocal variable and move a couple of others around.", "tree": {"sha": "491e556f99681cc567706e57c83587ba632abffe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/491e556f99681cc567706e57c83587ba632abffe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/940bbc4363b4cee9682a96e17fbb536f61c50c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/940bbc4363b4cee9682a96e17fbb536f61c50c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/940bbc4363b4cee9682a96e17fbb536f61c50c21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/940bbc4363b4cee9682a96e17fbb536f61c50c21/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "889db59e6e77abf5253c8355d6a5ccbdfe42d3ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/889db59e6e77abf5253c8355d6a5ccbdfe42d3ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/889db59e6e77abf5253c8355d6a5ccbdfe42d3ec"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e7e5ad5cac6ace00985973ad7d9f138ced9271c1", "filename": "gcc/ada/gcc-interface/decl.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940bbc4363b4cee9682a96e17fbb536f61c50c21/gcc%2Fada%2Fgcc-interface%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940bbc4363b4cee9682a96e17fbb536f61c50c21/gcc%2Fada%2Fgcc-interface%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.cc?ref=940bbc4363b4cee9682a96e17fbb536f61c50c21", "patch": "@@ -5777,10 +5777,9 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n \t\t\t  bool debug_info_p, tree *param_list)\n {\n   const Entity_Kind kind = Ekind (gnat_subprog);\n+  const Entity_Id gnat_return_type = Etype (gnat_subprog);\n   const bool method_p = is_cplusplus_method (gnat_subprog);\n   const bool variadic = IN (Convention (gnat_subprog), Convention_C_Variadic);\n-  Entity_Id gnat_return_type = Etype (gnat_subprog);\n-  Entity_Id gnat_param;\n   tree gnu_type = present_gnu_tree (gnat_subprog)\n \t\t  ? TREE_TYPE (get_gnu_tree (gnat_subprog)) : NULL_TREE;\n   tree gnu_return_type;\n@@ -5810,7 +5809,6 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n   bool return_by_direct_ref_p = false;\n   bool return_by_invisi_ref_p = false;\n   bool incomplete_profile_p = false;\n-  int num;\n \n   /* Look into the return type and get its associated GCC tree if it is not\n      void, and then compute various flags for the subprogram type.  But make\n@@ -5944,6 +5942,8 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n \n   /* Loop over the parameters and get their associated GCC tree.  While doing\n      this, build a copy-in copy-out structure if we need one.  */\n+  Entity_Id gnat_param;\n+  int num;\n   for (gnat_param = First_Formal_With_Extras (gnat_subprog), num = 0;\n        Present (gnat_param);\n        gnat_param = Next_Formal_With_Extras (gnat_param), num++)"}]}