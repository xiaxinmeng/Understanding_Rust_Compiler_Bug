{"sha": "aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVlOTZmZTk5YjE2ZGMxM2Y2MWViZDEwNzZiODAzMzVlOGE3MWY4Yg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-07-03T00:46:05Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-07-03T00:46:05Z"}, "message": "extend.texi, [...]: Improve formatting.\n\ngcc:\n\t* doc/extend.texi, doc/gcc.texi, doc/invoke.texi, doc/md.texi,\n\tdoc/rtl.texi, doc/tm.texi: Improve formatting.  Improve\n\tdocumentation of -std and -Wwrite-strings.\n\ncontrib:\n\t* texi2pod.pl: Handle @r inside @item.\n\nFrom-SVN: r43718", "tree": {"sha": "02f2765bebf71c9d8ef0658dd2133243122d8af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02f2765bebf71c9d8ef0658dd2133243122d8af4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ce847cf954a6395ee4f9439a64e0a24ea041134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce847cf954a6395ee4f9439a64e0a24ea041134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce847cf954a6395ee4f9439a64e0a24ea041134"}], "stats": {"total": 422, "additions": 227, "deletions": 195}, "files": [{"sha": "7279ad9adcd54c87df1f449a25ee856268b0ebc0", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -1,3 +1,7 @@\n+2001-07-03  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* texi2pod.pl: Handle @r inside @item.\n+\n 2001-07-02  Zack Weinberg  <zackw@stanford.edu>\n \n \t* gcc_update: Remove entries for gcc.1, cpp.1, gcov.1."}, {"sha": "7a930eed595a959f74d336d8021869b92b272d7e", "filename": "contrib/texi2pod.pl", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/contrib%2Ftexi2pod.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/contrib%2Ftexi2pod.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftexi2pod.pl?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -279,9 +279,6 @@ sub postprocess\n     s/\\@w\\{([^\\}]*)\\}/S<$1>/g;\n     s/\\@(?:dmn|math)\\{([^\\}]*)\\}/$1/g;\n \n-    # Handle @r inside bold.\n-    1 while s/B<((?:[^<>]|I<[^<>]*>)*)R<([^>]*)>/B<$1>${2}B</g;\n-\n     # Cross references are thrown away, as are @noindent and @refill.\n     # (@noindent is impossible in .pod, and @refill is unnecessary.)\n     # @* is also impossible in .pod; we discard it and any newline that\n@@ -303,9 +300,11 @@ sub postprocess\n     s/\\@uref\\{([^\\},]*),([^\\},]*),([^\\},]*)\\}/$3/g;\n \n     # Turn B<blah I<blah> blah> into B<blah> I<blah> B<blah> to\n-    # match Texinfo semantics of @emph inside @samp.\n+    # match Texinfo semantics of @emph inside @samp.  Also handle @r\n+    # inside bold.\n     s/&LT;/</g;\n     s/&GT;/>/g;\n+    1 while s/B<((?:[^<>]|I<[^<>]*>)*)R<([^>]*)>/B<$1>${2}B</g;\n     1 while (s/B<([^<>]*)I<([^>]+)>/B<$1>I<$2>B</g);\n     1 while (s/I<([^<>]*)B<([^>]+)>/I<$1>B<$2>I</g);\n     s/[BI]<>//g;"}, {"sha": "01d855ab6074c6405a81d221f70fd38cebed5678", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -1,3 +1,9 @@\n+2001-07-03  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* doc/extend.texi, doc/gcc.texi, doc/invoke.texi, doc/md.texi,\n+\tdoc/rtl.texi, doc/tm.texi: Improve formatting.  Improve\n+\tdocumentation of -std and -Wwrite-strings.\n+\n 2001-07-02  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* cse.c (canon_hash): Don't register registers in very small"}, {"sha": "f08be3b426ecf31c4594215995c8bb2124f6a6a4", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -387,6 +387,7 @@ called @dfn{lexical scoping}.  For example, here we show a nested\n function which uses an inherited variable named @code{offset}:\n \n @example\n+@group\n bar (int *array, int offset, int size)\n @{\n   int access (int *array, int index)\n@@ -396,6 +397,7 @@ bar (int *array, int offset, int size)\n   for (i = 0; i < size; i++)\n     @dots{} access (array, i) @dots{}\n @}\n+@end group\n @end example\n \n Nested function definitions are permitted within functions in the places\n@@ -886,7 +888,13 @@ conforming) and in C++.  In that format the\n @samp{0x} hex introducer and the @samp{p} or @samp{P} exponent field are\n mandatory.  The exponent is a decimal number that indicates the power of\n 2 by which the significant part will be multiplied.  Thus @samp{0x1.f} is\n-1 15/16, @samp{p3} multiplies it by 8, and the value of @code{0x1.fp3}\n+@tex\n+$1 {15\\over16}$,\n+@end tex\n+@ifnottex\n+1 15/16,\n+@end ifnottex\n+@samp{p3} multiplies it by 8, and the value of @code{0x1.fp3}\n is the same as @code{1.55e1}.\n \n Unlike for floating-point numbers in the decimal notation the exponent\n@@ -1493,7 +1501,7 @@ double y;\n @end example\n \n @noindent\n-both @code{x} and @code{y} can be cast to type @code{union} foo.\n+both @code{x} and @code{y} can be cast to type @code{union foo}.\n \n Using the cast as the right-hand side of an assignment to a variable of\n union type is equivalent to storing in a member of the union:\n@@ -1581,6 +1589,7 @@ their own functions that never return.  You can declare them\n @code{noreturn} to tell the compiler this fact.  For example,\n \n @smallexample\n+@group\n void fatal () __attribute__ ((noreturn));\n \n void\n@@ -1589,6 +1598,7 @@ fatal (@dots{})\n   @dots{} /* @r{Print error message.} */ @dots{}\n   exit (1);\n @}\n+@end group\n @end smallexample\n \n The @code{noreturn} keyword tells the compiler to assume that\n@@ -1973,7 +1983,8 @@ alternate stack.\n \n @smallexample\n void *alt_stack;\n-void f () __attribute__ ((interrupt_handler, sp_switch (\"alt_stack\")));\n+void f () __attribute__ ((interrupt_handler,\n+                          sp_switch (\"alt_stack\")));\n @end smallexample\n \n @item trap_exit\n@@ -3181,7 +3192,7 @@ asm volatile (\"eieio\" : : );\n @noindent\n Assume @code{addr} contains the address of a memory mapped device\n register.  The PowerPC @code{eieio} instruction (Enforce In-order\n-Execution of I/O) tells the cpu to make sure that the store to that\n+Execution of I/O) tells the CPU to make sure that the store to that\n device register happens before it issues any other I/O@.\n \n Note that even a volatile @code{asm} instruction can be moved in ways\n@@ -4725,20 +4736,20 @@ and will be removed from g++ at some point.\n @cindex Backwards Compatibility\n @cindex ARM [Annotated C++ Reference Manual]\n \n-Now that there is a definitive ISO standard C++, g++ has a specification\n+Now that there is a definitive ISO standard C++, G++ has a specification\n to adhere to.  The C++ language evolved over time, and features that\n used to be acceptable in previous drafts of the standard, such as the ARM\n [Annotated C++ Reference Manual], are no longer accepted.  In order to allow\n-compilation of C++ written to such drafts, g++ contains some backwards\n+compilation of C++ written to such drafts, G++ contains some backwards\n compatibilities.  @emph{All such backwards compatibility features are\n-liable to disappear in future versions of g++.} They should be considered\n+liable to disappear in future versions of G++.} They should be considered\n deprecated @xref{Deprecated Features}.\n \n @table @code\n @item For scope\n If a variable is declared at for scope, it used to remain in scope until\n the end of the scope which contained the for statement (rather than just\n-within the for scope).  g++ retains this, but issues a warning, if such a\n+within the for scope).  G++ retains this, but issues a warning, if such a\n variable is accessed outside the for scope.\n \n @item implicit C language"}, {"sha": "fb4eb6a6245e5e8d32f5cba6410d60cd98866146", "filename": "gcc/doc/gcc.texi", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.texi?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -188,7 +188,7 @@ included in the section entitled ``GNU Free Documentation License''.\n @sp 1\n @c The version number appears five times more in this file.\n \n-@center for gcc-3.1\n+@center for GCC 3.1\n @page\n @vskip 0pt plus 1filll\n Copyright @copyright{} 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1998,\n@@ -197,7 +197,7 @@ Copyright @copyright{} 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1998,\n For GCC Version 3.1@*\n @sp 1\n Published by the Free Software Foundation @*\n-59 Temple Place - Suite 330@*\n+59 Temple Place---Suite 330@*\n Boston, MA 02111-1307, USA@*\n Last printed April, 1998.@*\n Printed copies are available for $50 each.@*\n@@ -1143,9 +1143,11 @@ arguments do not work with GCC@.  For example, a program like this\n will not work:\n \n @example\n+@group\n foobar (\n #define luser\n         hack)\n+@end group\n @end example\n \n ISO C does not permit such a construct.  It would make sense to support\n@@ -3214,12 +3216,12 @@ and some files shared with Objective-C and C++.\n \n The source files for parsing C++ are in @file{cp/}.\n They are @file{parse.y},\n-@file{class.c},@*\n+@file{class.c},\n @file{cvt.c}, @file{decl.c}, @file{decl2.c},\n-@file{except.c},@*\n+@file{except.c},\n @file{expr.c}, @file{init.c}, @file{lex.c},\n-@file{method.c}, @file{ptree.c},@*\n-@file{search.c}, @file{spew.c}, @*\n+@file{method.c}, @file{ptree.c},\n+@file{search.c}, @file{spew.c},\n @file{semantics.c}, @file{tree.c},\n @file{typeck2.c}, and\n @file{typeck.c}, along with header files @file{cp-tree.def},"}, {"sha": "4b01442ecd9aaacd26c6698fcdd2babc3c44de24", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 111, "deletions": 103, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -237,7 +237,8 @@ in the following sections.\n @xref{Debugging Options,,Options for Debugging Your Program or GCC}.\n @gccoptlist{\n -a  -ax  -d@var{letters}  -dumpspecs  -dumpmachine  -dumpversion @gol\n--fdump-unnumbered -fdump-translation-unit@r{[}-@var{n}@r{]} -fdump-class-hierarchy@r{[}-@var{n}@r{]} @gol\n+-fdump-unnumbered -fdump-translation-unit@r{[}-@var{n}@r{]} @gol\n+-fdump-class-hierarchy@r{[}-@var{n}@r{]} @gol\n -fdump-ast-original@r{[}-@var{n}@r{]} -fdump-ast-optimized@r{[}-@var{n}@r{]} @gol\n -fdump-ast-inlined@r{[}-@var{n}@r{]} @gol\n -fmem-report  -fpretend-float @gol\n@@ -288,20 +289,20 @@ in the following sections.\n -iprefix @var{file}  -iwithprefix @var{dir} @gol\n -iwithprefixbefore @var{dir}  -isystem @var{dir} @gol\n -M  -MM  -MF  -MG  -MP  -MQ  -MT  -nostdinc  -P  -remap @gol\n--trigraphs  -undef  -U@var{macro}  -Wp\\,@var{option}}\n+-trigraphs  -undef  -U@var{macro}  -Wp,@var{option}}\n \n @item Assembler Option\n @xref{Assembler Options,,Passing Options to the Assembler}.\n @gccoptlist{\n--Wa\\,@var{option}}\n+-Wa,@var{option}}\n \n @item Linker Options\n @xref{Link Options,,Options for Linking}.\n @gccoptlist{\n @var{object-file-name}  -l@var{library} @gol\n -nostartfiles  -nodefaultlibs  -nostdlib @gol\n -s  -static  -static-libgcc  -shared  -shared-libgcc  -symbolic @gol\n--Wl\\,@var{option}  -Xlinker @var{option} @gol\n+-Wl,@var{option}  -Xlinker @var{option} @gol\n -u @var{symbol}}\n \n @item Directory Options\n@@ -526,7 +527,7 @@ in the following sections.\n \n @emph{System V Options}\n @gccoptlist{\n--Qy  -Qn  -YP\\,@var{paths}  -Ym\\,@var{dir}}\n+-Qy  -Qn  -YP,@var{paths}  -Ym,@var{dir}}\n \n @emph{ARC Options}\n @gccoptlist{\n@@ -876,7 +877,7 @@ In C mode, support all ISO C89 programs.  In C++ mode,\n remove GNU extensions that conflict with ISO C++.\n \n This turns off certain features of GCC that are incompatible with ISO\n-C (when compiling C code), or of standard C++ (when compiling C++ code),\n+C89 (when compiling C code), or of standard C++ (when compiling C++ code),\n such as the @code{asm} and @code{typeof} keywords, and\n predefined macros such as @code{unix} and @code{vax} that identify the\n type of system you are using.  It also enables the undesirable and\n@@ -910,40 +911,33 @@ affected.\n \n @item -std=\n @opindex std\n-Determine the language standard.  A value for this option must be provided;\n+Determine the language standard.  This option is currently only\n+supported when compiling C@.  A value for this option must be provided;\n possible values are\n \n @table @samp\n-@item iso9899:1990\n-Same as @option{-ansi}\n+@item c89\n+@itemx iso9899:1990\n+ISO C89 (same as @option{-ansi}).\n \n @item iso9899:199409\n-ISO C as modified in amendment 1\n-\n-@item iso9899:1999\n-ISO C99.  Note that this standard is not yet fully supported; see\n-@w{@uref{http://gcc.gnu.org/c99status.html}} for more information.\n-\n-@item c89\n-same as @option{-std=iso9899:1990}\n+ISO C89 as modified in amendment 1.\n \n @item c99\n-same as @option{-std=iso9899:1999}\n+@itemx c9x\n+@itemx iso9899:1999\n+@itemx iso9899:199x\n+ISO C99.  Note that this standard is not yet fully supported; see\n+@w{@uref{http://gcc.gnu.org/c99status.html}} for more information.  The\n+names @samp{c9x} and @samp{iso9899:199x} are deprecated.\n \n @item gnu89\n-default, iso9899:1990 + gnu extensions\n+Default, ISO C89 plus GNU extensions (including some C99 features).\n \n @item gnu99\n-iso9899:1999 + gnu extensions\n-\n-@item iso9899:199x\n-same as @option{-std=iso9899:1999}, deprecated\n-\n-@item c9x\n-same as @option{-std=iso9899:1999}, deprecated\n-\n-@item gnu9x\n-same as @option{-std=gnu99}, deprecated\n+@itemx gnu9x\n+ISO C99 plus GNU extensions.  When ISO C99 is fully implemented in GCC,\n+this will become the default.  The name @samp{gnu9x} is deprecated.\n \n @end table\n \n@@ -1268,7 +1262,7 @@ this check is normally unnecessary.\n \n An alternative to using this option is to specify that your\n @code{operator new} does not throw any exceptions; if you declare it\n-@samp{throw()}, g++ will check the return value.  See also @samp{new\n+@samp{throw()}, G++ will check the return value.  See also @samp{new\n (nothrow)}.\n \n @item -fconserve-space\n@@ -1307,7 +1301,7 @@ identifiers.  However, ISO C and C++ forbid @samp{$} in identifiers.\n @opindex fno-elide-constructors\n The C++ standard allows an implementation to omit creating a temporary\n which is only used to initialize another object of the same type.\n-Specifying this option disables that optimization, and forces g++ to\n+Specifying this option disables that optimization, and forces G++ to\n call the copy constructor in all cases.\n \n @item -fno-enforce-eh-specs\n@@ -1343,7 +1337,7 @@ a @i{for-init-statement} is limited to the @samp{for} loop itself,\n as specified by the C++ standard.\n If @option{-fno-for-scope} is specified, the scope of variables declared in\n a @i{for-init-statement} extends to the end of the enclosing scope,\n-as was the case in old versions of gcc, and other (traditional)\n+as was the case in old versions of G++, and other (traditional)\n implementations of C++.\n \n The default if neither flag is given to follow the standard,\n@@ -1407,13 +1401,13 @@ synonyms as keywords.\n @item -fno-optional-diags\n @opindex fno-optional-diags\n Disable diagnostics that the standard says a compiler does not need to\n-issue.  Currently, the only such diagnostic issued by g++ is the one for\n+issue.  Currently, the only such diagnostic issued by G++ is the one for\n a name having multiple meanings within a class.\n \n @item -fpermissive\n @opindex fpermissive\n Downgrade messages about nonconformant code from errors to warnings.  By\n-default, g++ effectively sets @option{-pedantic-errors} without\n+default, G++ effectively sets @option{-pedantic-errors} without\n @option{-pedantic}; this option reverses that.  This behavior and this\n option are superseded by @option{-pedantic}, which works as it does for GNU C@.\n \n@@ -1489,18 +1483,18 @@ Do not assume @samp{inline} for functions defined inside a class scope.\n functions will have linkage like inline functions; they just won't be\n inlined by default.\n \n-@item -Wctor-dtor-privacy (C++ only)\n+@item -Wctor-dtor-privacy @r{(C++ only)}\n @opindex Wctor-dtor-privacy\n Warn when a class seems unusable, because all the constructors or\n destructors in a class are private and the class has no friends or\n public static member functions.\n \n-@item -Wnon-virtual-dtor (C++ only)\n+@item -Wnon-virtual-dtor @r{(C++ only)}\n @opindex Wnon-virtual-dtor\n Warn when a class declares a non-virtual destructor that should probably\n be virtual, because it looks like the class will be used polymorphically.\n \n-@item -Wreorder (C++ only)\n+@item -Wreorder @r{(C++ only)}\n @opindex Wreorder\n @cindex reordering, warning\n @cindex warning for reordering of member initializers\n@@ -1523,41 +1517,41 @@ members.\n The following @option{-W@dots{}} options are not affected by @option{-Wall}.\n \n @table @gcctabopt\n-@item -Weffc++ (C++ only)\n+@item -Weffc++ @r{(C++ only)}\n @opindex Weffc++\n Warn about violations of various style guidelines from Scott Meyers'\n @cite{Effective C++} books.  If you use this option, you should be aware\n that the standard library headers do not obey all of these guidelines;\n you can use @samp{grep -v} to filter out those warnings.\n \n-@item -Wno-deprecated (C++ only)\n+@item -Wno-deprecated @r{(C++ only)}\n @opindex Wno-deprecated\n Do not warn about usage of deprecated features.  @xref{Deprecated Features}.\n \n-@item -Wno-non-template-friend (C++ only)\n+@item -Wno-non-template-friend @r{(C++ only)}\n @opindex Wno-non-template-friend\n Disable warnings when non-templatized friend functions are declared\n within a template.  With the advent of explicit template specification\n-support in g++, if the name of the friend is an unqualified-id (i.e.,\n+support in G++, if the name of the friend is an unqualified-id (i.e.,\n @samp{friend foo(int)}), the C++ language specification demands that the\n friend declare or define an ordinary, nontemplate function.  (Section\n-14.5.3).  Before g++ implemented explicit specification, unqualified-ids\n+14.5.3).  Before G++ implemented explicit specification, unqualified-ids\n could be interpreted as a particular specialization of a templatized\n function.  Because this non-conforming behavior is no longer the default\n-behavior for g++, @option{-Wnon-template-friend} allows the compiler to\n+behavior for G++, @option{-Wnon-template-friend} allows the compiler to\n check existing code for potential trouble spots, and is on by default.\n This new compiler behavior can be turned off with\n @option{-Wno-non-template-friend} which keeps the conformant compiler code\n but disables the helpful warning.\n \n-@item -Wold-style-cast (C++ only)\n+@item -Wold-style-cast @r{(C++ only)}\n @opindex Wold-style-cast\n Warn if an old-style (C-style) cast is used within a C++ program.  The\n new-style casts (@samp{static_cast}, @samp{reinterpret_cast}, and\n @samp{const_cast}) are less vulnerable to unintended effects, and much\n easier to grep for.\n \n-@item -Woverloaded-virtual (C++ only)\n+@item -Woverloaded-virtual @r{(C++ only)}\n @opindex Woverloaded-virtual\n @cindex overloaded virtual fn, warning\n @cindex warning for overloaded virtual fn\n@@ -1584,23 +1578,23 @@ b->f();\n \n will fail to compile.\n \n-@item -Wno-pmf-conversions (C++ only)\n+@item -Wno-pmf-conversions @r{(C++ only)}\n @opindex Wno-pmf-conversions\n Disable the diagnostic for converting a bound pointer to member function\n to a plain pointer.\n \n-@item -Wsign-promo (C++ only)\n+@item -Wsign-promo @r{(C++ only)}\n @opindex Wsign-promo\n Warn when overload resolution chooses a promotion from unsigned or\n enumeral type to a signed type over a conversion to an unsigned type of\n-the same size.  Previous versions of g++ would try to preserve\n+the same size.  Previous versions of G++ would try to preserve\n unsignedness, but the standard mandates the current behavior.\n \n-@item -Wsynth (C++ only)\n+@item -Wsynth @r{(C++ only)}\n @opindex Wsynth\n @cindex warning for synthesized methods\n @cindex synthesized methods, warning\n-Warn when g++'s synthesis behavior does not match that of cfront.  For\n+Warn when G++'s synthesis behavior does not match that of cfront.  For\n instance:\n \n @smallexample\n@@ -1616,7 +1610,7 @@ main ()\n @}\n @end smallexample\n \n-In this example, g++ will synthesize a default @samp{A& operator =\n+In this example, G++ will synthesize a default @samp{A& operator =\n (const A&);}, while cfront will use the user-defined @samp{operator =}.\n @end table\n \n@@ -1697,7 +1691,7 @@ the remaining front ends would be able to digest them correctly.\n @item -fmessage-length=@var{n}\n @opindex fmessage-length\n Try to format error messages so that they fit on lines of about @var{n}\n-characters.  The default is 72 characters for g++ and 0 for the rest of\n+characters.  The default is 72 characters for @command{g++} and 0 for the rest of\n the front ends supported by GCC@.  If @var{n} is zero, then no\n line-wrapping will be done; each error message will appear on a single\n line.\n@@ -1922,13 +1916,15 @@ Also warn about constructions where there may be confusion to which\n such a case:\n \n @smallexample\n+@group\n @{\n   if (a)\n     if (b)\n       foo ();\n   else\n     bar ();\n @}\n+@end group\n @end smallexample\n \n In C, every @code{else} branch belongs to the innermost possible @code{if}\n@@ -1941,6 +1937,7 @@ To eliminate the warning, add explicit braces around the innermost\n the enclosing @code{if}.  The resulting code would look like this:\n \n @smallexample\n+@group\n @{\n   if (a)\n     @{\n@@ -1950,6 +1947,7 @@ the enclosing @code{if}.  The resulting code would look like this:\n         bar ();\n     @}\n @}\n+@end group\n @end smallexample\n \n @item -Wsequence-point\n@@ -2088,6 +2086,7 @@ despite appearing to have an error.  Here is one example of how\n this can happen:\n \n @smallexample\n+@group\n @{\n   int x;\n   switch (y)\n@@ -2100,6 +2099,7 @@ this can happen:\n     @}\n   foo (x);\n @}\n+@end group\n @end smallexample\n \n @noindent\n@@ -2134,7 +2134,7 @@ Some spurious warnings can be avoided if you declare all the functions\n you use that never return as @code{noreturn}.  @xref{Function\n Attributes}.\n \n-@item -Wreorder (C++ only)\n+@item -Wreorder @r{(C++ only)}\n @opindex Wreorder\n @cindex reordering, warning\n @cindex warning for reordering of member initializers\n@@ -2273,7 +2273,7 @@ would check to see whether the two values have ranges that overlap; and\n this is done with the relational operators, so equality comparisons are\n probably mistaken.\n \n-@item -Wtraditional (C only)\n+@item -Wtraditional @r{(C only)}\n @opindex Wtraditional\n Warn about certain constructs that behave differently in traditional and\n ISO C@.  Also warn about ISO C constructs that have no traditional C\n@@ -2372,7 +2372,7 @@ of @code{void}.  GNU C assigns these types a size of 1, for\n convenience in calculations with @code{void *} pointers and pointers\n to functions.\n \n-@item -Wbad-function-cast (C only)\n+@item -Wbad-function-cast @r{(C only)}\n @opindex Wbad-function-cast\n Warn whenever a function call is cast to a non-matching type.\n For example, warn if @code{int malloc()} is cast to @code{anything *}.\n@@ -2392,9 +2392,12 @@ two- or four-byte boundaries.\n \n @item -Wwrite-strings\n @opindex Wwrite-strings\n-Give string constants the type @code{const char[@var{length}]} so that\n+When compiling C, give string constants the type @code{const\n+char[@var{length}]} so that\n copying the address of one into a non-@code{const} @code{char *}\n-pointer will get a warning.  These warnings will help you find at\n+pointer will get a warning; when compiling C++, warn about the\n+deprecated conversion from string constants to @code{char *}.\n+These warnings will help you find at\n compile time code that can try to write into a string constant, but\n only if you have been very careful about using @code{const} in\n declarations and prototypes.  Otherwise, it will just be a nuisance;\n@@ -2429,14 +2432,14 @@ Warn if any functions that return structures or unions are defined or\n called.  (In languages where you can return an array, this also elicits\n a warning.)\n \n-@item -Wstrict-prototypes (C only)\n+@item -Wstrict-prototypes @r{(C only)}\n @opindex Wstrict-prototypes\n Warn if a function is declared or defined without specifying the\n argument types.  (An old-style function definition is permitted without\n a warning if preceded by a declaration which specifies the argument\n types.)\n \n-@item -Wmissing-prototypes (C only)\n+@item -Wmissing-prototypes @r{(C only)}\n @opindex Wmissing-prototypes\n Warn if a global function is defined without a previous prototype\n declaration.  This warning is issued even if the definition itself\n@@ -2505,7 +2508,7 @@ reduce the padding and so make the structure smaller.\n Warn if anything is declared more than once in the same scope, even in\n cases where multiple declaration is valid and changes nothing.\n \n-@item -Wnested-externs (C only)\n+@item -Wnested-externs @r{(C only)}\n @opindex Wnested-externs\n Warn if an @code{extern} declaration is encountered within a function.\n \n@@ -2992,25 +2995,25 @@ numbers and line number note output.  This makes it more feasible to\n use diff on debugging dumps for compiler invocations with different\n options, in particular with and without @option{-g}.\n \n-@item -fdump-translation-unit (C and C++ only)\n-@item -fdump-translation-unit-@var{number} (C and C++ only)\n+@item -fdump-translation-unit @r{(C and C++ only)}\n+@itemx -fdump-translation-unit-@var{number} @r{(C and C++ only)}\n @opindex fdump-translation-unit\n Dump a representation of the tree structure for the entire translation\n unit to a file.  The file name is made by appending @file{.tu} to the\n source file name.  If the @samp{-@var{number}} form is used, @var{number}\n controls the details of the dump as described for the @option{-fdump-tree} options.\n \n-@item -fdump-class-hierarchy (C++ only)\n-@item -fdump-class-hierarchy-@var{number} (C++ only)\n+@item -fdump-class-hierarchy @r{(C++ only)}\n+@itemx -fdump-class-hierarchy-@var{number} @r{(C++ only)}\n @opindex fdump-class-hierarchy\n Dump a representation of each class's hierarchy and virtual function\n table layout to a file.  The file name is made by appending @file{.class}\n to the source file name.  If the @samp{-@var{number}} form is used, @var{number}\n controls the details of the dump as described for the @option{-fdump-tree}\n options.\n \n-@item -fdump-ast-@var{switch} (C++ only)\n-@item -fdump-ast-@var{switch}-@var{number} (C++ only)\n+@item -fdump-ast-@var{switch} @r{(C++ only)}\n+@itemx -fdump-ast-@var{switch}-@var{number} @r{(C++ only)}\n @opindex fdump-ast\n Control the dumping at various stages of processing the abstract syntax\n tree to a file.  The file name is generated by appending a switch\n@@ -3314,11 +3317,11 @@ allows the control of this limit for functions that are explicitly marked as\n inline (ie marked with the inline keyword or defined within the class\n definition in c++).  @var{n} is the size of functions that can be inlined in\n number of pseudo instructions (not counting parameter handling).  The default\n-value of n is 10000.  Increasing this value can result in more inlined code at\n+value of @var{n} is 10000.  Increasing this value can result in more inlined code at\n the cost of compilation time and memory consumption.  Decreasing usually makes\n the compilation faster and less code will be inlined (which presumably\n means slower programs).  This option is particularly useful for programs that\n-use inlining heavily such as those based on recursive templates with c++.\n+use inlining heavily such as those based on recursive templates with C++.\n \n @emph{Note:} pseudo instruction represents, in this particular context, an\n abstract measurement of function's size.  In no way, it represents a count\n@@ -3482,7 +3485,7 @@ can be changed to a load before the loop and a store after the loop.\n Use global dataflow analysis to identify and eliminate useless null\n pointer checks.  Programs which rely on NULL pointer dereferences @emph{not}\n halting the program may not work properly with this option.  Use\n--fno-delete-null-pointer-checks to disable this optimizing for programs\n+@option{-fno-delete-null-pointer-checks} to disable this optimizing for programs\n which depend on that behavior.\n \n @item -fexpensive-optimizations\n@@ -4093,39 +4096,39 @@ converts them.  See the @option{-std} and @option{-ansi} options.\n The nine trigraph sequences are\n @table @samp\n @item ??(\n--> @samp{[}\n+@expansion{} @samp{[}\n \n @item ??)\n--> @samp{]}\n+@expansion{} @samp{]}\n \n @item ??<\n--> @samp{@{}\n+@expansion{} @samp{@{}\n \n @item ??>\n--> @samp{@}}\n+@expansion{} @samp{@}}\n \n @item ??=\n--> @samp{#}\n+@expansion{} @samp{#}\n \n @item ??/\n--> @samp{\\}\n+@expansion{} @samp{\\}\n \n @item ??'\n--> @samp{^}\n+@expansion{} @samp{^}\n \n @item ??!\n--> @samp{|}\n+@expansion{} @samp{|}\n \n @item ??-\n--> @samp{~}\n+@expansion{} @samp{~}\n \n @end table\n \n Trigraph support is not popular, so many compilers do not implement it\n properly.  Portable code should not rely on trigraphs being either\n converted or ignored.\n \n-@item -Wp\\,@var{option}\n+@item -Wp,@var{option}\n @opindex Wp\n Pass @var{option} as an option to the preprocessor.  If @var{option}\n contains commas, it is split into multiple options at the commas.\n@@ -4138,7 +4141,7 @@ contains commas, it is split into multiple options at the commas.\n You can pass options to the assembler.\n \n @table @gcctabopt\n-@item -Wa\\,@var{option}\n+@item -Wa,@var{option}\n @opindex Wa\n Pass @var{option} as an option to the assembler.  If @var{option}\n contains commas, it is split into multiple options at the commas.\n@@ -4327,7 +4330,7 @@ For example, to pass @option{-assert definitions}, you must write\n @option{-Xlinker \"-assert definitions\"}, because this passes the entire\n string as a single argument, which is not what the linker expects.\n \n-@item -Wl\\,@var{option}\n+@item -Wl,@var{option}\n @opindex Wl\n Pass @var{option} as an option to the linker.  If @var{option} contains\n commas, it is split into multiple options at the commas.\n@@ -4427,8 +4430,8 @@ the environment variable @env{GCC_EXEC_PREFIX}.  @xref{Environment\n Variables}.\n \n As a special kludge, if the path provided by @option{-B} is\n-@samp{[foo/]stage<N>/} then it will be replaced by\n-@samp{[foo/]include}.  This is to help with boot-strapping the compiler.\n+@file{[foo/]stage@var{N}/} then it will be replaced by\n+@file{[foo/]include}.  This is to help with boot-strapping the compiler.\n \n @item -specs=@var{file}\n @opindex specs\n@@ -4638,7 +4641,7 @@ simply substituted with a file name chosen for the previous @samp{%u},\n without regard to any appended suffix.\n \n @item %j@var{SUFFIX}\n-Substitutes the name of the HOST_BIT_BUCKET, if any, and if it is\n+Substitutes the name of the @code{HOST_BIT_BUCKET}, if any, and if it is\n writable, and if save-temps is off; otherwise, substitute the name\n of a temporary file, just like @samp{%u}.  This temporary file is not\n meant for communication between processes, but rather as a junk\n@@ -4683,7 +4686,7 @@ predefined macro, except for macros that start with @samp{__} or with\n C@.\n \n @item %I\n-Substitute a @option{-iprefix} option made from GCC_EXEC_PREFIX@.\n+Substitute a @option{-iprefix} option made from @env{GCC_EXEC_PREFIX}.\n \n @item %s\n Current argument is the name of a library or startup file of some sort.\n@@ -5373,7 +5376,7 @@ With @option{-mflat}, the compiler does not generate save/restore instructions\n and will use a ``flat'' or single register window calling convention.\n This model uses %i7 as the frame pointer and is compatible with the normal\n register window model.  Code from either may be intermixed.\n-The local registers and the input registers (0-5) are still treated as\n+The local registers and the input registers (0--5) are still treated as\n ``call saved'' registers and will be saved on the stack as necessary.\n \n With @option{-mno-flat} (the default), the compiler emits save/restore\n@@ -5936,12 +5939,16 @@ compiler is built for cross-compilation.\n @opindex mcpu\n This specifies the name of the target ARM processor.  GCC uses this name\n to determine what kind of instructions it can emit when generating\n-assembly code.  Permissible names are: arm2, arm250, arm3, arm6, arm60,\n-arm600, arm610, arm620, arm7, arm7m, arm7d, arm7dm, arm7di, arm7dmi,\n-arm70, arm700, arm700i, arm710, arm710c, arm7100, arm7500, arm7500fe,\n-arm7tdmi, arm8, strongarm, strongarm110, strongarm1100, arm8, arm810,\n-arm9, arm9e, arm920, arm920t, arm940t, arm9tdmi, arm10tdmi, arm1020t,\n-xscale.\n+assembly code.  Permissible names are: @samp{arm2}, @samp{arm250},\n+@samp{arm3}, @samp{arm6}, @samp{arm60}, @samp{arm600}, @samp{arm610},\n+@samp{arm620}, @samp{arm7}, @samp{arm7m}, @samp{arm7d}, @samp{arm7dm},\n+@samp{arm7di}, @samp{arm7dmi}, @samp{arm70}, @samp{arm700},\n+@samp{arm700i}, @samp{arm710}, @samp{arm710c}, @samp{arm7100},\n+@samp{arm7500}, @samp{arm7500fe}, @samp{arm7tdmi}, @samp{arm8},\n+@samp{strongarm}, @samp{strongarm110}, @samp{strongarm1100},\n+@samp{arm8}, @samp{arm810}, @samp{arm9}, @samp{arm9e}, @samp{arm920},\n+@samp{arm920t}, @samp{arm940t}, @samp{arm9tdmi}, @samp{arm10tdmi},\n+@samp{arm1020t}, @samp{xscale}.\n \n @itemx -mtune=@var{name}\n @opindex mtune\n@@ -5959,8 +5966,9 @@ this option.\n This specifies the name of the target ARM architecture.  GCC uses this\n name to determine what kind of instructions it can emit when generating\n assembly code.  This option can be used in conjunction with or instead\n-of the @option{-mcpu=} option.  Permissible names are: armv2, armv2a,\n-armv3, armv3m, armv4, armv4t, armv5, armv5t, armv5te.\n+of the @option{-mcpu=} option.  Permissible names are: @samp{armv2},\n+@samp{armv2a}, @samp{armv3}, @samp{armv3m}, @samp{armv4}, @samp{armv4t},\n+@samp{armv5}, @samp{armv5t}, @samp{armv5te}.\n \n @item -mfpe=@var{number}\n @itemx -mfp=@var{number}\n@@ -6018,7 +6026,7 @@ pointers.\n \n @item -mnop-fun-dllimport\n @opindex mnop-fun-dllimport\n-Disable support for the @emph{dllimport} attribute.\n+Disable support for the @code{dllimport} attribute.\n \n @item -msingle-pic-base\n @opindex msingle-pic-base\n@@ -7119,7 +7127,7 @@ the default if the configure option @option{--with-gnu-as} is used.\n @opindex msplit-addresses\n @opindex mno-split-addresses\n Generate code to load the high and low parts of address constants separately.\n-This allows @code{gcc} to optimize away redundant loads of the high order\n+This allows GCC to optimize away redundant loads of the high order\n bits of addresses.  This optimization requires GNU as and GNU ld.\n This optimization is enabled by default for some embedded targets where\n GNU as and GNU ld are standard.\n@@ -8236,12 +8244,12 @@ Identify the versions of each tool used by the compiler, in a\n Refrain from adding @code{.ident} directives to the output file (this is\n the default).\n \n-@item -YP\\,@var{dirs}\n+@item -YP,@var{dirs}\n @opindex YP\n Search the directories @var{dirs}, and no others, for libraries\n specified with @option{-l}.\n \n-@item -Ym\\,@var{dir}\n+@item -Ym,@var{dir}\n @opindex Ym\n Look in the directory @var{dir} to find the M4 preprocessor.\n The assembler uses this option.\n@@ -8294,8 +8302,8 @@ count register BK@.\n Enable (disable) generation of code using decrement and branch,\n DBcond(D), instructions.  This is enabled by default for the C4x.  To be\n on the safe side, this is disabled for the C3x, since the maximum\n-iteration count on the C3x is 2^23 + 1 (but who iterates loops more than\n-2^23 times on the C3x?).  Note that GCC will try to reverse a loop so\n+iteration count on the C3x is @math{2^23 + 1} (but who iterates loops more than\n+@math{2^23} times on the C3x?).  Note that GCC will try to reverse a loop so\n that it can utilise the decrement and branch instruction, but will give\n up if there is more than one memory reference in the loop.  Thus a loop\n where the loop counter is decremented can generate slightly more\n@@ -8363,9 +8371,9 @@ instruction, it is disabled by default.\n @opindex mloop-unsigned\n @opindex mno-loop-unsigned\n The maximum iteration count when using RPTS and RPTB (and DB on the C40)\n-is 2^31 + 1 since these instructions test if the iteration count is\n+is @math{2^31 + 1} since these instructions test if the iteration count is\n negative to terminate the loop.  If the iteration count is unsigned\n-there is a possibility than the 2^31 + 1 maximum iteration count may be\n+there is a possibility than the @math{2^31 + 1} maximum iteration count may be\n exceeded.  This switch allows an unsigned iteration count.\n \n @item -mti\n@@ -8681,7 +8689,7 @@ Output instruction sizes to the asm file.\n @item -minit-stack=@var{N}\n @opindex minit-stack\n Specify the initial stack address, which may be a symbol or numeric value,\n-__stack is the default.\n+@samp{__stack} is the default.\n \n @item -mno-interrupts\n @opindex mno-interrupts"}, {"sha": "06c8e3fd738f91e964c16c40e8144d0201f1e48f", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -79,7 +79,7 @@ If a @code{define_insn} is used, the template given is inserted into the\n insn list.  If a @code{define_expand} is used, one of three things\n happens, based on the condition logic.  The condition logic may manually\n create new insns for the insn list, say via @code{emit_insn()}, and\n-invoke DONE@.  For certain named patterns, it may invoke FAIL to tell the\n+invoke @code{DONE}.  For certain named patterns, it may invoke @code{FAIL} to tell the\n compiler to use an alternate way of performing that task.  If it invokes\n neither @code{DONE} nor @code{FAIL}, the template given in the pattern\n is inserted, as if the @code{define_expand} were a @code{define_insn}.\n@@ -1632,7 +1632,7 @@ Constant in range 0 to 63 (for 64-bit shifts)\n Constant in range 0 to 255 (for @code{out} instruction)\n \n @item Z\n-Constant in range 0 to 0xffffffff or symbolic reference known to fit specified range.\n+Constant in range 0 to @code{0xffffffff} or symbolic reference known to fit specified range.\n (for using immediates in zero extending 32-bit to 64-bit x86-64 instructions)\n \n @item e\n@@ -3827,7 +3827,7 @@ from i386.md:\n @end smallexample\n \n In this case, the actual split condition will be\n-\"TARGET_ZERO_EXTEND_WITH_AND && !optimize_size && reload_completed.\"\n+@samp{TARGET_ZERO_EXTEND_WITH_AND && !optimize_size && reload_completed}.\n \n The @code{define_insn_and_split} construction provides exactly the same\n functionality as two separate @code{define_insn} and @code{define_split}"}, {"sha": "922828f8f784b08afcb5664a577e2e410957c076", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -1793,7 +1793,7 @@ are filled to an entire word with zeros instead of by sign-extension.\n @section Vector Operations\n @cindex vector operations\n \n-All normal rtl expressions can be used with vector modes; they are\n+All normal RTL expressions can be used with vector modes; they are\n interpreted as operating on each part of the vector independently.\n Additionally, there are a few new expressions to describe specific vector\n operations.\n@@ -2360,7 +2360,8 @@ where @var{z} is an index register and @var{i} is a constant.\n Here is an example of its use:\n \n @example\n-(mem:SF (post_modify:SI (reg:SI 42) (plus (reg:SI 42) (reg:SI 48))))\n+(mem:SF (post_modify:SI (reg:SI 42) (plus (reg:SI 42)\n+                                          (reg:SI 48))))\n @end example\n \n This says to modify pseudo register 42 by adding the contents of pseudo"}, {"sha": "7a1d8bce34bbe8417618204b388994dc52a18c93", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 70, "deletions": 69, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee96fe99b16dc13f61ebd1076b80335e8a71f8b/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=aee96fe99b16dc13f61ebd1076b80335e8a71f8b", "patch": "@@ -376,7 +376,7 @@ the effect you need.\n \n @findex LINK_ELIMINATE_DUPLICATE_LDIRECTORIES\n @item LINK_ELIMINATE_DUPLICATE_LDIRECTORIES\n-A nonzero value causes collect2 to remove duplicate -L<directory> search\n+A nonzero value causes collect2 to remove duplicate @option{-L@var{directory}} search\n directories from linking commands.  Do not give it a nonzero value if\n removing duplicate search directories changes the linker's semantics.\n \n@@ -804,7 +804,7 @@ RTX to hold the register containing the function's return address.  This\n RTX can then be used to implement the @code{__builtin_return_address}\n function, for level 0.\n \n-Note - earlier implementations of GCC used a single data area to hold\n+Note---earlier implementations of GCC used a single data area to hold\n all of the per-function information.  Thus when processing of a nested\n function began the old per-function data had to be pushed onto a\n stack, and when the processing was finished, it had to be popped off the\n@@ -886,9 +886,9 @@ macro need not be a constant.\n \n @findex LIBGCC2_WORDS_BIG_ENDIAN\n @item LIBGCC2_WORDS_BIG_ENDIAN\n-Define this macro if WORDS_BIG_ENDIAN is not constant.  This must be a\n-constant value with the same meaning as WORDS_BIG_ENDIAN, which will be\n-used only when compiling libgcc2.c.  Typically the value will be set\n+Define this macro if @code{WORDS_BIG_ENDIAN} is not constant.  This must be a\n+constant value with the same meaning as @code{WORDS_BIG_ENDIAN}, which will be\n+used only when compiling @file{libgcc2.c}.  Typically the value will be set\n based on preprocessor defines.\n \n @findex FLOAT_WORDS_BIG_ENDIAN\n@@ -996,15 +996,15 @@ size of an integer.\n Define this macro if there is a guaranteed alignment for the stack\n pointer on this machine.  The definition is a C expression\n for the desired alignment (measured in bits).  This value is used as a\n-default if PREFERRED_STACK_BOUNDARY is not defined.\n+default if @code{PREFERRED_STACK_BOUNDARY} is not defined.\n \n @findex PREFERRED_STACK_BOUNDARY\n @item PREFERRED_STACK_BOUNDARY\n Define this macro if you wish to preserve a certain alignment for\n the stack pointer.  The definition is a C expression\n-for the desired alignment (measured in bits).  If STACK_BOUNDARY is\n+for the desired alignment (measured in bits).  If @code{STACK_BOUNDARY} is\n also defined, this macro must evaluate to a value equal to or larger\n-than STACK_BOUNDARY@.\n+than @code{STACK_BOUNDARY}.\n \n @cindex @code{PUSH_ROUNDING}, interaction with @code{PREFERRED_STACK_BOUNDARY}\n If @code{PUSH_ROUNDING} is not defined, the stack will always be aligned\n@@ -1925,7 +1925,7 @@ The byte offset.\n @item YMODE\n The mode of a top level SUBREG (or what may become one).\n @end table\n-The default function can be found in rtlanal.c, function\n+The default function can be found in @file{rtlanal.c}, function\n @code{subreg_regno_offset}.  Normally this does not need to be defined.\n @end table\n \n@@ -2628,7 +2628,7 @@ You only need to define this macro if you want to support call frame\n debugging information like that provided by DWARF 2.\n \n If this RTL is a @code{REG}, you should also define\n-DWARF_FRAME_RETURN_COLUMN to @code{DWARF_FRAME_REGNUM (REGNO)}.\n+@code{DWARF_FRAME_RETURN_COLUMN} to @code{DWARF_FRAME_REGNUM (REGNO)}.\n \n @findex INCOMING_FRAME_SP_OFFSET\n @item INCOMING_FRAME_SP_OFFSET\n@@ -2708,30 +2708,30 @@ If you want to support call frame exception handling, you must\n define either this macro or the @code{eh_return} instruction pattern.\n \n @findex ASM_PREFERRED_EH_DATA_FORMAT\n-@item ASM_PREFERRED_EH_DATA_FORMAT(@var{CODE}, @var{GLOBAL})\n+@item ASM_PREFERRED_EH_DATA_FORMAT(@var{code}, @var{global})\n This macro chooses the encoding of pointers embedded in the exception\n handling sections.  If at all possible, this should be defined such\n that the exception handling section will not require dynamic relocations,\n and so may be read-only.\n \n-@var{CODE} is 0 for data, 1 for code labels, 2 for function pointers.\n-@var{GLOBAL} is true if the symbol may be affected by dynamic relocations.\n+@var{code} is 0 for data, 1 for code labels, 2 for function pointers.\n+@var{global} is true if the symbol may be affected by dynamic relocations.\n The macro should return a combination of the @code{DW_EH_PE_*} defines\n as found in @file{dwarf2.h}.\n \n If this macro is not defined, pointers will not be encoded but\n represented directly.\n \n @findex ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX\n-@item ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX(@var{FILE}, @var{ENCODING}, @var{SIZE}, @var{ADDR}, @var{DONE})\n+@item ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX(@var{file}, @var{encoding}, @var{size}, @var{addr}, @var{done})\n This macro allows the target to emit whatever special magic is required\n to represent the encoding chosen by @code{ASM_PREFERRED_EH_DATA_FORMAT}.\n Generic code takes care of pc-relative and indirect encodings; this must\n be defined if the target uses text-relative or data-relative encodings.\n \n-This is a C statement that branches to @var{DONE} if the format was\n-handled.  @var{ENCODING} is the format chosen, @var{SIZE} is the number\n-of bytes that the format occupies, @var{ADDR} is the @code{SYMBOL_REF}\n+This is a C statement that branches to @var{done} if the format was\n+handled.  @var{encoding} is the format chosen, @var{size} is the number\n+of bytes that the format occupies, @var{addr} is the @code{SYMBOL_REF}\n to be emitted.\n \n @findex SMALL_STACK\n@@ -3047,7 +3047,7 @@ outgoing arguments.\n If the target machine does not have a push instruction, set it to zero.\n That directs GCC to use an alternate strategy: to\n allocate the entire argument block and then store the arguments into\n-it.  When PUSH_ARGS is nonzero, PUSH_ROUNDING must be defined too.\n+it.  When @code{PUSH_ARGS} is nonzero, @code{PUSH_ROUNDING} must be defined too.\n On some machines, the definition\n \n @findex PUSH_ROUNDING\n@@ -3157,7 +3157,7 @@ after the function returns.\n @var{fundecl} is a C variable whose value is a tree node that describes\n the function in question.  Normally it is a node of type\n @code{FUNCTION_DECL} that describes the declaration of the function.\n-From this you can obtain the DECL_MACHINE_ATTRIBUTES of the function.\n+From this you can obtain the @code{DECL_MACHINE_ATTRIBUTES} of the function.\n \n @var{funtype} is a C variable whose value is a tree node that\n describes the function in question.  Normally it is a node of type\n@@ -3316,7 +3316,7 @@ definition of this macro might be\n If defined, a C expression that indicates when it is the called function's\n responsibility to make a copy of arguments passed by invisible reference.\n Normally, the caller makes a copy and passes the address of the copy to the\n-routine being called.  When FUNCTION_ARG_CALLEE_COPIES is defined and is\n+routine being called.  When @code{FUNCTION_ARG_CALLEE_COPIES} is defined and is\n nonzero, the caller does not make a copy.  Instead, it passes a pointer to the\n ``live'' value.  The called function must not modify this value.  If it can be\n determined that the value won't be modified, it need not make a copy;\n@@ -3733,7 +3733,7 @@ arguments.  But usually, on such machines, nothing else has been pushed\n yet, because the function prologue itself does all the pushing.)  This\n region is used on machines where an argument may be passed partly in\n registers and partly in memory, and, in some cases to support the\n-features in @file{varargs.h} and @file{stdarg.h}.\n+features in @code{<varargs.h>} and @code{<stdarg.h>}.\n \n @item\n An area of memory used to save certain registers used by the function.\n@@ -3963,7 +3963,7 @@ that you know will result.\n The first word of this block is a flag which will be nonzero if the\n object module has already been initialized.  So test this word first,\n and do not call @code{__bb_init_func} if the flag is\n-nonzero.  BLOCK_OR_LABEL contains a unique number which may be used to\n+nonzero.  @var{labelno} contains a unique number which may be used to\n generate a label as a branch destination when @code{__bb_init_func}\n will not be called.\n \n@@ -3982,14 +3982,14 @@ local_label:\n Output code to call the subroutine @code{__bb_init_trace_func}\n and pass two parameters to it.  The first parameter is the same as\n for @code{__bb_init_func}.  The second parameter is the number of the\n-first basic block of the function as given by BLOCK_OR_LABEL@.  Note\n+first basic block of the function as given by @var{labelno}.  Note\n that @code{__bb_init_trace_func} has to be called, even if the object\n module has been initialized already.\n \n Described in assembler language, the code to be output looks like:\n @example\n parameter1 <- LPBX0\n-parameter2 <- BLOCK_OR_LABEL\n+parameter2 <- @var{labelno}\n call __bb_init_trace_func\n @end example\n @end table\n@@ -4024,7 +4024,7 @@ that you know will result.\n Described in assembler language, the code to be output looks like:\n \n @smallexample\n-inc (LPBX2+4*BLOCKNO)\n+inc (LPBX2+4*@var{blockno})\n @end smallexample\n \n @vindex __bb\n@@ -4035,7 +4035,7 @@ call the function @code{__bb_trace_func}, which will increment the\n counter.\n \n @code{__bb} consists of two words.  In the first word, the current\n-basic block number, as given by BLOCKNO, has to be stored.  In\n+basic block number, as given by @var{blockno}, has to be stored.  In\n the second word, the address of a block allocated in the object\n module has to be stored.  The address is given by the label created\n with this statement:\n@@ -4046,7 +4046,7 @@ ASM_GENERATE_INTERNAL_LABEL (@var{buffer}, \"LPBX\", 0);\n \n Described in assembler language, the code to be output looks like:\n @example\n-move BLOCKNO -> (__bb)\n+move @var{blockno} -> (__bb)\n move LPBX0 -> (__bb+4)\n call __bb_trace_func\n @end example\n@@ -4151,13 +4151,13 @@ as the @code{sibcall} md pattern can not fail, or fall over to a\n @section Implementing the Varargs Macros\n @cindex varargs implementation\n \n-GCC comes with an implementation of @file{varargs.h} and\n-@file{stdarg.h} that work without change on machines that pass arguments\n+GCC comes with an implementation of @code{<varargs.h>} and\n+@code{<stdarg.h>} that work without change on machines that pass arguments\n on the stack.  Other machines require their own implementations of\n varargs, and the two machine independent header files must have\n conditionals to include it.\n \n-ISO @file{stdarg.h} differs from traditional @file{varargs.h} mainly in\n+ISO @code{<stdarg.h>} differs from traditional @code{<varargs.h>} mainly in\n the calling convention for @code{va_start}.  The traditional\n implementation takes just one argument, which is the variable in which\n to store the argument pointer.  The ISO implementation of\n@@ -4448,12 +4448,12 @@ the instruction cache directly, you can define the following macro.\n \n @table @code\n @findex CLEAR_INSN_CACHE\n-@item CLEAR_INSN_CACHE (@var{BEG}, @var{END})\n+@item CLEAR_INSN_CACHE (@var{beg}, @var{end})\n If defined, expands to a C expression clearing the @emph{instruction\n cache} in the specified interval.  If it is not defined, and the macro\n-INSN_CACHE_SIZE is defined, some generic code is generated to clear the\n+@code{INSN_CACHE_SIZE} is defined, some generic code is generated to clear the\n cache.  The definition of this macro would typically be a series of\n-@code{asm} statements.  Both @var{BEG} and @var{END} are both pointer\n+@code{asm} statements.  Both @var{beg} and @var{end} are both pointer\n expressions.\n @end table\n \n@@ -4831,7 +4831,7 @@ reload register instead of two by reloading a sum of two pseudo\n registers into a register.  On the other hand, for number of RISC\n processors offsets are limited so that often an intermediate address\n needs to be generated in order to address a stack slot.  By defining\n-LEGITIMIZE_RELOAD_ADDRESS appropriately, the intermediate addresses\n+@code{LEGITIMIZE_RELOAD_ADDRESS} appropriately, the intermediate addresses\n generated for adjacent some stack slots can be made identical, and thus\n be shared.\n \n@@ -5062,7 +5062,8 @@ reversed safely.  If no expansion is specified, this macro is defined as\n follows:\n \n @smallexample\n-#define REVERSE_CONDEXEC_PREDICATES_P (x, y) ((x) == reverse_condition (y))\n+#define REVERSE_CONDEXEC_PREDICATES_P (x, y) \\\n+   ((x) == reverse_condition (y))\n @end smallexample\n \n @end table\n@@ -5544,7 +5545,7 @@ unique sections.\n @findex UNIQUE_SECTION\n @item UNIQUE_SECTION (@var{decl}, @var{reloc})\n A C statement to build up a unique section name, expressed as a\n-STRING_CST node, and assign it to @samp{DECL_SECTION_NAME (@var{decl})}.\n+@code{STRING_CST} node, and assign it to @samp{DECL_SECTION_NAME (@var{decl})}.\n @var{reloc} indicates whether the initial value of @var{exp} requires\n link-time relocations.  If you do not define this macro, GCC will use\n the symbol name prefixed by @samp{.} as the section name.  Note - this\n@@ -6020,7 +6021,7 @@ the name, and a newline.\n \n This macro controls how the assembler definitions of uninitialized global\n variables are output.  This macro exists to properly support languages like\n-@code{c++} which do not have @code{common} data.  However, this macro currently\n+C++ which do not have @code{common} data.  However, this macro currently\n is not defined for all targets.  If this macro and\n @code{ASM_OUTPUT_ALIGNED_BSS} are not defined then @code{ASM_OUTPUT_COMMON}\n or @code{ASM_OUTPUT_ALIGNED_COMMON} or\n@@ -6335,7 +6336,7 @@ A C statement to output to the stdio stream @var{stream} assembler code\n which defines (equates) the symbol @var{name} to have the value @var{value}.\n \n @findex SET_ASM_OP\n-If SET_ASM_OP is defined, a default definition is provided which is\n+If @code{SET_ASM_OP} is defined, a default definition is provided which is\n correct for most systems.\n \n @findex ASM_OUTPUT_DEF_FROM_DECLS\n@@ -6356,7 +6357,7 @@ and @var{low} are already known by the assembler so that the difference\n resolves into a constant.\n \n @findex SET_ASM_OP\n-If SET_ASM_OP is defined, a default definition is provided which is\n+If @code{SET_ASM_OP} is defined, a default definition is provided which is\n correct for most systems.\n \n @findex ASM_OUTPUT_WEAK_ALIAS\n@@ -6366,7 +6367,7 @@ which defines (equates) the weak symbol @var{name} to have the value\n @var{value}.\n \n Define this macro if the target only supports weak aliases; define\n-ASM_OUTPUT_DEF instead if possible.\n+@code{ASM_OUTPUT_DEF} instead if possible.\n \n @findex OBJC_GEN_METHOD_LABEL\n @item OBJC_GEN_METHOD_LABEL (@var{buf}, @var{is_inst}, @var{class_name}, @var{cat_name}, @var{sel_name})\n@@ -6667,13 +6668,13 @@ Define this macro to a C string constant containing the name of the\n program which lists dynamic dependencies, like @code{\"ldd\"} under SunOS 4.\n \n @findex PARSE_LDD_OUTPUT\n-@item PARSE_LDD_OUTPUT (@var{PTR})\n+@item PARSE_LDD_OUTPUT (@var{ptr})\n Define this macro to be C code that extracts filenames from the output\n-of the program denoted by @code{LDD_SUFFIX}.  @var{PTR} is a variable\n+of the program denoted by @code{LDD_SUFFIX}.  @var{ptr} is a variable\n of type @code{char *} that points to the beginning of a line of output\n from @code{LDD_SUFFIX}.  If the line lists a dynamic dependency, the\n-code must advance @var{PTR} to the beginning of the filename on that\n-line.  Otherwise, it must set @var{PTR} to @code{NULL}.\n+code must advance @var{ptr} to the beginning of the filename on that\n+line.  Otherwise, it must set @var{ptr} to @code{NULL}.\n \n @end table\n \n@@ -6912,7 +6913,7 @@ fprintf (@var{stream}, \"\\t.word L%d-L%d\\n\",\n You must provide this macro on machines where the addresses in a\n dispatch table are relative to the table's own address.  If defined, GCC\n will also use this macro on all machines when producing PIC@.\n-@var{body} is the body of the ADDR_DIFF_VEC; it is provided so that the\n+@var{body} is the body of the @code{ADDR_DIFF_VEC}; it is provided so that the\n mode and flags can be read.\n \n @findex ASM_OUTPUT_ADDR_VEC_ELT\n@@ -7015,12 +7016,12 @@ This macro need not be defined on most platforms.\n @findex DOESNT_NEED_UNWINDER\n @item DOESNT_NEED_UNWINDER\n A C expression that decides whether or not the current function needs to\n-have a function unwinder generated for it.  See the file @code{except.c}\n+have a function unwinder generated for it.  See the file @file{except.c}\n for details on when to define this, and how.\n \n @findex MASK_RETURN_ADDR\n @item MASK_RETURN_ADDR\n-An rtx used to mask the return address found via RETURN_ADDR_RTX, so\n+An rtx used to mask the return address found via @code{RETURN_ADDR_RTX}, so\n that it does not contain any extraneous set bits in it.\n \n @findex DWARF2_UNWIND_INFO\n@@ -7033,11 +7034,11 @@ or @samp{OBJECT_FORMAT_ELF}), GCC will provide a default definition of\n 1.\n \n If this macro is defined to 1, the DWARF 2 unwinder will be the default\n-exception handling mechanism; otherwise, setjmp/longjmp will be used by\n+exception handling mechanism; otherwise, @code{setjmp}/@code{longjmp} will be used by\n default.\n \n If this macro is defined to anything, the DWARF 2 unwinder will be used\n-instead of inline unwinders and __unwind_function in the non-setjmp case.\n+instead of inline unwinders and @code{__unwind_function} in the non-@code{setjmp} case.\n \n @findex DWARF_CIE_DATA_ALIGNMENT\n @item DWARF_CIE_DATA_ALIGNMENT\n@@ -7060,7 +7061,7 @@ This describes commands for alignment.\n @findex LABEL_ALIGN_AFTER_BARRIER\n @item LABEL_ALIGN_AFTER_BARRIER (@var{label})\n The alignment (log base 2) to put in front of @var{label}, which follows\n-a BARRIER@.\n+a @code{BARRIER}.\n \n This macro need not be defined if you don't want any special alignment\n to be done at such a time.  Most machine descriptions do not currently\n@@ -7081,16 +7082,16 @@ The maximum number of bytes to skip when applying\n @findex LOOP_ALIGN\n @item LOOP_ALIGN (@var{label})\n The alignment (log base 2) to put in front of @var{label}, which follows\n-a NOTE_INSN_LOOP_BEG note.\n+a @code{NOTE_INSN_LOOP_BEG} note.\n \n This macro need not be defined if you don't want any special alignment\n to be done at such a time.  Most machine descriptions do not currently\n define the macro.\n \n Unless it's necessary to inspect the @var{label} parameter, it is better\n-to set the variable @var{align_loops} in the target's\n+to set the variable @code{align_loops} in the target's\n @code{OVERRIDE_OPTIONS}.  Otherwise, you should try to honour the user's\n-selection in @var{align_loops} in a @code{LOOP_ALIGN} implementation.\n+selection in @code{align_loops} in a @code{LOOP_ALIGN} implementation.\n \n @findex LOOP_ALIGN_MAX_SKIP\n @item LOOP_ALIGN_MAX_SKIP\n@@ -7100,13 +7101,13 @@ This works only if @code{ASM_OUTPUT_MAX_SKIP_ALIGN} is defined.\n @findex LABEL_ALIGN\n @item LABEL_ALIGN (@var{label})\n The alignment (log base 2) to put in front of @var{label}.\n-If LABEL_ALIGN_AFTER_BARRIER / LOOP_ALIGN specify a different alignment,\n+If @code{LABEL_ALIGN_AFTER_BARRIER} / @code{LOOP_ALIGN} specify a different alignment,\n the maximum of the specified values is used.\n \n Unless it's necessary to inspect the @var{label} parameter, it is better\n-to set the variable @var{align_labels} in the target's\n+to set the variable @code{align_labels} in the target's\n @code{OVERRIDE_OPTIONS}.  Otherwise, you should try to honour the user's\n-selection in @var{align_labels} in a @code{LABEL_ALIGN} implementation.\n+selection in @code{align_labels} in a @code{LABEL_ALIGN} implementation.\n \n @findex LABEL_ALIGN_MAX_SKIP\n @item LABEL_ALIGN_MAX_SKIP\n@@ -7800,7 +7801,7 @@ the FPSCR PR bit has to be cleared, while for a double precision\n operation, this bit has to be set.  Changing the PR bit requires a general\n purpose register as a scratch register, hence these FPSCR sets have to\n be inserted before reload, i.e.@: you can't put this into instruction emitting\n-or MACHINE_DEPENDENT_REORG@.\n+or @code{MACHINE_DEPENDENT_REORG}.\n \n You can have multiple entities that are mode-switched, and select at run time\n which entities actually need it.  @code{OPTIMIZE_MODE_SWITCHING} should\n@@ -7828,8 +7829,8 @@ switch is needed / supplied.\n @var{entity} is an integer specifying a mode-switched entity.  If\n @code{OPTIMIZE_MODE_SWITCHING} is defined, you must define this macro to\n return an integer value not larger than the corresponding element in\n-NUM_MODES_FOR_MODE_SWITCHING, to denote the mode that @var{entity} must\n-be switched into prior to the execution of INSN@.\n+@code{NUM_MODES_FOR_MODE_SWITCHING}, to denote the mode that @var{entity} must\n+be switched into prior to the execution of @var{insn}.\n \n @findex NORMAL_MODE\n @item NORMAL_MODE (@var{entity})\n@@ -7839,12 +7840,12 @@ mode switching.  It should evaluate to an integer, which is a mode that\n \n @findex MODE_PRIORITY_TO_MODE\n @item MODE_PRIORITY_TO_MODE (@var{entity}, @var{n})\n-This macro specifies the order in which modes for ENTITY are processed.\n-0 is the highest priority, NUM_MODES_FOR_MODE_SWITCHING[ENTITY] - 1 the\n+This macro specifies the order in which modes for @var{entity} are processed.\n+0 is the highest priority, @code{NUM_MODES_FOR_MODE_SWITCHING[@var{entity}] - 1} the\n lowest.  The value of the macro should be an integer designating a mode\n-for ENTITY@.  For any fixed @var{entity}, @code{mode_priority_to_mode}\n+for @var{entity}.  For any fixed @var{entity}, @code{mode_priority_to_mode}\n (@var{entity}, @var{n}) shall be a bijection in 0 @dots{}\n-@code{num_modes_for_mode_switching}[@var{entity}] @minus{} 1 .\n+@code{num_modes_for_mode_switching[@var{entity}] - 1}.\n \n @findex EMIT_MODE_SET\n @item EMIT_MODE_SET (@var{entity}, @var{mode}, @var{hard_regs_live})\n@@ -7885,7 +7886,7 @@ thus speeding up the compiler.  The most important predicates to include\n in the list specified by this macro are those used in the most insn\n patterns.\n \n-For each predicate function named in @var{PREDICATE_CODES}, a\n+For each predicate function named in @code{PREDICATE_CODES}, a\n declaration will be generated in @file{insn-codes.h}.\n \n @item SPECIAL_MODE_PREDICATES\n@@ -8260,7 +8261,7 @@ other language compilers for that matter.  Thus if @code{c_lex} is going\n to be called from target-specific code, it must only be done so when\n building the C and C++ compilers.  This can be done by defining the\n variables @code{c_target_objs} and @code{cxx_target_objs} in the\n-target entry in the @code{config.gcc} file.  These variables should name\n+target entry in the @file{config.gcc} file.  These variables should name\n the target-specific, language-specific object file which contains the\n code that uses @code{c_lex}.  Note it will also be necessary to add a\n rule to the makefile fragment pointed to by @code{tmake_file} that shows\n@@ -8298,8 +8299,8 @@ of specifically named weak labels, optionally with a value.\n @findex pragma\n @item HANDLE_PRAGMA_PACK_PUSH_POP\n Define this macro (to a value of 1) if you want to support the Win32\n-style pragmas @samp{#pragma pack(push,<n>)} and @samp{#pragma\n-pack(pop)}.  The pack(push,<n>) pragma specifies the maximum alignment\n+style pragmas @samp{#pragma pack(push,@var{n})} and @samp{#pragma\n+pack(pop)}.  The @samp{pack(push,@var{n})} pragma specifies the maximum alignment\n (in bytes) of fields within a structure, in much the same way as the\n @samp{__aligned__} and @samp{__packed__} @code{__attribute__}s do.  A\n pack value of zero resets the behaviour to the default.  Successive\n@@ -8473,8 +8474,8 @@ without user intervention.  For instance, under Microsoft Windows\n symbols must be explicitly imported from shared libraries (DLLs).\n \n @findex MD_ASM_CLOBBERS\n-@item MD_ASM_CLOBBERS\n-A C statement that adds to @var{CLOBBERS} @code{STRING_CST} trees for\n+@item MD_ASM_CLOBBERS (@var{clobbers})\n+A C statement that adds to @var{clobbers} @code{STRING_CST} trees for\n any hard regs the port wishes to automatically clobber for all asms.\n \n @findex ISSUE_RATE"}]}