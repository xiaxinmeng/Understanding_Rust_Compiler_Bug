{"sha": "9d30e86f965cf7a7ca2405e9e35683b6dc3595e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQzMGU4NmY5NjVjZjdhN2NhMjQwNWU5ZTM1NjgzYjZkYzM1OTVlMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2016-06-21T14:24:31Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-06-21T14:24:31Z"}, "message": "Convert V1TImode register to TImode in debug insn\n\nTImode register referenced in debug insn can be converted to V1TImode\nby scalar to vector optimization.  After converting a TImode register\nto V1TImode, we need to check all debug insns on its use chain to\nconvert the V1TImode register to SUBREG TImode.\n\ngcc/\n\n2016-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n\t    Ilya Enkovich  <ilya.enkovich@intel.com>\n\n\tPR target/71549\n\t* config/i386/i386.c (timode_scalar_chain::fix_debug_reg_uses):\n\tNew member function to convert V1TImode register to SUBREG\n\tTImode in debug insn.\n\t(timode_scalar_chain::convert_insn): Call fix_debug_reg_uses\n\tafter changing register mode to V1TImode.\n\ngcc/testsuite/\n\n2016-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/71549\n\t* gcc.target/i386/pr71549.c: New test.\n\nCo-Authored-By: Ilya Enkovich <ilya.enkovich@intel.com>\n\nFrom-SVN: r237647", "tree": {"sha": "cfaf0d6bd76d1a13e442069ddf9d5a8c1cb13590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfaf0d6bd76d1a13e442069ddf9d5a8c1cb13590"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "448a7c69f27745f83a4adcbb341b9d6ebc1094fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/448a7c69f27745f83a4adcbb341b9d6ebc1094fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/448a7c69f27745f83a4adcbb341b9d6ebc1094fd"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "26e8057db25bdd8a7159405ad0e7d59abf0715e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d30e86f965cf7a7ca2405e9e35683b6dc3595e3", "patch": "@@ -1,3 +1,13 @@\n+2016-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR target/71549\n+\t* config/i386/i386.c (timode_scalar_chain::fix_debug_reg_uses):\n+\tNew member function to convert V1TImode register to SUBREG\n+\tTImode in debug insn.\n+\t(timode_scalar_chain::convert_insn): Call fix_debug_reg_uses\n+\tafter changing register mode to V1TImode.\n+\n 2016-06-21  Virendra Pathak  <virendra.pathak@broadcom.com>\n \n \t* config/aarch64/aarch64-cores.def (vulcan): New core."}, {"sha": "17664ff9f17af9f439001fa6155cb1b5148d08e4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9d30e86f965cf7a7ca2405e9e35683b6dc3595e3", "patch": "@@ -3139,6 +3139,7 @@ class timode_scalar_chain : public scalar_chain\n \n  private:\n   void mark_dual_mode_def (df_ref def);\n+  void fix_debug_reg_uses (rtx reg);\n   void convert_insn (rtx_insn *insn);\n   /* We don't convert registers to difference size.  */\n   void convert_registers () {}\n@@ -3790,6 +3791,39 @@ dimode_scalar_chain::convert_insn (rtx_insn *insn)\n   df_insn_rescan (insn);\n }\n \n+/* Fix uses of converted REG in debug insns.  */\n+\n+void\n+timode_scalar_chain::fix_debug_reg_uses (rtx reg)\n+{\n+  if (!flag_var_tracking)\n+    return;\n+\n+  df_ref ref;\n+  for (ref = DF_REG_USE_CHAIN (REGNO (reg));\n+       ref;\n+       ref = DF_REF_NEXT_REG (ref))\n+    {\n+      rtx_insn *insn = DF_REF_INSN (ref);\n+      if (DEBUG_INSN_P (insn))\n+\t{\n+\t  /* It may be a debug insn with a TImode variable in\n+\t     register.  */\n+\t  rtx val = PATTERN (insn);\n+\t  if (GET_MODE (val) != TImode)\n+\t    continue;\n+\t  gcc_assert (GET_CODE (val) == VAR_LOCATION);\n+\t  rtx loc = PAT_VAR_LOCATION_LOC (val);\n+\t  gcc_assert (REG_P (loc)\n+\t\t      && GET_MODE (loc) == V1TImode);\n+\t  /* Convert V1TImode register, which has been updated by a SET\n+\t     insn before, to SUBREG TImode.  */\n+\t  PAT_VAR_LOCATION_LOC (val) = gen_rtx_SUBREG (TImode, loc, 0);\n+\t  df_insn_rescan (insn);\n+\t}\n+    }\n+}\n+\n /* Convert INSN from TImode to V1T1mode.  */\n \n void\n@@ -3806,8 +3840,10 @@ timode_scalar_chain::convert_insn (rtx_insn *insn)\n \trtx tmp = find_reg_equal_equiv_note (insn);\n \tif (tmp)\n \t  PUT_MODE (XEXP (tmp, 0), V1TImode);\n+\tPUT_MODE (dst, V1TImode);\n+\tfix_debug_reg_uses (dst);\n       }\n-      /* FALLTHRU */\n+      break;\n     case MEM:\n       PUT_MODE (dst, V1TImode);\n       break;"}, {"sha": "cfee40b7572cf5f567944e34bfa8eed649aa7602", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d30e86f965cf7a7ca2405e9e35683b6dc3595e3", "patch": "@@ -1,3 +1,8 @@\n+2016-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/71549\n+\t* gcc.target/i386/pr71549.c: New test.\n+\n 2016-06-21  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \t* gcc.target/powerpc/vadsdu-0.c: Replace"}, {"sha": "8aac891b232df385c23759cb7d83f60feeeebff4", "filename": "gcc/testsuite/gcc.target/i386/pr71549.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71549.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d30e86f965cf7a7ca2405e9e35683b6dc3595e3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71549.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71549.c?ref=9d30e86f965cf7a7ca2405e9e35683b6dc3595e3", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+\n+struct S1\n+{\n+  int f0;\n+  int f1;\n+  int f2;\n+  int:4;\n+} a, b;\n+\n+void\n+fn1 (struct S1 p1)\n+{\n+  a = p1;\n+  int c = p1.f0;\n+}\n+\n+int\n+main ()\n+{\n+  fn1 (b);\n+  return 0;\n+}"}]}