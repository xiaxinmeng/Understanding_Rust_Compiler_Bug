{"sha": "1ab144aec03080a93a59a180f5daae50143b006b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFiMTQ0YWVjMDMwODBhOTNhNTlhMTgwZjVkYWFlNTAxNDNiMDA2Yg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-12-03T15:46:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-03T15:46:23Z"}, "message": "[Ada] Missing check on if-expression\n\nThis patch fixes a constraint check on a dependent expression of an\nif-expression, when the context if given by a slice or the 'Range of\nan array. The constraint check is applied if the context is constrained,\nbut the corresponding flag was not set for the index subtype generated\nfor a slice (explicit or implicit).\n\nExecuting:\n   gprbuild -P test -q main\n   ./main\n\nMust yield:\n   raised CONSTRAINT_ERROR : foo.ads:13 range check failed\n\n----\nwith Types;\ngeneric\n   Buffer : in out Types.Buffer;\npackage Foo\nis\n   function Get (Pos : Natural) return Integer;\n\nprivate\n   function Get (Pos : Natural) return Integer\n   is (Buffer ((if Pos in Buffer'Range then Pos else Buffer'First)));\nend Foo;\n----\nwith Foo;\nwith Types;\nwith Usefoo;\n\nprocedure Main is\n   Z : Types.Buffer := (Natural'Last .. Natural'Last - 1 => 0);\n   R : Integer;\nbegin\n   Usefoo.Do_Something (Z, R);\nend Main;\n----\npragma SPARK_Mode (On);\npragma Profile (Ravenscar);\npragma Partition_Elaboration_Policy (Sequential);\n----\nproject Test is\n  package Compiler is\n    for Default_Switches (\"Ada\") use (\"-gnatws\");\n    for Local_Configuration_Pragmas use \"test.adc\";\n  end Compiler;\nend Test;\n----\npackage Types\nis\n   subtype Natural_Without_Last is Natural range 1 .. Natural'Last - 1;\n   type Buffer is array (Natural_Without_Last range <>) of Integer;\n\nend Types;\n----\nwith Foo;\n\npackage body Usefoo\nis\n\n   procedure Do_Something (B : in out Types.Buffer;\n                           R : out Integer)\n   is\n      package F is new Foo (B (B'First .. B'First + B'Length / 2 - 1));\n   begin\n      R := F.Get (B'First + B'Length / 2 - 1);\n   end Do_Something;\n\nend Usefoo;\n----\nwith Types;\n\npackage Usefoo\nis\n\n   procedure Do_Something (B : in out Types.Buffer;\n                           R : out Integer)\n                           with Pre => B'First > 0;\n\nend Usefoo;\n\n2018-12-03  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Set_Slice_Subtype): The index type of a slice is\n\tconstrained.\n\nFrom-SVN: r266746", "tree": {"sha": "d0bca3f0b2de69f0a3973f4d92c6c09ea61fdeb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0bca3f0b2de69f0a3973f4d92c6c09ea61fdeb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ab144aec03080a93a59a180f5daae50143b006b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab144aec03080a93a59a180f5daae50143b006b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ab144aec03080a93a59a180f5daae50143b006b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab144aec03080a93a59a180f5daae50143b006b/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed760c79399c2d0a3406f28c6fd85f95bf6097c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ed760c79399c2d0a3406f28c6fd85f95bf6097c"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "9bb341366b9dd633e5164972af864e952333d403", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab144aec03080a93a59a180f5daae50143b006b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab144aec03080a93a59a180f5daae50143b006b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1ab144aec03080a93a59a180f5daae50143b006b", "patch": "@@ -1,3 +1,8 @@\n+2018-12-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Set_Slice_Subtype): The index type of a slice is\n+\tconstrained.\n+\n 2018-11-26  Matthias Klose <doko@ubuntu.com>\n \n \tPR ada/88191"}, {"sha": "b15be8e847b1eecf620d34602f453776313902b0", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab144aec03080a93a59a180f5daae50143b006b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab144aec03080a93a59a180f5daae50143b006b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=1ab144aec03080a93a59a180f5daae50143b006b", "patch": "@@ -11855,11 +11855,12 @@ package body Sem_Res is\n          --  for the subtype, but not in the context of a loop iteration\n          --  scheme).\n \n-         Set_Scalar_Range (Index_Subtype, New_Copy_Tree (Drange));\n-         Set_Parent       (Scalar_Range (Index_Subtype), Index_Subtype);\n-         Set_Etype        (Index_Subtype, Index_Type);\n-         Set_Size_Info    (Index_Subtype, Index_Type);\n-         Set_RM_Size      (Index_Subtype, RM_Size (Index_Type));\n+         Set_Scalar_Range   (Index_Subtype, New_Copy_Tree (Drange));\n+         Set_Parent         (Scalar_Range (Index_Subtype), Index_Subtype);\n+         Set_Etype          (Index_Subtype, Index_Type);\n+         Set_Size_Info      (Index_Subtype, Index_Type);\n+         Set_RM_Size        (Index_Subtype, RM_Size (Index_Type));\n+         Set_Is_Constrained (Index_Subtype);\n       end if;\n \n       Slice_Subtype := Create_Itype (E_Array_Subtype, N);"}]}