{"sha": "bb1b857adc8b49eae4e5a7f5f46984450555dc33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIxYjg1N2FkYzhiNDllYWU0ZTVhN2Y1ZjQ2OTg0NDUwNTU1ZGMzMw==", "commit": {"author": {"name": "Gavin Koch", "email": "gavin@cygnus.com", "date": "1997-12-18T15:00:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-18T15:00:06Z"}, "message": "* calls.c (expand_call): Implement LOAD_ARGS_REVERSED.\n\nFrom-SVN: r17133", "tree": {"sha": "d0896477bc96fab6e0e5807ed06a77634e8d9ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0896477bc96fab6e0e5807ed06a77634e8d9ca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb1b857adc8b49eae4e5a7f5f46984450555dc33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1b857adc8b49eae4e5a7f5f46984450555dc33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb1b857adc8b49eae4e5a7f5f46984450555dc33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1b857adc8b49eae4e5a7f5f46984450555dc33/comments", "author": null, "committer": null, "parents": [{"sha": "0253134551ad49baaba9fb7ab4b6cfe3374316ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0253134551ad49baaba9fb7ab4b6cfe3374316ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0253134551ad49baaba9fb7ab4b6cfe3374316ba"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "473fb5c1e4813ab0c5b855b075d0bd4729857d02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1b857adc8b49eae4e5a7f5f46984450555dc33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1b857adc8b49eae4e5a7f5f46984450555dc33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb1b857adc8b49eae4e5a7f5f46984450555dc33", "patch": "@@ -4,6 +4,8 @@ Thu Dec 18 14:51:12 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n Thu Dec 18 14:57:29 1997  Gavin Koch  <gavin@cygnus.com>\n \n+\t* calls.c (expand_call): Implement LOAD_ARGS_REVERSED.\n+\n \t* dwarf2out.c (dwarf2out_frame_debug): Handle adjustments of the\n \tframe pointer in the prologue.\n "}, {"sha": "15a3662a95891d1c5c9a7edafea0052bf6db2a1f", "filename": "gcc/calls.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1b857adc8b49eae4e5a7f5f46984450555dc33/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1b857adc8b49eae4e5a7f5f46984450555dc33/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=bb1b857adc8b49eae4e5a7f5f46984450555dc33", "patch": "@@ -1884,7 +1884,11 @@ expand_call (exp, target, ignore)\n      Mark all register-parms as living through the call, putting these USE\n      insns in the CALL_INSN_FUNCTION_USAGE field.  */\n \n+#ifdef LOAD_ARGS_REVERSED\n+  for (i = num_actuals - 1; i >= 0; i--)\n+#else\n   for (i = 0; i < num_actuals; i++)\n+#endif\n     {\n       rtx reg = args[i].reg;\n       int partial = args[i].partial;"}, {"sha": "027a8919b7b76c87102f09e065a112d74ca3d60c", "filename": "gcc/tm.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1b857adc8b49eae4e5a7f5f46984450555dc33/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1b857adc8b49eae4e5a7f5f46984450555dc33/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=bb1b857adc8b49eae4e5a7f5f46984450555dc33", "patch": "@@ -2848,6 +2848,14 @@ register in which function arguments are sometimes passed.  This does\n the structure-value address.  On many machines, no registers can be\n used for this purpose since all function arguments are pushed on the\n stack.\n+\n+@findex LOAD_ARGS_REVERSED\n+@item LOAD_ARGS_REVERSED\n+If defined, the order in which arguments are loaded into their\n+respective argument registers is reversed so that the last \n+argument is loaded first.  This macro only effects arguments\n+passed in registers.\n+\n @end table\n \n @node Scalar Return"}]}