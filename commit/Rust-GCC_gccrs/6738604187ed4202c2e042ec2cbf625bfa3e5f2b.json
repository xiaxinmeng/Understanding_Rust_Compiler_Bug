{"sha": "6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjczODYwNDE4N2VkNDIwMmMyZTA0MmVjMmNiZjYyNWJmYTNlNWYyYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-08-09T11:00:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-08-09T11:00:11Z"}, "message": "tree.h (SSA_VAR_P): Simplify.\n\n2012-08-09  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.h (SSA_VAR_P): Simplify.\n\t* tree-ssanames.c (make_ssa_name_fn): Strengthen assert.\n\t* fold-const.c (fold_comparison): Check for default def first\n\tbefore checking for PARM_DECL.\n\t* tree-complex.c (get_component_ssa_name): Likewise.\n\t* tree-inline.c (remap_ssa_name): Likewise.\n\t* tree-ssa-loop-ivopts.c (parm_decl_cost): Likewise.\n\t* tree-ssa-structalias.c (get_fi_for_callee): Likewise.\n\t(find_what_p_points_to): Likewise.\n\t* tree-ssa-operands.c (add_stmt_operand): Simplify.\n\nFrom-SVN: r190250", "tree": {"sha": "84d551856d6816f8affe10aae4bb943fb33b73ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d551856d6816f8affe10aae4bb943fb33b73ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4531d13af5d28054528cad273fc1eee41104b0e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4531d13af5d28054528cad273fc1eee41104b0e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4531d13af5d28054528cad273fc1eee41104b0e3"}], "stats": {"total": 76, "additions": 44, "deletions": 32}, "files": [{"sha": "36302bffbcbcc547e10cf6e039c584a27a718647", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -1,3 +1,16 @@\n+2012-08-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.h (SSA_VAR_P): Simplify.\n+\t* tree-ssanames.c (make_ssa_name_fn): Strengthen assert.\n+\t* fold-const.c (fold_comparison): Check for default def first\n+\tbefore checking for PARM_DECL.\n+\t* tree-complex.c (get_component_ssa_name): Likewise.\n+\t* tree-inline.c (remap_ssa_name): Likewise.\n+\t* tree-ssa-loop-ivopts.c (parm_decl_cost): Likewise.\n+\t* tree-ssa-structalias.c (get_fi_for_callee): Likewise.\n+\t(find_what_p_points_to): Likewise.\n+\t* tree-ssa-operands.c (add_stmt_operand): Simplify.\n+\n 2012-08-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* simplify-rtx.c (simplify_binary_operation_1): Do not simplify"}, {"sha": "74fbb2a135fce401ad8ef3e289036e003063a016", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -8940,16 +8940,16 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n            && auto_var_in_fn_p (base0, current_function_decl)\n            && !indirect_base1\n            && TREE_CODE (base1) == SSA_NAME\n-           && TREE_CODE (SSA_NAME_VAR (base1)) == PARM_DECL\n-           && SSA_NAME_IS_DEFAULT_DEF (base1))\n+           && SSA_NAME_IS_DEFAULT_DEF (base1)\n+\t   && TREE_CODE (SSA_NAME_VAR (base1)) == PARM_DECL)\n           || (TREE_CODE (arg1) == ADDR_EXPR\n               && indirect_base1\n               && TREE_CODE (base1) == VAR_DECL\n               && auto_var_in_fn_p (base1, current_function_decl)\n               && !indirect_base0\n               && TREE_CODE (base0) == SSA_NAME\n-              && TREE_CODE (SSA_NAME_VAR (base0)) == PARM_DECL\n-              && SSA_NAME_IS_DEFAULT_DEF (base0)))\n+              && SSA_NAME_IS_DEFAULT_DEF (base0)\n+\t      && TREE_CODE (SSA_NAME_VAR (base0)) == PARM_DECL))\n         {\n           if (code == NE_EXPR)\n             return constant_boolean_node (1, type);"}, {"sha": "a34d04842f2c903dbef4291703b62765af8ea55e", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -495,8 +495,8 @@ get_component_ssa_name (tree ssa_name, bool imag_p)\n \t is used in an abnormal phi, and whether it's uninitialized.  */\n       SSA_NAME_OCCURS_IN_ABNORMAL_PHI (ret)\n \t= SSA_NAME_OCCURS_IN_ABNORMAL_PHI (ssa_name);\n-      if (TREE_CODE (SSA_NAME_VAR (ssa_name)) == VAR_DECL\n-\t  && SSA_NAME_IS_DEFAULT_DEF (ssa_name))\n+      if (SSA_NAME_IS_DEFAULT_DEF (ssa_name)\n+\t  && TREE_CODE (SSA_NAME_VAR (ssa_name)) == VAR_DECL)\n \t{\n \t  SSA_NAME_DEF_STMT (ret) = SSA_NAME_DEF_STMT (ssa_name);\n \t  set_ssa_default_def (cfun, SSA_NAME_VAR (ret), ret);"}, {"sha": "6b6b78cab8ba4a80bde1227f610e87d4ec56d1ca", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -187,8 +187,8 @@ remap_ssa_name (tree name, copy_body_data *id)\n \n   if (processing_debug_stmt)\n     {\n-      if (TREE_CODE (SSA_NAME_VAR (name)) == PARM_DECL\n-\t  && SSA_NAME_IS_DEFAULT_DEF (name)\n+      if (SSA_NAME_IS_DEFAULT_DEF (name)\n+\t  && TREE_CODE (SSA_NAME_VAR (name)) == PARM_DECL\n \t  && id->entry_bb == NULL\n \t  && single_succ_p (ENTRY_BLOCK_PTR))\n \t{"}, {"sha": "ae3c32b1d67755df630052cbfee6ca2a573bf019", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -4642,8 +4642,8 @@ parm_decl_cost (struct ivopts_data *data, tree bound)\n   STRIP_NOPS (sbound);\n \n   if (TREE_CODE (sbound) == SSA_NAME\n+      && SSA_NAME_IS_DEFAULT_DEF (sbound)\n       && TREE_CODE (SSA_NAME_VAR (sbound)) == PARM_DECL\n-      && gimple_nop_p (SSA_NAME_DEF_STMT (sbound))\n       && data->body_includes_call)\n     return COSTS_N_INSNS (1);\n "}, {"sha": "3a1f989c8b73c3ad399e365468bbb562c3afb147", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -615,19 +615,11 @@ add_virtual_operand (gimple stmt ATTRIBUTE_UNUSED, int flags)\n static void\n add_stmt_operand (tree *var_p, gimple stmt, int flags)\n {\n-  tree var, sym;\n+  tree var = *var_p;\n \n   gcc_assert (SSA_VAR_P (*var_p));\n \n-  var = *var_p;\n-  sym = (TREE_CODE (var) == SSA_NAME ? SSA_NAME_VAR (var) : var);\n-\n-  /* Mark statements with volatile operands.  */\n-  if (!(flags & opf_no_vops)\n-      && TREE_THIS_VOLATILE (sym))\n-    gimple_set_has_volatile_ops (stmt, true);\n-\n-  if (is_gimple_reg (sym))\n+  if (is_gimple_reg (var))\n     {\n       /* The variable is a GIMPLE register.  Add it to real operands.  */\n       if (flags & opf_def)\n@@ -636,7 +628,15 @@ add_stmt_operand (tree *var_p, gimple stmt, int flags)\n \tappend_use (var_p);\n     }\n   else\n-    add_virtual_operand (stmt, flags);\n+    {\n+      /* Mark statements with volatile operands.  */\n+      if (!(flags & opf_no_vops)\n+\t  && TREE_THIS_VOLATILE (var))\n+\tgimple_set_has_volatile_ops (stmt, true);\n+\n+      /* The variable is a memory access.  Add virtual operands.  */\n+      add_virtual_operand (stmt, flags);\n+    }\n }\n \n /* Mark the base address of REF as having its address taken."}, {"sha": "2b38e44b2b93bd1152f4c40e087038ae1a3c06ee", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -3976,9 +3976,9 @@ get_fi_for_callee (gimple call)\n   if (!fn || TREE_CODE (fn) != SSA_NAME)\n     return get_varinfo (anything_id);\n \n-  if ((TREE_CODE (SSA_NAME_VAR (fn)) == PARM_DECL\n-       || TREE_CODE (SSA_NAME_VAR (fn)) == RESULT_DECL)\n-      && SSA_NAME_IS_DEFAULT_DEF (fn))\n+  if (SSA_NAME_IS_DEFAULT_DEF (fn)\n+      && (TREE_CODE (SSA_NAME_VAR (fn)) == PARM_DECL\n+\t  || TREE_CODE (SSA_NAME_VAR (fn)) == RESULT_DECL))\n     fn = SSA_NAME_VAR (fn);\n \n   return get_vi_for_tree (fn);\n@@ -5915,9 +5915,9 @@ find_what_p_points_to (tree p)\n   /* For parameters, get at the points-to set for the actual parm\n      decl.  */\n   if (TREE_CODE (p) == SSA_NAME\n+      && SSA_NAME_IS_DEFAULT_DEF (p)\n       && (TREE_CODE (SSA_NAME_VAR (p)) == PARM_DECL\n-\t  || TREE_CODE (SSA_NAME_VAR (p)) == RESULT_DECL)\n-      && SSA_NAME_IS_DEFAULT_DEF (p))\n+\t  || TREE_CODE (SSA_NAME_VAR (p)) == RESULT_DECL))\n     lookup_p = SSA_NAME_VAR (p);\n \n   vi = lookup_vi_for_tree (lookup_p);"}, {"sha": "9e7b156014365dd148d2e7f0c801a9fc10dc1080", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -118,7 +118,9 @@ make_ssa_name_fn (struct function *fn, tree var, gimple stmt)\n   tree t;\n   use_operand_p imm;\n \n-  gcc_assert (DECL_P (var));\n+  gcc_assert (TREE_CODE (var) == VAR_DECL\n+\t      || TREE_CODE (var) == PARM_DECL\n+\t      || TREE_CODE (var) == RESULT_DECL);\n \n   /* If our free list has an element, then use it.  */\n   if (!VEC_empty (tree, FREE_SSANAMES (fn)))"}, {"sha": "9a476072aa1ac11d2b4d5f8dce2bc0c2aa331289", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6738604187ed4202c2e042ec2cbf625bfa3e5f2b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6738604187ed4202c2e042ec2cbf625bfa3e5f2b", "patch": "@@ -2635,16 +2635,13 @@ struct GTY (()) tree_binfo {\n \f\n /* Define fields and accessors for nodes representing declared names.  */\n \n-/* Nonzero if DECL represents a variable for the SSA passes.  */\n+/* Nonzero if DECL represents an SSA name or a variable that can possibly\n+   have an associated SSA name.  */\n #define SSA_VAR_P(DECL)\t\t\t\t\t\t\t\\\n \t(TREE_CODE (DECL) == VAR_DECL\t\t\t\t\t\\\n \t || TREE_CODE (DECL) == PARM_DECL\t\t\t\t\\\n \t || TREE_CODE (DECL) == RESULT_DECL\t\t\t\t\\\n-\t || (TREE_CODE (DECL) == SSA_NAME\t\t\t\t\\\n-\t     && (TREE_CODE (SSA_NAME_VAR (DECL)) == VAR_DECL\t\t\\\n-\t\t || TREE_CODE (SSA_NAME_VAR (DECL)) == PARM_DECL\t\\\n-\t\t || TREE_CODE (SSA_NAME_VAR (DECL)) == RESULT_DECL)))\n-\n+\t || TREE_CODE (DECL) == SSA_NAME)\n \n \n "}]}