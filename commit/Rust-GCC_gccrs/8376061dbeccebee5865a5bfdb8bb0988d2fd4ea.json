{"sha": "8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM3NjA2MWRiZWNjZWJlZTU4NjVhNWJmZGI4YmIwOTg4ZDJmZDRlYQ==", "commit": {"author": {"name": "Catherine Moore", "email": "clm@redhat.com", "date": "2002-08-29T09:50:20Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2002-08-29T09:50:20Z"}, "message": "v850.h (MULDI3_LIBCALL, [...]): Define.\n\n    * config/v850/v850.h (MULDI3_LIBCALL, UCMPDI2_LIBCALL, CMPDI2_LIBCALL,\n    NEGDI2_LIBCALL, INIT_TARGET_OPTABS, MASK_STRICT_ALIGN): Define.\n    (PREDICATE_CODES): Include new predicates.\n    (RTX_COSTS): Handle UMOD and UDIV.  Tune MULT for v850e.\n    (TARGET_SWITCHES):  Add strict-align.\n    (TARGET_STRICT_ALIGN): New.\n    (MASK_DEFAULT, STRICT_ALIGNMENT):  Redefine.\n    * config/v850/t-v850 (MULTILIB_OPTIONS, MULTILIB_DIRNAMES):\n    Define.\n    (LIB1ASMFUNCS): Add v850_negdi2, v850_cmpdi2, v850_ucmpdi2,\n    v850_muldi3.\n    * config/v850/lib1funcs.asm (L_callt_save_r2_r29, L_return_r2_r29,\n    L_callt_save_r2_r31, L_return_r2_r31,\n    L_save_all_interrupt): Change addi to add.\n    (L_save_interrupt, L_return_interrupt): Rework.\n    (__return_r31):  Correct .size directive.\n    (mulsi3, divsi3, udivsi3, umodsi3, modsi3): Tune for v850e.\n    (v850_negdi2, v850_cmpdi2, v850_ucmpdi2, v850_muldi3):\n    New routines.\n    * config/v850/v850.c (expand_prologue): Call\n    gen_callt_save_interrupt, gen_callt_restore_all_interrupt,\n    gen_callt_return_interrupt and gen_callt_save_all_interrupt.\n    (reg_or_int9_operand): New predicate.\n    (reg_or_const_operand): New routine.\n    * config/v850/v850.md (return_interrupt): Changed from\n    restore_interrupt.\n    (callt_save_all_interrupt): Changed from save_all_interrupt_v850e.\n    (callt_save_interrupt): Change save sequence.\n    (callt_return_interrupt): New.\n    (save_interrupt): Don't use runtime function for LONG_CALLS\n    and TARGET_PROLOG_FUNCTION.\n    (save_all_interrupt): Likewise.\n    (mulsi3): Use new predicate.\n    (moviscc): Disallow some combination of constants.\n    Fix define_split for sasf insns, so that it will not generate bad\n    code if operand0 and operand5 are the same.\n    * config/v850/v850-protos.h: Prototype new predicates.\n\nFrom-SVN: r56654", "tree": {"sha": "2609b7564c47fd8aad043d38b6b0256e3eb6853e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2609b7564c47fd8aad043d38b6b0256e3eb6853e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/comments", "author": null, "committer": null, "parents": [{"sha": "25cf83980be2e3876dc7dfb26e7434d10ce52e84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cf83980be2e3876dc7dfb26e7434d10ce52e84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25cf83980be2e3876dc7dfb26e7434d10ce52e84"}], "stats": {"total": 542, "additions": 437, "deletions": 105}, "files": [{"sha": "2959e919b1593e7e4d837eabc47195ebce985126", "filename": "gcc/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "patch": "@@ -1,3 +1,43 @@\n+2001-08-29  Catherine Moore  <clm@redhat.com>\n+\n+\t* config/v850/v850.h (MULDI3_LIBCALL, UCMPDI2_LIBCALL, CMPDI2_LIBCALL,\n+\tNEGDI2_LIBCALL, INIT_TARGET_OPTABS, MASK_STRICT_ALIGN): Define.\n+\t(PREDICATE_CODES): Include new predicates.\n+\t(RTX_COSTS): Handle UMOD and UDIV.  Tune MULT for v850e.\n+\t(TARGET_SWITCHES):  Add strict-align.\n+\t(TARGET_STRICT_ALIGN): New.\n+\t(MASK_DEFAULT, STRICT_ALIGNMENT):  Redefine.\t\n+\t* config/v850/t-v850 (MULTILIB_OPTIONS, MULTILIB_DIRNAMES):\n+\tDefine.\n+\t(LIB1ASMFUNCS): Add v850_negdi2, v850_cmpdi2, v850_ucmpdi2,\n+\tv850_muldi3.\n+\t* config/v850/lib1funcs.asm (L_callt_save_r2_r29, L_return_r2_r29,\n+\tL_callt_save_r2_r31, L_return_r2_r31,\n+\tL_save_all_interrupt): Change addi to add.\n+\t(L_save_interrupt, L_return_interrupt): Rework.\n+\t(__return_r31):  Correct .size directive.\n+\t(mulsi3, divsi3, udivsi3, umodsi3, modsi3): Tune for v850e.\n+\t(v850_negdi2, v850_cmpdi2, v850_ucmpdi2, v850_muldi3):\n+\tNew routines.\n+\t* config/v850/v850.c (expand_prologue): Call\n+\tgen_callt_save_interrupt, gen_callt_restore_all_interrupt,\n+\tgen_callt_return_interrupt and gen_callt_save_all_interrupt.\n+\t(reg_or_int9_operand): New predicate.\n+\t(reg_or_const_operand): New routine.\n+\t* config/v850/v850.md (return_interrupt): Changed from\n+\trestore_interrupt.\n+\t(callt_save_all_interrupt): Changed from save_all_interrupt_v850e.\n+\t(callt_save_interrupt): Change save sequence.\n+\t(callt_return_interrupt): New.\n+\t(save_interrupt): Don't use runtime function for LONG_CALLS\n+\tand TARGET_PROLOG_FUNCTION.\n+\t(save_all_interrupt): Likewise.\n+\t(mulsi3): Use new predicate.\n+\t(moviscc): Disallow some combination of constants.\n+\tFix define_split for sasf insns, so that it will not generate bad\n+\tcode if operand0 and operand5 are the same.\n+\t* config/v850/v850-protos.h: Prototype new predicates.\n+\n 2002-08-28  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* c-common.c (builtin_define_type_precision): New function."}, {"sha": "2415f91830af2378f6b6bdeb9dffa78ec75ba9c9", "filename": "gcc/config/v850/lib1funcs.asm", "status": "modified", "additions": 297, "deletions": 56, "changes": 353, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Flib1funcs.asm?ref=8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "patch": "@@ -31,70 +31,87 @@ Boston, MA 02111-1307, USA.  */\n \t.text\n \t.globl ___mulsi3\n \t.type  ___mulsi3,@function\n-\n-/*\n- * #define SHIFT 12\n- * #define MASK ((1 << SHIFT) - 1)\n- *  \n- * #define STEP(i, j)                             \\\n- * ({                                             \\\n- *     short a_part = (a >> (i)) & MASK;          \\\n- *     short b_part = (b >> (j)) & MASK;          \\\n- *     int res = (((int)a_part) * ((int)b_part)); \\\n- *     res;                                       \\\n- * })\n- *\n- * int\n- * __mulsi3 (unsigned a, unsigned b)\n- * {\n- *    return STEP (0, 0) +\n- *        ((STEP (SHIFT, 0) + STEP (0, SHIFT)) << SHIFT) +\n- *        ((STEP (0, 2 * SHIFT) + STEP (SHIFT, SHIFT) + STEP (2 * SHIFT, 0))\n- *         << (2 * SHIFT));\n- * }\n- */\n-\n ___mulsi3:\n-        mov r6,r13\n-        movea lo(4095),r0,r16\n-        and r16,r13\n-        mov r7,r15\n-        and r16,r15\n-        mov r13,r10\n-        mulh r15,r10\n-        shr 12,r6\n-        mov r6,r14\n-        and r16,r14\n-        mov r14,r11\n-        mulh r15,r11\n-        shr 12,r7\n-        mov r7,r12\n-        and r16,r12\n-        shr 12,r7\n-        and r16,r7\n-        mulh r13,r7\n-        shr 12,r6\n-        mulh r12,r13\n-        and r16,r6\n-        add r13,r11\n-        shl 12,r11\n-        add r11,r10\n-        mov r14,r11\n-        mulh r12,r11\n-        mulh r15,r6\n-        add r11,r7\n-        add r6,r7\n-        shl 24,r7\n-        add r7,r10\n-        jmp [r31]\n+#ifdef __v850__\t\n+/*\n+   #define SHIFT 12\n+   #define MASK ((1 << SHIFT) - 1)\n+    \n+   #define STEP(i, j)                               \\\n+   ({                                               \\\n+       short a_part = (a >> (i)) & MASK;            \\\n+       short b_part = (b >> (j)) & MASK;            \\\n+       int res = (((int) a_part) * ((int) b_part)); \\\n+       res;                                         \\\n+   })\n+  \n+   int\n+   __mulsi3 (unsigned a, unsigned b)\n+   {\n+      return STEP (0, 0) +\n+          ((STEP (SHIFT, 0) + STEP (0, SHIFT)) << SHIFT) +\n+          ((STEP (0, 2 * SHIFT) + STEP (SHIFT, SHIFT) + STEP (2 * SHIFT, 0))\n+           << (2 * SHIFT));\n+   }\n+*/\n+        mov   r6, r14\n+        movea lo(32767), r0, r10\n+        and   r10, r14\n+        mov   r7,  r15\n+        and   r10, r15\n+        shr   15,  r6\n+        mov   r6,  r13\n+        and   r10, r13\n+        shr   15,  r7\n+        mov   r7,  r12\n+        and   r10, r12\n+        shr   15,  r6\n+        shr   15,  r7\n+        mov   r14, r10\n+        mulh  r15, r10\n+        mov   r14, r11\n+        mulh  r12, r11\n+        mov   r13, r16\n+        mulh  r15, r16\n+        mulh  r14, r7\n+        mulh  r15, r6\n+        add   r16, r11\n+        mulh  r13, r12\n+        shl   15,  r11\n+        add   r11, r10\n+        add   r12, r7\n+        add   r6,  r7\n+        shl   30,  r7\n+        add   r7,  r10\n+        jmp   [r31]\n+#endif /* __v850__ */\n+#if defined(__v850e__) || defined(__v850ea__)\n+        /* This routine is almost unneccesarry because gcc\n+           generates the MUL instruction for the RTX mulsi3.\n+           But if someone wants to link his application with\n+           previsously compiled v850 objects then they will \n+\t   need this function.  */\n+ \n+        /* It isn't good to put the inst sequence as below;\n+              mul r7, r6,\n+              mov r6, r10, r0\n+           In this case, there is a RAW hazard between them.\n+           MUL inst takes 2 cycle in EX stage, then MOV inst\n+           must wait 1cycle.  */\n+        mov   r7, r10\n+        mul   r6, r10, r0\n+        jmp   [r31]\n+#endif /* __v850e__ */\n \t.size ___mulsi3,.-___mulsi3\n-#endif\n+#endif /* L_mulsi3 */\n+\n \n #ifdef L_udivsi3\n \t.text\n \t.global ___udivsi3\n \t.type\t___udivsi3,@function\n ___udivsi3:\n+#ifdef __v850__\n \tmov 1,r12\n \tmov 0,r10\n \tcmp r6,r7\n@@ -126,6 +143,16 @@ ___udivsi3:\n \tbne .L9\n .L8:\n \tjmp [r31]\n+\n+#else /* defined(__v850e__) */\n+\n+\t/* See comments at end of __mulsi3.  */\n+\tmov   r6, r10\t\n+\tdivu  r7, r10, r0\n+\tjmp   [r31]\t\t\n+\n+#endif /* __v850e__ */\n+\n \t.size ___udivsi3,.-___udivsi3\n #endif\n \n@@ -134,6 +161,7 @@ ___udivsi3:\n \t.globl ___divsi3\n \t.type  ___divsi3,@function\n ___divsi3:\n+#ifdef __v850__\n \tadd -8,sp\n \tst.w r31,4[sp]\n \tst.w r22,0[sp]\n@@ -157,6 +185,16 @@ ___divsi3:\n \tld.w 4[sp],r31\n \tadd 8,sp\n \tjmp [r31]\n+\n+#else /* defined(__v850e__) */\n+\n+\t/* See comments at end of __mulsi3.  */\n+\tmov   r6, r10\n+\tdiv   r7, r10, r0\n+\tjmp   [r31]\n+\n+#endif /* __v850e__ */\n+\n \t.size ___divsi3,.-___divsi3\n #endif\n \n@@ -165,6 +203,7 @@ ___divsi3:\n \t.globl ___umodsi3\n \t.type  ___umodsi3,@function\n ___umodsi3:\n+#ifdef __v850__\n \tadd -12,sp\n \tst.w r31,8[sp]\n \tst.w r7,4[sp]\n@@ -178,6 +217,15 @@ ___umodsi3:\n \tld.w 8[sp],r31\n \tadd 12,sp\n \tjmp [r31]\n+\n+#else /* defined(__v850e__) */\n+\n+\t/* See comments at end of __mulsi3.  */\n+\tdivu  r7, r6, r10\n+\tjmp   [r31]\n+\n+#endif /* __v850e__ */\n+\n \t.size ___umodsi3,.-___umodsi3\n #endif /* L_umodsi3 */\n \n@@ -186,6 +234,7 @@ ___umodsi3:\n \t.globl ___modsi3\n \t.type  ___modsi3,@function\n ___modsi3:\n+#ifdef __v850__\t\n \tadd -12,sp\n \tst.w r31,8[sp]\n \tst.w r7,4[sp]\n@@ -199,6 +248,15 @@ ___modsi3:\n \tld.w 8[sp],r31\n \tadd 12,sp\n \tjmp [r31]\n+\n+#else /* defined(__v850e__) */\n+\n+\t/* See comments at end of __mulsi3.  */\n+\tdiv  r7, r6, r10\n+\tjmp [r31]\n+\n+#endif /* __v850e__ */\n+\n \t.size ___modsi3,.-___modsi3\n #endif /* L_modsi3 */\n \n@@ -1642,3 +1700,186 @@ __callt_return_r31c:\t.short ctoff(.L_callt_return_r31c)\n #endif\n \n #endif /* __v850e__ */\n+\n+/*  libgcc2 routines for NEC V850.  */\n+/*  Double Integer Arithmetical Operation.  */\n+\n+#ifdef L_negdi2\n+\t.text\n+\t.global ___negdi2\n+\t.type   ___negdi2, @function\n+___negdi2:\n+\tnot\tr6, r10\n+\tadd\t1,  r10\n+\tsetf\tl,  r6\n+\tnot\tr7, r11\n+\tadd\tr6, r11\n+\tjmp\t[lp]\n+\n+\t.size ___negdi2,.-___negdi2\n+#endif\n+\n+#ifdef L_cmpdi2\n+\t.text\n+\t.global ___cmpdi2\n+\t.type\t___cmpdi2,@function\n+___cmpdi2:\n+\t# Signed comparison bitween each high word.\n+\tcmp\tr9, r7\n+\tbe\t.L_cmpdi_cmp_low\n+\tsetf\tge, r10\n+\tsetf\tgt, r6\n+\tadd\tr6, r10\n+\tjmp\t[lp]\n+.L_cmpdi_cmp_low:\n+\t# Unsigned comparigon bitween each low word.\n+\tcmp     r8, r6\n+\tsetf\tnl, r10\n+\tsetf\th,  r6\n+\tadd\tr6, r10\n+\tjmp\t[lp]\t\n+\t.size ___cmpdi2, . - ___cmpdi2\t\n+#endif\n+\n+#ifdef L_ucmpdi2\n+\t.text\n+\t.global ___ucmpdi2\n+\t.type\t___ucmpdi2,@function\n+___ucmpdi2:\n+\tcmp\tr9, r7  # Check if each high word are same.\n+\tbe\t.L_ucmpdi_check_psw\n+\tcmp     r8, r6  # Compare the word.\n+.L_ucmpdi_check_psw:\n+\tsetf\tnl, r10 # \n+\tsetf\th,  r6  # \n+\tadd\tr6, r10 # Add the result of comparison NL and comparison H.\n+\tjmp\t[lp]\t\n+\t.size ___ucmpdi2, . - ___ucmpdi2\n+#endif\n+\n+#ifdef L_muldi3\n+\t.text\n+\t.global ___muldi3\n+\t.type\t___muldi3,@function\n+___muldi3:\n+#ifdef __v850__\n+        jarl  __save_r26_r31, r10\n+        addi  16,  sp, sp\n+        mov   r6,  r5\n+        shr   15,  r5\n+        movea lo(32767), r0, r14\n+        and   r14, r5\n+        mov   r8,  r10\n+        shr   15,  r10\n+        and   r14, r10\n+        mov   r6,  r19\n+        shr   30,  r19\n+        mov   r7,  r12\n+        shl   2,   r12\n+        or    r12, r19\n+        and   r14, r19\n+        mov   r8,  r13\n+        shr   30,  r13\n+        mov   r9,  r12\n+        shl   2,   r12\n+        or    r12, r13\n+        and   r14, r13\n+        mov   r7,  r11\n+        shr   13,  r11\n+        and   r14, r11\n+        mov   r9,  r31\n+        shr   13,  r31\n+        and   r14, r31\n+        mov   r7,  r29\n+        shr   28,  r29\n+        and   r14, r29\n+        mov   r9,  r12\n+        shr   28,  r12\n+        and   r14, r12\n+        and   r14, r6\n+        and   r14, r8\n+        mov   r6,  r14\n+        mulh  r8,  r14\n+        mov   r6,  r16\n+        mulh  r10, r16\n+        mov   r6,  r18\n+        mulh  r13, r18\n+        mov   r6,  r15\n+        mulh  r31, r15\n+        mulh  r12, r6\n+        mov   r5,  r17\n+        mulh  r10, r17\n+        add   -16, sp\n+        mov   r5,  r12\n+        mulh  r8,  r12\n+        add   r17, r18\n+        mov   r5,  r17\n+        mulh  r31, r17\n+        add   r12, r16\n+        mov   r5,  r12\n+        mulh  r13, r12\n+        add   r17, r6\n+        mov   r19, r17\n+        add   r12, r15\n+        mov   r19, r12\n+        mulh  r8,  r12\n+        mulh  r10, r17\n+        add   r12, r18\n+        mov   r19, r12\n+        mulh  r13, r12\n+        add   r17, r15\n+        mov   r11, r13\n+        mulh  r8,  r13\n+        add   r12, r6\n+        mov   r11, r12\n+        mulh  r10, r12\n+        add   r13, r15\n+        mulh  r29, r8\n+        add   r12, r6\n+        mov   r16, r13\n+        shl   15,  r13\n+        add   r14, r13\n+        mov   r18, r12\n+        shl   30,  r12\n+        mov   r13, r26\n+        add   r12, r26\n+        shr   15,  r14\n+        movhi hi(131071), r0,  r12\n+        movea lo(131071), r12, r13\n+        and   r13, r14\n+        mov   r16, r12\n+        and   r13, r12\n+        add   r12, r14\n+        mov   r18, r12\n+        shl   15,  r12\n+        and   r13, r12\n+        add   r12, r14\n+        shr   17,  r14\n+        shr   17,  r16\n+        add   r14, r16\n+        shl   13,  r15\n+        shr   2,   r18\n+        add   r18, r15\n+        add   r15, r16\n+        mov   r16, r27\n+        add   r8,  r6\n+        shl   28,  r6\n+        add   r6,  r27\n+        mov   r26, r10\n+        mov   r27, r11\n+        jr    __return_r26_r31\n+#endif /* __v850__ */\n+#if defined(__v850e__) || defined(__v850ea__)\n+\t/*  (Ahi << 32 + Alo) * (Bhi << 32 + Blo) */\n+\t/*   r7           r6      r9         r8   */\n+\tmov  r8, r10\n+\tmulu r7, r8,  r0\t\t/* Ahi * Blo */\n+\tmulu r6, r9,  r0\t\t/* Alo * Bhi */\n+\tmulu r6, r10, r11\t\t/* Alo * Blo */\n+\tadd  r8, r11\n+\tadd  r9, r11\n+\tjmp  [r31]\n+\n+#endif /* defined(__v850e__)  || defined(__v850ea__) */\n+\t.size ___muldi3, . - ___muldi3\n+#endif"}, {"sha": "030f043f0713a62ecbb4227761d2f478ff6e39f0", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "patch": "@@ -56,7 +56,11 @@ LIB1ASMFUNCS\t= _mulsi3 \\\n \t\t  _callt_save_all_interrupt \\\n \t\t  _callt_save_r2_r29 \\\n \t\t  _callt_save_r2_r31 \\\n-\t\t  _callt_save_r6_r9\n+\t\t  _callt_save_r6_r9 \\\n+\t\t  _negdi2 \\\n+\t\t  _cmpdi2 \\\n+\t\t  _ucmpdi2 \\\n+\t\t  _muldi3\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries.\n@@ -76,9 +80,12 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#endif' \t\t>> fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n-TCFLAGS = -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n-# Create non-target specific versions of the libraries\n-TCFLAGS += -mno-app-regs -msmall-sld -mv850 -D__v850e__ -Wa,-mv850any\n+# Create target-specific versions of the libraries\n+MULTILIB_OPTIONS  = mv850/mv850e\n+MULTILIB_DIRNAMES = v850 v850e\n+INSTALL_LIBGCC    = install-multilib\n+\n+TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n \n v850-c.o: $(srcdir)/config/v850/v850-c.c $(RTL_H) $(TREE_H) $(CONFIG_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "bab73ae7e5627e33e75ec97def9fd1149d1ed52a", "filename": "gcc/config/v850/v850-protos.h", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-protos.h?ref=8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "patch": "@@ -1,22 +1,22 @@\n /* Prototypes for v850.c functions used in the md file & elsewhere.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n \n-This file is part of GNU CC.\n+   This file is part of GNU CC.\n \n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n+   GNU CC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n \n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n+   GNU CC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n \n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n+   You should have received a copy of the GNU General Public License\n+   along with GNU CC; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n \n /* Function prototypes that cannot exist in v850.h due to dependency\n    complications.  */\n@@ -53,6 +53,8 @@ extern void   notice_update_cc              PARAMS ((rtx, rtx));\n extern char * construct_save_jarl           PARAMS ((rtx));\n extern char * construct_restore_jr          PARAMS ((rtx));\n #ifdef HAVE_MACHINE_MODES\n+extern int    reg_or_int9_operand           PARAMS ((rtx, Mmode));\n+extern int    reg_or_const_operand          PARAMS ((rtx, Mmode));\n extern char * construct_dispose_instruction PARAMS ((rtx));\n extern char * construct_prepare_instruction PARAMS ((rtx));\n extern int    pattern_is_ok_for_prepare     PARAMS ((rtx, Mmode));"}, {"sha": "86e80e9887ff18c1355db1fa1486111be7afbc2f", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "patch": "@@ -3,22 +3,22 @@\n    Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n-This file is part of GNU CC.\n+   This file is part of GNU CC.\n \n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n+   GNU CC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n \n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n+   GNU CC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+   for more details.\n \n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n+   You should have received a copy of the GNU General Public License\n+   along with GNU CC; see the file COPYING.  If not, write to the Free\n+   Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+   02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n@@ -2762,7 +2762,7 @@ v850_output_aligned_bss (file, decl, name, size, align)\n      int align;\n {\n   (*targetm.asm_out.globalize_label) (file, name);\n-  \n+\n   switch (v850_get_data_area (decl))\n     {\n     case DATA_AREA_ZDA:"}, {"sha": "e1c33f39937a5e6e84111edb689315fae9f3d902", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 59, "deletions": 14, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "patch": "@@ -3,22 +3,22 @@\n    Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n-This file is part of GNU CC.\n+   This file is part of GNU CC.\n \n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n+   GNU CC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n \n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n+   GNU CC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n \n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n+   You should have received a copy of the GNU General Public License\n+   along with GNU CC; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n \n #ifndef GCC_V850_H\n #define GCC_V850_H\n@@ -86,6 +86,7 @@ extern int target_flags;\n #define MASK_BIG_SWITCH\t\t0x00000100\n #define MASK_NO_APP_REGS        0x00000200\n #define MASK_DISABLE_CALLT      0x00000400\n+#define MASK_STRICT_ALIGN       0x00000800\n \n #define MASK_US_BIT_SET         0x00001000\n #define MASK_US_MASK_SET        0x00002000\n@@ -145,6 +146,8 @@ extern int target_flags;\n    and r5 are to be fixed registers (for compatibility with GHS).  */\n #define TARGET_NO_APP_REGS  \t(target_flags & MASK_NO_APP_REGS)\n \n+#define TARGET_STRICT_ALIGN \t(target_flags & MASK_STRICT_ALIGN)\n+\n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n    each pair being { \"NAME\", VALUE }\n@@ -182,6 +185,9 @@ extern int target_flags;\n    { \"app-regs\",                -MASK_NO_APP_REGS, \"\"  },               \\\n    { \"no-app-regs\",              MASK_NO_APP_REGS, \t\t\t\\\n        \t\t\t\tN_(\"Do not use registers r2 and r5\") }, \\\n+   { \"strict-align\",             MASK_STRICT_ALIGN,\t\t\t\\\n+\t\t\t\tN_(\"Enfore strict alignment\") },        \\\n+   { \"no-strict-align\",         -MASK_STRICT_ALIGN, \"\" },\t\t\\\n    { \"big-switch\",\t\t MASK_BIG_SWITCH, \t\t\t\\\n        \t\t\t\tN_(\"Use 4 byte entries in switch tables\") },\\\n    { \"\",\t\t\t MASK_DEFAULT, \"\"}}\n@@ -255,6 +261,7 @@ extern struct small_memory_info small_memory[(int)SMALL_MEMORY_max];\n \n #define OPTIMIZATION_OPTIONS(LEVEL,SIZE)\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n+  target_flags |= MASK_STRICT_ALIGN;\t\t\t\t\t\\\n   if (LEVEL)\t\t\t\t\t\t\t\t\\\n     target_flags |= (MASK_EP | MASK_PROLOG_FUNCTION);\t\t\t\\\n }\n@@ -314,7 +321,7 @@ extern struct small_memory_info small_memory[(int)SMALL_MEMORY_max];\n \n /* Define this if move instructions will actually fail to work\n    when given unaligned data.  */\n-#define STRICT_ALIGNMENT 1\n+#define STRICT_ALIGNMENT  TARGET_STRICT_ALIGN\n \n /* Define this as 1 if `char' should by default be signed; else as 0.\n \n@@ -1048,8 +1055,27 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define RTX_COSTS(RTX,CODE,OUTER_CODE)\t\t\t\t\t\\\n   case MOD:\t\t\t\t\t\t\t\t\\\n   case DIV:\t\t\t\t\t\t\t\t\\\n+  case UMOD:\t\t\t\t\t\t\t\t\\\n+  case UDIV:\t\t\t\t\t\t\t\t\\\n+    if (TARGET_V850E && optimize_size)\t\t\t\t\t\\\n+      return 6;\t\t\t\t\t\t\t\t\\\n     return 60;\t\t\t\t\t\t\t\t\\\n   case MULT:\t\t\t\t\t\t\t\t\\\n+    if (TARGET_V850E\t\t\t\t\t\t\t\\\n+\t&& (   GET_MODE (RTX) == SImode\t\t\t\t\t\\\n+\t    || GET_MODE (RTX) == HImode\t\t\t\t\t\\\n+\t    || GET_MODE (RTX) == QImode))\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tif (GET_CODE (XEXP (RTX, 1)) == REG)\t\t\t\t\\\n+\t  return 4;\t\t\t\t\t\t\t\\\n+\telse if (GET_CODE (XEXP (RTX, 1)) == CONST_INT)\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    if (CONST_OK_FOR_O (INTVAL (XEXP (RTX, 1))))\t\t\\\n+\t      return 6;\t\t\t\t\t\t\t\\\n+\t    else if (CONST_OK_FOR_K (INTVAL (XEXP (RTX, 1))))\t\t\\\n+\t      return 10;\t\t\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n     return 20;\n \n /* All addressing modes have the same cost on the V850 series.  */\n@@ -1360,6 +1386,23 @@ zbss_section ()\t\t\t\t\t\t\t\t\\\n \n #define STORE_FLAG_VALUE 1\n \n+#define MULDI3_LIBCALL  \"__muldi3\"\n+#define UCMPDI2_LIBCALL \"__ucmpdi2\"\n+#define CMPDI2_LIBCALL  \"__cmpdi2\"\n+#define NEGDI2_LIBCALL  \"__negdi2\"\n+\n+#define INIT_TARGET_OPTABS \t\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    { \t\t\t\t\t\t\t\\\n+      cmp_optab->handlers[(int) DImode].libfunc\t\t\\\n+\t= init_one_libfunc (CMPDI2_LIBCALL);            \\\n+      ucmp_optab->handlers[(int) DImode].libfunc        \\\n+\t= init_one_libfunc (UCMPDI2_LIBCALL);           \\\n+      neg_optab->handlers[(int) DImode].libfunc\t\t\\\n+\t= init_one_libfunc (NEGDI2_LIBCALL);\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n /* Specify the machine mode that pointers have.\n    After generation of rtl, the compiler makes no further distinction\n    between pointers and any other objects of this machine mode.  */\n@@ -1470,6 +1513,8 @@ extern union tree_node * GHS_current_section_names [(int) COUNT_OF_GHS_SECTION_K\n #define PREDICATE_CODES\t\t\t\t\t\t\t\\\n { \"reg_or_0_operand\",\t\t{ REG, SUBREG, CONST_INT, CONST_DOUBLE }}, \\\n { \"reg_or_int5_operand\",\t{ REG, SUBREG, CONST_INT }},\t\t\\\n+{ \"reg_or_int9_operand\",\t{ REG, SUBREG, CONST_INT }},\t\t\\\n+{ \"reg_or_const_operand\",       { REG, CONST_INT }},\t\t\t\\\n { \"call_address_operand\",\t{ REG, SYMBOL_REF }},\t\t\t\\\n { \"movsi_source_operand\",\t{ LABEL_REF, SYMBOL_REF, CONST_INT,\t\\\n \t\t\t\t  CONST_DOUBLE, CONST, HIGH, MEM,\t\\"}, {"sha": "96ece9cfac60093856ccc31b19d04ac4d4b5be19", "filename": "gcc/config/v850/v850.md", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Fv850.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8376061dbeccebee5865a5bfdb8bb0988d2fd4ea/gcc%2Fconfig%2Fv850%2Fv850.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.md?ref=8376061dbeccebee5865a5bfdb8bb0988d2fd4ea", "patch": "@@ -409,7 +409,6 @@\n (define_insn \"mulsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(mult:SI (match_operand:SI 1 \"register_operand\" \"%0\")\n-\t\t ;; %redact changeone /reg_or_int9/ 'register' unless nec-no-copyright\n \t\t (match_operand:SI 2 \"reg_or_int9_operand\" \"rO\")))]\n   \"TARGET_V850E\"\n   \"mul %2,%1,%.\"\n@@ -860,9 +859,7 @@\n \t(if_then_else:SI\n \t (match_operator 1 \"comparison_operator\"\n \t\t\t [(match_dup 4) (match_dup 5)])\n-         ;; %redact changeone /const/ 'int5' unless nec-no-copyright\n \t (match_operand:SI 2 \"reg_or_const_operand\" \"rJ\")\n-         ;; %redact changeone /const/ '0' unless nec-no-copyright\n \t (match_operand:SI 3 \"reg_or_const_operand\" \"rI\")))]\n   \"TARGET_V850E\"\n   \""}]}