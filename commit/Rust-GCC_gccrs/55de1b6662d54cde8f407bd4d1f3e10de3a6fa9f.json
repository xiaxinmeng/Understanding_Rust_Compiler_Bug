{"sha": "55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkZTFiNjY2MmQ1NGNkZThmNDA3YmQ0ZDFmM2UxMGRlM2E2ZmE5Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-02-03T00:27:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-02-03T00:27:28Z"}, "message": "decl.c (push_class_binding): Use context_for_name_lookup instead of CP_DECL_CONTEXT.\n\n\t* decl.c (push_class_binding): Use context_for_name_lookup instead\n\tof CP_DECL_CONTEXT.\n\t* search.c (context_for_name_lookup): Remove static.  Check for NULL\n\tcontext in the loop.\n\t* cp-tree.h (context_for_name_lookup): Add prototype.\n\n\t* g++.old-deja/g++.other/anon6.C: New test.\n\t* g++.old-deja/g++.other/anon7.C: New test.\n\nFrom-SVN: r39417", "tree": {"sha": "f3d31f5162151f6fcae8bb32cda44e06be229762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3d31f5162151f6fcae8bb32cda44e06be229762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2bf9b27db7a7f87373a7a702e6741bdaf820ddbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf9b27db7a7f87373a7a702e6741bdaf820ddbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bf9b27db7a7f87373a7a702e6741bdaf820ddbd"}], "stats": {"total": 83, "additions": 78, "deletions": 5}, "files": [{"sha": "b9d81e1daa5c858a53e39c419223dd2be54012dc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "patch": "@@ -1,3 +1,11 @@\n+2001-02-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* decl.c (push_class_binding): Use context_for_name_lookup instead\n+\tof CP_DECL_CONTEXT.\n+\t* search.c (context_for_name_lookup): Remove static.  Check for NULL\n+\tcontext in the loop.\n+\t* cp-tree.h (context_for_name_lookup): Add prototype.\n+\n 2001-02-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-tree.h (build_expr_ptr_wrapper, can_free): Remove."}, {"sha": "60421a391b6fbc69b57c69d86858d16584de55e2", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "patch": "@@ -4211,6 +4211,7 @@ extern void init_search_processing\t\tPARAMS ((void));\n extern void reinit_search_statistics\t\tPARAMS ((void));\n extern tree current_scope\t\t\tPARAMS ((void));\n extern int at_function_scope_p                  PARAMS ((void));\n+extern tree context_for_name_lookup\t\tPARAMS ((tree));\n extern tree lookup_conversions\t\t\tPARAMS ((tree));\n extern tree binfo_for_vtable\t\t\tPARAMS ((tree));\n extern tree binfo_from_vbase\t\t\tPARAMS ((tree));"}, {"sha": "44a3b3b947d54e27e40a5ce1c52696c975d1cdbc", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "patch": "@@ -1124,7 +1124,7 @@ push_class_binding (id, decl)\n \t  else\n \t    {\n \t      my_friendly_assert (DECL_P (decl), 0);\n-\t      context = CP_DECL_CONTEXT (decl);\n+\t      context = context_for_name_lookup (decl);\n \t    }\n \n \t  if (is_properly_derived_from (current_class_type, context))"}, {"sha": "c8cf526035f3a4e21d616a00f18653df3f3880a9", "filename": "gcc/cp/search.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "patch": "@@ -120,7 +120,6 @@ static tree bfs_walk\n \t       void *));\n static tree lookup_field_queue_p PARAMS ((tree, void *));\n static tree lookup_field_r PARAMS ((tree, void *));\n-static tree context_for_name_lookup PARAMS ((tree));\n static tree canonical_binfo PARAMS ((tree));\n static tree shared_marked_p PARAMS ((tree, void *));\n static tree shared_unmarked_p PARAMS ((tree, void *));\n@@ -714,7 +713,7 @@ at_function_scope_p ()\n \n /* Return the scope of DECL, as appropriate when doing name-lookup.  */\n \n-static tree\n+tree\n context_for_name_lookup (decl)\n      tree decl;\n {\n@@ -724,9 +723,9 @@ context_for_name_lookup (decl)\n      definition, the members of the anonymous union are considered to\n      have been defined in the scope in which the anonymous union is\n      declared.  */ \n-  tree context = CP_DECL_CONTEXT (decl);\n+  tree context = DECL_CONTEXT (decl);\n \n-  while (TYPE_P (context) && ANON_AGGR_TYPE_P (context))\n+  while (context && TYPE_P (context) && ANON_AGGR_TYPE_P (context))\n     context = TYPE_CONTEXT (context);\n   if (!context)\n     context = global_namespace;"}, {"sha": "60daf5689466c4bc4e272f70087c4a4d4c083315", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "patch": "@@ -1,3 +1,8 @@\n+2001-02-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.old-deja/g++.other/anon6.C: New test.\n+\t* g++.old-deja/g++.other/anon7.C: New test.\n+\n 2001-02-01  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * gcc.dg/cpp/avoidpaste2.c: New tests."}, {"sha": "4fd9e7d52fc3d3f3d84e5ba095c977fc6d42ab30", "filename": "gcc/testsuite/g++.old-deja/g++.other/anon6.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon6.C?ref=55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "patch": "@@ -0,0 +1,36 @@\n+extern \"C\" void abort ();\n+\n+struct A {\n+  union {\n+    int a;\n+    double b;\n+    int d;\n+  };\n+  int c;\n+};\n+\n+struct B : public A {\n+  union {\n+    double a;\n+    void *c;\n+  };\n+  float b;\n+  int e;\n+};\n+\n+int main ()\n+{\n+  struct B b;\n+\n+  b.a = 1.5;\n+  b.b = 2.5;\n+  b.d = 1;\n+  b.e = 2;\n+  if (b.a != 1.5 || b.b != 2.5 || b.d != 1 || b.e != 2)\n+    abort ();\n+  b.c = &b.a;\n+  b.d = b.e;\n+  if (b.c != &b.a || b.d != 2)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "ba624a059b5a6b241ae0eddd2caabd12677a87c7", "filename": "gcc/testsuite/g++.old-deja/g++.other/anon7.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon7.C?ref=55de1b6662d54cde8f407bd4d1f3e10de3a6fa9f", "patch": "@@ -0,0 +1,24 @@\n+// Build don't link:\n+\n+struct A {\n+  union {\n+    int a;\t// ERROR - conflicts with previous declaration\n+  };\n+  int a;\t// ERROR - \n+};\n+\n+struct B {\n+  int b;\t// ERROR - conflicts with previous declaration\n+  union {\n+    int b;\t// ERROR - duplicate member\n+  };\t\t// ERROR - declaration of\n+};\n+\n+struct C {\n+  union {\n+    int c;\t// ERROR - conflicts with previous declaration\n+  };\n+  union {\n+    int c;\t// ERROR - duplicate member\n+  };\t\t// ERROR - declaration of\n+};"}]}