{"sha": "c1a7b241d1701d9914ee0eb394d6c84d8d163e9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhN2IyNDFkMTcwMWQ5OTE0ZWUwZWIzOTRkNmM4NGQ4ZDE2M2U5ZA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2001-11-14T23:37:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-11-14T23:37:31Z"}, "message": "* gcc.c-torture/execute/string-opt-13.c: New testcase.\n\nFrom-SVN: r47030", "tree": {"sha": "e0da2d93fbeac604d3d2642412cc91cddf5e0ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0da2d93fbeac604d3d2642412cc91cddf5e0ee5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1a7b241d1701d9914ee0eb394d6c84d8d163e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a7b241d1701d9914ee0eb394d6c84d8d163e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1a7b241d1701d9914ee0eb394d6c84d8d163e9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a7b241d1701d9914ee0eb394d6c84d8d163e9d/comments", "author": null, "committer": null, "parents": [{"sha": "d59b3b679c686f86430a4a6fc5f24058ce2e5174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59b3b679c686f86430a4a6fc5f24058ce2e5174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59b3b679c686f86430a4a6fc5f24058ce2e5174"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "f711835628fc91b7b4f680bba50d0cea26f88cc1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7b241d1701d9914ee0eb394d6c84d8d163e9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7b241d1701d9914ee0eb394d6c84d8d163e9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1a7b241d1701d9914ee0eb394d6c84d8d163e9d", "patch": "@@ -1,3 +1,7 @@\n+2001-11-14  Roger Sayle <roger@eyesopen.com>\n+\n+\t* gcc.c-torture/execute/string-opt-13.c: New testcase.\n+\n 2001-11-14  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* g++.dg/init/array2.C: New test."}, {"sha": "3060f911ff3f00fc1ab10d1e3ffab80158db2340", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-13.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7b241d1701d9914ee0eb394d6c84d8d163e9d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7b241d1701d9914ee0eb394d6c84d8d163e9d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-13.c?ref=c1a7b241d1701d9914ee0eb394d6c84d8d163e9d", "patch": "@@ -0,0 +1,58 @@\n+/* Copyright (C) 2001  Free Software Foundation.\n+\n+   Ensure all builtin strlen comparisons against zero are optimized\n+   and perform correctly. The multiple calls to strcpy are to prevent\n+   the potentially \"pure\" strlen calls from being removed by CSE.\n+\n+   Written by Roger Sayle, 11/02/2001.  */\n+\n+extern void abort (void);\n+typedef __SIZE_TYPE__ size_t;\n+extern size_t strlen (const char *);\n+extern char *strcpy (char *, const char *);\n+\n+int\n+main ()\n+{\n+  char str[8];\n+  char *ptr;\n+\n+  ptr = str;\n+  strcpy (ptr, \"nts\");\n+  if (strlen (ptr) == 0)\n+    abort ();\n+\n+  strcpy (ptr, \"nts\");\n+  if (strlen (ptr) < 1)\n+    abort ();\n+\n+  strcpy (ptr, \"nts\");\n+  if (strlen (ptr) <= 0)\n+    abort ();\n+\n+  strcpy (ptr, \"nts\");\n+  if (strlen (ptr+3) != 0)\n+    abort ();\n+\n+  strcpy (ptr, \"nts\");\n+  if (strlen (ptr+3) > 0)\n+    abort ();\n+\n+  strcpy (ptr, \"nts\");\n+  if (strlen (str+3) >= 1)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+#ifdef __OPTIMIZE__\n+/* When optimizing, all the above cases should be transformed into\n+   something else.  So any remaining calls to the original function\n+   should abort.  */\n+static size_t\n+strlen (const char *s)\n+{\n+  abort ();\n+}\n+#endif\n+"}]}