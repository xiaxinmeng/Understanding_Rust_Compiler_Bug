{"sha": "544d6fa4571aea303160fcc3053ce474c6df94f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ0ZDZmYTQ1NzFhZWEzMDMxNjBmY2MzMDUzY2U0NzRjNmRmOTRmMg==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-06-09T18:30:12Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2001-06-09T18:30:12Z"}, "message": "vax.h (NOTICE_UPDATE_CC): Set CC_NO_OVERFLOW in cc_status.flags for integer operations that don't update...\n\n\t* vax.h (NOTICE_UPDATE_CC): Set CC_NO_OVERFLOW in cc_status.flags\n\tfor integer operations that don't update C bit.\n\nFrom-SVN: r43094", "tree": {"sha": "7e211398282ec8e4761383de6324881ab1de9cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e211398282ec8e4761383de6324881ab1de9cc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/544d6fa4571aea303160fcc3053ce474c6df94f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544d6fa4571aea303160fcc3053ce474c6df94f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/544d6fa4571aea303160fcc3053ce474c6df94f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544d6fa4571aea303160fcc3053ce474c6df94f2/comments", "author": null, "committer": null, "parents": [{"sha": "ed459a390f898b3deb080657bbc23fc68c03657c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed459a390f898b3deb080657bbc23fc68c03657c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed459a390f898b3deb080657bbc23fc68c03657c"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "1cafdce267468a91529b5d9aa69016dd5db6adc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544d6fa4571aea303160fcc3053ce474c6df94f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544d6fa4571aea303160fcc3053ce474c6df94f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=544d6fa4571aea303160fcc3053ce474c6df94f2", "patch": "@@ -1,3 +1,8 @@\n+2001-06-09  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* vax.h (NOTICE_UPDATE_CC): Set CC_NO_OVERFLOW in cc_status.flags\n+\tfor integer operations that don't update C bit.\n+\n 2001-06-09  Nicola Pero <nicola@brainstorm.co.uk>\n \n \t* gthr-posix.h (__gthread_objc_init_thread_system): If"}, {"sha": "a3a9dde538db0f630055511b0f0174c38dcf8bd3", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544d6fa4571aea303160fcc3053ce474c6df94f2/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544d6fa4571aea303160fcc3053ce474c6df94f2/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=544d6fa4571aea303160fcc3053ce474c6df94f2", "patch": "@@ -986,7 +986,30 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n \tCC_STATUS_INIT;\t\t\t\t\t\t\\\n       else if (GET_CODE (SET_DEST (EXP)) != ZERO_EXTRACT\t\\\n \t       && GET_CODE (SET_DEST (EXP)) != PC)\t\t\\\n-\t{ cc_status.flags = 0;\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  cc_status.flags = 0;\t\t\t\t\t\\\n+\t  /* The integer operations below don't set carry or\t\\\n+\t     set it in an incompatible way.  That's ok though\t\\\n+\t     as the Z bit is all we need when doing unsigned\t\\\n+\t     comparisons on the result of these insns (since\t\\\n+\t     they're always with 0).  Set CC_NO_OVERFLOW to\t\\\n+\t     generate the correct unsigned branches.  */\t\\\n+\t  switch (GET_CODE (SET_SRC (EXP)))\t\t\t\\\n+\t    {\t\t\t\t\t\t\t\\\n+\t    case NEG:\t\t\t\t\t\t\\\n+\t      if (GET_MODE_CLASS (GET_MODE (EXP)) == MODE_FLOAT)\\\n+\t \tbreak;\t\t\t\t\t\t\\\n+\t    case AND:\t\t\t\t\t\t\\\n+\t    case IOR:\t\t\t\t\t\t\\\n+\t    case XOR:\t\t\t\t\t\t\\\n+\t    case NOT:\t\t\t\t\t\t\\\n+\t    case MEM:\t\t\t\t\t\t\\\n+\t    case REG:\t\t\t\t\t\t\\\n+\t      cc_status.flags = CC_NO_OVERFLOW;\t\t\t\\\n+\t      break;\t\t\t\t\t\t\\\n+\t    default:\t\t\t\t\t\t\\\n+\t      break;\t\t\t\t\t\t\\\n+\t    }\t\t\t\t\t\t\t\\\n \t  cc_status.value1 = SET_DEST (EXP);\t\t\t\\\n \t  cc_status.value2 = SET_SRC (EXP); } }\t\t\t\\\n   else if (GET_CODE (EXP) == PARALLEL\t\t\t\t\\"}]}