{"sha": "d36ff2b46bf0c44b5f8c60710b196777e8880285", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM2ZmYyYjQ2YmYwYzQ0YjVmOGM2MDcxMGIxOTY3NzdlODg4MDI4NQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-20T22:43:39Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-20T22:43:39Z"}, "message": "acinclude.m4 (LIBGFOR_TARGET_ILP32): Remove test.\n\n\t* acinclude.m4 (LIBGFOR_TARGET_ILP32): Remove test.\n\t* configure.ac: Don't call LIBGFOR_TARGET_ILP32.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\nFrom-SVN: r128635", "tree": {"sha": "79eb99ac24c58ed3b08976a18e18f7250e208496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79eb99ac24c58ed3b08976a18e18f7250e208496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d36ff2b46bf0c44b5f8c60710b196777e8880285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d36ff2b46bf0c44b5f8c60710b196777e8880285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d36ff2b46bf0c44b5f8c60710b196777e8880285", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d36ff2b46bf0c44b5f8c60710b196777e8880285/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02668aba7ebce73b74ec9e5f9af08637fcedc5a7"}], "stats": {"total": 114, "additions": 7, "deletions": 107}, "files": [{"sha": "1addbb746fc4a7d85db40a05fe8a480b1898d67d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d36ff2b46bf0c44b5f8c60710b196777e8880285", "patch": "@@ -1,3 +1,10 @@\n+2007-09-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* acinclude.m4 (LIBGFOR_TARGET_ILP32): Remove test.\n+\t* configure.ac: Don't call LIBGFOR_TARGET_ILP32.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n 2007-09-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libfortran/21185"}, {"sha": "6cc10408d963bc2e4cee80ba75d1175598c9706d", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=d36ff2b46bf0c44b5f8c60710b196777e8880285", "patch": "@@ -27,26 +27,6 @@ AC_DEFUN([AC_LIBTOOL_DLOPEN])\n AC_DEFUN([AC_PROG_LD])\n ])\n \n-dnl Check whether the target is ILP32.\n-AC_DEFUN([LIBGFOR_TARGET_ILP32], [\n-  AC_CACHE_CHECK([whether the target is ILP32], target_ilp32, [\n-  save_CFLAGS=\"$CFLAGS\"\n-  CFLAGS=\"-O2\"\n-  AC_TRY_LINK(,[\n-if (sizeof(int) == 4 && sizeof(long) == 4 && sizeof(void *) == 4)\n-  ;\n-else\n-  undefined_function ();\n-               ],\n-               target_ilp32=yes,\n-               target_ilp32=no)\n-  CFLAGS=\"$save_CFLAGS\"])\n-  if test $target_ilp32 = yes; then\n-    AC_DEFINE(TARGET_ILP32, 1,\n-      [Define to 1 if the target is ILP32.])\n-  fi\n-  ])\n-\n dnl Check whether the target supports hidden visibility.\n AC_DEFUN([LIBGFOR_CHECK_ATTRIBUTE_VISIBILITY], [\n   AC_CACHE_CHECK([whether the target supports hidden visibility],"}, {"sha": "ffa419cc76bbea4289ec74bfa66b02590730c166", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=d36ff2b46bf0c44b5f8c60710b196777e8880285", "patch": "@@ -808,9 +808,6 @@\n /* Define to 1 if the target supports #pragma weak */\n #undef SUPPORTS_WEAK\n \n-/* Define to 1 if the target is ILP32. */\n-#undef TARGET_ILP32\n-\n /* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */\n #undef TIME_WITH_SYS_TIME\n "}, {"sha": "21e1e416ef50e99ebff8b22d8b6aaad10c10bc56", "filename": "libgfortran/configure", "status": "modified", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=d36ff2b46bf0c44b5f8c60710b196777e8880285", "patch": "@@ -32250,86 +32250,6 @@ echo \"$as_me: FPU dependent file will be ${fpu_host}.h\" >&6;}\n FPU_HOST_HEADER=config/${fpu_host}.h\n \n \n-# Attempt to assert that the target is of common type in case we don't\n-# have C99 integer types at all.\n-\n-  echo \"$as_me:$LINENO: checking whether the target is ILP32\" >&5\n-echo $ECHO_N \"checking whether the target is ILP32... $ECHO_C\" >&6\n-if test \"${target_ilp32+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-\n-  save_CFLAGS=\"$CFLAGS\"\n-  CFLAGS=\"-O2\"\n-  if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-if (sizeof(int) == 4 && sizeof(long) == 4 && sizeof(void *) == 4)\n-  ;\n-else\n-  undefined_function ();\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  target_ilp32=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-target_ilp32=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-  CFLAGS=\"$save_CFLAGS\"\n-fi\n-echo \"$as_me:$LINENO: result: $target_ilp32\" >&5\n-echo \"${ECHO_T}$target_ilp32\" >&6\n-  if test $target_ilp32 = yes; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define TARGET_ILP32 1\n-_ACEOF\n-\n-  fi\n-\n-\n # Check out attribute support.\n \n   echo \"$as_me:$LINENO: checking whether the target supports hidden visibility\" >&5"}, {"sha": "78dce5519f48a48b873442baf662ffc32d652598", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36ff2b46bf0c44b5f8c60710b196777e8880285/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=d36ff2b46bf0c44b5f8c60710b196777e8880285", "patch": "@@ -404,10 +404,6 @@ AC_MSG_NOTICE([FPU dependent file will be ${fpu_host}.h])\n FPU_HOST_HEADER=config/${fpu_host}.h\n AC_SUBST(FPU_HOST_HEADER)\n \n-# Attempt to assert that the target is of common type in case we don't\n-# have C99 integer types at all.\n-LIBGFOR_TARGET_ILP32\n-\n # Check out attribute support.\n LIBGFOR_CHECK_ATTRIBUTE_VISIBILITY\n LIBGFOR_CHECK_ATTRIBUTE_DLLEXPORT"}]}