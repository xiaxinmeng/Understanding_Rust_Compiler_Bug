{"sha": "90d80eac40ba720fdf78d77f2fd6ab658833e00d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBkODBlYWM0MGJhNzIwZmRmNzhkNzdmMmZkNmFiNjU4ODMzZTAwZA==", "commit": {"author": {"name": "Dominique d'Humieres", "email": "dominiq@lps.ens.fr", "date": "2007-05-14T00:12:39Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-05-14T00:12:39Z"}, "message": "alloc_comp_basics_1.f90: Fix dg directive.\n\n2007-05-13  Dominique d'Humi\u00e8res  <dominiq@lps.ens.fr>\n\n\t* alloc_comp_basics_1.f90: Fix dg directive.\n\t* altreturn_3.f90: Likewise.\n\t* assumed_dummy_1.f90: Likewise.\n\t* default_numeric_type_1.f90: Likewise.\n\t* inquire_iolength.f90: Likewise.\n\t* module_naming_1.f90: Likewise.\n\t* oldstyle_2.f90: Likewise.\n\t* operator_2.f90: Likewise.\n\t* parameter_array_element_1.f90: Likewise.\n\t* used_types_11.f90: Likewise.\n\t* zero_array_components_1.f90: Likewise.\n\t* fmt_zero_precision.f90: Fix dg-output directives.\n\t* parameter_array_dummy.f90: Likewise.\n\t* real_const_3.f90: Likewise.\n\nFrom-SVN: r124658", "tree": {"sha": "6788b6ce891d7d5af18f65bff8f57e19307380f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6788b6ce891d7d5af18f65bff8f57e19307380f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90d80eac40ba720fdf78d77f2fd6ab658833e00d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d80eac40ba720fdf78d77f2fd6ab658833e00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d80eac40ba720fdf78d77f2fd6ab658833e00d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d80eac40ba720fdf78d77f2fd6ab658833e00d/comments", "author": {"login": "DominiquedHumieres", "id": 18394944, "node_id": "MDQ6VXNlcjE4Mzk0OTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/18394944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DominiquedHumieres", "html_url": "https://github.com/DominiquedHumieres", "followers_url": "https://api.github.com/users/DominiquedHumieres/followers", "following_url": "https://api.github.com/users/DominiquedHumieres/following{/other_user}", "gists_url": "https://api.github.com/users/DominiquedHumieres/gists{/gist_id}", "starred_url": "https://api.github.com/users/DominiquedHumieres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DominiquedHumieres/subscriptions", "organizations_url": "https://api.github.com/users/DominiquedHumieres/orgs", "repos_url": "https://api.github.com/users/DominiquedHumieres/repos", "events_url": "https://api.github.com/users/DominiquedHumieres/events{/privacy}", "received_events_url": "https://api.github.com/users/DominiquedHumieres/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4076455d9b899d573198d0f7296cb8b5a4fb3ddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4076455d9b899d573198d0f7296cb8b5a4fb3ddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4076455d9b899d573198d0f7296cb8b5a4fb3ddb"}], "stats": {"total": 151, "additions": 86, "deletions": 65}, "files": [{"sha": "fe908d11df102bc2ec98c5721534027d5b25acbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,3 +1,20 @@\n+2007-05-13  Dominique d'Humi\u00e8res  <dominiq@lps.ens.fr>\n+\n+\t* alloc_comp_basics_1.f90: Fix dg directive.\n+\t* altreturn_3.f90: Likewise.\n+\t* assumed_dummy_1.f90: Likewise.\n+\t* default_numeric_type_1.f90: Likewise.\n+\t* inquire_iolength.f90: Likewise.\n+\t* module_naming_1.f90: Likewise.\n+\t* oldstyle_2.f90: Likewise.\n+\t* operator_2.f90: Likewise.\n+\t* parameter_array_element_1.f90: Likewise.\n+\t* used_types_11.f90: Likewise.\n+\t* zero_array_components_1.f90: Likewise.\n+\t* fmt_zero_precision.f90: Fix dg-output directives.\n+\t* parameter_array_dummy.f90: Likewise.\n+\t* real_const_3.f90: Likewise.\n+\n 2007-05-13  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* gcc.dg/vect/no-section-anchors-vect-69.c: Fix outcome."}, {"sha": "7099001dc7ffc34311ebaa38fa84f29dde6be15d", "filename": "gcc/testsuite/gfortran.dg/alloc_comp_basics_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_basics_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_basics_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_basics_1.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run}\n+! { dg-do run }\n ! { dg-options \"-O2 -fdump-tree-original\" }\n !\n ! Check some basic functionality of allocatable components, including that they"}, {"sha": "999ada87a0758c6287af9a961dddb7be9458856d", "filename": "gcc/testsuite/gfortran.dg/altreturn_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_3.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run}\n+! { dg-do run }\n ! Tests the fix for PR30236, which was due to alternate returns\n ! in generic interfaces causing a segfault.  They now work\n ! correctly."}, {"sha": "f8d7fea31a619684172d7181f9e9d43ce9b2f46f", "filename": "gcc/testsuite/gfortran.dg/assumed_dummy_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_dummy_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_dummy_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_dummy_1.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run}\n+! { dg-do run }\n ! Tests the fix for PRs 19358, 19477, 21211 and 21622.\n !\n ! Note that this tests only the valid cases with explicit interfaces."}, {"sha": "62d633d3f5c394f53cd46240f3d0cbc95fe8db7c", "filename": "gcc/testsuite/gfortran.dg/default_numeric_type_1.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_numeric_type_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_numeric_type_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_numeric_type_1.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do compile}\n+! { dg-do compile }\n ! { dg-options \"-fdump-tree-original\" }\n ! Tests the fix for PR 31222, in which the type of the arguments of abs\n ! and int below were not detected to be of default numeric type..\n@@ -16,3 +16,4 @@ subroutine mysub1(a,b,mode,dis)\n program testprog\n   call mysub1((/1.,2./),(/1.,2.,3./),-2, 3.2)\n end\n+! { dg-final { cleanup-tree-dump \"original\" } }"}, {"sha": "62e5238958b3e453f2f84f7780bc24b751b9052c", "filename": "gcc/testsuite/gfortran.dg/fmt_zero_precision.f90", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_zero_precision.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_zero_precision.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_zero_precision.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -2,8 +2,8 @@\n ! PR28354 Incorrect rounding of .99999 with f3.0 format specifier\n ! PR30910 ES format not quite right...\n ! Test case derived from PR. Submitted by Jerry DeLisle <jvdelisle@gcc.gnu.org>\n-  write(*,50) -0.99999\n   write(*,50) 0.99999\n+  write(*,50) -0.99999\n   write(*,50) -9.0\n   write(*,50) -0.99\n   write(*,50) -0.999\n@@ -46,40 +46,40 @@\n  250   format(1pe7.0,\"<\")\n  300   format(1pe6.0,\"<\")\n   end\n-! { dg-output \"-1.<\"\n-! { dg-output \" 1.<\"\n-! { dg-output \"-9.<\"\n-! { dg-output \"-1.<\"\n-! { dg-output \"-1.<\"\n-! { dg-output \"-1.<\"\n-! { dg-output \"-1.<\"\n-! { dg-output \" 0.<\"\n-! { dg-output \"     38.<\"\n-! { dg-output \"  10345.<\"\n-! { dg-output \"    334.<\"\n-! { dg-output \"    333.<\"\n-! { dg-output \"1.E-01\"\n-! { dg-output \"-1.E+00<\"\n-! { dg-output \" 1.E+00<\"\n-! { dg-output \"-9.E+00<\"\n-! { dg-output \"-1.E+00<\"\n-! { dg-output \"-1.E+00<\"\n-! { dg-output \"-1.E+00<\"\n-! { dg-output \"-6.E-01<\"\n-! { dg-output \"-5.E-01<\"\n-! { dg-output \"  4.E+01<\"\n-! { dg-output \"  1.E+04<\"\n-! { dg-output \"  3.E+02<\"\n-! { dg-output \"  3.E+02<\"\n-! { dg-output \"-1.E+00<\"\n-! { dg-output \" 1.E+00<\"\n-! { dg-output \"-9.E+00<\"\n-! { dg-output \"-1.E+00<\"\n-! { dg-output \"-1.E+00<\"\n-! { dg-output \"-1.E+00<\"\n-! { dg-output \"-6.E-01<\"\n-! { dg-output \"-5.E-01<\"\n-! { dg-output \"4.E+01<\"\n-! { dg-output \"1.E+04<\"\n-! { dg-output \"3.E+02<\"\n-! { dg-output \"3.E+02<\"\n+! { dg-output \" 1\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-9\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \" 0\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"     38\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"  10345\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"    334\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"    333\\\\.<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"1\\\\.E-01(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \" 1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-9\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-6\\\\.E-01<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-5\\\\.E-01<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"  4\\\\.E\\\\+01<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"  1\\\\.E\\\\+04<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"  3\\\\.E\\\\+02<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"  3\\\\.E\\\\+02<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \" 1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-9\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-1\\\\.E\\\\+00<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-6\\\\.E-01<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"-5\\\\.E-01<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"4\\\\.E\\\\+01<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"1\\\\.E\\\\+04<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"3\\\\.E\\\\+02<(\\n|\\r\\n|\\r)\" }\n+! { dg-output \"3\\\\.E\\\\+02<(\\n|\\r\\n|\\r)\" }"}, {"sha": "b6dfee249a938587168337939b6c5bbf8565d35d", "filename": "gcc/testsuite/gfortran.dg/inquire_iolength.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_iolength.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_iolength.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_iolength.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do compile}\n+! { dg-do compile }\n ! { dg-options \"-std=f95\" }\n ! PR30014 IOLENGTH does not handle KIND=8.  This patch checks the constraints.\n ! Submitted by Jerry DeLisle  <jvdelisle@gcc.gnu.org>"}, {"sha": "7b9df0a99a94ac330dc523539b80551a0caeb583", "filename": "gcc/testsuite/gfortran.dg/module_naming_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_naming_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_naming_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_naming_1.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -29,3 +29,4 @@ subroutine m3()\n     ! mangled to __m2_mod_m2_MOD_m3\n   end subroutine m3\n end module m2_MOD_m2\n+! { dg-final { cleanup-modules \"m1 m1__m2 m2 m2_MOD_m2\" } }"}, {"sha": "8d84028880197bbfc7aae530ed8c03f9ee958a72", "filename": "gcc/testsuite/gfortran.dg/oldstyle_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Foldstyle_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Foldstyle_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Foldstyle_2.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do compile}\n+! { dg-do compile }\n subroutine foo(i) ! { dg-error \"DATA attribute\" }\n   integer i /10/\n end subroutine foo"}, {"sha": "0e560dad7945bc4af1cc2027639447b54049eec7", "filename": "gcc/testsuite/gfortran.dg/operator_2.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Foperator_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Foperator_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Foperator_2.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -38,3 +38,4 @@ function f3(a,b) result (c)\n  end function f3\n \n end\n+! { dg-final { cleanup-modules \"foo\" } }"}, {"sha": "d9a43432fd58b946bc22864434c6030ffedc8200", "filename": "gcc/testsuite/gfortran.dg/parameter_array_dummy.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_dummy.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_dummy.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_dummy.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run}\n+! { dg-do run }\n ! PR fortran/31188\n program foo_mod\n   implicit none\n@@ -14,8 +14,8 @@ subroutine concat(i, ivec)\n     write (*,*) i, \"a\" // letters(ivec)\n   end subroutine concat\n end program foo_mod\n-! { dg-output \"1 aa\" }\n-! { dg-output \"2 ab\" }\n-! { dg-output \"3 aaab\" }\n-! { dg-output \"4 abaa\" }\n-! { dg-output \"5 ababab\" }\n+! { dg-output \" *1 aa(\\n|\\r\\n|\\r)\" }\n+! { dg-output \" *2 ab(\\n|\\r\\n|\\r)\" }\n+! { dg-output \" *3 aaab(\\n|\\r\\n|\\r)\" }\n+! { dg-output \" *4 abaa(\\n|\\r\\n|\\r)\" }\n+! { dg-output \" *5 ababab(\\n|\\r\\n|\\r)\" }"}, {"sha": "f5a33f8b0db6f6cccf914991840cc179365b3999", "filename": "gcc/testsuite/gfortran.dg/parameter_array_element_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_element_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_element_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_element_1.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do compile}\n+! { dg-do compile }\n ! { dg-options \"-fdump-tree-original\" }\n ! Tests the fix for PR 30872, in which the array element references bo(1,1) etc.\n ! would be wrong for rank > 1."}, {"sha": "379ecb439ee3173a315b165a33850ac5f46d271a", "filename": "gcc/testsuite/gfortran.dg/real_const_3.f90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_const_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_const_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_const_3.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -26,16 +26,16 @@ program main\n   print *, z4\n \n end program main\n-!{ dg-output \"      +Infinity\"\n-!{ dg-output \"   0.000000\"\n-!{ dg-output \"      -Infinity\"\n-!{ dg-output \"            NaN\"\n-!{ dg-output \"            NaN\"\n-!{ dg-output \"      -Infinity\"\n-!{ dg-output \"      -Infinity\"\n-!{ dg-output \"      +Infinity\"\n-!{ dg-output \"            NaN\"\n-!{ dg-output \" (           NaN,           NaN)\"\n-!{ dg-output \" (           NaN,           NaN)\"\n-!{ dg-output \" (     +Infinity,     -Infinity)\"\n-!{ dg-output \" (  0.000000    ,  0.000000    )\"\n+!{ dg-output \"      \\\\+Infinity(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \"   0.000000    (\\n|\\r\\n|\\r)\" }\n+!{ dg-output \"      -Infinity(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \"            NaN(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \"            NaN(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \"      -Infinity(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \"      -Infinity(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \"      \\\\+Infinity(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \"            NaN(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \" \\\\(           NaN,           NaN\\\\)(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \" \\\\(           NaN,           NaN\\\\)(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \" \\\\(     \\\\+Infinity,     -Infinity\\\\)(\\n|\\r\\n|\\r)\" }\n+!{ dg-output \" \\\\(  0.000000    ,  0.000000    \\\\)(\\n|\\r\\n|\\r)\" }"}, {"sha": "b820dc5e249aa56eadd27a7885917357441c1e55", "filename": "gcc/testsuite/gfortran.dg/used_types_11.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_types_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_types_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_types_11.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -35,3 +35,4 @@ end subroutine bar\n   x => foo ()\n   print *, associated (x)\n end\n+! { dg-final { cleanup-modules \"A B\" } }"}, {"sha": "b1b8b5c69aba9c3a0e27288c84f184683143b221", "filename": "gcc/testsuite/gfortran.dg/zero_array_components_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_array_components_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d80eac40ba720fdf78d77f2fd6ab658833e00d/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_array_components_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_array_components_1.f90?ref=90d80eac40ba720fdf78d77f2fd6ab658833e00d", "patch": "@@ -1,4 +1,4 @@\n-! { dg do-run }\n+! { dg-do run }\n ! Tests the fix for PR31620, in which zeroing the component a for the array,\n ! would zero all the components of the array.\n !"}]}