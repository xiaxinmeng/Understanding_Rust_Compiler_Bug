{"sha": "e0a5daf81f2c79a0275eccd7c1a25349990a7a4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhNWRhZjgxZjJjNzlhMDI3NWVjY2Q3YzFhMjUzNDk5OTBhN2E0ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-17T11:56:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-17T13:27:32Z"}, "message": "middle-end/100582 - fix array_at_struct_end_p for vector indexing\n\nVector indexing leaves us with ARRAY_REFs of VIEW_CONVERT_EXPRs,\nsth which array_at_struct_end_p considers a array-at-struct-end\neven when there's an underlying decl visible.  The following fixes\nthe latter.\n\n2021-05-17  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/100582\n\t* tree.c (array_at_struct_end_p): Get to the base of the\n\treference before looking for the underlying decl.\n\n\t* gcc.target/i386/pr100582.c: New testcase.", "tree": {"sha": "93eb4a844627d64ca4589144a94d9ae784b2d516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93eb4a844627d64ca4589144a94d9ae784b2d516"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0a5daf81f2c79a0275eccd7c1a25349990a7a4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a5daf81f2c79a0275eccd7c1a25349990a7a4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a5daf81f2c79a0275eccd7c1a25349990a7a4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a5daf81f2c79a0275eccd7c1a25349990a7a4d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdd8e3dd60c4f6080df74fe02b6579451fda6a21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd8e3dd60c4f6080df74fe02b6579451fda6a21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd8e3dd60c4f6080df74fe02b6579451fda6a21"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "9520fe7a197df8c469e4688f3c5cef8bd1e4f46a", "filename": "gcc/testsuite/gcc.target/i386/pr100582.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5daf81f2c79a0275eccd7c1a25349990a7a4d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100582.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5daf81f2c79a0275eccd7c1a25349990a7a4d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100582.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100582.c?ref=e0a5daf81f2c79a0275eccd7c1a25349990a7a4d", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx2\" } */\n+\n+typedef unsigned char v32qi __attribute__((vector_size(32)));\n+\n+v32qi\n+f2 (v32qi x, v32qi a, v32qi b)\n+{\n+    v32qi e;\n+  for (int i = 0; i != 32; i++)\n+     e[i] = x[i] ? a[i] : b[i];\n+\n+  return e;\n+}\n+\n+/* { dg-final { scan-assembler-times \"pblendvb\" 1 } } */"}, {"sha": "8afba598eb5e46695b2621b2c8ad5da9bb5db1c6", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a5daf81f2c79a0275eccd7c1a25349990a7a4d/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a5daf81f2c79a0275eccd7c1a25349990a7a4d/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=e0a5daf81f2c79a0275eccd7c1a25349990a7a4d", "patch": "@@ -12550,13 +12550,11 @@ array_at_struct_end_p (tree ref)\n       || ! TYPE_MAX_VALUE (TYPE_DOMAIN (atype)))\n     return true;\n \n-  if (TREE_CODE (ref) == MEM_REF\n-      && TREE_CODE (TREE_OPERAND (ref, 0)) == ADDR_EXPR)\n-    ref = TREE_OPERAND (TREE_OPERAND (ref, 0), 0);\n-\n   /* If the reference is based on a declared entity, the size of the array\n      is constrained by its given domain.  (Do not trust commons PR/69368).  */\n-  if (DECL_P (ref)\n+  ref = get_base_address (ref);\n+  if (ref\n+      && DECL_P (ref)\n       && !(flag_unconstrained_commons\n \t   && VAR_P (ref) && DECL_COMMON (ref))\n       && DECL_SIZE_UNIT (ref)"}]}