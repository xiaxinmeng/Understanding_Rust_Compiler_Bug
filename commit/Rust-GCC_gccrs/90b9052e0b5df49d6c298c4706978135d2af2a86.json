{"sha": "90b9052e0b5df49d6c298c4706978135d2af2a86", "node_id": "C_kwDOANBUbNoAKDkwYjkwNTJlMGI1ZGY0OWQ2YzI5OGM0NzA2OTc4MTM1ZDJhZjJhODY", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2022-11-02T23:02:34Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-14T13:46:50Z"}, "message": "ada: Crash on applying 'Pos to expression of a type derived from a formal type\n\nThe compiler crashes when trying to do a static check for a range violation\nin a type conversion of a Pos attribute applied to a prefix of a type derived\nfrom a generic formal discrete type. This optimization was suppressed in the\ncase of formal types, because the upper bound may not be known, but it also\nneeds to be suppressed for types derived from formal types.\n\ngcc/ada/\n\n\t* checks.adb\n\t(Apply_Type_Conversion_Checks): Apply Root_Type to the type of the\n\tprefix of a Pos attribute when checking whether the type is a\n\tformal discrete type.", "tree": {"sha": "3b84aec76240802c476f3ae5e78994ac1ea61762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b84aec76240802c476f3ae5e78994ac1ea61762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90b9052e0b5df49d6c298c4706978135d2af2a86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b9052e0b5df49d6c298c4706978135d2af2a86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90b9052e0b5df49d6c298c4706978135d2af2a86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b9052e0b5df49d6c298c4706978135d2af2a86/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a2304a04925e43a50a345fb6a0b0c8ba180a973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2304a04925e43a50a345fb6a0b0c8ba180a973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2304a04925e43a50a345fb6a0b0c8ba180a973"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "2a45f4d49b024a26691dec35caa042f3f6b7db9d", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b9052e0b5df49d6c298c4706978135d2af2a86/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b9052e0b5df49d6c298c4706978135d2af2a86/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=90b9052e0b5df49d6c298c4706978135d2af2a86", "patch": "@@ -3789,13 +3789,14 @@ package body Checks is\n                --  Universal_Integer. So in numeric conversions it is usually\n                --  within range of the target integer type. Use the static\n                --  bounds of the base types to check. Disable this optimization\n-               --  in case of a generic formal discrete type, because we don't\n-               --  necessarily know the upper bound yet.\n+               --  in case of a descendant of a generic formal discrete type,\n+               --  because we don't necessarily know the upper bound yet.\n \n                if Nkind (Expr) = N_Attribute_Reference\n                  and then Attribute_Name (Expr) = Name_Pos\n                  and then Is_Enumeration_Type (Etype (Prefix (Expr)))\n-                 and then not Is_Generic_Type (Etype (Prefix (Expr)))\n+                 and then\n+                   not Is_Generic_Type (Root_Type (Etype (Prefix (Expr))))\n                  and then Is_Integer_Type (Target_Type)\n                then\n                   declare"}]}