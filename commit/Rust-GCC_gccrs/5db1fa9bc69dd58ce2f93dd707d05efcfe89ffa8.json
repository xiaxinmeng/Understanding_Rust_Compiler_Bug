{"sha": "5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiMWZhOWJjNjlkZDU4Y2UyZjkzZGQ3MDdkMDVlZmNmZTg5ZmZhOA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-08-13T03:12:23Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-08-13T03:12:23Z"}, "message": "gcc.dg/pr94600-5.c .. -8.c: Align struct t0 explictly, as a type, PR middle-end/94600\n\nThe bitfield-struct t0 in gcc.dg/pr94600-1.c ..-4.c is assigned to a\npointer that is a (volatile-and-pointer-)cast literal, so gcc doesn't\nneed to be otherwise told that the address is aligned.  But, variants\npr94600-5.c ..-8.c are assigned through a \"volatile t0 *\", and rely on\nthe *type* being naturally aligned, or that the machine has\nnon-strict-alignment moves.\n\nUnfortunately, systems exist (for some definitions of exist) where\nsuch structs aren't always naturally aligned, for example if it\ncontains only (small) bitfields, even though the size is a naturally\naccessible size.  Specifically, the mmix-knuth-mmixware port has only\n*byte* alignment for this struct.  (If an int is added to the struct,\nalignment is promoted.)  IOW, a prerequisite of the test is false: the\nstruct doesn't have the same alignment as an integer of the same size.\nThe effect is assignment in byte-size pieces, and the test fails.\n(For a non-volatile assignment, memcpy is called.)  That's easily\nfixable by defining the type as having a specific alignment.  This is\nalso closer to the type in the original code, and also as the first\nvariants aren't affected, no second thought or re-visit of pre-fixed\ncompiler is needed.  I don't plan to back-port this to gcc-10 branch\nhowever.  I did sanity-check that the tests still pass on\nppc64le-linux.\n\ngcc/testsuite:\n\n\tPR middle-end/94600\n\t* gcc.dg/pr94600-5.c, gcc.dg/pr94600-6.c, gcc.dg/pr94600-7.c,\n\tgcc.dg/pr94600-8.c: Align t0 to 4-byte boundary.", "tree": {"sha": "921daa492fa48b5dcc4d39222c47b353c963cd1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/921daa492fa48b5dcc4d39222c47b353c963cd1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ec803e768a820c9208fea2e8b144ee359379139", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec803e768a820c9208fea2e8b144ee359379139", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ec803e768a820c9208fea2e8b144ee359379139"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3be0249273e30c1bd59386f997794b457f94e146", "filename": "gcc/testsuite/gcc.dg/pr94600-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-5.c?ref=5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "patch": "@@ -9,7 +9,7 @@ typedef struct {\n   unsigned int f1 : 11;\n   unsigned int f2 : 10;\n   unsigned int f3 : 7;\n-} t0;\n+} t0 __attribute__((__aligned__(4)));\n \n static t0 a0[] = {\n  { .f0 = 7, .f1 = 99, .f3 = 1, },"}, {"sha": "c247afef11ad71a535916970b4fc1f88bccaaeaf", "filename": "gcc/testsuite/gcc.dg/pr94600-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-6.c?ref=5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "patch": "@@ -9,7 +9,7 @@ typedef struct {\n   unsigned int f1 : 11;\n   unsigned int f2 : 10;\n   unsigned int f3 : 7;\n-} t0;\n+} t0 __attribute__((__aligned__(4)));\n \n void\n bar(volatile t0 *b)"}, {"sha": "81c5231e44c0a28c6355fe5ffeace85d03419300", "filename": "gcc/testsuite/gcc.dg/pr94600-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-7.c?ref=5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "patch": "@@ -9,7 +9,7 @@ typedef struct {\n   unsigned int f1 : 11;\n   unsigned int f2 : 10;\n   unsigned int f3 : 7;\n-} t0;\n+} t0 __attribute__((__aligned__(4)));\n \n static t0 a0[] = {\n  { .f0 = 7, .f1 = 99, .f3 = 1, },"}, {"sha": "201b2add4d93293cec9bc9663c713fc6a2a94438", "filename": "gcc/testsuite/gcc.dg/pr94600-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94600-8.c?ref=5db1fa9bc69dd58ce2f93dd707d05efcfe89ffa8", "patch": "@@ -9,7 +9,7 @@ typedef struct {\n   unsigned int f1 : 11;\n   unsigned int f2 : 10;\n   unsigned int f3 : 7;\n-} t0;\n+} t0 __attribute__((__aligned__(4)));\n \n void\n bar(volatile t0 *b)"}]}