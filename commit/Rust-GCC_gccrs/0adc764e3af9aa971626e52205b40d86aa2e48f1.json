{"sha": "0adc764e3af9aa971626e52205b40d86aa2e48f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFkYzc2NGUzYWY5YWE5NzE2MjZlNTIyMDViNDBkODZhYTJlNDhmMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T12:29:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T12:29:42Z"}, "message": "(output_toc): Use REAL_VALUE_* macros.\n\nFrom-SVN: r8985", "tree": {"sha": "c74975d208505f7b94319ef8a3565ce527f790aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c74975d208505f7b94319ef8a3565ce527f790aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0adc764e3af9aa971626e52205b40d86aa2e48f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adc764e3af9aa971626e52205b40d86aa2e48f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0adc764e3af9aa971626e52205b40d86aa2e48f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adc764e3af9aa971626e52205b40d86aa2e48f1/comments", "author": null, "committer": null, "parents": [{"sha": "8d800403fc15143793ddf05374696890c97bf561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d800403fc15143793ddf05374696890c97bf561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d800403fc15143793ddf05374696890c97bf561"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "cd6b9a143fe8e83ea4a2eef84241abc66eb5cf18", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0adc764e3af9aa971626e52205b40d86aa2e48f1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0adc764e3af9aa971626e52205b40d86aa2e48f1/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0adc764e3af9aa971626e52205b40d86aa2e48f1", "patch": "@@ -1996,17 +1996,18 @@ output_toc (file, x, labelno)\n      FP constants.  */\n   if (GET_CODE (x) == CONST_DOUBLE\n       && GET_MODE (x) == DFmode\n-      && TARGET_FLOAT_FORMAT == HOST_FLOAT_FORMAT\n-      && BITS_PER_WORD == HOST_BITS_PER_INT\n       && ! (TARGET_NO_FP_IN_TOC && ! TARGET_MINIMAL_TOC))\n     {\n+      REAL_VALUE_TYPE r;\n+      long l[2];\n+\n+      REAL_VALUE_FROM_CONST_DOUBLE (r, x);\n+      REAL_VALUE_TO_TARGET_DOUBLE (r, l);\n       if (TARGET_MINIMAL_TOC)\n-\tfprintf (file, \"\\t.long %d\\n\\t.long %d\\n\",\n-\t\t CONST_DOUBLE_LOW (x), CONST_DOUBLE_HIGH (x));\n+\tfprintf (file, \"\\t.long %ld\\n\\t.long %ld\\n\", l[0], l[1]);\n       else\n-\tfprintf (file, \"\\t.tc FD_%x_%x[TC],%d,%d\\n\",\n-\t\t CONST_DOUBLE_LOW (x), CONST_DOUBLE_HIGH (x),\n-\t\t CONST_DOUBLE_LOW (x), CONST_DOUBLE_HIGH (x));\n+\tfprintf (file, \"\\t.tc FD_%lx_%lx[TC],%ld,%ld\\n\",\n+\t\t l[0], l[1], l[0], l[1]);\n       return;\n     }\n   else if (GET_CODE (x) == CONST_DOUBLE && GET_MODE (x) == SFmode"}]}