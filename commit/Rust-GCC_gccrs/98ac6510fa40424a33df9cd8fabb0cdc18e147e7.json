{"sha": "98ac6510fa40424a33df9cd8fabb0cdc18e147e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThhYzY1MTBmYTQwNDI0YTMzZGY5Y2Q4ZmFiYjBjZGMxOGUxNDdlNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2009-07-10T23:16:31Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2009-07-10T23:16:31Z"}, "message": "thumb2.md (thumb2_cbz): Correct computation of length attribute.\n\n\t* config/arm/thumb2.md (thumb2_cbz): Correct computation of length\n\tattribute.\n\t(thumb2_cbnz): Likewise.\n\nFrom-SVN: r149501", "tree": {"sha": "cdb24a83ff997126b2f176b392ce9f7d36cbbed5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdb24a83ff997126b2f176b392ce9f7d36cbbed5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98ac6510fa40424a33df9cd8fabb0cdc18e147e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ac6510fa40424a33df9cd8fabb0cdc18e147e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98ac6510fa40424a33df9cd8fabb0cdc18e147e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ac6510fa40424a33df9cd8fabb0cdc18e147e7/comments", "author": null, "committer": null, "parents": [{"sha": "b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "50c7a1c650b8452d1b78288637d94dd5bef3357e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ac6510fa40424a33df9cd8fabb0cdc18e147e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ac6510fa40424a33df9cd8fabb0cdc18e147e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98ac6510fa40424a33df9cd8fabb0cdc18e147e7", "patch": "@@ -1,3 +1,9 @@\n+2009-07-10  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/arm/thumb2.md (thumb2_cbz): Correct computation of length\n+\tattribute.\n+\t(thumb2_cbnz): Likewise.\n+\n 2009-07-10  David Daney  <ddaney@caviumnetworks.com>\n \n \tPR target/39079"}, {"sha": "884d58c7677b13e614bb9b3a866a3967e3542823", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ac6510fa40424a33df9cd8fabb0cdc18e147e7/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ac6510fa40424a33df9cd8fabb0cdc18e147e7/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=98ac6510fa40424a33df9cd8fabb0cdc18e147e7", "patch": "@@ -1325,15 +1325,16 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_THUMB2\"\n   \"*\n-  if (get_attr_length (insn) == 2 && which_alternative == 0)\n+  if (get_attr_length (insn) == 2)\n     return \\\"cbz\\\\t%0, %l1\\\";\n   else\n     return \\\"cmp\\\\t%0, #0\\;beq\\\\t%l1\\\";\n   \"\n   [(set (attr \"length\") \n         (if_then_else\n \t    (and (ge (minus (match_dup 1) (pc)) (const_int 2))\n-\t         (le (minus (match_dup 1) (pc)) (const_int 128)))\n+\t         (le (minus (match_dup 1) (pc)) (const_int 128))\n+\t         (eq (symbol_ref (\"which_alternative\")) (const_int 0)))\n \t    (const_int 2)\n \t    (const_int 8)))]\n )\n@@ -1347,15 +1348,16 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_THUMB2\"\n   \"*\n-  if (get_attr_length (insn) == 2 && which_alternative == 0)\n+  if (get_attr_length (insn) == 2)\n     return \\\"cbnz\\\\t%0, %l1\\\";\n   else\n     return \\\"cmp\\\\t%0, #0\\;bne\\\\t%l1\\\";\n   \"\n   [(set (attr \"length\") \n         (if_then_else\n \t    (and (ge (minus (match_dup 1) (pc)) (const_int 2))\n-\t         (le (minus (match_dup 1) (pc)) (const_int 128)))\n+\t         (le (minus (match_dup 1) (pc)) (const_int 128))\n+\t         (eq (symbol_ref (\"which_alternative\")) (const_int 0)))\n \t    (const_int 2)\n \t    (const_int 8)))]\n )"}]}