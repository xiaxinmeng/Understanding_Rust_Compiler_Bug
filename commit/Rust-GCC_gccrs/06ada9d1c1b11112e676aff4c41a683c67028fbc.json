{"sha": "06ada9d1c1b11112e676aff4c41a683c67028fbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZhZGE5ZDFjMWIxMTExMmU2NzZhZmY0YzQxYTY4M2M2NzAyOGZiYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-12-09T23:04:27Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-12-09T23:04:27Z"}, "message": "(ADDRESS_COST): Define.\n\nFrom-SVN: r10692", "tree": {"sha": "f58ce8cce1878548ac3592c801c50813d2d377e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f58ce8cce1878548ac3592c801c50813d2d377e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ada9d1c1b11112e676aff4c41a683c67028fbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ada9d1c1b11112e676aff4c41a683c67028fbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ada9d1c1b11112e676aff4c41a683c67028fbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ada9d1c1b11112e676aff4c41a683c67028fbc/comments", "author": null, "committer": null, "parents": [{"sha": "b49a8bf4357f747a1677f5585148ca54e13fd6a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49a8bf4357f747a1677f5585148ca54e13fd6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b49a8bf4357f747a1677f5585148ca54e13fd6a4"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "51efc9b516c5064b37db05b30c6a19f1948b9508", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ada9d1c1b11112e676aff4c41a683c67028fbc/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ada9d1c1b11112e676aff4c41a683c67028fbc/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=06ada9d1c1b11112e676aff4c41a683c67028fbc", "patch": "@@ -1093,6 +1093,13 @@ extern int current_function_anonymous_args;\n     && GET_CODE (PATTERN (X)) != CLOBBER\t\\\n     && get_attr_type (X) == TYPE_SFUNC))\n \n+/* Compute the cost of an address.  For the SH, all valid addresses are\n+   the same cost.  */\n+/* ??? Perhaps we should make reg+reg addresses have higher cost because\n+   they add to register pressure on r0.  */\n+\n+#define ADDRESS_COST(RTX) 1\n+\n /* Compute extra cost of moving data between one register class\n    and another.\n "}]}