{"sha": "1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUxYmQxNGViMmU0NTdlOTY5YjgyZTRlMTRlN2Q0ZWZkYzRmM2ZjOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-01-28T22:08:24Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-01-28T22:08:24Z"}, "message": "ia64.c (ia64_rwreloc_section_type_flags): New.\n\n        * config/ia64/ia64.c (ia64_rwreloc_section_type_flags): New.\n        * config/ia64/hpux.h (TARGET_SECTION_TYPE_FLAGS): New.\n\nFrom-SVN: r62028", "tree": {"sha": "f2589fe0432d26e56b8bf94d6226660983e179ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2589fe0432d26e56b8bf94d6226660983e179ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8/comments", "author": null, "committer": null, "parents": [{"sha": "4ce1921a71d41e4cd8b59ed7bbdad831c4918537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce1921a71d41e4cd8b59ed7bbdad831c4918537", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce1921a71d41e4cd8b59ed7bbdad831c4918537"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "60de22da4e935ed16fa1c0a92f60e302e3e2c381", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8", "patch": "@@ -1,3 +1,8 @@\n+2003-01-28  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.c (ia64_rwreloc_section_type_flags): New.\n+\t* config/ia64/hpux.h (TARGET_SECTION_TYPE_FLAGS): New.\n+\n 2003-01-28  Richard Henderson  <rth@redhat.com>\n \n \t* cse.c (find_best_addr): Kill !ADDRESS_COST code.\n@@ -25,9 +30,9 @@\n \n 2003-01-28  Dale Johannesen  <dalej@apple.com>\n \n-        * emit-rtl.c (const_double_htab_hash):  Use mode in the hash.\n-        * loop.c (scan_loop):  Move movables on -Os rich-register targets.\n-        * config/rs6000/rs6000.md (sibcall*):  Use match_operand for LR.\n+\t* emit-rtl.c (const_double_htab_hash):  Use mode in the hash.\n+\t* loop.c (scan_loop):  Move movables on -Os rich-register targets.\n+\t* config/rs6000/rs6000.md (sibcall*):  Use match_operand for LR.\n \n 2003-01-28  Richard Henderson  <rth@redhat.com>\n \n@@ -474,13 +479,13 @@ Tue Jan 28 12:15:13 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-01-25  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-        * reload.c (maybe_memory_address_p): New function.\n-        (find_reloads_address): Use it instead of memory_address_p.\n+\t* reload.c (maybe_memory_address_p): New function.\n+\t(find_reloads_address): Use it instead of memory_address_p.\n \n 2003-01-25  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* final.c (shorten_branches): Align the address of code label\n-        when computing initial lengths and addresses.\n+\twhen computing initial lengths and addresses.\n \n 2003-01-25  Kazu Hirata  <kazu@cs.umass.edu>\n "}, {"sha": "be6b6a3618030db942009f7b0f3b7d585f3e27cb", "filename": "gcc/config/ia64/hpux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8", "patch": "@@ -176,3 +176,5 @@ do {\t\t\t\t\t\t\t\t\\\n #define TARGET_ASM_UNIQUE_SECTION  ia64_rwreloc_unique_section\n #undef  TARGET_ASM_SELECT_RTX_SECTION\n #define TARGET_ASM_SELECT_RTX_SECTION  ia64_rwreloc_select_rtx_section\n+#undef  TARGET_SECTION_TYPE_FLAGS\n+#define TARGET_SECTION_TYPE_FLAGS  ia64_rwreloc_section_type_flags"}, {"sha": "2de837413f1dfe7ff9652e88ff052c71e6f62a55", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=1e1bd14eb2e457e969b82e4e14e7d4efdc4f3fc8", "patch": "@@ -216,6 +216,9 @@ static void ia64_rwreloc_unique_section PARAMS ((tree, int))\n static void ia64_rwreloc_select_rtx_section PARAMS ((enum machine_mode, rtx,\n \t\t\t\t\t             unsigned HOST_WIDE_INT))\n      ATTRIBUTE_UNUSED;\n+static unsigned int ia64_rwreloc_section_type_flags\n+     PARAMS ((tree, const char *, int))\n+     ATTRIBUTE_UNUSED;\n \n static void ia64_hpux_add_extern_decl PARAMS ((const char *name))\n      ATTRIBUTE_UNUSED;\n@@ -8390,6 +8393,16 @@ ia64_rwreloc_select_rtx_section (mode, x, align)\n   flag_pic = save_pic;\n }\n \n+static unsigned int\n+ia64_rwreloc_section_type_flags (decl, name, reloc)\n+     tree decl;\n+     const char *name;\n+     int reloc;\n+{\n+  return default_section_type_flags_1 (decl, name, reloc, true);\n+}\n+\n+\n /* Output the assembler code for a thunk function.  THUNK_DECL is the\n    declaration for the thunk function itself, FUNCTION is the decl for\n    the target function.  DELTA is an immediate constant offset to be"}]}