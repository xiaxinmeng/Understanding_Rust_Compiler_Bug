{"sha": "2aa3110af4fe912b83644650f1543541def23372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhMzExMGFmNGZlOTEyYjgzNjQ0NjUwZjE1NDM1NDFkZWYyMzM3Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-09-26T18:16:47Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-26T18:16:47Z"}, "message": "decl.c (start_function): Set x_dont_save_pending_sizes rather than calling get_pending_sizes.\n\n\t* decl.c (start_function): Set x_dont_save_pending_sizes rather\n\tthan calling get_pending_sizes.\n\t* init.c (build_new): Don't save and restore\n\timmediate_size_expand; instead, assert that it has the expected\n\tvalue already.\n\nFrom-SVN: r29669", "tree": {"sha": "a7a875228ef9fa48b5f78cbadaba1c9110467ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7a875228ef9fa48b5f78cbadaba1c9110467ccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aa3110af4fe912b83644650f1543541def23372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa3110af4fe912b83644650f1543541def23372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aa3110af4fe912b83644650f1543541def23372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa3110af4fe912b83644650f1543541def23372/comments", "author": null, "committer": null, "parents": [{"sha": "d43163b742fbb74f35c006c99c364c52c6803561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43163b742fbb74f35c006c99c364c52c6803561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43163b742fbb74f35c006c99c364c52c6803561"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "0b30ff3885b8024e6cd4d04d3a9054fb8a455fba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa3110af4fe912b83644650f1543541def23372/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa3110af4fe912b83644650f1543541def23372/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2aa3110af4fe912b83644650f1543541def23372", "patch": "@@ -1,3 +1,11 @@\n+1999-09-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (start_function): Set x_dont_save_pending_sizes rather\n+\tthan calling get_pending_sizes.\n+\t* init.c (build_new): Don't save and restore\n+\timmediate_size_expand; instead, assert that it has the expected\n+\tvalue already.\n+\n 1999-09-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* lex.c (compiler_error): Add missing call to va_end()."}, {"sha": "3da610def95c258bd72a4fe59a36046cfe0cbabe", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa3110af4fe912b83644650f1543541def23372/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa3110af4fe912b83644650f1543541def23372/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2aa3110af4fe912b83644650f1543541def23372", "patch": "@@ -12915,7 +12915,7 @@ start_function (declspecs, declarator, attrs, flags)\n      We haven't necessarily assigned RTL to all variables yet, so it's\n      not safe to try to expand expressions involving them.  */\n   immediate_size_expand = 0;\n-  get_pending_sizes ();\n+  current_function->x_dont_save_pending_sizes_p = 1;\n \n   /* Let the user know we're compiling this function.  */\n   if (processing_template_decl || !building_stmt_tree ())"}, {"sha": "d420ff5dbd9fed7e364185dc3dd14d783ed00dd6", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa3110af4fe912b83644650f1543541def23372/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa3110af4fe912b83644650f1543541def23372/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=2aa3110af4fe912b83644650f1543541def23372", "patch": "@@ -1909,14 +1909,10 @@ build_new (placement, decl, init, use_global_new)\n     {\n       tree absdcl = TREE_VALUE (decl);\n       tree last_absdcl = NULL_TREE;\n-      int old_immediate_size_expand = 0;\n \n       if (current_function_decl\n \t  && DECL_CONSTRUCTOR_P (current_function_decl))\n-\t{\n-\t  old_immediate_size_expand = immediate_size_expand;\n-\t  immediate_size_expand = 0;\n-\t}\n+\tmy_friendly_assert (immediate_size_expand == 0, 19990926);\n \n       nelts = integer_one_node;\n \n@@ -1980,17 +1976,7 @@ build_new (placement, decl, init, use_global_new)\n \n       type = groktypename (decl);\n       if (! type || type == error_mark_node)\n-\t{\n-\t  immediate_size_expand = old_immediate_size_expand;\n-\t  return error_mark_node;\n-\t}\n-\n-      if (current_function_decl\n-\t  && DECL_CONSTRUCTOR_P (current_function_decl))\n-\t{\n-\t  pending_sizes = get_pending_sizes ();\n-\t  immediate_size_expand = old_immediate_size_expand;\n-\t}\n+\treturn error_mark_node;\n     }\n   else if (TREE_CODE (decl) == IDENTIFIER_NODE)\n     {"}, {"sha": "ad81131c4df40e8d7ef178ec4ab400ea41fe1ce9", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash12.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa3110af4fe912b83644650f1543541def23372/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa3110af4fe912b83644650f1543541def23372/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash12.C?ref=2aa3110af4fe912b83644650f1543541def23372", "patch": "@@ -0,0 +1,17 @@\n+// Build don't link:\n+// Origin: Alfred Minarik <a8601248@unet.univie.ac.at>\n+// Special g++ Options:\n+\n+template<typename T>\n+struct S\n+{\n+  void f() {}\n+};\n+ \n+int main()\n+{\n+  S<int> s;\n+  int len = 50;\n+  char array[len];\n+  s.f();\n+}"}]}