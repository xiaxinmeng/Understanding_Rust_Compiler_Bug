{"sha": "adebb6e733c59da7c75051f27c47f38337d387ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRlYmI2ZTczM2M1OWRhN2M3NTA1MWYyN2M0N2YzODMzN2QzODdhZQ==", "commit": {"author": {"name": "Georg Koppen", "email": "gk@torproject.org", "date": "2015-02-10T01:44:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-02-10T01:44:08Z"}, "message": "ssp.c (__guard_setup): For Windows...\n\n       * ssp.c (__guard_setup): For Windows, use approved\n       methods to get a suitable random number for the stack\n       check guard rather than reading /dev/random.\n\nFrom-SVN: r220559", "tree": {"sha": "39c5991cbcd01a490e24d4ab4f3dfb455aa5485f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39c5991cbcd01a490e24d4ab4f3dfb455aa5485f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adebb6e733c59da7c75051f27c47f38337d387ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adebb6e733c59da7c75051f27c47f38337d387ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adebb6e733c59da7c75051f27c47f38337d387ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adebb6e733c59da7c75051f27c47f38337d387ae/comments", "author": {"login": "gk-tpo", "id": 74978072, "node_id": "MDQ6VXNlcjc0OTc4MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/74978072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gk-tpo", "html_url": "https://github.com/gk-tpo", "followers_url": "https://api.github.com/users/gk-tpo/followers", "following_url": "https://api.github.com/users/gk-tpo/following{/other_user}", "gists_url": "https://api.github.com/users/gk-tpo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gk-tpo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gk-tpo/subscriptions", "organizations_url": "https://api.github.com/users/gk-tpo/orgs", "repos_url": "https://api.github.com/users/gk-tpo/repos", "events_url": "https://api.github.com/users/gk-tpo/events{/privacy}", "received_events_url": "https://api.github.com/users/gk-tpo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94a2f772f041cdbc3711aa8b7da8678fb206fa36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94a2f772f041cdbc3711aa8b7da8678fb206fa36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94a2f772f041cdbc3711aa8b7da8678fb206fa36"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "843992ebdb89efd9a5a2643fb9e47961fb771f9e", "filename": "libssp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adebb6e733c59da7c75051f27c47f38337d387ae/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adebb6e733c59da7c75051f27c47f38337d387ae/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=adebb6e733c59da7c75051f27c47f38337d387ae", "patch": "@@ -1,3 +1,10 @@\n+2015-02-09  Georg Koppen  <gk@torproject.org>\n+\n+\t* ssp.c: Conditionally include <windows.h>\n+\t(__guard_setup): For Windows, use approved methods to get\n+\ta suitable random number for the stack check guard rather\n+\tthan reading /dev/random.\n+\n 2015-01-22  Matthias Klose  <doko@ubuntu.com>\n \n \t* gets-chk.c: Declare prototype for gets in C11 mode."}, {"sha": "38e3ec83f6b5051770aa813a2b9a25bebd7f7402", "filename": "libssp/ssp.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adebb6e733c59da7c75051f27c47f38337d387ae/libssp%2Fssp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adebb6e733c59da7c75051f27c47f38337d387ae/libssp%2Fssp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fssp.c?ref=adebb6e733c59da7c75051f27c47f38337d387ae", "patch": "@@ -55,6 +55,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* Native win32 apps don't know about /dev/tty but can print directly\n    to the console using  \"CONOUT$\"   */\n #if defined (_WIN32) && !defined (__CYGWIN__)\n+#include <windows.h>\n # define _PATH_TTY \"CONOUT$\"\n #else\n # define _PATH_TTY \"/dev/tty\"\n@@ -75,6 +76,20 @@ __guard_setup (void)\n   if (__stack_chk_guard != 0)\n     return;\n \n+#if defined (_WIN32) && !defined (__CYGWIN__)\n+  HCRYPTPROV hprovider = 0;\n+  if (CryptAcquireContext(&hprovider, NULL, NULL, PROV_RSA_FULL,\n+                          CRYPT_VERIFYCONTEXT | CRYPT_SILENT))\n+    {\n+      if (CryptGenRandom(hprovider, sizeof (__stack_chk_guard),\n+          (BYTE *)&__stack_chk_guard) &&  __stack_chk_guard != 0)\n+        {\n+           CryptReleaseContext(hprovider, 0);\n+           return;\n+        }\n+      CryptReleaseContext(hprovider, 0);\n+    }\n+#else\n   fd = open (\"/dev/urandom\", O_RDONLY);\n   if (fd != -1)\n     {\n@@ -85,6 +100,7 @@ __guard_setup (void)\n         return;\n     }\n \n+#endif\n   /* If a random generator can't be used, the protector switches the guard\n      to the \"terminator canary\".  */\n   p = (unsigned char *) &__stack_chk_guard;"}]}