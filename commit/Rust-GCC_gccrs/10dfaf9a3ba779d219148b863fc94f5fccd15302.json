{"sha": "10dfaf9a3ba779d219148b863fc94f5fccd15302", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkZmFmOWEzYmE3NzlkMjE5MTQ4Yjg2M2ZjOTRmNWZjY2QxNTMwMg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-07-28T14:58:11Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-07-28T14:58:11Z"}, "message": "tree-predcom.c (initialize_root): Delete.\n\n\t* tree-predcom.c (initialize_root): Delete.\n\t(execute_pred_commoning_chain): Initialize root vars and replace\n\treference of non-combined chain directly, rather than call above\n\tfunction.\n\nFrom-SVN: r250668", "tree": {"sha": "21d758f58178e65aa9dc436f18b24410980b8782", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21d758f58178e65aa9dc436f18b24410980b8782"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10dfaf9a3ba779d219148b863fc94f5fccd15302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10dfaf9a3ba779d219148b863fc94f5fccd15302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10dfaf9a3ba779d219148b863fc94f5fccd15302", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10dfaf9a3ba779d219148b863fc94f5fccd15302/comments", "author": null, "committer": null, "parents": [{"sha": "3c62a7fb6e7d2a0f2ee20118de2b0f16cc1b2f74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c62a7fb6e7d2a0f2ee20118de2b0f16cc1b2f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c62a7fb6e7d2a0f2ee20118de2b0f16cc1b2f74"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "8af165486aa5422ae0bcdf37fd8b5fa04ce31acc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10dfaf9a3ba779d219148b863fc94f5fccd15302/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10dfaf9a3ba779d219148b863fc94f5fccd15302/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10dfaf9a3ba779d219148b863fc94f5fccd15302", "patch": "@@ -1,3 +1,10 @@\n+2017-07-28  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-predcom.c (initialize_root): Delete.\n+\t(execute_pred_commoning_chain): Initialize root vars and replace\n+\treference of non-combined chain directly, rather than call above\n+\tfunction.\n+\n 2017-07-28  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-predcom.c (ref_at_iteration): Add parameter NITERS.  Compute"}, {"sha": "f8757437897e9f3eb6cc259828d8125522659b7b", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10dfaf9a3ba779d219148b863fc94f5fccd15302/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10dfaf9a3ba779d219148b863fc94f5fccd15302/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=10dfaf9a3ba779d219148b863fc94f5fccd15302", "patch": "@@ -1536,23 +1536,6 @@ initialize_root_vars (struct loop *loop, chain_p chain, bitmap tmp_vars)\n     }\n }\n \n-/* Create the variables and initialization statement for root of chain\n-   CHAIN.  Uids of the newly created temporary variables are marked\n-   in TMP_VARS.  */\n-\n-static void\n-initialize_root (struct loop *loop, chain_p chain, bitmap tmp_vars)\n-{\n-  dref root = get_chain_root (chain);\n-  bool in_lhs = (chain->type == CT_STORE_LOAD\n-\t\t || chain->type == CT_COMBINATION);\n-\n-  initialize_root_vars (loop, chain, tmp_vars);\n-  replace_ref_with (root->stmt,\n-\t\t    chain->vars[chain->length],\n-\t\t    true, in_lhs);\n-}\n-\n /* Initializes a variable for load motion for ROOT and prepares phi nodes and\n    initialization on entry to LOOP if necessary.  The ssa name for the variable\n    is stored in VARS.  If WRITTEN is true, also a phi node to copy its value\n@@ -1749,6 +1732,7 @@ execute_pred_commoning_chain (struct loop *loop, chain_p chain,\n   unsigned i;\n   dref a;\n   tree var;\n+  bool in_lhs;\n \n   if (chain->combined)\n     {\n@@ -1758,10 +1742,14 @@ execute_pred_commoning_chain (struct loop *loop, chain_p chain,\n     }\n   else\n     {\n-      /* For non-combined chains, set up the variables that hold its value,\n-\t and replace the uses of the original references by these\n-\t variables.  */\n-      initialize_root (loop, chain, tmp_vars);\n+      /* For non-combined chains, set up the variables that hold its value.  */\n+      initialize_root_vars (loop, chain, tmp_vars);\n+      a = get_chain_root (chain);\n+      in_lhs = (chain->type == CT_STORE_LOAD\n+\t\t|| chain->type == CT_COMBINATION);\n+      replace_ref_with (a->stmt, chain->vars[chain->length], true, in_lhs);\n+\n+      /* Replace the uses of the original references by these variables.  */\n       for (i = 1; chain->refs.iterate (i, &a); i++)\n \t{\n \t  var = chain->vars[chain->length - a->distance];"}]}