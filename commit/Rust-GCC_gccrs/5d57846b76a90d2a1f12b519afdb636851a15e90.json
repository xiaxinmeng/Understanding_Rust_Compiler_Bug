{"sha": "5d57846b76a90d2a1f12b519afdb636851a15e90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ1Nzg0NmI3NmE5MGQyYTFmMTJiNTE5YWZkYjYzNjg1MWExNWU5MA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-09T18:23:07Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-09T18:23:07Z"}, "message": "exp_ch6.adb: (Make_Build_In_Place_Call_In_Object_Declaration): Take care of unchecked...\n\ngcc/ada/\n\n2017-10-09  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch6.adb: (Make_Build_In_Place_Call_In_Object_Declaration): Take\n\tcare of unchecked conversions in addition to regular conversions. This\n\ttakes care of a case where a type is derived from a private untagged\n\ttype that is completed by a tagged controlled type.\n\n2017-10-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_disp.adb (Build_Class_Wide_Check, Replace_Formals): When\n\trewriting a class-wide condition, handle properly the case where the\n\tcontrolling argument of the operation to which the condition applies is\n\tan access to a tagged type, and the condition includes a dispatching\n\tcall with an implicit dereference.\n\ngcc/testsuite/\n\n2017-10-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* gnat.dg/class_wide4.adb, gnat.dg/class_wide4_pkg.ads,\n\tgnat.dg/class_wide4_pkg2.ads: New testcase.\n\nFrom-SVN: r253554", "tree": {"sha": "38ff92e8ad71a71e6fd37742318ecea0e136146a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38ff92e8ad71a71e6fd37742318ecea0e136146a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d57846b76a90d2a1f12b519afdb636851a15e90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d57846b76a90d2a1f12b519afdb636851a15e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d57846b76a90d2a1f12b519afdb636851a15e90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d57846b76a90d2a1f12b519afdb636851a15e90/comments", "author": null, "committer": null, "parents": [{"sha": "a1df65216abc657e2bc941ede69eeb225e7bd224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1df65216abc657e2bc941ede69eeb225e7bd224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1df65216abc657e2bc941ede69eeb225e7bd224"}], "stats": {"total": 102, "additions": 101, "deletions": 1}, "files": [{"sha": "ff6392a6c0d63d13b1b7cf641ce1103168943fed", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5d57846b76a90d2a1f12b519afdb636851a15e90", "patch": "@@ -1,3 +1,18 @@\n+2017-10-09  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch6.adb: (Make_Build_In_Place_Call_In_Object_Declaration): Take\n+\tcare of unchecked conversions in addition to regular conversions. This\n+\ttakes care of a case where a type is derived from a private untagged\n+\ttype that is completed by a tagged controlled type.\n+\n+2017-10-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_disp.adb (Build_Class_Wide_Check, Replace_Formals): When\n+\trewriting a class-wide condition, handle properly the case where the\n+\tcontrolling argument of the operation to which the condition applies is\n+\tan access to a tagged type, and the condition includes a dispatching\n+\tcall with an implicit dereference.\n+\n 2017-10-09  Bob Duff  <duff@adacore.com>\n \n \t* exp_ch6.adb: (Make_Build_In_Place_Call_In_Object_Declaration): Remove"}, {"sha": "beb0291536ddf6a3817063fb59dc6edcdb121246", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=5d57846b76a90d2a1f12b519afdb636851a15e90", "patch": "@@ -8466,7 +8466,9 @@ package body Exp_Ch6 is\n       Set_Etype (Def_Id, Ptr_Typ);\n       Set_Is_Known_Non_Null (Def_Id);\n \n-      if Nkind (Function_Call) = N_Type_Conversion then\n+      if Nkind_In\n+        (Function_Call, N_Type_Conversion, N_Unchecked_Type_Conversion)\n+      then\n          Res_Decl :=\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => Def_Id,"}, {"sha": "63c996ee70662c4e005438dc889bc6724c796597", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=5d57846b76a90d2a1f12b519afdb636851a15e90", "patch": "@@ -736,6 +736,18 @@ package body Exp_Disp is\n \n                         if Is_Class_Wide_Type (Etype (F)) then\n                            Set_Etype (N, Etype (F));\n+\n+                        --  Conversely, if this is a controlling argument\n+                        --  (in a dispatching call in the condition)\n+                        --  that is a dereference, the source is an access to\n+                        --  classwide type, so preserve the dispatching nature\n+                        --  of the call in the rewritten condition.\n+\n+                        elsif Nkind (Parent (N)) = N_Explicit_Dereference\n+                          and then Is_Controlling_Actual (Parent (N))\n+                        then\n+                           Set_Controlling_Argument (Parent (Parent (N)),\n+                              Parent (N));\n                         end if;\n \n                         exit;"}, {"sha": "d8e2ffa0706b455930e4c630e9ec6be215889829", "filename": "gcc/testsuite/gnat.dg/class_wide4.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4.adb?ref=5d57846b76a90d2a1f12b519afdb636851a15e90", "patch": "@@ -0,0 +1,20 @@\n+--  { dg-do run }\n+\n+with Class_Wide4_Pkg;\n+with Class_Wide4_Pkg2;\n+\n+procedure Class_Wide4 is\n+   D  : aliased Class_Wide4_Pkg.Data_Object;\n+   O  : aliased Class_Wide4_Pkg.Object;\n+   IA : not null access Class_Wide4_Pkg.Conditional_Interface'Class :=\n+          O'Access;\n+   I  : Class_Wide4_Pkg.Conditional_Interface'Class renames\n+          Class_Wide4_Pkg.Conditional_Interface'Class (O);\n+begin\n+   O.Do_Stuff;\n+   O.Do_Stuff_Access;\n+   IA.Do_Stuff;\n+   IA.Do_Stuff_Access;\n+   I.Do_Stuff;\n+   I.Do_Stuff_Access;\n+end Class_Wide4;"}, {"sha": "b8ba44c13801ed43f6433dd157f665cbe142deea", "filename": "gcc/testsuite/gnat.dg/class_wide4_pkg.ads", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4_pkg.ads?ref=5d57846b76a90d2a1f12b519afdb636851a15e90", "patch": "@@ -0,0 +1,21 @@\n+package Class_Wide4_Pkg is\n+\n+   type Conditional_Interface is limited interface;\n+\n+   type Data_Object is tagged null record;\n+\n+   function Is_Valid\n+     (This : in Conditional_Interface)\n+      return Boolean is abstract;\n+\n+   procedure Do_Stuff\n+     (This : in out Conditional_Interface) is abstract\n+     with\n+       Pre'Class => This.Is_Valid;\n+\n+   procedure Do_Stuff_Access\n+     (This : not null access Conditional_Interface) is abstract\n+     with\n+       Pre'Class => This.Is_Valid;\n+\n+end Class_Wide4_Pkg;"}, {"sha": "1e5799d2597ebf97f3ff1d4bf85b7bb8da0d3ff3", "filename": "gcc/testsuite/gnat.dg/class_wide4_pkg2.ads", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d57846b76a90d2a1f12b519afdb636851a15e90/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fclass_wide4_pkg2.ads?ref=5d57846b76a90d2a1f12b519afdb636851a15e90", "patch": "@@ -0,0 +1,30 @@\n+with Class_Wide4_Pkg;\n+\n+package Class_Wide4_Pkg2 is\n+\n+   type Object is limited new\n+     Class_Wide4_Pkg.Conditional_Interface with\n+   record\n+      Val : Integer := 1234;\n+   end record;\n+\n+   function Is_Valid\n+     (This : in Object)\n+      return Boolean\n+   is\n+     (This.Val = 1234);\n+\n+   function Is_Supported_Data\n+     (This : in Object;\n+      Data : not null access Class_Wide4_Pkg.Data_Object'Class)\n+      return Boolean\n+   is\n+     (This.Val = 1234);\n+\n+   procedure Do_Stuff\n+     (This : in out Object) is null;\n+\n+   procedure Do_Stuff_Access\n+     (This : not null access Object) is null;\n+\n+end Class_Wide4_Pkg2;"}]}