{"sha": "f2111a364039343a3314736d376990dfa549e650", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIxMTFhMzY0MDM5MzQzYTMzMTQ3MzZkMzc2OTkwZGZhNTQ5ZTY1MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-07-18T17:44:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-07-18T17:44:48Z"}, "message": "re PR c++/71871 (ICE on mixing templates and vector extensions ternary operator)\n\n\tPR c++/71871\n\t* typeck.c (build_x_conditional_expr): Revert the 2012-10-25 change.\n\n\t* g++.dg/ext/vector31.C: New test.\n\nFrom-SVN: r238439", "tree": {"sha": "7be3bd72b926527173c5c6ac314506e670a63112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7be3bd72b926527173c5c6ac314506e670a63112"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2111a364039343a3314736d376990dfa549e650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2111a364039343a3314736d376990dfa549e650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2111a364039343a3314736d376990dfa549e650", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2111a364039343a3314736d376990dfa549e650/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b96552628efa86e6e41a279bf7abfd7018d8a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b96552628efa86e6e41a279bf7abfd7018d8a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b96552628efa86e6e41a279bf7abfd7018d8a93"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "888d4aa894c4ad90fb7aa18c470ac1f91ec5f27a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2111a364039343a3314736d376990dfa549e650/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2111a364039343a3314736d376990dfa549e650/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f2111a364039343a3314736d376990dfa549e650", "patch": "@@ -1,3 +1,8 @@\n+2016-07-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/71871\n+\t* typeck.c (build_x_conditional_expr): Revert the 2012-10-25 change.\n+\n 2016-07-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/71495"}, {"sha": "f9e45ee125f604853ff453ea59f54535f995a2af", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2111a364039343a3314736d376990dfa549e650/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2111a364039343a3314736d376990dfa549e650/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f2111a364039343a3314736d376990dfa549e650", "patch": "@@ -6288,8 +6288,7 @@ build_x_conditional_expr (location_t loc, tree ifexp, tree op1, tree op2,\n     }\n \n   expr = build_conditional_expr (loc, ifexp, op1, op2, complain);\n-  if (processing_template_decl && expr != error_mark_node\n-      && TREE_CODE (expr) != VEC_COND_EXPR)\n+  if (processing_template_decl && expr != error_mark_node)\n     {\n       tree min = build_min_non_dep (COND_EXPR, expr,\n \t\t\t\t    orig_ifexp, orig_op1, orig_op2);"}, {"sha": "aa35fb2033b9d46b62bf474a455b126a18593fd3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2111a364039343a3314736d376990dfa549e650/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2111a364039343a3314736d376990dfa549e650/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2111a364039343a3314736d376990dfa549e650", "patch": "@@ -1,3 +1,8 @@\n+2016-07-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/71871\n+\t* g++.dg/ext/vector31.C: New test.\n+\n 2016-07-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/pr70017.c: Do not check for warning on alpha*-*-*."}, {"sha": "a0568394315125e8c04a84b388d5ad7e333f2d68", "filename": "gcc/testsuite/g++.dg/ext/vector31.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2111a364039343a3314736d376990dfa549e650/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2111a364039343a3314736d376990dfa549e650/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector31.C?ref=f2111a364039343a3314736d376990dfa549e650", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/71871\n+// { dg-do compile }\n+\n+typedef unsigned int V __attribute__ ((__vector_size__ (32)));\n+\n+template <int N>\n+void\n+foo (V *x)\n+{\n+  V a = *x;\n+  a = a ? a : -1;\n+  *x = a;\n+}\n+\n+template <typename T>\n+void\n+bar (T *x)\n+{\n+  T a = *x;\n+  a = a ? a : -1;\n+  *x = a;\n+}\n+\n+void\n+test (V *x, V *y)\n+{\n+  foo<0> (x);\n+  bar<V> (y);\n+}"}]}