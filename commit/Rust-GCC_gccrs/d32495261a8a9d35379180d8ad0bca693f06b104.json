{"sha": "d32495261a8a9d35379180d8ad0bca693f06b104", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMyNDk1MjYxYThhOWQzNTM3OTE4MGQ4YWQwYmNhNjkzZjA2YjEwNA==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-03-31T16:46:17Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-06-22T10:07:52Z"}, "message": "amdgcn: Pass vector parameters in memory\n\ngcc/ChangeLog:\n\n\t* config/gcn/gcn.c (gcn_function_arg): Disallow vector arguments.\n\t(gcn_return_in_memory): Return vectors in memory.", "tree": {"sha": "1a587352abd566f5e8a615b1ff63faca499f0799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a587352abd566f5e8a615b1ff63faca499f0799"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d32495261a8a9d35379180d8ad0bca693f06b104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32495261a8a9d35379180d8ad0bca693f06b104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d32495261a8a9d35379180d8ad0bca693f06b104", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d32495261a8a9d35379180d8ad0bca693f06b104/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c154b8bc56831e4d9d421c52c8fcf95c570255ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c154b8bc56831e4d9d421c52c8fcf95c570255ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c154b8bc56831e4d9d421c52c8fcf95c570255ad"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "5693b75b67287b1c784b5302f89eef4f9c769a54", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d32495261a8a9d35379180d8ad0bca693f06b104/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d32495261a8a9d35379180d8ad0bca693f06b104/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=d32495261a8a9d35379180d8ad0bca693f06b104", "patch": "@@ -2291,6 +2291,10 @@ gcn_function_arg (cumulative_args_t cum_v, const function_arg_info &arg)\n       if (targetm.calls.must_pass_in_stack (arg))\n \treturn 0;\n \n+      /* Vector parameters are not supported yet.  */\n+      if (VECTOR_MODE_P (arg.mode))\n+\treturn 0;\n+\n       int reg_num = FIRST_PARM_REG + cum->num;\n       int num_regs = num_arg_regs (arg);\n       if (num_regs > 0)\n@@ -2478,6 +2482,10 @@ gcn_return_in_memory (const_tree type, const_tree ARG_UNUSED (fntype))\n   if (AGGREGATE_TYPE_P (type))\n     return true;\n \n+  /* Vector return values are not supported yet.  */\n+  if (VECTOR_TYPE_P (type))\n+    return true;\n+\n   if (mode == BLKmode)\n     return true;\n "}]}