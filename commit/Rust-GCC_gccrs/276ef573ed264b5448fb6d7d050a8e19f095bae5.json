{"sha": "276ef573ed264b5448fb6d7d050a8e19f095bae5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc2ZWY1NzNlZDI2NGI1NDQ4ZmI2ZDdkMDUwYThlMTlmMDk1YmFlNQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2002-02-10T17:27:55Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2002-02-10T17:27:55Z"}, "message": "pa.c (reg_before_reload_operand): Don't accept a SUBREG operand.\n\n\t* pa.c (reg_before_reload_operand): Don't accept a SUBREG operand.\n\t* pa.h (PREDICATE_CODES): Adjust codes for reg_before_reload_operand.\n\nFrom-SVN: r49654", "tree": {"sha": "b90bf1cd6eee51fbc5da8ef4783318da352a7d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b90bf1cd6eee51fbc5da8ef4783318da352a7d1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/276ef573ed264b5448fb6d7d050a8e19f095bae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276ef573ed264b5448fb6d7d050a8e19f095bae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/276ef573ed264b5448fb6d7d050a8e19f095bae5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276ef573ed264b5448fb6d7d050a8e19f095bae5/comments", "author": null, "committer": null, "parents": [{"sha": "02669b681ed493f523510039c4ee65fd8d569424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02669b681ed493f523510039c4ee65fd8d569424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02669b681ed493f523510039c4ee65fd8d569424"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "a158313c33734f5b929e61173c13017bd8d0f79c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276ef573ed264b5448fb6d7d050a8e19f095bae5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276ef573ed264b5448fb6d7d050a8e19f095bae5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=276ef573ed264b5448fb6d7d050a8e19f095bae5", "patch": "@@ -1,3 +1,8 @@\n+2002-02-10  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa.c (reg_before_reload_operand): Don't accept a SUBREG operand.\n+\t* pa.h (PREDICATE_CODES): Adjust codes for reg_before_reload_operand.\n+\n 2002-02-09  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config/sparc/freebsd.h(TARGET_DEFAULT): Add MASK_EPILOGUE setting and"}, {"sha": "05a0fa629cc1b3f0dae410b57130ba43a9952765", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276ef573ed264b5448fb6d7d050a8e19f095bae5/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276ef573ed264b5448fb6d7d050a8e19f095bae5/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=276ef573ed264b5448fb6d7d050a8e19f095bae5", "patch": "@@ -387,6 +387,10 @@ reg_before_reload_operand (op, mode)\n     register rtx op;\n     enum machine_mode mode;\n {\n+  /* Don't accept a SUBREG since it will need a reload.  */\n+  if (GET_CODE (op) == SUBREG)\n+    return 0;\n+\n   if (register_operand (op, mode))\n     return 1;\n "}, {"sha": "210a7f316bd8636d17994f3bcf7d32c76bdfa79e", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276ef573ed264b5448fb6d7d050a8e19f095bae5/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276ef573ed264b5448fb6d7d050a8e19f095bae5/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=276ef573ed264b5448fb6d7d050a8e19f095bae5", "patch": "@@ -1925,7 +1925,7 @@ while (0)\n \t\t\t    CONST_DOUBLE, CONST, HIGH, CONSTANT_P_RTX}}, \\\n   {\"symbolic_operand\", {SYMBOL_REF, LABEL_REF, CONST}},\t\t\t\\\n   {\"symbolic_memory_operand\", {SUBREG, MEM}},\t\t\t\t\\\n-  {\"reg_before_reload_operand\", {SUBREG, MEM}},\t\t\t\t\\\n+  {\"reg_before_reload_operand\", {REG, MEM}},\t\t\t\t\\\n   {\"reg_or_nonsymb_mem_operand\", {SUBREG, REG, MEM}},\t\t\t\\\n   {\"reg_or_0_or_nonsymb_mem_operand\", {SUBREG, REG, MEM, CONST_INT,\t\\\n \t\t\t\t       CONST_DOUBLE}},\t\t\t\\"}]}