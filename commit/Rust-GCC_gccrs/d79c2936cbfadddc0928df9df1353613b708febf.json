{"sha": "d79c2936cbfadddc0928df9df1353613b708febf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5YzI5MzZjYmZhZGRkYzA5MjhkZjlkZjEzNTM2MTNiNzA4ZmViZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-10-17T22:21:24Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-10-17T22:21:24Z"}, "message": "tree-nested.c (convert_nonlocal_reference_stmt): New case.\n\n\t* tree-nested.c (convert_nonlocal_reference_stmt) <GIMPLE_COND>: New\n\tcase.  Force using values to replace references within the statement.\n\t(convert_local_reference_stmt): Likewise.\n\nFrom-SVN: r152960", "tree": {"sha": "42da3018f900469fdb1aa9419abc4b5c4af439c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42da3018f900469fdb1aa9419abc4b5c4af439c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d79c2936cbfadddc0928df9df1353613b708febf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79c2936cbfadddc0928df9df1353613b708febf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d79c2936cbfadddc0928df9df1353613b708febf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79c2936cbfadddc0928df9df1353613b708febf/comments", "author": null, "committer": null, "parents": [{"sha": "79ddec0279508bee9a68b640a9633d874b06ac4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79ddec0279508bee9a68b640a9633d874b06ac4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79ddec0279508bee9a68b640a9633d874b06ac4a"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "d4eb66f9c50fafc30b0fa3803ace56e410b0bc51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d79c2936cbfadddc0928df9df1353613b708febf", "patch": "@@ -1,3 +1,9 @@\n+2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-nested.c (convert_nonlocal_reference_stmt) <GIMPLE_COND>: New\n+\tcase.  Force using values to replace references within the statement.\n+\t(convert_local_reference_stmt): Likewise.\n+\n 2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-low.c (lower_stmt) <GIMPLE_CALL>: If the call is noreturn,"}, {"sha": "168123f813a3267ed5321833fa1d6944919981bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d79c2936cbfadddc0928df9df1353613b708febf", "patch": "@@ -1,3 +1,9 @@\n+2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/nested_proc.adb: Rename into...\n+\t* gnat.dg/nested_proc1.adb: ...this.\n+\t* gnat.dg/nested_proc2.adb: New test.\n+\n 2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/noreturn1.ad[sb]: New test."}, {"sha": "b3abf2625787e060d8e8602628893fb1116df490", "filename": "gcc/testsuite/gnat.dg/nested_proc1.adb", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_proc1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_proc1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_proc1.adb?ref=d79c2936cbfadddc0928df9df1353613b708febf", "patch": "@@ -2,7 +2,7 @@\n -- Test that a static link is correctly passed to a subprogram which is\n -- indirectly called through an aggregate.\n \n-procedure Nested_Proc is\n+procedure Nested_Proc1 is\n \n   I : Integer := 0;\n ", "previous_filename": "gcc/testsuite/gnat.dg/nested_proc.adb"}, {"sha": "b5349563a9955fc92154008440b60ffda12d4e69", "filename": "gcc/testsuite/gnat.dg/nested_proc2.adb", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_proc2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_proc2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnested_proc2.adb?ref=d79c2936cbfadddc0928df9df1353613b708febf", "patch": "@@ -0,0 +1,30 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+procedure Nested_Proc2 is\n+\n+   type Arr is array(1..2) of Integer;\n+\n+   type Rec is record\n+      Data : Arr;\n+   end record;\n+\n+   From  : Rec;\n+   Index : Integer;\n+\n+   function F (X : Arr) return Integer is\n+   begin\n+      return 0;\n+   end;\n+\n+   procedure Test is\n+   begin\n+      Index := F (From.Data);\n+      If Index /= 0 then\n+         raise Program_Error;\n+      end if;\n+   end;\n+\n+begin\n+  Test;\n+end;"}, {"sha": "0b5e7321b16bf44e3aa10936dc038443ef565255", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79c2936cbfadddc0928df9df1353613b708febf/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=d79c2936cbfadddc0928df9df1353613b708febf", "patch": "@@ -1307,6 +1307,12 @@ convert_nonlocal_reference_stmt (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n       *handled_ops_p = false;\n       return NULL_TREE;\n \n+    case GIMPLE_COND:\n+      wi->val_only = true;\n+      wi->is_lhs = false;\n+      *handled_ops_p = false;\n+      return NULL_TREE;\n+\n     default:\n       /* For every other statement that we are not interested in\n \t handling here, let the walker traverse the operands.  */\n@@ -1707,6 +1713,12 @@ convert_local_reference_stmt (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n \t\t info, gimple_omp_body (stmt));\n       break;\n \n+    case GIMPLE_COND:\n+      wi->val_only = true;\n+      wi->is_lhs = false;\n+      *handled_ops_p = false;\n+      return NULL_TREE;\n+\n     default:\n       /* For every other statement that we are not interested in\n \t handling here, let the walker traverse the operands.  */"}]}