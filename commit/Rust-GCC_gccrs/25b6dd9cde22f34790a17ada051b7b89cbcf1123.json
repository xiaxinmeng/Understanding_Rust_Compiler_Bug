{"sha": "25b6dd9cde22f34790a17ada051b7b89cbcf1123", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViNmRkOWNkZTIyZjM0NzkwYTE3YWRhMDUxYjdiODljYmNmMTEyMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-11-27T15:00:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-11-27T15:00:37Z"}, "message": "re PR middle-end/34241 (ICE in forward_propagate_into_cond)\n\n2007-11-27  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/34241\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr): Make sure\n\tto only delete real conversion chains.\n\n\t* g++.dg/torture/pr34241.C: New testcase.\n\nFrom-SVN: r130468", "tree": {"sha": "cc1f0441b801657e05c602bbd03a41eaade69aec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc1f0441b801657e05c602bbd03a41eaade69aec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25b6dd9cde22f34790a17ada051b7b89cbcf1123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b6dd9cde22f34790a17ada051b7b89cbcf1123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25b6dd9cde22f34790a17ada051b7b89cbcf1123", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b6dd9cde22f34790a17ada051b7b89cbcf1123/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cba04b96602e2a6dfbfe9b5d02d2794cd51800a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba04b96602e2a6dfbfe9b5d02d2794cd51800a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba04b96602e2a6dfbfe9b5d02d2794cd51800a6"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "f7cf3afbdf612beead1b8a7176bf752cc5ee8770", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b6dd9cde22f34790a17ada051b7b89cbcf1123/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b6dd9cde22f34790a17ada051b7b89cbcf1123/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25b6dd9cde22f34790a17ada051b7b89cbcf1123", "patch": "@@ -1,3 +1,9 @@\n+2007-11-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34241\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr): Make sure\n+\tto only delete real conversion chains.\n+\n 2007-11-27  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.opt (m31, m64, mesa, mzarch, msoft-float,"}, {"sha": "4e14852e88ba2d130ae7c96d8e36c45cb7be0e4c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b6dd9cde22f34790a17ada051b7b89cbcf1123/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b6dd9cde22f34790a17ada051b7b89cbcf1123/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=25b6dd9cde22f34790a17ada051b7b89cbcf1123", "patch": "@@ -1,3 +1,8 @@\n+2007-11-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34241\n+\t* g++.dg/torture/pr34241.C: New testcase.\n+\n 2007-11-27  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/builtins-error.c: New testcase."}, {"sha": "70f186c5b9fd401f27b86677d47f2925f2f5dbc2", "filename": "gcc/testsuite/g++.dg/torture/pr34241.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b6dd9cde22f34790a17ada051b7b89cbcf1123/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34241.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b6dd9cde22f34790a17ada051b7b89cbcf1123/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34241.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34241.C?ref=25b6dd9cde22f34790a17ada051b7b89cbcf1123", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+\n+inline void *operator  new (__SIZE_TYPE__, void *__p) throw ()\n+{\n+  return __p;\n+}\n+struct A\n+{\n+  A(int, double);\n+  inline explicit A (int pattern, bool cs)\n+  {\n+    new (this) A (pattern, double(cs));\n+  }\n+};\n+A test ()\n+{\n+  const A a (42, true);\n+}"}, {"sha": "f368c3321c485180f20a0e49c3239bb3d51172f6", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b6dd9cde22f34790a17ada051b7b89cbcf1123/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b6dd9cde22f34790a17ada051b7b89cbcf1123/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=25b6dd9cde22f34790a17ada051b7b89cbcf1123", "patch": "@@ -685,6 +685,7 @@ forward_propagate_addr_expr (tree name, tree rhs)\n   FOR_EACH_IMM_USE_STMT (use_stmt, iter, name)\n     {\n       bool result;\n+      tree use_rhs;\n \n       /* If the use is not in a simple assignment statement, then\n \t there is nothing we can do.  */\n@@ -712,11 +713,13 @@ forward_propagate_addr_expr (tree name, tree rhs)\n       pop_stmt_changes (&use_stmt);\n \n       /* Remove intermediate now unused copy and conversion chains.  */\n+      use_rhs = GIMPLE_STMT_OPERAND (use_stmt, 1);\n       if (result\n \t  && TREE_CODE (GIMPLE_STMT_OPERAND (use_stmt, 0)) == SSA_NAME\n-\t  && (TREE_CODE (GIMPLE_STMT_OPERAND (use_stmt, 1)) == SSA_NAME\n-\t      || TREE_CODE (GIMPLE_STMT_OPERAND (use_stmt, 1)) == NOP_EXPR\n-\t      || TREE_CODE (GIMPLE_STMT_OPERAND (use_stmt, 1)) == CONVERT_EXPR))\n+\t  && (TREE_CODE (use_rhs) == SSA_NAME\n+\t      || ((TREE_CODE (use_rhs) == NOP_EXPR\n+\t           || TREE_CODE (use_rhs) == CONVERT_EXPR)\n+\t\t  && TREE_CODE (TREE_OPERAND (use_rhs, 0)) == SSA_NAME)))\n \t{\n \t  block_stmt_iterator bsi = bsi_for_stmt (use_stmt);\n \t  release_defs (use_stmt);"}]}