{"sha": "8268ad5cb2fb8638e3609e1f9621ee12869d167a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI2OGFkNWNiMmZiODYzOGUzNjA5ZTFmOTYyMWVlMTI4NjlkMTY3YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-11T17:46:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-11T17:46:34Z"}, "message": "re PR middle-end/59776 (gcc -g -O1 ICE in expand_debug_locations, at cfgexpand.c:3865)\n\n\tPR debug/59776\n\t* tree-sra.c (load_assign_lhs_subreplacements): Add VIEW_CONVERT_EXPR\n\taround drhs if type conversion to lacc->type is not useless.\n\n\t* gcc.dg/guality/pr59776.c: New test.\n\nFrom-SVN: r207695", "tree": {"sha": "6798c5e3a45611f3b22b754d7a6285464e38bec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6798c5e3a45611f3b22b754d7a6285464e38bec8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8268ad5cb2fb8638e3609e1f9621ee12869d167a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8268ad5cb2fb8638e3609e1f9621ee12869d167a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8268ad5cb2fb8638e3609e1f9621ee12869d167a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8268ad5cb2fb8638e3609e1f9621ee12869d167a/comments", "author": null, "committer": null, "parents": [{"sha": "e332c729c1952c0146cfa48042267ac735905b23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e332c729c1952c0146cfa48042267ac735905b23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e332c729c1952c0146cfa48042267ac735905b23"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "2d5a09c0068b5316c3521e2a261f789a7fec9b68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8268ad5cb2fb8638e3609e1f9621ee12869d167a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8268ad5cb2fb8638e3609e1f9621ee12869d167a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8268ad5cb2fb8638e3609e1f9621ee12869d167a", "patch": "@@ -1,3 +1,10 @@\n+2014-02-11  Richard Henderson  <rth@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/59776\n+\t* tree-sra.c (load_assign_lhs_subreplacements): Add VIEW_CONVERT_EXPR\n+\taround drhs if type conversion to lacc->type is not useless.\n+\n 2014-02-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64-cores.def (cortex-a57): Use cortexa57"}, {"sha": "b25b15ebc345397b988a233296793c181a890f36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8268ad5cb2fb8638e3609e1f9621ee12869d167a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8268ad5cb2fb8638e3609e1f9621ee12869d167a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8268ad5cb2fb8638e3609e1f9621ee12869d167a", "patch": "@@ -1,3 +1,8 @@\n+2014-02-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/59776\n+\t* gcc.dg/guality/pr59776.c: New test.\n+\n 2014-02-11  Renlin Li  <Renlin.Li@arm.com>\n \n \t* gcc.target/arm/fixed_float_conversion.c: Add arm_vfp3 option."}, {"sha": "382abb622bbd4e01bfdfb7a29a20f8d5348d5e7d", "filename": "gcc/testsuite/gcc.dg/guality/pr59776.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8268ad5cb2fb8638e3609e1f9621ee12869d167a/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8268ad5cb2fb8638e3609e1f9621ee12869d167a/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c?ref=8268ad5cb2fb8638e3609e1f9621ee12869d167a", "patch": "@@ -0,0 +1,29 @@\n+/* PR debug/59776 */\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+\n+#include \"../nop.h\"\n+\n+struct S { float f, g; };\n+\n+__attribute__((noinline, noclone)) void\n+foo (struct S *p)\n+{\n+  struct S s1, s2;\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s1.f\" \"5.0\" } } */\n+  s1 = *p;\t\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s1.g\" \"6.0\" } } */\n+  s2 = s1;\t\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s2.f\" \"0.0\" } } */\n+  *(int *) &s2.f = 0;\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s2.g\" \"6.0\" } } */\n+  asm volatile (NOP : : : \"memory\");\t/* { dg-final { gdb-test pr59776.c:20 \"s1.f\" \"5.0\" } } */\n+  asm volatile (NOP : : : \"memory\");\t/* { dg-final { gdb-test pr59776.c:20 \"s1.g\" \"6.0\" } } */\n+  s2 = s1;\t\t\t\t/* { dg-final { gdb-test pr59776.c:20 \"s2.f\" \"5.0\" } } */\n+  asm volatile (NOP : : : \"memory\");\t/* { dg-final { gdb-test pr59776.c:20 \"s2.g\" \"6.0\" } } */\n+  asm volatile (NOP : : : \"memory\");\n+}\n+\n+int\n+main ()\n+{\n+  struct S x = { 5.0f, 6.0f };\n+  foo (&x);\n+  return 0;\n+}"}, {"sha": "284d54448bd0d92e52292f353e14527ac29ddbc7", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8268ad5cb2fb8638e3609e1f9621ee12869d167a/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8268ad5cb2fb8638e3609e1f9621ee12869d167a/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=8268ad5cb2fb8638e3609e1f9621ee12869d167a", "patch": "@@ -2950,6 +2950,10 @@ load_assign_lhs_subreplacements (struct access *lacc, struct access *top_racc,\n \t\t\t\t\t\t  lacc);\n \t      else\n \t\tdrhs = NULL_TREE;\n+\t      if (drhs\n+\t\t  && !useless_type_conversion_p (lacc->type, TREE_TYPE (drhs)))\n+\t\tdrhs = fold_build1_loc (loc, VIEW_CONVERT_EXPR,\n+\t\t\t\t\tlacc->type, drhs);\n \t      ds = gimple_build_debug_bind (get_access_replacement (lacc),\n \t\t\t\t\t    drhs, gsi_stmt (*old_gsi));\n \t      gsi_insert_after (new_gsi, ds, GSI_NEW_STMT);"}]}