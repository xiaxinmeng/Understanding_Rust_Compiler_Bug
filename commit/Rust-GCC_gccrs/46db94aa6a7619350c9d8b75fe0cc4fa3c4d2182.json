{"sha": "46db94aa6a7619350c9d8b75fe0cc4fa3c4d2182", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZkYjk0YWE2YTc2MTkzNTBjOWQ4Yjc1ZmUwY2M0ZmEzYzRkMjE4Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-05T11:06:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-05T11:06:10Z"}, "message": "Add forgotten file.\n\nFrom-SVN: r205701", "tree": {"sha": "7a7d70bf7e756839de70f47767b8e94837b35876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a7d70bf7e756839de70f47767b8e94837b35876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46db94aa6a7619350c9d8b75fe0cc4fa3c4d2182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46db94aa6a7619350c9d8b75fe0cc4fa3c4d2182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46db94aa6a7619350c9d8b75fe0cc4fa3c4d2182", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46db94aa6a7619350c9d8b75fe0cc4fa3c4d2182/comments", "author": null, "committer": null, "parents": [{"sha": "c4c16f745651177876f689b848586aa5a9f6a812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4c16f745651177876f689b848586aa5a9f6a812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4c16f745651177876f689b848586aa5a9f6a812"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "c632f3602954883025fa26f9a66c9a94df1b61a3", "filename": "libsanitizer/sanitizer_common/sanitizer_asm.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46db94aa6a7619350c9d8b75fe0cc4fa3c4d2182/libsanitizer%2Fsanitizer_common%2Fsanitizer_asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46db94aa6a7619350c9d8b75fe0cc4fa3c4d2182/libsanitizer%2Fsanitizer_common%2Fsanitizer_asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_asm.h?ref=46db94aa6a7619350c9d8b75fe0cc4fa3c4d2182", "patch": "@@ -0,0 +1,36 @@\n+//===-- sanitizer_asm.h -----------------------------------------*- C++ -*-===//\n+//\n+// This file is distributed under the University of Illinois Open Source\n+// License. See LICENSE.TXT for details.\n+//\n+//===----------------------------------------------------------------------===//\n+//\n+// Various support for assemebler.\n+//\n+//===----------------------------------------------------------------------===//\n+\n+// Some toolchains do not support .cfi asm directives, so we have to hide\n+// them inside macros.\n+#if defined(__clang__) ||                                                      \\\n+    (defined(__GNUC__) && defined(__GCC_HAVE_DWARF2_CFI_ASM))\n+  // GCC defined __GCC_HAVE_DWARF2_CFI_ASM if it supports CFI.\n+  // Clang seems to support CFI by default (or not?).\n+  // We need two versions of macros: for inline asm and standalone asm files.\n+# define CFI_INL_ADJUST_CFA_OFFSET(n) \".cfi_adjust_cfa_offset \" #n \";\"\n+\n+# define CFI_STARTPROC .cfi_startproc\n+# define CFI_ENDPROC .cfi_endproc\n+# define CFI_ADJUST_CFA_OFFSET(n) .cfi_adjust_cfa_offset n\n+# define CFI_REL_OFFSET(reg, n) .cfi_rel_offset reg, n\n+# define CFI_DEF_CFA_REGISTER(reg) .cfi_def_cfa_register reg\n+# define CFI_RESTORE(reg) .cfi_restore reg\n+\n+#else  // No CFI\n+# define CFI_INL_ADJUST_CFA_OFFSET(n)\n+# define CFI_STARTPROC\n+# define CFI_ENDPROC\n+# define CFI_ADJUST_CFA_OFFSET(n)\n+# define CFI_REL_OFFSET(reg, n)\n+# define CFI_DEF_CFA_REGISTER(reg)\n+# define CFI_RESTORE(reg)\n+#endif"}]}