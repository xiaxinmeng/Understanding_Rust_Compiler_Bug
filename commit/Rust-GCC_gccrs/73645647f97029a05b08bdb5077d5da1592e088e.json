{"sha": "73645647f97029a05b08bdb5077d5da1592e088e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2NDU2NDdmOTcwMjlhMDViMDhiZGI1MDc3ZDVkYTE1OTJlMDg4ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-07-24T19:47:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-07-24T19:47:04Z"}, "message": "hashtable_policy.h (_Prime_rehash_policy::_M_next_bkt, [...]): Fix typos in the last commit.\n\n2011-07-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/hashtable_policy.h (_Prime_rehash_policy::_M_next_bkt,\n\t_M_bkt_for_elements, _M_need_rehash): Fix typos in the last commit.\n\nFrom-SVN: r176718", "tree": {"sha": "19e2b5064d87b7418a0c65976b43ec31e020d7f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19e2b5064d87b7418a0c65976b43ec31e020d7f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73645647f97029a05b08bdb5077d5da1592e088e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73645647f97029a05b08bdb5077d5da1592e088e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73645647f97029a05b08bdb5077d5da1592e088e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73645647f97029a05b08bdb5077d5da1592e088e/comments", "author": null, "committer": null, "parents": [{"sha": "4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f7b188f20a89a28a72f702b4d34b82894a1dd5f"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "91301815bad7dc58fab9a27e3444bbd384b7363a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73645647f97029a05b08bdb5077d5da1592e088e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73645647f97029a05b08bdb5077d5da1592e088e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=73645647f97029a05b08bdb5077d5da1592e088e", "patch": "@@ -1,3 +1,8 @@\n+2011-07-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/hashtable_policy.h (_Prime_rehash_policy::_M_next_bkt,\n+\t_M_bkt_for_elements, _M_need_rehash): Fix typos in the last commit.\n+\n 2011-07-24  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n \n \t* include/bits/hashtable_policy.h (_Prime_rehash_policy): Use"}, {"sha": "ab34463475bb6dba1636be432a656300e737b593", "filename": "libstdc++-v3/include/bits/hashtable_policy.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73645647f97029a05b08bdb5077d5da1592e088e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73645647f97029a05b08bdb5077d5da1592e088e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h?ref=73645647f97029a05b08bdb5077d5da1592e088e", "patch": "@@ -431,7 +431,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t\t+ _S_n_primes, __n);\n     _M_next_resize =\n       static_cast<std::size_t>(__builtin_floor(__p * _M_max_load_factor));\n-    return *__p;\n+    return __p;\n   }\n \n   // Return the smallest prime p such that alpha p >= n, where alpha\n@@ -445,7 +445,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t\t\t+ _S_n_primes, __min_bkts);\n     _M_next_resize =\n       static_cast<std::size_t>(__builtin_floor(__p * _M_max_load_factor));\n-    return *__p;\n+    return __p;\n   }\n \n   // Finds the smallest prime p such that alpha p > __n_elt + __n_ins.\n@@ -474,7 +474,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t__min_bkts);\n \t    _M_next_resize = static_cast<std::size_t>\n \t      (__builtin_floor(__p * _M_max_load_factor));\n-\t    return std::make_pair(true, *__p);\n+\t    return std::make_pair(true, __p);\n \t  }\n \telse\n \t  {"}]}