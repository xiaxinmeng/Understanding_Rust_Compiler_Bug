{"sha": "7369be0af45e5b2356b653ce9ec1b07b7acba102", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2OWJlMGFmNDVlNWIyMzU2YjY1M2NlOWVjMWIwN2I3YWNiYTEwMg==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1999-09-23T13:55:27Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1999-09-23T13:55:27Z"}, "message": "* ir.texi: Fix formatting errors and typos.\n\nFrom-SVN: r29617", "tree": {"sha": "bf3bf0b9a8898c25f7a2fa194542a05f7faf1014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf3bf0b9a8898c25f7a2fa194542a05f7faf1014"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7369be0af45e5b2356b653ce9ec1b07b7acba102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7369be0af45e5b2356b653ce9ec1b07b7acba102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7369be0af45e5b2356b653ce9ec1b07b7acba102", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7369be0af45e5b2356b653ce9ec1b07b7acba102/comments", "author": null, "committer": null, "parents": [{"sha": "e8f38d1aced2552e8fec58de66b7b95b17c7f75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8f38d1aced2552e8fec58de66b7b95b17c7f75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8f38d1aced2552e8fec58de66b7b95b17c7f75a"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "3323506aba226428f8cf70c95c01adfbb8c0489a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7369be0af45e5b2356b653ce9ec1b07b7acba102/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7369be0af45e5b2356b653ce9ec1b07b7acba102/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7369be0af45e5b2356b653ce9ec1b07b7acba102", "patch": "@@ -1,3 +1,7 @@\n+1999-09-23  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* ir.texi: Fix formatting errors and typos.\n+\n 1999-09-22  Mark Mitchell  <mark@codesourcery.com>\n \n \t* ir.texi: Document CLEANUP_STMT, SCOPE_STMT, and START_CATCH_STMT."}, {"sha": "3220a74762729ce046fc8faece6b5b3101ed4d35", "filename": "gcc/cp/ir.texi", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7369be0af45e5b2356b653ce9ec1b07b7acba102/gcc%2Fcp%2Fir.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7369be0af45e5b2356b653ce9ec1b07b7acba102/gcc%2Fcp%2Fir.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fir.texi?ref=7369be0af45e5b2356b653ce9ec1b07b7acba102", "patch": "@@ -35,7 +35,7 @@ Copyright (c) 1999 Free Software Foundation, Inc.\n @end ifinfo\n \n @c ---------------------------------------------------------------------\n-@c Titlepage\n+@c Title page\n @c ---------------------------------------------------------------------\n \n @titlepage\n@@ -834,7 +834,7 @@ indicates the first bit in the object.\n FIXME: Talk about bitfields.\n \n @item NAMESPACE_DECL\n-@xref{Namespaces}\n+@xref{Namespaces}.\n \n @item TEMPLATE_DECL\n \n@@ -1123,22 +1123,22 @@ this:\n @example\n void process_stmt (stmt)\n      tree stmt;\n-{\n+@{\n   while (stmt)\n-    {\n+    @{\n       switch (TREE_CODE (stmt))\n-        {\n+        @{\n         case IF_STMT:\n           process_stmt (THEN_CLAUSE (stmt));\n           /* More processing here.  */\n           break;\n         \n         ...\n-        }\n+        @}\n \n       stmt = TREE_CHAIN (stmt);\n-    }\n-}\n+    @}\n+@}\n @end example\n In other words, while the @code{then} clause of an @code{if} statement\n in C++ can be only one statement (although that one statement may be a\n@@ -1747,7 +1747,7 @@ sites.\n These nodes are used to represent G++'s statement-expression extension.\n The statement-expression extension allows code like this:\n @example\n-int f() { return ({ int j; j = 3; j + 7; }); }\n+int f() @{ return (@{ int j; j = 3; j + 7; @}); @}\n @end example\n In other words, an sequence of statements may occur where a single\n expression would normally appear.  The @code{STMT_EXPR} node represents\n@@ -1777,7 +1777,7 @@ again, the @code{TREE_VALUE} is the corresponding initializer.  If the\n next available array element.\n \n Conceptually, before any initialization is done, the entire area of\n-storage is intialized to zero.\n+storage is initialized to zero.\n \n @item SAVE_EXPR\n \n@@ -1805,7 +1805,7 @@ second operand are the arguments to pass that function, as a\n function.\n \n If @code{AGGR_INIT_VIA_CTOR_P} holds of the @code{AGGR_INIT_EXPR}, then\n-the intialization is via a constructor call.  The address of the third\n+the initialization is via a constructor call.  The address of the third\n operand of the @code{AGGR_INIT_EXPR}, which is always a @code{VAR_DECL},\n is taken, and this value replaces the first argument in the argument\n list.  In this case, the value of the expression is the @code{VAR_DECL}"}]}