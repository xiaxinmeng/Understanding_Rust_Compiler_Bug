{"sha": "cf2ac46f182c35397fca39c0dbe392fa0c6df011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YyYWM0NmYxODJjMzUzOTdmY2EzOWMwZGJlMzkyZmEwYzZkZjAxMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-10-15T00:32:58Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-10-15T00:32:58Z"}, "message": "(type_promotes_to): Also promote enums to long if\n        appropriate.\n\nFrom-SVN: r8277", "tree": {"sha": "49f880a1dc5b69e3647d3d0c2a99574dc4f04ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49f880a1dc5b69e3647d3d0c2a99574dc4f04ab4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf2ac46f182c35397fca39c0dbe392fa0c6df011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2ac46f182c35397fca39c0dbe392fa0c6df011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf2ac46f182c35397fca39c0dbe392fa0c6df011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2ac46f182c35397fca39c0dbe392fa0c6df011/comments", "author": null, "committer": null, "parents": [{"sha": "fffba94c902cc169bc55e4c923ba04d42fb8d8b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fffba94c902cc169bc55e4c923ba04d42fb8d8b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fffba94c902cc169bc55e4c923ba04d42fb8d8b0"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "7777350d925a09359c324c31ea4839eafd9b5aa5", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf2ac46f182c35397fca39c0dbe392fa0c6df011/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf2ac46f182c35397fca39c0dbe392fa0c6df011/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=cf2ac46f182c35397fca39c0dbe392fa0c6df011", "patch": "@@ -2024,11 +2024,16 @@ type_promotes_to (type)\n      wider.  */\n   else if (TREE_CODE (type) == ENUMERAL_TYPE\n \t   || type == wchar_type_node)\n-    type = type_for_size\n-      (MAX (TYPE_PRECISION (type), TYPE_PRECISION (integer_type_node)),\n-       (flag_traditional\n-\t|| (TYPE_PRECISION (type) >= TYPE_PRECISION (integer_type_node)))\n-       && TREE_UNSIGNED (type));\n+    {\n+      int precision = MAX (TYPE_PRECISION (type),\n+\t\t\t   TYPE_PRECISION (integer_type_node));\n+      tree totype = type_for_size (precision, 0);\n+      if (TREE_UNSIGNED (type)\n+\t  && ! int_fits_type_p (TYPE_MAX_VALUE (type), totype))\n+\ttype = type_for_size (precision, 1);\n+      else\n+\ttype = totype;\n+    }\n   else if (C_PROMOTING_INTEGER_TYPE_P (type))\n     {\n       /* Traditionally, unsignedness is preserved in default promotions."}]}