{"sha": "b335b813b54417ca0483c7c0d7a793966ad0cdb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMzNWI4MTNiNTQ0MTdjYTA0ODNjN2MwZDdhNzkzOTY2YWQwY2RiMw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-19T11:19:30Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-19T11:19:30Z"}, "message": "tree.def (TRY_FINALLY_EXPR, [...]): New tree nodes,\n\nh\n\t* tree.def (TRY_FINALLY_EXPR, GOTO_SUBROUTINE_EXPR):  New tree nodes,\n\t* expr.c (expand_expr):  Support new tree nodes.\n\nFrom-SVN: r25308", "tree": {"sha": "bbb286d2229f9d7d1a2903893d12e929efbe9d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbb286d2229f9d7d1a2903893d12e929efbe9d22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b335b813b54417ca0483c7c0d7a793966ad0cdb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b335b813b54417ca0483c7c0d7a793966ad0cdb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b335b813b54417ca0483c7c0d7a793966ad0cdb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b335b813b54417ca0483c7c0d7a793966ad0cdb3/comments", "author": null, "committer": null, "parents": [{"sha": "502bf1f3ea55eb118466889568fd3fffaba66033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502bf1f3ea55eb118466889568fd3fffaba66033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502bf1f3ea55eb118466889568fd3fffaba66033"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "660bba6e319d3cb76343eb8b90dc99ba8673d987", "filename": "gcc/expr.c", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b335b813b54417ca0483c7c0d7a793966ad0cdb3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b335b813b54417ca0483c7c0d7a793966ad0cdb3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b335b813b54417ca0483c7c0d7a793966ad0cdb3", "patch": "@@ -6720,7 +6720,6 @@ expand_expr (exp, target, tmode, modifier)\n \n     case CLEANUP_POINT_EXPR:\n       {\n-\textern int temp_slot_level;\n \t/* Start a new binding layer that will keep track of all cleanup\n \t   actions to be performed.  */\n \texpand_start_bindings (0);\n@@ -8088,6 +8087,47 @@ expand_expr (exp, target, tmode, modifier)\n \treturn op0;\n       }\n \n+    case TRY_FINALLY_EXPR:\n+      {\n+\ttree try_block = TREE_OPERAND (exp, 0);\n+\ttree finally_block = TREE_OPERAND (exp, 1);\n+\trtx finally_label = gen_label_rtx ();\n+\trtx done_label = gen_label_rtx ();\n+\trtx return_link = gen_reg_rtx (Pmode);\n+\ttree cleanup = build (GOTO_SUBROUTINE_EXPR, void_type_node,\n+\t\t\t      (tree) finally_label, (tree) return_link);\n+\tTREE_SIDE_EFFECTS (cleanup) = 1;\n+\n+\t/* Start a new binding layer that will keep track of all cleanup\n+\t   actions to be performed.  */\n+\texpand_start_bindings (0);\n+\n+\ttarget_temp_slot_level = temp_slot_level;\n+\n+\texpand_decl_cleanup (NULL_TREE, cleanup);\n+\top0 = expand_expr (try_block, target, tmode, modifier);\n+\n+\tpreserve_temp_slots (op0);\n+\texpand_end_bindings (NULL_TREE, 0, 0);\n+\temit_jump (done_label);\n+\temit_label (finally_label);\n+\texpand_expr (finally_block, const0_rtx, VOIDmode, 0);\n+\temit_indirect_jump (return_link);\n+\temit_label (done_label);\n+\treturn op0;\n+      }\n+\n+      case GOTO_SUBROUTINE_EXPR:\n+      {\n+\trtx subr = (rtx) TREE_OPERAND (exp, 0);\n+\trtx return_link = *(rtx *) &TREE_OPERAND (exp, 1);\n+\trtx return_address = gen_label_rtx ();\n+\temit_move_insn (return_link, gen_rtx_LABEL_REF (Pmode, return_address));\n+\temit_jump (subr);\n+\temit_label (return_address);\n+\treturn const0_rtx;\n+      }\n+\n     case POPDCC_EXPR:\n       {\n \trtx dcc = get_dynamic_cleanup_chain ();"}]}