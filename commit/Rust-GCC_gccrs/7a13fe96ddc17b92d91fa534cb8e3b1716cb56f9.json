{"sha": "7a13fe96ddc17b92d91fa534cb8e3b1716cb56f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ExM2ZlOTZkZGMxN2I5MmQ5MWZhNTM0Y2I4ZTNiMTcxNmNiNTZmOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T15:33:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T15:33:00Z"}, "message": "(MULL_COST, MULW_COST, RTX_COSTS): Add costs for TARGET_68060.\n\nFrom-SVN: r11817", "tree": {"sha": "667ec94961ca9d3ebe65efa54d376984c03d2be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/667ec94961ca9d3ebe65efa54d376984c03d2be9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a13fe96ddc17b92d91fa534cb8e3b1716cb56f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a13fe96ddc17b92d91fa534cb8e3b1716cb56f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a13fe96ddc17b92d91fa534cb8e3b1716cb56f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a13fe96ddc17b92d91fa534cb8e3b1716cb56f9/comments", "author": null, "committer": null, "parents": [{"sha": "3cabb540d5ad6effe3d9eea9212b9d6b9ad0c5d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cabb540d5ad6effe3d9eea9212b9d6b9ad0c5d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cabb540d5ad6effe3d9eea9212b9d6b9ad0c5d0"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "262c0da0db8a684bf2c8650dce5f48acff3e8673", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a13fe96ddc17b92d91fa534cb8e3b1716cb56f9/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a13fe96ddc17b92d91fa534cb8e3b1716cb56f9/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=7a13fe96ddc17b92d91fa534cb8e3b1716cb56f9", "patch": "@@ -1437,8 +1437,8 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n    relative to an average of the time for add and the time for shift,\n    taking away a little more because sometimes move insns are needed.  */\n /* div?.w is relatively cheaper on 68000 counted in COSTS_N_INSNS terms.  */\n-#define MULL_COST (TARGET_68040 ? 5 : 13)\n-#define MULW_COST (TARGET_68040 ? 3 : TARGET_68020 ? 8 : 5)\n+#define MULL_COST (TARGET_68060 ? 2 : TARGET_68040 ? 5 : 13)\n+#define MULW_COST (TARGET_68060 ? 2 : TARGET_68040 ? 3 : TARGET_68020 ? 8 : 5)\n #define DIVW_COST (TARGET_68020 ? 27 : 12)\n \n #define RTX_COSTS(X,CODE,OUTER_CODE)\t\t\t\t\\\n@@ -1456,7 +1456,9 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n     break;\t\t\t\t\t\t\t\\\n   case ASHIFT:\t\t\t\t\t\t\t\\\n   case ASHIFTRT:\t\t\t\t\t\t\\\n-  case LSHIFTRT:\t\t\t\t\t\t\t\\\n+  case LSHIFTRT:\t\t\t\t\t\t\\\n+    if (TARGET_68060)\t\t\t\t\t\t\\\n+      return COSTS_N_INSNS(1);\t\t\t\t\t\\\n     if (! TARGET_68020)\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tif (GET_CODE (XEXP (X, 1)) == CONST_INT)\t\t\t\\"}]}