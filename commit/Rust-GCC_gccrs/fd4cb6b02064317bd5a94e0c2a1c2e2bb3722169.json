{"sha": "fd4cb6b02064317bd5a94e0c2a1c2e2bb3722169", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ0Y2I2YjAyMDY0MzE3YmQ1YTk0ZTBjMmExYzJlMmJiMzcyMjE2OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-25T11:35:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-25T11:35:27Z"}, "message": "(L_eh, i386): Remove in-line comments in assembly code--the '#'\ncharacter is not valid for the SYSV as.\n\nFrom-SVN: r9817", "tree": {"sha": "501a53bd0ce3b2e9914e02babaa1ea322387dee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/501a53bd0ce3b2e9914e02babaa1ea322387dee1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd4cb6b02064317bd5a94e0c2a1c2e2bb3722169", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4cb6b02064317bd5a94e0c2a1c2e2bb3722169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd4cb6b02064317bd5a94e0c2a1c2e2bb3722169", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4cb6b02064317bd5a94e0c2a1c2e2bb3722169/comments", "author": null, "committer": null, "parents": [{"sha": "0b15d35ff37088b792271c18332293fe9b9fb46b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b15d35ff37088b792271c18332293fe9b9fb46b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b15d35ff37088b792271c18332293fe9b9fb46b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b22db4e24f7968d9d55e62d35a24fef5b5ad83d5", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4cb6b02064317bd5a94e0c2a1c2e2bb3722169/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4cb6b02064317bd5a94e0c2a1c2e2bb3722169/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=fd4cb6b02064317bd5a94e0c2a1c2e2bb3722169", "patch": "@@ -2306,16 +2306,16 @@ __unwind_function(void *ptr)\n   /* Undo current frame */\n   asm(\"movl %ebp,%esp\");\n   asm(\"popl %ebp\");\n-  asm(\"# like ret, but stay here\");\n+  /* like ret, but stay here */\n   asm(\"addl $4,%esp\");\n   \n   /* Now, undo previous frame. */\n   /* This is a test routine, as we have to dynamically probe to find out\n      what to pop for certain, this is just a guess. */\n   asm(\"leal -16(%ebp),%esp\");\n-  asm(\"pop %eax # really for popl %ebx\");\n-  asm(\"pop %eax # really for popl %esi\");\n-  asm(\"pop %eax # really for popl %edi\");\n+  asm(\"pop %eax\"); /* really for popl %ebx */\n+  asm(\"pop %eax\"); /* really for popl %esi */\n+  asm(\"pop %eax\"); /* really for popl %edi */\n   asm(\"movl %ebp,%esp\");\n   asm(\"popl %ebp\");\n "}]}