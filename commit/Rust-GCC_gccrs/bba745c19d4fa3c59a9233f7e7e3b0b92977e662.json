{"sha": "bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJhNzQ1YzE5ZDRmYTNjNTlhOTIzM2Y3ZTdlM2IwYjkyOTc3ZTY2Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-02-23T12:41:43Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-02-23T12:41:43Z"}, "message": "re PR c/14188 (Suggestion: improve warning message for call through incompatible type)\n\n\tPR c/14188\n\t* builtins.c (expand_builtin_va_arg): Emit an informative message\n\tif a trap is generated.\n\t* c-typeck.c (build_function_call): Likewise.\n\nCo-Authored-By: Falk Hueffner <falk@debian.org>\n\nFrom-SVN: r78294", "tree": {"sha": "2e44e37a0e7aecf9918a26fd85248ec003ba70c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e44e37a0e7aecf9918a26fd85248ec003ba70c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29f4ceab97334d8e361a103dae4254766414acf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29f4ceab97334d8e361a103dae4254766414acf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29f4ceab97334d8e361a103dae4254766414acf5"}], "stats": {"total": 50, "additions": 34, "deletions": 16}, "files": [{"sha": "e73f7b22795a6bcd7caa4ed6bcd7dcd3c0f06e83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "patch": "@@ -1,3 +1,11 @@\n+2004-02-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+            Falk Hueffner  <falk@debian.org>\n+\n+\tPR c/14188\n+\t* builtins.c (expand_builtin_va_arg): Emit an informative message\n+\tif a trap is generated.\n+\t* c-typeck.c (build_function_call): Likewise.\n+\n 2004-02-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcov-io.c (gcov_open) [GCOV_LOCKED]: Use open + fdopen instead of"}, {"sha": "895c83527d2e17b18005e7098cec4acd89dbefa2", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "patch": "@@ -4134,6 +4134,7 @@ expand_builtin_va_arg (tree valist, tree type)\n \n       /* We can, however, treat \"undefined\" any way we please.\n \t Call abort to encourage the user to fix the program.  */\n+      inform (\"if this code is reached, the program will abort\");\n       expand_builtin_trap ();\n \n       /* This is dead code, but go ahead and finish so that the"}, {"sha": "2f6216c2fb3418586303452ba53e7c02549fab85", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "patch": "@@ -1709,6 +1709,10 @@ build_function_call (tree function, tree params)\n \t executions of the program must execute the code.  */\n       warning (\"function called through a non-compatible type\");\n \n+      /* We can, however, treat \"undefined\" any way we please.\n+\t Call abort to encourage the user to fix the program.  */\n+      inform (\"if this code is reached, the program will abort\");\n+\n       if (VOID_TYPE_P (return_type))\n \treturn trap;\n       else"}, {"sha": "f62f2946be5fb5643723c84c5a29d06ea530264b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "patch": "@@ -1,3 +1,8 @@\n+2004-02-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/cast-function-1.c: Adjust for new informative message.\n+\t* gcc.dg/va-arg-1.c: Likewise.\n+\n 2004-02-23  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/14143"}, {"sha": "8ed7d5da41cc830fb3544c224365cf14ad1a3661", "filename": "gcc/testsuite/gcc.dg/cast-function-1.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-function-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-function-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-function-1.c?ref=bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "patch": "@@ -22,19 +22,19 @@ void bar(void)\n   int i;\n   str_t s;\n \n-  d = ((double (*) (int)) foo1) (i);  /* { dg-warning \"non-compatible\" } */\n-  i = ((int (*) (double)) foo1) (d);  /* { dg-warning \"non-compatible\" } */\n-  s = ((str_t (*) (int)) foo1) (i);   /* { dg-warning \"non-compatible\" } */\n-  ((void (*) (int)) foo1) (d);        /* { dg-warning \"non-compatible\" } */\n-  i = ((int (*) (int)) foo1) (i);     /* { dg-bogus \"non-compatible\" } */\n-  (void) foo1 (i);                    /* { dg-bogus \"non-compatible\" } */\n-\n-  d = ((double (*) (int)) foo2) (i);  /* { dg-warning \"non-compatible\" } */\n-  i = ((int (*) (double)) foo2) (d);  /* { dg-bogus \"non-compatible\" } */\n-  s = ((str_t (*) (int)) foo2) (i);   /* { dg-warning \"non-compatible\" } */\n-  ((void (*) (int)) foo2) (d);        /* { dg-warning \"non-compatible\" } */\n-  i = ((int (*) (int)) foo2) (i);     /* { dg-bogus \"non-compatible\" } */\n-  (void) foo2 (i);                    /* { dg-bogus \"non-compatible\" } */\n+  d = ((double (*) (int)) foo1) (i);  /* { dg-warning \"non-compatible|abort\" } */\n+  i = ((int (*) (double)) foo1) (d);  /* { dg-warning \"non-compatible|abort\" } */\n+  s = ((str_t (*) (int)) foo1) (i);   /* { dg-warning \"non-compatible|abort\" } */\n+  ((void (*) (int)) foo1) (d);        /* { dg-warning \"non-compatible|abort\" } */\n+  i = ((int (*) (int)) foo1) (i);     /* { dg-bogus \"non-compatible|abort\" } */\n+  (void) foo1 (i);                    /* { dg-bogus \"non-compatible|abort\" } */\n+\n+  d = ((double (*) (int)) foo2) (i);  /* { dg-warning \"non-compatible|abort\" } */\n+  i = ((int (*) (double)) foo2) (d);  /* { dg-bogus \"non-compatible|abort\" } */\n+  s = ((str_t (*) (int)) foo2) (i);   /* { dg-warning \"non-compatible|abort\" } */\n+  ((void (*) (int)) foo2) (d);        /* { dg-warning \"non-compatible|abort\" } */\n+  i = ((int (*) (int)) foo2) (i);     /* { dg-bogus \"non-compatible|abort\" } */\n+  (void) foo2 (i);                    /* { dg-bogus \"non-compatible|abort\" } */\n }\n \n int foo1(int arg)"}, {"sha": "ecd0e4d84bfc74462207620a5a7bec808c2db840", "filename": "gcc/testsuite/gcc.dg/va-arg-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba745c19d4fa3c59a9233f7e7e3b0b92977e662/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-1.c?ref=bba745c19d4fa3c59a9233f7e7e3b0b92977e662", "patch": "@@ -7,7 +7,7 @@ volatile int i;\n \n void foo()\n {\n-  i = va_arg(v, char); /* { dg-warning \"is promoted to|so you should\" \"char\" } */\n-  i = va_arg(v, short); /* { dg-warning \"is promoted to\" \"short\" } */\n-  i = va_arg(v, float); /* { dg-warning \"is promoted to\" \"float\" } */\n+  i = va_arg(v, char); /* { dg-warning \"is promoted to|so you should|abort\" \"char\" } */\n+  i = va_arg(v, short); /* { dg-warning \"is promoted to|abort\" \"short\" } */\n+  i = va_arg(v, float); /* { dg-warning \"is promoted to|abort\" \"float\" } */\n }"}]}