{"sha": "47edeeab0f1802db436a50ff241b2f30200add54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdlZGVlYWIwZjE4MDJkYjQzNmE1MGZmMjQxYjJmMzAyMDBhZGQ1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T06:47:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T06:47:22Z"}, "message": "[multiple changes]\n\n2010-06-22  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Find_Sources): When a source from a multi-unit file is\n\tfound, check if it's path has aready been found, whatever its index.\n\n2010-06-22  Robert Dewar  <dewar@adacore.com>\n\n\t* atree.adb, gnatbind.adb: Minor reformatting.\n\tMinor code reorganization.\n\nFrom-SVN: r161131", "tree": {"sha": "1cd8c0f73bacd28f7da6592854ffd98057e0c9ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cd8c0f73bacd28f7da6592854ffd98057e0c9ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47edeeab0f1802db436a50ff241b2f30200add54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47edeeab0f1802db436a50ff241b2f30200add54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47edeeab0f1802db436a50ff241b2f30200add54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47edeeab0f1802db436a50ff241b2f30200add54/comments", "author": null, "committer": null, "parents": [{"sha": "6d812dd3582299f030ec940c3c513c0653a1a49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d812dd3582299f030ec940c3c513c0653a1a49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d812dd3582299f030ec940c3c513c0653a1a49f"}], "stats": {"total": 71, "additions": 47, "deletions": 24}, "files": [{"sha": "a58cf0d6ae577067116cdf3573bedef5a1773fec", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47edeeab0f1802db436a50ff241b2f30200add54/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47edeeab0f1802db436a50ff241b2f30200add54/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=47edeeab0f1802db436a50ff241b2f30200add54", "patch": "@@ -1,3 +1,13 @@\n+2010-06-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Find_Sources): When a source from a multi-unit file is\n+\tfound, check if it's path has aready been found, whatever its index.\n+\n+2010-06-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* atree.adb, gnatbind.adb: Minor reformatting.\n+\tMinor code reorganization.\n+\n 2010-06-21  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Conditional_Expression): Fold if condition"}, {"sha": "8bf09cb866c24acac46250421354ef58ff4d0f3d", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47edeeab0f1802db436a50ff241b2f30200add54/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47edeeab0f1802db436a50ff241b2f30200add54/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=47edeeab0f1802db436a50ff241b2f30200add54", "patch": "@@ -63,15 +63,15 @@ package body Atree is\n \n    --  Either way, gnat1 will stop when node 12345 is created\n \n-   --  The second method is faster\n+   --  The second method is much faster\n \n-   --  Similarly, rr and rrd allow breaking on rewriting of a given node.\n+   --  Similarly, rr and rrd allow breaking on rewriting of a given node\n \n    ww : Node_Id'Base := Node_Id'First - 1;\n    pragma Export (Ada, ww); --  trick the optimizer\n    Watch_Node : Node_Id'Base renames ww;\n-   --  Node to \"watch\"; that is, whenever a node is created, we check if it is\n-   --  equal to Watch_Node, and if so, call New_Node_Breakpoint. You have\n+   --  Node to \"watch\"; that is, whenever a node is created, we check if it\n+   --  is equal to Watch_Node, and if so, call New_Node_Breakpoint. You have\n    --  presumably set a breakpoint on New_Node_Breakpoint. Note that the\n    --  initial value of Node_Id'First - 1 ensures that by default, no node\n    --  will be equal to Watch_Node.\n@@ -108,7 +108,7 @@ package body Atree is\n    --  calls Rewrite_Breakpoint. Otherwise, does nothing.\n \n    procedure Node_Debug_Output (Op : String; N : Node_Id);\n-   --  Common code for nnd and rrd. Write Op followed by information about N.\n+   --  Common code for nnd and rrd, writes Op followed by information about N\n \n    -----------------------------\n    -- Local Objects and Types --"}, {"sha": "9d7ac41b32f081edb2ae6b8040a455a33b0f81f3", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47edeeab0f1802db436a50ff241b2f30200add54/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47edeeab0f1802db436a50ff241b2f30200add54/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=47edeeab0f1802db436a50ff241b2f30200add54", "patch": "@@ -826,7 +826,7 @@ begin\n             --  sources) if -R was used.\n \n             if List_Closure then\n-               declare\n+               List_Closure_Display : declare\n                   Source : File_Name_Type;\n \n                   function Put_In_Sources (S : File_Name_Type) return Boolean;\n@@ -852,6 +852,8 @@ begin\n                      return True;\n                   end Put_In_Sources;\n \n+               --  Start of processing for List_Closure_Display\n+\n                begin\n                   Closure_Sources.Init;\n \n@@ -862,7 +864,6 @@ begin\n                   end if;\n \n                   for J in reverse Elab_Order.First .. Elab_Order.Last loop\n-\n                      Source := Units.Table (Elab_Order.Table (J)).Sfile;\n \n                      --  Do not include the sources of the runtime and do not\n@@ -875,7 +876,7 @@ begin\n                            Write_Str (\"   \");\n                         end if;\n \n-                        Write_Str (Get_Name_String  (Source));\n+                        Write_Str (Get_Name_String (Source));\n                         Write_Eol;\n                      end if;\n                   end loop;\n@@ -908,7 +909,7 @@ begin\n                   if not Zero_Formatting then\n                      Write_Eol;\n                   end if;\n-               end;\n+               end List_Closure_Display;\n             end if;\n          end if;\n       end if;"}, {"sha": "498a01eb9fadb95c232dfcd1b59061ec4035999a", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 27, "deletions": 15, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47edeeab0f1802db436a50ff241b2f30200add54/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47edeeab0f1802db436a50ff241b2f30200add54/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=47edeeab0f1802db436a50ff241b2f30200add54", "patch": "@@ -57,20 +57,25 @@ package body Prj.Nmsc is\n       Listed   : Boolean := False;\n       Found    : Boolean := False;\n    end record;\n+\n    No_Name_Location : constant Name_Location :=\n-     (No_File, No_Location, No_Source, False, False);\n+                        (Name     => No_File,\n+                         Location => No_Location,\n+                         Source   => No_Source,\n+                         Listed   => False,\n+                         Found    => False);\n+\n    package Source_Names_Htable is new GNAT.Dynamic_HTables.Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => Name_Location,\n       No_Element => No_Name_Location,\n       Key        => File_Name_Type,\n       Hash       => Hash,\n       Equal      => \"=\");\n-   --  Information about file names found in string list attribute\n-   --  (Source_Files or Source_List_File).\n-   --  Except is set to True if source is a naming exception in the project.\n-   --  This is used to check that all referenced files were indeed found on the\n-   --  disk.\n+   --  File name information found in string list attribute (Source_Files or\n+   --  Source_List_File). Except is set to True if source is a naming exception\n+   --  in the project. Used to check that all referenced files were indeed\n+   --  found on the disk.\n \n    type Unit_Exception is record\n       Name : Name_Id;  --  ??? duplicates the key\n@@ -6405,6 +6410,8 @@ package body Prj.Nmsc is\n       declare\n          Source : Source_Id;\n          Iter   : Source_Iterator;\n+         Found  : Boolean := False;\n+         Path   : Path_Information;\n \n       begin\n          Iter := For_Each_Source (Data.Tree, Project.Project);\n@@ -6416,16 +6423,22 @@ package body Prj.Nmsc is\n               and then Source.Path = No_Path_Information\n             then\n                if Source.Unit /= No_Unit_Index then\n+                  Found := False;\n \n                   --  For multi-unit source files, source_id gets duplicated\n                   --  once for every unit. Only the first source_id got its\n-                  --  full path set. So if it isn't set for that first one,\n-                  --  the file wasn't found. Otherwise we need to update for\n-                  --  units after the first one.\n+                  --  full path set.\n \n-                  if Source.Index = 0\n-                    or else Source.Index = 1\n-                  then\n+                  if Source.Index /= 0 then\n+                     Path := Files_Htable.Get\n+                       (Data.File_To_Source, Source.File).Path;\n+\n+                     if Path /= No_Path_Information then\n+                        Found := True;\n+                     end if;\n+                  end if;\n+\n+                  if not Found then\n                      Error_Msg_Name_1 := Name_Id (Source.Display_File);\n                      Error_Msg_Name_2 := Name_Id (Source.Unit.Name);\n                      Error_Msg\n@@ -6434,16 +6447,15 @@ package body Prj.Nmsc is\n                         No_Location, Project.Project);\n \n                   else\n-                     Source.Path := Files_Htable.Get\n-                       (Data.File_To_Source, Source.File).Path;\n+                     Source.Path := Path;\n \n                      if Current_Verbosity = High then\n                         if Source.Path /= No_Path_Information then\n                            Write_Line (\"Setting full path for \"\n                                        & Get_Name_String (Source.File)\n                                        & \" at\" & Source.Index'Img\n                                        & \" to \"\n-                                       & Get_Name_String (Source.Path.Name));\n+                                       & Get_Name_String (Path.Name));\n                         end if;\n                      end if;\n                   end if;"}]}