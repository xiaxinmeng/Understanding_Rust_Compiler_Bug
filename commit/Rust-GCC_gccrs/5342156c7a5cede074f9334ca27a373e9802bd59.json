{"sha": "5342156c7a5cede074f9334ca27a373e9802bd59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM0MjE1NmM3YTVjZWRlMDc0ZjkzMzRjYTI3YTM3M2U5ODAyYmQ1OQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-01-12T16:48:29Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-01-12T16:48:29Z"}, "message": "re PR c++/68979 (error: left operand of shift expression \u2018(-1 << 4)\u2019 is negative)\n\n\tPR c++/68979\n\t* constexpr.c (cxx_eval_check_shift_p): Use permerror rather than\n\terror_at and adjust the return value.\n\n\t* g++.dg/warn/permissive-1.C: New test.\n\nFrom-SVN: r232280", "tree": {"sha": "d7b784d4a25f614dc8ecdaf5ffbcabf4a2e8da38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7b784d4a25f614dc8ecdaf5ffbcabf4a2e8da38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5342156c7a5cede074f9334ca27a373e9802bd59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5342156c7a5cede074f9334ca27a373e9802bd59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5342156c7a5cede074f9334ca27a373e9802bd59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5342156c7a5cede074f9334ca27a373e9802bd59/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "324402a0c6eb8a24208fe443735fced7662b0ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/324402a0c6eb8a24208fe443735fced7662b0ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/324402a0c6eb8a24208fe443735fced7662b0ee8"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "7230c718c42b7b13c13bd5428b7bfdd0713572b3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5342156c7a5cede074f9334ca27a373e9802bd59/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5342156c7a5cede074f9334ca27a373e9802bd59/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5342156c7a5cede074f9334ca27a373e9802bd59", "patch": "@@ -1,3 +1,9 @@\n+2016-01-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/68979\n+\t* constexpr.c (cxx_eval_check_shift_p): Use permerror rather than\n+\terror_at and adjust the return value.\n+\n 2016-01-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR objc++/68511"}, {"sha": "36a1e4286dfb23c9a6b6c28c27eccef580a8c1c1", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5342156c7a5cede074f9334ca27a373e9802bd59/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5342156c7a5cede074f9334ca27a373e9802bd59/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=5342156c7a5cede074f9334ca27a373e9802bd59", "patch": "@@ -1512,17 +1512,17 @@ cxx_eval_check_shift_p (location_t loc, const constexpr_ctx *ctx,\n   if (tree_int_cst_sgn (rhs) == -1)\n     {\n       if (!ctx->quiet)\n-\terror_at (loc, \"right operand of shift expression %q+E is negative\",\n-\t\t  build2_loc (loc, code, type, lhs, rhs));\n-      return true;\n+\tpermerror (loc, \"right operand of shift expression %q+E is negative\",\n+\t\t   build2_loc (loc, code, type, lhs, rhs));\n+      return (!flag_permissive || ctx->quiet);\n     }\n   if (compare_tree_int (rhs, uprec) >= 0)\n     {\n       if (!ctx->quiet)\n-\terror_at (loc, \"right operand of shift expression %q+E is >= than \"\n-\t\t  \"the precision of the left operand\",\n-\t\t  build2_loc (loc, code, type, lhs, rhs));\n-      return true;\n+\tpermerror (loc, \"right operand of shift expression %q+E is >= than \"\n+\t\t   \"the precision of the left operand\",\n+\t\t   build2_loc (loc, code, type, lhs, rhs));\n+      return (!flag_permissive || ctx->quiet);\n     }\n \n   /* The value of E1 << E2 is E1 left-shifted E2 bit positions; [...]\n@@ -1536,9 +1536,10 @@ cxx_eval_check_shift_p (location_t loc, const constexpr_ctx *ctx,\n       if (tree_int_cst_sgn (lhs) == -1)\n \t{\n \t  if (!ctx->quiet)\n-\t    error_at (loc, \"left operand of shift expression %q+E is negative\",\n-\t\t      build2_loc (loc, code, type, lhs, rhs));\n-\t  return true;\n+\t    permerror (loc,\n+\t\t       \"left operand of shift expression %q+E is negative\",\n+\t\t       build2_loc (loc, code, type, lhs, rhs));\n+\t  return (!flag_permissive || ctx->quiet);\n \t}\n       /* For signed x << y the following:\n \t (unsigned) x >> ((prec (lhs) - 1) - y)\n@@ -1555,9 +1556,9 @@ cxx_eval_check_shift_p (location_t loc, const constexpr_ctx *ctx,\n       if (tree_int_cst_lt (integer_one_node, t))\n \t{\n \t  if (!ctx->quiet)\n-\t    error_at (loc, \"shift expression %q+E overflows\",\n-\t\t      build2_loc (loc, code, type, lhs, rhs));\n-\t  return true;\n+\t    permerror (loc, \"shift expression %q+E overflows\",\n+\t\t       build2_loc (loc, code, type, lhs, rhs));\n+\t  return (!flag_permissive || ctx->quiet);\n \t}\n     }\n   return false;"}, {"sha": "ec887e975056672d3ee7deb5ffe1546af39e990d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5342156c7a5cede074f9334ca27a373e9802bd59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5342156c7a5cede074f9334ca27a373e9802bd59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5342156c7a5cede074f9334ca27a373e9802bd59", "patch": "@@ -1,3 +1,8 @@\n+2016-01-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/68979\n+\t* g++.dg/warn/permissive-1.C: New test.\n+\n 2016-01-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR objc++/68511"}, {"sha": "bfaca7637824560c4511308e047a14ccc60b829e", "filename": "gcc/testsuite/g++.dg/warn/permissive-1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5342156c7a5cede074f9334ca27a373e9802bd59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpermissive-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5342156c7a5cede074f9334ca27a373e9802bd59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpermissive-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpermissive-1.C?ref=5342156c7a5cede074f9334ca27a373e9802bd59", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/68979\n+// { dg-do compile { target int32 } }\n+// { dg-options \"-fpermissive -Wno-shift-overflow -Wno-shift-count-overflow -Wno-shift-count-negative\" }\n+\n+enum A { AA = -1 << 4 }; // { dg-warning \"operand of shift expression\" \"\" { target c++11 } }\n+enum B { BB = 1 << -4 }; // { dg-warning \"operand of shift expression\" }\n+enum C { CC = 1 << __SIZEOF_INT__ * 4 * __CHAR_BIT__ - 4 }; // { dg-warning \"operand of shift expression\" }\n+enum D { DD = 10 << __SIZEOF_INT__ * __CHAR_BIT__ - 2 }; // { dg-warning \"shift expression\" \"\" { target c++11 } }"}]}