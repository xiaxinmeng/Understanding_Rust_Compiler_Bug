{"sha": "9cebe4904046846a52c174b490967a3aa4e5e7b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNlYmU0OTA0MDQ2ODQ2YTUyYzE3NGI0OTA5NjdhM2FhNGU1ZTdiMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-31T05:18:59Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-31T05:18:59Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r643", "tree": {"sha": "961a926a3008b1e4abb383024f4d2854f449de85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/961a926a3008b1e4abb383024f4d2854f449de85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cebe4904046846a52c174b490967a3aa4e5e7b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cebe4904046846a52c174b490967a3aa4e5e7b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cebe4904046846a52c174b490967a3aa4e5e7b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cebe4904046846a52c174b490967a3aa4e5e7b3/comments", "author": null, "committer": null, "parents": [{"sha": "128e90091593f3731cb839fc347e2badbfc54551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128e90091593f3731cb839fc347e2badbfc54551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/128e90091593f3731cb839fc347e2badbfc54551"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "154eb29deb32284770c7df3d992240e4a70146d0", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cebe4904046846a52c174b490967a3aa4e5e7b3/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cebe4904046846a52c174b490967a3aa4e5e7b3/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=9cebe4904046846a52c174b490967a3aa4e5e7b3", "patch": "@@ -394,7 +394,7 @@\n #ifdef SGS_CMP_ORDER\n       return \\\"cmp%.l %d1,%d0\\\";\n #else\n-      return \\\"cmp%.l %d0,%d1\\\"; \n+      return \\\"cmp%.l %d0,%d1\\\";\n #endif\n     }\n #ifdef SGS_CMP_ORDER\n@@ -419,7 +419,7 @@\n #ifdef SGS_CMP_ORDER\n       return \\\"cmp%.w %d1,%d0\\\";\n #else\n-      return \\\"cmp%.w %d0,%d1\\\"; \n+      return \\\"cmp%.w %d0,%d1\\\";\n #endif\n     }\n #ifdef SGS_CMP_ORDER\n@@ -759,9 +759,9 @@\n         {\n \t  operands[1] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) - 8);\n #if defined(MOTOROLA) && !defined(CRDS)\n-          return \\\"moveq%.l %1,%0;addq%.w %#8,%0\\\";\n+          return \\\"moveq%.l %1,%0\\;addq%.w %#8,%0\\\";\n #else\n-\t  return \\\"moveq %1,%0;addq%.w %#8,%0\\\";\n+\t  return \\\"moveq %1,%0\\;addq%.w %#8,%0\\\";\n #endif\n \t}\n       else if (DATA_REG_P (operands[0])\n@@ -786,9 +786,9 @@\n         {\n \t  operands[1] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) / 2);\n #if defined(MOTOROLA) && !defined(CRDS)\n-          return \\\"moveq%.l %1,%0;add%.w %0,%0\\\";\n+          return \\\"moveq%.l %1,%0\\;add%.w %0,%0\\\";\n #else\n-\t  return \\\"moveq %1,%0;add%.w %0,%0\\\";\n+\t  return \\\"moveq %1,%0\\;add%.w %0,%0\\\";\n #endif\n \t}\n       else if (ADDRESS_REG_P (operands[0])\n@@ -1755,7 +1755,7 @@\n \t  && TARGET_68020) \n \t{\n \t  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) - 8);\n-\t  return \\\"addq%.w %#8,%0; addq%.w %2,%0\\\";\n+\t  return \\\"addq%.w %#8,%0\\;addq%.w %2,%0\\\";\n \t}\n       if (INTVAL (operands[2]) < -8\n \t  && INTVAL (operands[2]) >= -16\n@@ -1764,7 +1764,7 @@\n \t{\n \t  operands[2] = gen_rtx (CONST_INT, VOIDmode, \n \t\t\t\t  - INTVAL (operands[2]) - 8);\n-\t  return \\\"subq%.w %#8,%0; subq%.w %2,%0\\\";\n+\t  return \\\"subq%.w %#8,%0\\;subq%.w %2,%0\\\";\n \t}\n #endif\n       if (ADDRESS_REG_P (operands[0])\n@@ -1821,7 +1821,7 @@\n \t  && TARGET_68020) \n \t{\n \t  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) - 8);\n-\t  return \\\"addq%.w %#8,%0; addq%.w %2,%0\\\";\n+\t  return \\\"addq%.w %#8,%0\\;addq%.w %2,%0\\\";\n \t}\n       if (INTVAL (operands[2]) < -8\n \t  && INTVAL (operands[2]) >= -16\n@@ -1830,7 +1830,7 @@\n \t{\n \t  operands[2] = gen_rtx (CONST_INT, VOIDmode, \n \t\t\t\t - INTVAL (operands[2]) - 8);\n-\t  return \\\"subq%.w %#8,%0; subq%.w %2,%0\\\";\n+\t  return \\\"subq%.w %#8,%0\\;subq%.w %2,%0\\\";\n \t}\n     }\n #endif\n@@ -1881,7 +1881,7 @@\n \t  && TARGET_68020) \n \t{\n \t  operands[1] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) - 8);\n-\t  return \\\"addq%.w %#8,%0; addq%.w %1,%0\\\";\n+\t  return \\\"addq%.w %#8,%0\\;addq%.w %1,%0\\\";\n \t}\n       if (INTVAL (operands[1]) < -8\n \t  && INTVAL (operands[1]) >= -16\n@@ -1890,7 +1890,7 @@\n \t{\n \t  operands[1] = gen_rtx (CONST_INT, VOIDmode, \n \t\t\t\t - INTVAL (operands[1]) - 8);\n-\t  return \\\"subq%.w %#8,%0; subq%.w %1,%0\\\";\n+\t  return \\\"subq%.w %#8,%0\\;subq%.w %1,%0\\\";\n \t}\n     }\n #endif\n@@ -1935,7 +1935,7 @@\n \t  && TARGET_68020) \n \t{\n \t  operands[1] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) - 8);\n-\t  return \\\"addq%.w %#8,%0; addq%.w %1,%0\\\";\n+\t  return \\\"addq%.w %#8,%0\\;addq%.w %1,%0\\\";\n \t}\n       if (INTVAL (operands[1]) < -8\n \t  && INTVAL (operands[1]) >= -16\n@@ -1944,7 +1944,7 @@\n \t{\n \t  operands[1] = gen_rtx (CONST_INT, VOIDmode, \n \t\t\t\t - INTVAL (operands[1]) - 8);\n-\t  return \\\"subq%.w %#8,%0; subq%.w %1,%0\\\";\n+\t  return \\\"subq%.w %#8,%0\\;subq%.w %1,%0\\\";\n \t}\n     }\n #endif\n@@ -2154,7 +2154,7 @@\n \t  && TARGET_68020)\n \t{\n \t  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) - 8);\n-\t  return \\\"subq%.w %#8,%0; subq%.w %2,%0\\\";\n+\t  return \\\"subq%.w %#8,%0\\;subq%.w %2,%0\\\";\n \t}\n #endif\n       if (ADDRESS_REG_P (operands[0])\n@@ -2446,7 +2446,7 @@\n   if (rtx_equal_p (operands[0], operands[2]))\n     return \\\"fpmul%.d %y1,%0\\\";\n   if (which_alternative == 0)\n-    return \\\"fpmul3%.d %w2,%w1,%0\\\"; \n+    return \\\"fpmul3%.d %w2,%w1,%0\\\";\n   return \\\"fpmul3%.d %x2,%x1,%0\\\";\n }\")\n \n@@ -4758,7 +4758,7 @@\n \t{\n \t  xoperands[1] = gen_rtx (CONST_INT, VOIDmode, \n \t\t\t\t  INTVAL (xoperands[1]) - 8);\n-\t  output_asm_insn (\\\"addq%.w %#8,%0; addq%.w %1,%0\\\", xoperands);\n+\t  output_asm_insn (\\\"addq%.w %#8,%0\\;addq%.w %1,%0\\\", xoperands);\n \t}\n       else\n #endif\n@@ -4795,7 +4795,7 @@\n \t{\n \t  xoperands[1] = gen_rtx (CONST_INT, VOIDmode, \n \t\t\t\t  INTVAL (xoperands[1]) - 8);\n-\t  output_asm_insn (\\\"addq%.w %#8,%0; addq%.w %1,%0\\\", xoperands);\n+\t  output_asm_insn (\\\"addq%.w %#8,%0\\;addq%.w %1,%0\\\", xoperands);\n \t}\n       else\n #endif\n@@ -4848,7 +4848,7 @@\n ;;           jCC label\n ;;\n ;; Which moves the jCC condition outside the inner loop for free.\n-;; \n+;;\n (define_peephole\n   [(set (pc) (if_then_else (match_operator 3 \"valid_dbcc_comparison_p\"\n                              [(cc0) (const_int 0)])"}]}