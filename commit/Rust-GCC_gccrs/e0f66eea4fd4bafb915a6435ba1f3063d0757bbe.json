{"sha": "e0f66eea4fd4bafb915a6435ba1f3063d0757bbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBmNjZlZWE0ZmQ0YmFmYjkxNWE2NDM1YmExZjMwNjNkMDc1N2JiZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-01-26T13:29:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-01-26T13:29:46Z"}, "message": "par_sco.adb (Traverse_Declarations_Or_Statements): Separate F/W qualifiers for FOR/WHILE loops\n\n2010-01-26  Robert Dewar  <dewar@adacore.com>\n\n\t* par_sco.adb (Traverse_Declarations_Or_Statements): Separate F/W\n\tqualifiers for FOR/WHILE loops\n\t* scos.ads: Use separate type letters F/W for for/while loops\n\nFrom-SVN: r156245", "tree": {"sha": "c2ac09216cbd9c982a2daebb7d4a7b50e5df5d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2ac09216cbd9c982a2daebb7d4a7b50e5df5d2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe/comments", "author": null, "committer": null, "parents": [{"sha": "7f657dde6f3fff3ed52f89a110caaad27fc1f996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f657dde6f3fff3ed52f89a110caaad27fc1f996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f657dde6f3fff3ed52f89a110caaad27fc1f996"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "0cb26f2e40b9b74a4061d5f368ee835127d4c442", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e0f66eea4fd4bafb915a6435ba1f3063d0757bbe", "patch": "@@ -1,3 +1,9 @@\n+2010-01-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par_sco.adb (Traverse_Declarations_Or_Statements): Separate F/W\n+\tqualifiers for FOR/WHILE loops\n+\t* scos.ads: Use separate type letters F/W for for/while loops\n+\n 2010-01-26  Robert Dewar  <dewar@adacore.com>\n \n \t* get_scos.adb (Get_SCOs): Implement new form of CS entries (multiple"}, {"sha": "e9ed4b3a51cdd13d322d21b5839630d83a96a0a3", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=e0f66eea4fd4bafb915a6435ba1f3063d0757bbe", "patch": "@@ -938,7 +938,7 @@ package body Par_SCO is\n                --  any decisions in the exit statement expression.\n \n                when N_Exit_Statement =>\n-                  Extend_Statement_Sequence (N, ' ');\n+                  Extend_Statement_Sequence (N, 'E');\n                   Set_Statement_Entry;\n                   Process_Decisions (Condition (N), 'E');\n \n@@ -1043,16 +1043,25 @@ package body Par_SCO is\n \n                when N_Loop_Statement =>\n                   if Present (Iteration_Scheme (N)) then\n+\n+                     --  If iteration scheme present, extend the current\n+                     --  statement sequence to include the iteration scheme\n+                     --  and process any decisions it contains.\n+\n                      declare\n                         ISC : constant Node_Id := Iteration_Scheme (N);\n \n                      begin\n-                        Extend_Statement_Sequence (N, ISC, 'F');\n+                        --  While statement\n \n                         if Present (Condition (ISC)) then\n-                           Process_Decisions\n-                             (Condition (ISC), 'W');\n+                           Extend_Statement_Sequence (N, ISC, 'W');\n+                           Process_Decisions (Condition (ISC), 'W');\n+\n+                        --  For statement\n+\n                         else\n+                           Extend_Statement_Sequence (N, ISC, 'F');\n                            Process_Decisions\n                              (Loop_Parameter_Specification (ISC), 'X');\n                         end if;"}, {"sha": "6cc8742f3abd992459fa6587438f0cdf94354c81", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f66eea4fd4bafb915a6435ba1f3063d0757bbe/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=e0f66eea4fd4bafb915a6435ba1f3063d0757bbe", "patch": "@@ -105,8 +105,9 @@ package SCOs is\n    --    and the following regions of the syntax tree:\n \n    --      the part of a case_statement from CASE up to the expression\n-   --      the part of a FOR iteration scheme from FOR up to the\n+   --      the part of a FOR loop iteration scheme from FOR up to the\n    --        loop_parameter_specification\n+   --      the part of a WHILE loop up to the condition\n    --      the part of an extended_return_statement from RETURN up to the\n    --        expression (if present) or to the return_subtype_indication (if\n    --        no expression)\n@@ -148,11 +149,13 @@ package SCOs is\n    --      r  renaming declaration\n    --      i  generic instantiation\n    --      C  CASE statement (includes only the expression)\n-   --      F  FOR/WHILE loop statement (includes only the iteration scheme)\n+   --      E  EXIT statement\n+   --      F  FOR loop statement (includes only the iteration scheme)\n    --      I  IF statement (includes only the condition [in the RM sense, which\n    --         is a decision in the SCO sense])\n    --      P  PRAGMA\n    --      R  extended RETURN statement\n+   --      W  WHILE loop statement (includes only the condition)\n \n    --    and is omitted for all other cases.\n \n@@ -278,9 +281,10 @@ package SCOs is\n \n    --    Statements\n    --      C1   = 'S' for entry point, 's' otherwise\n-   --      C2   = 't', 's', 'o', 'r', 'i', 'C', 'F', 'I', 'P', 'R', ' '\n+   --      C2   = 't', 's', 'o', 'r', 'i',\n+   --             'C', 'E', 'F', 'I', 'P', 'R', 'W', ' '\n    --             (type/subtype/object/renaming/instantiation/\n-   --              CASE/FOR or WHILE/IF/PRAGMA/RETURN/other)\n+   --              CASE/EXIT/FOR/IF/PRAGMA/RETURN/WHILE/other)\n    --      From = starting source location\n    --      To   = ending source location\n    --      Last = False for all but the last entry, True for last entry"}]}