{"sha": "b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY2NWNkY2U5NjU1ZjQ3YzhmNmVhZWViMjk2MWYzNjQzYmJiNDk1Yw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-12-22T03:32:35Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-12-22T03:32:35Z"}, "message": "20020910-1.c: Disable if __INT_MAX is too small.\n\n\t* gcc.c-torture/compile/20020910-1.c: Disable if __INT_MAX is\n\ttoo small.\n\t* gcc.c-torture/compile/930217-1.c: Likewise.\n\t* gcc.c-torture/compile/930513-1.c: Likewise.\n\t* gcc.c-torture/execute/920908-2.c: Likewise.\n\t* gcc.c-torture/execute/921204-1.c: Likewise.\n\t* gcc.c-torture/execute/930621-1.c: Likewise.\n\t* gcc.c-torture/execute/930630-1.c: Likewise.\n\t* gcc.c-torture/execute/931031-1.c: Likewise.\n\t* gcc.c-torture/execute/980602-2.c: Likewise.\n\t* gcc.c-torture/execute/comp-goto-1.c: Likewise.\n\t* gcc.c-torture/execute/compndlit-1.c: Likewise.\n\t* gcc.c-torture/execute/extzvsi.c: Likewise.\n\t* gcc.c-torture/unsorted/ext.c: Likewise.\n\nFrom-SVN: r74923", "tree": {"sha": "1df15853e5faefa4a93b0b93cfb5bcf7c0f1ec6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1df15853e5faefa4a93b0b93cfb5bcf7c0f1ec6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/comments", "author": null, "committer": null, "parents": [{"sha": "73b9c9bffae4e475e437fbd21974925dd337e551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b9c9bffae4e475e437fbd21974925dd337e551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73b9c9bffae4e475e437fbd21974925dd337e551"}], "stats": {"total": 133, "additions": 126, "deletions": 7}, "files": [{"sha": "563446af150d5e0464e59e0a0a3b88f596e0f3dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,20 @@\n+2003-12-21  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* gcc.c-torture/compile/20020910-1.c: Disable if __INT_MAX is\n+\ttoo small.\n+\t* gcc.c-torture/compile/930217-1.c: Likewise.\n+\t* gcc.c-torture/compile/930513-1.c: Likewise.\n+\t* gcc.c-torture/execute/920908-2.c: Likewise.\n+\t* gcc.c-torture/execute/921204-1.c: Likewise.\n+\t* gcc.c-torture/execute/930621-1.c: Likewise.\n+\t* gcc.c-torture/execute/930630-1.c: Likewise.\n+\t* gcc.c-torture/execute/931031-1.c: Likewise.\n+\t* gcc.c-torture/execute/980602-2.c: Likewise.\n+\t* gcc.c-torture/execute/comp-goto-1.c: Likewise.\n+\t* gcc.c-torture/execute/compndlit-1.c: Likewise.\n+\t* gcc.c-torture/execute/extzvsi.c: Likewise.\n+\t* gcc.c-torture/unsorted/ext.c: Likewise.\n+\n 2003-12-20  Andrew Pinski  <pinskia@gcc.gnu.org>\n \n \tPR target/12749"}, {"sha": "092809b769c7b909e2cdd7120c708be4e2199595", "filename": "gcc/testsuite/gcc.c-torture/compile/20020910-1.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020910-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020910-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020910-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,8 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int a;\n+#else\n unsigned int  x0  = 0;\n \n typedef struct {\n@@ -11,4 +16,4 @@ static void foo (void)\n {\n   yy.field1 = (unsigned int ) (&x0);\n }\n- \n+#endif"}, {"sha": "0f64a040712872b4dc1818cb0e463dc3efe69d7a", "filename": "gcc/testsuite/gcc.c-torture/compile/930217-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930217-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930217-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930217-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,8 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int a;\n+#else\n double g ();\n typedef union {\n   struct {\n@@ -12,3 +17,4 @@ f(x, n)\n   ((s *)&x)->u.e -= n;\n   x = g((double)x, -n);\n }\n+#endif"}, {"sha": "463fd89b4010f954b643eefdaa4004ea2f04ece3", "filename": "gcc/testsuite/gcc.c-torture/compile/930513-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930513-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930513-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930513-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,8 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int a;\n+#else\n struct s {\n   int f1 : 26;\n   int f2 : 8;\n@@ -7,3 +12,4 @@ f (struct s *x)\n {\n   return x->f2++ == 0;\n }\n+#endif"}, {"sha": "31c1ae0769c77b9605e67de4b63b43750e371214", "filename": "gcc/testsuite/gcc.c-torture/execute/920908-2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920908-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920908-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920908-2.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n /*\n CONF:m68k-sun-sunos4.1.1\n OPTIONS:-O\n@@ -21,3 +30,4 @@ t.c=0xffff11;\n if(f(t)!=0x11)abort();\n exit(0);\n }\n+#endif"}, {"sha": "a7bba830a34ca0f794986d772560e610d99c147e", "filename": "gcc/testsuite/gcc.c-torture/execute/921204-1.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921204-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921204-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921204-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n typedef struct {\n   unsigned b0:1, f1:17, b18:1, b19:1, b20:1, f2:11;\n } bf;\n@@ -34,3 +43,4 @@ main()\n     abort();\n   exit(0);\n }\n+#endif"}, {"sha": "4bb7cdbe0760beb9ea08d7e257f38eebe8ce7083", "filename": "gcc/testsuite/gcc.c-torture/execute/930621-1.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930621-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930621-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930621-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n f ()\n {\n   struct {\n@@ -17,3 +26,4 @@ main ()\n     abort ();\n   exit (0);\n }\n+#endif"}, {"sha": "38ad1fdfd7ba8e9c2ad07143839243a7910dbde3", "filename": "gcc/testsuite/gcc.c-torture/execute/930630-1.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930630-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930630-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930630-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n main ()\n {\n   struct\n@@ -17,3 +26,4 @@ f (x)\n   if (x != 7)\n     abort ();\n }\n+#endif"}, {"sha": "e9ce337955d66926546bce89b1cf45c33d92e693", "filename": "gcc/testsuite/gcc.c-torture/execute/931031-1.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F931031-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F931031-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F931031-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n struct foo\n {\n   unsigned y:1;\n@@ -22,3 +31,4 @@ main ()\n     abort ();\n   exit (0);\n }\n+#endif"}, {"sha": "972553ed584c7659a382bd44b27ea38ee8fa6e6c", "filename": "gcc/testsuite/gcc.c-torture/execute/980602-2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980602-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980602-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980602-2.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n struct {\n     unsigned bit : 30;\n } t;\n@@ -9,3 +18,4 @@ int main()\n     else\n \tabort ();\n }\n+#endif"}, {"sha": "3bf9a26f65510d038af12a9d74d75be98a18794a", "filename": "gcc/testsuite/gcc.c-torture/execute/comp-goto-1.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,13 +1,8 @@\n #include <stdlib.h>\n \n-#if !defined(NO_LABEL_VALUES) && (!defined(STACK_SIZE) || STACK_SIZE >= 4000)\n-#if __INT_MAX__ == 32767\n-typedef unsigned long uint32;\n-typedef signed long sint32;\n-#else\n+#if !defined(NO_LABEL_VALUES) && (!defined(STACK_SIZE) || STACK_SIZE >= 4000) && __INT_MAX__ >= 2147483647\n typedef unsigned int uint32;\n typedef signed int sint32;\n-#endif\n \n typedef uint32 reg_t;\n "}, {"sha": "76328c21c2e7f072e74724f5906c1a93fb33b864", "filename": "gcc/testsuite/gcc.c-torture/execute/compndlit-1.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcompndlit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcompndlit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcompndlit-1.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n struct S\n {\n   int a:3;\n@@ -13,3 +22,4 @@ main ()\n     abort ();\n   exit (0);\n }\n+#endif"}, {"sha": "81f16185d21aaced1d51f4766be2097c83e3f49b", "filename": "gcc/testsuite/gcc.c-torture/execute/extzvsi.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fextzvsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fextzvsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fextzvsi.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n /* Failed on powerpc due to bad extzvsi pattern.  */\n \n struct ieee\n@@ -29,3 +38,4 @@ main (void)\n     abort ();\n   return 0;\n }\n+#endif"}, {"sha": "9e8604ef2b2e553502a7bda9d7420124c4fdd6ae", "filename": "gcc/testsuite/gcc.c-torture/unsorted/ext.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Fext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b665cdce9655f47c8f6eaeeb2961f3643bbb495c/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Fext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Fext.c?ref=b665cdce9655f47c8f6eaeeb2961f3643bbb495c", "patch": "@@ -1,3 +1,12 @@\n+/* The bit-field below would have a problem if __INT_MAX__ is too\n+   small.  */\n+#if __INT_MAX__ < 2147483647\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#else\n struct foo\n {\n   unsigned b31 : 1;\n@@ -11,3 +20,4 @@ foo(a)\n {\n   return a.b30;\n }\n+#endif"}]}