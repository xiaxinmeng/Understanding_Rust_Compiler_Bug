{"sha": "a53d0bcc79ee90dbc21e76349938038e684893f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUzZDBiY2M3OWVlOTBkYmMyMWU3NjM0OTkzODAzOGU2ODQ4OTNmOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-04T23:29:58Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-04T23:29:58Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1437", "tree": {"sha": "03c8936384f37362c5cc9dae1dd5b04aaea2398a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c8936384f37362c5cc9dae1dd5b04aaea2398a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a53d0bcc79ee90dbc21e76349938038e684893f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53d0bcc79ee90dbc21e76349938038e684893f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a53d0bcc79ee90dbc21e76349938038e684893f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53d0bcc79ee90dbc21e76349938038e684893f9/comments", "author": null, "committer": null, "parents": [{"sha": "79604d8ff305b257150a1a0bb6ff44f884b4c831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79604d8ff305b257150a1a0bb6ff44f884b4c831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79604d8ff305b257150a1a0bb6ff44f884b4c831"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "7bb918ec2885bae068710c49c816f58235438027", "filename": "gcc/toplev.c", "status": "modified", "additions": 36, "deletions": 15, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53d0bcc79ee90dbc21e76349938038e684893f9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53d0bcc79ee90dbc21e76349938038e684893f9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=a53d0bcc79ee90dbc21e76349938038e684893f9", "patch": "@@ -187,11 +187,11 @@ enum debug_info_type write_symbols = NO_DEBUG;\n    for the definitions of the different possible levels.  */\n enum debug_info_level debug_info_level = DINFO_LEVEL_NONE;\n \n-#if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)\n-/* Nonzero means can use our own extensions to DBX format.\n-   Relevant only when write_symbols == DBX_DEBUG or XCOFF_DEBUG.  */\n-int use_gdb_dbx_extensions = 0;\n-#endif\n+/* Nonzero means use GNU-only extensions in the generated symbolic\n+   debugging information.  */\n+/* Currently, this only has an effect when write_symbols is set to\n+   DBX_DEBUG, XCOFF_DEBUG, or DWARF_DEBUG.  */\n+int use_gnu_debug_info_extensions = 0;\n \n /* Nonzero means do optimizations.  -O.\n    Particular numeric values stand for particular amounts of optimization;\n@@ -2927,51 +2927,72 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n \t\t For plain -g, use system-specific default.  */\n \t      if (write_symbols == DBX_DEBUG && !strncmp (str, \"ggdb\", len)\n \t\t  && len >= 2)\n-\t\tuse_gdb_dbx_extensions = 1;\n+\t\tuse_gnu_debug_info_extensions = 1;\n \t      else if (write_symbols == DBX_DEBUG && !strcmp (str, \"gstabs+\"))\n-\t\tuse_gdb_dbx_extensions = 1;\n+\t\tuse_gnu_debug_info_extensions = 1;\n \t      else if (write_symbols == DBX_DEBUG\n \t\t       && !strncmp (str, \"gstabs\", len) && len >= 2)\n-\t\tuse_gdb_dbx_extensions = 0;\n+\t\tuse_gnu_debug_info_extensions = 0;\n \t      else\n-\t\tuse_gdb_dbx_extensions = DEFAULT_GDB_EXTENSIONS;\n+\t\tuse_gnu_debug_info_extensions = DEFAULT_GDB_EXTENSIONS;\n #endif /* DBX_DEBUGGING_INFO */\n #ifdef DWARF_DEBUGGING_INFO\n \t      if (write_symbols != NO_DEBUG)\n \t\t;\n+\t      else if (!strncmp (str, \"g\", len))\n+\t\twrite_symbols = DWARF_DEBUG;\n \t      else if (!strncmp (str, \"ggdb\", len))\n \t\twrite_symbols = DWARF_DEBUG;\n-\t      /* For orthogonality.  */\n \t      else if (!strncmp (str, \"gdwarf\", len))\n \t\twrite_symbols = DWARF_DEBUG;\n+\n+\t      /* Always enable extensions for -ggdb or -gdwarf+, \n+\t\t always disable for -gdwarf.\n+\t\t For plain -g, use system-specific default.  */\n+\t      if (write_symbols == DWARF_DEBUG && !strncmp (str, \"ggdb\", len)\n+\t\t  && len >= 2)\n+\t\tuse_gnu_debug_info_extensions = 1;\n+\t      else if (write_symbols == DWARF_DEBUG && !strcmp (str, \"gdwarf+\"))\n+\t\tuse_gnu_debug_info_extensions = 1;\n+\t      else if (write_symbols == DWARF_DEBUG\n+\t\t       && !strncmp (str, \"gdwarf\", len) && len >= 2)\n+\t\tuse_gnu_debug_info_extensions = 0;\n+\t      else\n+\t\tuse_gnu_debug_info_extensions = DEFAULT_GDB_EXTENSIONS;\n #endif\n #ifdef SDB_DEBUGGING_INFO\n \t      if (write_symbols != NO_DEBUG)\n \t\t;\n-\t      else if (!strncmp (str, \"ggdb\", len))\n+\t      else if (!strncmp (str, \"g\", len))\n+\t\twrite_symbols = SDB_DEBUG;\n+\t      else if (!strncmp (str, \"gdb\", len))\n \t\twrite_symbols = SDB_DEBUG;\n \t      else if (!strncmp (str, \"gcoff\", len))\n \t\twrite_symbols = SDB_DEBUG;\n #endif /* SDB_DEBUGGING_INFO */\n #ifdef XCOFF_DEBUGGING_INFO\n \t      if (write_symbols != NO_DEBUG)\n \t\t;\n+\t      else if (!strncmp (str, \"g\", len))\n+\t\twrite_symbols = XCOFF_DEBUG;\n \t      else if (!strncmp (str, \"ggdb\", len))\n \t\twrite_symbols = XCOFF_DEBUG;\n \t      else if (!strncmp (str, \"gxcoff\", len))\n \t\twrite_symbols = XCOFF_DEBUG;\n \n-\t      /* Always enable extensions for -ggdb,\n+\t      /* Always enable extensions for -ggdb or -gxcoff+,\n \t\t always disable for -gxcoff.\n \t\t For plain -g, use system-specific default.  */\n \t      if (write_symbols == XCOFF_DEBUG && !strncmp (str, \"ggdb\", len)\n \t\t  && len >= 2)\n-\t\tuse_gdb_dbx_extensions = 1;\n+\t\tuse_gnu_debug_info_extensions = 1;\n+\t      else if (write_symbols == XCOFF_DEBUG && !strcmp (str, \"gxcoff+\"))\n+\t\tuse_gnu_debug_info_extensions = 1;\n \t      else if (write_symbols == XCOFF_DEBUG\n \t\t       && !strncmp (str, \"gxcoff\", len) && len >= 2)\n-\t\tuse_gdb_dbx_extensions = 0;\n+\t\tuse_gnu_debug_info_extensions = 0;\n \t      else\n-\t\tuse_gdb_dbx_extensions = DEFAULT_GDB_EXTENSIONS;\n+\t\tuse_gnu_debug_info_extensions = DEFAULT_GDB_EXTENSIONS;\n #endif\t      \n \t      if (write_symbols == NO_DEBUG)\n \t\twarning (\"`-%s' option not supported on this version of GCC\", str);"}]}