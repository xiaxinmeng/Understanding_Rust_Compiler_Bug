{"sha": "5a7a4e8064f46ac5f985c3441fd3b504680865a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE3YTRlODA2NGY0NmFjNWY5ODVjMzQ0MWZkM2I1MDQ2ODA4NjVhMw==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2013-12-19T14:51:28Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2013-12-19T14:51:28Z"}, "message": "Implement support for AArch64 Crypto AES.\n\ngcc/\n\t* config/aarch64/aarch64-simd-builtins.def: Update builtins table.\n\t* config/aarch64/aarch64-builtins.c (aarch64_types_binopu_qualifiers,\n\tTYPES_BINOPU): New.\n\t* config/aarch64/aarch64-simd.md (aarch64_crypto_aes<aes_op>v16qi,\n\taarch64_crypto_aes<aesmc_op>v16qi): New.\n\t* config/aarch64/arm_neon.h (vaeseq_u8, vaesdq_u8, vaesmcq_u8,\n\tvaesimcq_u8): New.\n\t* config/aarch64/iterators.md (UNSPEC_AESE, UNSPEC_AESD, UNSPEC_AESMC,\n\tUNSPEC_AESIMC): New.\n\t(CRYPTO_AES, CRYPTO_AESMC): New int iterators.\n\t(aes_op, aesmc_op): New int attributes.\n\ntestsuite/\n\t* gcc.target/aarch64/aes_1.c: New.\n\nFrom-SVN: r206117", "tree": {"sha": "fd581af17164a2f998bd452963f58df88891be5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd581af17164a2f998bd452963f58df88891be5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a7a4e8064f46ac5f985c3441fd3b504680865a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a7a4e8064f46ac5f985c3441fd3b504680865a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a7a4e8064f46ac5f985c3441fd3b504680865a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a7a4e8064f46ac5f985c3441fd3b504680865a3/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26b086810a3bb6d85944429914115f21ac63a277", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26b086810a3bb6d85944429914115f21ac63a277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26b086810a3bb6d85944429914115f21ac63a277"}], "stats": {"total": 133, "additions": 133, "deletions": 0}, "files": [{"sha": "e7d0deb372403fbc88527f5ff0ca843534a23ddc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a7a4e8064f46ac5f985c3441fd3b504680865a3", "patch": "@@ -1,3 +1,17 @@\n+2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def: Update builtins table.\n+\t* config/aarch64/aarch64-builtins.c (aarch64_types_binopu_qualifiers,\n+\tTYPES_BINOPU): New.\n+\t* config/aarch64/aarch64-simd.md (aarch64_crypto_aes<aes_op>v16qi,\n+\taarch64_crypto_aes<aesmc_op>v16qi): New.\n+\t* config/aarch64/arm_neon.h (vaeseq_u8, vaesdq_u8, vaesmcq_u8,\n+\tvaesimcq_u8): New.\n+\t* config/aarch64/iterators.md (UNSPEC_AESE, UNSPEC_AESD, UNSPEC_AESMC,\n+\tUNSPEC_AESIMC): New.\n+\t(CRYPTO_AES, CRYPTO_AESMC): New int iterators.\n+\t(aes_op, aesmc_op): New int attributes.\n+\n 2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* config/arm/types.md (neon_mul_d_long, crypto_aes, crypto_sha1_xor,"}, {"sha": "00a33ce4069f5bfa6dce8b70b695cff7358edbaf", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=5a7a4e8064f46ac5f985c3441fd3b504680865a3", "patch": "@@ -142,13 +142,21 @@ static enum aarch64_type_qualifiers\n aarch64_types_unop_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_none };\n #define TYPES_UNOP (aarch64_types_unop_qualifiers)\n+static enum aarch64_type_qualifiers\n+aarch64_types_unopu_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n+  = { qualifier_unsigned, qualifier_unsigned };\n+#define TYPES_UNOPU (aarch64_types_unopu_qualifiers)\n #define TYPES_CREATE (aarch64_types_unop_qualifiers)\n #define TYPES_REINTERP (aarch64_types_unop_qualifiers)\n static enum aarch64_type_qualifiers\n aarch64_types_binop_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_none, qualifier_maybe_immediate };\n #define TYPES_BINOP (aarch64_types_binop_qualifiers)\n static enum aarch64_type_qualifiers\n+aarch64_types_binopu_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n+  = { qualifier_unsigned, qualifier_unsigned, qualifier_unsigned };\n+#define TYPES_BINOPU (aarch64_types_binopu_qualifiers)\n+static enum aarch64_type_qualifiers\n aarch64_types_ternop_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_none, qualifier_none, qualifier_none };\n #define TYPES_TERNOP (aarch64_types_ternop_qualifiers)"}, {"sha": "6b72e8ff79154e3ea3dff5e2763ede5d17ccc0b2", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=5a7a4e8064f46ac5f985c3441fd3b504680865a3", "patch": "@@ -367,3 +367,8 @@\n   BUILTIN_VSDQ_I_DI (BSL_U, simd_bsl, 0)\n   BUILTIN_VALLDIF (BSL_S, simd_bsl, 0)\n \n+  /* Implemented by aarch64_crypto_aes<op><mode>.  */\n+  VAR1 (BINOPU, crypto_aese, 0, v16qi)\n+  VAR1 (BINOPU, crypto_aesd, 0, v16qi)\n+  VAR1 (UNOPU, crypto_aesmc, 0, v16qi)\n+  VAR1 (UNOPU, crypto_aesimc, 0, v16qi)"}, {"sha": "f8c204f3f8285bcfcc2611b04737af64f94dd083", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=5a7a4e8064f46ac5f985c3441fd3b504680865a3", "patch": "@@ -4074,3 +4074,25 @@\n       (gen_aarch64_get_lane<mode> (operands[0], operands[1], operands[2]));\n     DONE;\n })\n+\n+;; aes\n+\n+(define_insn \"aarch64_crypto_aes<aes_op>v16qi\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=w\")\n+        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"0\")\n+\t\t       (match_operand:V16QI 2 \"register_operand\" \"w\")]\n+         CRYPTO_AES))]\n+  \"TARGET_SIMD && TARGET_CRYPTO\"\n+  \"aes<aes_op>\\\\t%0.16b, %2.16b\"\n+  [(set_attr \"type\" \"crypto_aes\")]\n+)\n+\n+(define_insn \"aarch64_crypto_aes<aesmc_op>v16qi\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=w\")\n+\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"w\")]\n+\t CRYPTO_AESMC))]\n+  \"TARGET_SIMD && TARGET_CRYPTO\"\n+  \"aes<aesmc_op>\\\\t%0.16b, %1.16b\"\n+  [(set_attr \"type\" \"crypto_aes\")]\n+)\n+"}, {"sha": "6cfea434c633cf090a826f74c22a93fcf8473940", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=5a7a4e8064f46ac5f985c3441fd3b504680865a3", "patch": "@@ -15575,6 +15575,36 @@ vbslq_u64 (uint64x2_t __a, uint64x2_t __b, uint64x2_t __c)\n   return __builtin_aarch64_simd_bslv2di_uuuu (__a, __b, __c);\n }\n \n+#ifdef __ARM_FEATURE_CRYPTO\n+\n+/* vaes  */\n+\n+static __inline uint8x16_t\n+vaeseq_u8 (uint8x16_t data, uint8x16_t key)\n+{\n+  return __builtin_aarch64_crypto_aesev16qi_uuu (data, key);\n+}\n+\n+static __inline uint8x16_t\n+vaesdq_u8 (uint8x16_t data, uint8x16_t key)\n+{\n+  return __builtin_aarch64_crypto_aesdv16qi_uuu (data, key);\n+}\n+\n+static __inline uint8x16_t\n+vaesmcq_u8 (uint8x16_t data)\n+{\n+  return __builtin_aarch64_crypto_aesmcv16qi_uu (data);\n+}\n+\n+static __inline uint8x16_t\n+vaesimcq_u8 (uint8x16_t data)\n+{\n+  return __builtin_aarch64_crypto_aesimcv16qi_uu (data);\n+}\n+\n+#endif\n+\n /* vcage  */\n \n __extension__ static __inline uint32_t __attribute__ ((__always_inline__))"}, {"sha": "eeab8e9db782aef4fd1600be4db8addf88a4e3f7", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=5a7a4e8064f46ac5f985c3441fd3b504680865a3", "patch": "@@ -267,6 +267,10 @@\n     UNSPEC_UZP2\t\t; Used in vector permute patterns.\n     UNSPEC_TRN1\t\t; Used in vector permute patterns.\n     UNSPEC_TRN2\t\t; Used in vector permute patterns.\n+    UNSPEC_AESE\t\t; Used in aarch64-simd.md.\n+    UNSPEC_AESD         ; Used in aarch64-simd.md.\n+    UNSPEC_AESMC        ; Used in aarch64-simd.md.\n+    UNSPEC_AESIMC       ; Used in aarch64-simd.md.\n ])\n \n ;; -------------------------------------------------------------------\n@@ -848,6 +852,9 @@\n \n (define_int_iterator FRECP [UNSPEC_FRECPE UNSPEC_FRECPX])\n \n+(define_int_iterator CRYPTO_AES [UNSPEC_AESE UNSPEC_AESD])\n+(define_int_iterator CRYPTO_AESMC [UNSPEC_AESMC UNSPEC_AESIMC])\n+\n ;; -------------------------------------------------------------------\n ;; Int Iterators Attributes.\n ;; -------------------------------------------------------------------\n@@ -964,3 +971,6 @@\n \t\t\t    (UNSPEC_UZP1 \"1\") (UNSPEC_UZP2 \"2\")])\n \n (define_int_attr frecp_suffix  [(UNSPEC_FRECPE \"e\") (UNSPEC_FRECPX \"x\")])\n+\n+(define_int_attr aes_op [(UNSPEC_AESE \"e\") (UNSPEC_AESD \"d\")])\n+(define_int_attr aesmc_op [(UNSPEC_AESMC \"mc\") (UNSPEC_AESIMC \"imc\")])"}, {"sha": "5e96012f59d34ada04a38e508dd3423b4e7baba8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a7a4e8064f46ac5f985c3441fd3b504680865a3", "patch": "@@ -1,3 +1,7 @@\n+2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* gcc.target/aarch64/aes_1.c: New.\n+\n 2013-12-19  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \t    Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n "}, {"sha": "5fa61379ea6ec9c88ade928fe9253029a4dcf8a0", "filename": "gcc/testsuite/gcc.target/aarch64/aes_1.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faes_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a7a4e8064f46ac5f985c3441fd3b504680865a3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faes_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faes_1.c?ref=5a7a4e8064f46ac5f985c3441fd3b504680865a3", "patch": "@@ -0,0 +1,40 @@\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8-a+crypto\" } */\n+\n+#include \"arm_neon.h\"\n+\n+uint8x16_t\n+test_vaeseq_u8 (uint8x16_t data, uint8x16_t key)\n+{\n+  return vaeseq_u8 (data, key);\n+}\n+\n+/* { dg-final { scan-assembler-times \"aese\\\\tv\\[0-9\\]+\\.16b, v\\[0-9\\]+\\.16b\" 1 } } */\n+\n+uint8x16_t\n+test_vaesdq_u8 (uint8x16_t data, uint8x16_t key)\n+{\n+  return vaesdq_u8 (data, key);\n+}\n+\n+/* { dg-final { scan-assembler-times \"aesd\\\\tv\\[0-9\\]+\\.16b, v\\[0-9\\]+\\.16b\" 1 } } */\n+\n+uint8x16_t\n+test_vaesmcq_u8 (uint8x16_t data)\n+{\n+  return vaesmcq_u8 (data);\n+}\n+\n+/* { dg-final { scan-assembler-times \"aesmc\\\\tv\\[0-9\\]+\\.16b, v\\[0-9\\]+\\.16b\" 1 } } */\n+\n+uint8x16_t\n+test_vaesimcq_u8 (uint8x16_t data)\n+{\n+  return vaesimcq_u8 (data);\n+}\n+\n+/* { dg-final { scan-assembler-times \"aesimc\\\\tv\\[0-9\\]+\\.16b, v\\[0-9\\]+\\.16b\" 1 } } */\n+\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}