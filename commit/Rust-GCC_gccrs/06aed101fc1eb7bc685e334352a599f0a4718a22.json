{"sha": "06aed101fc1eb7bc685e334352a599f0a4718a22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZhZWQxMDFmYzFlYjdiYzY4NWUzMzQzNTJhNTk5ZjBhNDcxOGEyMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-04-27T07:49:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-04-27T07:49:49Z"}, "message": "re PR ada/70759 (Ada rts fails to build with -mabi=ilp32)\n\n\tPR ada/70759\n\t* stor-layout.h (internal_reference_types): Delete.\n\t* stor-layout.c (reference_types_internal): Likewise.\n\t(internal_reference_types): Likewise.\n\t(layout_type) <REFERENCE_TYPE>: Adjust.\nada/\n\t* gcc-interface/misc.c (gnat_init): Do not call\n\tinternal_reference_types.\n\nFrom-SVN: r235472", "tree": {"sha": "e268b98c607dfb25bab4e744d9ba95602d9ffdfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e268b98c607dfb25bab4e744d9ba95602d9ffdfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06aed101fc1eb7bc685e334352a599f0a4718a22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06aed101fc1eb7bc685e334352a599f0a4718a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06aed101fc1eb7bc685e334352a599f0a4718a22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06aed101fc1eb7bc685e334352a599f0a4718a22/comments", "author": null, "committer": null, "parents": [{"sha": "9364c30e32dc3703ff619fde1aba775aaaee9882", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9364c30e32dc3703ff619fde1aba775aaaee9882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9364c30e32dc3703ff619fde1aba775aaaee9882"}], "stats": {"total": 37, "additions": 13, "deletions": 24}, "files": [{"sha": "1e28a4b521fec2d373bc2e0e3d96d9b075fd81b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06aed101fc1eb7bc685e334352a599f0a4718a22", "patch": "@@ -1,3 +1,11 @@\n+2016-04-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/70759\n+\t* stor-layout.h (internal_reference_types): Delete.\n+\t* stor-layout.c (reference_types_internal): Likewise.\n+\t(internal_reference_types): Likewise.\n+\t(layout_type) <REFERENCE_TYPE>: Adjust.\n+\n 2016-04-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/70683"}, {"sha": "aff9a45a66d35d34d3fa36705bc99f2cb57a6f55", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=06aed101fc1eb7bc685e334352a599f0a4718a22", "patch": "@@ -1,3 +1,8 @@\n+2016-04-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/misc.c (gnat_init): Do not call\n+\tinternal_reference_types.\n+\n 2016-04-27  Svante Signell  <svante.signell@gmail.com>\n \n \t* gcc-interface/Makefile.in (x86 GNU/Hurd): Use s-osinte-gnu.adb."}, {"sha": "521f8b99071e740e99d435073c71828d026c2f89", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=06aed101fc1eb7bc685e334352a599f0a4718a22", "patch": "@@ -369,9 +369,6 @@ gnat_init (void)\n   sbitsize_one_node = sbitsize_int (1);\n   sbitsize_unit_node = sbitsize_int (BITS_PER_UNIT);\n \n-  /* Show that REFERENCE_TYPEs are internal and should be Pmode.  */\n-  internal_reference_types ();\n-\n   /* Register our internal error function.  */\n   global_dc->internal_error = &internal_error_function;\n "}, {"sha": "cba2e6f47c60d60d531f787cfaaa4d4ffe667f6f", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=06aed101fc1eb7bc685e334352a599f0a4718a22", "patch": "@@ -49,11 +49,6 @@ tree sizetype_tab[(int) stk_type_kind_last];\n    The value is measured in bits.  */\n unsigned int maximum_field_alignment = TARGET_DEFAULT_PACK_STRUCT * BITS_PER_UNIT;\n \n-/* Nonzero if all REFERENCE_TYPEs are internal and hence should be allocated\n-   in the address spaces' address_mode, not pointer_mode.   Set only by\n-   internal_reference_types called only by a front end.  */\n-static int reference_types_internal = 0;\n-\n static tree self_referential_size (tree);\n static void finalize_record_size (record_layout_info);\n static void finalize_type_size (tree);\n@@ -62,15 +57,6 @@ static int excess_unit_span (HOST_WIDE_INT, HOST_WIDE_INT, HOST_WIDE_INT,\n \t\t\t     HOST_WIDE_INT, tree);\n extern void debug_rli (record_layout_info);\n \f\n-/* Show that REFERENCE_TYPES are internal and should use address_mode.\n-   Called only by front end.  */\n-\n-void\n-internal_reference_types (void)\n-{\n-  reference_types_internal = 1;\n-}\n-\n /* Given a size SIZE that may not be a constant, return a SAVE_EXPR\n    to serve as the actual size-expression for a type or decl.  */\n \n@@ -2245,12 +2231,6 @@ layout_type (tree type)\n     case REFERENCE_TYPE:\n       {\n \tmachine_mode mode = TYPE_MODE (type);\n-\tif (TREE_CODE (type) == REFERENCE_TYPE && reference_types_internal)\n-\t  {\n-\t    addr_space_t as = TYPE_ADDR_SPACE (TREE_TYPE (type));\n-\t    mode = targetm.addr_space.address_mode (as);\n-\t  }\n-\n \tTYPE_SIZE (type) = bitsize_int (GET_MODE_BITSIZE (mode));\n \tTYPE_SIZE_UNIT (type) = size_int (GET_MODE_SIZE (mode));\n \tTYPE_UNSIGNED (type) = 1;"}, {"sha": "d25661bc1c76478390b1adcfa7c15e4972b9ce1e", "filename": "gcc/stor-layout.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2Fstor-layout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06aed101fc1eb7bc685e334352a599f0a4718a22/gcc%2Fstor-layout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.h?ref=06aed101fc1eb7bc685e334352a599f0a4718a22", "patch": "@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n \n extern void set_min_and_max_values_for_integral_type (tree, int, signop);\n extern void fixup_signed_type (tree);\n-extern void internal_reference_types (void);\n extern unsigned int update_alignment_for_field (record_layout_info, tree,\n                                                 unsigned int);\n extern record_layout_info start_record_layout (tree);"}]}