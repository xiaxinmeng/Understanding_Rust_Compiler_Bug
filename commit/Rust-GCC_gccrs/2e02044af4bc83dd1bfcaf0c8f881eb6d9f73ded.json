{"sha": "2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUwMjA0NGFmNGJjODNkZDFiZmNhZjBjOGY4ODFlYjZkOWY3M2RlZA==", "commit": {"author": {"name": "Herman A.J. ten Brugge", "email": "Haj.Ten.Brugge@net.HCC.nl", "date": "1999-11-28T20:05:50Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-11-28T20:05:50Z"}, "message": "* reorg.c (dbr_schedule) Print more statistics. Corrected\n        problem when printing info when 3 delay slots are filled.\n\nFrom-SVN: r30687", "tree": {"sha": "7053d868ecffceb6bdd234d3e1f14b51d6d40439", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7053d868ecffceb6bdd234d3e1f14b51d6d40439"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded/comments", "author": null, "committer": null, "parents": [{"sha": "866aed9e46a1011944c3a8c2f8f5390f7b06d10f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866aed9e46a1011944c3a8c2f8f5390f7b06d10f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/866aed9e46a1011944c3a8c2f8f5390f7b06d10f"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "4428e5d3841f39076dba8017328a59af78635e90", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded", "patch": "@@ -1,3 +1,8 @@\n+1999-11-28 Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n+\n+\t* reorg.c (dbr_schedule) Print more statistics. Corrected\n+\tproblem when printing info when 3 delay slots are filled.\n+\n 1999-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* combine.c (setup_incoming_promotions): Pass an outgoing"}, {"sha": "de4c6ac6f734b283f5d898fe6aaaf114a8968881", "filename": "gcc/reorg.c", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=2e02044af4bc83dd1bfcaf0c8f881eb6d9f73ded", "patch": "@@ -3623,6 +3623,8 @@ dbr_schedule (first, file)\n   if (file)\n     {\n       register int i, j, need_comma;\n+      int total_delay_slots[MAX_DELAY_HISTOGRAM + 1];\n+      int total_annul_slots[MAX_DELAY_HISTOGRAM + 1];\n \n       for (reorg_pass_number = 0;\n \t   reorg_pass_number < MAX_REORG_PASSES;\n@@ -3637,7 +3639,7 @@ dbr_schedule (first, file)\n \t      fprintf (file, \";; %d insns needing delay slots\\n;; \",\n \t\t       num_insns_needing_delays[i][reorg_pass_number]);\n \n-\t      for (j = 0; j < MAX_DELAY_HISTOGRAM; j++)\n+\t      for (j = 0; j < MAX_DELAY_HISTOGRAM + 1; j++)\n \t\tif (num_filled_delays[i][j][reorg_pass_number])\n \t\t  {\n \t\t    if (need_comma)\n@@ -3649,6 +3651,58 @@ dbr_schedule (first, file)\n \t      fprintf (file, \"\\n\");\n \t    }\n \t}\n+      bzero ((char *) total_delay_slots, sizeof total_delay_slots);\n+      bzero ((char *) total_annul_slots, sizeof total_annul_slots);\n+      for (insn = first; insn; insn = NEXT_INSN (insn))\n+\t{\n+\t  if (! INSN_DELETED_P (insn)\n+\t      && GET_CODE (insn) == INSN\n+\t      && GET_CODE (PATTERN (insn)) != USE\n+\t      && GET_CODE (PATTERN (insn)) != CLOBBER)\n+\t    {\n+\t      if (GET_CODE (PATTERN (insn)) == SEQUENCE)\n+\t\t{\n+\t\t  j = XVECLEN (PATTERN (insn), 0) - 1;\n+\t\t  if (j > MAX_DELAY_HISTOGRAM)\n+\t\t    j = MAX_DELAY_HISTOGRAM;\n+\t\t  if (INSN_ANNULLED_BRANCH_P (XVECEXP (PATTERN (insn), 0, 0)))\n+\t\t    total_annul_slots[j]++;\n+\t\t  else\n+\t\t    total_delay_slots[j]++;\n+\t\t}\n+              else if (num_delay_slots (insn) > 0)\n+\t\ttotal_delay_slots[0]++;\n+\t    }\n+\t}\n+      fprintf (file, \";; Reorg totals: \");\n+      need_comma = 0;\n+      for (j = 0; j < MAX_DELAY_HISTOGRAM + 1; j++)\n+\t{\n+\t  if (total_delay_slots[j])\n+\t    {\n+\t      if (need_comma)\n+\t\tfprintf (file, \", \");\n+\t      need_comma = 1;\n+\t      fprintf (file, \"%d got %d delays\", total_delay_slots[j], j);\n+\t    }\n+\t}\n+      fprintf (file, \"\\n\");\n+#if defined (ANNUL_IFTRUE_SLOTS) || defined (ANNUL_IFFALSE_SLOTS)\n+      fprintf (file, \";; Reorg annuls: \");\n+      need_comma = 0;\n+      for (j = 0; j < MAX_DELAY_HISTOGRAM + 1; j++)\n+\t{\n+\t  if (total_annul_slots[j])\n+\t    {\n+\t      if (need_comma)\n+\t\tfprintf (file, \", \");\n+\t      need_comma = 1;\n+\t      fprintf (file, \"%d got %d delays\", total_annul_slots[j], j);\n+\t    }\n+\t}\n+      fprintf (file, \"\\n\");\n+#endif\n+      fprintf (file, \"\\n\");\n     }\n \n   /* For all JUMP insns, fill in branch prediction notes, so that during"}]}