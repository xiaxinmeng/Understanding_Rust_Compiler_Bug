{"sha": "f0c1ebb73430eb3735b8a196b4795e15b0a64ca8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBjMWViYjczNDMwZWIzNzM1YjhhMTk2YjQ3OTVlMTViMGE2NGNhOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-11-14T20:36:28Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-11-14T20:36:28Z"}, "message": "arm.h (FUNCTION_ARG_ADVANCE): Only adjust iwmmxt_nregs if TARGET_IWMMXT_ABI.\n\n\t* config/arm/arm.h (FUNCTION_ARG_ADVANCE): Only adjust\n\tiwmmxt_nregs if TARGET_IWMMXT_ABI.\n\t* config/arm/iwmmxt.md (movv8qi_internal, movv4hi_internal,\n\tmovv2si_internal): Support moves between core registers.\n\nFrom-SVN: r118825", "tree": {"sha": "5c3d0b583c3183bae1c71802c81b2fa9bd6829a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c3d0b583c3183bae1c71802c81b2fa9bd6829a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd7f7a6ea4894c43d5b65cbe15a92b7c2450aebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd7f7a6ea4894c43d5b65cbe15a92b7c2450aebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd7f7a6ea4894c43d5b65cbe15a92b7c2450aebf"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "2458b0ecdf0c1e9c841a8f51b44747af7944b740", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0c1ebb73430eb3735b8a196b4795e15b0a64ca8", "patch": "@@ -1,3 +1,10 @@\n+2006-11-14  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/arm/arm.h (FUNCTION_ARG_ADVANCE): Only adjust\n+\tiwmmxt_nregs if TARGET_IWMMXT_ABI.\n+\t* config/arm/iwmmxt.md (movv8qi_internal, movv4hi_internal,\n+\tmovv2si_internal): Support moves between core registers.\n+\n 2006-11-14  Eric Christopher  <echristo@apple.com>\n \n \t* configure: Regenerate with autoconf 2.59."}, {"sha": "73d8333b0803fb589059d2b8db0365ba52fd6c3f", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=f0c1ebb73430eb3735b8a196b4795e15b0a64ca8", "patch": "@@ -1480,8 +1480,9 @@ typedef struct\n    (TYPE is null for libcalls where that information may not be available.)  */\n #define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)\t\\\n   (CUM).nargs += 1;\t\t\t\t\t\\\n-  if (arm_vector_mode_supported_p (MODE)\t       \t\\\n-      && (CUM).named_count > (CUM).nargs)\t\t\\\n+  if (arm_vector_mode_supported_p (MODE)\t\t\\\n+      && (CUM).named_count > (CUM).nargs\t\t\\\n+      && TARGET_IWMMXT_ABI)\t\t\t\t\\\n     (CUM).iwmmxt_nregs += 1;\t\t\t\t\\\n   else\t\t\t\t\t\t\t\\\n     (CUM).nregs += ARM_NUM_REGS2 (MODE, TYPE)"}, {"sha": "9ae55a7b811386a82c903567e2d69b9c7b8ef350", "filename": "gcc/config/arm/iwmmxt.md", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8/gcc%2Fconfig%2Farm%2Fiwmmxt.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c1ebb73430eb3735b8a196b4795e15b0a64ca8/gcc%2Fconfig%2Farm%2Fiwmmxt.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiwmmxt.md?ref=f0c1ebb73430eb3735b8a196b4795e15b0a64ca8", "patch": "@@ -158,8 +158,8 @@\n )\n \n (define_insn \"movv8qi_internal\"\n-  [(set (match_operand:V8QI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r\")\n-\t(match_operand:V8QI 1 \"general_operand\"       \"y,y,mi,y,r,mi\"))]\n+  [(set (match_operand:V8QI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r,?r\")\n+\t(match_operand:V8QI 1 \"general_operand\"       \"y,y,mi,y,r,r,mi\"))]\n   \"TARGET_REALLY_IWMMXT\"\n   \"*\n    switch (which_alternative)\n@@ -169,17 +169,18 @@\n    case 2: return \\\"wldrd%?\\\\t%0, %1\\\";\n    case 3: return \\\"tmrrc%?\\\\t%Q0, %R0, %1\\\";\n    case 4: return \\\"tmcrr%?\\\\t%0, %Q1, %R1\\\";\n+   case 5: return \\\"#\\\";\n    default: return output_move_double (operands);\n    }\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"length\"         \"4,     4,   4,4,4,   8\")\n-   (set_attr \"type\"           \"*,store1,load1,*,*,load1\")\n-   (set_attr \"pool_range\"     \"*,     *, 256,*,*, 256\")\n-   (set_attr \"neg_pool_range\" \"*,     *, 244,*,*, 244\")])\n+   (set_attr \"length\"         \"4,     4,   4,4,4,8,   8\")\n+   (set_attr \"type\"           \"*,store1,load1,*,*,*,load1\")\n+   (set_attr \"pool_range\"     \"*,     *, 256,*,*,*, 256\")\n+   (set_attr \"neg_pool_range\" \"*,     *, 244,*,*,*, 244\")])\n \n (define_insn \"movv4hi_internal\"\n-  [(set (match_operand:V4HI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r\")\n-\t(match_operand:V4HI 1 \"general_operand\"       \"y,y,mi,y,r,mi\"))]\n+  [(set (match_operand:V4HI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r,?r\")\n+\t(match_operand:V4HI 1 \"general_operand\"       \"y,y,mi,y,r,r,mi\"))]\n   \"TARGET_REALLY_IWMMXT\"\n   \"*\n    switch (which_alternative)\n@@ -189,17 +190,18 @@\n    case 2: return \\\"wldrd%?\\\\t%0, %1\\\";\n    case 3: return \\\"tmrrc%?\\\\t%Q0, %R0, %1\\\";\n    case 4: return \\\"tmcrr%?\\\\t%0, %Q1, %R1\\\";\n+   case 5: return \\\"#\\\";\n    default: return output_move_double (operands);\n    }\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"length\"         \"4,     4,   4,4,4,   8\")\n-   (set_attr \"type\"           \"*,store1,load1,*,*,load1\")\n-   (set_attr \"pool_range\"     \"*,     *, 256,*,*, 256\")\n-   (set_attr \"neg_pool_range\" \"*,     *, 244,*,*, 244\")])\n+   (set_attr \"length\"         \"4,     4,   4,4,4,8,   8\")\n+   (set_attr \"type\"           \"*,store1,load1,*,*,*,load1\")\n+   (set_attr \"pool_range\"     \"*,     *, 256,*,*,*, 256\")\n+   (set_attr \"neg_pool_range\" \"*,     *, 244,*,*,*, 244\")])\n \n (define_insn \"movv2si_internal\"\n-  [(set (match_operand:V2SI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r\")\n-\t(match_operand:V2SI 1 \"general_operand\"       \"y,y,mi,y,r,mi\"))]\n+  [(set (match_operand:V2SI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r,?r\")\n+\t(match_operand:V2SI 1 \"general_operand\"       \"y,y,mi,y,r,r,mi\"))]\n   \"TARGET_REALLY_IWMMXT\"\n   \"*\n    switch (which_alternative)\n@@ -209,13 +211,14 @@\n    case 2: return \\\"wldrd%?\\\\t%0, %1\\\";\n    case 3: return \\\"tmrrc%?\\\\t%Q0, %R0, %1\\\";\n    case 4: return \\\"tmcrr%?\\\\t%0, %Q1, %R1\\\";\n+   case 5: return \\\"#\\\";\n    default: return output_move_double (operands);\n    }\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"length\"         \"4,     4,   4,4,4,  24\")\n-   (set_attr \"type\"           \"*,store1,load1,*,*,load1\")\n-   (set_attr \"pool_range\"     \"*,     *, 256,*,*, 256\")\n-   (set_attr \"neg_pool_range\" \"*,     *, 244,*,*, 244\")])\n+   (set_attr \"length\"         \"4,     4,   4,4,4,8,  24\")\n+   (set_attr \"type\"           \"*,store1,load1,*,*,*,load1\")\n+   (set_attr \"pool_range\"     \"*,     *, 256,*,*,*, 256\")\n+   (set_attr \"neg_pool_range\" \"*,     *, 244,*,*,*, 244\")])\n \n ;; This pattern should not be needed.  It is to match a\n ;; wierd case generated by GCC when no optimizations are"}]}