{"sha": "a538e5805514bc4728c76b372cf4dc89edd4d968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUzOGU1ODA1NTE0YmM0NzI4Yzc2YjM3MmNmNGRjODllZGQ0ZDk2OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-07-30T22:13:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-07-30T22:13:50Z"}, "message": "ifcvt.c (noce_get_alt_condition): Use reg_overlap_mentioned_p.\n\n        * ifcvt.c (noce_get_alt_condition): Use reg_overlap_mentioned_p.\n        (noce_process_if_block): Likewise.\n\nFrom-SVN: r55886", "tree": {"sha": "74e7937772a327835058f3bbe6344104de9bbbb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74e7937772a327835058f3bbe6344104de9bbbb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a538e5805514bc4728c76b372cf4dc89edd4d968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a538e5805514bc4728c76b372cf4dc89edd4d968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a538e5805514bc4728c76b372cf4dc89edd4d968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a538e5805514bc4728c76b372cf4dc89edd4d968/comments", "author": null, "committer": null, "parents": [{"sha": "79cbc1f7649ee1b63aa66a3ffcad6e959df0a7d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cbc1f7649ee1b63aa66a3ffcad6e959df0a7d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79cbc1f7649ee1b63aa66a3ffcad6e959df0a7d7"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "c9b9f703ddb6a4671a282eaf0c5de5b6d68a95d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a538e5805514bc4728c76b372cf4dc89edd4d968/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a538e5805514bc4728c76b372cf4dc89edd4d968/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a538e5805514bc4728c76b372cf4dc89edd4d968", "patch": "@@ -1,3 +1,8 @@\n+2002-07-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* ifcvt.c (noce_get_alt_condition): Use reg_overlap_mentioned_p.\n+\t(noce_process_if_block): Likewise.\n+\n 2002-07-30  Bernd Schmidt  <bernds@redhat.com>\n \n \t* ifcvt.c (cond_exec_process_if_block): Fix a merging error."}, {"sha": "ecf0f77c39ccaf3676318e7e75011dd9df94100f", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a538e5805514bc4728c76b372cf4dc89edd4d968/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a538e5805514bc4728c76b372cf4dc89edd4d968/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=a538e5805514bc4728c76b372cf4dc89edd4d968", "patch": "@@ -1368,7 +1368,7 @@ noce_get_alt_condition (if_info, target, earliest)\n \n   /* X may not be mentioned in the range (cond_earliest, jump].  */\n   for (insn = if_info->jump; insn != *earliest; insn = PREV_INSN (insn))\n-    if (INSN_P (insn) && reg_mentioned_p (if_info->x, insn))\n+    if (INSN_P (insn) && reg_overlap_mentioned_p (if_info->x, PATTERN (insn)))\n       return NULL;\n \n   /* A and B may not be modified in the range [cond_earliest, jump).  */\n@@ -1774,16 +1774,18 @@ noce_process_if_block (ce_info)\n \t  || GET_CODE (insn_b) != INSN\n \t  || (set_b = single_set (insn_b)) == NULL_RTX\n \t  || ! rtx_equal_p (x, SET_DEST (set_b))\n-\t  || reg_mentioned_p (x, cond)\n-\t  || reg_mentioned_p (x, a)\n-\t  || reg_mentioned_p (x, SET_SRC (set_b)))\n+\t  || reg_overlap_mentioned_p (x, cond)\n+\t  || reg_overlap_mentioned_p (x, a)\n+\t  || reg_overlap_mentioned_p (x, SET_SRC (set_b)))\n \tinsn_b = set_b = NULL_RTX;\n     }\n   b = (set_b ? SET_SRC (set_b) : x);\n \n-  /* X may not be mentioned in the range (cond_earliest, jump].  */\n+  /* X may not be mentioned in the range (cond_earliest, jump]. \n+     Note the use of reg_overlap_mentioned_p, which handles memories\n+     properly, as opposed to reg_mentioned_p, which doesn't.  */\n   for (insn = jump; insn != if_info.cond_earliest; insn = PREV_INSN (insn))\n-    if (INSN_P (insn) && reg_mentioned_p (x, insn))\n+    if (INSN_P (insn) && reg_overlap_mentioned_p (x, PATTERN (insn)))\n       return FALSE;\n \n   /* A and B may not be modified in the range [cond_earliest, jump).  */"}]}