{"sha": "1ef4d0a80a0f685d97c032717c90032f9793f3af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVmNGQwYTgwYTBmNjg1ZDk3YzAzMjcxN2M5MDAzMmY5NzkzZjNhZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-22T09:57:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-22T09:57:03Z"}, "message": "[multiple changes]\n\n2009-04-22  Robert Dewar  <dewar@adacore.com>\n\n\t* lib-load.adb: Minor reformatting\n\n2009-04-22  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-bitops.adb, s-bitops.ads (Raise_Error): Do not use Ada 05 syntax,\n\tsince this unit is now part of bootstrap units, so must use Ada 95\n\tsyntax only.\n\n2009-04-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-tasatt.adb: Minor reformatting\n\n2009-04-22  Bob Duff  <duff@adacore.com>\n\n\t* s-stalib.ads: Remove \"with System;\" since we're inside System, so\n\tit's unnecessary.\n\n2009-04-22  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Add_Source): Always put the dependency file name in\n\tthe source record, as there may be a dependency file even if no object\n\tfile is created.\n\nFrom-SVN: r146558", "tree": {"sha": "f6c48168660afba6763dcb54837b600ff4e8f36e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6c48168660afba6763dcb54837b600ff4e8f36e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ef4d0a80a0f685d97c032717c90032f9793f3af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef4d0a80a0f685d97c032717c90032f9793f3af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ef4d0a80a0f685d97c032717c90032f9793f3af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef4d0a80a0f685d97c032717c90032f9793f3af/comments", "author": null, "committer": null, "parents": [{"sha": "1cb46af046435fde79f3b2cf351e2bfc654d8422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb46af046435fde79f3b2cf351e2bfc654d8422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cb46af046435fde79f3b2cf351e2bfc654d8422"}], "stats": {"total": 73, "additions": 47, "deletions": 26}, "files": [{"sha": "22d4eef8656c3db144c61382ca876b773fb8b403", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1ef4d0a80a0f685d97c032717c90032f9793f3af", "patch": "@@ -1,6 +1,27 @@\n+2009-04-22  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-bitops.adb, s-bitops.ads (Raise_Error): Do not use Ada 05 syntax,\n+\tsince this unit is now part of bootstrap units, so must use Ada 95\n+\tsyntax only.\n+\n+2009-04-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* a-tasatt.adb: Minor reformatting\n+\n+2009-04-22  Bob Duff  <duff@adacore.com>\n+\n+\t* s-stalib.ads: Remove \"with System;\" since we're inside System, so\n+\tit's unnecessary.\n+\n+2009-04-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Add_Source): Always put the dependency file name in\n+\tthe source record, as there may be a dependency file even if no object\n+\tfile is created.\n+\n 2009-04-22  Robert Dewar  <dewar@adacore.com>\n \n-\t* lib-load.adb: MInor reformatting\n+\t* lib-load.adb: Minor reformatting\n \n \t* lib-load.ads: Minor reformatting\n "}, {"sha": "11db89e46482534a0db7bf3b02681a785d4d22ea", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=1ef4d0a80a0f685d97c032717c90032f9793f3af", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2008, AdaCore                     --\n+--                     Copyright (C) 1995-2009, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,15 +42,15 @@\n --  include:\n \n --  - It is vulnerable to bad Task_Id values, to the extent of possibly\n---     trashing memory and crashing the runtime system.\n+--    trashing memory and crashing the runtime system.\n \n --  - It requires dynamic storage allocation for each new attribute value,\n---     except for types that happen to be the same size as System.Address, or\n---     shorter.\n+--    except for types that happen to be the same size as System.Address, or\n+--    shorter.\n \n---  -  Instantiations at other than the library level rely on being able to\n---     do down-level calls to a procedure declared in the generic package body.\n---     This makes it potentially vulnerable to compiler changes.\n+--  - Instantiations at other than the library level rely on being able to\n+--    do down-level calls to a procedure declared in the generic package body.\n+--    This makes it potentially vulnerable to compiler changes.\n \n --  The main implementation issue here is that the connection from task to\n --  attribute is a potential source of dangling references.\n@@ -249,8 +249,8 @@ package body Ada.Task_Attributes is\n    -- Unchecked Conversions --\n    ---------------------------\n \n-   --  The following type corresponds to Dummy_Wrapper,\n-   --  declared in System.Tasking.Task_Attributes.\n+   --  The following type corresponds to Dummy_Wrapper, declared in\n+   --  System.Tasking.Task_Attributes.\n \n    type Wrapper;\n    type Access_Wrapper is access all Wrapper;\n@@ -399,9 +399,9 @@ package body Ada.Task_Attributes is\n                P := P.Next;\n             end loop;\n \n-            --  Unlock the RTS here to follow the lock ordering rule\n-            --  that prevent us from using new (i.e the Global_Lock) while\n-            --  holding any other lock.\n+            --  Unlock the RTS here to follow the lock ordering rule that\n+            --  prevent us from using new (i.e the Global_Lock) while holding\n+            --  any other lock.\n \n             POP.Unlock_RTS;\n             W := new Wrapper'"}, {"sha": "d93b3d04e33a8854e699ea87aa8547e8c1d0ae8f", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=1ef4d0a80a0f685d97c032717c90032f9793f3af", "patch": "@@ -783,9 +783,9 @@ package body Lib.Load is\n          Units.Table (Main_Unit).Version        := Source_Checksum (Sind);\n \n       else\n-         --  Duplicate information from instance unit, for the body\n-         --  The unit node N has been rewritten as a body, but it was placed\n-         --  in the units table when first loaded as a declaration.\n+         --  Duplicate information from instance unit, for the body. The unit\n+         --  node N has been rewritten as a body, but it was placed in the\n+         --  units table when first loaded as a declaration.\n \n          Units.Table (Units.Last) := Units.Table (Get_Cunit_Unit_Number (N));\n          Units.Table (Units.Last).Cunit := N;\n@@ -804,11 +804,10 @@ package body Lib.Load is\n       Bunit : constant Node_Id := Cunit (Body_Unit);\n \n    begin\n-      --  The spec is irrelevant if the body is a subprogram body, and the\n-      --  spec is other than a subprogram spec or generic subprogram spec.\n-      --  Note that the names must be the same, we don't need to check that,\n-      --  because we already know that from the fact that the file names are\n-      --  the same.\n+      --  The spec is irrelevant if the body is a subprogram body, and the spec\n+      --  is other than a subprogram spec or generic subprogram spec. Note that\n+      --  the names must be the same, we don't need to check that, because we\n+      --  already know that from the fact that the file names are the same.\n \n       return\n          Nkind (Unit (Bunit)) = N_Subprogram_Body"}, {"sha": "7349467bce5ec692db2a8d5015570e8c5f81114d", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=1ef4d0a80a0f685d97c032717c90032f9793f3af", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -643,13 +643,13 @@ package body Prj.Nmsc is\n       Src_Data.Display_File        := Display_File;\n       Src_Data.Dependency          := In_Tree.Languages_Data.Table\n                                         (Lang_Id).Config.Dependency_Kind;\n+      Src_Data.Dep_Name            := Dependency_Name\n+                                        (File_Name, Src_Data.Dependency);\n       Src_Data.Naming_Exception    := Naming_Exception;\n \n       if Src_Data.Compiled and then Src_Data.Object_Exists then\n          Src_Data.Object   :=\n            Object_Name (File_Name, Config.Object_File_Suffix);\n-         Src_Data.Dep_Name :=\n-           Dependency_Name (File_Name, Src_Data.Dependency);\n          Src_Data.Switches := Switches_Name (File_Name);\n       end if;\n "}, {"sha": "a49ffed7b889ed778fe4b1eb7ffabc9bffacb287", "filename": "gcc/ada/s-bitops.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fs-bitops.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fs-bitops.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bitops.adb?ref=1ef4d0a80a0f685d97c032717c90032f9793f3af", "patch": "@@ -209,7 +209,7 @@ package body System.Bit_Ops is\n \n    procedure Raise_Error is\n    begin\n-      raise Constraint_Error with \"unequal lengths in logical operation\";\n+      raise Constraint_Error;\n    end Raise_Error;\n \n end System.Bit_Ops;"}, {"sha": "b7818097738350aacaa0af4a54abcfa472ff161b", "filename": "gcc/ada/s-bitops.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fs-bitops.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fs-bitops.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bitops.ads?ref=1ef4d0a80a0f685d97c032717c90032f9793f3af", "patch": "@@ -31,6 +31,8 @@\n \n --  Operations on packed bit strings\n \n+pragma Compiler_Unit;\n+\n with System;\n \n package System.Bit_Ops is"}, {"sha": "d77da263f16669f4e2e42a43f633f06cdf69e5c9", "filename": "gcc/ada/s-stalib.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fs-stalib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef4d0a80a0f685d97c032717c90032f9793f3af/gcc%2Fada%2Fs-stalib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.ads?ref=1ef4d0a80a0f685d97c032717c90032f9793f3af", "patch": "@@ -50,7 +50,6 @@ pragma Polling (Off);\n --  We must turn polling off for this unit, because otherwise we get\n --  elaboration circularities with Ada.Exceptions if polling is on.\n \n-with System;\n with Ada.Unchecked_Conversion;\n \n package System.Standard_Library is"}]}