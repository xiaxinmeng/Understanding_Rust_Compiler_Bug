{"sha": "195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk1NjEwYWFhMDViYThlZThmM2VjNGJkNWRmMzg3NzYxMGE1ZGFmMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-02-23T23:04:00Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-02-23T23:04:00Z"}, "message": "visium.md (type): Add trap.\n\n\t* config/visium/visium.md (type): Add trap.\n\t(b): New mode attribute.\n\t(*btst): Rename into...\n\t(*btst<mode>): ...this and adjust.\n\t(*cbranchsi4_btst_insn): Rename into...\n\t(*cbranch<mode>4_btst_insn): ...this and adjust.\n\t(trap): New define_insn.\n\nFrom-SVN: r245691", "tree": {"sha": "970ff0395406b5420ea5ca9c66fa5c374aeed8e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/970ff0395406b5420ea5ca9c66fa5c374aeed8e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/comments", "author": null, "committer": null, "parents": [{"sha": "ada61c3d4774b98d42b53e99836abd695969fbc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada61c3d4774b98d42b53e99836abd695969fbc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ada61c3d4774b98d42b53e99836abd695969fbc6"}], "stats": {"total": 51, "additions": 41, "deletions": 10}, "files": [{"sha": "68cd88f1ff203b1586d1ff233d4124992685a4f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "patch": "@@ -1,3 +1,13 @@\n+2017-02-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/visium/visium.md (type): Add trap.\n+\t(b): New mode attribute.\n+\t(*btst): Rename into...\n+\t(*btst<mode>): ...this and adjust.\n+\t(*cbranchsi4_btst_insn): Rename into...\n+\t(*cbranch<mode>4_btst_insn): ...this and adjust.\n+\t(trap): New define_insn.\n+\n 2017-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/79389"}, {"sha": "501e874603c8e9d8779ffa65f4d020c2ce8a01d0", "filename": "gcc/config/visium/visium.md", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2Fconfig%2Fvisium%2Fvisium.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2Fconfig%2Fvisium%2Fvisium.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvisium%2Fvisium.md?ref=195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "patch": "@@ -137,9 +137,10 @@\n ;nop           No operation.\n ;multi         Multiple instructions which split.\n ;asm           User asm instructions.\n+;trap          Trap instructions.\n \n (define_attr \"type\"\n-\"imm_reg,mem_reg,eam_reg,fp_reg,reg_mem,reg_eam,reg_fp,arith,arith2,logic,abs_branch,branch,bmi,call,ret,rfi,dsi,cmp,div,divd,mul,shiftdi,fdiv,fsqrt,ftoi,itof,fmove,fcmp,fp,nop,multi,asm\" (const_string \"logic\"))\n+\"imm_reg,mem_reg,eam_reg,fp_reg,reg_mem,reg_eam,reg_fp,arith,arith2,logic,abs_branch,branch,bmi,call,ret,rfi,dsi,cmp,div,divd,mul,shiftdi,fdiv,fsqrt,ftoi,itof,fmove,fcmp,fp,nop,multi,asm,trap\" (const_string \"logic\"))\n \n ; Those insns that occupy 4 bytes.\n (define_attr \"single_insn\" \"no,yes\"\n@@ -205,6 +206,7 @@\n \n (define_mode_iterator QHI [QI HI])\n (define_mode_iterator I [QI HI SI])\n+(define_mode_attr b [(QI \"8\") (HI \"16\") (SI \"32\")])\n (define_mode_attr s [(QI \".b\") (HI \".w\") (SI \".l\")])\n \n ; This code iterator allows signed and unsigned widening multiplications\n@@ -1986,15 +1988,15 @@\n \n ; BITS_BIG_ENDIAN is defined to 1 so operand #1 counts from the MSB.\n \n-(define_insn \"*btst\"\n+(define_insn \"*btst<mode>\"\n   [(set (reg:CCC R_FLAGS)\n-\t(compare:CCC (zero_extract:SI\n-\t\t       (match_operand:SI 0 \"register_operand\" \"r\")\n+\t(compare:CCC (zero_extract:I\n+\t\t       (match_operand:I 0 \"register_operand\" \"r\")\n \t\t       (const_int 1)\n \t\t       (match_operand:QI 1 \"const_shift_operand\" \"K\"))\n \t\t     (const_int 0)))]\n   \"reload_completed\"\n-  \"lsr.l   r0,%0,32-%1\"\n+  \"lsr<s>   r0,%0,<b>-%1\"\n   [(set_attr \"type\" \"logic\")])\n \n ;;\n@@ -2373,11 +2375,11 @@\n }\n   [(set_attr \"type\" \"cmp\")])\n \n-(define_insn_and_split \"*cbranchsi4_btst_insn\"\n+(define_insn_and_split \"*cbranch<mode>4_btst_insn\"\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"visium_equality_comparison_operator\"\n-\t\t       [(zero_extract:SI\n-\t\t\t   (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t       [(zero_extract:I\n+\t\t\t   (match_operand:I 1 \"register_operand\" \"r\")\n \t\t\t   (const_int 1)\n \t\t\t   (match_operand:QI 2 \"const_shift_operand\" \"K\"))\n \t\t        (const_int 0)])\n@@ -2510,6 +2512,20 @@\n   \"bra     tr,%0,r0%#\t\t;tablejump\"\n   [(set_attr \"type\" \"abs_branch\")])\n \n+;;\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+;;\n+;; trap instructions\n+;;\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+;;\n+\n+(define_insn \"trap\"\n+  [(trap_if (const_int 1) (const_int 0))]\n+  \"\"\n+  \"stop    0,r0\"\n+  [(set_attr \"type\" \"trap\")])\n+\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;"}, {"sha": "96a0234baaa4bed2a621289062e373c57ecf689c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "patch": "@@ -1,3 +1,8 @@\n+2017-02-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.target/visium/bit_test.c: Accept any lsr form.\n+\t* gcc.target/visium/block_move.c: Tweak.\n+\n 2017-02-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \tPR 68749"}, {"sha": "8fbb87ec971d1fed0c78655295e913605df06dc5", "filename": "gcc/testsuite/gcc.target/visium/bit_test.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2Ftestsuite%2Fgcc.target%2Fvisium%2Fbit_test.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2Ftestsuite%2Fgcc.target%2Fvisium%2Fbit_test.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fvisium%2Fbit_test.c?ref=195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "patch": "@@ -27,5 +27,5 @@ void foo4 (unsigned char c)\n     bar ();\n }\n \n-/* { dg-final { scan-assembler-times \"lsr.l\" 2 } } */\n+/* { dg-final { scan-assembler-times \"lsr\" 2 } } */\n /* { dg-final { scan-assembler-times \"cmp\" 2 } } */"}, {"sha": "f66c2614a099bef07b18e5084c5f17b73fd19d32", "filename": "gcc/testsuite/gcc.target/visium/block_move.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2Ftestsuite%2Fgcc.target%2Fvisium%2Fblock_move.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/195610aaa05ba8ee8f3ec4bd5df3877610a5daf3/gcc%2Ftestsuite%2Fgcc.target%2Fvisium%2Fblock_move.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fvisium%2Fblock_move.c?ref=195610aaa05ba8ee8f3ec4bd5df3877610a5daf3", "patch": "@@ -11,7 +11,7 @@ void foo (void)\n   int dst[LEN], src[LEN];\n   unsigned int i;\n \n-  __builtin_memset (src, 0, LEN * sizeof (int));\n+  __builtin_memset (src, 1, LEN * sizeof (int));\n   __builtin_memcpy (dst, src, LEN * sizeof (int));\n   if (__builtin_memcmp (dst, src, LEN * sizeof (int)) != 0)\n     abort ();"}]}