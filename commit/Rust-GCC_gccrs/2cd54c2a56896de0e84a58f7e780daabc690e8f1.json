{"sha": "2cd54c2a56896de0e84a58f7e780daabc690e8f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNkNTRjMmE1Njg5NmRlMGU4NGE1OGY3ZTc4MGRhYWJjNjkwZThmMQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-06-30T03:28:31Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-06-30T03:28:31Z"}, "message": "combine.c (distribute_notes): Don't look at global_regs for pseudos.\n\n\t* combine.c (distribute_notes): Don't look at global_regs for\n\tpseudos.\n\nFrom-SVN: r83889", "tree": {"sha": "2bf27bb95750d2d8adc15ae12eb9abfcba5374d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bf27bb95750d2d8adc15ae12eb9abfcba5374d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cd54c2a56896de0e84a58f7e780daabc690e8f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd54c2a56896de0e84a58f7e780daabc690e8f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cd54c2a56896de0e84a58f7e780daabc690e8f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd54c2a56896de0e84a58f7e780daabc690e8f1/comments", "author": null, "committer": null, "parents": [{"sha": "26d44ae2fd4b65d6e256a3c4a0800b9ebd52f6ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d44ae2fd4b65d6e256a3c4a0800b9ebd52f6ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d44ae2fd4b65d6e256a3c4a0800b9ebd52f6ff"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "94c5c964ea98e4d9afb9c4c3fd50d1a59206311e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd54c2a56896de0e84a58f7e780daabc690e8f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd54c2a56896de0e84a58f7e780daabc690e8f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cd54c2a56896de0e84a58f7e780daabc690e8f1", "patch": "@@ -1,3 +1,8 @@\n+2004-06-29  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* combine.c (distribute_notes): Don't look at global_regs for\n+\tpseudos.\n+\n 2004-06-29  Richard Henderson  <rth@redhat.com>\n \n \t* gimplify.c (gimplify_modify_expr_rhs): Move immediately before\n@@ -98,7 +103,7 @@\n \t* tree-ssa-dom.c (need_eh_cleanup): New.\n \t(tree_ssa_dominator_optimize): Allocate it.  Cleanup eh edges.\n \t(optimize_stmt): Cleanup eh stmts; set need_eh_cleanup.\n-\t\n+\n 2004-06-29  Alan Modra  <amodra@bigpond.net.au>\n \n \t* function.c (assign_parms): Don't abort with zero size stack\n@@ -204,7 +209,7 @@\n \ttree_check4_failed, tree_check5_failed): Remove.\n \t(TREE_CHECK, TREE_CHECK2, TREE_CHECK3, TREE_CHECK4,\n \tTREE_CHECK5): Adjust.\n-\t(TREE_NOT_CHECK, TREE_NOT_CHECK2, TREE_NOT_CHECK3, TREE_NOT_CHECK4, \n+\t(TREE_NOT_CHECK, TREE_NOT_CHECK2, TREE_NOT_CHECK3, TREE_NOT_CHECK4,\n \tTREE_NOT_CHECK5): New.\n \t(TREE_VEC_ELT_CHECK, PHI_NODE_ELT_CHECK, TREE_OPERAND_CHECK_CODE,\n \tTREE_RTL_OPERAND_CHECK): Adjust.\n@@ -232,7 +237,7 @@\n \t(dump_generic_node, case DECL_EXPR): New case.\n \t(dump_generic_node, case PLACEHOLDER_EXPR): Handle.\n \t(print_declaration): Handle type and function declarations.\n-\t\n+\n \t* tree-nested.c (create_tmp_var_for): Allow ARRAY_TYPE.\n \t(convert_nonlocal_reference, convert_local_reference): Properly\n \tconvert nest of handled component references.\n@@ -320,7 +325,7 @@\n \t<BIT_XOR_EXPR>: Optimize ~X|X and X|~X as -1.\n \t<BIT_AND_EXPR>: Optimize ~X&X and X&~X as 0.\n \t<TRUTH_AND_EXPR, TRUTH_ANDIF_EXPR>: Optimize !X&&X and X&&!X as false.\n-        <TRUTH_OR_EXPR, TRUTH_ORIF_EXPR>: Optimize !X||X and !X||X as true.\n+\t<TRUTH_OR_EXPR, TRUTH_ORIF_EXPR>: Optimize !X||X and !X||X as true.\n \t<TRUTH_XOR_EXPR>: Optimize !X^X and X^X! as true.  Now that\n \tTRUTH_XOR_EXPR is a commutative tree code, don't test whether arg0\n \tis a constant.\n@@ -351,7 +356,7 @@\n \t* tree.c (has_cleanups, case DECL_EXPR): New case.\n \t* tree.def (DECL_EXPR): New code.\n \t* tree.h (DECL_EXPR_DECL): New macro.\n-\t\n+\n \t* objc/objc-lang.c (LANG_HOOKS_SAFE_FROM_P): Deleted.\n \n 2004-06-26  Andrew Pinski  <pinskia@physics.uc.edu>\n@@ -1199,10 +1204,10 @@\n \n 2004-06-21  Richard Henderson  <rth@redhat.com>\n \n-        PR rtl-opt/16114\n-        * cse.c (merge_equiv_classes): Also rehash in response to\n-        delete_reg_equiv changes.\n-        (rehash_using_reg): Don't exclude REGs from rehashing.\n+\tPR rtl-opt/16114\n+\t* cse.c (merge_equiv_classes): Also rehash in response to\n+\tdelete_reg_equiv changes.\n+\t(rehash_using_reg): Don't exclude REGs from rehashing.\n \n 2004-06-21  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "9577f12993a6488f3658724057bb8b53804c168d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd54c2a56896de0e84a58f7e780daabc690e8f1/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd54c2a56896de0e84a58f7e780daabc690e8f1/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2cd54c2a56896de0e84a58f7e780daabc690e8f1", "patch": "@@ -1376,7 +1376,7 @@ c-ppoutput.o : c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) $(EXPR_H) $(C_TREE_H) \\\n     $(FLAGS_H) toplev.h tree-inline.h $(DIAGNOSTIC_H) $(VARRAY_H) \\\n-    langhooks.h $(GGC_H) $(TARGET_H) cgraph.h\n+    langhooks.h $(GGC_H) $(TARGET_H)\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) $(FLAGS_H) toplev.h\n c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\"}, {"sha": "f82858023dc271effd08e5c1feda03fa8d8ef603", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd54c2a56896de0e84a58f7e780daabc690e8f1/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd54c2a56896de0e84a58f7e780daabc690e8f1/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2cd54c2a56896de0e84a58f7e780daabc690e8f1", "patch": "@@ -11839,8 +11839,9 @@ distribute_notes (rtx notes, rtx from_insn, rtx i3, rtx i2)\n \t\t     TEM is doing.  If so, delete TEM.  Otherwise, make this\n \t\t     into a REG_UNUSED note instead. Don't delete sets to\n \t\t     global register vars.  */\n-\t\t  if (reg_set_p (XEXP (note, 0), PATTERN (tem))\n-\t\t      && !global_regs [REGNO(XEXP (note, 0))])\n+\t\t  if ((REGNO (XEXP (note, 0)) >= FIRST_PSEUDO_REGISTER\n+\t\t       || !global_regs[REGNO (XEXP (note, 0))])\n+\t\t      && reg_set_p (XEXP (note, 0), PATTERN (tem)))\n \t\t    {\n \t\t      rtx set = single_set (tem);\n \t\t      rtx inner_dest = 0;"}]}