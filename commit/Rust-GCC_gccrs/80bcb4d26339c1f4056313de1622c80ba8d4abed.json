{"sha": "80bcb4d26339c1f4056313de1622c80ba8d4abed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiY2I0ZDI2MzM5YzFmNDA1NjMxM2RlMTYyMmM4MGJhOGQ0YWJlZA==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@alumni.cmu.edu", "date": "2004-02-18T07:01:01Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2004-02-18T07:01:01Z"}, "message": "* Makefile.in (s-check, s-config, s-conditions, s-flags)\n\t(s-codes, s-constants, s-emit, s-recog, s-opinit, s-extract)\n\t(s-peep, s-attr, s-attrtab, s-output, s-genrtl, s-modes)\n\t(s-preds, s-iov): Do not depend on move-if-change.\n\n(gcc/ada)\n\n\t* Make-lang.in (stamp-sdefault): Do not depend on\n\tmove-if-change.\n\nFrom-SVN: r78011", "tree": {"sha": "5ca38dcdbfa8ffb933b91d6825e05638815d9cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ca38dcdbfa8ffb933b91d6825e05638815d9cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80bcb4d26339c1f4056313de1622c80ba8d4abed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80bcb4d26339c1f4056313de1622c80ba8d4abed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80bcb4d26339c1f4056313de1622c80ba8d4abed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80bcb4d26339c1f4056313de1622c80ba8d4abed/comments", "author": null, "committer": null, "parents": [{"sha": "ce7b36a482a89e8f016645630d6461ba94a1f654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7b36a482a89e8f016645630d6461ba94a1f654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce7b36a482a89e8f016645630d6461ba94a1f654"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "20805f7df09b58579270a8b8e71d0c24c4830aef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80bcb4d26339c1f4056313de1622c80ba8d4abed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80bcb4d26339c1f4056313de1622c80ba8d4abed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80bcb4d26339c1f4056313de1622c80ba8d4abed", "patch": "@@ -1,3 +1,10 @@\n+2004-02-17  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* Makefile.in (s-check, s-config, s-conditions, s-flags)\n+\t(s-codes, s-constants, s-emit, s-recog, s-opinit, s-extract)\n+\t(s-peep, s-attr, s-attrtab, s-output, s-genrtl, s-modes)\n+\t(s-preds, s-iov): Do not depend on move-if-change.\n+\n 2004-02-17  James E Wilson  <wilson@specifixinc.com>\n \n \t* caller-save.c (insert_restore): Pass mem through copy_rtx."}, {"sha": "8236efa893b07ad3046bdb8044ad8881d5a28e49", "filename": "gcc/Makefile.in", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80bcb4d26339c1f4056313de1622c80ba8d4abed/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80bcb4d26339c1f4056313de1622c80ba8d4abed/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=80bcb4d26339c1f4056313de1622c80ba8d4abed", "patch": "@@ -1424,7 +1424,7 @@ gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n cppspec.o: cppspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n \n tree-check.h: s-check ; @true\n-s-check : gencheck$(build_exeext) $(srcdir)/move-if-change\n+s-check : gencheck$(build_exeext)\n \t$(RUN_GEN) ./gencheck$(build_exeext) > tmp-check.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-check.h tree-check.h\n \t$(STAMP) s-check\n@@ -1903,13 +1903,13 @@ libbackend.o : $(OBJS-common:.o=.c) $(out_file) \\\n # trailing `;'), we call true for each.\n \n insn-config.h: s-config ; @true\n-s-config : $(md_file) genconfig$(build_exeext) $(srcdir)/move-if-change\n+s-config : $(md_file) genconfig$(build_exeext)\n \t$(RUN_GEN) ./genconfig$(build_exeext) $(md_file) > tmp-config.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-config.h insn-config.h\n \t$(STAMP) s-config\n \n insn-conditions.c: s-conditions ; @true\n-s-conditions : $(md_file) genconditions$(build_exeext) $(srcdir)/move-if-change\n+s-conditions : $(md_file) genconditions$(build_exeext)\n \t$(RUN_GEN) ./genconditions$(build_exeext) $(md_file) > tmp-conditions.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-conditions.c insn-conditions.c\n \t$(STAMP) s-conditions\n@@ -1924,19 +1924,19 @@ dummy-conditions.o : dummy-conditions.c $(BCONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(GTM_H) gensupport.h\n \n insn-flags.h: s-flags ; @true\n-s-flags : $(md_file) genflags$(build_exeext) $(srcdir)/move-if-change\n+s-flags : $(md_file) genflags$(build_exeext)\n \t$(RUN_GEN) ./genflags$(build_exeext) $(md_file) > tmp-flags.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-flags.h insn-flags.h\n \t$(STAMP) s-flags\n \n insn-codes.h: s-codes ; @true\n-s-codes : $(md_file) gencodes$(build_exeext) $(srcdir)/move-if-change\n+s-codes : $(md_file) gencodes$(build_exeext)\n \t$(RUN_GEN) ./gencodes$(build_exeext) $(md_file) > tmp-codes.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-codes.h insn-codes.h\n \t$(STAMP) s-codes\n \n insn-constants.h: s-constants ; @true\n-s-constants : $(md_file) genconstants$(build_exeext) $(srcdir)/move-if-change\n+s-constants : $(md_file) genconstants$(build_exeext)\n \t$(RUN_GEN) ./genconstants$(build_exeext) $(md_file) > tmp-constants.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-constants.h insn-constants.h\n \t$(STAMP) s-constants\n@@ -1948,7 +1948,7 @@ insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t  $(OUTPUT_OPTION)\n \n insn-emit.c: s-emit ; @true\n-s-emit : $(md_file) genemit$(build_exeext) $(srcdir)/move-if-change\n+s-emit : $(md_file) genemit$(build_exeext)\n \t$(RUN_GEN) ./genemit$(build_exeext) $(md_file) > tmp-emit.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-emit.c insn-emit.c\n \t$(STAMP) s-emit\n@@ -1960,7 +1960,7 @@ insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t  $(OUTPUT_OPTION)\n \n insn-recog.c: s-recog ; @true\n-s-recog : $(md_file) genrecog$(build_exeext) $(srcdir)/move-if-change\n+s-recog : $(md_file) genrecog$(build_exeext)\n \t$(RUN_GEN) ./genrecog$(build_exeext) $(md_file) > tmp-recog.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-recog.c insn-recog.c\n \t$(STAMP) s-recog\n@@ -1971,7 +1971,7 @@ insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t  $(OUTPUT_OPTION)\n \n insn-opinit.c: s-opinit ; @true\n-s-opinit : $(md_file) genopinit$(build_exeext) $(srcdir)/move-if-change\n+s-opinit : $(md_file) genopinit$(build_exeext)\n \t$(RUN_GEN) ./genopinit$(build_exeext) $(md_file) > tmp-opinit.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-opinit.c insn-opinit.c\n \t$(STAMP) s-opinit\n@@ -1982,7 +1982,7 @@ insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t  $(OUTPUT_OPTION)\n \n insn-extract.c: s-extract ; @true\n-s-extract : $(md_file) genextract$(build_exeext) $(srcdir)/move-if-change\n+s-extract : $(md_file) genextract$(build_exeext)\n \t$(RUN_GEN) ./genextract$(build_exeext) $(md_file) > tmp-extract.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-extract.c insn-extract.c\n \t$(STAMP) s-extract\n@@ -1994,7 +1994,7 @@ insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t  $(OUTPUT_OPTION)\n \n insn-peep.c: s-peep ; @true\n-s-peep : $(md_file) genpeep$(build_exeext) $(srcdir)/move-if-change\n+s-peep : $(md_file) genpeep$(build_exeext)\n \t$(RUN_GEN) ./genpeep$(build_exeext) $(md_file) > tmp-peep.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-peep.c insn-peep.c\n \t$(STAMP) s-peep\n@@ -2006,13 +2006,13 @@ insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t  $(OUTPUT_OPTION)\n \n insn-attr.h: s-attr ; @true\n-s-attr : $(md_file) genattr$(build_exeext) $(srcdir)/move-if-change\n+s-attr : $(md_file) genattr$(build_exeext)\n \t$(RUN_GEN) ./genattr$(build_exeext) $(md_file) > tmp-attr.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-attr.h insn-attr.h\n \t$(STAMP) s-attr\n \n insn-attrtab.c: s-attrtab ; @true\n-s-attrtab : $(md_file) genattrtab$(build_exeext) $(srcdir)/move-if-change\n+s-attrtab : $(md_file) genattrtab$(build_exeext)\n \t$(RUN_GEN) ./genattrtab$(build_exeext) $(md_file) > tmp-attrtab.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-attrtab.c insn-attrtab.c\n \t$(STAMP) s-attrtab\n@@ -2025,7 +2025,7 @@ insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t  $(OUTPUT_OPTION)\n \n insn-output.c: s-output ; @true\n-s-output : $(md_file) genoutput$(build_exeext) $(srcdir)/move-if-change\n+s-output : $(md_file) genoutput$(build_exeext)\n \t$(RUN_GEN) ./genoutput$(build_exeext) $(md_file) > tmp-output.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-output.c insn-output.c\n \t$(STAMP) s-output\n@@ -2035,7 +2035,7 @@ genrtl.o : genrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n genrtl.c genrtl.h : s-genrtl\n \t@true\t# force gnu make to recheck modification times.\n \n-s-genrtl: gengenrtl$(build_exeext) $(srcdir)/move-if-change\n+s-genrtl: gengenrtl$(build_exeext)\n \t$(RUN_GEN) ./gengenrtl$(build_exeext) -h > tmp-genrtl.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-genrtl.h genrtl.h\n \t$(RUN_GEN) ./gengenrtl$(build_exeext) > tmp-genrtl.c\n@@ -2046,7 +2046,7 @@ insn-modes.o : insn-modes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t       $(MACHMODE_H) real.h\n min-insn-modes.c insn-modes.c insn-modes.h : s-modes ; @true\n \n-s-modes: genmodes$(build_exeext) $(srcdir)/move-if-change\n+s-modes: genmodes$(build_exeext)\n \t$(RUN_GEN) ./genmodes$(build_exeext) -h > tmp-modes.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-modes.h insn-modes.h\n \t$(RUN_GEN) ./genmodes$(build_exeext) -m > tmp-min-modes.c\n@@ -2057,7 +2057,7 @@ s-modes: genmodes$(build_exeext) $(srcdir)/move-if-change\n \n tm-preds.h: s-preds; @true\n \n-s-preds: genpreds$(build_exeext) $(srcdir)/move-if-change\n+s-preds: genpreds$(build_exeext)\n \t$(RUN_GEN) ./genpreds$(build_exeext) > tmp-preds.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-preds.h tm-preds.h\n \t$(STAMP) s-preds\n@@ -2450,7 +2450,7 @@ gcov-iov.o: gcov-iov.c version.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) c\n gcov-iov$(build_exeext): gcov-iov.o\n \t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) gcov-iov.o -o $@\n gcov-iov.h: s-iov\n-s-iov: gcov-iov$(build_exeext) $(srcdir)/move-if-change\n+s-iov: gcov-iov$(build_exeext)\n \t./gcov-iov$(build_exeext) > tmp-gcov-iov.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-gcov-iov.h gcov-iov.h\n \t$(STAMP) s-iov"}, {"sha": "269314481380b3c691975850cfe746505c13ac62", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80bcb4d26339c1f4056313de1622c80ba8d4abed/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80bcb4d26339c1f4056313de1622c80ba8d4abed/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=80bcb4d26339c1f4056313de1622c80ba8d4abed", "patch": "@@ -1,3 +1,8 @@\n+2004-02-17  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* Make-lang.in (stamp-sdefault): Do not depend on\n+\tmove-if-change.\n+\n 2004-02-12  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config-lang.in: Disable Ada by default until probe logic for"}, {"sha": "a259654f930b50b726c90d4bab9b39f934054594", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80bcb4d26339c1f4056313de1622c80ba8d4abed/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80bcb4d26339c1f4056313de1622c80ba8d4abed/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=80bcb4d26339c1f4056313de1622c80ba8d4abed", "patch": "@@ -1081,8 +1081,7 @@ update-sources : ada/treeprs.ads ada/einfo.h ada/sinfo.h ada/nmake.adb \\\n \t$(CP) $^ $(srcdir)/ada\n \n ada/sdefault.adb: ada/stamp-sdefault ; @true\n-ada/stamp-sdefault : $(srcdir)/version.c $(srcdir)/move-if-change \\\n- Makefile\n+ada/stamp-sdefault : $(srcdir)/version.c Makefile\n \t$(ECHO) \"pragma Style_Checks (Off);\" >tmp-sdefault.adb\n \t$(ECHO) \"with Osint; use Osint;\" >>tmp-sdefault.adb\n \t$(ECHO) \"package body Sdefault is\" >>tmp-sdefault.adb"}]}