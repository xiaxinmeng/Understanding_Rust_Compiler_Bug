{"sha": "82c732f97056b5a37eb2fb82963c1983d5beba7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjNzMyZjk3MDU2YjVhMzdlYjJmYjgyOTYzYzE5ODNkNWJlYmE3YQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-05-04T11:33:56Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-04T11:33:56Z"}, "message": "crti.asm: Push an even number of registers.\n\n\t* config/arm/crti.asm: Push an even number of registers.\n\t* config/arm/crtn.asm: And restore them.  Load via sp.\n\nFrom-SVN: r81473", "tree": {"sha": "7312385772be221926712cf2aed4fc2a890a425f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7312385772be221926712cf2aed4fc2a890a425f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82c732f97056b5a37eb2fb82963c1983d5beba7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c732f97056b5a37eb2fb82963c1983d5beba7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c732f97056b5a37eb2fb82963c1983d5beba7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c732f97056b5a37eb2fb82963c1983d5beba7a/comments", "author": null, "committer": null, "parents": [{"sha": "92e838e2819de8bc7a3d4aab70e0a1ecb9bb1a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e838e2819de8bc7a3d4aab70e0a1ecb9bb1a3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e838e2819de8bc7a3d4aab70e0a1ecb9bb1a3f"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "6d6680dc16bb6948347b87f0520d9ed1b669b201", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c732f97056b5a37eb2fb82963c1983d5beba7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c732f97056b5a37eb2fb82963c1983d5beba7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82c732f97056b5a37eb2fb82963c1983d5beba7a", "patch": "@@ -1,3 +1,8 @@\n+2004-05-04  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/crti.asm: Push an even number of registers.\n+\t* config/arm/crtn.asm: And restore them.  Load via sp.\n+\n 2004-05-04  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* ggc-zone.c (ggc_alloc_zone_1): Add MEM_STAT_DECL parameter."}, {"sha": "3597e42b02eb2d756a3758c1d018b55524e88a28", "filename": "gcc/config/arm/crti.asm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c732f97056b5a37eb2fb82963c1983d5beba7a/gcc%2Fconfig%2Farm%2Fcrti.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c732f97056b5a37eb2fb82963c1983d5beba7a/gcc%2Fconfig%2Farm%2Fcrti.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcrti.asm?ref=82c732f97056b5a37eb2fb82963c1983d5beba7a", "patch": "@@ -42,12 +42,12 @@\n #ifdef __thumb__\n \t.thumb\n \t\n-\tpush\t{r4, r5, r6, r7, lr}\n+\tpush\t{r3, r4, r5, r6, r7, lr}\n #else\n \t.arm\n \t#  Create a stack frame and save any call-preserved registers\n \tmov\tip, sp\n-\tstmdb\tsp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}\n+\tstmdb\tsp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}\n \tsub\tfp, ip, #4\n #endif\n .endm"}, {"sha": "714060ce60dafbdfe782cf2262a2199a75bb67b2", "filename": "gcc/config/arm/crtn.asm", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c732f97056b5a37eb2fb82963c1983d5beba7a/gcc%2Fconfig%2Farm%2Fcrtn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c732f97056b5a37eb2fb82963c1983d5beba7a/gcc%2Fconfig%2Farm%2Fcrtn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcrtn.asm?ref=82c732f97056b5a37eb2fb82963c1983d5beba7a", "patch": "@@ -43,17 +43,19 @@\n \t# sequences here, it is just not worth it.  Instead keep things\n \t# simple.  Restore all the save resgisters, including the link\n \t# register and then perform the correct function return instruction.\n+\t# We also save/restore r3 to ensure stack alignment.\n .macro FUNC_END\n #ifdef __thumb__\n \t.thumb\n \t\n-\tpop\t{r4, r5, r6, r7}\n+\tpop\t{r3, r4, r5, r6, r7}\n \tpop\t{r3}\n \tmov\tlr, r3\n #else\n \t.arm\n \t\n-\tldmdb\tfp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}\n+\tsub\tsp, fp, #40\n+\tldmfd\tsp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}\n #endif\n \t\n #if defined __THUMB_INTERWORK__ || defined __thumb__"}]}