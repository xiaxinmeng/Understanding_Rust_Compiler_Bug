{"sha": "08a94a95d10f311d2a83e6f4c076babd8afd6a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhhOTRhOTVkMTBmMzExZDJhODNlNmY0YzA3NmJhYmQ4YWZkNmEzZQ==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-07-10T02:58:28Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-07-10T03:03:26Z"}, "message": "vect: Use adjusted niters by considering peeling prologue\n\nThis patch is derived from the review of vector with length patch\nseries.  I relaxed the guard on LOOP_VINFO_PEELING_FOR_ALIGNMENT for\nvector with length as Richard S.'s suggestion, then encountered one\nfailure from case gcc.dg/vect/vect-ifcvt-11.c with param\nvect-partial-vector-usage=2 enablement run.  The root cause is that\nwe still use the original niters for the loop body vectorization,\nit leads the access to go out of bound, instead we should use\nLOOP_VINFO_NITERS which has been adjusted in vect_do_peeling by\nconsidering the peeling number for prologue.\n\nBootstrapped/regtested on aarch64-linux-gnu and powerpc64le-linux-gnu.\n\ngcc/ChangeLog:\n\n\t* tree-vect-loop.c (vect_transform_loop): Use LOOP_VINFO_NITERS which\n\tis adjusted by considering peeled prologue for non\n\tvect_use_loop_mask_for_alignment_p cases.", "tree": {"sha": "8926a2460243d9a3ca78799d43f0b8761c1b3d48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8926a2460243d9a3ca78799d43f0b8761c1b3d48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08a94a95d10f311d2a83e6f4c076babd8afd6a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a94a95d10f311d2a83e6f4c076babd8afd6a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08a94a95d10f311d2a83e6f4c076babd8afd6a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a94a95d10f311d2a83e6f4c076babd8afd6a3e/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f8ca9cb86aae8f3742736d3c0ee11d4d1761a48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f8ca9cb86aae8f3742736d3c0ee11d4d1761a48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f8ca9cb86aae8f3742736d3c0ee11d4d1761a48"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "0a9be35ddec6c7a7767cc953b980d074ac7c7a61", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a94a95d10f311d2a83e6f4c076babd8afd6a3e/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a94a95d10f311d2a83e6f4c076babd8afd6a3e/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=08a94a95d10f311d2a83e6f4c076babd8afd6a3e", "patch": "@@ -8615,9 +8615,15 @@ vect_transform_loop (loop_vec_info loop_vinfo, gimple *loop_vectorized_call)\n \t\t\t     LOOP_VINFO_INT_NITERS (loop_vinfo) / lowest_vf);\n \t  step_vector = build_one_cst (TREE_TYPE (niters));\n \t}\n-      else\n+      else if (vect_use_loop_mask_for_alignment_p (loop_vinfo))\n \tvect_gen_vector_loop_niters (loop_vinfo, niters, &niters_vector,\n \t\t\t\t     &step_vector, niters_no_overflow);\n+      else\n+\t/* vect_do_peeling subtracted the number of peeled prologue\n+\t   iterations from LOOP_VINFO_NITERS.  */\n+\tvect_gen_vector_loop_niters (loop_vinfo, LOOP_VINFO_NITERS (loop_vinfo),\n+\t\t\t\t     &niters_vector, &step_vector,\n+\t\t\t\t     niters_no_overflow);\n     }\n \n   /* 1) Make sure the loop header has exactly two entries"}]}