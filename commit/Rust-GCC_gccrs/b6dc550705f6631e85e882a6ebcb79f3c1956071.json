{"sha": "b6dc550705f6631e85e882a6ebcb79f3c1956071", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkYzU1MDcwNWY2NjMxZTg1ZTg4MmE2ZWJjYjc5ZjNjMTk1NjA3MQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-03-24T23:07:35Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-03-24T23:07:35Z"}, "message": "predicates.md (easy_fp_constant): Return 0 for SFmode and DFmode before reload when...\n\n        * config/rs6000/predicates.md (easy_fp_constant): Return 0 for\n        SFmode and DFmode before reload when\n        flag_unsafe_math_optimizations not enabled.\n\nFrom-SVN: r97014", "tree": {"sha": "e47528aaabeae9d8c46c3f54a7972d6e8cc862c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e47528aaabeae9d8c46c3f54a7972d6e8cc862c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6dc550705f6631e85e882a6ebcb79f3c1956071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dc550705f6631e85e882a6ebcb79f3c1956071", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6dc550705f6631e85e882a6ebcb79f3c1956071", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dc550705f6631e85e882a6ebcb79f3c1956071/comments", "author": null, "committer": null, "parents": [{"sha": "aad9ff31d82b49dc0e61787af2efc884bec0693c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad9ff31d82b49dc0e61787af2efc884bec0693c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad9ff31d82b49dc0e61787af2efc884bec0693c"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "50f33446bb622c0cf6f92c7dd0bc1b061f97a7e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6dc550705f6631e85e882a6ebcb79f3c1956071/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6dc550705f6631e85e882a6ebcb79f3c1956071/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6dc550705f6631e85e882a6ebcb79f3c1956071", "patch": "@@ -1,3 +1,9 @@\n+2005-03-24  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/predicates.md (easy_fp_constant): Return 0 for\n+\tSFmode and DFmode before reload when\n+\tflag_unsafe_math_optimizations not enabled.\n+\n 2005-03-24  Geoffrey Keating  <geoffk@apple.com>\n \n \t* config/i386/darwin.h (TARGET_SUBTARGET_DEFAULT): Add"}, {"sha": "ab0cd8b1568b07e413edd57caa4a9c42cdfc26d1", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6dc550705f6631e85e882a6ebcb79f3c1956071/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6dc550705f6631e85e882a6ebcb79f3c1956071/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=b6dc550705f6631e85e882a6ebcb79f3c1956071", "patch": "@@ -219,8 +219,15 @@\n       long k[2];\n       REAL_VALUE_TYPE rv;\n \n-      if (TARGET_E500_DOUBLE)\n-\treturn 0;\n+      /* Force constants to memory before reload to utilize\n+\t compress_float_constant.\n+\t Avoid this when flag_unsafe_math_optimizations is enabled\n+\t because RDIV division to reciprocal optimization is not able\n+\t to regenerate the division.  */\n+      if (TARGET_E500_DOUBLE\n+          || (!reload_in_progress && !reload_completed\n+\t      && !flag_unsafe_math_optimizations))\n+        return 0;\n \n       REAL_VALUE_FROM_CONST_DOUBLE (rv, op);\n       REAL_VALUE_TO_TARGET_DOUBLE (rv, k);\n@@ -234,6 +241,15 @@\n       long l;\n       REAL_VALUE_TYPE rv;\n \n+      /* Force constants to memory before reload to utilize\n+\t compress_float_constant.\n+\t Avoid this when flag_unsafe_math_optimizations is enabled\n+\t because RDIV division to reciprocal optimization is not able\n+\t to regenerate the division.  */\n+      if (!reload_in_progress && !reload_completed\n+          && !flag_unsafe_math_optimizations)\n+\treturn 0;\n+\n       REAL_VALUE_FROM_CONST_DOUBLE (rv, op);\n       REAL_VALUE_TO_TARGET_SINGLE (rv, l);\n "}]}