{"sha": "6aff491f7b1d3a8373310cf596f5079cc4e37076", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFmZjQ5MWY3YjFkM2E4MzczMzEwY2Y1OTZmNTA3OWNjNGUzNzA3Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-22T20:42:00Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-22T20:48:50Z"}, "message": "testsuite:  C++ module tests\n\nThis adds most of the modules tests.  I do not include the tests that\nexcercise system & C++ library header files.  Those will be later.\n\n\tgcc/testsuite/\n\t* g++.dg/modules/access-1_a.C: New.: New.\n\t* g++.dg/modules/access-1_b.C: New.\n\t* g++.dg/modules/access-1_c.C: New.\n\t* g++.dg/modules/adhoc-1_a.C: New.\n\t* g++.dg/modules/adhoc-1_b.C: New.\n\t* g++.dg/modules/adl-1_a.C: New.\n\t* g++.dg/modules/adl-1_b.C: New.\n\t* g++.dg/modules/adl-1_c.C: New.\n\t* g++.dg/modules/adl-2_a.C: New.\n\t* g++.dg/modules/adl-2_b.C: New.\n\t* g++.dg/modules/adl-2_c.C: New.\n\t* g++.dg/modules/adl-3_a.C: New.\n\t* g++.dg/modules/adl-3_b.C: New.\n\t* g++.dg/modules/adl-3_c.C: New.\n\t* g++.dg/modules/adl-4_a.C: New.\n\t* g++.dg/modules/adl-4_b.C: New.\n\t* g++.dg/modules/adl-5_a.c: New.\n\t* g++.dg/modules/adl-5_b.C: New.\n\t* g++.dg/modules/adl-5_c.C: New.\n\t* g++.dg/modules/adl-5_d.C: New.\n\t* g++.dg/modules/alias-1_a.H: New.\n\t* g++.dg/modules/alias-1_b.C: New.\n\t* g++.dg/modules/alias-1_c.C: New.\n\t* g++.dg/modules/alias-1_d.C: New.\n\t* g++.dg/modules/alias-1_e.C: New.\n\t* g++.dg/modules/alias-1_f.C: New.\n\t* g++.dg/modules/alias-2_a.H: New.\n\t* g++.dg/modules/alias-2_b.C: New.\n\t* g++.dg/modules/align-type-1_a.C: New.\n\t* g++.dg/modules/align-type-1_b.C: New.\n\t* g++.dg/modules/ambig-1_a.C: New.\n\t* g++.dg/modules/ambig-1_b.C: New.\n\t* g++.dg/modules/anon-1_a.C: New.\n\t* g++.dg/modules/anon-1_b.C: New.\n\t* g++.dg/modules/anon-1_c.C: New.\n\t* g++.dg/modules/anon-2.h: New.\n\t* g++.dg/modules/anon-2_a.H: New.\n\t* g++.dg/modules/anon-2_b.C: New.\n\t* g++.dg/modules/atom-decl-0_a.C: New.\n\t* g++.dg/modules/atom-decl-0_b.C: New.\n\t* g++.dg/modules/atom-decl-0_c.C: New.\n\t* g++.dg/modules/atom-decl-2.C: New.\n\t* g++.dg/modules/atom-decl-3.C: New.\n\t* g++.dg/modules/atom-pragma-1.C: New.\n\t* g++.dg/modules/atom-pragma-3.C: New.\n\t* g++.dg/modules/atom-preamble-1.C: New.\n\t* g++.dg/modules/atom-preamble-2_a.C: New.\n\t* g++.dg/modules/atom-preamble-2_b.C: New.\n\t* g++.dg/modules/atom-preamble-2_c.C: New.\n\t* g++.dg/modules/atom-preamble-2_d.C: New.\n\t* g++.dg/modules/atom-preamble-2_e.C: New.\n\t* g++.dg/modules/atom-preamble-2_f.C: New.\n\t* g++.dg/modules/atom-preamble-3.C: New.\n\t* g++.dg/modules/atom-preamble-4.C: New.\n\t* g++.dg/modules/auto-1.h: New.\n\t* g++.dg/modules/auto-1_a.H: New.\n\t* g++.dg/modules/auto-1_b.C: New.\n\t* g++.dg/modules/auto-2.h: New.\n\t* g++.dg/modules/auto-2_a.H: New.\n\t* g++.dg/modules/auto-2_b.C: New.\n\t* g++.dg/modules/bad-mapper-1.C: New.\n\t* g++.dg/modules/bad-mapper-2.C: New.\n\t* g++.dg/modules/bad-mapper-3.C: New.\n\t* g++.dg/modules/ben-1.map: New.\n\t* g++.dg/modules/ben-1_a.C: New.\n\t* g++.dg/modules/ben-1_b.C: New.\n\t* g++.dg/modules/bfield-1_a.C: New.\n\t* g++.dg/modules/bfield-1_b.C: New.\n\t* g++.dg/modules/bfield-2_a.C: New.\n\t* g++.dg/modules/bfield-2_b.C: New.\n\t* g++.dg/modules/bool-1.h: New.\n\t* g++.dg/modules/bool-1_a.H: New.\n\t* g++.dg/modules/bool-1_b.H: New.\n\t* g++.dg/modules/bool-1_c.C: New.\n\t* g++.dg/modules/bug-1_a.C: New.\n\t* g++.dg/modules/bug-1_b.C: New.\n\t* g++.dg/modules/builtin-1_a.C: New.\n\t* g++.dg/modules/builtin-1_b.C: New.\n\t* g++.dg/modules/builtin-2.C: New.\n\t* g++.dg/modules/builtin-3_b.C: New.\n\t* g++.dg/modules/builtin-4_a.H: New.\n\t* g++.dg/modules/builtin-4_b.C: New.\n\t* g++.dg/modules/builtin-5_a.H: New.\n\t* g++.dg/modules/builtin-5_b.C: New.\n\t* g++.dg/modules/builtin-6_a.H: New.\n\t* g++.dg/modules/builtin-6_b.C: New.\n\t* g++.dg/modules/builtin-7_a.H: New.\n\t* g++.dg/modules/builtin-7_b.C: New.\n\t* g++.dg/modules/by-name-1.C: New.\n\t* g++.dg/modules/cexpr-1_a.C: New.\n\t* g++.dg/modules/cexpr-1_b.C: New.\n\t* g++.dg/modules/cexpr-2_a.C: New.\n\t* g++.dg/modules/cexpr-2_b.C: New.\n\t* g++.dg/modules/circ-1_a.C: New.\n\t* g++.dg/modules/circ-1_b.C: New.\n\t* g++.dg/modules/circ-1_c.C: New.\n\t* g++.dg/modules/circ-1_d.C: New.\n\t* g++.dg/modules/class-1_a.C: New.\n\t* g++.dg/modules/class-1_b.C: New.\n\t* g++.dg/modules/class-1_c.C: New.\n\t* g++.dg/modules/class-2_a.C: New.\n\t* g++.dg/modules/class-2_b.C: New.\n\t* g++.dg/modules/class-3_a.C: New.\n\t* g++.dg/modules/class-3_b.C: New.\n\t* g++.dg/modules/class-3_c.C: New.\n\t* g++.dg/modules/class-3_d.C: New.\n\t* g++.dg/modules/class-4_a.C: New.\n\t* g++.dg/modules/class-4_b.C: New.\n\t* g++.dg/modules/class-5_a.C: New.\n\t* g++.dg/modules/class-5_b.C: New.\n\t* g++.dg/modules/class-5_c.C: New.\n\t* g++.dg/modules/class-6_a.C: New.\n\t* g++.dg/modules/class-6_b.C: New.\n\t* g++.dg/modules/class-6_c.C: New.\n\t* g++.dg/modules/class-7_a.C: New.\n\t* g++.dg/modules/class-7_b.C: New.\n\t* g++.dg/modules/class-7_c.C: New.\n\t* g++.dg/modules/class-8_a.C: New.\n\t* g++.dg/modules/class-8_b.C: New.\n\t* g++.dg/modules/clone-1_a.C: New.\n\t* g++.dg/modules/clone-1_b.C: New.\n\t* g++.dg/modules/concept-1_a.C: New.\n\t* g++.dg/modules/concept-1_b.C: New.\n\t* g++.dg/modules/concept-2_a.C: New.\n\t* g++.dg/modules/concept-2_b.C: New.\n\t* g++.dg/modules/concept-3_a.C: New.\n\t* g++.dg/modules/concept-3_b.C: New.\n\t* g++.dg/modules/concept-4.H: New.\n\t* g++.dg/modules/concept-5.h: New.\n\t* g++.dg/modules/concept-5_a.H: New.\n\t* g++.dg/modules/concept-5_b.C: New.\n\t* g++.dg/modules/concept-6.h: New.\n\t* g++.dg/modules/concept-6_a.H: New.\n\t* g++.dg/modules/concept-6_b.C: New.\n\t* g++.dg/modules/constrained-partial-1_a.C: New.\n\t* g++.dg/modules/constrained-partial-1_b.C: New.\n\t* g++.dg/modules/convop-1_a.C: New.\n\t* g++.dg/modules/convop-1_b.C: New.\n\t* g++.dg/modules/cpp-1.C: New.\n\t* g++.dg/modules/cpp-2_a.H: New.\n\t* g++.dg/modules/cpp-2_b.H: New.\n\t* g++.dg/modules/cpp-2_c.C: New.\n\t* g++.dg/modules/cpp-3.C: New.\n\t* g++.dg/modules/cpp-4.C: New.\n\t* g++.dg/modules/cpp-4.h: New.\n\t* g++.dg/modules/cpp-5_a.H: New.\n\t* g++.dg/modules/cpp-5_b.C: New.\n\t* g++.dg/modules/cpp-5_c.C: New.\n\t* g++.dg/modules/cpp-6_a.H: New.\n\t* g++.dg/modules/cpp-6_b.H: New.\n\t* g++.dg/modules/cpp-6_c.C: New.\n\t* g++.dg/modules/debug-1_a.C: New.\n\t* g++.dg/modules/debug-1_b.C: New.\n\t* g++.dg/modules/decomp-1_a.C: New.\n\t* g++.dg/modules/decomp-1_b.C: New.\n\t* g++.dg/modules/deferred-1.h: New.\n\t* g++.dg/modules/deferred-1_a.H: New.\n\t* g++.dg/modules/deferred-1_b.C: New.\n\t* g++.dg/modules/dep-1_a.C: New.\n\t* g++.dg/modules/dep-1_b.C: New.\n\t* g++.dg/modules/dep-2.C: New.\n\t* g++.dg/modules/dep-3.C: New.\n\t* g++.dg/modules/dir-only-1.C: New.\n\t* g++.dg/modules/dir-only-2_a.H: New.\n\t* g++.dg/modules/dir-only-2_b.C: New.\n\t* g++.dg/modules/dir-only-3.C: New.\n\t* g++.dg/modules/dir-only-4.C: New.\n\t* g++.dg/modules/dir-recovery.C: New.\n\t* g++.dg/modules/enum-1_a.C: New.\n\t* g++.dg/modules/enum-1_b.C: New.\n\t* g++.dg/modules/enum-2_a.C: New.\n\t* g++.dg/modules/enum-2_b.C: New.\n\t* g++.dg/modules/enum-3_a.C: New.\n\t* g++.dg/modules/enum-3_b.C: New.\n\t* g++.dg/modules/enum-4_a.C: New.\n\t* g++.dg/modules/enum-4_b.C: New.\n\t* g++.dg/modules/enum-5_a.H: New.\n\t* g++.dg/modules/enum-5_b.C: New.\n\t* g++.dg/modules/enum-6_a.H: New.\n\t* g++.dg/modules/enum-6_b.C: New.\n\t* g++.dg/modules/enum-7.C: New.\n\t* g++.dg/modules/enum-8_a.H: New.\n\t* g++.dg/modules/enum-8_b.H: New.\n\t* g++.dg/modules/enum-8_c.C: New.\n\t* g++.dg/modules/enum-8_d.C: New.\n\t* g++.dg/modules/enum-bad-1_a.H: New.\n\t* g++.dg/modules/enum-bad-1_b.C: New.\n\t* g++.dg/modules/err-1_a.C: New.\n\t* g++.dg/modules/err-1_b.C: New.\n\t* g++.dg/modules/err-1_c.C: New.\n\t* g++.dg/modules/err-1_d.C: New.\n\t* g++.dg/modules/except-1.C: New.\n\t* g++.dg/modules/except-2.h: New.\n\t* g++.dg/modules/except-2_a.H: New.\n\t* g++.dg/modules/except-2_b.C: New.\n\t* g++.dg/modules/except-3.h: New.\n\t* g++.dg/modules/except-3_a.H: New.\n\t* g++.dg/modules/except-3_b.C: New.\n\t* g++.dg/modules/exp-xlate-1_a.H: New.\n\t* g++.dg/modules/exp-xlate-1_b.C: New.\n\t* g++.dg/modules/export-1.C: New.\n\t* g++.dg/modules/extern-tpl-1_a.H: New.\n\t* g++.dg/modules/extern-tpl-1_b.C: New.\n\t* g++.dg/modules/extern-tpl-1_c.C: New.\n\t* g++.dg/modules/extern-tpl-2_a.H: New.\n\t* g++.dg/modules/extern-tpl-2_b.H: New.\n\t* g++.dg/modules/extern-tpl-2_c.C: New.\n\t* g++.dg/modules/extern-tpl-2_d.C: New.\n\t* g++.dg/modules/flag-1_a.C: New.\n\t* g++.dg/modules/flag-1_b.C: New.\n\t* g++.dg/modules/fn-inline-1_a.C: New.\n\t* g++.dg/modules/fn-inline-1_b.C: New.\n\t* g++.dg/modules/fn-inline-1_c.C: New.\n\t* g++.dg/modules/freeze-1_a.C: New.\n\t* g++.dg/modules/freeze-1_b.C: New.\n\t* g++.dg/modules/freeze-1_c.C: New.\n\t* g++.dg/modules/freeze-1_d.C: New.\n\t* g++.dg/modules/friend-1_a.C: New.\n\t* g++.dg/modules/friend-1_b.C: New.\n\t* g++.dg/modules/friend-1_c.C: New.\n\t* g++.dg/modules/friend-2_a.C: New.\n\t* g++.dg/modules/friend-2_b.C: New.\n\t* g++.dg/modules/friend-3.C: New.\n\t* g++.dg/modules/friend-4_a.C: New.\n\t* g++.dg/modules/friend-4_b.C: New.\n\t* g++.dg/modules/friend-5_a.C: New.\n\t* g++.dg/modules/friend-5_b.C: New.\n\t* g++.dg/modules/gc-1_a.C: New.\n\t* g++.dg/modules/gc-1_b.C: New.\n\t* g++.dg/modules/gc-1_c.C: New.\n\t* g++.dg/modules/gc-1_d.C: New.\n\t* g++.dg/modules/gc-2.map: New.\n\t* g++.dg/modules/gc-2_a.C: New.\n\t* g++.dg/modules/global-1_a.C: New.\n\t* g++.dg/modules/global-1_b.C: New.\n\t* g++.dg/modules/gmf-1_a.C: New.\n\t* g++.dg/modules/gmf-1_b.C: New.\n\t* g++.dg/modules/gmf-2_a.H: New.\n\t* g++.dg/modules/gmf-2_b.C: New.\n\t* g++.dg/modules/gmf-2_c.C: New.\n\t* g++.dg/modules/gmf-2_d.C: New.\n\t* g++.dg/modules/gvar_a.C: New.\n\t* g++.dg/modules/gvar_b.C: New.\n\t* g++.dg/modules/hdr-1_a.H: New.\n\t* g++.dg/modules/hdr-1_b.H: New.\n\t* g++.dg/modules/hdr-1_c.C: New.\n\t* g++.dg/modules/hdr-init-1_a.H: New.\n\t* g++.dg/modules/hdr-init-1_b.H: New.\n\t* g++.dg/modules/hdr-init-1_c.C: New.\n\t* g++.dg/modules/horcrux-1_a.C: New.\n\t* g++.dg/modules/horcrux-1_b.C: New.\n\t* g++.dg/modules/ice-1.C: New.\n\t* g++.dg/modules/imp-inline-1_a.C: New.\n\t* g++.dg/modules/imp-inline-1_b.C: New.\n\t* g++.dg/modules/imp-member-1_a.C: New.\n\t* g++.dg/modules/imp-member-1_b.C: New.\n\t* g++.dg/modules/imp-member-1_c.C: New.\n\t* g++.dg/modules/imp-member-1_d.C: New.\n\t* g++.dg/modules/imp-member-1_e.C: New.\n\t* g++.dg/modules/imp-member-2_a.C: New.\n\t* g++.dg/modules/imp-member-2_b.C: New.\n\t* g++.dg/modules/imp-member-2_c.C: New.\n\t* g++.dg/modules/imp-member-3.H: New.\n\t* g++.dg/modules/import-1_a.C: New.\n\t* g++.dg/modules/import-1_b.C: New.\n\t* g++.dg/modules/import-1_c.C: New.\n\t* g++.dg/modules/import-1_d.C: New.\n\t* g++.dg/modules/import-1_e.C: New.\n\t* g++.dg/modules/import-1_f.C: New.\n\t* g++.dg/modules/import-1_g.C: New.\n\t* g++.dg/modules/import-2.C: New.\n\t* g++.dg/modules/inc-xlate-1.map: New.\n\t* g++.dg/modules/inc-xlate-1_a.H: New.\n\t* g++.dg/modules/inc-xlate-1_b.H: New.\n\t* g++.dg/modules/inc-xlate-1_c.C: New.\n\t* g++.dg/modules/inc-xlate-1_e.C: New.\n\t* g++.dg/modules/indirect-1_a.C: New.\n\t* g++.dg/modules/indirect-1_b.C: New.\n\t* g++.dg/modules/indirect-1_c.C: New.\n\t* g++.dg/modules/indirect-2_a.C: New.\n\t* g++.dg/modules/indirect-2_b.C: New.\n\t* g++.dg/modules/indirect-2_c.C: New.\n\t* g++.dg/modules/indirect-3_a.C: New.\n\t* g++.dg/modules/indirect-3_b.C: New.\n\t* g++.dg/modules/indirect-3_c.C: New.\n\t* g++.dg/modules/indirect-4_a.C: New.\n\t* g++.dg/modules/indirect-4_b.C: New.\n\t* g++.dg/modules/indirect-4_c.C: New.\n\t* g++.dg/modules/inext-1.H: New.\n\t* g++.dg/modules/inh-tmpl-ctor-1.h: New.\n\t* g++.dg/modules/inh-tmpl-ctor-1_a.H: New.\n\t* g++.dg/modules/inh-tmpl-ctor-1_b.C: New.\n\t* g++.dg/modules/init-1_a.C: New.\n\t* g++.dg/modules/init-1_b.C: New.\n\t* g++.dg/modules/init-2_a.C: New.\n\t* g++.dg/modules/init-2_b.C: New.\n\t* g++.dg/modules/init-2_c.C: New.\n\t* g++.dg/modules/inst-1_a.C: New.\n\t* g++.dg/modules/inst-1_b.C: New.\n\t* g++.dg/modules/inst-2_a.C: New.\n\t* g++.dg/modules/inst-2_b.C: New.\n\t* g++.dg/modules/inst-3_a.C: New.\n\t* g++.dg/modules/inst-3_b.C: New.\n\t* g++.dg/modules/inst-4_a.C: New.\n\t* g++.dg/modules/inst-4_b.C: New.\n\t* g++.dg/modules/inst-5_a.H: New.\n\t* g++.dg/modules/inst-5_b.C: New.\n\t* g++.dg/modules/internal-1.C: New.\n\t* g++.dg/modules/internal-2_a.H: New.\n\t* g++.dg/modules/internal-2_b.H: New.\n\t* g++.dg/modules/internal-2_c.C: New.\n\t* g++.dg/modules/isalnum.H: New.\n\t* g++.dg/modules/keyword-1_a.C: New.\n\t* g++.dg/modules/keyword-1_b.C: New.\n\t* g++.dg/modules/lambda-1_a.C: New.\n\t* g++.dg/modules/lambda-1_b.C: New.\n\t* g++.dg/modules/lambda-2.h: New.\n\t* g++.dg/modules/lambda-2_a.H: New.\n\t* g++.dg/modules/lambda-2_b.C: New.\n\t* g++.dg/modules/lambda-2_c.C: New.\n\t* g++.dg/modules/lambda-3.h: New.\n\t* g++.dg/modules/lambda-3_a.H: New.\n\t* g++.dg/modules/lambda-3_b.C: New.\n\t* g++.dg/modules/lambda-3_c.C: New.\n\t* g++.dg/modules/lambda-4.h: New.\n\t* g++.dg/modules/lambda-4_a.H: New.\n\t* g++.dg/modules/lambda-4_b.C: New.\n\t* g++.dg/modules/lang-1_a.H: New.\n\t* g++.dg/modules/lang-1_b.C: New.\n\t* g++.dg/modules/lang-1_c.C: New.\n\t* g++.dg/modules/lang-2_a.C: New.\n\t* g++.dg/modules/lang-2_b.C: New.\n\t* g++.dg/modules/late-ret-1.H: New.\n\t* g++.dg/modules/late-ret-2_a.H: New.\n\t* g++.dg/modules/late-ret-2_b.H: New.\n\t* g++.dg/modules/late-ret-2_c.C: New.\n\t* g++.dg/modules/late-ret-3_a.H: New.\n\t* g++.dg/modules/late-ret-3_b.H: New.\n\t* g++.dg/modules/late-ret-3_c.C: New.\n\t* g++.dg/modules/lazy-1_a.C: New.\n\t* g++.dg/modules/lazy-1_b.C: New.\n\t* g++.dg/modules/leg-merge-1_a.H: New.\n\t* g++.dg/modules/leg-merge-1_b.H: New.\n\t* g++.dg/modules/leg-merge-1_c.C: New.\n\t* g++.dg/modules/leg-merge-1_d.C: New.\n\t* g++.dg/modules/leg-merge-2_a.H: New.\n\t* g++.dg/modules/leg-merge-2_b.H: New.\n\t* g++.dg/modules/leg-merge-2_c.C: New.\n\t* g++.dg/modules/leg-merge-3_a.H: New.\n\t* g++.dg/modules/leg-merge-3_b.H: New.\n\t* g++.dg/modules/leg-merge-3_c.C: New.\n\t* g++.dg/modules/leg-merge-3_d.C: New.\n\t* g++.dg/modules/leg-merge-4_a.H: New.\n\t* g++.dg/modules/leg-merge-4_b.H: New.\n\t* g++.dg/modules/leg-merge-4_c.C: New.\n\t* g++.dg/modules/leg-merge-5_a.H: New.\n\t* g++.dg/modules/leg-merge-5_b.H: New.\n\t* g++.dg/modules/leg-merge-5_c.C: New.\n\t* g++.dg/modules/leg-merge-6_a.H: New.\n\t* g++.dg/modules/leg-merge-6_b.H: New.\n\t* g++.dg/modules/leg-merge-6_c.C: New.\n\t* g++.dg/modules/leg-merge-7_a.H: New.\n\t* g++.dg/modules/leg-merge-7_b.H: New.\n\t* g++.dg/modules/leg-merge-7_c.C: New.\n\t* g++.dg/modules/leg-merge-8_a.H: New.\n\t* g++.dg/modules/leg-merge-8_b.H: New.\n\t* g++.dg/modules/leg-merge-8_c.C: New.\n\t* g++.dg/modules/leg-merge-9_a.H: New.\n\t* g++.dg/modules/leg-merge-9_b.H: New.\n\t* g++.dg/modules/leg-merge-9_c.C: New.\n\t* g++.dg/modules/legacy-1_a.H: New.\n\t* g++.dg/modules/legacy-1_b.C: New.\n\t* g++.dg/modules/legacy-1_c.C: New.\n\t* g++.dg/modules/legacy-2.h: New.\n\t* g++.dg/modules/legacy-2.map: New.\n\t* g++.dg/modules/legacy-2_a.H: New.\n\t* g++.dg/modules/legacy-2_b.H: New.\n\t* g++.dg/modules/legacy-2_c.C: New.\n\t* g++.dg/modules/legacy-2_d.C: New.\n\t* g++.dg/modules/legacy-3.h: New.\n\t* g++.dg/modules/legacy-3_a.H: New.\n\t* g++.dg/modules/legacy-3_b.H: New.\n\t* g++.dg/modules/legacy-3_c.H: New.\n\t* g++.dg/modules/legacy-6.map: New.\n\t* g++.dg/modules/legacy-6_a.H: New.\n\t* g++.dg/modules/legacy-6_b.H: New.\n\t* g++.dg/modules/legacy-6_c.C: New.\n\t* g++.dg/modules/legacy-6_d.C: New.\n\t* g++.dg/modules/legacy-6_e.C: New.\n\t* g++.dg/modules/legacy-6_f.C: New.\n\t* g++.dg/modules/legacy-7_a.H: New.\n\t* g++.dg/modules/legacy-7_b.C: New.\n\t* g++.dg/modules/legacy-8_a.H: New.\n\t* g++.dg/modules/legacy-8_b.H: New.\n\t* g++.dg/modules/legacy-8_c.C: New.\n\t* g++.dg/modules/legacy-8_d.C: New.\n\t* g++.dg/modules/legacy-8_e.C: New.\n\t* g++.dg/modules/libfn-1_a.C: New.\n\t* g++.dg/modules/libfn-1_b.C: New.\n\t* g++.dg/modules/literals-1_a.C: New.\n\t* g++.dg/modules/literals-1_b.C: New.\n\t* g++.dg/modules/loc-1_a.C: New.\n\t* g++.dg/modules/loc-1_b.C: New.\n\t* g++.dg/modules/loc-1_c.C: New.\n\t* g++.dg/modules/loc-2_a.C: New.\n\t* g++.dg/modules/loc-2_b.C: New.\n\t* g++.dg/modules/loc-2_c.C: New.\n\t* g++.dg/modules/loc-2_d.C: New.\n\t* g++.dg/modules/loc-2_e.C: New.\n\t* g++.dg/modules/loc-2_f.C: New.\n\t* g++.dg/modules/loc-wrapper-1.h: New.\n\t* g++.dg/modules/loc-wrapper-1_a.H: New.\n\t* g++.dg/modules/loc-wrapper-1_b.C: New.\n\t* g++.dg/modules/local-1_a.C: New.\n\t* g++.dg/modules/local-1_b.C: New.\n\t* g++.dg/modules/local-extern-1.C: New.\n\t* g++.dg/modules/local-extern-2.H: New.\n\t* g++.dg/modules/local-struct-1_a.C: New.\n\t* g++.dg/modules/local-struct-1_b.C: New.\n\t* g++.dg/modules/macloc-1_a.C: New.\n\t* g++.dg/modules/macloc-1_b.C: New.\n\t* g++.dg/modules/macloc-1_c.C: New.\n\t* g++.dg/modules/macloc-1_d.C: New.\n\t* g++.dg/modules/macloc-2_a.H: New.\n\t* g++.dg/modules/macloc-2_b.C: New.\n\t* g++.dg/modules/macro-1_a.H: New.\n\t* g++.dg/modules/macro-1_b.C: New.\n\t* g++.dg/modules/macro-2_a.H: New.\n\t* g++.dg/modules/macro-2_b.H: New.\n\t* g++.dg/modules/macro-2_c.H: New.\n\t* g++.dg/modules/macro-2_d.C: New.\n\t* g++.dg/modules/macro-3_a.H: New.\n\t* g++.dg/modules/macro-3_b.H: New.\n\t* g++.dg/modules/macro-3_c.C: New.\n\t* g++.dg/modules/macro-4_a.H: New.\n\t* g++.dg/modules/macro-4_b.H: New.\n\t* g++.dg/modules/macro-4_c.H: New.\n\t* g++.dg/modules/macro-4_d.C: New.\n\t* g++.dg/modules/macro-4_e.C: New.\n\t* g++.dg/modules/macro-4_f.C: New.\n\t* g++.dg/modules/macro-4_g.C: New.\n\t* g++.dg/modules/macro-5_a.H: New.\n\t* g++.dg/modules/macro-5_b.H: New.\n\t* g++.dg/modules/macro-5_c.C: New.\n\t* g++.dg/modules/macro-6_a.H: New.\n\t* g++.dg/modules/macro-6_b.C: New.\n\t* g++.dg/modules/macro-6_c.C: New.\n\t* g++.dg/modules/macro-7_a.C: New.\n\t* g++.dg/modules/macro-7_b.C: New.\n\t* g++.dg/modules/macro-7_c.C: New.\n\t* g++.dg/modules/map-1.map: New.\n\t* g++.dg/modules/map-1_a.C: New.\n\t* g++.dg/modules/map-1_b.C: New.\n\t* g++.dg/modules/map-1_b.map: New.\n\t* g++.dg/modules/map-2.C: New.\n\t* g++.dg/modules/map-2.map: New.\n\t* g++.dg/modules/member-def-1_a.C: New.\n\t* g++.dg/modules/member-def-1_b.C: New.\n\t* g++.dg/modules/member-def-1_c.C: New.\n\t* g++.dg/modules/member-def-1_d.C: New.\n\t* g++.dg/modules/member-def-2_a.C: New.\n\t* g++.dg/modules/member-def-2_b.C: New.\n\t* g++.dg/modules/member-def-2_c.C: New.\n\t* g++.dg/modules/member-def-2_d.C: New.\n\t* g++.dg/modules/memref-1_a.C: New.\n\t* g++.dg/modules/memref-1_b.C: New.\n\t* g++.dg/modules/merge-10.h: New.\n\t* g++.dg/modules/merge-10_a.H: New.\n\t* g++.dg/modules/merge-10_b.C: New.\n\t* g++.dg/modules/merge-11.h: New.\n\t* g++.dg/modules/merge-11_a.H: New.\n\t* g++.dg/modules/merge-11_b.C: New.\n\t* g++.dg/modules/merge-12.h: New.\n\t* g++.dg/modules/merge-12_a.H: New.\n\t* g++.dg/modules/merge-12_b.C: New.\n\t* g++.dg/modules/merge-13.h: New.\n\t* g++.dg/modules/merge-13_a.H: New.\n\t* g++.dg/modules/merge-13_b.C: New.\n\t* g++.dg/modules/merge-14.h: New.\n\t* g++.dg/modules/merge-14_a.H: New.\n\t* g++.dg/modules/merge-14_b.C: New.\n\t* g++.dg/modules/merge-15.h: New.\n\t* g++.dg/modules/merge-15_a.H: New.\n\t* g++.dg/modules/merge-15_b.C: New.\n\t* g++.dg/modules/merge-1_a.C: New.\n\t* g++.dg/modules/merge-1_b.C: New.\n\t* g++.dg/modules/merge-2_a.H: New.\n\t* g++.dg/modules/merge-2_b.C: New.\n\t* g++.dg/modules/merge-3_a.H: New.\n\t* g++.dg/modules/merge-3_b.C: New.\n\t* g++.dg/modules/merge-4.h: New.\n\t* g++.dg/modules/merge-4_a.H: New.\n\t* g++.dg/modules/merge-4_b.C: New.\n\t* g++.dg/modules/merge-5.h: New.\n\t* g++.dg/modules/merge-5_a.H: New.\n\t* g++.dg/modules/merge-5_b.C: New.\n\t* g++.dg/modules/merge-6.h: New.\n\t* g++.dg/modules/merge-6_a.H: New.\n\t* g++.dg/modules/merge-6_b.C: New.\n\t* g++.dg/modules/merge-7.h: New.\n\t* g++.dg/modules/merge-7_a.H: New.\n\t* g++.dg/modules/merge-7_b.C: New.\n\t* g++.dg/modules/merge-8.h: New.\n\t* g++.dg/modules/merge-8_a.H: New.\n\t* g++.dg/modules/merge-8_b.C: New.\n\t* g++.dg/modules/merge-9.h: New.\n\t* g++.dg/modules/merge-9_a.H: New.\n\t* g++.dg/modules/merge-9_b.C: New.\n\t* g++.dg/modules/mod-exp-1_a.C: New.\n\t* g++.dg/modules/mod-exp-1_b.C: New.\n\t* g++.dg/modules/mod-imp-1_a.C: New.\n\t* g++.dg/modules/mod-imp-1_b.C: New.\n\t* g++.dg/modules/mod-imp-1_c.C: New.\n\t* g++.dg/modules/mod-imp-1_d.C: New.\n\t* g++.dg/modules/mod-impl-1_a.C: New.\n\t* g++.dg/modules/mod-impl-1_b.C: New.\n\t* g++.dg/modules/mod-impl-1_c.C: New.\n\t* g++.dg/modules/mod-impl-1_d.C: New.\n\t* g++.dg/modules/mod-indirect-1_a.C: New.\n\t* g++.dg/modules/mod-indirect-1_b.C: New.\n\t* g++.dg/modules/mod-indirect-1_c.C: New.\n\t* g++.dg/modules/mod-indirect-1_d.C: New.\n\t* g++.dg/modules/mod-indirect-1_e.C: New.\n\t* g++.dg/modules/mod-stamp-1_a.C: New.\n\t* g++.dg/modules/mod-stamp-1_b.C: New.\n\t* g++.dg/modules/mod-stamp-1_c.C: New.\n\t* g++.dg/modules/mod-stamp-1_d.C: New.\n\t* g++.dg/modules/mod-sym-1.C: New.\n\t* g++.dg/modules/mod-sym-2.C: New.\n\t* g++.dg/modules/mod-sym-3.C: New.\n\t* g++.dg/modules/mod-tpl-1_a.C: New.\n\t* g++.dg/modules/mod-tpl-1_b.C: New.\n\t* g++.dg/modules/mod-tpl-2_a.C: New.\n\t* g++.dg/modules/mod-tpl-2_b.C: New.\n\t* g++.dg/modules/mutual-friend.ii: New.\n\t* g++.dg/modules/namespace-1_a.C: New.\n\t* g++.dg/modules/namespace-1_b.C: New.\n\t* g++.dg/modules/namespace-1_c.C: New.\n\t* g++.dg/modules/namespace-2_a.C: New.\n\t* g++.dg/modules/namespace-2_b.C: New.\n\t* g++.dg/modules/namespace-3_a.C: New.\n\t* g++.dg/modules/namespace-3_b.C: New.\n\t* g++.dg/modules/namespace-4_a.C: New.\n\t* g++.dg/modules/namespace-4_b.C: New.\n\t* g++.dg/modules/namespace-4_c.C: New.\n\t* g++.dg/modules/nest-1_a.C: New.\n\t* g++.dg/modules/nest-1_b.C: New.\n\t* g++.dg/modules/nest-1_c.C: New.\n\t* g++.dg/modules/nested-1_a.C: New.\n\t* g++.dg/modules/nested-1_b.C: New.\n\t* g++.dg/modules/nested-1_c.C: New.\n\t* g++.dg/modules/nested-2_a.C: New.\n\t* g++.dg/modules/nested-2_b.C: New.\n\t* g++.dg/modules/nested-constr-1.h: New.\n\t* g++.dg/modules/nested-constr-1_a.H: New.\n\t* g++.dg/modules/nested-constr-1_b.C: New.\n\t* g++.dg/modules/nested-constr-2_a.C: New.\n\t* g++.dg/modules/nested-constr-2_b.C: New.\n\t* g++.dg/modules/nested-constr-2_c.C: New.\n\t* g++.dg/modules/nodes-1_a.C: New.\n\t* g++.dg/modules/nodes-1_b.C: New.\n\t* g++.dg/modules/noexcept-1.h: New.\n\t* g++.dg/modules/noexcept-1_a.H: New.\n\t* g++.dg/modules/noexcept-1_b.C: New.\n\t* g++.dg/modules/ns-alias-1_a.C: New.\n\t* g++.dg/modules/ns-alias-1_b.C: New.\n\t* g++.dg/modules/ns-alias-1_c.C: New.\n\t* g++.dg/modules/ns-dir-1_a.C: New.\n\t* g++.dg/modules/ns-dir-1_b.C: New.\n\t* g++.dg/modules/ns-dup-1_a.C: New.\n\t* g++.dg/modules/ns-dup-1_b.C: New.\n\t* g++.dg/modules/ns-imp-1_a.C: New.\n\t* g++.dg/modules/ns-imp-1_b.C: New.\n\t* g++.dg/modules/ns-imp-1_c.C: New.\n\t* g++.dg/modules/ns-part-1_a.C: New.\n\t* g++.dg/modules/ns-part-1_b.C: New.\n\t* g++.dg/modules/ns-part-1_c.C: New.\n\t* g++.dg/modules/nsdmi-1_a.C: New.\n\t* g++.dg/modules/nsdmi-1_b.C: New.\n\t* g++.dg/modules/nsdmi-2.C: New.\n\t* g++.dg/modules/omp-1_a.C: New.\n\t* g++.dg/modules/omp-1_b.C: New.\n\t* g++.dg/modules/omp-1_c.C: New.\n\t* g++.dg/modules/omp-2_a.C: New.\n\t* g++.dg/modules/omp-2_b.C: New.\n\t* g++.dg/modules/only-1.C: New.\n\t* g++.dg/modules/only-2.C: New.\n\t* g++.dg/modules/only-3.C: New.\n\t* g++.dg/modules/operator-1_a.C: New.\n\t* g++.dg/modules/operator-1_b.C: New.\n\t* g++.dg/modules/p0713-1.C: New.\n\t* g++.dg/modules/p0713-2.C: New.\n\t* g++.dg/modules/p0713-3.C: New.\n\t* g++.dg/modules/part-1_a.C: New.\n\t* g++.dg/modules/part-1_b.C: New.\n\t* g++.dg/modules/part-1_c.C: New.\n\t* g++.dg/modules/part-2_a.C: New.\n\t* g++.dg/modules/part-2_b.C: New.\n\t* g++.dg/modules/part-2_c.C: New.\n\t* g++.dg/modules/part-2_d.C: New.\n\t* g++.dg/modules/part-2_e.C: New.\n\t* g++.dg/modules/part-3_a.C: New.\n\t* g++.dg/modules/part-3_b.C: New.\n\t* g++.dg/modules/part-3_c.C: New.\n\t* g++.dg/modules/part-3_d.C: New.\n\t* g++.dg/modules/part-4_a.C: New.\n\t* g++.dg/modules/part-4_b.C: New.\n\t* g++.dg/modules/part-4_c.C: New.\n\t* g++.dg/modules/part-6_a.C: New.\n\t* g++.dg/modules/part-6_b.C: New.\n\t* g++.dg/modules/part-6_c.C: New.\n\t* g++.dg/modules/part-6_d.C: New.\n\t* g++.dg/modules/part-6_e.C: New.\n\t* g++.dg/modules/part-7_a.C: New.\n\t* g++.dg/modules/part-7_b.C: New.\n\t* g++.dg/modules/part-7_c.C: New.\n\t* g++.dg/modules/part-hdr-1_a.H: New.\n\t* g++.dg/modules/part-hdr-1_b.C: New.\n\t* g++.dg/modules/part-hdr-1_c.C: New.\n\t* g++.dg/modules/part-mac-1_a.H: New.\n\t* g++.dg/modules/part-mac-1_b.C: New.\n\t* g++.dg/modules/part-mac-1_c.C: New.\n\t* g++.dg/modules/partial-1.h: New.\n\t* g++.dg/modules/partial-1_a.H: New.\n\t* g++.dg/modules/partial-1_b.C: New.\n\t* g++.dg/modules/pmf-1.h: New.\n\t* g++.dg/modules/pmf-1_a.H: New.\n\t* g++.dg/modules/pmf-1_b.C: New.\n\t* g++.dg/modules/pmf-2.h: New.\n\t* g++.dg/modules/pmf-2_a.H: New.\n\t* g++.dg/modules/pmf-2_b.C: New.\n\t* g++.dg/modules/pmp-1_a.C: New.\n\t* g++.dg/modules/pmp-1_b.C: New.\n\t* g++.dg/modules/pmp-2.C: New.\n\t* g++.dg/modules/pmp-3.C: New.\n\t* g++.dg/modules/pragma-1_a.H: New.\n\t* g++.dg/modules/pragma-1_b.C: New.\n\t* g++.dg/modules/predef-1.C: New.\n\t* g++.dg/modules/predef-1.h: New.\n\t* g++.dg/modules/predef-2.h: New.\n\t* g++.dg/modules/predef-2_a.C: New.\n\t* g++.dg/modules/predef-2_b.C: New.\n\t* g++.dg/modules/preproc-1.C: New.\n\t* g++.dg/modules/preproc-2_a.H: New.\n\t* g++.dg/modules/preproc-2_b.C: New.\n\t* g++.dg/modules/printf-1_a.H: New.\n\t* g++.dg/modules/printf-1_b.C: New.\n\t* g++.dg/modules/reparent-1_a.C: New.\n\t* g++.dg/modules/reparent-1_b.C: New.\n\t* g++.dg/modules/reparent-1_c.C: New.\n\t* g++.dg/modules/scc-1.C: New.\n\t* g++.dg/modules/scc-2.C: New.\n\t* g++.dg/modules/shadow-1_a.C: New.\n\t* g++.dg/modules/shadow-1_b.C: New.\n\t* g++.dg/modules/stat-tpl-1_a.H: New.\n\t* g++.dg/modules/static-1_a.C: New.\n\t* g++.dg/modules/static-1_b.C: New.\n\t* g++.dg/modules/static-1_c.C: New.\n\t* g++.dg/modules/std-1_a.C: New.\n\t* g++.dg/modules/std-1_b.C: New.\n\t* g++.dg/modules/stdns_a.C: New.\n\t* g++.dg/modules/stdns_b.C: New.\n\t* g++.dg/modules/sv-1.h: New.\n\t* g++.dg/modules/sv-1_a.C: New.\n\t* g++.dg/modules/sv-1_b.C: New.\n\t* g++.dg/modules/sym-subst-1.C: New.\n\t* g++.dg/modules/sym-subst-2_a.C: New.\n\t* g++.dg/modules/sym-subst-2_b.C: New.\n\t* g++.dg/modules/sym-subst-3_a.C: New.\n\t* g++.dg/modules/sym-subst-3_b.C: New.\n\t* g++.dg/modules/sym-subst-4.C: New.\n\t* g++.dg/modules/sym-subst-5.C: New.\n\t* g++.dg/modules/sym-subst-6.C: New.\n\t* g++.dg/modules/sys/alias-2_a.H: New.\n\t* g++.dg/modules/sys/inext-1.H: New.\n\t* g++.dg/modules/tdef-1_a.C: New.\n\t* g++.dg/modules/tdef-1_b.C: New.\n\t* g++.dg/modules/tdef-2_a.C: New.\n\t* g++.dg/modules/tdef-2_b.C: New.\n\t* g++.dg/modules/tdef-2_c.C: New.\n\t* g++.dg/modules/tdef-3_a.C: New.\n\t* g++.dg/modules/tdef-3_b.C: New.\n\t* g++.dg/modules/tdef-3_c.C: New.\n\t* g++.dg/modules/tdef-4_a.C: New.\n\t* g++.dg/modules/tdef-4_b.C: New.\n\t* g++.dg/modules/tdef-4_c.C: New.\n\t* g++.dg/modules/tdef-5_a.C: New.\n\t* g++.dg/modules/tdef-5_b.C: New.\n\t* g++.dg/modules/tdef-6_a.H: New.\n\t* g++.dg/modules/tdef-6_b.C: New.\n\t* g++.dg/modules/tdef-7.h: New.\n\t* g++.dg/modules/tdef-7_a.H: New.\n\t* g++.dg/modules/tdef-7_b.C: New.\n\t* g++.dg/modules/tdef-8_a.C: New.\n\t* g++.dg/modules/tdef-8_b.C: New.\n\t* g++.dg/modules/tdef-inst-1.h: New.\n\t* g++.dg/modules/tdef-inst-1_a.C: New.\n\t* g++.dg/modules/tdef-inst-1_b.C: New.\n\t* g++.dg/modules/thunk-1_a.C: New.\n\t* g++.dg/modules/thunk-1_b.C: New.\n\t* g++.dg/modules/tmpl-part-req-1.h: New.\n\t* g++.dg/modules/tmpl-part-req-1_a.H: New.\n\t* g++.dg/modules/tmpl-part-req-1_b.C: New.\n\t* g++.dg/modules/tmpl-part-req-2.h: New.\n\t* g++.dg/modules/tmpl-part-req-2_a.H: New.\n\t* g++.dg/modules/tmpl-part-req-2_b.C: New.\n\t* g++.dg/modules/token-1.C: New.\n\t* g++.dg/modules/token-2_a.C: New.\n\t* g++.dg/modules/token-2_b.C: New.\n\t* g++.dg/modules/token-3.C: New.\n\t* g++.dg/modules/token-4.C: New.\n\t* g++.dg/modules/token-5.C: New.\n\t* g++.dg/modules/tpl-alias-1.h: New.\n\t* g++.dg/modules/tpl-alias-1_a.H: New.\n\t* g++.dg/modules/tpl-alias-1_b.C: New.\n\t* g++.dg/modules/tpl-ary-1.h: New.\n\t* g++.dg/modules/tpl-ary-1_a.H: New.\n\t* g++.dg/modules/tpl-ary-1_b.C: New.\n\t* g++.dg/modules/tpl-extern-fn-1_a.H: New.\n\t* g++.dg/modules/tpl-extern-fn-1_b.C: New.\n\t* g++.dg/modules/tpl-extern-var-1_a.H: New.\n\t* g++.dg/modules/tpl-extern-var-1_b.C: New.\n\t* g++.dg/modules/tpl-friend-1_a.C: New.\n\t* g++.dg/modules/tpl-friend-1_b.C: New.\n\t* g++.dg/modules/tpl-friend-2_a.C: New.\n\t* g++.dg/modules/tpl-friend-2_b.C: New.\n\t* g++.dg/modules/tpl-friend-3_a.C: New.\n\t* g++.dg/modules/tpl-friend-3_b.C: New.\n\t* g++.dg/modules/tpl-friend-4_a.C: New.\n\t* g++.dg/modules/tpl-friend-4_b.C: New.\n\t* g++.dg/modules/tpl-friend-5_a.C: New.\n\t* g++.dg/modules/tpl-friend-5_b.C: New.\n\t* g++.dg/modules/tpl-friend-6_a.C: New.\n\t* g++.dg/modules/tpl-friend-6_b.C: New.\n\t* g++.dg/modules/tpl-friend-7_a.C: New.\n\t* g++.dg/modules/tpl-friend-7_b.C: New.\n\t* g++.dg/modules/tpl-friend-merge-1.cc: New.\n\t* g++.dg/modules/tpl-friend-merge-1.h: New.\n\t* g++.dg/modules/tpl-friend-merge-1_a.H: New.\n\t* g++.dg/modules/tpl-friend-merge-1_b.H: New.\n\t* g++.dg/modules/tpl-friend-merge-1_c.H: New.\n\t* g++.dg/modules/tpl-friend-merge-1_d.C: New.\n\t* g++.dg/modules/tpl-friend-merge-1_e.C: New.\n\t* g++.dg/modules/tpl-friend-merge-1_f.C: New.\n\t* g++.dg/modules/tpl-spec-1_a.C: New.\n\t* g++.dg/modules/tpl-spec-1_b.C: New.\n\t* g++.dg/modules/tpl-spec-2_a.C: New.\n\t* g++.dg/modules/tpl-spec-2_b.C: New.\n\t* g++.dg/modules/tpl-spec-2_c.C: New.\n\t* g++.dg/modules/tpl-spec-2_d.C: New.\n\t* g++.dg/modules/tpl-spec-3_a.C: New.\n\t* g++.dg/modules/tpl-spec-3_b.C: New.\n\t* g++.dg/modules/tpl-spec-4_a.C: New.\n\t* g++.dg/modules/tpl-spec-4_b.C: New.\n\t* g++.dg/modules/tpl-spec-5_a.C: New.\n\t* g++.dg/modules/tpl-spec-5_b.C: New.\n\t* g++.dg/modules/tpl-spec-6_a.C: New.\n\t* g++.dg/modules/tpl-spec-6_b.C: New.\n\t* g++.dg/modules/tpl-spec-7.C: New.\n\t* g++.dg/modules/tpl-tpl-friend-1_a.C: New.\n\t* g++.dg/modules/tpl-tpl-friend-1_b.C: New.\n\t* g++.dg/modules/tpl-tpl-mem-1_a.C: New.\n\t* g++.dg/modules/tpl-tpl-mem-1_b.C: New.\n\t* g++.dg/modules/tpl-tpl-merge-1.h: New.\n\t* g++.dg/modules/tpl-tpl-merge-1_a.H: New.\n\t* g++.dg/modules/tpl-tpl-merge-1_b.C: New.\n\t* g++.dg/modules/tpl-tpl-merge-2.h: New.\n\t* g++.dg/modules/tpl-tpl-merge-2_a.H: New.\n\t* g++.dg/modules/tpl-tpl-merge-2_b.C: New.\n\t* g++.dg/modules/tpl-tpl-parm-1_a.H: New.\n\t* g++.dg/modules/tpl-tpl-parm-1_b.C: New.\n\t* g++.dg/modules/tpl-tpl-parm-2.h: New.\n\t* g++.dg/modules/tpl-tpl-parm-2_a.H: New.\n\t* g++.dg/modules/tpl-tpl-parm-2_b.C: New.\n\t* g++.dg/modules/tplmem-1_a.C: New.\n\t* g++.dg/modules/tplmem-1_b.C: New.\n\t* g++.dg/modules/tplmem-3_a.C: New.\n\t* g++.dg/modules/tplmem-3_b.C: New.\n\t* g++.dg/modules/ttp-1_a.C: New.\n\t* g++.dg/modules/ttp-1_b.C: New.\n\t* g++.dg/modules/ttp-2_a.C: New.\n\t* g++.dg/modules/ttp-2_b.C: New.\n\t* g++.dg/modules/ttp-3_a.C: New.\n\t* g++.dg/modules/ttp-3_b.C: New.\n\t* g++.dg/modules/typename-1_a.C: New.\n\t* g++.dg/modules/typename-1_b.C: New.\n\t* g++.dg/modules/unnamed-1_a.C: New.\n\t* g++.dg/modules/unnamed-1_b.C: New.\n\t* g++.dg/modules/unnamed-2.C: New.\n\t* g++.dg/modules/used-1_a.H: New.\n\t* g++.dg/modules/used-1_b.H: New.\n\t* g++.dg/modules/used-1_c.C: New.\n\t* g++.dg/modules/using-1_a.C: New.\n\t* g++.dg/modules/using-1_b.C: New.\n\t* g++.dg/modules/using-1_c.C: New.\n\t* g++.dg/modules/using-2_a.C: New.\n\t* g++.dg/modules/using-2_b.C: New.\n\t* g++.dg/modules/using-2_c.C: New.\n\t* g++.dg/modules/using-3.C: New.\n\t* g++.dg/modules/using-4_a.C: New.\n\t* g++.dg/modules/using-4_b.C: New.\n\t* g++.dg/modules/using-5_a.C: New.\n\t* g++.dg/modules/using-5_b.C: New.\n\t* g++.dg/modules/using-6_a.C: New.\n\t* g++.dg/modules/using-6_b.C: New.\n\t* g++.dg/modules/using-7.C: New.\n\t* g++.dg/modules/using-8_a.C: New.\n\t* g++.dg/modules/using-8_b.C: New.\n\t* g++.dg/modules/using-enum-1_a.H: New.\n\t* g++.dg/modules/using-enum-1_b.C: New.\n\t* g++.dg/modules/var-1_a.C: New.\n\t* g++.dg/modules/var-1_b.C: New.\n\t* g++.dg/modules/var-tpl-1_a.C: New.\n\t* g++.dg/modules/var-tpl-1_b.C: New.\n\t* g++.dg/modules/var-tpl-concept-1.h: New.\n\t* g++.dg/modules/var-tpl-concept-1_a.C: New.\n\t* g++.dg/modules/var-tpl-concept-1_b.C: New.\n\t* g++.dg/modules/virt-1_a.C: New.\n\t* g++.dg/modules/virt-1_b.C: New.\n\t* g++.dg/modules/virt-2_a.C: New.\n\t* g++.dg/modules/virt-2_b.C: New.\n\t* g++.dg/modules/virt-2_c.C: New.\n\t* g++.dg/modules/vmort-1_a.C: New.\n\t* g++.dg/modules/vmort-1_b.C: New.\n\t* g++.dg/modules/vmort-2_a.C: New.\n\t* g++.dg/modules/vmort-2_b.C: New.\n\t* g++.dg/modules/vmort-2_c.C: New.\n\t* g++.dg/modules/vtt-1_a.C: New.\n\t* g++.dg/modules/vtt-1_b.C: New.\n\t* g++.dg/modules/vtt-1_c.C: New.\n\t* g++.dg/modules/vtt-2.h: New.\n\t* g++.dg/modules/vtt-2_a.H: New.\n\t* g++.dg/modules/vtt-2_b.C: New.", "tree": {"sha": "8f35a049ec2eca451af6fddd61a64dc37ee9076a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f35a049ec2eca451af6fddd61a64dc37ee9076a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aff491f7b1d3a8373310cf596f5079cc4e37076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aff491f7b1d3a8373310cf596f5079cc4e37076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aff491f7b1d3a8373310cf596f5079cc4e37076", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aff491f7b1d3a8373310cf596f5079cc4e37076/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8be20b9e0d6d53d8538ead6b17c809d0204cc80f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be20b9e0d6d53d8538ead6b17c809d0204cc80f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be20b9e0d6d53d8538ead6b17c809d0204cc80f"}], "stats": {"total": 10400, "additions": 10400, "deletions": 0}, "files": [{"sha": "241701728a27205c52ed6cd24c4fdd860787e793", "filename": "gcc/testsuite/g++.dg/modules/access-1_a.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module Foo;\n+// { dg-module-cmi Foo }\n+\n+export class Base\n+{\n+public:\n+  int m;\n+};"}, {"sha": "454dea5332fefbb715e5f67275214952f4589e76", "filename": "gcc/testsuite/g++.dg/modules/access-1_b.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module Bar;\n+// { dg-module-cmi Bar }\n+\n+import Foo;\n+\n+export class Derived : public Base\n+{\n+private:\n+  using Base::m;\n+};"}, {"sha": "27b84c2ce1caf4dadbcb98aa1377d547389d1f0c", "filename": "gcc/testsuite/g++.dg/modules/access-1_c.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Faccess-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import Bar;\n+import Foo;\n+\n+void foo (Derived *d)\n+{\n+  d->m = 1; // { dg-error \"inaccessible within this context\" }\n+  static_cast<Base *> (d)->m = 1; //ok\n+}"}, {"sha": "50067acbf13cdfd37934893f37e26e9c62d95c28", "filename": "gcc/testsuite/g++.dg/modules/adhoc-1_a.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadhoc-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadhoc-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadhoc-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+// { dg-module-cmi bob }\n+\n+export module bob;\n+export int massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea (int);\n+                                                                                                                                                                               export void massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea (float);"}, {"sha": "59907a01d200398179f472d2dcc1b08b4a87b3b6", "filename": "gcc/testsuite/g++.dg/modules/adhoc-1_b.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadhoc-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadhoc-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadhoc-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options \"-fmodules-ts -fdiagnostics-show-caret\" }\n+\n+import bob;\n+void foo ()\n+{\n+  massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea ();\n+}\n+\n+// { dg-regexp \"\\n\\[^\\n]*adhoc-1_b.C:6:74: error: no matching function for call to 'massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea\\\\(\\\\)'\\n   massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea \\\\(\\\\);\\n                                                                          \\\\^$\" }\n+// { dg-regexp \"\\nIn module bob, imported at \\[^\\n]*adhoc-1_b.C:3:\\n\\[^\\n]*adhoc-1_a.C:5:12: note: candidate: 'int massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea@bob\\\\(int\\\\)'\\n export int massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea \\\\(int\\\\);\\n            \\\\^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~$\" }\n+// { dg-regexp \"\\nIn module bob, imported at \\[^\\n]*adhoc-1_b.C:3:\\n\\[^\\n]*adhoc-1_a.C:6:188: note: candidate: 'void massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea@bob\\\\(float\\\\)'\\n\\[ \\t]*export void massivelongnamethatcausesadhoclocationsokeepaddingcharsyourgettheidea \\\\(float\\\\);\\n\\[ \\t]*\\\\^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~?$\" }\n+// For some reason dg-regexp inserts a blank line \n+// { dg-allow-blank-lines-in-output 1 }"}, {"sha": "d4a53cb9cb2706b24ef12cfffa1dadcb210ca6c2", "filename": "gcc/testsuite/g++.dg/modules/adl-1_a.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-module-do run }\n+// { dg-additional-options -fmodules-ts }\n+export module worker;\n+// { dg-module-cmi worker }\n+\n+namespace details {\n+\n+export int fn (int x)\n+{\n+  return x;\n+}\n+\n+}"}, {"sha": "6cf123e41fb68c31fe5805e27a546d071f817878", "filename": "gcc/testsuite/g++.dg/modules/adl-1_b.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-additional-options -fmodules-ts }\n+export module inter;\n+// { dg-module-cmi inter }\n+\n+import worker;\n+\n+namespace hidden {\n+export int fn (int x)\n+{\n+  return -x;\n+}\n+}\n+\n+export template <typename T>\n+int TPL (T &t)\n+{\n+  return fn (t);\n+}"}, {"sha": "8be02e7493716cd1214b12e591f71f2f9771eff2", "filename": "gcc/testsuite/g++.dg/modules/adl-1_c.C", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,57 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import inter;\n+\n+namespace details\n+{\n+\n+struct X \n+{\n+\n+  int m;\n+  X (int m) : m(m)\n+  {\n+  }\n+\n+  operator int () const \n+  {\n+    return m;\n+  }\n+};\n+\n+}\n+\n+namespace hidden\n+{\n+\n+struct Y\n+{\n+\n+  int m;\n+  Y (int m) : m(m)\n+  {\n+  }\n+\n+  operator int () const \n+  {\n+    return m;\n+  }\n+};\n+\n+}\n+\n+int main ()\n+{\n+  details::X x(2);\n+  hidden::Y y(2);\n+\n+  // details::fn@worker is visible from TPL@inter\n+  if (TPL (x) != 2) // instantiate TPL<details::X>(T&)\n+    return 1;\n+\n+  // hidden::fn@inter is visible from TPL@inter\n+  if (TPL (y) != -2) // instantiate TPL<hidden::Y>(T&)\n+    return 2;\n+\n+  return 0;\n+}"}, {"sha": "d8f481cad97adc31661b783dedd552526bebb061", "filename": "gcc/testsuite/g++.dg/modules/adl-2_a.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-module-do run }\n+// { dg-additional-options -fmodules-ts }\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+export template <typename T>\n+int TPL (T const &t)\n+{\n+  return frob (t);\n+}"}, {"sha": "60e794343ced5e485ac4259e1d548750a3f1aabc", "filename": "gcc/testsuite/g++.dg/modules/adl-2_b.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,21 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module hidden;\n+// { dg-module-cmi hidden }\n+\n+export struct X \n+{\n+  int m;\n+\n+  X(int m) :m(m) {}\n+\n+  operator int () const \n+  {\n+    return m;\n+  }\n+};\n+\n+export int frob (int x)\n+{\n+  return x;\n+}"}, {"sha": "9c75b6d14a7ba4fa80d7500aa7f53b69d9cb5bec", "filename": "gcc/testsuite/g++.dg/modules/adl-2_c.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-2_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import foo;\n+import hidden;\n+\n+int main ()\n+{\n+  X x (2);\n+\n+  if (frob (x) != 2)\n+    return 1;\n+\n+  if (TPL (x) != 2)\n+    return 2;\n+\n+  return 0;\n+}"}, {"sha": "a26397894383999d4276932e1bc501dfb611b8aa", "filename": "gcc/testsuite/g++.dg/modules/adl-3_a.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options -fmodules-ts }\n+export module worker;\n+// { dg-module-cmi worker }\n+\n+namespace details {\n+\n+int fn (int x)\n+{\n+  return x;\n+}\n+\n+}"}, {"sha": "1f3011fdbb9bc915973ba7eb2391ad688f6b521d", "filename": "gcc/testsuite/g++.dg/modules/adl-3_b.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodules-ts }\n+export module inter;\n+// { dg-module-cmi inter }\n+\n+export template <typename T>\n+int TPL (T &t)\n+{\n+  return fn (t);\n+}"}, {"sha": "c4dc0adc00cd9a3e14368ddbf087bfda798e9844", "filename": "gcc/testsuite/g++.dg/modules/adl-3_c.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-3_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,36 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import inter;\n+import worker;\n+\n+namespace details\n+{\n+struct X \n+{\n+\n+  int m;\n+  X (int m) : m(m)\n+  {\n+  }\n+\n+  operator int () const \n+  {\n+    return m;\n+  }\n+};\n+\n+}\n+\n+int main ()\n+{\n+  details::X x(2);\n+\n+  if (fn (x) != 2) // { dg-error \"not declared in\" }\n+    return 1;\n+\n+  // { dg-regexp \"\\n\\[^\\n]*adl-3_b.C:8:13: error: 'fn' was not declared in this scope$\" }\n+  if (TPL (x) != 2) // { dg-message \"required from here\" }\n+    return 2;\n+\n+  return 0;\n+}"}, {"sha": "5d956c057e2018f1160d59d967e3d62b0dfde185", "filename": "gcc/testsuite/g++.dg/modules/adl-4_a.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-4_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-4_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-4_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// { dg-additional-options -fmodules-ts }\n+export module inter;\n+// { dg-module-cmi inter }\n+\n+namespace hidden {\n+// not found via ADL\n+int fn (int x);\n+\n+}\n+\n+export template <typename T>\n+int TPL (T &t)\n+{\n+  return fn (t);\n+}"}, {"sha": "aa1396f7ce2b8227f90e2f80b7f9b9d1cb154ca9", "filename": "gcc/testsuite/g++.dg/modules/adl-4_b.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-4_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-4_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-4_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,36 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import inter;\n+\n+namespace hidden\n+{\n+\n+struct Y\n+{\n+\n+  int m;\n+  Y (int m) : m(m)\n+  {\n+  }\n+\n+  operator int () const \n+  {\n+    return m;\n+  }\n+};\n+\n+}\n+\n+int main ()\n+{\n+  hidden::Y y(2);\n+\n+  // unexported hidden::fn@inter is not visible from TPL@inter\n+  if (TPL (y) != -2)\n+    return 2;\n+\n+  return 0;\n+}\n+\n+// ADL fails\n+// { dg-regexp {[^\\n]*/adl-4_a.C:14:[0-9]*: error: 'fn' was not declared in this scope\\n} }"}, {"sha": "5b8692211d464aa2923dcd78793a89750db31f13", "filename": "gcc/testsuite/g++.dg/modules/adl-5_a.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_a.c?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodules-ts }\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+export template <typename T>\n+int TPL (T const &t)\n+{\n+  return frob (t);\n+}"}, {"sha": "3c64cd4a75e18b46275aebcda75e1986c2cec54c", "filename": "gcc/testsuite/g++.dg/modules/adl-5_b.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,22 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module hidden;\n+// { dg-module-cmi hidden }\n+\n+export struct X \n+{\n+  int m;\n+\n+  X(int m) :m(m) {}\n+\n+  operator int () const \n+  {\n+    return m;\n+  }\n+};\n+\n+// Not found via any ADL outside of module hidden\n+int frob (int x)\n+{\n+  return x;\n+}"}, {"sha": "e047aec4b1a92d5f0a0ca217b2ed1b3ad7888556", "filename": "gcc/testsuite/g++.dg/modules/adl-5_c.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+module hidden;\n+import foo;\n+\n+int frob ()\n+{\n+  X x (2);\n+\n+  if (frob (x) != 2)\n+    return 1;\n+\n+  if (TPL (x) != 2)\n+    return 2;\n+\n+  return 0;\n+}"}, {"sha": "9c75b6d14a7ba4fa80d7500aa7f53b69d9cb5bec", "filename": "gcc/testsuite/g++.dg/modules/adl-5_d.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fadl-5_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import foo;\n+import hidden;\n+\n+int main ()\n+{\n+  X x (2);\n+\n+  if (frob (x) != 2)\n+    return 1;\n+\n+  if (TPL (x) != 2)\n+    return 2;\n+\n+  return 0;\n+}"}, {"sha": "8c5683608ad8f026a0d9e0994d03063bf3dbe923", "filename": "gcc/testsuite/g++.dg/modules/alias-1_a.H", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodule-header -isystem [srcdir]\" }\n+// { dg-module-cmi {} }\n+\n+#ifndef ALIAS_1_A\n+#define ALIAS_1_A\n+\n+int frob ();\n+\n+#endif"}, {"sha": "b3d7c2df3537c37e1961c98495e45c90c5b1d366", "filename": "gcc/testsuite/g++.dg/modules/alias-1_b.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module -isystem [srcdir]\" }\n+\n+// Alias at the header file.  We have one CMI file\n+import \"alias-1_a.H\";\n+import <alias-1_a.H>;\n+\n+int main ()\n+{\n+  frob ();\n+}\n+\n+// { dg-final { scan-lang-dump-times {CMI is } 1 module } }"}, {"sha": "6f9f1aa06c047499bb59131d696d3ad6f1d75719", "filename": "gcc/testsuite/g++.dg/modules/alias-1_c.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts -isystem [srcdir]\" }\n+// { dg-module-cmi bob }\n+\n+export module bob;\n+import \"alias-1_a.H\";"}, {"sha": "9b481e5b1852bea33c879ee8217a0e8e5cd1bea9", "filename": "gcc/testsuite/g++.dg/modules/alias-1_d.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts -isystem [srcdir]\" }\n+// { dg-module-cmi kevin }\n+\n+export module kevin;\n+import <alias-1_a.H>;"}, {"sha": "862ae32882f7ae3783a956d97a00c8e1220c850e", "filename": "gcc/testsuite/g++.dg/modules/alias-1_e.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_e.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_e.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_e.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts -isystem [srcdir]\" }\n+\n+import bob;\n+import kevin;"}, {"sha": "4c694d1a903d1ec9e81a87d362753623900a79ce", "filename": "gcc/testsuite/g++.dg/modules/alias-1_f.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_f.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_f.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-1_f.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module -isystem [srcdir]\" }\n+\n+import kevin;\n+import bob;"}, {"sha": "1befe85cf4970a219f55a3f1921f83cc863c8f3c", "filename": "gcc/testsuite/g++.dg/modules/alias-2_a.H", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodule-header -isystem [srcdir]/sys\" }\n+// { dg-module-cmi {} }\n+// { dg-module-headers test sys/alias-2_a.H }\n+#ifndef ALIAS_2_A\n+#define ALIAS_2_A\n+\n+int frob ();\n+\n+#endif"}, {"sha": "00eff590e3b0164ba0eb518cd7bc7c23db3d854c", "filename": "gcc/testsuite/g++.dg/modules/alias-2_b.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falias-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module -isystem [srcdir]/sys\" }\n+\n+// These find different headers\n+import \"alias-2_a.H\";\n+import <alias-2_a.H>;\n+\n+int main ()\n+{\n+  frob ();\n+  frob (1);\n+}\n+\n+// { dg-final { scan-lang-dump-times {CMI is} 2 module } }"}, {"sha": "712403414693278e1f8ebaac91ee36355efed8f9", "filename": "gcc/testsuite/g++.dg/modules/align-type-1_a.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falign-type-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falign-type-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falign-type-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+export using aint = __attribute__ ((aligned(16))) int;\n+\n+"}, {"sha": "8372e6f3e1bcfe58e2ca8425f5aa4d8e1bf8578c", "filename": "gcc/testsuite/g++.dg/modules/align-type-1_b.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falign-type-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falign-type-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Falign-type-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import foo;\n+\n+struct B\n+{\n+  aint m;\n+};\n+\n+static_assert (alignof (B) == 16);"}, {"sha": "fbb3db2ac471e4c919e14ba15f2f3a709ba2db06", "filename": "gcc/testsuite/g++.dg/modules/ambig-1_a.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fambig-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fambig-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fambig-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodules-ts }\n+export module One;\n+// { dg-module-cmi One }\n+\n+export int foo ();\n+export char bax ();\n+export int quux (float);\n+\n+   "}, {"sha": "c1de91923236db28cde648ca7f17cfa35b5c7127", "filename": "gcc/testsuite/g++.dg/modules/ambig-1_b.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fambig-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fambig-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fambig-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options -fmodules-ts }\n+import One;\n+\n+int foo (); // { dg-error \"conflicts with import\" }\n+int bax (); // { dg-error \"ambiguating new declaration\" }\n+int quux (int);"}, {"sha": "e56b85ce72000fdb3f0fdfda5efceb80e464b75f", "filename": "gcc/testsuite/g++.dg/modules/anon-1_a.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module anon;\n+// { dg-module-cmi anon }\n+\n+export struct foo\n+{\n+  enum {bob};\n+  union \n+  {\n+    int i;\n+    float f;\n+  };\n+};"}, {"sha": "66d25053049f8088edfcffe1424b7a19cff307c0", "filename": "gcc/testsuite/g++.dg/modules/anon-1_b.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module namer;\n+// { dg-module-cmi namer }\n+\n+import anon;\n+\n+export inline int &get_int (foo &obj)\n+{\n+  return obj.i;\n+}\n+\n+export inline float &get_float (foo &obj)\n+{\n+  return obj.f;\n+}\n+\n+"}, {"sha": "cbe89e15ed946a070ec06f8b9cf70b670c63d8a4", "filename": "gcc/testsuite/g++.dg/modules/anon-1_c.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import namer;\n+import anon;\n+\n+int main ()\n+{\n+  foo obj;\n+  int *ip = &get_int (obj);\n+  float *fp = &get_float (obj);\n+\n+  return !((void *)ip == (void *)fp);\n+}"}, {"sha": "81c793c7ffc632eb337e68e31f7514fb4ef24590", "filename": "gcc/testsuite/g++.dg/modules/anon-2.h", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+\n+\n+struct __pthread_cond_s\n+{\n+  union {};\n+};"}, {"sha": "6861c194fceeddcab32953789cc66b529319e30b", "filename": "gcc/testsuite/g++.dg/modules/anon-2_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#include \"anon-2.h\""}, {"sha": "24bb61b5f144e3e968133a17b2caacdc89b278e2", "filename": "gcc/testsuite/g++.dg/modules/anon-2_b.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fanon-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy\" }\n+\n+#include \"anon-2.h\"\n+import \"anon-2_a.H\";\n+"}, {"sha": "d226f32cea16f1298f64ef6693b9ff5d5fc05a50", "filename": "gcc/testsuite/g++.dg/modules/atom-decl-0_a.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+\n+export module thing;\n+// { dg-module-cmi \"thing\" }\n+\n+export int baz ();"}, {"sha": "8ca006d64ee82c67b7a0c6ef851f5a8e423c781e", "filename": "gcc/testsuite/g++.dg/modules/atom-decl-0_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import thing;\n+\n+void bink ()\n+{\n+  baz ();\n+}"}, {"sha": "96e74956e906586e9bdc01e8a62fdb1749c5af5a", "filename": "gcc/testsuite/g++.dg/modules/atom-decl-0_c.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-0_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module pop;\n+// { dg-module-cmi \"pop\" }\n+export import thing;\n+\n+void bink ();\n+\n+void bonk ()\n+{\n+  baz ();\n+  bink ();\n+}"}, {"sha": "b463dc8e214b9f94984b392ea0c28ed197f1b098", "filename": "gcc/testsuite/g++.dg/modules/atom-decl-2.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-2.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module thing;\n+int i;\n+import baz; // { dg-error \"must be contiguous\" }\n+\n+// { dg-prune-output \"not writing module\" }"}, {"sha": "6eb6e6bd93f05e7feda7a31e72e974675cb49732", "filename": "gcc/testsuite/g++.dg/modules/atom-decl-3.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-decl-3.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+int i;\n+import bazza;\n+// { dg-error \"failed to read\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"fatal error:\" }\n+// { dg-prune-output \"compilation terminated\" }"}, {"sha": "133382e8886682219a57c4ba46fcd3bb1a8d8fbc", "filename": "gcc/testsuite/g++.dg/modules/atom-pragma-1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-pragma-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-pragma-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-pragma-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+#pragma bob\n+int i;"}, {"sha": "b95b2c8ad752be5d16b9a2d2152a053fcec4ace1", "filename": "gcc/testsuite/g++.dg/modules/atom-pragma-3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-pragma-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-pragma-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-pragma-3.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts -Wno-pedantic\" }\n+\n+export module foo;\n+// { dg-module-cmi !foo }\n+;\n+\n+#pragma pack(2)\n+import baz; // { dg-error \"must be contiguous\" }\n+\n+int i;\n+\n+// { dg-prune-output \"not writing module\" }"}, {"sha": "1161d41b561e6c40264499bdf561acdd343fd5c6", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+\n+#define EXPORT export  // { dg-error \"only occur after a module\" }\n+EXPORT module bob; // { dg-error \"does not name a type\" }\n+// { dg-message \"not recognized as\" \"\" { target *-*-* } .-1 }\n+"}, {"sha": "02fbd84afffa3e7e4b4a8e677134a1bc52ec551c", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-2_a.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+#define malcolm kevin\n+export module malcolm;\n+// { dg-module-cmi kevin }\n+\n+export class X;"}, {"sha": "a97d9758fd2943f3f502595cb8c0d0b49cf95205", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-2_b.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+#if 1\n+export module bob;\n+// { dg-module-cmi bob }\n+#endif\n+\n+import kevin;\n+\n+X *f;\n+"}, {"sha": "d3804c2b0bca9abe40e4afa08181d1a900a129c6", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-2_c.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+#pragma bob\n+\n+import kevin;\n+\n+X *f;"}, {"sha": "0c3b290499ac695d1d3550052c266a41bebe4033", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-2_d.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import kevin;\n+\n+#if 1\n+#if 1\n+import kevin;\n+#endif\n+#elif 1\n+int i;\n+#endif\n+\n+int j; // end here"}, {"sha": "074f8ebadb403f376477906e067a3ff2200b3081", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-2_e.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_e.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_e.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_e.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import kevin;\n+\n+#if 0\n+#if 1\n+import kevin;\n+#endif\n+#elif 1\n+import kevin;\n+#endif\n+\n+int i; // end here"}, {"sha": "28e54b808b2925141638a012f587db130ba5fb3c", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-2_f.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_f.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_f.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-2_f.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts -Wno-pedantic\" }\n+export module stuart;\n+// { dg-module-cmi !stuart } \n+\n+# 6 \"atom-preamble-2_f.C\" 1\n+import kevin; // { dg-error \"not be from header\" }\n+# 8 \"\" 2\n+\n+import kevin; // ok\n+// { dg-prune-output \"not writing module\" }"}, {"sha": "74dba7d23a640f1fbdfbb92619682e3c93976d32", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-3.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-3.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+#define import import\n+import malcolm; // { dg-error \"object-like macro\" }\n+// { dg-error \"failed to read\" \"\" { target *-*-* } 0 }\n+\n+// { dg-prune-output \"compilation terminated\" }\n+// { dg-prune-output \"fatal error:\" }"}, {"sha": "21a8d57da652e67b9f0aa351987f9c200a840d25", "filename": "gcc/testsuite/g++.dg/modules/atom-preamble-4.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fatom-preamble-4.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+#define NAME(X) X;\n+\n+export module NAME(bob)\n+"}, {"sha": "f8ae751df32dd59ccedfac9f98c5b83cce50c4bf", "filename": "gcc/testsuite/g++.dg/modules/auto-1.h", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,19 @@\n+\n+template <typename T> auto frob (T t)\n+{\n+  return t;\n+}\n+\n+struct Bob \n+{\n+  operator auto () \n+  {\n+    return 0;\n+  }\n+};\n+\n+inline auto foo ()\n+{\n+  return frob (1) + int (Bob ());\n+}\n+"}, {"sha": "4d3bc77dbb1de2f6a41f7ada562e773f206b2067", "filename": "gcc/testsuite/g++.dg/modules/auto-1_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#include \"auto-1.h\""}, {"sha": "96350662fed42d48402a58889aa897590f8f3f84", "filename": "gcc/testsuite/g++.dg/modules/auto-1_b.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy -fdump-lang-module-alias\" }\n+\n+#include \"auto-1.h\"\n+import \"auto-1_a.H\";\n+\n+int bar ()\n+{\n+  return foo () + frob (0u);\n+}\n+\n+// { dg-final { scan-lang-dump-not {merge key \\(new\\)} module } }"}, {"sha": "4759ab8bbc1ceea21256071ae1cdf518635f7998", "filename": "gcc/testsuite/g++.dg/modules/auto-2.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+\n+template<typename _Callable>\n+struct _RangeAdaptor\n+{\n+  constexpr _RangeAdaptor(const _Callable &) { }\n+};\n+\n+template<typename _Callable>\n+_RangeAdaptor(_Callable) -> _RangeAdaptor<_Callable>;\n+\n+template<unsigned _Nm>\n+inline constexpr _RangeAdaptor elements = [] (auto&& __r) {};\n+"}, {"sha": "46bd74697a52c23bf834ab99eb2124abb8672a05", "filename": "gcc/testsuite/g++.dg/modules/auto-2_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodule-header -fconcepts\" }\n+// { dg-module-cmi {} }\n+\n+#include \"auto-2.h\""}, {"sha": "5ed882f74167587d0ce1e0edf7c7d6c47d83660b", "filename": "gcc/testsuite/g++.dg/modules/auto-2_b.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fauto-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts -fconcepts -fdump-lang-module-alias -fno-module-lazy\" }\n+\n+#include \"auto-2.h\"\n+import \"auto-2_a.H\";\n+\n+// { dg-final { scan-lang-dump-not {merge key \\(new\\)} module } }"}, {"sha": "7ed75b824b4addbe8bc917abc299da0e4c7b9d7f", "filename": "gcc/testsuite/g++.dg/modules/bad-mapper-1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+//  { dg-additional-options \"-fmodules-ts -fmodule-mapper=|this-will-not-work\" }\n+import unique1.bob;\n+// { dg-error \"-:failed exec.*mapper.* .*this-will-not-work\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"fatal error:\" }\n+// { dg-prune-output \"failed to read\" }\n+// { dg-prune-output \"compilation terminated\" }"}, {"sha": "f35d16bace39eb3c49d94e945cb433099b3db69d", "filename": "gcc/testsuite/g++.dg/modules/bad-mapper-2.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-2.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+//  { dg-additional-options \"-fmodules-ts -fmodule-mapper=not-a-host:3838\" }\n+import unique2.bob;\n+// { dg-error \"failed .* mapper 'not-a-host\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"fatal error:\" }\n+// { dg-prune-output \"failed to read\" }\n+// { dg-prune-output \"compilation terminated\" }"}, {"sha": "9dab332ccb2aabb1c5708510fbac94581a715da9", "filename": "gcc/testsuite/g++.dg/modules/bad-mapper-3.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbad-mapper-3.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+//  { dg-additional-options \"-fmodules-ts -fmodule-mapper=localhost:172477262\" }\n+import unique3.bob;\n+// { dg-error {failed connecting mapper 'localhost:172477262'} \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"fatal error:\" }\n+// { dg-prune-output \"failed to read\" }\n+// { dg-prune-output \"compilation terminated\" }"}, {"sha": "182183ad0899477c70f749ae5067d674f8084bcc", "filename": "gcc/testsuite/g++.dg/modules/ben-1.map", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1.map?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,3 @@\n+$root .\n+module:import partitions/module:import.mod\n+module module.mod"}, {"sha": "7e9b5661026f2ef586e3b67b8b0150960bd24d48", "filename": "gcc/testsuite/g++.dg/modules/ben-1_a.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodules-ts -fmodule-mapper=[srcdir]/ben-1.map\" }\n+// { dg-additional-files ben-1.map }\n+\n+export module module:import;\n+// { dg-module-cmi =partitions/module:import.mod }\n+\n+export int b() {\n+  return 0;\n+}"}, {"sha": "e16fa2fc857ceac0a3cca24b73b3d67648579594", "filename": "gcc/testsuite/g++.dg/modules/ben-1_b.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fben-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options \"-fmodules-ts -fmodule-mapper=[srcdir]/ben-1.map\" }\n+// { dg-additional-files ben-1.map }\n+\n+export module module;\n+// { dg-module-cmi =module.mod }\n+export import :import;\n+\n+export int c ()\n+{\n+  return b ();\n+}"}, {"sha": "15b8cb6c54ab2041ed6698124055fb8532e43b58", "filename": "gcc/testsuite/g++.dg/modules/bfield-1_a.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// { dg-additional-options -fmodules-ts }\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+export struct timex\n+{\n+  int a;\n+  int :32; \n+  int :32; \n+  int :32; \n+  int :32; \n+  int :32; \n+  int :32; \n+};\n+"}, {"sha": "6c8dae6e29e621e7ae9a05b4bc86ff6db11e2400", "filename": "gcc/testsuite/g++.dg/modules/bfield-1_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodules-ts }\n+import foo;\n+\n+timex v = {1};"}, {"sha": "5329e62da3d671f6f03258d52829e20116794fcb", "filename": "gcc/testsuite/g++.dg/modules/bfield-2_a.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+export struct ting\n+{\n+  int a;\n+  int b : 3;\n+  int c : 5;\n+};"}, {"sha": "737173697c79f2ca99336119af3f6fae29a57816", "filename": "gcc/testsuite/g++.dg/modules/bfield-2_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbfield-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodules-ts }\n+import foo;\n+\n+ting v = {1, 2, 3};"}, {"sha": "80f0ec161cce3132fa42d85e3b96f13b7a17cbbd", "filename": "gcc/testsuite/g++.dg/modules/bool-1.h", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+typedef signed char __v16qs __attribute__ ((__vector_size__ (16)));\n+\n+\n+inline auto\n+_mm_cmplt_epi8 (__v16qs __A, __v16qs __B)\n+{\n+  return __A < __B;\n+}"}, {"sha": "3b4232c1d0837c3bdf4cc6869dd6e8c382bfe163", "filename": "gcc/testsuite/g++.dg/modules/bool-1_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options {-fmodule-header -Wno-psabi} }\n+// { dg-module-cmi {} }\n+\n+#include \"bool-1.h\""}, {"sha": "d22e1d93286a759e38a839ecc220f9b266ae8207", "filename": "gcc/testsuite/g++.dg/modules/bool-1_b.H", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_b.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_b.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_b.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options {-fmodule-header -fno-module-lazy -Wno-psabi} }\n+// { dg-module-cmi {} }\n+\n+#include \"bool-1.h\"\n+import \"bool-1_a.H\";"}, {"sha": "01b08775191248cb74837550c539039b17d824e6", "filename": "gcc/testsuite/g++.dg/modules/bool-1_c.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbool-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options {-fmodules-ts -Wno-psabi} }\n+\n+import \"bool-1_b.H\";\n+\n+void frob (signed char __attribute__ ((__vector_size__ (16))) arg)\n+{\n+  _mm_cmplt_epi8 (arg, arg);\n+}"}, {"sha": "b828b7b8bc6b064e072c21ba5464b69ad2addde6", "filename": "gcc/testsuite/g++.dg/modules/bug-1_a.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbug-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbug-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbug-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module One;\n+// { dg-module-cmi \"One\" }\n+\n+export int Frob (int a)\n+{\n+  return -a;\n+}"}, {"sha": "7b5baeb9276669fa68e0040a5752ed321483a861", "filename": "gcc/testsuite/g++.dg/modules/bug-1_b.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbug-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbug-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbug-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import One;\n+\n+int main ()\n+{\n+  if (Frob (2) != -2)\n+    return 1;\n+\n+  return 0;\n+}"}, {"sha": "6d0731a727d379cc1914c6ea029ddbc61f88c247", "filename": "gcc/testsuite/g++.dg/modules/builtin-1_a.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks-alias-uid\" }\n+export module builtin;\n+// { dg-module-cmi builtin }\n+\n+export inline void ary_del (int *ptr)\n+{\n+  delete[] ptr;\n+}\n+\n+export inline void scalar_del (int *ptr)\n+{\n+  delete ptr;\n+}\n+\n+// { dg-final { scan-lang-dump {Wrote GMF:-[0-9]* function_decl:'::operator delete'@builtin} module } }\n+// { dg-final { scan-lang-dump {Wrote GMF:-[0-9]* function_decl:'::operator delete \\[\\]'@builtin} module } }\n+\n+// { dg-final { scan-lang-dump {Writing named:-[0-9]* function_decl:'::operator delete'\\n *Wrote[^\\n]*\\n *Writing:-[0-9]*'s named merge key \\(decl\\) function_decl:'::operator delete'} module } }"}, {"sha": "e9f734856616df12bb9392edfe2765ecf784aad4", "filename": "gcc/testsuite/g++.dg/modules/builtin-1_b.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-alias\" }\n+import builtin;\n+\n+int main ()\n+{\n+  ary_del (nullptr);\n+  scalar_del (nullptr);\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(matched\\) function_decl:'::operator delete \\[\\]'} module } }\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(matched\\) function_decl:'::operator delete'} module } }"}, {"sha": "f9de98fda9b013ccd3449f1d2747433b430c4fd7", "filename": "gcc/testsuite/g++.dg/modules/builtin-2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-2.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+extern \"C\" \n+{\n+  extern int printf (const char *__restrict __format, ...);\n+}\n+"}, {"sha": "93489bddba4910c15fa15d63cc77b8de072312c1", "filename": "gcc/testsuite/g++.dg/modules/builtin-3_b.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-3_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-alias\" }\n+import builtins;\n+\n+int main ()\n+{\n+  length (\"\");\n+  count (1, \"\", \"\", nullptr);\n+}\n+\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(matched\\) function_decl:'::__builtin_strlen'} module } }\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(matched\\) type_decl:'::__builtin_va_list'} module { target { x86_64-*-linux* } } } }\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(new\\) type_decl:'::va_list'} module } }\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(new\\) type_decl:'::__gnuc_va_list'} module } }"}, {"sha": "f7bc6aff6390345adc9da48f6a2ae9df9e99a2c8", "filename": "gcc/testsuite/g++.dg/modules/builtin-4_a.H", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-4_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-4_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-4_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+void* operator new(__SIZE_TYPE__);\n+void* operator new[](__SIZE_TYPE__);\n+\n+void operator delete (void*) noexcept;\n+void operator delete[](void*) noexcept;\n+"}, {"sha": "1d780e6a80fa27ea722f1d5432c732d57278362a", "filename": "gcc/testsuite/g++.dg/modules/builtin-4_b.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-4_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-4_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-4_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy -fdump-lang-module-alias\" }\n+\n+import \"builtin-4_a.H\";\n+\n+int main ()\n+{\n+  operator delete (operator new (10));\n+  operator delete[] (operator new[] (10));\n+}\n+\n+// { dg-final { scan-lang-dump {named merge key \\(matched\\) function_decl:'::operator new'} module } }\n+// { dg-final { scan-lang-dump {named merge key \\(matched\\) function_decl:'::operator delete'} module } }\n+// { dg-final { scan-lang-dump {named merge key \\(matched\\) function_decl:'::operator new \\[\\]'} module } }\n+// { dg-final { scan-lang-dump {named merge key \\(matched\\) function_decl:'::operator delete \\[\\]'} module } }"}, {"sha": "735d32388d2eeba34252dac6be1ef0fccde357b1", "filename": "gcc/testsuite/g++.dg/modules/builtin-5_a.H", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-5_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-5_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-5_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,3 @@\n+// { dg-additional-options \"-fmodule-header\" }\n+// { dg-module-cmi {} }\n+extern \"C\" int printf (char const *, ...);"}, {"sha": "bfaa64f9b559df5695fcae22da6b2e34f10407b4", "filename": "gcc/testsuite/g++.dg/modules/builtin-5_b.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-5_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-5_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-5_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-alias\" }\n+\n+import \"builtin-5_a.H\";\n+\n+void foo ()\n+{\n+  printf (\"bob\\n\");\n+}\n+\n+extern \"C\" int printf (char const *, int);\n+\n+// { dg-regexp {[^\\n]*builtin-5_b.C:10:[0-9]*: error: conflicting declaration of C function 'int printf\\(const char\\*, int\\)'\\nIn module [^\\n]*builtin-5_a.H, imported at [^\\n]*builtin-5_b.C:3:\\n[^\\n]*builtin-5_a.H:3:[0-9]*: note: previous declaration 'int printf\\(const char\\*, ...\\)'} }\n+\n+// { dg-final { scan-lang-dump {Read:-1's named merge key \\(matched\\) function_decl:'::printf'} module } }"}, {"sha": "b3263bc9ba7a064af9475dc6b397d946da9e5b17", "filename": "gcc/testsuite/g++.dg/modules/builtin-6_a.H", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-6_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-6_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-6_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+extern \"C\" {\n+  \n+static double sin (double)\n+{\n+  // extra small angle approximation :)\n+  return 0.0;\n+}\n+\n+}"}, {"sha": "80f8dc64a20883a94a5f5840d4293f5c4812ccf2", "filename": "gcc/testsuite/g++.dg/modules/builtin-6_b.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-6_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-6_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-6_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+\n+import  \"builtin-6_a.H\";\n+\n+int main ()\n+{\n+  return sin (0.0);\n+}"}, {"sha": "a98a7b71092ca55799ed7501ba8d58bdb1efa20c", "filename": "gcc/testsuite/g++.dg/modules/builtin-7_a.H", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-7_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-7_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-7_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module_cmi {} }\n+\n+extern \"C\" \n+{\n+extern double nan(const char *);\n+inline long double nanl(const char * __x) { return nan(__x); }\n+}"}, {"sha": "28514571ce642bfd12e57d37f9b4870dc76aaff8", "filename": "gcc/testsuite/g++.dg/modules/builtin-7_b.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-7_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-7_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fbuiltin-7_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import \"builtin-7_a.H\";\n+\n+void f ()\n+{\n+  nanl (\"\");\n+}"}, {"sha": "44eb4478d1378df0f721144514754949410f4d05", "filename": "gcc/testsuite/g++.dg/modules/by-name-1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fby-name-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fby-name-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fby-name-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// check internals by name unless SCC\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid\" }\n+\n+export module frob;\n+// { dg-module-cmi frob }\n+\n+class X \n+{\n+  int i;\n+};\n+\n+export X *f ();\n+\n+// { dg-final { scan-lang-dump {Wrote purview:-[0-9]* type_decl:'::X'} \"module\" } }\n+// { dg-final { scan-lang-dump {Indirect:-[0-9]* decl's type record_type:'::X'} \"module\" } }"}, {"sha": "b9c4b1692f0a958d2fb742346a9b4b71bb56d91d", "filename": "gcc/testsuite/g++.dg/modules/cexpr-1_a.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Const;\n+// { dg-module-cmi \"Const\" }\n+\n+export constexpr int SQ (int b)\n+{\n+  return b * b;\n+}"}, {"sha": "30566110e020b9f076dc9f83b8059b4affc0e945", "filename": "gcc/testsuite/g++.dg/modules/cexpr-1_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import Const;\n+\n+static_assert (SQ(88) == 88 * 88, \"waaa!\");"}, {"sha": "632a4e3a485cafe68920a26c258d91c119460420", "filename": "gcc/testsuite/g++.dg/modules/cexpr-2_a.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,19 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module sqrt;\n+// { dg-module-cmi \"sqrt\" }\n+\n+export constexpr unsigned sqrt (unsigned X, unsigned x = 1)\n+{\n+  // Newton-Raphson, not binary restoring\n+  // x <= x - f(x)/f'(x)\n+  // f(x) = x^2 - X\n+  // f'(x) = 2x\n+  // x <= x - (x^2 - X) / 2x\n+  // x <= x - x/2 + X/2x\n+  // x <= x/2 + X/2x\n+  // x <= 1/2(x + X/x)\n+  unsigned nx = (x + X/x) / 2;\n+  if (nx != x)\n+    nx = sqrt (X, nx);\n+  return nx;\n+}"}, {"sha": "6a589aeb2352e6f2ae4fa16474766d3c05ef34ed", "filename": "gcc/testsuite/g++.dg/modules/cexpr-2_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcexpr-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import sqrt;\n+\n+static_assert (sqrt(81) == 9, \"waaa!\");"}, {"sha": "fa56c78b703d187d0782c46de66525934e170946", "filename": "gcc/testsuite/g++.dg/modules/circ-1_a.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Bob;\n+// { dg-module-cmi Bob }\n+\n+export int bob ();"}, {"sha": "9174c1553ab0f6682716eefad1c8bf17c32613d3", "filename": "gcc/testsuite/g++.dg/modules/circ-1_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Kevin;\n+// { dg-module-cmi Kevin }\n+\n+import Bob;\n+\n+export int kevin ();"}, {"sha": "cea17d7a2e0a3563c445b2e1f543aa47690aed17", "filename": "gcc/testsuite/g++.dg/modules/circ-1_c.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Bob; // { dg-message \"declared here\" }\n+// No need to dg-module-cmi\n+\n+import Kevin;\n+// { dg-error \"failed to read\" \"\" { target *-*-* } 0 }\n+// { dg-error \"cannot import module\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"fatal error:\" }\n+// { dg-prune-output \"compilation terminated\" }"}, {"sha": "b6f6b7ddd320403355d0a11a1ce094ab42a83531", "filename": "gcc/testsuite/g++.dg/modules/circ-1_d.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcirc-1_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+module;\n+import Kevin;\n+\n+export module Bob; // { dg-error \"module already imported\" }\n+// { dg-message \"imported here\" \"Kevin.nms:\" { target *-*-* } 0 }"}, {"sha": "6463719cae202e192a8cf3247b1969f0f713af8a", "filename": "gcc/testsuite/g++.dg/modules/class-1_a.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module One;\n+// { dg-module-cmi \"One\" }\n+\n+namespace Bob \n+{\n+  struct X;\n+  export struct Y {\n+    unsigned a;\n+    unsigned b;\n+  };\n+}\n+\n+export void copy (Bob::Y *, const Bob::Y *);"}, {"sha": "5eac51da0734a32696509ae4684704b1ec27152f", "filename": "gcc/testsuite/g++.dg/modules/class-1_b.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+module One;\n+\n+struct Bob::X \n+{\n+  int i;\n+};\n+\n+\n+int x = sizeof (Bob::X);\n+\n+void copy (Bob::Y *dst, Bob::Y const *src)\n+{\n+  dst->a = src->a;\n+  dst->b = src->b;\n+}"}, {"sha": "8e23c4f2db620c39be8b2ca3a8fec17a72ae90d1", "filename": "gcc/testsuite/g++.dg/modules/class-1_c.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,35 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import One;\n+\n+int y = sizeof (Bob::Y);\n+\n+unsigned Foo (Bob::Y *ptr)\n+{\n+  return ptr->a + ptr->b;\n+}\n+\n+int main ()\n+{\n+  if (y != 2 * sizeof (int))\n+    return 1;\n+\n+  unsigned pun[4];\n+  pun[0] = 0xdeadbeef;\n+  pun[1] = 0xfeedface;\n+  pun[2] = 0x8badf00d;\n+  pun[3] = 0xcafed00d;\n+\n+  copy ((Bob::Y *)pun, (Bob::Y *)&pun[2]);\n+\n+  if (pun[0] != 0x8badf00d)\n+    return 2;\n+  if (pun[1] != 0xcafed00d)\n+    return 3;\n+  if (pun[2] != 0x8badf00d)\n+    return 4;\n+\n+  if (Foo ((Bob::Y *)&pun[1]) != 0xcafed00d + 0x8badf00d)\n+    return 5;\n+  \n+  return 0;\n+}"}, {"sha": "04f11cd8c8f08cee901b2d13788e30a62d356c5e", "filename": "gcc/testsuite/g++.dg/modules/class-2_a.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+// This sequence is for errors\n+\n+export module One;\n+// { dg-module-cmi \"One\" }\n+\n+namespace Bob \n+{\n+  struct X;\n+  export struct Y {\n+    unsigned a;\n+    unsigned b;\n+  };\n+}\n+\n+export void copy (Bob::Y *, const Bob::Y *);"}, {"sha": "0f8edb87095f43c19d4c044dddbb3dc304d435b5", "filename": "gcc/testsuite/g++.dg/modules/class-2_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import One;\n+\n+int z = sizeof (Bob::X); // { dg-error \"not a member of .Bob.\" }"}, {"sha": "c775f7b589ce8115482117e51528b39813ac17d4", "filename": "gcc/testsuite/g++.dg/modules/class-3_a.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module One;\n+// { dg-module-cmi \"One\" }\n+\n+export struct X\n+{\n+  X (int, int);\n+  X (int a_)\n+    : a(a_), b (a_ << 16)\n+  {\n+  }\n+  int a;\n+  int b;\n+};"}, {"sha": "0e07e888753f1b5a805d8d86d0d1108be8c58619", "filename": "gcc/testsuite/g++.dg/modules/class-3_b.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid\" }\n+export module Two;\n+\n+export import One;\n+\n+export inline void Frob (X &q)\n+{\n+  q.b = q.a;\n+}\n+\n+// { dg-final { scan-lang-dump {Wrote import:-1 type_decl:'::X@One:.'} module } }\n+// { dg-final { scan-lang-dump {Indirect:-2 decl's type record_type:'::X@One:.'} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* type_decl:'::X@One:.'@One} module } }\n+// { dg-final { scan-lang-dump {Indirect:-[0-9]* decl's type record_type:'::X@One:.'} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* type_decl:'::X@One:.'@One} module } }\n+// { dg-final { scan-lang-dump {Indirect:-[0-9]* decl's type record_type:'::X@One:.'} module } }\n+// { dg-final { scan-lang-dump {Wrote member:-[0-9]* field_decl:'::X@One:.::a'} module } }\n+// { dg-final { scan-lang-dump {Wrote member:-[0-9]* field_decl:'::X@One:.::b'} module } }"}, {"sha": "6b82d1e7ffb705033261f76284ac2c1f9c69cb6f", "filename": "gcc/testsuite/g++.dg/modules/class-3_c.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+module One;\n+\n+X::X (int a_, int b_)\n+  : a (a_), b (b_)\n+{\n+}"}, {"sha": "0710941d5ed6021f2ae5ee7d9ba0e5b73f6a2525", "filename": "gcc/testsuite/g++.dg/modules/class-3_d.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-3_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,25 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid\" }\n+import Two;\n+\n+int main ()\n+{\n+  X x (0xdead, 0xbeef);\n+\n+  if (x.a != 0xdead || x.b != 0xbeef)\n+    return 1;\n+\n+  Frob (x);\n+  if (x.b != 0xdead)\n+    return 2;\n+\n+  X y (0xcafe);\n+  if (y.a != 0xcafe || y.b != 0xcafe << 16)\n+    return 3;\n+\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Imported:-1 type_decl:'::X@One:.'@One} module } }\n+// { dg-final { scan-lang-dump {Indirect:-2 decl's type record_type:'::X@One:.'} module } }\n+// { dg-final { scan-lang-dump {Read member:-[0-9]* field_decl:'::X@One:.::a'} module } }\n+// { dg-final { scan-lang-dump {Read member:-[0-9]* field_decl:'::X@One:.::b'} module } }"}, {"sha": "a9810ab3360b8adf3c8634dc5a020e85d9ba5b66", "filename": "gcc/testsuite/g++.dg/modules/class-4_a.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-4_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-4_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-4_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,25 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module One;\n+// { dg-module-cmi \"One\" }\n+\n+export struct base \n+{\n+  int b;\n+\n+  base (int b_)\n+    : b (b_)\n+  {\n+  }\n+  \n+};\n+\n+export struct derived : base\n+{\n+  int d;\n+\n+  derived (int b_, int d_)\n+    : base (b_), d (d_)\n+  {\n+  }\n+};"}, {"sha": "1cd3998405256894787ac11b7a8c6c51ef3bc01e", "filename": "gcc/testsuite/g++.dg/modules/class-4_b.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-4_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-4_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-4_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import One;\n+\n+int main ()\n+{\n+  base b (0xfeed);\n+  if (!(b.b == 0xfeed))\n+    return 1;\n+\n+  derived d (0xcafe, 0xbeef);\n+  if (!(d.b == 0xcafe && d.d == 0xbeef))\n+    return 2;\n+\n+  return 0;\n+}"}, {"sha": "417cb6b115cdf667e515aecb0ec84a0035459d95", "filename": "gcc/testsuite/g++.dg/modules/class-5_a.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module One;\n+// { dg-module-cmi \"One\" }\n+\n+export struct base \n+{\n+  int b;\n+\n+  base (int b_)\n+    : b (b_)\n+  {\n+  }\n+\n+  virtual int getter () const;\n+};"}, {"sha": "89db01c3be7adc1e73d6ee9cbc4b0e6daba076e3", "filename": "gcc/testsuite/g++.dg/modules/class-5_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+module One;\n+\n+int base::getter () const\n+{\n+  return b;\n+}"}, {"sha": "ee3250d7bed21dab67c93d343426d58568e74f2f", "filename": "gcc/testsuite/g++.dg/modules/class-5_c.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-5_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import One;\n+\n+int vcall (base *ptr)\n+{\n+  return ptr->getter ();\n+}\n+\n+int main ()\n+{\n+  base b (0xfeed);\n+  \n+  if (!(vcall (&b) == 0xfeed))\n+    return 1;\n+\n+  return 0;\n+}"}, {"sha": "9c117c944b8a56107734c6e142edee26cbafe7f2", "filename": "gcc/testsuite/g++.dg/modules/class-6_a.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,30 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module One;\n+// { dg-module-cmi \"One\" }\n+\n+export struct base \n+{\n+  int b;\n+\n+  base (int b_)\n+    : b (b_)\n+  {\n+  }\n+\n+  virtual int getter () const;\n+};\n+\n+export struct pad\n+{\n+  int pad;\n+  virtual ~pad ();\n+};\n+\n+export struct derived : pad, virtual base\n+{\n+  derived (int v)\n+    :base (v)\n+  {\n+  }\n+};"}, {"sha": "1a49ced4b1c8e229ff62b2341b9535d350709d16", "filename": "gcc/testsuite/g++.dg/modules/class-6_b.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+module One;\n+\n+pad::~pad ()\n+{\n+}\n+\n+int base::getter () const\n+{\n+  return b;\n+}"}, {"sha": "4d3abf926976422ae3cd7714cf89ed26965d8316", "filename": "gcc/testsuite/g++.dg/modules/class-6_c.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-6_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import One;\n+\n+int vcall (derived *ptr)\n+{\n+  return ptr->getter ();\n+}\n+\n+int main ()\n+{\n+  derived b (0xfeed);\n+  \n+  if (!(vcall (&b) == 0xfeed))\n+    return 1;\n+\n+  return 0;\n+}"}, {"sha": "20fd54bb8d547b138b5d318ec4703200d6fbe242", "filename": "gcc/testsuite/g++.dg/modules/class-7_a.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,19 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module One;\n+// { dg-module-cmi \"One\" }\n+\n+export struct base\n+{\n+  long long b;\n+\n+  base (int b_)\n+    :b (b_)\n+  {\n+  }\n+\n+  base ()\n+    :b(99)\n+  {\n+  }\n+};"}, {"sha": "3ed936f0a49d57839536e90364df6325e8783d88", "filename": "gcc/testsuite/g++.dg/modules/class-7_b.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Two;\n+// { dg-module-cmi \"Two\" }\n+import One;\n+\n+export struct middle : virtual base\n+{\n+  long long m;\n+\n+  middle (int b_, int m_)\n+    : base (b_), m (m_)\n+  {\n+  }\n+};"}, {"sha": "d1f2f56cb93fc402eccd37d70a8298a445be267f", "filename": "gcc/testsuite/g++.dg/modules/class-7_c.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-7_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,39 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import One;\n+import Two;\n+\n+struct derived : middle\n+{\n+  long long d;\n+\n+  derived (int b_, int m_, int d_)\n+    : middle (b_, m_), d (d_)\n+  {\n+  }\n+};\n+\n+int check (derived *d)\n+{\n+  if ((char *)&d->b != (char *)&d->d + sizeof (long long))\n+    return 3;\n+  if ((char *)&d->d != (char *)&d->m + sizeof (long long))\n+    return 4;\n+  return 0;\n+}\n+\n+\n+int main ()\n+{\n+  middle m (1, 2);\n+\n+\n+  if (m.b != 1 || m.m != 2)\n+    return 1;\n+\n+  derived d (1, 2, 3);\n+  \n+  if (d.b != 99 || d.m != 2 || d.d != 3)\n+    return 2;\n+\n+  return check (&d);\n+}"}, {"sha": "53caa5c780dc2c2b535c9c33d4c93a73654c34db", "filename": "gcc/testsuite/g++.dg/modules/class-8_a.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-8_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-8_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-8_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+class A;\n+\n+class B \n+{\n+};"}, {"sha": "0bb01ac6a33de5461120a5b68cf8286442552a11", "filename": "gcc/testsuite/g++.dg/modules/class-8_b.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-8_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-8_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclass-8_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,23 @@\n+// { dg-additional-options {-fmodules-ts -fdump-lang-module} }\n+module foo;\n+\n+// completes class A from interface\n+class A\n+{\n+};\n+\n+void bill ()\n+{\n+  A a;\n+}\n+\n+// redeclaration of class B{} from interface\n+class B;\n+\n+void bob ()\n+{\n+  B b;\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::A'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump {Lazily binding '::B'@'foo' section:} module } }"}, {"sha": "43c4bbd8d3177c38e77fbc617490b918c76164eb", "filename": "gcc/testsuite/g++.dg/modules/clone-1_a.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclone-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclone-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclone-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+template<typename _CharT >\n+struct basic_string\n+{\n+  template<typename = unsigned> basic_string();\n+};\n+\n+inline basic_string<char>\n+to_string ()\n+{\n+  basic_string<char> __str;\n+\n+  return __str;\n+}"}, {"sha": "a013b9bdf28706ce5bea8e15e9f7d0aa7150ba06", "filename": "gcc/testsuite/g++.dg/modules/clone-1_b.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclone-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclone-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fclone-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+module foo;\n+\n+void frob ()\n+{\n+  to_string ();\n+}"}, {"sha": "1b4d83108cd0ba8f759e7fd08e482268c3b8a810", "filename": "gcc/testsuite/g++.dg/modules/concept-1_a.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts -fconcepts\" }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+export template<typename T>\n+requires (!!sizeof (bool (T{})))\n+T f1 (T x)\n+{ return x; }\n+"}, {"sha": "d6542e6dc736ae21ff8739634fa488eaa716d6d2", "filename": "gcc/testsuite/g++.dg/modules/concept-1_b.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options \"-fmodules-ts -fconcepts\" }\n+\n+import foo;\n+\n+struct X {};\n+\n+void foo (int i, X &x)\n+{\n+  f1 (i); // ok\n+  f1 (x); // { dg-error \"no match\" }\n+}\n+\n+// { dg-regexp {[^\\n]*concept-1_a.C:7:[0-9]*: error: invalid cast[^\\n]*\\n} }"}, {"sha": "b1d477def387d7c7d2ed5b70688acd3e838d92e0", "filename": "gcc/testsuite/g++.dg/modules/concept-2_a.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-additional-options \"-fmodules-ts -fconcepts\" }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+export template<typename T>\n+requires (sizeof (T) == 1)\n+  char f1 (T x) { return 0; }\n+\n+export template<typename T>\n+requires (sizeof (T) != 1)\n+  int f1 (T x) { return 0; }\n+\n+void foo (int i, char c)\n+{\n+  static_assert (sizeof (f1 (i)) == sizeof (int));\n+  static_assert (sizeof (f1 (c)) == sizeof (char));\n+}"}, {"sha": "af0ab3ad88ea106af4e2182f9c858eb1d6e7d5ae", "filename": "gcc/testsuite/g++.dg/modules/concept-2_b.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodules-ts -fconcepts\" }\n+\n+import foo;\n+\n+void foo (int i, char c)\n+{\n+  static_assert (sizeof (f1 (i)) == sizeof (int));\n+  static_assert (sizeof (f1 (c)) == sizeof (char));\n+}"}, {"sha": "36fc08614280aab7e20a716af71dca79a15aecd8", "filename": "gcc/testsuite/g++.dg/modules/concept-3_a.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-3_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-3_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-3_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options \"-fmodules-ts -std=c++2a\" }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+namespace foo\n+{\n+export template<typename _Tp>\n+concept Addable = requires(_Tp& __t)\n+  {\n+    __t + __t;\n+  };\n+}"}, {"sha": "46bfe039956a8f26c095ea221bc63cc6a0e6ff71", "filename": "gcc/testsuite/g++.dg/modules/concept-3_b.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-3_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts -std=c++2a\" }\n+\n+import foo;\n+\n+template <foo::Addable T> T Add (T a, T b)\n+{\n+  return a + b;\n+}\n+\n+void frob ()\n+{\n+  Add (1, 2);\n+  Add ((int *)0, (int *)0); // { dg-error \"no match\"  }\n+}"}, {"sha": "66d12017a7c6957d311b3b12c046ba1027c5e411", "filename": "gcc/testsuite/g++.dg/modules/concept-4.H", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-4.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-4.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-4.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-additional-options \"-std=c++2a -fmodule-header\" }\n+// { dg-module-cmi {} }\n+\n+template<typename T>\n+inline constexpr bool disable = false;\n+\n+template<typename U>\n+concept sized = true;\n+\n+template<typename V>\n+class TPL\n+{\n+};\n+\n+template<typename W>\n+requires (!sized<W>)\n+inline constexpr bool disable<TPL<W>>\n+= true;"}, {"sha": "1b049f5f1be25bea74bfdf982ce29a995bb415f6", "filename": "gcc/testsuite/g++.dg/modules/concept-5.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+template<typename T>\n+requires (sizeof (T) == 1)\n+constexpr int f1 (T x) { return 1; }\n+\n+template<typename T>\n+requires (sizeof (T) != 1)\n+constexpr int f1 (T x) { return 0; }"}, {"sha": "f38febea861f50d42ec1acbea5d1e47d553e0f55", "filename": "gcc/testsuite/g++.dg/modules/concept-5_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodule-header -fconcepts\" }\n+// { dg-module-cmi {} }\n+\n+#include \"concept-5.h\""}, {"sha": "6a196d8088d125a2385f49ea3f590b7bf79f43f9", "filename": "gcc/testsuite/g++.dg/modules/concept-5_b.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-5_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts -fconcepts -fdump-lang-module-alias\" }\n+\n+#include \"concept-5.h\"\n+import \"concept-5_a.H\";\n+\n+static_assert (f1 ('a') == 1);\n+static_assert (f1 (0xa) == 0);\n+\n+// { dg-final { scan-lang-dump-times {named merge key \\(matched\\) template_decl:'::template f1'} 2 module } }\n+// { dg-final { scan-lang-dump-not {merge key \\(new\\)} module } }"}, {"sha": "0e98c98727ad7349821b78f74d9e894a0375451a", "filename": "gcc/testsuite/g++.dg/modules/concept-6.h", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,19 @@\n+\n+template<typename _Callable>\n+struct Base\n+{\n+  Base (const _Callable &)\n+    requires true\n+  {}\n+};\n+\n+template<typename _Callable>\n+struct Derived :  Base<_Callable>\n+{\n+  using Base<_Callable>::Base;\n+};\n+\n+template<typename _Callable>\n+Derived (_Callable) -> Derived<_Callable>;\n+\n+inline Derived all = [] (auto&& __r) {};"}, {"sha": "e677531c5f06fcd404a6394cd1f149b61a778616", "filename": "gcc/testsuite/g++.dg/modules/concept-6_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodule-header -fconcepts\" }\n+// { dg-module-cmi {} }\n+\n+#include \"concept-6.h\""}, {"sha": "4c2058d89937edaeb7935bc11c6bef2bc54d5e01", "filename": "gcc/testsuite/g++.dg/modules/concept-6_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconcept-6_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts -fconcepts -fdump-lang-module-alias -fno-module-lazy\" }\n+\n+#include \"concept-6.h\"\n+import \"concept-6_a.H\";\n+\n+// { dg-final { scan-lang-dump-times {named merge key \\(matched\\) function_decl:'::Derived<::._anon_0>::__ct '} 6 module } }\n+// { dg-final { scan-lang-dump-not {merge key \\(new\\)} module } }"}, {"sha": "5a5482efc45c2786ba613252fe19cf0555d4cd67", "filename": "gcc/testsuite/g++.dg/modules/constrained-partial-1_a.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconstrained-partial-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconstrained-partial-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconstrained-partial-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,38 @@\n+// { dg-additional-options \"-fmodules-ts -std=c++20\" }\n+\n+export module M;\n+// { dg-module-cmi M }\n+\n+export template <typename T0>\n+struct traits\n+{\n+  static constexpr int variant = 0;\n+};\n+\n+// #2\n+template <typename T2>\n+requires requires { typename T2::element_type; }\n+struct traits<T2 *>\n+{\n+  using type = typename T2::element_type;\n+  static constexpr int variant = 2;\n+};\n+\n+\n+// #1\n+template <typename T1>\n+struct traits<T1 *>\n+{\n+  using type = T1;\n+  static constexpr int variant = 1;\n+};\n+\n+\n+// #3\n+template <typename T3>\n+requires requires { typename T3::value_type; }\n+struct traits<T3 *>\n+{\n+  using type = typename T3::value_type;\n+  static constexpr int variant = 3;\n+};"}, {"sha": "bbbbab54c0ed5b64b9af2e9438748c70a613a92a", "filename": "gcc/testsuite/g++.dg/modules/constrained-partial-1_b.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconstrained-partial-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconstrained-partial-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconstrained-partial-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,31 @@\n+// { dg-additional-options \"-fmodules-ts -std=c++20\" }\n+\n+import M;\n+\n+struct Variant0\n+{\n+};\n+\n+\n+struct Variant2\n+{\n+  using element_type = double;\n+};\n+\n+struct Variant3\n+{\n+  using value_type = float;\n+};\n+\n+void f()\n+{\n+  using v0 = traits<Variant0>;\n+  using v1 = traits<Variant0 *>;\n+  using v2 = traits<Variant2 *>;\n+  using v3 = traits<Variant3 *>;\n+\n+  static_assert (v0::variant == 0);\n+  static_assert (v1::variant == 1);\n+  static_assert (v2::variant == 2);\n+  static_assert (v3::variant == 3);\n+}"}, {"sha": "d0edec85c28d9a659d93cc295e9118a55fc8fa4e", "filename": "gcc/testsuite/g++.dg/modules/convop-1_a.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconvop-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconvop-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconvop-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module frob;\n+// { dg-module-cmi \"frob\" }\n+\n+export struct A\n+{\n+  operator int () \n+  {\n+    return 0;\n+  }\n+};"}, {"sha": "65350eee2082ee4c8b7b71a059e79426685e4428", "filename": "gcc/testsuite/g++.dg/modules/convop-1_b.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconvop-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconvop-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fconvop-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import frob;\n+\n+int main ()\n+{\n+  A a;\n+\n+  if (static_cast<int> (a))\n+    return 1;\n+  return 0;\n+}"}, {"sha": "2ad9637c8fb039ec333faaaff2809fbe1533a7fe", "filename": "gcc/testsuite/g++.dg/modules/cpp-1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do preprocess }\n+\n+module bob;\n+#if 1\n+export import stuart;\n+#else\n+import kevin;\n+#endif\n+import gru;\n+#define EXPORT\n+EXPORT import mabel;\n+int i;\n+\n+// { dg-final { scan-file cpp-1.i \"cpp-1.C\\\"\\n\\n\\nmodule bob;\\n\\nexport import stuart;\\n\\n\\n\\nimport gru;\\n\\n import mabel;\\n\" } }"}, {"sha": "391843fb654df2c95c5d6c331080d045e73d53f5", "filename": "gcc/testsuite/g++.dg/modules/cpp-2_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodule-header\" }\n+// { dg-module-cmi {} }\n+#define STRING_H\n+#define NOPE"}, {"sha": "34c138d407f234f7efddb5b7ec6b33e9c770f434", "filename": "gcc/testsuite/g++.dg/modules/cpp-2_b.H", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_b.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_b.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_b.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodule-header\" }\n+// { dg-module-cmi {} }\n+\n+#define STDIO_H\n+#define think THIS IS STDIO\n+#define CLOSE ]]"}, {"sha": "c6e02b7800ad658eb77cb3c82f9ff6bce8b3d416", "filename": "gcc/testsuite/g++.dg/modules/cpp-2_c.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-2_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do preprocess }\n+// { dg-additional-options \"-fmodules-ts\" }\n+\n+module bob;\n+#pragma GCC unused\n+import \"./cpp-2_b.H\" [[ CLOSE ]];\n+import \"cpp-2_a.H\" [[ CLOSE;\n+int i;\n+#ifndef NOPE\n+import nope;\n+#endif\n+think\n+\n+// { dg-final { scan-file cpp-2_c.i {cpp-2_c.C\"\\n\\n\\n\\nmodule  bob;\\n#pragma GCC unused\\nimport  \"[^\\n]*\\./cpp-2_b.H\" \\[\\[ CLOSE ]];\\nimport  \"[^\\n]*cpp-2_a.H\" \\[\\[ ]];\\n} } }\n+// { dg-final { scan-file cpp-2_c.i \"int i;\" } }\n+// { dg-final { scan-file-not cpp-2_c.i \"import *nope;\" } }\n+// { dg-final { scan-file cpp-2_c.i \"THIS IS STDIO\\n\" } }"}, {"sha": "3aa0c6ec5f6ffc6d4dc409861f54286488a69678", "filename": "gcc/testsuite/g++.dg/modules/cpp-3.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-3.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do preprocess }\n+\n+#define NAME(X) X;\n+\n+export module NAME(bob)\n+\n+int i;\n+// { dg-final { scan-file cpp-3.i \"\\nexport module bob;\\n\" } }\n+// { dg-final { scan-file cpp-3.i \"\\nint i;\\n\" } }"}, {"sha": "6c194312311ffd24a9b260c637a7c1597ce3d0f5", "filename": "gcc/testsuite/g++.dg/modules/cpp-4.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-4.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do preprocess }\n+\n+#if 1\n+#include \"cpp-4.h\"\n+#endif\n+\n+// { dg-final { scan-file cpp-4.i \"/cpp-4.h\\\\\\\" 1\" } }\n+// { dg-final { scan-file cpp-4.i \"/cpp-4.C\\\\\\\" 2\" } }\n+// { dg-final { scan-file cpp-4.i \"import x;\\n\" } }\n+// { dg-final { scan-file cpp-4.i \"int\" } }"}, {"sha": "aec9547ed463e290084cd0174adabcb5c031c9f0", "filename": "gcc/testsuite/g++.dg/modules/cpp-4.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-4.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+#if 1\n+import x;\n+int i;  // end here in middle of #if (ok)\n+#endif"}, {"sha": "3941ee817c1c049d6eb4220a5819ad99b6253485", "filename": "gcc/testsuite/g++.dg/modules/cpp-5_a.H", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodule-header\" }\n+// { dg-module-cmi {} }\n+\n+#ifndef AA\n+#define AA\n+\n+#define Q 0\n+\n+#endif"}, {"sha": "504e792b9b27770acff1c20eefc65480f1d79cdf", "filename": "gcc/testsuite/g++.dg/modules/cpp-5_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+// missing semicolon\n+import \"cpp-5_a.H\" // { dg-error \"expected\" }\n+\n+int main ()\n+{\n+}"}, {"sha": "e0a78a516ae34ed62066b007bc564b7503555d66", "filename": "gcc/testsuite/g++.dg/modules/cpp-5_c.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-5_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do preprocess }\n+// { dg-additional-options \"-fmodules-ts\" }\n+#define Q 0\n+#undef Q\n+\n+import \"cpp-5_a.H\";\n+\n+Q\n+\n+// { dg-final { scan-file cpp-5_c.i {\\nimport  \"[^\\n]*cpp-5_a.H\";\\n\\n0\\n} } }"}, {"sha": "0bb1f41629fe7f77aef2e0b1e1826f09a01e7615", "filename": "gcc/testsuite/g++.dg/modules/cpp-6_a.H", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,3 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+#define bibity cpp-6_b.H"}, {"sha": "2d5bcccffb01aa02db0bc106afdbf038501f196a", "filename": "gcc/testsuite/g++.dg/modules/cpp-6_b.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_b.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_b.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_b.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#define bobity cpp-6_b"}, {"sha": "f9b1e2d68b796c5858ef3cde5a0523d1391319e5", "filename": "gcc/testsuite/g++.dg/modules/cpp-6_c.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fcpp-6_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do preprocess }\n+// { dg-additional-options \"-fmodules-ts -isystem [srcdir]\" }\n+\n+#define empty\n+#define nop(X) X\n+\n+ONE bibity bobity\n+import <cpp-6_a.H>;\n+TWO bibity bobity\n+import empty nop(<bibity>);\n+THREE bibity bobity\n+import empty <bobity.H>;\n+FOUR bibity bobity\n+\n+// { dg-final { scan-file cpp-6_c.i {ONE bibity bobity\\n} } }\n+// { dg-final { scan-file cpp-6_c.i {TWO cpp-6_b.H bobity\\n} } }\n+// { dg-final { scan-file cpp-6_c.i {THREE cpp-6_b.H cpp-6_b\\n} } }\n+// { dg-final { scan-file cpp-6_c.i {FOUR cpp-6_b.H cpp-6_b\\n} } }"}, {"sha": "b0f1763bb98a97039a3c5ffd80b507ffe60c46e8", "filename": "gcc/testsuite/g++.dg/modules/debug-1_a.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdebug-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdebug-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdebug-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts -g\" }\n+\n+export module frob;\n+// { dg-module-cmi frob }\n+\n+export struct thingy\n+{\n+  virtual void X () \n+  {\n+    thingy w;\n+  }\n+};"}, {"sha": "7fca87b6aebb88db01227add2feb22a42367f740", "filename": "gcc/testsuite/g++.dg/modules/debug-1_b.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdebug-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdebug-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdebug-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options \"-fmodules-ts -g\" }\n+\n+import frob;\n+\n+struct thongy : thingy\n+{\n+  void X ()\n+  {\n+    thongy w;\n+  }\n+};"}, {"sha": "07506c9956fe4c7d2100a860392677903c43aef9", "filename": "gcc/testsuite/g++.dg/modules/decomp-1_a.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdecomp-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdecomp-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdecomp-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts -std=c++2a\" }\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+struct tuple { int a, b, c;};\n+\n+tuple maker ();\n+\n+export inline int bob ()\n+{\n+  auto [a, b, c] = maker ();\n+\n+  return a + b + c;\n+}"}, {"sha": "709c333fd58087b37239e4c30d59b36935307a4f", "filename": "gcc/testsuite/g++.dg/modules/decomp-1_b.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdecomp-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdecomp-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdecomp-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options \"-fmodules-ts -std=c++2a\" }\n+import foo;\n+\n+void x ()\n+{\n+  bob ();\n+}\n+"}, {"sha": "dc0fd782a80aebd8d210e846c960a8bd71e7a8c7", "filename": "gcc/testsuite/g++.dg/modules/deferred-1.h", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+template<bool _Const>\n+struct _Iterator\n+{\n+private:\n+  static void mover (const _Iterator &arg = {}) noexcept (noexcept (arg));\n+    \n+public:\n+  _Iterator() = default;\n+\n+  friend void move (const _Iterator &arg2) noexcept (noexcept (mover (arg2)))\n+  {}\n+};"}, {"sha": "88e6fab6a3aa3e85dbf060ad4aef6cd781225521", "filename": "gcc/testsuite/g++.dg/modules/deferred-1_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#include \"deferred-1.h\""}, {"sha": "5f75aec0a243840e409a51620dad7638b73d86b0", "filename": "gcc/testsuite/g++.dg/modules/deferred-1_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdeferred-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy -fdump-lang-module-alias\" }\n+\n+#include \"deferred-1.h\"\n+import \"deferred-1_a.H\";\n+\n+// { dg-final { scan-lang-dump-not {merge key \\(new\\)} module } }\n+// { dg-final { scan-lang-dump-not {merge key \\(unique\\)} module } }"}, {"sha": "766f4368ee63cced20afd53a226b817759c9e262", "filename": "gcc/testsuite/g++.dg/modules/dep-1_a.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodules-ts -MD\" }\n+\n+export module m:part;\n+// { dg-module-cmi m:part }\n+\n+// All The Backslashes!\n+// { dg-final { scan-file dep-1_a.d {\\nm\\\\:part\\.c\\+\\+m: gcm.cache/m-part\\.gcm} } }\n+// { dg-final { scan-file dep-1_a.d {\\ngcm.cache/m-part\\.gcm:| dep-1_a\\.o} } }\n+// { dg-final { scan-file dep-1_a.d {\\n\\.PHONY: m\\\\:part\\.c\\+\\+m} } }"}, {"sha": "138832f709ed33005930e8916933536deab2977b", "filename": "gcc/testsuite/g++.dg/modules/dep-1_b.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts -MD\" }\n+export module m;\n+// { dg-module-cmi m }\n+\n+export import :part;\n+// { dg-final { scan-file dep-1_b.d {\\ndep-1_b\\.s gcm.cache/m\\.gcm: m\\\\:part\\.c\\+\\+m} } }\n+// { dg-final { scan-file dep-1_b.d {\\nm\\.c\\+\\+m: gcm.cache/m\\.gcm} } }\n+// { dg-final { scan-file dep-1_b.d {\\n\\.PHONY: m\\.c\\+\\+m} } }\n+// { dg-final { scan-file dep-1_b.d {\\ngcm.cache/m\\.gcm:| dep-1_b.o} } }\n+// { dg-final { scan-file dep-1_b.d {\\nCXX_IMPORTS \\+= m\\\\:part\\.c\\+\\+m} } }"}, {"sha": "5e112c62350d352e12dad9d3c1024414031c17e8", "filename": "gcc/testsuite/g++.dg/modules/dep-2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-2.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do preprocess }\n+// { dg-additional-options \"-fmodules-ts -MD\" }\n+\n+module m:part;\n+// { dg-module-cmi !m:part }\n+\n+// All The Backslashes!\n+// { dg-final { scan-file dep-2.d {\\nm\\\\:part\\.c\\+\\+m: gcm.cache/m-part\\.gcm} } }\n+// { dg-final { scan-file dep-2.d {\\ngcm.cache/m\\\\:part\\.gcm:| dep-2\\.o} } }\n+// { dg-final { scan-file dep-2.d {\\n\\.PHONY: m\\\\:part\\.c\\+\\+m} } }\n+\n+// { dg-final { scan-file dep-2.i {\\nmodule  m:part;\\n} } }"}, {"sha": "f0f883e86e394d80dd9f5b21d857a926201faf6e", "filename": "gcc/testsuite/g++.dg/modules/dep-3.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdep-3.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do preprocess }\n+// { dg-additional-options \"-fmodules-ts -MD -Mno-modules\" }\n+\n+module m:part;\n+// { dg-module-cmi !m:part }\n+\n+// All The Backslashes!\n+// { dg-final { scan-file-not dep-3.d {part\\.gcm} } }\n+// { dg-final { scan-file-not dep-3.d {part\\.c\\+\\+m} } }"}, {"sha": "d035b5f3def605dae65d6f326c41cbed6108dfc4", "filename": "gcc/testsuite/g++.dg/modules/dir-only-1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do preprocess }\n+// { dg-additional-options -fdirectives-only }\n+\n+#define major NO NOT ME\n+\n+#ifdef major\n+#  undef major\n+#else\n+#  error major not initially defined\n+#endif\n+\n+#ifdef major\n+#  error major still defined\n+#endif\n+\n+// { dg-final { scan-file dir-only-1.i \"#undef major\\n\" } }"}, {"sha": "3ed0de5d7b17e0cf7e3959371b43fb0c3e050f38", "filename": "gcc/testsuite/g++.dg/modules/dir-only-2_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-2_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#define X 1"}, {"sha": "0691f76ae36f7fde7f74abd1ab152e0cc6fc820e", "filename": "gcc/testsuite/g++.dg/modules/dir-only-2_b.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,28 @@\n+// { dg-do preprocess }\n+// { dg-additional-options \"-fmodules-ts -fdirectives-only -isystem [srcdir]\" }\n+// a comment\n+module; // line\n+frob\n+export\n+import foo; // line\n+import 7;\n+\n+im\\\n+port \\\n+sing;\n+// comment\n+import \"dir-only-2_a.H\";\n+import <dir-only-2_a.H>;\n+X\n+#if !X\n+#error \"no X!\"\n+#endif\n+export module bob;\n+\n+export import q;\n+\n+// { dg-final { scan-file dir-only-2_b.i {// a comment\\nmodule ;\\nfrob} } }\n+// { dg-final { scan-file dir-only-2_b.i {frob\\nexport\\nimport  foo;\\nimport 7;} } }\n+// { dg-final { scan-file dir-only-2_b.i {import  \"[^\\n]*/dir-only-2_a.H\";\\nimport  \"[^\\n]*/dir-only-2_a.H\";\\nX} } }\n+// { dg-final { scan-file dir-only-2_b.i {export  module  bob;\\n\\nexport  import  q;} } }\n+// { dg-final { scan-file dir-only-2_b.i {import  sing;\\n\\n\\n// comment} } }"}, {"sha": "6e3af8da45d182fb4331acb51e317d3e2b527f78", "filename": "gcc/testsuite/g++.dg/modules/dir-only-3.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-3.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+# 0 \"dir-only-3.C\"\n+# 1 \"<built-in>\"\n+# 1 \"<command-line>\"\n+# 31 \"<command-line>\"\n+# 1 \"/usr/include/stdc-predef.h\" 1 3 4\n+\n+# 32 \"<command-line>\" 2\n+# 1 \"dir-only-3.C\"\n+// { dg-additional-options {-fmodules-ts -fpreprocessed -fdirectives-only} }\n+// { dg-module-cmi foo }\n+module;\n+#define foo baz\n+export module foo;\n+\n+class import {};\n+\n+import\n+x;"}, {"sha": "80d6461e81fc4022966fe0e1fe0731f7cdfb66f3", "filename": "gcc/testsuite/g++.dg/modules/dir-only-4.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-only-4.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options {-fmodules-ts -fpreprocessed -fdirectives-only} }\n+// { dg-module-cmi !foo }\n+module;\n+#define foo baz\n+export module foo;\n+\n+class import {};\n+\n+import x; // { dg-error \"post-module-declaration\" }\n+ // { dg-prune-output \"not writing module\" }"}, {"sha": "90794b96882156352bead65e6f515eabf13e59ec", "filename": "gcc/testsuite/g++.dg/modules/dir-recovery.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-recovery.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-recovery.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fdir-recovery.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options {-fmodules-ts -fpreprocessed} }\n+module;\n+\n+; export module Hello; // { dg-error \"global module fragment\" }\n+// { dg-error \"after a module interface\" \"\" { target *-*-* } .-1 }\n+// { dg-error \"not name a type\" \"\" { target *-*-* } .-2 }\n+// { dg-message \"not recognized as a module control-line\" \"\" { target *-*-* } .-3 }\n+\n+void SayHello ();"}, {"sha": "53e2ac88f2082c8501388a9b582a618085caa651", "filename": "gcc/testsuite/g++.dg/modules/enum-1_a.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,30 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid\" }\n+export module enUm;\n+// { dg-module-cmi \"enUm\" }\n+\n+export enum Bill\n+{\n+  Zero,\n+  One,\n+  Three = 3\n+};\n+\n+export enum class Ben\n+{\n+  Zero,\n+  Two = 2,\n+  Three\n+};\n+\n+export inline Ben func1 ()\n+{\n+  return Ben::Three;\n+}\n+\n+export inline Ben func2 ()\n+{\n+  return Ben (4);\n+}\n+\n+// { dg-final { scan-lang-dump-times {Written enum value '::Ben::Three'} 2 module } }"}, {"sha": "4b8c647e1b6a35566b9eab6449dbbe371866779d", "filename": "gcc/testsuite/g++.dg/modules/enum-1_b.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,22 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import enUm;\n+\n+Bill x = Three;\n+Ben y = Ben::Three;\n+\n+int main ()\n+{\n+  if (x != 3)\n+    return 1;\n+\n+  if (int (y) != 3)\n+    return 2;\n+\n+  if (int (func1 ()) != 3)\n+    return 3;\n+\n+  if (int (func2 ()) != 4)\n+    return 4;\n+\n+  return 0;\n+}"}, {"sha": "9e5e42a3b2e5c0413656ab99cf6aa089ed8735a3", "filename": "gcc/testsuite/g++.dg/modules/enum-2_a.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,21 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+export struct X \n+{\n+  enum q\n+  {\n+    frob\n+  };\n+};\n+\n+export template <int I> struct TPL\n+{\n+  enum p\n+  {\n+    u,\n+    v = I\n+  };\n+};"}, {"sha": "4e0aed488061f3130c48080c002c8416ca2cd267", "filename": "gcc/testsuite/g++.dg/modules/enum-2_b.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import foo;\n+\n+int i = X::frob;\n+\n+int k = TPL<2>::v;\n+\n+static_assert (!TPL<1>::u);"}, {"sha": "514bdd012ae487c8633708283ecf8f5ebe3bcafe", "filename": "gcc/testsuite/g++.dg/modules/enum-3_a.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-3_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-3_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-3_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options -fmodules-ts }\n+// from https://godbolt.org/beta/z/V45BSw\n+\n+export module m0;\n+// { dg-module-cmi m0 }\n+namespace m0_ns\n+{\n+template <typename T> struct s0 {\n+  enum t { a };\n+};\n+}"}, {"sha": "073611ca559ee4f5a8cf535aea54737d79ed76fb", "filename": "gcc/testsuite/g++.dg/modules/enum-3_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-3_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodules-ts }\n+module m0;\n+\n+static_assert (!m0_ns::s0<int>::a);"}, {"sha": "96880b469cdce27512c93ea7b95ac7e8772ca37a", "filename": "gcc/testsuite/g++.dg/modules/enum-4_a.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-4_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-4_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-4_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module bob;\n+// { dg-module-cmi bob }\n+\n+export template <typename T, typename U>\n+struct same\n+{\n+  enum { value = 0 };\n+};\n+\n+template<typename T>\n+struct same <T, T>\n+{\n+  enum { value = 1 };\n+};\n+"}, {"sha": "0f88fa1ddd2707f5c08a94098905cb59d20ed7dd", "filename": "gcc/testsuite/g++.dg/modules/enum-4_b.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-4_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-4_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-4_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import bob;\n+\n+static_assert (same<int, float>::value == 0);\n+static_assert (same<int *, int *>::value == 1);"}, {"sha": "1f2e84faad1aaf97196c0032c124a99cbbcdead4", "filename": "gcc/testsuite/g++.dg/modules/enum-5_a.H", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-5_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-5_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-5_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+enum \n+{\n+  Zero,\n+};"}, {"sha": "385c1d35c858eb5db913eec7796a20e7e26d0cfa", "filename": "gcc/testsuite/g++.dg/modules/enum-5_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-5_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-5_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-5_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodules-ts }\n+import \"enum-5_a.H\";\n+\n+int i = Zero;"}, {"sha": "066904686bf2e68532a3327cf707fc536e12a9ce", "filename": "gcc/testsuite/g++.dg/modules/enum-6_a.H", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-6_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-6_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-6_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-module-do run }\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+enum { _S_chunk_size = 7 };\n+\n+template<typename T> T getter ()\n+{\n+  return _S_chunk_size;\n+}"}, {"sha": "04c1ee28b5f62d78531b0cbaddbe7a1e22b92e6c", "filename": "gcc/testsuite/g++.dg/modules/enum-6_b.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-6_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-6_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-6_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import \"enum-6_a.H\";\n+\n+int main ()\n+{\n+  return !(getter<int> () == 7);\n+}"}, {"sha": "8cf31a9f804d9313d522a83593b356a0f492302d", "filename": "gcc/testsuite/g++.dg/modules/enum-7.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-7.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,20 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+// ICE getting template info of a function-scope enum\n+\n+template <typename T> void adl (T) {}\n+\n+template <typename T>\n+void frob (T arg)\n+{\n+  enum class case_conv {none};\n+\n+  case_conv x = case_conv::none;\n+\n+  adl (x);\n+}\n+\n+void foo ()\n+{\n+  frob (1);\n+}"}, {"sha": "90ccb91434137e3d901ad115ee0eb16742da9ab3", "filename": "gcc/testsuite/g++.dg/modules/enum-8_a.H", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options -fmodule-header }\n+\n+enum : char\n+{\n+  Foo = 1,\n+};"}, {"sha": "021ad173fbd3c1e26a895f249050b6a3f771c079", "filename": "gcc/testsuite/g++.dg/modules/enum-8_b.H", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_b.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_b.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_b.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options -fmodule-header }\n+\n+enum : int\n+{\n+  Foo = 2,\n+};"}, {"sha": "d14469b533a99bd736cd587481b2535e9d8e09c9", "filename": "gcc/testsuite/g++.dg/modules/enum-8_c.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options {-fmodules-ts -fno-module-lazy} }\n+\n+export module Char;\n+\n+import \"enum-8_a.H\";"}, {"sha": "665077325de11b17964d3114959df7d1bd445006", "filename": "gcc/testsuite/g++.dg/modules/enum-8_d.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-8_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options {-fmodules-ts -fno-module-lazy -fdump-lang-module-alias} }\n+\n+import \"enum-8_b.H\";\n+\n+import Char;\n+\n+\n+// { dg-final { scan-lang-dump {Read:-1's enum merge key \\(new\\) type_decl:'#null#'} module } }\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(new\\) const_decl:'::._anon_0@[^\\n]*/enum-8_b.H:1::Foo'} module } }\n+// { dg-final { scan-lang-dump {Read:-1's enum merge key \\(new\\) type_decl:'#null#'} module } }\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(new\\) const_decl:'::._anon_1@[^\\n]*/enum-8_a.H:2::Foo'} module } }"}, {"sha": "2d8a7baf451395a61b5b91cbaf17c9df340e6a10", "filename": "gcc/testsuite/g++.dg/modules/enum-bad-1_a.H", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-bad-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-bad-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-bad-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options -fmodule-header }\n+\n+// { dg-module-cmi {} }\n+\n+enum ONE {A};\n+enum {TWO, THREE};\n+enum FOUR {B = 5};\n+enum FIVE {C, D, E};"}, {"sha": "b01cd66a14d081c680fce96979db1e2e0177dbf0", "filename": "gcc/testsuite/g++.dg/modules/enum-bad-1_b.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-bad-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-bad-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fenum-bad-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,26 @@\n+// { dg-additional-options {-fmodules-ts} }\n+\n+enum ONE {Q};\n+enum {TWO, DREI};\n+enum FOUR {B = 3};\n+enum FIVE {C, D};\n+\n+import \"enum-bad-1_a.H\";\n+\n+\n+\n+\n+\n+\n+ONE one;\n+// { dg-regexp {In module [^\\n]*enum-bad-1_a.H, imported at [^\\n]*enum-bad-1_b.C:8:\\n[^\\n]*enum-bad-1_a.H:5:6: error: definition of 'enum ONE' does not match\\n[^\\n]*enum-bad-1_b.C:3:6: note: existing definition 'enum ONE'\\nIn module [^\\n]*enum-bad-1_a.H, imported at [^\\n]*enum-bad-1_b.C:8:\\n[^\\n]*enum-bad-1_a.H:5:11: note: ... this enumerator 'A'\\n[^\\n]*enum-bad-1_b.C:3:11: note: enumerator 'Q' does not match ...\\n[^\\n]*enum-bad-1_b.C:15:1: note: during load of binding '::ONE'\\n} }\n+\n+int i = TWO;\n+// { dg-regexp {In module [^\\n]*enum-bad-1_a.H, imported at [^\\n]*enum-bad-1_b.C:8:\\n[^\\n]*enum-bad-1_a.H:6:6: error: definition of 'enum<unnamed>' does not match\\n[^\\n]*enum-bad-1_b.C:4:6: note: existing definition 'enum<unnamed>'\\nIn module [^\\n]*enum-bad-1_a.H, imported at [^\\n]*enum-bad-1_b.C:8:\\n[^\\n]*enum-bad-1_a.H:6:12: note: ... this enumerator 'THREE'\\n[^\\n]*enum-bad-1_b.C:4:12: note: enumerator 'DREI' does not match ...\\n[^\\n]*enum-bad-1_b.C:18:9: note: during load of binding '::TWO'\\n} }\n+\n+FOUR four;\n+// { dg-regexp {In module [^\\n]*enum-bad-1_a.H, imported at [^\\n]*enum-bad-1_b.C:8:\\n[^\\n]*enum-bad-1_a.H:7:6: error: definition of 'enum FOUR' does not match\\n[^\\n]*enum-bad-1_b.C:5:6: note: existing definition 'enum FOUR'\\nIn module [^\\n]*enum-bad-1_a.H, imported at [^\\n]*enum-bad-1_b.C:8:\\n[^\\n]*enum-bad-1_a.H:7:12: note: ... this enumerator 'B'\\n[^\\n]*enum-bad-1_b.C:5:12: note: enumerator 'B' does not match ...\\n[^\\n]*enum-bad-1_b.C:21:1: note: during load of binding '::FOUR'\\n} }\n+\n+FIVE five;\n+// { dg-regexp {In module [^\\n]*enum-bad-1_a.H, imported at [^\\n]*enum-bad-1_b.C:8:\\n[^\\n]*enum-bad-1_a.H:8:6: error: definition of 'enum FIVE' does not match\\n[^\\n]*enum-bad-1_b.C:6:6: note: existing definition 'enum FIVE'\\nIn module [^\\n]*enum-bad-1_a.H, imported at [^\\n]*enum-bad-1_b.C:8:\\n[^\\n]*enum-bad-1_a.H:8:18: note: additional enumerators beginning with 'E'\\n[^\\n]*enum-bad-1_b.C:24:1: note: during load of binding '::FIVE'\\n} }\n+"}, {"sha": "1f7ddecc6ad6fecd98e08f0f77ccc1459c24e7d4", "filename": "gcc/testsuite/g++.dg/modules/err-1_a.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Foo;\n+// { dg-module-cmi \"Foo\" }\n+\n+export int Frob (int, int, long);\n+export int Frob (int, long, int);"}, {"sha": "6d5609c11d6f67c723842086104c9bf7d71646ba", "filename": "gcc/testsuite/g++.dg/modules/err-1_b.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Bar;\n+// { dg-module-cmi \"Bar\" }\n+\n+export int Frob (long, int, int);"}, {"sha": "3a93cc6d18b925066c0b0f8dcb9cba3a89b14ce6", "filename": "gcc/testsuite/g++.dg/modules/err-1_c.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,22 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import Foo;\n+\n+void One ()\n+{\n+  Frob (0, 0, 0L);\n+  Frob (0, 0L, 0);\n+  Frob (0L, 0, 0); // { dg-error \"ambiguous\" }\n+  // { dg-regexp {candidate: 'int Frob@Foo\\(int, long int, int\\)'} }\n+  // { dg-regexp {candidate: 'int Frob@Foo\\(int, int, long int\\)'} }\n+}\n+\n+import Bar;\n+\n+void Two ()\n+{\n+  Frob (0L, 0, 0);\n+  Frob (0, 0, 0); // { dg-error \"ambiguous\" }\n+  // { dg-regexp {candidate: 'int Frob@Foo\\(int, long int, int\\)'} }\n+  // { dg-regexp {candidate: 'int Frob@Foo\\(int, int, long int\\)'} }\n+  // { dg-regexp {candidate: 'int Frob@Bar\\(long int, int, int\\)'} }\n+}"}, {"sha": "eb6b4ba7c99ecd41d3027c2d5a8c389fc9a301e6", "filename": "gcc/testsuite/g++.dg/modules/err-1_d.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ferr-1_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import Foo;\n+import Bar;\n+\n+\n+void Three ()\n+{\n+  Frob (0L, 0, 0);\n+\n+  Frob (0, 0, 0); // { dg-error \"ambiguous\" }\n+  // { dg-regexp {candidate: 'int Frob@Foo\\(int, long int, int\\)'} }\n+  // { dg-regexp {candidate: 'int Frob@Foo\\(int, int, long int\\)'} }\n+  // { dg-regexp {candidate: 'int Frob@Bar\\(long int, int, int\\)'} }\n+}"}, {"sha": "6135c8feb7a4b0b3f9e06ecbd83d5124055cabc8", "filename": "gcc/testsuite/g++.dg/modules/except-1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,18 @@\n+// { dg-additional-options -fmodules-ts }\n+export module bill;\n+// { dg-module-cmi bill }\n+\n+// Make sure no deferred parse exception spec detritus remains\n+\n+template<typename T>\n+class bob \n+{\n+  void frob () noexcept(T::frob ());\n+  template<typename U> void frobber (int) noexcept (T::frob ());\n+};\n+\n+\n+class bill \n+{\n+  template<typename U> void frobbest (int) noexcept (U::frob ());\n+};"}, {"sha": "38355ec8b470b4d823ab7cb6c3244e437bd76a62", "filename": "gcc/testsuite/g++.dg/modules/except-2.h", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,42 @@\n+\n+// Causes the CMI to have instantiated a deferred noexept spec that\n+// the textually included file has not.\n+\n+typedef long unsigned int size_t;\n+\n+\n+template<typename _Tp, _Tp __v>\n+struct integral_constant\n+{\n+  static constexpr _Tp value = __v;\n+  typedef integral_constant<_Tp, __v> type;\n+};\n+template<typename _Tp, _Tp __v>\n+constexpr _Tp integral_constant<_Tp, __v>::value;\n+\n+template<typename _Head>\n+struct _Tuple_impl : _Head\n+{\n+  _Tuple_impl(_Tuple_impl&& __in)\n+    noexcept (integral_constant<bool,\n+\t      noexcept(_Head(static_cast<_Head &&>(*(_Head *) (0))))>::type::value);\n+};\n+\n+template <typename _Dp>\n+struct __uniq_ptr_impl\n+{\n+  __uniq_ptr_impl (__uniq_ptr_impl&& __u) noexcept\n+    : _M_t(static_cast <_Tuple_impl<_Dp> &&>(__u._M_t))\n+  {}\n+\n+  _Tuple_impl<_Dp> _M_t;\n+};\n+\n+struct _Impl_deleter {};\n+\n+typedef __uniq_ptr_impl<_Impl_deleter> up;\n+\n+inline void frob (up && p)\n+{\n+  up _M_cmpts (static_cast <up &&>  (p));\n+}"}, {"sha": "966169ceae0ee9b629fe07978b88670096777e14", "filename": "gcc/testsuite/g++.dg/modules/except-2_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#include \"except-2.h\""}, {"sha": "78ed8f8be9d52374a6835feb9ca45b4431903e00", "filename": "gcc/testsuite/g++.dg/modules/except-2_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy\" }\n+\n+#include \"except-2.h\"\n+import \"except-2_a.H\";"}, {"sha": "8bf0f84d59094ed9f971515ff10cecf2742dfcfc", "filename": "gcc/testsuite/g++.dg/modules/except-3.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,24 @@\n+\n+template<typename _Tp>\n+struct is_nothrow_move_constructible\n+{\n+  static constexpr bool value = false;\n+};\n+\n+template<typename _Head>\n+struct _Tuple_impl\n+{\n+  _Tuple_impl () noexcept(is_nothrow_move_constructible<_Head>::value)\n+ { }\n+};\n+\n+template<typename T>\n+void TPL (_Tuple_impl<T> &) noexcept\n+{\n+  _Tuple_impl<T> m;\n+}\n+\n+inline void foo (_Tuple_impl<int> &p)\n+{\n+  TPL<int> (p);\n+}"}, {"sha": "2f9f00e62226cae0f045e23aaa579aea1f09b0e5", "filename": "gcc/testsuite/g++.dg/modules/except-3_a.H", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+// We end up with instantiated noexcept specs in the CMI data matching\n+// textually loaded fns with uninstantiated ones.  Have to propagate,\n+// not reinstantiate.\n+#include \"except-3.h\""}, {"sha": "0cb84725b5a021a27355ec243bc91fc11ad521fb", "filename": "gcc/testsuite/g++.dg/modules/except-3_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexcept-3_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy -fdump-lang-module-alias\" }\n+\n+#include \"except-3.h\"\n+import \"except-3_a.H\";\n+\n+// { dg-final { scan-lang-dump-times {merge key \\(new\\) function_decl:'::_Tuple_impl<int>::__[cd]t '} 3 module } }\n+// { dg-final { scan-lang-dump-times {Propagating instantiated noexcept to '::_Tuple_impl<int>::__ct <int>'} 1 module } }"}, {"sha": "2079f90c5b41ce19deb6f1b6032ffbdb28e54128", "filename": "gcc/testsuite/g++.dg/modules/exp-xlate-1_a.H", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexp-xlate-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexp-xlate-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexp-xlate-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#define PROTECT 1\n+int foo ();"}, {"sha": "3295a6af05055528aac1172b691188be48fddb9f", "filename": "gcc/testsuite/g++.dg/modules/exp-xlate-1_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexp-xlate-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexp-xlate-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexp-xlate-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options -fmodules-ts }\n+export module evil;\n+// { dg-module-cmi !evil }\n+\n+export // { dg-error \"not part of following\" }\n+#include \"exp-xlate-1_a.H\" // { dg-error \"must be contiguous\" }\n+// { dg-prune-output {not writing module} }"}, {"sha": "8ca696ebee0b95e3fd8b07a253428a505a71d9ff", "filename": "gcc/testsuite/g++.dg/modules/export-1.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexport-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexport-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fexport-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,22 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module frob;\n+// { dg-module-cmi !frob }\n+\n+int x ();\n+export int x (); // { dg-error \"conflicting exporting declaration\" }\n+\n+int y;\n+export extern int y; // { dg-error \"conflicting exporting declaration\" }\n+\n+typedef int z;\n+export typedef int z; // { dg-error \"conflicting exporting declaration\" }\n+\n+template <typename T> int f (T);\n+export template <typename T> int f (T); // { dg-error \"conflicting exporting declaration\" }\n+\n+// doesn't go via duplicate_decls so we miss this for now\n+class A;\n+export class A; // { dg-error \"conflicting exporting declaration\" \"\" { xfail *-*-* } }\n+\n+// { dg-warning  \"due to errors\" \"\" { target *-*-* } 0 }"}, {"sha": "93afc4eecfed72364d6ce07dcc0e8d1de94269b3", "filename": "gcc/testsuite/g++.dg/modules/extern-tpl-1_a.H", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,23 @@\n+// { dg-module-do link }\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+template <unsigned I> struct TPL\n+{\n+  int Source () \n+  {\n+    return I;\n+  }\n+};\n+\n+extern template class TPL<1>;\n+\n+struct Foo \n+{\n+  TPL<1> m;\n+\n+  Foo () {m.Source ();};\n+  \n+};\n+\n+static Foo __ioinit;"}, {"sha": "f3c0dc483c36030c7c59ed355db35bae90447e30", "filename": "gcc/testsuite/g++.dg/modules/extern-tpl-1_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options {-fmodules-ts -fmodule-mapper=|@g++-mapper-server} }\n+\n+// Have to textually include, because we currently get confused about\n+// the explicit instantiations and think they conflict\n+#include \"extern-tpl-1_a.H\"\n+\n+template class TPL<1>;"}, {"sha": "d1b6cb6562f24696f5f71967b5c02b7c70a08763", "filename": "gcc/testsuite/g++.dg/modules/extern-tpl-1_c.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import \"extern-tpl-1_a.H\";\n+\n+int main ()\n+{\n+}"}, {"sha": "a90d50ec6f8e75d3ad3dafcd04ba6135145e682a", "filename": "gcc/testsuite/g++.dg/modules/extern-tpl-2_a.H", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-module-do link }\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+template <unsigned I> struct TPL\n+{\n+  int Source () \n+  {\n+    return I;\n+  }\n+};\n+\n+extern template class TPL<1>;"}, {"sha": "5f9875c814a0e93cadb58062b36573a54f239274", "filename": "gcc/testsuite/g++.dg/modules/extern-tpl-2_b.H", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_b.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_b.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_b.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+import \"extern-tpl-2_a.H\";\n+\n+struct Foo \n+{\n+  TPL<1> m;\n+\n+  Foo () {m.Source ();};\n+  \n+};\n+\n+static Foo __ioinit;"}, {"sha": "b73ec6e8cfc05a8fe7d4024cbd96f5144a83b3a2", "filename": "gcc/testsuite/g++.dg/modules/extern-tpl-2_c.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import \"extern-tpl-2_a.H\";\n+\n+template class TPL<1>;"}, {"sha": "25a977fb0caaf4659ea50a8fdf0a00292fc56a95", "filename": "gcc/testsuite/g++.dg/modules/extern-tpl-2_d.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fextern-tpl-2_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import \"extern-tpl-2_b.H\";\n+\n+int main ()\n+{\n+}"}, {"sha": "9f7332030674693fb6e464765f5b1fa826734b43", "filename": "gcc/testsuite/g++.dg/modules/flag-1_a.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fflag-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fflag-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fflag-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts -std=c++17\" }\n+export module opt;\n+\n+// { dg-module-cmi opt }"}, {"sha": "32bfd82f1a19fb20986fa65db087b13a8ef04489", "filename": "gcc/testsuite/g++.dg/modules/flag-1_b.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fflag-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fflag-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fflag-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodules-ts -std=c++2a\" }\n+\n+// { dg-error \"language dialect differs\" \"\" { target *-*-* } 0 }\n+\n+import opt;\n+\n+// { dg-error \"failed to read\" \"\" { target *-*-* } 0 }\n+// { dg-prune-output \"compilation terminated\" }\n+// { dg-prune-output \"fatal error\" }"}, {"sha": "13e717bb3941a3e125a05e3997accce5eeae9e91", "filename": "gcc/testsuite/g++.dg/modules/fn-inline-1_a.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,21 @@\n+// { dg-require-weak \"\" } \n+// { dg-additional-options \"-fmodules-ts\" }\n+export module bob;\n+// { dg-module-cmi \"bob\" }\n+\n+export inline int frob (int a)\n+{\n+  return -a;\n+}\n+\n+inline int frob (int s, int a)\n+{\n+  while (s--)\n+    a <<= 1;\n+  return a;\n+}\n+\n+export int Frob (int s, int a);\n+\n+// { dg-final { scan-assembler-not \"_Z4frobi:\" } }\n+// { dg-final { scan-assembler-not \"_ZW3bobE4frobii:\" } }"}, {"sha": "72de1a9a51443caaa828ccd65dbb0b9def014c7c", "filename": "gcc/testsuite/g++.dg/modules/fn-inline-1_b.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+module bob;\n+\n+int Frob (int n, int a)\n+{\n+  return frob (n, a);\n+}\n+\n+// { dg-final { scan-assembler \"_ZW3bobE4frobii:\" } }\n+// { dg-final { scan-assembler \".weak(_definition)?\\[\\t ]*_?_ZW3bobE4frobii\" } }\n+// { dg-final { scan-assembler \"_Z4Frobii:\" } }"}, {"sha": "55a7aaa26b46c225c90b656255dd0ffdc5fee663", "filename": "gcc/testsuite/g++.dg/modules/fn-inline-1_c.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffn-inline-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import bob;\n+\n+int main ()\n+{\n+  if (frob (2) != -2)\n+    return 1;\n+  if (Frob (0, 2) != 2)\n+    return 1;\n+  if (Frob (2, 2) != 8)\n+    return 1;\n+  return 0;\n+}\n+\n+// { dg-final { scan-assembler \"_Z4frobi:\" } }\n+// { dg-final { scan-assembler \".weak(_definition)?\\[\\t ]*_?_Z4frobi\" } }"}, {"sha": "f05dd3da1634c4581614a19284abbbf6c5f49726", "filename": "gcc/testsuite/g++.dg/modules/freeze-1_a.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module bob;\n+// { dg-module-cmi \"bob\" }\n+\n+export void bob ();"}, {"sha": "36d1323c2f3f024c9c882ad1ad2c3da188d82d65", "filename": "gcc/testsuite/g++.dg/modules/freeze-1_b.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module stuart;\n+// { dg-module-cmi \"stuart\" }\n+\n+export void stuart ();"}, {"sha": "3941d30bb33f61b361fc358ac81c69b1b5c41e10", "filename": "gcc/testsuite/g++.dg/modules/freeze-1_c.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module kevin;\n+// { dg-module-cmi \"kevin\" }\n+\n+export void kevin ();"}, {"sha": "faeae14856780f9fa4dddad1afcb8e122c142d48", "filename": "gcc/testsuite/g++.dg/modules/freeze-1_d.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffreeze-1_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,21 @@\n+// { dg-additional-options \"-fmodules-ts --param lazy-modules=1 -fdump-lang-module\" }\n+\n+import bob;\n+import stuart;\n+import kevin;\n+\n+int main ()\n+{\n+  stuart ();\n+  bob ();\n+  kevin ();\n+\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Freezing 'bob.[^']*'} module } }\n+// { dg-final { scan-lang-dump {Freezing 'stuart.[^']*'} module } }\n+// { dg-final { scan-lang-dump {Freezing 'kevin.[^']*'} module } }\n+// { dg-final { scan-lang-dump {Defrosting 'bob.[^']*'} module } }\n+// { dg-final { scan-lang-dump {Defrosting 'stuart.[^']*'} module } }\n+// { dg-final { scan-lang-dump {Defrosting 'kevin.[^']*'} module } }"}, {"sha": "2cfab400be7766c129f51f531eca97292ae599b1", "filename": "gcc/testsuite/g++.dg/modules/friend-1_a.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,37 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks\" }\n+\n+export module bob;\n+// { dg-module-cmi bob }\n+\n+export struct peeker\n+{\n+  static int peek (void *);\n+};\n+\n+\n+export class hidey \n+{\n+protected:\n+  int key;\n+\n+public:\n+  hidey (int key) :key (key)\n+  {\n+  }\n+  \n+  friend class peeker;\n+};\n+\n+export class secret : public hidey\n+{\n+public:\n+  secret (int key) : hidey (key)\n+  {\n+  }\n+};\n+\n+// hidey, peeker & secret are all in different clusters\n+\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=decl definition '::peeker'\\n(  \\[.\\]=[^\\n]*'\\n)*  \\[.\\]=binding '::peeker'} module } }\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=decl definition '::hidey'\\n(  \\[.\\]=[^\\n]*'\\n)*  \\[.\\]=binding '::hidey'} module } }\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=decl definition '::secret'\\n(  \\[.\\]=[^\\n]*'\\n)*  \\[.\\]=binding '::secret'} module } }"}, {"sha": "380bbc54b91c35cd3428dbaddf3adaa397b609ca", "filename": "gcc/testsuite/g++.dg/modules/friend-1_b.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module\" }\n+\n+module bob;\n+\n+int peeker::peek (void *data)\n+{\n+  return reinterpret_cast <secret *> (data)->key;\n+}\n+\n+// { dg-final { scan-lang-dump {Class '::hidey@bob:.' befriending record_type:'::peeker@bob:.'} module } }"}, {"sha": "2fb2988aa7f0428a9f54cbb141d7923e94303fa4", "filename": "gcc/testsuite/g++.dg/modules/friend-1_c.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import bob;\n+\n+int main ()\n+{\n+  secret s (5);\n+\n+  if (peeker::peek (&s) != 5)\n+    return 1;\n+\n+  return 0;\n+}"}, {"sha": "ed329d42bb32868a678780332d2aae3762eaa3f2", "filename": "gcc/testsuite/g++.dg/modules/friend-2_a.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module bink;\n+// { dg-module-cmi bink }\n+\n+class pusher \n+{\n+  friend void frob (pusher *){}\n+public:\n+  pusher (){}\n+};\n+\n+inline void grabber (pusher *p)\n+{\n+  frob (p);\n+}"}, {"sha": "27034c709d5278ecff7a3614d4df64bd78158e12", "filename": "gcc/testsuite/g++.dg/modules/friend-2_b.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+module bink;\n+\n+struct other {};\n+\n+void f (pusher *p, other *q)\n+{\n+  grabber (p);\n+\n+  frob (p); // ok, found by ADL\n+  \n+  frob (q); // { dg-error \"not declared\" }\n+}"}, {"sha": "48320eba46a4ad9eac2188cf41b11ca2a7a03b0f", "filename": "gcc/testsuite/g++.dg/modules/friend-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-3.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,34 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module foo;\n+// { dg-module-cmi !foo }\n+\n+namespace bob {\n+\n+export void corge ();\n+void grault ();\n+\n+export class Q\n+{\n+  friend void foo ();\n+  friend void bar ();\n+  friend void corge ();\n+  friend void grault ();\n+};\n+\n+export void foo ();\n+void bar (); // exported\n+\n+class R\n+{\n+  friend void quux ();\n+  friend void toto ();\n+  friend void corge ();\n+  friend void grault ();\n+};\n+\n+export void quux (); // { dg-error \"conflicting export\" }\n+void toto (); // not exported\n+\n+}\n+// { dg-prune-output \"not writing module\" }"}, {"sha": "d9559c6577e6c767222acee40abd6371b2ee533c", "filename": "gcc/testsuite/g++.dg/modules/friend-4_a.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-4_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-4_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-4_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,33 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+namespace bob {\n+\n+export void corge ();\n+void grault ();\n+\n+export class Q\n+{\n+  friend void foo ();\n+  friend void bar ();\n+  friend void corge ();\n+  friend void grault ();\n+  friend void xyzzy (Q);\n+};\n+\n+export void foo ();\n+void bar (); // exported\n+\n+class R\n+{\n+  friend void toto ();\n+  friend void corge ();\n+  friend void grault ();\n+  friend void xyzzy (R);\n+};\n+\n+void toto (); // not exported\n+export R getR ();\n+}"}, {"sha": "759dbb5c73b46e2e6291009dfbe4562f5d59c375", "filename": "gcc/testsuite/g++.dg/modules/friend-4_b.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-4_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-4_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-4_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,19 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+import foo;\n+\n+using namespace bob;\n+\n+void doit ()\n+{\n+  corge ();\n+  foo ();\n+  bar ();\n+\n+  grault (); // { dg-error \"not declared\" }\n+  toto (); // { dg-error \"not declared\" }\n+  xyzzy (); // { dg-error \"not declared\" }\n+\n+  xyzzy (getR);  // ADL\n+  xyzzy (Q{});  // ADL\n+}"}, {"sha": "4d005a876ecd2b956365607ef2c12212a8124f1d", "filename": "gcc/testsuite/g++.dg/modules/friend-5_a.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-5_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-5_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-5_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options -fmodules-ts }\n+// From Andrew Sutton\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+export class A {\n+  friend class B;\n+};"}, {"sha": "f043d7a340d66a86a38336d6f55c50425b02a91e", "filename": "gcc/testsuite/g++.dg/modules/friend-5_b.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-5_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-5_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Ffriend-5_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options -fmodules-ts }\n+// From Andrew Sutton\n+\n+export module bar;\n+import foo;\n+\n+class B { // { dg-error \"in a different module\" }\n+  B() { object.value = 42; }\n+  A object;\n+};\n+// { dg-prune-output \"not writing module\" }"}, {"sha": "5ee20c9e0632cb8943a5ba6bf71e4e536b957d2f", "filename": "gcc/testsuite/g++.dg/modules/gc-1_a.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts --param ggc-min-expand=0 --param ggc-min-heapsize=0\" }\n+\n+export module bob;\n+// { dg-module-cmi bob }\n+\n+export int bob ();\n+\n+void frink () \n+{\n+}"}, {"sha": "d6ff09caaae0b21d62caf4b7fc8c1cf0c6aa6265", "filename": "gcc/testsuite/g++.dg/modules/gc-1_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module stuart;\n+\n+export int stuart ();"}, {"sha": "289a9995e652503ebce26f154f098be4d7162ab9", "filename": "gcc/testsuite/g++.dg/modules/gc-1_c.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module kevin;\n+\n+export int kevin ();"}, {"sha": "a27e5d46603b08141beec013efa44e57c838663c", "filename": "gcc/testsuite/g++.dg/modules/gc-1_d.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-1_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,28 @@\n+// { dg-additional-options \"-fmodules-ts --param ggc-min-expand=0 --param ggc-min-heapsize=0\" }\n+\n+import bob;\n+import stuart;\n+import kevin;\n+\n+void frob () \n+{\n+}\n+\n+void stuart (int);\n+\n+void quux ()\n+{\n+  bob ();\n+}\n+\n+void toto ()\n+{\n+  stuart (1);\n+}\n+\n+void fido ()\n+{\n+  stuart ();\n+  kevin ();\n+}\n+"}, {"sha": "58963bdb32d5286bcdf842ba69a5abca3637c4b9", "filename": "gcc/testsuite/g++.dg/modules/gc-2.map", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-2.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-2.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-2.map?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,2 @@\n+$root .\n+frob map-1_a.nms"}, {"sha": "a006fb394cb1fa840d73c6b103822dcd55f4a29a", "filename": "gcc/testsuite/g++.dg/modules/gc-2_a.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgc-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodules-ts --param ggc-min-expand=0 --param ggc-min-heapsize=0 -fno-module-lazy -fmodule-mapper=[srcdir]/gc-2.map\" }\n+// { dg-additional-files map-1.map }\n+\n+// Make sure the module hash table survives GC\n+\n+// { dg-module-cmi \"=map-1_a.nms\" }\n+export module frob;\n+\n+int thing;"}, {"sha": "68e18e3534221ee0d30965ed7ca54e5f7a1eecb4", "filename": "gcc/testsuite/g++.dg/modules/global-1_a.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fglobal-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fglobal-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fglobal-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodules-ts -Wno-pedantic\" }\n+module;\n+# 4 \"gmf\" 1\n+int bar ();\n+# 6 \"\" 2\n+export module thing;\n+// { dg-module-cmi \"thing\" }\n+\n+export int baz ();"}, {"sha": "9a67fb17f20aefdd4efe0279cf16644f5c89ea37", "filename": "gcc/testsuite/g++.dg/modules/global-1_b.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fglobal-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fglobal-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fglobal-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import thing;\n+\n+void bink ()\n+{\n+  baz ();\n+  bar (); // { dg-error \"not declared\" \"\"  }\n+}"}, {"sha": "a340e3fd716fe05be59bf2e7037decdbbc77febe", "filename": "gcc/testsuite/g++.dg/modules/gmf-1_a.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,19 @@\n+// { dg-additional-options \"-fmodules-ts -Wno-pedantic\" }\n+\n+module;\n+       \n+# 6 \"std\" 1\n+template<typename T>\n+class basic_string_view\n+{\n+public:\n+  basic_string_view(const char* __str) noexcept;\n+};\n+\n+# 14 \"\" 2\n+export module hello;\n+// { dg-module-cmi hello }\n+export void greeter (basic_string_view<char> const &name)\n+{\n+\n+}"}, {"sha": "7162d2d1f11401527f5464c3f55327100617f3bc", "filename": "gcc/testsuite/g++.dg/modules/gmf-1_b.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module\" }\n+\n+import hello;\n+int main (void)\n+{\n+  greeter (\"world\");\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Reading definition of '::template basic_string_view@hello:1'} module } }\n+// { dg-final { scan-lang-dump {Read declaration of '::basic_string_view@hello:1<char>'} module } }\n+// { dg-final { scan-lang-dump {Read declaration of '::greeter@hello:1'} module } }"}, {"sha": "4318b1665579f6164f656bf7166c34d6106b4dee", "filename": "gcc/testsuite/g++.dg/modules/gmf-2_a.H", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-module-do run }\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#define MACRO(X) X\n+\n+inline int frob (int x)\n+{\n+  return x + 2;\n+}"}, {"sha": "15fafd6f78bbcc57219262b55ae4a8d49158410d", "filename": "gcc/testsuite/g++.dg/modules/gmf-2_b.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options -fmodules-ts }\n+module;\n+\n+import \"gmf-2_a.H\";\n+\n+export module Foo;\n+// { dg-module-cmi Foo }\n+\n+export inline int MACRO (fn) (int i)\n+{\n+  return frob (i);\n+}\n+\n+export int (MACRO) (int i);"}, {"sha": "4b4acc650eac208e3bc0e23a6b5de7c45ce037eb", "filename": "gcc/testsuite/g++.dg/modules/gmf-2_c.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options -fmodules-ts }\n+module Foo;\n+\n+// We see no frob from primary's GMF\n+int frob (int x)\n+{\n+  return fn (-x);\n+}\n+\n+// We see no macro from primary's GMF\n+int MACRO (int i)\n+{\n+  return frob (i);\n+}"}, {"sha": "357c8e81404e0ef3b25b26c4112aa5242cc5a058", "filename": "gcc/testsuite/g++.dg/modules/gmf-2_d.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgmf-2_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodules-ts }\n+import Foo;\n+\n+// We see no MACRO\n+\n+int main ()\n+{\n+  return !(MACRO (5) == -3);\n+}"}, {"sha": "2855b33e25044e93253827405d5ea65c3f4ef9c7", "filename": "gcc/testsuite/g++.dg/modules/gvar_a.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgvar_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgvar_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgvar_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// { dg-additional-options \"-fmodules-ts -Wno-pedantic\" }\n+module;\n+# 3 __FILE__ 1\n+\n+int v1;\n+\n+# 9 \"\" 2\n+export module b;\n+// { dg-module-cmi b }\n+\n+export inline auto get ()\n+{\n+  return v1;\n+}\n+"}, {"sha": "e53e3f2d5c491f60c9b4fc2b9e75fecce81e715f", "filename": "gcc/testsuite/g++.dg/modules/gvar_b.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgvar_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgvar_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fgvar_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import b;\n+\n+int main ()\n+{\n+  get ();\n+}"}, {"sha": "4ce045b715365262ae721b21c24fb87854c5bd7b", "filename": "gcc/testsuite/g++.dg/modules/hdr-1_a.H", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options {-fmodule-header -fdump-lang-module-blocks} }\n+\n+// { dg-module-cmi {} }\n+\n+class frob;\n+\n+template<int I> class FROB;\n+\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=decl declaration '::frob'} module } }\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=decl declaration '::template FROB'} module } }"}, {"sha": "6817f938e1cce400a0d8dcc145807df8c64940ea", "filename": "gcc/testsuite/g++.dg/modules/hdr-1_b.H", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_b.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_b.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_b.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,21 @@\n+// { dg-additional-options {-fmodule-header -fdump-lang-module-blocks} }\n+\n+// { dg-module-cmi {} }\n+\n+import \"hdr-1_a.H\";\n+\n+class frob\n+{\n+public:\n+  int field;\n+};\n+\n+template<int J>\n+class FROB\n+{\n+public:\n+  static constexpr int val = J;\n+};\n+\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=decl definition '::frob'} module } }\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=decl definition '::template FROB'} module } }"}, {"sha": "f8fa0934a582533ea7dd724003f04e9b75f6b96f", "filename": "gcc/testsuite/g++.dg/modules/hdr-1_c.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options {-fmodules-ts} }\n+\n+import \"hdr-1_b.H\";\n+\n+int foo (frob *p)\n+{\n+  return p->field;\n+}\n+\n+int foo (FROB<2> *p)\n+{\n+  return p->val;\n+}\n+"}, {"sha": "25cbf3fc616bc76357190cafb624598f5366a8ea", "filename": "gcc/testsuite/g++.dg/modules/hdr-init-1_a.H", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+int bob ();\n+\n+static int var = bob ();"}, {"sha": "25cbf3fc616bc76357190cafb624598f5366a8ea", "filename": "gcc/testsuite/g++.dg/modules/hdr-init-1_b.H", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_b.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_b.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_b.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+int bob ();\n+\n+static int var = bob ();"}, {"sha": "efcc4854314006526817cd972928076d6d3e9c70", "filename": "gcc/testsuite/g++.dg/modules/hdr-init-1_c.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhdr-init-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,24 @@\n+// { dg-additional-options {-fmodules-ts -fdump-lang-module-alias} }\n+\n+import \"hdr-init-1_a.H\";\n+import \"hdr-init-1_b.H\";\n+\n+int bob ()\n+{\n+  static int i;\n+\n+  return ++i;\n+}\n+\n+int main ()\n+{\n+  return !(var == 1);\n+}\n+\n+// { dg-final { scan-lang-dump-times {Reading 1 initializers} 2 module } }\n+\n+// { dg-final { scan-lang-dump {Read:-1's named merge key \\(new\\) var_decl:'::var'} module } }\n+// { dg-final { scan-lang-dump-times {Reading definition var_decl '::var@[^\\n]*/hdr-init-1_a.H:1'} 2 module } }\n+\n+// { dg-final { scan-lang-dump {Read:-1's named merge key \\(matched\\) var_decl:'::var'} module } }\n+"}, {"sha": "ff548d039eac4d2fefccd42cd47525020883b2af", "filename": "gcc/testsuite/g++.dg/modules/horcrux-1_a.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhorcrux-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhorcrux-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhorcrux-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+template<typename _Tp, _Tp __v>\n+struct integral_constant\n+{};\n+\n+template<bool __v>\n+using __bool_constant = integral_constant<bool, __v>;\n+\n+template<typename _Tp, typename... _Args>\n+struct __is_constructible_impl\n+  : public __bool_constant<__is_constructible(_Tp, _Args...)>\n+{ };\n+"}, {"sha": "842bf4135851fc93a7d53e29b585a7b8588242db", "filename": "gcc/testsuite/g++.dg/modules/horcrux-1_b.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhorcrux-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhorcrux-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fhorcrux-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+module foo;\n+\n+int main ()\n+{\n+  __is_constructible_impl<bool> x;\n+  return 0;\n+}"}, {"sha": "128734d31e690e8b6d8fcf4c26cead3481cf075f", "filename": "gcc/testsuite/g++.dg/modules/ice-1.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fice-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fice-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fice-1.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,3 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+// we ICED on malformed preambles ending at EOF.\n+import bob // { dg-error \"expected\" }"}, {"sha": "56bbbdd0456bed3dfa686c5930a03da0807d6c95", "filename": "gcc/testsuite/g++.dg/modules/imp-inline-1_a.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,37 @@\n+// { dg-additional-options \"-fmodules-ts -Wno-pedantic\" }\n+\n+module;\n+\n+# 6 __FILE__ 1\n+struct Bob \n+{\n+  // inline\n+  static auto frob () \n+  {\n+  }\n+};\n+\n+# 14 \"\" 2\n+\n+export module Foo;\n+// { dg-module-cmi Foo }\n+\n+export struct Bill \n+{\n+  // not inline\n+  static auto dob () \n+  {\n+  }\n+  static inline auto frob () \n+  {\n+  }\n+};\n+\n+export inline auto GMF ()\n+{\n+  return Bob::frob ();\n+}\n+\n+// { dg-final { scan-assembler-not {_ZN3Bob4frobEv:} } }\n+// { dg-final { scan-assembler-not {_ZN4Bill4frobEv:} } }\n+// { dg-final { scan-assembler {_ZN4Bill3dobEv:} } }"}, {"sha": "c127f7005a3ab8ffb87254dc36aedc7cfa826936", "filename": "gcc/testsuite/g++.dg/modules/imp-inline-1_b.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-inline-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,22 @@\n+// { dg-additional-options \"-fmodules-ts -fno-inline\" }\n+\n+import Foo;\n+\n+int main ()\n+{\n+  GMF ();\n+  Bill::dob ();\n+  Bill::frob ();\n+\n+  return 0;\n+}\n+\n+// { dg-final { scan-assembler {_ZN3Bob4frobEv:} } }\n+// { dg-final { scan-assembler {_ZN4Bill4frobEv:} } }\n+// { dg-final { scan-assembler-not {_ZN4Bill3dobEv:} } }\n+// { dg-final { scan-assembler {_Z3GMFv:} } }\n+\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZN3Bob4frobEv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_Z3GMFv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZN4Bill3dobEv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZN4Bill4frobEv} { target i?86-*-* x86_64-*-* } } }"}, {"sha": "4798ce5fb565aec302815ef2b4b3d0a76b9bfcc9", "filename": "gcc/testsuite/g++.dg/modules/imp-member-1_a.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks\" }\n+export module A;\n+// { dg-module-cmi A }\n+\n+struct M\n+{\n+  M (){}\n+};\n+\n+export struct C \n+{\n+  M m;\n+  // lazy implicit ctor\n+};\n+\n+// { dg-final { scan-lang-dump-not {'::C::__ct '} module } }"}, {"sha": "849cf3c5be49a022db9e2048a8e2d6e1671d08da", "filename": "gcc/testsuite/g++.dg/modules/imp-member-1_b.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks\" }\n+export module B;\n+// { dg-module-cmi B }\n+export import A;\n+\n+export struct D\n+{\n+  C c;\n+\n+  // ctor causes C::C to exist, and we need to put it in out CMI\n+  inline D (){}\n+};\n+\n+// { dg-final { scan-lang-dump {\\[.*\\]=decl definition '::C@A:1::__ct '} module } }"}, {"sha": "b354ca8cf98151bfa49ab0def0ff6f393e4b6a0d", "filename": "gcc/testsuite/g++.dg/modules/imp-member-1_c.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks-alias\" }\n+import B;\n+\n+void fn ()\n+{\n+  D d; // reads in C::C implicit ctor\n+}\n+\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(new\\) function_decl:'::C@A:.::__ct '\\n} module } }\n+// { dg-final { scan-lang-dump {Adding implicit member '::C@A:.::__ct @B:.} module } }"}, {"sha": "c7f3158c80d64e7367421f3e9a9a7c103bd67241", "filename": "gcc/testsuite/g++.dg/modules/imp-member-1_d.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks\" }\n+import B;\n+\n+void fn ()\n+{\n+  C c;  // creates C::C implicitly (we never read B's version)\n+}\n+\n+// { dg-final { scan-lang-dump-not {Read:-1's named merge key \\([a-z]*\\) function_decl:'::C@A:.::__ct '\\n} module } }\n+// { dg-final { scan-lang-dump-not {Adding implicit member '::C@A:.::__ct @B:.} module } }"}, {"sha": "b771850583f6dec08b7bf4a52e5716fded6b1d6b", "filename": "gcc/testsuite/g++.dg/modules/imp-member-1_e.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_e.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_e.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-1_e.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks-alias\" }\n+import B;\n+\n+void fn ()\n+{\n+  C c; // created C::C implicitly\n+}\n+\n+void fn2 ()\n+{\n+  D d; // merges implicit C::C\n+}\n+\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(matched\\) function_decl:'::C@A:.::__ct '\\n} module } }\n+// { dg-final { scan-lang-dump-not {Adding implicit member '::C@A:.::__ct @B:.} module } }"}, {"sha": "8d4d8396975084c937a0858b8ec4436bb99a19c8", "filename": "gcc/testsuite/g++.dg/modules/imp-member-2_a.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,28 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks\" }\n+// A more complete imp-member test\n+export module A;\n+// { dg-module-cmi A }\n+\n+struct M\n+{\n+  M (){}\n+  M (M const &){}\n+  M (M &&){}\n+  ~M (){}\n+  M &operator=(M const &){ return *this;}\n+  M &operator=(M &&){ return *this;}\n+};\n+\n+export struct C \n+{\n+  M m;\n+  // lazy implicit ctors, dtors, assop\n+};\n+\n+// C doesn't contain a lot\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=decl definition '::C'\\n  \\[1\\]=decl declaration '::C::C'\\n  \\[2\\]=binding '::C'\\n} module } }\n+\n+// particularly not ...\n+// { dg-final { scan-lang-dump-not {'::C::__ct '} module } }\n+// { dg-final { scan-lang-dump-not {'::C::__dt '} module } }\n+// { dg-final { scan-lang-dump-not {'::C::operator= '} module } }"}, {"sha": "09795af00939155c024f04eba1b3fa508cd41eb6", "filename": "gcc/testsuite/g++.dg/modules/imp-member-2_b.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,21 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks\" }\n+export module B;\n+// { dg-module-cmi B }\n+export import A;\n+\n+export struct D\n+{\n+  C c;\n+\n+  // cause all C's implicit members to exist, and we need to put it in out CMI\n+  inline D (){}\n+  inline D (D const &v) : c (v.c) {}\n+  inline D (D &&v) : c (static_cast<C &&> (v.c)) {}\n+  inline ~D () {}\n+  inline D &operator= (D const &v) { c = v.c; return *this;}\n+  inline D &operator= (D &&v) { c =static_cast<C &&> (v.c); return *this;}\n+};\n+\n+// { dg-final { scan-lang-dump-times {\\[0\\]=decl definition '::C@A:1::__dt '} 1 module } }\n+// { dg-final { scan-lang-dump-times {\\[0\\]=decl definition '::C@A:1::__ct '} 3 module } }\n+// { dg-final { scan-lang-dump-times {\\[0\\]=decl definition '::C@A:1::operator='} 2 module } }"}, {"sha": "bb6b5dee5d909981a6839c8d1175eb0baeeade64", "filename": "gcc/testsuite/g++.dg/modules/imp-member-2_c.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-2_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks-alias\" }\n+import B;\n+\n+void fn ()\n+{\n+  D d; // reads in C::C implicits\n+}\n+\n+// { dg-final { scan-lang-dump-times {Read:-[0-9]*'s named merge key \\(new\\) function_decl:'::C@A:.::__dt '\\n} 1 module } }\n+// { dg-final { scan-lang-dump-times {Adding implicit member '::C@A:.::__dt @B:.} 1 module } }\n+// { dg-final { scan-lang-dump-times {Read:-[0-9]*'s named merge key \\(new\\) function_decl:'::C@A:.::__ct '\\n} 3 module } }\n+// { dg-final { scan-lang-dump-times {Adding implicit member '::C@A:.::__ct @B:.} 3 module } }\n+// { dg-final { scan-lang-dump-times {Read:-[0-9]*'s named merge key \\(new\\) function_decl:'::C@A:.::operator='\\n} 2 module } }\n+// { dg-final { scan-lang-dump-times {Adding implicit member '::C@A:.::operator=@B:.} 2 module } }"}, {"sha": "d26b13ce0e233ee3032fc0d3ca0a214c317bfa44", "filename": "gcc/testsuite/g++.dg/modules/imp-member-3.H", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-3.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-3.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimp-member-3.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+class bad_optional_access\n+{\n+public:\n+\n+  virtual ~bad_optional_access() noexcept = default; // { dg-bogus \"\" }\n+};\n+\n+inline void\n+__throw_bad_optional_access()\n+{\n+  throw bad_optional_access ();\n+}\n+"}, {"sha": "b42153cd08dbbaf1c4461d3bccdfd3f20f906de8", "filename": "gcc/testsuite/g++.dg/modules/import-1_a.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Bar;\n+// { dg-module-cmi \"Bar\" }\n+\n+export void Quux (int);"}, {"sha": "ec15856805ea35fcbe6efc7a5cec40cc91324787", "filename": "gcc/testsuite/g++.dg/modules/import-1_b.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Baz;\n+// { dg-module-cmi \"Baz\" }\n+\n+export void Quux (int, int);"}, {"sha": "b01aa5e9d2b5fda9be67f64283fc038df0f4ffed", "filename": "gcc/testsuite/g++.dg/modules/import-1_c.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,10 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module\" }\n+// { dg-final { scan-lang-dump \"Writing exported import:.->. Baz\" \"module\" } }\n+// { dg-final { scan-lang-dump \"Writing exported import:.->. Bar\" \"module\" } }\n+\n+export module Foo;\n+// { dg-module-cmi \"Foo\" }\n+\n+export import Bar;\n+export import Baz;\n+"}, {"sha": "45e63401f4a3b3bd638687a0e50fb2b1ba98407c", "filename": "gcc/testsuite/g++.dg/modules/import-1_d.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_d.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_d.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_d.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,7 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+export module Foop;\n+// { dg-module-cmi \"Foop\" }\n+\n+import Bar;\n+\n+export int Thing ();"}, {"sha": "ae7cce2e4b99a7c1fa28148f54fe09ef39b85ba4", "filename": "gcc/testsuite/g++.dg/modules/import-1_e.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_e.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_e.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_e.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module\" }\n+\n+import Foo;\n+\n+int main ()\n+{\n+  Quux (1); // from Bar\n+  Quux (1, 2); // from Baz\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump \"Found exported import:1 Bar->1\" \"module\" } }\n+// { dg-final { scan-lang-dump \"Found exported import:2 Baz->2\" \"module\" } }"}, {"sha": "8dbe9c02dfb45c3b612a0a178a81c61c1fc8faa2", "filename": "gcc/testsuite/g++.dg/modules/import-1_f.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_f.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_f.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_f.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+module Foop;\n+\n+int Thing ()\n+{\n+  Quux (1); // from Bar\n+  return 0;\n+}"}, {"sha": "556ba80c2c3fed1e0ba4e7626a8b23b14baed2d0", "filename": "gcc/testsuite/g++.dg/modules/import-1_g.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_g.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_g.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-1_g.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,9 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+import Foop;\n+\n+int main ()\n+{\n+  Thing ();\n+  Quux (1);  // { dg-error \"not declared\" }\n+  return 0;\n+}"}, {"sha": "86a14941a44d268c2d54328e2c4fca278177ce48", "filename": "gcc/testsuite/g++.dg/modules/import-2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fimport-2.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-fmodules-ts\" }\n+// Don't segfault on missing module BMI\n+\n+// { dg-module-cmi \"!bob\" }\n+// { dg-module-cmi \"!bill\" }\n+\n+import bill;\n+// { dg-regexp \"In module imported at \\[^\\n]*import-2.C:7:.:\\nbill: error: failed to read compiled module: \\[^\\n]*\\n\" }\n+\n+// { dg-prune-output \"fatal error:\" }\n+// { dg-prune-output \"compilation terminated\" }\n+"}, {"sha": "f2429bf3386a8e8f2e6163af9815c5c06ae92d87", "filename": "gcc/testsuite/g++.dg/modules/inc-xlate-1.map", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1.map?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,2 @@\n+<stdarg.h>\n+<stdio.h>"}, {"sha": "cd906a5b40c37f2a9e561a9092f06f1c6e7bd1e0", "filename": "gcc/testsuite/g++.dg/modules/inc-xlate-1_a.H", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,15 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#ifndef _STDARG_H\n+#define _STDARG_H\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+  extern void frob ();\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+#endif"}, {"sha": "50b27efa7ef7a5a54d4c4b6b8b9e3ddc8cbe8189", "filename": "gcc/testsuite/g++.dg/modules/inc-xlate-1_b.H", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_b.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_b.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_b.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do preprocess }\n+// { dg-additional-options -fmodule-header }\n+\n+#ifndef _STDIO_H\n+#define _STDIO_H\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+  // Yes, inside extern \"C\" block :(\n+  #include \"inc-xlate-1_a.H\"\n+  #ifndef _STDARG_H\n+  #error barf\n+  #endif\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+#endif\n+\n+// { dg-final { scan-file inc-xlate-1_b.i {import  \"[^\\n]*inc-xlate-1_a.H\" \\[\\[__translated\\]\\];\\n} } }"}, {"sha": "e1247e645d04bf1f46bba11e3b5c38b8eeee7eda", "filename": "gcc/testsuite/g++.dg/modules/inc-xlate-1_c.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options -fmodules-ts }\n+\n+extern \"C\" {\n+  #include \"inc-xlate-1_a.H\"\n+}\n+\n+int main ()\n+{\n+  frob ();\n+  return 0;\n+}"}, {"sha": "f33c464bee90ef0b7b16fab161dcea9a1f537dc6", "filename": "gcc/testsuite/g++.dg/modules/inc-xlate-1_e.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_e.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_e.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finc-xlate-1_e.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts -fmodule-mapper=|@g++-mapper-server\\\\ -t\\\\ [srcdir]/inc-xlate-1.map\" }\n+export module bad;\n+#include \"inc-xlate-1_a.H\"  // { dg-error \"not be include-translated\" }\n+\n+// { dg-prune-output \"not writing module\" }"}, {"sha": "f2417172fdcaa3113edfaff28b96f4eb7432b238", "filename": "gcc/testsuite/g++.dg/modules/indirect-1_a.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,41 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+\n+// indirect references to import.  Non-template cases\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+namespace foo {\n+\n+  export int frob (int i)\n+  {\n+    return i;\n+  }\n+\n+\n+  export class X \n+  {\n+    int i;\n+\n+  public:\n+    X (int i) :i(i) { }\n+    operator int () const { return i; }\n+  };\n+\n+  export class Y : public virtual X\n+  {\n+    int j;\n+  public:\n+    Y (int i, int j) : X(i), j(j){}\n+    virtual int frob () const;\n+  };\n+\n+  int Y::frob () const\n+  {\n+    return *this + j;\n+  }\n+\n+  export enum Plain {A, B, C, D};\n+  export enum class Scoped {A, B, C, D};\n+}"}, {"sha": "c450fa9481c18eb8205721563c15f36ade532ab1", "filename": "gcc/testsuite/g++.dg/modules/indirect-1_b.C", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,54 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid\" }\n+\n+export module bar;\n+// { dg-module-cmi bar }\n+\n+import foo;\n+\n+namespace bar \n+{\n+  export int frob (int i = foo::frob (0))\n+  {\n+    return i;\n+  }\n+\n+  export int quux (int i = foo::X (0) )\n+  {\n+    return i;\n+  }\n+\n+  export class Z : public foo::Y\n+  {\n+  public:\n+    Z (int i, int j) : X(i), Y(i, j)\n+    {\n+    }\n+  };\n+\n+  export constexpr auto Plain_One (bool b) { return b ? foo::B : foo::C; }\n+  export constexpr auto Scoped_One (bool b) { return b ? foo::Scoped::B\n+      : foo::Scoped::C; }\n+\n+  export extern auto const Plain_Const_Three = foo::D;\n+  export extern auto const Scoped_Const_Three = foo::Scoped::D;\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::frob'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump-not {namespace:-[0-9]* namespace_decl:'::foo'} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* function_decl:'::foo@foo:.::frob@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::X'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* type_decl:'::foo@foo:.::X@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::Y'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* type_decl:'::foo@foo:.::Y@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::B'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump-not {Lazily binding '::foo@foo:.::C@foo:.'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::Scoped'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump-not {Lazily binding '::foo@foo:.::Scoped@foo:.::[ABCD]'@'foo' section:} module } }\n+\n+// { dg_final { scan-lang-dump {Wrote named import:-[0-9]* const_decl:'::foo::Plain@\\(foo\\)::C'@foo} module } }\n+// { dg_final { scan-lang-dump {Wrote named import:-[0-9]* const_decl:'::foo::Plain@\\(foo\\)::B'@foo} module } }\n+// { dg_final { scan-lang-dump {Wrote named import:-[0-9]* const_decl:'::foo::Scoped@\\(foo\\)::C'@foo} module } }\n+// { dg_final { scan-lang-dump {Wrote named import:-[0-9]* const_decl:'::foo::Scoped@\\(foo\\)::B'@foo} module } }"}, {"sha": "73d5974c84678bdd22336827d329a49bc4b431c8", "filename": "gcc/testsuite/g++.dg/modules/indirect-1_c.C", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-1_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,49 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid\" }\n+import bar;\n+\n+\n+int main ()\n+{\n+  if (bar::frob ())\n+    return 1;\n+  if (bar::quux ())\n+    return 2;\n+\n+  if (bar::Z (1, 2).frob () != 3)\n+    return 3;\n+\n+  static_assert (bar::Plain_One (true) == 1);\n+  static_assert (bar::Plain_One (false) == 2);\n+  static_assert (int (bar::Scoped_One (true)) == 1);\n+  static_assert (int (bar::Scoped_One (false)) == 2);\n+\n+  static_assert (bar::Plain_Const_Three == 3);\n+  static_assert (int (bar::Scoped_Const_Three) == 3);\n+\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::frob'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[14\\] section:4} module } }\n+// { dg-final { scan-lang-dump {Named:-[0-9]* namespace_decl:'::foo@foo:1'@foo} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* function_decl:'::foo@foo:.::frob@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::quux'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[1\\] section:1} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* type_decl:'::foo@foo:.::X@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::Z'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[8\\] section:2} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* type_decl:'::foo@foo:.::Y@foo:.'@foo} module } }\n+// { dg-final { scan-lang-dump {Read member:-[0-9]* field_decl:'::foo@foo:.::Y@foo:.::_vptr.Y'} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* function_decl:'::foo@foo:.::Y@foo:.::frob@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::Plain_One'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[13\\] section:3} module } }\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::Scoped_One'@'bar' section} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[15\\] section:5} module } }\n+// { dg-final { scan-lang-dump-not {Lazily binding '::foo@foo:.::[ABC]'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump-not {Lazily binding '::foo@foo:.::Scoped@\\(foo\\)::[ABC]'@'foo' section:} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::Plain_Const_Three'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::Scoped_Const_Three'@'bar' section} module } }"}, {"sha": "20febb935b1eedda14dbd2a075d8a97ba81a53ca", "filename": "gcc/testsuite/g++.dg/modules/indirect-2_a.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,24 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+\n+// indirect references to import, simple templates\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+namespace foo\n+{\n+  export template<int I> int frob ()\n+  {\n+    return I;\n+  }\n+\n+  export template<int I> class X\n+  {\n+    int i = I;\n+\n+  public:\n+    operator int () const { return i; }\n+  };\n+}\n+"}, {"sha": "16e060a221041fe1edc3edb4f3f0dd727251eca8", "filename": "gcc/testsuite/g++.dg/modules/indirect-2_b.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,31 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks-alias-uid\" }\n+export module bar;\n+// { dg-module-cmi bar }\n+\n+import foo;\n+\n+namespace bar\n+{\n+  export int frob (int i = foo::frob<0> ())\n+  {\n+    return i;\n+  }\n+\n+  export int quux (int i = foo::X<0> ())\n+  {\n+    return i;\n+  }\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::frob'@'foo' section} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* template_decl:'::foo@foo:.::template frob@foo:.'@foo} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s decl spec merge key \\(specialization\\) function_decl:'::foo@foo:.::frob<0x0>'} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::X'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* template_decl:'::foo@foo:.::template X@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=specialization definition '::foo@foo:.::X<0x0>'\\n  \\[1\\]=specialization declaration '::foo@foo:.::X<0x0>::__conv_op <0x0>'\\n  \\[2\\]=specialization declaration '::foo@foo:.::X<0x0>::X<0x0>'\\n(  \\[.\\]=[^\\n]* '\\n)*} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s type spec merge key \\(specialization\\) type_decl:'::foo@foo:.::X<0x0>'} module } }\n+// { dg-final { scan-lang-dump {Depset:. specialization entity:. type_decl:'::foo@foo:.::X<0x0>'} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s type spec merge key \\(specialization\\) type_decl:'::foo@foo:.::X<0x0>'} module } }\n+// { dg-final { scan-lang-dump {Wrote purview:-[0-9]* type_decl:'::foo@foo:.::X<0x0>'} module } }"}, {"sha": "a5cf44ba78578286c10bf2af214271104d9f46b9", "filename": "gcc/testsuite/g++.dg/modules/indirect-2_c.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-2_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,25 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid\" }\n+import bar;\n+\n+int main ()\n+{\n+\n+  if (bar::frob ())\n+    return 1;\n+\n+  if (bar::quux ())\n+    return 2;\n+\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::frob'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[4\\] section:2} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* template_decl:'::foo@foo:.::template frob@foo:.'@foo} module } }\n+// { dg-final { scan-lang-dump-not {Wrote mergeable} module } }\n+\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::quux'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[1\\] section:1} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* template_decl:'::foo@foo:.::template X@foo:.'@foo} module } }\n+// { dg-final { scan-lang-dump {Read:-[0-9]* function_decl:'::foo@foo:.::frob<0x0>'} module } }"}, {"sha": "fad9ecf15489c9240db6c760914ab5b3f14c7871", "filename": "gcc/testsuite/g++.dg/modules/indirect-3_a.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,23 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+\n+// indirect references to import, template member non-template or\n+// non-template member of template cases\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+namespace foo\n+{\n+  export class X\n+  {\n+  public:\n+    template <int I> int frob () const { return I; }\n+  };\n+\n+  export template<int I> class TPL\n+  {\n+  public:\n+    int frob () const { return I; }\n+  };\n+}"}, {"sha": "5bdfc1d36a8c5a385ad791da4a7c5e5a22003a1c", "filename": "gcc/testsuite/g++.dg/modules/indirect-3_b.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,30 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks-uid-alias\" }\n+export module bar;\n+// { dg-module-cmi bar }\n+\n+import foo;\n+\n+namespace bar\n+{\n+  export int quux (int i = foo::X().frob<0> ())\n+  {\n+    return i;\n+  }\n+\n+  export int toto (int i = foo::TPL<0>().frob ())\n+  {\n+    return i;\n+  }\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::X'@'foo' section} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* template_decl:'::foo@foo:.::X@foo:.::template frob@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::TPL'@'foo' section} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* template_decl:'::foo@foo:.::template TPL@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=specialization definition '::foo@foo:.::TPL<0x0>'\\n  \\[1\\]=specialization declaration '::foo@foo:.::TPL<0x0>::TPL<0x0>'\\n(  \\[.\\]=[^\\n]* '\\n)*  \\[.\\]=decl definition '::foo@foo:.::TPL<0x0>::frob<0x0>'\\n} module } }\n+\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=specialization definition '::foo@foo:.::X@foo:.::frob<0x0>'} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s type spec merge key \\(specialization\\) type_decl:'::foo@foo:.::TPL<0x0>'} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s decl spec merge key \\(specialization\\) function_decl:'::foo@foo:.::X@foo:.::frob<0x0>'} module } }"}, {"sha": "9c5cb230ad2fc370b068d6caee96c19ddc70a3ac", "filename": "gcc/testsuite/g++.dg/modules/indirect-3_c.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-3_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,24 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid\" }\n+import bar;\n+\n+int main ()\n+{\n+\n+  if (bar::quux ())\n+    return 1;\n+\n+  if (bar::toto ())\n+    return 2;\n+\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::quux'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[5\\] section:2} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* template_decl:'::foo@foo:.::X@foo:.::template frob@foo:.'@foo} module } }\n+// { dg-final { scan-lang-dump-not {Instantiation:-[0-9]* function_decl:'::foo::X@foo:.::frob@.()<0x0>'} module } }\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::toto'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[1\\] section:1} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* template_decl:'::foo@foo:.::template TPL@foo:.'@foo} module } }\n+// { dg-final { scan-lang-dump {Reading definition type_decl '::foo@foo:.::TPL@bar:.<0x0>'} module } }"}, {"sha": "44f4b660a6e4f66bdc6ade545bc218ba223b5985", "filename": "gcc/testsuite/g++.dg/modules/indirect-4_a.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,20 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts\" }\n+\n+// indirect references to import, template member of template case\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+namespace foo\n+{\n+  export template<int I> class TPL\n+  {\n+  public:\n+    template <int J> int frob () const \n+    {\n+      return I + J;\n+    }\n+  };\n+}\n+"}, {"sha": "8c51ce8097b6fd3414bd73717702a0b699ae8ed6", "filename": "gcc/testsuite/g++.dg/modules/indirect-4_b.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,22 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-blocks-alias-uid\" }\n+export module bar;\n+// { dg-module-cmi bar }\n+\n+import foo;\n+\n+namespace bar \n+{\n+  export int quux (int i = foo::TPL<1> ().frob<2> ())\n+  {\n+    return i;\n+  }\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::foo@foo:.::TPL'@'foo' section:} module } }\n+// { dg-final { scan-lang-dump {Wrote import:-[0-9]* template_decl:'::foo@foo:.::template TPL@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=specialization definition '::foo@foo:.::TPL<0x1>'\\n  \\[1\\]=specialization declaration '::foo@foo:.::TPL<0x1>::template frob<#unnamed#>'\\n  \\[2\\]=specialization declaration '::foo@foo:.::TPL<0x1>::TPL<0x1>'\\n(  \\[.\\]=[^\\n]* '\\n)*} module } }\n+// { dg-final { scan-lang-dump {Cluster members:\\n  \\[0\\]=specialization definition '::foo@foo:.::TPL<0x1>::frob<0x2>'} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s type spec merge key \\(specialization\\) type_decl:'::foo@foo:.::TPL<0x1>'} module } }\n+// { dg-final { scan-lang-dump {Wrote purview:-[0-9]* type_decl:'::foo@foo:.::TPL<0x1>'} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s decl spec merge key \\(specialization\\) function_decl:'::foo@foo:.::TPL<0x1>::frob<0x2>'} module } }"}, {"sha": "7efcc115e71f8e00ebb6b50ccfd5eae1c0ad2673", "filename": "gcc/testsuite/g++.dg/modules/indirect-4_c.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Findirect-4_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options \"-fmodules-ts -fdump-lang-module-uid-alias\" }\n+import bar;\n+\n+int main ()\n+{\n+  if (bar::quux () != 3)\n+    return 1;\n+\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Lazily binding '::bar@bar:.::quux'@'bar' section:} module } }\n+// { dg-final { scan-lang-dump {>Loading entity foo\\[2\\] section:1} module } }\n+// { dg-final { scan-lang-dump {Imported:-[0-9]* template_decl:'::foo@foo:.::template TPL@foo:.'@foo} module } }\n+\n+// { dg-final { scan-lang-dump {Reading definition function_decl '::foo@foo:.::TPL@bar:.<0x1>::frob@bar:.<0x2>'} module } }\n+// { dg-final { scan-lang-dump {Reading definition type_decl '::foo@foo:.::TPL@bar:.<0x1>'} module } }"}, {"sha": "7708c3916182b0e72eef69aa351d8312a20dae8d", "filename": "gcc/testsuite/g++.dg/modules/inext-1.H", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finext-1.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finext-1.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finext-1.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-additional-options \"-fmodule-header -isystem [srcdir] -isystem [srcdir]/sys -fdump-lang-module\" }\n+\n+#ifndef _PROTECT\n+#define _PROTECT\n+\n+/* We were found on the system inc path, so have been turned into a\n+   system header, so no warning on the following extension.  */\n+#include_next <inext-1.H>\n+\n+#endif\n+"}, {"sha": "13f769f12d920cc3bc03ff0ba3b426ecb0e7ce7d", "filename": "gcc/testsuite/g++.dg/modules/inh-tmpl-ctor-1.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1.h?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,35 @@\n+\n+template <typename _Tp>\n+struct Base\n+{\n+  // template constructor\n+  template<typename _Del> Base(_Tp *__p, _Del __d);\n+};\n+\n+template <typename _Tp, typename _Dp>\n+struct Derived : Base<_Tp>\n+{\n+  // Inheriting the template constructor\n+  using Base<_Tp>::Base;\n+};\n+\n+template <typename _Tp>\n+class unique_ptr\n+{\n+  Derived<_Tp, int> _M_t;\n+\n+public:\n+  // Instantiates Derived<ResultDerived,int>::Derived\n+  template<typename _Up> unique_ptr(unique_ptr<_Up>&& __u) noexcept\n+    : _M_t ((_Tp *)0, 1) { }\n+};\n+\n+struct ResultBase { };\n+struct ResultDerived : ResultBase { };\n+\n+void Frob (unique_ptr<ResultBase> &&__res) ;\n+\n+inline void X (unique_ptr<ResultDerived> &parm)\n+{\n+  Frob (static_cast <unique_ptr<ResultDerived> &&> (parm));\n+}"}, {"sha": "822221229c1436642e7ed5c2debbd86b5d54f5fe", "filename": "gcc/testsuite/g++.dg/modules/inh-tmpl-ctor-1_a.H", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1_a.H?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options -fmodule-header }\n+// { dg-module-cmi {} }\n+\n+#include \"inh-tmpl-ctor-1.h\""}, {"sha": "ae1612c1475ebc6178abe2926c3275305fc13b66", "filename": "gcc/testsuite/g++.dg/modules/inh-tmpl-ctor-1_b.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finh-tmpl-ctor-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy\" }\n+\n+#include \"inh-tmpl-ctor-1.h\"\n+import \"inh-tmpl-ctor-1_a.H\";\n+"}, {"sha": "b5727d7e3b7b547321a5f39cd0d95d4ff0b93acd", "filename": "gcc/testsuite/g++.dg/modules/init-1_a.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,11 @@\n+// { dg-module-do run }\n+// { dg-additional-options \"-fmodules-ts -fno-inline\" }\n+export module Foo;\n+// { dg-module-cmi Foo }\n+\n+int Frob (int i)\n+{\n+  return i;\n+}\n+\n+export int j = Frob (5);"}, {"sha": "3d2239f99822a31255993f2b281a0077e9fac25c", "filename": "gcc/testsuite/g++.dg/modules/init-1_b.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,14 @@\n+// { dg-additional-options \"-fmodules-ts -fno-inline\" }\n+import Foo;\n+\n+int frob (int j)\n+{\n+  return j + 1;\n+}\n+\n+int q = frob (j);\n+\n+int main ()\n+{\n+  return !(q == 6);\n+}"}, {"sha": "1e9093ef13d4c20ad53b5082f46589ef7476a789", "filename": "gcc/testsuite/g++.dg/modules/init-2_a.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodules-ts -fno-inline\" }\n+export module Foo;\n+// { dg-module-cmi Foo }\n+\n+// { dg-final { scan-assembler {_ZGIW3FooEv:} } }"}, {"sha": "b9692ca862cb0e5f1801a02f62db734b51257d96", "filename": "gcc/testsuite/g++.dg/modules/init-2_b.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options \"-fmodules-ts -fno-inline\" }\n+export module Bar;\n+// { dg-module-cmi Bar }\n+\n+import Foo;\n+\n+// { dg-final { scan-assembler {_?_ZGIW3BarEv:} } }\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZGIW3FooEv} { target i?86-*-* x86_64-*-* } } }"}, {"sha": "c1fa5d80cd46dbfb997f847737644a6625f20b9c", "filename": "gcc/testsuite/g++.dg/modules/init-2_c.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finit-2_c.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,8 @@\n+// { dg-additional-options \"-fmodules-ts -fno-inline\" }\n+\n+import Foo;\n+import Bar;\n+\n+// We know Bar imports Foo, so only call Bar's Global Init\n+// { dg-final { scan-assembler {call[ \\t]+_?_ZGIW3BarEv} { target i?86-*-* x86_64-*-* } } }\n+// { dg-final { scan-assembler-not {call[ \\t]+_?_ZGIW3FooEv} { target i?86-*-* x86_64-*-* } } }"}, {"sha": "e1d438b5c19bb74d0b5ab50d2d5ebd5e9175750a", "filename": "gcc/testsuite/g++.dg/modules/inst-1_a.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-1_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-1_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-1_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,42 @@\n+// { dg-module-do run }\n+// { dg-additional-options {-fmodules-ts -fdump-lang-module-graph-blocks} }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+int i_baz (int i)\n+{\n+  return i;\n+}\n+\n+inline int baz (int i)\n+{\n+  return i_baz (i);\n+}\n+\n+int f_baz (float f)\n+{\n+  return int (f);\n+}\n+\n+inline int baz (float f)\n+{\n+  return f_baz (f);\n+}\n+\n+export template <typename T>\n+int foo (T t)\n+{\n+  return baz (t);\n+}\n+\n+export inline void user ()\n+{\n+  foo (1);\n+  foo (1.0f);\n+}\n+\n+// { dg-final { scan-lang-dump {Depending definition function_decl:'::foo<float>'} module } }\n+// { dg-final { scan-lang-dump {Depending definition function_decl:'::foo<int>'} module } }\n+// { dg-final { scan-lang-dump {\\[0\\]=specialization definition '::foo<float>'} module } }\n+// { dg-final { scan-lang-dump {\\[0\\]=specialization definition '::foo<int>'} module } }"}, {"sha": "08a92aef63aec2b05f01f760dd89759cc5888d5c", "filename": "gcc/testsuite/g++.dg/modules/inst-1_b.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-1_b.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,16 @@\n+// { dg-additional-options {-fmodules-ts -fdump-lang-module-uid-alias} }\n+import foo;\n+\n+int main ()\n+{\n+  user ();\n+  foo ('a'); // new inst\n+  foo (1);  // find foo's inst\n+  return 0;\n+}\n+\n+// { dg-final { scan-lang-dump {Reading definition function_decl '::foo@foo:.<int>'} module } }\n+// { dg-final { scan-lang-dump {Reading definition function_decl '::foo@foo:.<float>'} module } }\n+\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(unique\\) function_decl:'::baz'} module } }\n+// { dg-final { scan-lang-dump {Read:-[0-9]*'s named merge key \\(unique\\) function_decl:'::baz'} module } }"}, {"sha": "40d6229d4b38ecf2073d2aba789e03dfbf4eda92", "filename": "gcc/testsuite/g++.dg/modules/inst-2_a.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-2_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff491f7b1d3a8373310cf596f5079cc4e37076/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-2_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Finst-2_a.C?ref=6aff491f7b1d3a8373310cf596f5079cc4e37076", "patch": "@@ -0,0 +1,26 @@\n+// { dg-module-do run }\n+// { dg-additional-options {-fmodules-ts -fdump-lang-module-blocks-uid-alias} }\n+\n+export module foo;\n+// { dg-module-cmi foo }\n+\n+inline int baz (int i)\n+{\n+  return i;\n+}\n+\n+export template <typename T>\n+inline int foo (T t)\n+{\n+  return baz (t);\n+}\n+\n+export inline void user ()\n+{\n+  foo (1);\n+}\n+\n+// { dg-final { scan-lang-dump {\\[0\\]=specialization definition '::foo<int>'} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s named merge key \\(decl\\) function_decl:'::baz'} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s decl spec merge key \\(specialization\\) function_decl:'::foo<int>'} module } }\n+// { dg-final { scan-lang-dump {Writing:-[0-9]*'s decl spec merge key \\(specialization\\) function_decl:'::foo<int>'} module } }"}]}