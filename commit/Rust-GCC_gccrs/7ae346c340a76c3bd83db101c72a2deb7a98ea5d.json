{"sha": "7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FlMzQ2YzM0MGE3NmMzYmQ4M2RiMTAxYzcyYTJkZWI3YTk4ZWE1ZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-06-24T08:34:05Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-06-24T08:34:05Z"}, "message": "configure.ac: Check for fp_except and fp_except_t.\n\n2013-06-24  Tobias Burnus  <burnus@net-b.de>\n\n        * configure.ac: Check for fp_except and fp_except_t.\n        * config/fpu-sysv.h: Conditionally use either type.\n        * configure: Regenerate.\n        * config.h.in: Regenerate.\n\nFrom-SVN: r200360", "tree": {"sha": "e3fb961dfaef2cc8370285e9e55b54517901a4cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3fb961dfaef2cc8370285e9e55b54517901a4cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e99008fc24f17f93604d3980a15e7add979b560a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e99008fc24f17f93604d3980a15e7add979b560a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e99008fc24f17f93604d3980a15e7add979b560a"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "e6c2fad3f02b078d2d9f5095f2c3abdf5b00913a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "patch": "@@ -1,3 +1,10 @@\n+2013-06-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* configure.ac: Check for fp_except and fp_except_t.\n+\t* config/fpu-sysv.h: Conditionally use either type.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n 2013-06-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/fpu-sysv.h (get_fpu_except_flags): Fix typo."}, {"sha": "22fc4bab9a70f561b5296bdbb94091877856d570", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "patch": "@@ -405,6 +405,12 @@\n /* fp_enable is present */\n #undef HAVE_FP_ENABLE\n \n+/* Define to 1 if the system has the type `fp_except'. */\n+#undef HAVE_FP_EXCEPT\n+\n+/* Define to 1 if the system has the type `fp_except_t'. */\n+#undef HAVE_FP_EXCEPT_T\n+\n /* fp_trap is present */\n #undef HAVE_FP_TRAP\n "}, {"sha": "db95e9df093b0fcf15ba6dd9b572619926061453", "filename": "libgfortran/config/fpu-sysv.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2Fconfig%2Ffpu-sysv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2Fconfig%2Ffpu-sysv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-sysv.h?ref=7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "patch": "@@ -85,7 +85,13 @@ int\n get_fpu_except_flags (void)\n {\n   int result;\n+#if HAVE_FP_EXCEPT\n   fp_except set_excepts;\n+#elif HAVE_FP_EXCEPT_T\n+  fp_except_t set_excepts;\n+#else\n+  choke me\n+#endif\n \n   result = 0;\n   set_excepts = fpgetsticky ();"}, {"sha": "6c8ee5d987f5f02d9ed85a2345d948babfb5115f", "filename": "libgfortran/configure", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "patch": "@@ -25977,6 +25977,27 @@ $as_echo \"#define HAVE_FPSETMASK 1\" >>confdefs.h\n \n   fi\n \n+ac_fn_c_check_type \"$LINENO\" \"fp_except\" \"ac_cv_type_fp_except\" \"#include <ieeefp.h>\n+\"\n+if test \"x$ac_cv_type_fp_except\" = x\"\"yes; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_FP_EXCEPT 1\n+_ACEOF\n+\n+\n+fi\n+ac_fn_c_check_type \"$LINENO\" \"fp_except_t\" \"ac_cv_type_fp_except_t\" \"#include <ieeefp.h>\n+\"\n+if test \"x$ac_cv_type_fp_except_t\" = x\"\"yes; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_FP_EXCEPT_T 1\n+_ACEOF\n+\n+\n+fi\n+\n \n # Check for AIX fp_trap and fp_enable\n ac_fn_c_check_func \"$LINENO\" \"fp_trap\" \"ac_cv_func_fp_trap\""}, {"sha": "1cf06978eb9114c96a72a4ca900c0f20971f03ab", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae346c340a76c3bd83db101c72a2deb7a98ea5d/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=7ae346c340a76c3bd83db101c72a2deb7a98ea5d", "patch": "@@ -498,6 +498,7 @@ fi\n \n # Check for SysV fpsetmask\n LIBGFOR_CHECK_FPSETMASK\n+AC_CHECK_TYPES([fp_except,fp_except_t], [], [], [[#include <ieeefp.h>]])\n \n # Check for AIX fp_trap and fp_enable\n AC_CHECK_FUNC([fp_trap],[have_fp_trap=yes AC_DEFINE([HAVE_FP_TRAP],[1],[fp_trap is present])])"}]}