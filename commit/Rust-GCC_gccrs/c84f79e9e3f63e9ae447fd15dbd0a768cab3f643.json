{"sha": "c84f79e9e3f63e9ae447fd15dbd0a768cab3f643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg0Zjc5ZTllM2Y2M2U5YWU0NDdmZDE1ZGJkMGE3NjhjYWIzZjY0Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-12T07:10:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-12T07:34:16Z"}, "message": "openmp: Diagnose omp::directive/sequence on using-directive\n\nWith the using-directive parsing changes, we now emit only a warning\nfor [[omp::directive (...)]] on using-directive.  While that is right\nwithout -fopenmp/-fopenmp-simd, when OpenMP is enabled, that should\nbe an error as OpenMP (is going to) disallow such attributes there\nas they do not appertain to a statement.\n\n2021-08-12  Jakub Jelinek  <jakub@redhat.com>\n\n\t* name-lookup.c (finish_using_directive): Diagnose omp::directive\n\tor omp::sequence attributes on using-directive.\n\n\t* g++.dg/gomp/attrs-11.C: Adjust expected diagnostics.", "tree": {"sha": "5129dddf08f954314d6153bde16e0bc39a261b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5129dddf08f954314d6153bde16e0bc39a261b4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c84f79e9e3f63e9ae447fd15dbd0a768cab3f643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84f79e9e3f63e9ae447fd15dbd0a768cab3f643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84f79e9e3f63e9ae447fd15dbd0a768cab3f643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84f79e9e3f63e9ae447fd15dbd0a768cab3f643/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3890c28ac5bd03ba334a20fbf9518a37dcdbfe5d"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "8e9c61e1ee8d72a3233001339be2a13cb29babe0", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84f79e9e3f63e9ae447fd15dbd0a768cab3f643/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84f79e9e3f63e9ae447fd15dbd0a768cab3f643/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=c84f79e9e3f63e9ae447fd15dbd0a768cab3f643", "patch": "@@ -8560,6 +8560,7 @@ finish_using_directive (tree target, tree attribs)\n   add_using_namespace (current_binding_level->using_directives,\n \t\t       ORIGINAL_NAMESPACE (target));\n \n+  bool diagnosed = false;\n   if (attribs != error_mark_node)\n     for (tree a = attribs; a; a = TREE_CHAIN (a))\n       {\n@@ -8572,6 +8573,16 @@ finish_using_directive (tree target, tree attribs)\n \t      inform (DECL_SOURCE_LOCATION (target),\n \t\t      \"you can use an inline namespace instead\");\n \t  }\n+\telse if ((flag_openmp || flag_openmp_simd)\n+\t\t && get_attribute_namespace (a) == omp_identifier\n+\t\t && (is_attribute_p (\"directive\", name)\n+\t\t     || is_attribute_p (\"sequence\", name)))\n+\t  {\n+\t    if (!diagnosed)\n+\t      error (\"%<omp::%E%> not allowed to be specified in this \"\n+\t\t     \"context\", name);\n+\t    diagnosed = true;\n+\t  }\n \telse\n \t  warning (OPT_Wattributes, \"%qD attribute directive ignored\", name);\n       }"}, {"sha": "009bcb2d87f69829da73a795b7d90e6d9614dacf", "filename": "gcc/testsuite/g++.dg/gomp/attrs-11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c84f79e9e3f63e9ae447fd15dbd0a768cab3f643/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c84f79e9e3f63e9ae447fd15dbd0a768cab3f643/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-11.C?ref=c84f79e9e3f63e9ae447fd15dbd0a768cab3f643", "patch": "@@ -11,7 +11,7 @@ foo ()\n   [[omp::directive (parallel)]] __extension__ asm (\"\");\t\t// { dg-error \"expected\" }\n   __extension__ [[omp::directive (parallel)]] asm (\"\");\t\t// { dg-error \"expected\" }\n   [[omp::directive (parallel)]] namespace M = ::N;\t\t// { dg-error \"expected\" }\n-  [[omp::directive (parallel)]] using namespace N;\t\t// { dg-bogus \"expected\" \"\" { xfail *-*-* } }\n+  [[omp::directive (parallel)]] using namespace N;\t\t// { dg-error \"not allowed to be specified in this context\" }\n   [[omp::directive (parallel)]] using O::T;\t\t\t// { dg-error \"expected\" }\n   [[omp::directive (parallel)]] __label__ foo;\t\t\t// { dg-error \"expected\" }\n   [[omp::directive (parallel)]] static_assert (true, \"\");\t// { dg-error \"expected\" }"}]}