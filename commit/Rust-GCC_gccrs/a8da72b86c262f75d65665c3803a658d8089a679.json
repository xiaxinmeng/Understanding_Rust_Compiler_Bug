{"sha": "a8da72b86c262f75d65665c3803a658d8089a679", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThkYTcyYjg2YzI2MmY3NWQ2NTY2NWMzODAzYTY1OGQ4MDg5YTY3OQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-08-02T16:58:33Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-08-02T16:58:33Z"}, "message": "Add free inline summary pass after pass_early_local_passes \n\n\tPR middle-end/53321\n\tPR middle-end/53865\n\t* ipa-inline-analysis.c (inline_free_summary): Return if\n\tinline_edge_summary_vec is NULL.\n\n\t* ipa-split.c (execute_split_functions): Check if a function\n\tis inlinable only if inline_edge_summary_vec != NULL.\n\n\t* ipa.c (symtab_remove_unreachable_nodes): Restore\n\tcgraph_propagate_frequency call when something was changed.\n\t(free_inline_summary): New function.\n\t(pass_ipa_free_inline_summary): New pass.\n\n\t* passes.c (init_optimization_passes): Add\n\tpass_ipa_free_inline_summary before pass_ipa_tree_profile.\n\n\t* timevar.def (TV_IPA_FREE_INLINE_SUMMARY): New.\n\n\t* tree-pass.h (pass_ipa_free_inline_summary): New.\n\nFrom-SVN: r190090", "tree": {"sha": "d7b9cce913a50eb193504126c582c39d052a604e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7b9cce913a50eb193504126c582c39d052a604e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8da72b86c262f75d65665c3803a658d8089a679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8da72b86c262f75d65665c3803a658d8089a679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8da72b86c262f75d65665c3803a658d8089a679", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8da72b86c262f75d65665c3803a658d8089a679/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca26f665dd7204fa930dc7f6a936ac526cd66f74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca26f665dd7204fa930dc7f6a936ac526cd66f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca26f665dd7204fa930dc7f6a936ac526cd66f74"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "6839fda90ce2c41bf06cb34c9bd0298d0f8fb31b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8da72b86c262f75d65665c3803a658d8089a679", "patch": "@@ -1,3 +1,25 @@\n+2012-08-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/53321\n+\tPR middle-end/53865\n+\t* ipa-inline-analysis.c (inline_free_summary): Return if\n+\tinline_edge_summary_vec is NULL.\n+\n+\t* ipa-split.c (execute_split_functions): Check if a function\n+\tis inlinable only if inline_edge_summary_vec != NULL.\n+\n+\t* ipa.c (symtab_remove_unreachable_nodes): Restore\n+\tcgraph_propagate_frequency call when something was changed.\n+\t(free_inline_summary): New function.\n+\t(pass_ipa_free_inline_summary): New pass.\n+\n+\t* passes.c (init_optimization_passes): Add\n+\tpass_ipa_free_inline_summary before pass_ipa_tree_profile.\n+\n+\t* timevar.def (TV_IPA_FREE_INLINE_SUMMARY): New.\n+\n+\t* tree-pass.h (pass_ipa_free_inline_summary): New.\n+\n 2012-08-02  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (arm_gen_constant): Use UBFX for some AND operations when"}, {"sha": "970be1ebca2a817c4b6f3513cd2e91ab9dd80623", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=a8da72b86c262f75d65665c3803a658d8089a679", "patch": "@@ -3242,6 +3242,8 @@ void\n inline_free_summary (void)\n {\n   struct cgraph_node *node;\n+  if (inline_edge_summary_vec == NULL)\n+    return;\n   FOR_EACH_DEFINED_FUNCTION (node)\n     reset_inline_summary (node);\n   if (function_insertion_hook_holder)"}, {"sha": "7155f9965a76c8ced554a64d6ca38e9638c30e53", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=a8da72b86c262f75d65665c3803a658d8089a679", "patch": "@@ -1397,7 +1397,7 @@ execute_split_functions (void)\n     }\n   /* This can be relaxed; function might become inlinable after splitting\n      away the uninlinable part.  */\n-  if (!inline_summary (node)->inlinable)\n+  if (inline_edge_summary_vec && !inline_summary (node)->inlinable)\n     {\n       if (dump_file)\n \tfprintf (dump_file, \"Not splitting: not inlinable.\\n\");"}, {"sha": "e270591807711f7cde661500867695c67cbc8d9d", "filename": "gcc/ipa.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=a8da72b86c262f75d65665c3803a658d8089a679", "patch": "@@ -448,6 +448,11 @@ symtab_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n   verify_symtab ();\n #endif\n \n+  /* If we removed something, perhaps profile could be improved.  */\n+  if (changed && optimize && inline_edge_summary_vec)\n+    FOR_EACH_DEFINED_FUNCTION (node)\n+      cgraph_propagate_frequency (node);\n+\n   return changed;\n }\n \n@@ -960,6 +965,34 @@ struct simple_ipa_opt_pass pass_ipa_function_and_variable_visibility =\n  }\n };\n \n+/* Free inline summary.  */\n+\n+static unsigned\n+free_inline_summary (void)\n+{\n+  inline_free_summary ();\n+  return 0;\n+}\n+\n+struct simple_ipa_opt_pass pass_ipa_free_inline_summary =\n+{\n+ {\n+  SIMPLE_IPA_PASS,\n+  \"*free_inline_summary\",\t\t/* name */\n+  NULL,\t\t\t\t\t/* gate */\n+  free_inline_summary,\t\t\t/* execute */\n+  NULL,\t\t\t\t\t/* sub */\n+  NULL,\t\t\t\t\t/* next */\n+  0,\t\t\t\t\t/* static_pass_number */\n+  TV_IPA_FREE_INLINE_SUMMARY,\t\t/* tv_id */\n+  0,\t                                /* properties_required */\n+  0,\t\t\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_destroyed */\n+  0,\t\t\t\t\t/* todo_flags_start */\n+  TODO_ggc_collect\t\t\t/* todo_flags_finish */\n+ }\n+};\n+\n /* Do not re-run on ltrans stage.  */\n \n static bool"}, {"sha": "31e1f25a67d400ffc6e729c80787f9b36bcc8228", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=a8da72b86c262f75d65665c3803a658d8089a679", "patch": "@@ -1323,6 +1323,7 @@ init_optimization_passes (void)\n       NEXT_PASS (pass_rebuild_cgraph_edges);\n       NEXT_PASS (pass_inline_parameters);\n     }\n+  NEXT_PASS (pass_ipa_free_inline_summary);\n   NEXT_PASS (pass_ipa_tree_profile);\n     {\n       struct opt_pass **p = &pass_ipa_tree_profile.pass.sub;"}, {"sha": "8fa1a2bf4aa925f202009cce3a86485e6c033315", "filename": "gcc/timevar.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=a8da72b86c262f75d65665c3803a658d8089a679", "patch": "@@ -89,6 +89,7 @@ DEFTIMEVAR (TV_IPA_PURE_CONST        , \"ipa pure const\")\n DEFTIMEVAR (TV_IPA_PTA               , \"ipa points-to\")\n DEFTIMEVAR (TV_IPA_SRA               , \"ipa SRA\")\n DEFTIMEVAR (TV_IPA_FREE_LANG_DATA    , \"ipa free lang data\")\n+DEFTIMEVAR (TV_IPA_FREE_INLINE_SUMMARY, \"ipa free inline summary\")\n /* Time spent by constructing CFG.  */\n DEFTIMEVAR (TV_CFG                   , \"cfg construction\")\n /* Time spent by cleaning up CFG.  */"}, {"sha": "4be92f491af921b61f54452a05a4360e2c38507d", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8da72b86c262f75d65665c3803a658d8089a679/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=a8da72b86c262f75d65665c3803a658d8089a679", "patch": "@@ -375,6 +375,7 @@ extern struct simple_ipa_opt_pass pass_ipa_increase_alignment;\n extern struct simple_ipa_opt_pass pass_ipa_matrix_reorg;\n extern struct ipa_opt_pass_d pass_ipa_inline;\n extern struct simple_ipa_opt_pass pass_ipa_free_lang_data;\n+extern struct simple_ipa_opt_pass pass_ipa_free_inline_summary;\n extern struct ipa_opt_pass_d pass_ipa_cp;\n extern struct ipa_opt_pass_d pass_ipa_reference;\n extern struct ipa_opt_pass_d pass_ipa_pure_const;"}]}