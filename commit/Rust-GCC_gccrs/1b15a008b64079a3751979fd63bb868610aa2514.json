{"sha": "1b15a008b64079a3751979fd63bb868610aa2514", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIxNWEwMDhiNjQwNzlhMzc1MTk3OWZkNjNiYjg2ODYxMGFhMjUxNA==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2009-04-28T12:22:47Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2009-04-28T12:22:47Z"}, "message": "re PR middle-end/39922 (Revision 146817 caused many regressions on trunk)\n\n        PR middle-end/39922\n        * tree-outof-ssa.c (insert_value_copy_on_edge): Don't convert\n        constants.\n\nFrom-SVN: r146889", "tree": {"sha": "1a0b16f272f6f36b29b6bfc752b64eaf6ede66e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a0b16f272f6f36b29b6bfc752b64eaf6ede66e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b15a008b64079a3751979fd63bb868610aa2514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b15a008b64079a3751979fd63bb868610aa2514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b15a008b64079a3751979fd63bb868610aa2514", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b15a008b64079a3751979fd63bb868610aa2514/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7569a6cc2a7a381ea23f17a2a705b7e5c39e9569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7569a6cc2a7a381ea23f17a2a705b7e5c39e9569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7569a6cc2a7a381ea23f17a2a705b7e5c39e9569"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "00e0c6a994f89d50f7a954d0d65420d7247f62d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b15a008b64079a3751979fd63bb868610aa2514/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b15a008b64079a3751979fd63bb868610aa2514/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b15a008b64079a3751979fd63bb868610aa2514", "patch": "@@ -1,3 +1,9 @@\n+2009-04-28  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/39922\n+\t* tree-outof-ssa.c (insert_value_copy_on_edge): Don't convert\n+\tconstants.\n+\n 2009-04-28  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vect-stmts.c (vect_get_vec_def_for_operand): Fix"}, {"sha": "41638d836039c8b95055f88b770e88cabe2b351a", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b15a008b64079a3751979fd63bb868610aa2514/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b15a008b64079a3751979fd63bb868610aa2514/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=1b15a008b64079a3751979fd63bb868610aa2514", "patch": "@@ -184,7 +184,7 @@ insert_value_copy_on_edge (edge e, int dest, tree src)\n   start_sequence ();\n   mode = GET_MODE (SA.partition_to_pseudo[dest]);\n   x = expand_expr (src, SA.partition_to_pseudo[dest], mode, EXPAND_NORMAL);\n-  if (GET_MODE (x) != mode)\n+  if (GET_MODE (x) != VOIDmode && GET_MODE (x) != mode)\n     x = convert_to_mode (mode, x, TYPE_UNSIGNED (TREE_TYPE (src)));\n   if (x != SA.partition_to_pseudo[dest])\n     emit_move_insn (SA.partition_to_pseudo[dest], x);"}]}