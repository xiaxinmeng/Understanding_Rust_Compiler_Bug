{"sha": "0c6390fae9478618548c4d4c64483b85ae9f28ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2MzkwZmFlOTQ3ODYxODU0OGM0ZDRjNjQ0ODNiODVhZTlmMjhhYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-01-28T03:38:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-01-28T03:38:41Z"}, "message": "re PR target/38941 (CX isn't preserved with shift)\n\n2009-01-27  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/38941\n\t* doc/extend.texi: Improve local variable with asm reg.\n\nFrom-SVN: r143719", "tree": {"sha": "c28aea5a229761267ff4a52bd552f902c42784ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c28aea5a229761267ff4a52bd552f902c42784ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c6390fae9478618548c4d4c64483b85ae9f28ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6390fae9478618548c4d4c64483b85ae9f28ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6390fae9478618548c4d4c64483b85ae9f28ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6390fae9478618548c4d4c64483b85ae9f28ac/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bee6fa6d32b8a231cae2af0cf700456d827a507e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bee6fa6d32b8a231cae2af0cf700456d827a507e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bee6fa6d32b8a231cae2af0cf700456d827a507e"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "ad51b27b671f7872fa25297feaefdd36e2c705a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6390fae9478618548c4d4c64483b85ae9f28ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6390fae9478618548c4d4c64483b85ae9f28ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c6390fae9478618548c4d4c64483b85ae9f28ac", "patch": "@@ -1,3 +1,8 @@\n+2009-01-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/38941\n+\t* doc/extend.texi: Improve local variable with asm reg.\n+\n 2009-01-27  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* c.opt (Wpacked-bitfield-compat): Change init value to -1."}, {"sha": "c2c1381901557e9583c764608e41667710406221", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6390fae9478618548c4d4c64483b85ae9f28ac/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6390fae9478618548c4d4c64483b85ae9f28ac/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=0c6390fae9478618548c4d4c64483b85ae9f28ac", "patch": "@@ -4852,6 +4852,8 @@ asm (\"sysint\" : \"=r\" (result) : \"0\" (p1), \"r\" (p2));\n In the above example, beware that a register that is call-clobbered by\n the target ABI will be overwritten by any function call in the\n assignment, including library calls for arithmetic operators.\n+Also a register may be clobbered when generating some operations,\n+like variable shift, memory copy or memory move on x86.\n Assuming it is a call-clobbered register, this may happen to @code{r0}\n above by the assignment to @code{p2}.  If you have to use such a\n register, use temporary variables for expressions between the register"}]}