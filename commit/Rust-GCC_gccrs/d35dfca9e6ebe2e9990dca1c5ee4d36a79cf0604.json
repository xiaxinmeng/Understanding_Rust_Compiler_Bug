{"sha": "d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1ZGZjYTllNmViZTJlOTk5MGRjYTFjNWVlNGQzNmE3OWNmMDYwNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2002-05-30T20:20:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-05-30T20:20:28Z"}, "message": "flow.c (propagate_one_insn): Revise yesterday's patch.\n\n        * flow.c (propagate_one_insn): Revise yesterday's patch.  Delete\n        a dead insn with a REG_RETVAL note when the entire libcall is not\n        dead and remove the associated REG_LIBCALL note at the same time.\n\nFrom-SVN: r54065", "tree": {"sha": "d6477ccdc3c648dfc1d17513d3af2b0fa2ff2bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6477ccdc3c648dfc1d17513d3af2b0fa2ff2bf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604/comments", "author": null, "committer": null, "parents": [{"sha": "81b40b72d1e15987d2a04ecead8e14de4694a5dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81b40b72d1e15987d2a04ecead8e14de4694a5dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81b40b72d1e15987d2a04ecead8e14de4694a5dd"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "2bc6148b635bf4eb788a672c4d727bc6cbbf1aef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604", "patch": "@@ -1,3 +1,9 @@\n+2002-05-30  Jeff Law <law@redhat.com>\n+\n+\t* flow.c (propagate_one_insn): Revise yesterday's patch.  Delete\n+\ta dead insn with a REG_RETVAL note when the entire libcall is not\n+\tdead and remove the associated REG_LIBCALL note at the same time.\n+\n Thu May 30 19:54:30 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* lcm.c (output.h): #include."}, {"sha": "78cd43990aa9fb91ddf27f4fea8611b0d8c2f689", "filename": "gcc/flow.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=d35dfca9e6ebe2e9990dca1c5ee4d36a79cf0604", "patch": "@@ -1643,8 +1643,27 @@ propagate_one_insn (pbi, insn)\n \n       if (libcall_is_dead)\n \tprev = propagate_block_delete_libcall ( insn, note);\n-      else if (!note)\n-\tpropagate_block_delete_insn (insn);\n+      else\n+\t{\n+\n+\t  if (note)\n+\t    {\n+\t      /* If INSN contains a RETVAL note and is dead, but the libcall\n+\t\t as a whole is not dead, then we want to remove INSN, but\n+\t\t not the whole libcall sequence.\n+\n+\t\t However, we need to also remove the dangling REG_LIBCALL\t\n+\t\t note so that we do not have mis-matched LIBCALL/RETVAL\n+\t\t notes.  In theory we could find a new location for the\n+\t\t REG_RETVAL note, but it hardly seems worth the effort.  */\n+\t      rtx libcall_note;\n+\t \n+\t      libcall_note\n+\t\t= find_reg_note (XEXP (note, 0), REG_LIBCALL, NULL_RTX);\n+\t      remove_note (XEXP (note, 0), libcall_note);\n+\t    }\n+\t  propagate_block_delete_insn (insn);\n+\t}\n \n       return prev;\n     }"}]}