{"sha": "0c27e2d89b13856a0d04a4405f78d5850c4f7eab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMyN2UyZDg5YjEzODU2YTBkMDRhNDQwNWY3OGQ1ODUwYzRmN2VhYg==", "commit": {"author": {"name": "Wei Guozhi", "email": "carrot@google.com", "date": "2011-04-08T09:17:42Z"}, "committer": {"name": "Wei Guozhi", "email": "carrot@gcc.gnu.org", "date": "2011-04-08T09:17:42Z"}, "message": "arm-protos.h (arm_attr_length_push_multi): New prototype.\n\n\t* config/arm/arm-protos.h (arm_attr_length_push_multi): New prototype.\n\t* config/arm/arm.c (arm_attr_length_push_multi): New function.\n\t* config/arm/arm.md (*push_multi): Change the length computation to\n\tcall a C function.\n\nFrom-SVN: r172169", "tree": {"sha": "be5240f3b06afa52622ec493f89a65af400cff15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be5240f3b06afa52622ec493f89a65af400cff15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c27e2d89b13856a0d04a4405f78d5850c4f7eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c27e2d89b13856a0d04a4405f78d5850c4f7eab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c27e2d89b13856a0d04a4405f78d5850c4f7eab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/comments", "author": {"login": "weiguozhi", "id": 57237827, "node_id": "MDQ6VXNlcjU3MjM3ODI3", "avatar_url": "https://avatars.githubusercontent.com/u/57237827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiguozhi", "html_url": "https://github.com/weiguozhi", "followers_url": "https://api.github.com/users/weiguozhi/followers", "following_url": "https://api.github.com/users/weiguozhi/following{/other_user}", "gists_url": "https://api.github.com/users/weiguozhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiguozhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiguozhi/subscriptions", "organizations_url": "https://api.github.com/users/weiguozhi/orgs", "repos_url": "https://api.github.com/users/weiguozhi/repos", "events_url": "https://api.github.com/users/weiguozhi/events{/privacy}", "received_events_url": "https://api.github.com/users/weiguozhi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07c5f94e8209f6c52ac32a94cc234182dd6f10d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c5f94e8209f6c52ac32a94cc234182dd6f10d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07c5f94e8209f6c52ac32a94cc234182dd6f10d2"}], "stats": {"total": 59, "additions": 38, "deletions": 21}, "files": [{"sha": "3162967c67b9030ce4e2b8eb0baf4d6533d7a5fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c27e2d89b13856a0d04a4405f78d5850c4f7eab", "patch": "@@ -1,3 +1,11 @@\n+2011-04-08  Wei Guozhi  <carrot@google.com>\n+\n+\tPR target/47855\n+\t* config/arm/arm-protos.h (arm_attr_length_push_multi): New prototype.\n+\t* config/arm/arm.c (arm_attr_length_push_multi): New function.\n+\t* config/arm/arm.md (*push_multi): Change the length computation to\n+\tcall a C function.\n+\n 2011-04-08  Anatoly Sokolov  <aesok@post.ru>\n \n \t* doc/tm.texi.in (ASM_OUTPUT_BSS): Remove documentation."}, {"sha": "c8cadf34d990b365e1e13b148494279d7b3c5bc8", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=0c27e2d89b13856a0d04a4405f78d5850c4f7eab", "patch": "@@ -152,6 +152,7 @@ extern void arm_expand_sync (enum machine_mode, struct arm_sync_generator *,\n extern const char *arm_output_memory_barrier (rtx *);\n extern const char *arm_output_sync_insn (rtx, rtx *);\n extern unsigned int arm_sync_loop_insns (rtx , rtx *);\n+extern int arm_attr_length_push_multi(rtx, rtx);\n \n #if defined TREE_CODE\n extern void arm_init_cumulative_args (CUMULATIVE_ARGS *, tree, rtx, tree);"}, {"sha": "44c8e2fd9a272f97ac48be9911e0e77a91e0bee4", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=0c27e2d89b13856a0d04a4405f78d5850c4f7eab", "patch": "@@ -23696,4 +23696,30 @@ arm_preferred_rename_class (reg_class_t rclass)\n     return NO_REGS;\n }\n \n+/* Compute the atrribute \"length\" of insn \"*push_multi\".\n+   So this function MUST be kept in sync with that insn pattern.  */\n+int\n+arm_attr_length_push_multi(rtx parallel_op, rtx first_op)\n+{\n+  int i, regno, hi_reg;\n+  int num_saves = XVECLEN (parallel_op, 0);\n+\n+  /* ARM mode.  */\n+  if (TARGET_ARM)\n+    return 4;\n+\n+  /* Thumb2 mode.  */\n+  regno = REGNO (first_op);\n+  hi_reg = (REGNO_REG_CLASS (regno) == HI_REGS) && (regno != LR_REGNUM);\n+  for (i = 1; i < num_saves && !hi_reg; i++)\n+    {\n+      regno = REGNO (XEXP (XVECEXP (parallel_op, 0, i), 0));\n+      hi_reg |= (REGNO_REG_CLASS (regno) == HI_REGS) && (regno != LR_REGNUM);\n+    }\n+\n+  if (!hi_reg)\n+    return 2;\n+  return 4;\n+}\n+\n #include \"gt-arm.h\""}, {"sha": "e54acc72ea69c300b01d84dc56a29c9797043fca", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c27e2d89b13856a0d04a4405f78d5850c4f7eab/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=0c27e2d89b13856a0d04a4405f78d5850c4f7eab", "patch": "@@ -10249,6 +10249,8 @@\n ;; Push multiple registers to the stack.  Registers are in parallel (use ...)\n ;; expressions.  For simplicity, the first register is also in the unspec\n ;; part.\n+;; To avoid the usage of GNU extension, the length attribute is computed\n+;; in a C function arm_attr_length_push_multi.\n (define_insn \"*push_multi\"\n   [(match_parallel 2 \"multi_register_push\"\n     [(set (match_operand:BLK 0 \"memory_operand\" \"=m\")\n@@ -10290,27 +10292,7 @@\n   }\"\n   [(set_attr \"type\" \"store4\")\n    (set (attr \"length\")\n-\t(if_then_else\n-\t   (and (ne (symbol_ref \"TARGET_THUMB2\") (const_int 0))\n-\t\t(ne (symbol_ref \"{\n-\t\t    /* Check if there are any high register (except lr)\n-\t\t       references in the list. KEEP the following iteration\n-\t\t       in sync with the template above.  */\n-\t\t    int i, regno, hi_reg;\n-\t\t    int num_saves = XVECLEN (operands[2], 0);\n-\t\t    regno = REGNO (operands[1]);\n-\t\t    hi_reg = (REGNO_REG_CLASS (regno) == HI_REGS)\n-\t\t\t     && (regno != LR_REGNUM);\n-\t\t    for (i = 1; i < num_saves && !hi_reg; i++)\n-\t\t      {\n-\t\t\tregno = REGNO (XEXP (XVECEXP (operands[2], 0, i), 0));\n-\t\t\thi_reg |= (REGNO_REG_CLASS (regno) == HI_REGS)\n-\t\t\t\t  && (regno != LR_REGNUM);\n-\t\t      }\n-\t\t    !hi_reg;    }\")\n-\t\t  (const_int 0)))\n-\t   (const_int 2)\n-\t   (const_int 4)))]\n+\t(symbol_ref \"arm_attr_length_push_multi (operands[2], operands[1])\"))]\n )\n \n (define_insn \"stack_tie\""}]}