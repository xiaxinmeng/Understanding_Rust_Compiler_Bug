{"sha": "11150b7c05c06b5885bfc95045699baf5e5d2a34", "node_id": "C_kwDOANBUbNoAKDExMTUwYjdjMDVjMDZiNTg4NWJmYzk1MDQ1Njk5YmFmNWU1ZDJhMzQ", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-02-04T23:02:31Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-06T08:47:21Z"}, "message": "gccrs: Remove bad error message on checking function arguments\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>\n\ngcc/rust/ChangeLog:\n\n\t* typecheck/rust-tyty-call.cc (TypeCheckCallExpr::visit): remove error message\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/func3.rs: update test case", "tree": {"sha": "7269671ec3d69f62172dd3a6598b3a88ec62b4f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7269671ec3d69f62172dd3a6598b3a88ec62b4f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11150b7c05c06b5885bfc95045699baf5e5d2a34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11150b7c05c06b5885bfc95045699baf5e5d2a34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11150b7c05c06b5885bfc95045699baf5e5d2a34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11150b7c05c06b5885bfc95045699baf5e5d2a34/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9754a60623c5a3a8df0d32600345dd310812bec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9754a60623c5a3a8df0d32600345dd310812bec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9754a60623c5a3a8df0d32600345dd310812bec1"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "67e2866cbce70a07be152bb5ef1f04eec056a897", "filename": "gcc/rust/typecheck/rust-tyty-call.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11150b7c05c06b5885bfc95045699baf5e5d2a34/gcc%2Frust%2Ftypecheck%2Frust-tyty-call.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11150b7c05c06b5885bfc95045699baf5e5d2a34/gcc%2Frust%2Ftypecheck%2Frust-tyty-call.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-call.cc?ref=11150b7c05c06b5885bfc95045699baf5e5d2a34", "patch": "@@ -140,8 +140,6 @@ TypeCheckCallExpr::visit (FnType &type)\n \t    argument->get_locus ());\n \t  if (resolved_argument_type->get_kind () == TyTy::TypeKind::ERROR)\n \t    {\n-\t      rust_error_at (argument->get_locus (),\n-\t\t\t     \"Type Resolution failure on parameter\");\n \t      return;\n \t    }\n \t}\n@@ -193,8 +191,6 @@ TypeCheckCallExpr::visit (FnPtr &type)\n \tTyWithLocation (argument_expr_tyty, arg_locus), argument->get_locus ());\n       if (resolved_argument_type->get_kind () == TyTy::TypeKind::ERROR)\n \t{\n-\t  rust_error_at (argument->get_locus (),\n-\t\t\t \"Type Resolution failure on parameter\");\n \t  return;\n \t}\n \n@@ -301,7 +297,6 @@ TypeCheckMethodCallExpr::check (FnType &type)\n \tTyWithLocation (argument_expr_tyty, arg_locus), arg_locus);\n       if (resolved_argument_type->get_kind () == TyTy::TypeKind::ERROR)\n \t{\n-\t  rust_error_at (arg_locus, \"Type Resolution failure on parameter\");\n \t  return new ErrorType (type.get_ref ());\n \t}\n "}, {"sha": "002e5c90ab5cb1f5183d75c7e8a7354ea131995e", "filename": "gcc/testsuite/rust/compile/func3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11150b7c05c06b5885bfc95045699baf5e5d2a34/gcc%2Ftestsuite%2Frust%2Fcompile%2Ffunc3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11150b7c05c06b5885bfc95045699baf5e5d2a34/gcc%2Ftestsuite%2Frust%2Fcompile%2Ffunc3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ffunc3.rs?ref=11150b7c05c06b5885bfc95045699baf5e5d2a34", "patch": "@@ -5,5 +5,4 @@ fn test(a: i32, b: i32) -> i32 {\n fn main() {\n     let a = test(1, true);\n     // { dg-error \"expected .i32. got .bool.\" \"\" { target *-*-* } .-1 }\n-    // { dg-error \"Type Resolution failure on parameter\" \"\" { target *-*-* } .-2 }\n }"}]}