{"sha": "0e6928d853c6c6a016b31b765ebafce7acbbc65e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU2OTI4ZDg1M2M2YzZhMDE2YjMxYjc2NWViYWZjZTdhY2JiYzY1ZQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-09-01T21:07:39Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-09-01T21:07:39Z"}, "message": "re PR fortran/16400 (Invalid usage of assumed-size arrays is not rejected)\n\nfortran/\nPR fortran/16400\nPR fortran/16404\n(port from g95)\n* resolve.c (resolve_transfer): New function.\n(resolve_code): Call resolve_transfer in case of EXEC_TRANSFER.\n\ntestsuite/\nPR fortran/16404\n* gfortran.dg/der_io_1.f90: XFAIL illegal testcase.\n\nFrom-SVN: r86931", "tree": {"sha": "e3688cf5d4dc593217f3825bf0ea12d91f2c0f29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3688cf5d4dc593217f3825bf0ea12d91f2c0f29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e6928d853c6c6a016b31b765ebafce7acbbc65e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e6928d853c6c6a016b31b765ebafce7acbbc65e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e6928d853c6c6a016b31b765ebafce7acbbc65e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e6928d853c6c6a016b31b765ebafce7acbbc65e/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d9901e75f19dfd34480c4cf25859b7d4a3bff01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9901e75f19dfd34480c4cf25859b7d4a3bff01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d9901e75f19dfd34480c4cf25859b7d4a3bff01"}], "stats": {"total": 80, "additions": 76, "deletions": 4}, "files": [{"sha": "1c792b97a493bc8590594f4b3530ec107950b7f5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e6928d853c6c6a016b31b765ebafce7acbbc65e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e6928d853c6c6a016b31b765ebafce7acbbc65e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0e6928d853c6c6a016b31b765ebafce7acbbc65e", "patch": "@@ -1,3 +1,11 @@\n+2004-09-01  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/16400\n+\tPR fortran/16404\n+\t(port from g95)\n+\t* resolve.c (resolve_transfer): New function.\n+\t(resolve_code): Call resolve_transfer in case of EXEC_TRANSFER.\n+\n 2004-08-31  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/16579"}, {"sha": "1a7fd80c2b303bf775370273d5146c03b7cad128", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 59, "deletions": 1, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e6928d853c6c6a016b31b765ebafce7acbbc65e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e6928d853c6c6a016b31b765ebafce7acbbc65e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0e6928d853c6c6a016b31b765ebafce7acbbc65e", "patch": "@@ -2962,6 +2962,61 @@ resolve_select (gfc_code * code)\n }\n \n \n+/* Resolve a transfer statement. This is making sure that:\n+   -- a derived type being transferred has only non-pointer components\n+   -- a derived type being transferred doesn't have private components\n+   -- we're not trying to transfer a whole assumed size array.  */\n+\n+static void\n+resolve_transfer (gfc_code * code)\n+{\n+  gfc_typespec *ts;\n+  gfc_symbol *sym;\n+  gfc_ref *ref;\n+  gfc_expr *exp;\n+\n+  exp = code->expr;\n+\n+  if (exp->expr_type != EXPR_VARIABLE)\n+    return;\n+\n+  sym = exp->symtree->n.sym;\n+  ts = &sym->ts;\n+\n+  /* Go to actual component transferred.  */\n+  for (ref = code->expr->ref; ref; ref = ref->next)\n+    if (ref->type == REF_COMPONENT)\n+      ts = &ref->u.c.component->ts;\n+\n+  if (ts->type == BT_DERIVED)\n+    {\n+      /* Check that transferred derived type doesn't contain POINTER\n+\t components.  */\n+      if (derived_pointer (ts->derived))\n+\t{\n+\t  gfc_error (\"Data transfer element at %L cannot have \"\n+\t\t     \"POINTER components\", &code->loc);\n+\t  return;\n+\t}\n+\n+      if (ts->derived->component_access == ACCESS_PRIVATE)\n+\t{\n+\t  gfc_error (\"Data transfer element at %L cannot have \"\n+\t\t     \"PRIVATE components\",&code->loc);\n+\t  return;\n+\t}\n+    }\n+\n+  if (sym->as != NULL && sym->as->type == AS_ASSUMED_SIZE\n+      && exp->ref->type == REF_ARRAY && exp->ref->u.ar.type == AR_FULL)\n+    {\n+      gfc_error (\"Data transfer element at %L cannot be a full reference to \"\n+\t\t \"an assumed-size array\", &code->loc);\n+      return;\n+    }\n+}\n+\n+\n /*********** Toplevel code resolution subroutines ***********/\n \n /* Given a branch to a label and a namespace, if the branch is conforming.\n@@ -3568,7 +3623,6 @@ resolve_code (gfc_code * code, gfc_namespace * ns)\n \tcase EXEC_EXIT:\n \tcase EXEC_CONTINUE:\n \tcase EXEC_DT_END:\n-\tcase EXEC_TRANSFER:\n \tcase EXEC_ENTRY:\n \t  break;\n \n@@ -3754,6 +3808,10 @@ resolve_code (gfc_code * code, gfc_namespace * ns)\n \t  resolve_branch (code->ext.dt->eor, code);\n \t  break;\n \n+\tcase EXEC_TRANSFER:\n+\t  resolve_transfer (code);\n+\t  break;\n+\n \tcase EXEC_FORALL:\n \t  resolve_forall_iterators (code->ext.forall_iterator);\n "}, {"sha": "ba2a71374773664b8108dcff620e981dc3a98d47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e6928d853c6c6a016b31b765ebafce7acbbc65e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e6928d853c6c6a016b31b765ebafce7acbbc65e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e6928d853c6c6a016b31b765ebafce7acbbc65e", "patch": "@@ -1,3 +1,8 @@\n+2004-09-01  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/16404\n+\t* gfortran.dg/der_io_1.f90: XFAIL illegal testcase.\n+\n 2004-09-01  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \tPR c/1522"}, {"sha": "4cbbf772cf60f3fe0bad26c0ed7de22ab895c784", "filename": "gcc/testsuite/gfortran.dg/der_io_1.f90", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e6928d853c6c6a016b31b765ebafce7acbbc65e/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e6928d853c6c6a016b31b765ebafce7acbbc65e/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_io_1.f90?ref=0e6928d853c6c6a016b31b765ebafce7acbbc65e", "patch": "@@ -1,5 +1,6 @@\n-! { dg-do run }\n-! IO of derived types containing pointers\n+! { dg-do compile }\n+! PR 16404 Nr. 8\n+! IO of derived types containing pointers is not allowed\n program der_io_1\n   type t\n     integer, pointer :: p\n@@ -10,7 +11,7 @@ program der_io_1\n \n   v%p => i\n   i = 42\n-  write (unit=s, fmt='(I2)') v\n+  write (unit=s, fmt='(I2)') v ! { dg-error \"POINTER components\" \"\" }\n   if (s .ne. '42') call abort ()\n end program\n "}]}