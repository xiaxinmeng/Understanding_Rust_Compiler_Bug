{"sha": "56bf1fd97aba55f54aa2ccc73768fc6160210d6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZiZjFmZDk3YWJhNTVmNTRhYTJjY2M3Mzc2OGZjNjE2MDIxMGQ2ZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-10-23T01:29:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-23T01:29:14Z"}, "message": "toplev.c (flag_exceptions): Default value is 2.\n\n        * toplev.c (flag_exceptions): Default value is 2.\n        (compile_file): If flag_exceptions still has the value 2, then\n        set it to 0.\n\n        * lex.c (lang_init): Enable flag_exceptions by default if no\n        command line switch was specified.\nGross hacks to allow front-ends to override -fexceptions.\n\nFrom-SVN: r16152", "tree": {"sha": "babd25bf79e9fcc763c8463bebd28400d95b08da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/babd25bf79e9fcc763c8463bebd28400d95b08da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56bf1fd97aba55f54aa2ccc73768fc6160210d6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bf1fd97aba55f54aa2ccc73768fc6160210d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56bf1fd97aba55f54aa2ccc73768fc6160210d6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/comments", "author": null, "committer": null, "parents": [{"sha": "1181d2d55377707551ac43b20ca7ebb4e253dddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1181d2d55377707551ac43b20ca7ebb4e253dddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1181d2d55377707551ac43b20ca7ebb4e253dddc"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "d104b6fd7eb925b6bb9e3d06fa933e77c37ff4cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56bf1fd97aba55f54aa2ccc73768fc6160210d6e", "patch": "@@ -1,5 +1,9 @@\n Wed Oct 22 00:34:12 1997  Jeffrey A Law  (law@cygnus.com)\n \n+\t* toplev.c (flag_exceptions): Default value is 2.\n+\t(compile_file): If flag_exceptions still has the value 2, then\n+\tset it to 0.\n+\n \t* rs6000.c (struct machine_function): Add pic_offset_table_rtx.\n \t(rs6000_save_machine_status): Save pic_offset_table_rtx.\n \t(rs6000_restore_machine_status: Restore pic_offset_table_rtx."}, {"sha": "3185f28c6b42de5a3256da67bbef82cdd07a71c0", "filename": "gcc/cp/ChangeLog.egcs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/gcc%2Fcp%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/gcc%2Fcp%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog.egcs?ref=56bf1fd97aba55f54aa2ccc73768fc6160210d6e", "patch": "@@ -1,3 +1,8 @@\n+Wed Oct 22 18:56:31 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* lex.c (lang_init): Enable flag_exceptions by default if no\n+\tcommand line switch was specified.\n+\n Wed Sep 10 16:39:26 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* Make-lang.in (LN, LN_S): New macros, use where appropriate."}, {"sha": "3d17fa35634516fd3c0f4db42af1c0a9c030b6eb", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=56bf1fd97aba55f54aa2ccc73768fc6160210d6e", "patch": "@@ -387,6 +387,10 @@ lang_init ()\n   put_back (check_newline ());\n   if (flag_gnu_xref) GNU_xref_begin (input_filename);\n   init_repo (input_filename);\n+\n+  /* See comments in toplev.c before the call to lang_init.  */\n+  if (flag_exceptions == 2)\n+    flag_exceptions = 1;\n }\n \n void"}, {"sha": "9fabc8f3a5512d45eb58870a08859c5e6b04251a", "filename": "gcc/toplev.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bf1fd97aba55f54aa2ccc73768fc6160210d6e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=56bf1fd97aba55f54aa2ccc73768fc6160210d6e", "patch": "@@ -551,7 +551,7 @@ int flag_pic;\n /* Nonzero means generate extra code for exception handling and enable\n    exception handling.  */\n \n-int flag_exceptions = 1;\n+int flag_exceptions = 2;\n \n /* Nonzero means don't place uninitialized global data in common storage\n    by default.  */\n@@ -2361,10 +2361,32 @@ compile_file (name)\n   input_file_stack->next = 0;\n   input_file_stack->name = input_filename;\n \n+  /* Gross. Gross.  lang_init is (I think) the first callback into\n+     the language front end, and is thus the first opportunity to\n+     have the selected language override the default value for any\n+     -f option.\n+\n+     So the default value for flag_exceptions is 2 (uninitialized).\n+     If we encounter -fno-exceptions or -fexceptions, then flag_exceptions\n+     will be set to zero or one respectively.\n+\n+     flag_exceptions can also be set by lang_init to something other\n+     than the default \"uninitialized\" value of 2.\n+\n+     After lang_init, if the value is still 2, then we default to\n+     -fno-exceptions (value will be reset to zero).\n+\n+     When our EH mechanism is low enough overhead that we can enable\n+     it by default for languages other than C++, then all this braindamage\n+     will go away.  */\n+  \n   /* Perform language-specific initialization.\n      This may set main_input_filename.  */\n   lang_init ();\n \n+  if (flag_exceptions == 2)\n+    flag_exceptions = 0;\n+     \n   /* If the input doesn't start with a #line, use the input name\n      as the official input file name.  */\n   if (main_input_filename == 0)"}]}