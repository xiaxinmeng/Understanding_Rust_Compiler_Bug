{"sha": "2c7f9cc0766065cd7d1e5788a18b43b5c0d8b023", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM3ZjljYzA3NjYwNjVjZDdkMWU1Nzg4YTE4YjQzYjVjMGQ4YjAyMw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2011-08-06T10:07:58Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2011-08-06T10:07:58Z"}, "message": "Remove conflict marker\n\nFrom-SVN: r177507", "tree": {"sha": "17d2c2487c9088e3317a00fbecf6867f6aae2581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17d2c2487c9088e3317a00fbecf6867f6aae2581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c7f9cc0766065cd7d1e5788a18b43b5c0d8b023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7f9cc0766065cd7d1e5788a18b43b5c0d8b023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c7f9cc0766065cd7d1e5788a18b43b5c0d8b023", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7f9cc0766065cd7d1e5788a18b43b5c0d8b023/comments", "author": null, "committer": null, "parents": [{"sha": "e2852612bfafd06e567df75699333fc27745a9c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2852612bfafd06e567df75699333fc27745a9c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2852612bfafd06e567df75699333fc27745a9c2"}], "stats": {"total": 51, "additions": 25, "deletions": 26}, "files": [{"sha": "467bf3683e56adb4e698596d046daffdd692ddf9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 26, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c7f9cc0766065cd7d1e5788a18b43b5c0d8b023/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c7f9cc0766065cd7d1e5788a18b43b5c0d8b023/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2c7f9cc0766065cd7d1e5788a18b43b5c0d8b023", "patch": "@@ -246,7 +246,6 @@\n \tnecessary.\n \t* put_scos.adb: Code simplification based on above change.\n \n->>>>>>> .r177446\n 2011-08-05  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, gnatcmd.adb, switch-c.adb, exp_attr.adb, make.adb,\n@@ -372,7 +371,7 @@\n 2011-08-05  Steve Baird  <baird@adacore.com>\n \n \t* bindgen.adb (Gen_CodePeer_Wrapper): Call Ada_Main_Program instead\n-\tof calling the user-defined main subprogram. \n+\tof calling the user-defined main subprogram.\n \t(Gen_Main):  Declare Ada_Main_Program and (if CodePeer_Mode\n \tis set) Call_Main_Subprogram ahead of, as opposed to\n \tinside of, Main.\n@@ -1783,7 +1782,7 @@\n 2011-08-04  Nicolas Roche  <roche@adacore.com>\n \n \t* env.c (__gnat_clearenv): Avoid use of dynamic size array in order to\n-\tremove need for GCC exceptions. \n+\tremove need for GCC exceptions.\n \n 2011-08-04  Vincent Celier  <celier@adacore.com>\n \n@@ -1841,7 +1840,7 @@\n \t* gcc-interface/decl.c (gnat_to_gnu_entity): Do not set Esize if it\n \tis not known.\n \t<E_Record_Type>: Look at the RM size instead of the Esize.  Remove\n-\tobsolete block.  \n+\tobsolete block.\n \tLook at the RM size instead of the Esize for types if the latter is\n \tnot known.\n \t(gnat_to_gnu_field): Use Known_Esize instead of Known_Static_Esize.\n@@ -2197,7 +2196,7 @@\n \tGen_Adafinal_Ada.\n \t(Gen_Output_File_C): Generate __attribute__((destructor)) for Ada_Final\n \tif -a is specified.  Call Gen_Elab_Externals_C.  Remove useless couple\n-\tof external declarations. \ufffdCall Gen_Finalize_Library_C.\n+\tof external declarations.  Call Gen_Finalize_Library_C.\n \n 2011-08-04  Emmanuel Briot  <briot@adacore.com>\n \n@@ -2971,7 +2970,7 @@\n \tSystem.Finalization_Implementation are no longer a GNAT unit.\n \tUpdate the range of type Ada_Finalization_Child. Remove the following\n \trecoverable entities:\n-\t\n+\n \t   RE_Attach_To_Final_List\n \t   RE_Deep_Tag_Attach\n \t   RE_Finalize_List\n@@ -2983,9 +2982,9 @@\n \t   RE_Move_Final_List\n \t   RE_Record_Controller\n \t   RE_Simple_List_Controller\n-\t\n+\n \tAdd the following recoverable entities:\n-\t\n+\n \t   RE_Add_Offset_To_Address\n \t   RE_Allocate\n \t   RE_Base_Pool\n@@ -3060,17 +3059,17 @@\n \t(Coextensions): Removed along with its pragma Inline.\n \t(Set_Coextensions): Removed along with its pragma Inline.\n \t* snames.ads-tmpl: Remove names\n-\t\n+\n \t  Name_uClean\n \t  Name_uController\n \t  Name_uFinal_List\n \t  Name_uLocal_Final_List\n \t  Name_Finalization_Root\n \t  Name_Next\n \t  Name_Prev\n-\t\n+\n \tAdd names\n-\t\n+\n \t  Name_uFinalizer\n \t  Name_Finalize_Address\n \t* s-pooglo.adb (Allocate): Add overriding indicator.\n@@ -3315,7 +3314,7 @@\n \n \t* inline.adb (Add_Inlined_Subprogram): Do not consider the enclosing\n \tcode unit to decide whether to add internally generated subprograms.\n-\t\n+\n 2011-08-03  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_aux.ads, sem_aux.adb (Is_VM_By_Copy_Actual): New subprogram.\n@@ -5698,7 +5697,7 @@\n \t* sem_util.ads, sem_util.adb, par.adb, par_util.adb\n \t(Formal_Error_Msg, Formal_Error_Msg_N, Formal_Error_Msg_SP): move\n \tprocedures out of these packages.\n-\t* errout.ads, errout.adb \n+\t* errout.ads, errout.adb\n \t(Formal_Error_Msg, Formal_Error_Msg_N, Formal_Error_Msg_SP): move\n \tprocedures in of this package\n \t(Formal_Error_Msg_NE): new procedure for wrapper on Error_Msg_NE\n@@ -5915,7 +5914,7 @@\n \t* debug.adb (d.D) reverve flag for the SPARK mode\n \t(d.E) reverve flag for SPARK generation mode\n \t(d.F) reverve flag for Why generation mode\n-\t* opt.ads, opt.adb (ALFA_Mode, ALFA_Through_SPARK_Mode, \n+\t* opt.ads, opt.adb (ALFA_Mode, ALFA_Through_SPARK_Mode,\n \tALFA_Through_Why_Mode, Formal_Verification_Mode, SPARK_Mode):  New\n \tfunctions which return True when the corresponding modes are set\n \t(Formal_Language): return \"spark\" or \"alfa\" when in formal verification\n@@ -6685,7 +6684,7 @@\n \t(pos_to_constructor): Likewise.\n \n 2011-05-03  Nathan Froyd  <froydnj@codesourcery.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (gigi): Call build_function_type_list instead\n \tof build_function_type.  Adjust calls to...\n@@ -6886,8 +6885,8 @@\n \tof incomplete types in this invocation.\n \n 2011-04-01  Olivier Hainque  <hainque@adacore.com>\n-            Nicolas Setton  <setton@adacore.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Nicolas Setton  <setton@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/misc.c (gnat_descriptive_type): New function.\n \t(LANG_HOOKS_DESCRIPTIVE_TYPE): Redefine to gnat_descriptive_type.\n@@ -7063,7 +7062,7 @@\n \tdependency.\n \n 2011-01-04  Pascal Obry  <obry@adacore.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c: Disable Stdcall convention handling for 64-bit.\n \n@@ -7079,7 +7078,7 @@\n \tthe CICO mechanism.\n \n 2011-01-04  Olivier Hainque  <hainque@adacore.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (BLOCK_SOURCE_END_LOCATION): Provide default.\n \t(set_end_locus_from_node): New function.\n@@ -8890,7 +8889,7 @@ notice and this notice are preserved.\n \t* sem_util.ads, sem_util.adb, par.adb, par_util.adb\n \t(Formal_Error_Msg, Formal_Error_Msg_N, Formal_Error_Msg_SP): move\n \tprocedures out of these packages.\n-\t* errout.ads, errout.adb \n+\t* errout.ads, errout.adb\n \t(Formal_Error_Msg, Formal_Error_Msg_N, Formal_Error_Msg_SP): move\n \tprocedures in of this package\n \t(Formal_Error_Msg_NE): new procedure for wrapper on Error_Msg_NE\n@@ -9107,7 +9106,7 @@ notice and this notice are preserved.\n \t* debug.adb (d.D) reverve flag for the SPARK mode\n \t(d.E) reverve flag for SPARK generation mode\n \t(d.F) reverve flag for Why generation mode\n-\t* opt.ads, opt.adb (ALFA_Mode, ALFA_Through_SPARK_Mode, \n+\t* opt.ads, opt.adb (ALFA_Mode, ALFA_Through_SPARK_Mode,\n \tALFA_Through_Why_Mode, Formal_Verification_Mode, SPARK_Mode):  New\n \tfunctions which return True when the corresponding modes are set\n \t(Formal_Language): return \"spark\" or \"alfa\" when in formal verification\n@@ -9877,7 +9876,7 @@ notice and this notice are preserved.\n \t(pos_to_constructor): Likewise.\n \n 2011-05-03  Nathan Froyd  <froydnj@codesourcery.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (gigi): Call build_function_type_list instead\n \tof build_function_type.  Adjust calls to...\n@@ -10078,8 +10077,8 @@ notice and this notice are preserved.\n \tof incomplete types in this invocation.\n \n 2011-04-01  Olivier Hainque  <hainque@adacore.com>\n-            Nicolas Setton  <setton@adacore.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Nicolas Setton  <setton@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/misc.c (gnat_descriptive_type): New function.\n \t(LANG_HOOKS_DESCRIPTIVE_TYPE): Redefine to gnat_descriptive_type.\n@@ -10255,7 +10254,7 @@ notice and this notice are preserved.\n \tdependency.\n \n 2011-01-04  Pascal Obry  <obry@adacore.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c: Disable Stdcall convention handling for 64-bit.\n \n@@ -10271,7 +10270,7 @@ notice and this notice are preserved.\n \tthe CICO mechanism.\n \n 2011-01-04  Olivier Hainque  <hainque@adacore.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (BLOCK_SOURCE_END_LOCATION): Provide default.\n \t(set_end_locus_from_node): New function."}]}