{"sha": "f1c19648079168df5e3bf8ab7cee3a15f9203dc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFjMTk2NDgwNzkxNjhkZjVlM2JmOGFiN2NlZTNhMTVmOTIwM2RjNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-11-28T19:11:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-11-28T19:11:22Z"}, "message": "re PR middle-end/42183 (internal compiler error: verify_stmts failed)\n\n2009-11-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42183\n\t* tree-nrv.c (tree_nrv): Bail out if the RESULT_DECL has its\n\taddress taken.  Merge the addressable state of the NRV\n\tvariable and the result instead of copying it.\n\n\t* g++.dg/torture/pr42183.C: New testcase.\n\nFrom-SVN: r154728", "tree": {"sha": "94b97fb1416e57dbc696388eb5687ca3e1482c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94b97fb1416e57dbc696388eb5687ca3e1482c24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1c19648079168df5e3bf8ab7cee3a15f9203dc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c19648079168df5e3bf8ab7cee3a15f9203dc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c19648079168df5e3bf8ab7cee3a15f9203dc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c750c208706d56fb9b3b8e2badf44ec4b7f37058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c750c208706d56fb9b3b8e2badf44ec4b7f37058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c750c208706d56fb9b3b8e2badf44ec4b7f37058"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "e68cf95946818e180dec31827d25a2b4910d90e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1c19648079168df5e3bf8ab7cee3a15f9203dc4", "patch": "@@ -1,3 +1,10 @@\n+2009-11-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42183\n+\t* tree-nrv.c (tree_nrv): Bail out if the RESULT_DECL has its\n+\taddress taken.  Merge the addressable state of the NRV\n+\tvariable and the result instead of copying it.\n+\n 2009-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* matrix-reorg.c (analyze_matrix_allocation_site): Remove unused"}, {"sha": "1c3e6f91fc3e1e91897e8e40ae1c9a19e1c84b7e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1c19648079168df5e3bf8ab7cee3a15f9203dc4", "patch": "@@ -1,3 +1,8 @@\n+2009-11-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42183\n+\t* g++.dg/torture/pr42183.C: New testcase.\n+\n 2009-11-28  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* gcc.dg/lto/20081210-1_0.c (uintptr_t): Use for"}, {"sha": "375b37f0c668628673c27ce8687a7bd427869de4", "filename": "gcc/testsuite/g++.dg/torture/pr42183.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42183.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42183.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42183.C?ref=f1c19648079168df5e3bf8ab7cee3a15f9203dc4", "patch": "@@ -0,0 +1,51 @@\n+// { dg-do compile }\n+\n+class IntSize {\n+public:\n+    IntSize(int width, int height) : m_width(width), m_height(height) { }\n+    int m_width, m_height;\n+};\n+class IntPoint {\n+public:\n+    IntPoint(int x, int y) : m_x(x), m_y(y) { }\n+    int m_x, m_y;\n+};\n+class IntRect {\n+public:\n+    IntRect(int x, int y, int width, int height)\n+        : m_location(IntPoint(x, y)), m_size(IntSize(width, height)) { }\n+    void intersect(const IntRect&);\n+    IntPoint m_location;\n+    IntSize m_size;\n+};\n+inline IntRect intersection(const IntRect& a, const IntRect& b) {\n+    IntRect c = a;\n+    c.intersect(b);\n+    return c;\n+}\n+class RenderObject  {\n+public:\n+    int contentWidth() const { }\n+    int contentHeight() const { }\n+    virtual int xPos() const { }\n+    virtual int yPos() const { }\n+    virtual int paddingTop() const;\n+    virtual int paddingLeft() const;\n+    virtual int borderTop() const { }\n+    virtual int borderLeft() const { }\n+};\n+class RenderMenuList : public RenderObject {\n+    virtual IntRect controlClipRect(int tx, int ty) const;\n+    RenderObject* m_innerBlock;\n+};\n+IntRect RenderMenuList::controlClipRect(int tx, int ty) const {\n+    IntRect outerBox(tx + borderLeft() + paddingLeft(),\n+                     ty + borderTop() + paddingTop(),\n+                     contentWidth(), contentHeight());\n+    IntRect innerBox(tx + m_innerBlock->xPos() + m_innerBlock->paddingLeft(),\n+                     ty + m_innerBlock->yPos() + m_innerBlock->paddingTop(),\n+                     m_innerBlock->contentWidth(),\n+                     m_innerBlock->contentHeight());\n+    return intersection(outerBox, innerBox);\n+}\n+"}, {"sha": "a825a7a0c3fc2bf73b5a70b2114b934fd5e09fa0", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c19648079168df5e3bf8ab7cee3a15f9203dc4/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=f1c19648079168df5e3bf8ab7cee3a15f9203dc4", "patch": "@@ -129,6 +129,12 @@ tree_nrv (void)\n   if (DECL_NAME (result))\n     return 0;\n \n+  /* If the result has its address taken then it might be modified\n+     by means not detected in the following loop.  Bail out in this\n+     case.  */\n+  if (TREE_ADDRESSABLE (result))\n+    return 0;\n+\n   /* Look through each block for assignments to the RESULT_DECL.  */\n   FOR_EACH_BB (bb)\n     {\n@@ -178,7 +184,7 @@ tree_nrv (void)\n \t\t  || TREE_ADDRESSABLE (found)\n \t\t  || DECL_ALIGN (found) > DECL_ALIGN (result)\n \t\t  || !useless_type_conversion_p (result_type,\n-\t\t\t\t\t        TREE_TYPE (found)))\n+\t\t\t\t\t\t TREE_TYPE (found)))\n \t\treturn 0;\n \t    }\n \t  else if (gimple_has_lhs (stmt))\n@@ -218,7 +224,7 @@ tree_nrv (void)\n       DECL_ABSTRACT_ORIGIN (result) = DECL_ABSTRACT_ORIGIN (found);\n     }\n \n-  TREE_ADDRESSABLE (result) = TREE_ADDRESSABLE (found);\n+  TREE_ADDRESSABLE (result) |= TREE_ADDRESSABLE (found);\n \n   /* Now walk through the function changing all references to VAR to be\n      RESULT.  */"}]}