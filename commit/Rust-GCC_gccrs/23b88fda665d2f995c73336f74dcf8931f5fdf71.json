{"sha": "23b88fda665d2f995c73336f74dcf8931f5fdf71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNiODhmZGE2NjVkMmY5OTVjNzMzMzZmNzRkY2Y4OTMxZjVmZGY3MQ==", "commit": {"author": {"name": "Naveen H.S", "email": "Naveen.Hurugalawadi@cavium.com", "date": "2016-12-08T05:09:37Z"}, "committer": {"name": "Naveen H.S", "email": "naveenh@gcc.gnu.org", "date": "2016-12-08T05:09:37Z"}, "message": "aarch64.c (aarch64_load_symref_appropriately): Handle SYMBOL_SMALL_TLSGD for ILP32.\n\n2016-12-08  Naveen H.S  <Naveen.Hurugalawadi@cavium.com>\n\ngcc\n\t* config/aarch64/aarch64.c (aarch64_load_symref_appropriately):\n\tHandle SYMBOL_SMALL_TLSGD for ILP32.\n\t* config/aarch64/aarch64.md : tlsgd_small modified into\n\ttlsgd_small_<mode> to support SImode and DImode.\n\t*tlsgd_small modified into *tlsgd_small_<mode> to support SImode and\n\tDImode.\n\ngcc/testsuite\n\t* gcc.target/aarch64/pr78382.c : New Testcase.\n\nFrom-SVN: r243428", "tree": {"sha": "e5a02c3e4b0049d09f3bd3441bbe3e0f2dcc29a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5a02c3e4b0049d09f3bd3441bbe3e0f2dcc29a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23b88fda665d2f995c73336f74dcf8931f5fdf71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b88fda665d2f995c73336f74dcf8931f5fdf71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23b88fda665d2f995c73336f74dcf8931f5fdf71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b88fda665d2f995c73336f74dcf8931f5fdf71/comments", "author": null, "committer": null, "parents": [{"sha": "4ba8f0a3a4f8493a03b6229433728c49925e179f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba8f0a3a4f8493a03b6229433728c49925e179f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ba8f0a3a4f8493a03b6229433728c49925e179f"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "20262613f7a0681a1a1170a13ca8993caa62a63a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23b88fda665d2f995c73336f74dcf8931f5fdf71", "patch": "@@ -1,3 +1,12 @@\n+2016-12-08  Naveen H.S  <Naveen.Hurugalawadi@cavium.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_load_symref_appropriately):\n+\tHandle SYMBOL_SMALL_TLSGD for ILP32.\n+\t* config/aarch64/aarch64.md : tlsgd_small modified into\n+\ttlsgd_small_<mode> to support SImode and DImode.\n+\t*tlsgd_small modified into *tlsgd_small_<mode> to support SImode and\n+\tDImode.\n+\n 2016-12-08  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/aarch64.c (aarch64_load_symref_appropriately):"}, {"sha": "1a06432655e155f9ef347b174e389600bd84b5a9", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=23b88fda665d2f995c73336f74dcf8931f5fdf71", "patch": "@@ -1379,10 +1379,14 @@ aarch64_load_symref_appropriately (rtx dest, rtx imm,\n     case SYMBOL_SMALL_TLSGD:\n       {\n \trtx_insn *insns;\n-\trtx result = gen_rtx_REG (Pmode, R0_REGNUM);\n+\tmachine_mode mode = GET_MODE (dest);\n+\trtx result = gen_rtx_REG (mode, R0_REGNUM);\n \n \tstart_sequence ();\n-\taarch64_emit_call_insn (gen_tlsgd_small (result, imm));\n+\tif (TARGET_ILP32)\n+\t  aarch64_emit_call_insn (gen_tlsgd_small_si (result, imm));\n+\telse\n+\t  aarch64_emit_call_insn (gen_tlsgd_small_di (result, imm));\n \tinsns = get_insns ();\n \tend_sequence ();\n "}, {"sha": "65eb3265bc2964c2ed9ed455c0723cc455371367", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=23b88fda665d2f995c73336f74dcf8931f5fdf71", "patch": "@@ -5173,20 +5173,20 @@\n ;; The TLS ABI specifically requires that the compiler does not schedule\n ;; instructions in the TLS stubs, in order to enable linker relaxation.\n ;; Therefore we treat the stubs as an atomic sequence.\n-(define_expand \"tlsgd_small\"\n+(define_expand \"tlsgd_small_<mode>\"\n  [(parallel [(set (match_operand 0 \"register_operand\" \"\")\n                   (call (mem:DI (match_dup 2)) (const_int 1)))\n-\t     (unspec:DI [(match_operand:DI 1 \"aarch64_valid_symref\" \"\")] UNSPEC_GOTSMALLTLS)\n+\t     (unspec:DI [(match_operand:PTR 1 \"aarch64_valid_symref\" \"\")] UNSPEC_GOTSMALLTLS)\n \t     (clobber (reg:DI LR_REGNUM))])]\n  \"\"\n {\n   operands[2] = aarch64_tls_get_addr ();\n })\n \n-(define_insn \"*tlsgd_small\"\n+(define_insn \"*tlsgd_small_<mode>\"\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(call (mem:DI (match_operand:DI 2 \"\" \"\")) (const_int 1)))\n-   (unspec:DI [(match_operand:DI 1 \"aarch64_valid_symref\" \"S\")] UNSPEC_GOTSMALLTLS)\n+   (unspec:DI [(match_operand:PTR 1 \"aarch64_valid_symref\" \"S\")] UNSPEC_GOTSMALLTLS)\n    (clobber (reg:DI LR_REGNUM))\n   ]\n   \"\""}, {"sha": "bf6db373076329a1f43fb84554a4de4ce59bb327", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=23b88fda665d2f995c73336f74dcf8931f5fdf71", "patch": "@@ -1,3 +1,7 @@\n+2016-12-08  Naveen H.S  <Naveen.Hurugalawadi@cavium.com>\n+\n+\t* gcc.target/aarch64/pr78382.c : New Testcase.\n+\n 2016-12-08  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.target/aarch64/pr71112.c : New Testcase."}, {"sha": "febe7bc8d0add8b608a81cac804c516e8a44d9de", "filename": "gcc/testsuite/gcc.target/aarch64/pr78382.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78382.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b88fda665d2f995c73336f74dcf8931f5fdf71/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78382.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr78382.c?ref=23b88fda665d2f995c73336f74dcf8931f5fdf71", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target fpic } */\n+/* { dg-options \"-mtls-dialect=trad -fpic\" } */\n+\n+__thread int abc;\n+void\n+foo ()\n+{\n+  int *p;\n+  p = &abc;\n+}"}]}