{"sha": "686f3b77261e6a6e5a6a8b911628d1f828b54b92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2ZjNiNzcyNjFlNmE2ZTVhNmE4YjkxMTYyOGQxZjgyOGI1NGI5Mg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-06-19T13:59:07Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-06-19T13:59:07Z"}, "message": "vshrn_n.c: New file.\n\n2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vshrn_n.c: New file.\n\nFrom-SVN: r224664", "tree": {"sha": "1059f31609a4cd1e409afbb51fbc2cbe36cbf0a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1059f31609a4cd1e409afbb51fbc2cbe36cbf0a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/686f3b77261e6a6e5a6a8b911628d1f828b54b92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686f3b77261e6a6e5a6a8b911628d1f828b54b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/686f3b77261e6a6e5a6a8b911628d1f828b54b92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686f3b77261e6a6e5a6a8b911628d1f828b54b92/comments", "author": null, "committer": null, "parents": [{"sha": "5d3b46d6cf5f15933a59f9f5fc623d7605ba0122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d3b46d6cf5f15933a59f9f5fc623d7605ba0122"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "771813cf12ccf168ca7f9e052870e8accd32fd49", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686f3b77261e6a6e5a6a8b911628d1f828b54b92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686f3b77261e6a6e5a6a8b911628d1f828b54b92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=686f3b77261e6a6e5a6a8b911628d1f828b54b92", "patch": "@@ -1,3 +1,7 @@\n+2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vshrn_n.c: New file.\n+\n 2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vshl_n.c: New file."}, {"sha": "6d2f4dd518996465c1fd4d9f3d2af8000172ddf1", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vshrn_n.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686f3b77261e6a6e5a6a8b911628d1f828b54b92/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshrn_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686f3b77261e6a6e5a6a8b911628d1f828b54b92/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshrn_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshrn_n.c?ref=686f3b77261e6a6e5a6a8b911628d1f828b54b92", "patch": "@@ -0,0 +1,70 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0xf8, 0xf8, 0xf9, 0xf9,\n+\t\t\t\t       0xfa, 0xfa, 0xfb, 0xfb };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xfff8, 0xfff8, 0xfff9, 0xfff9 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xfffffffc, 0xfffffffc };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0xfc, 0xfc, 0xfc, 0xfc,\n+\t\t\t\t\t0xfd, 0xfd, 0xfd, 0xfd };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xfffe, 0xfffe, 0xfffe, 0xfffe };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xfffffffe, 0xfffffffe };\n+\n+#define TEST_MSG \"VSHRN_N\"\n+void exec_vshrn_n (void)\n+{\n+  /* Basic test: y=vshrn_n(x,v), then store the result.  */\n+#define TEST_VSHRN_N(T1, T2, W, W2, N, V)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    vshrn_n_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\t\\\n+\t\t    V);\t\t\t\t\t\t\t\\\n+  vst1_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+  /* vector is twice as large as vector_res.  */\n+  DECL_VARIABLE(vector, int, 16, 8);\n+  DECL_VARIABLE(vector, int, 32, 4);\n+  DECL_VARIABLE(vector, int, 64, 2);\n+  DECL_VARIABLE(vector, uint, 16, 8);\n+  DECL_VARIABLE(vector, uint, 32, 4);\n+  DECL_VARIABLE(vector, uint, 64, 2);\n+\n+  DECL_VARIABLE(vector_res, int, 8, 8);\n+  DECL_VARIABLE(vector_res, int, 16, 4);\n+  DECL_VARIABLE(vector_res, int, 32, 2);\n+  DECL_VARIABLE(vector_res, uint, 8, 8);\n+  DECL_VARIABLE(vector_res, uint, 16, 4);\n+  DECL_VARIABLE(vector_res, uint, 32, 2);\n+\n+  clean_results ();\n+\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, int, s, 64, 2);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 64, 2);\n+\n+  /* Choose shift amount arbitrarily.  */\n+  TEST_VSHRN_N(int, s, 16, 8, 8, 1);\n+  TEST_VSHRN_N(int, s, 32, 16, 4, 1);\n+  TEST_VSHRN_N(int, s, 64, 32, 2, 2);\n+  TEST_VSHRN_N(uint, u, 16, 8, 8, 2);\n+  TEST_VSHRN_N(uint, u, 32, 16, 4, 3);\n+  TEST_VSHRN_N(uint, u, 64, 32, 2, 3);\n+\n+#define CMT \"\"\n+  CHECK(TEST_MSG, int, 8, 8, PRIx8, expected, CMT);\n+  CHECK(TEST_MSG, int, 16, 4, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, CMT);\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected, CMT);\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, CMT);\n+}\n+\n+int main (void)\n+{\n+  exec_vshrn_n ();\n+  return 0;\n+}"}]}