{"sha": "c49bef17fd1e7afa1255a875aa23773960c187e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ5YmVmMTdmZDFlN2FmYTEyNTVhODc1YWEyMzc3Mzk2MGMxODdlOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-12-14T21:49:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-12-14T21:49:03Z"}, "message": "PR libstdc++/83279 handle sendfile not copying entire file\n\n\tPR libstdc++/83279\n\t* src/filesystem/std-ops.cc (do_copy_file): Handle sendfile not\n\tcopying entire file.\n\nFrom-SVN: r255666", "tree": {"sha": "2f3ae438d660cd698acd48638d55e64091207e2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f3ae438d660cd698acd48638d55e64091207e2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c49bef17fd1e7afa1255a875aa23773960c187e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49bef17fd1e7afa1255a875aa23773960c187e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c49bef17fd1e7afa1255a875aa23773960c187e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49bef17fd1e7afa1255a875aa23773960c187e9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83fd5e73b3c16296e0d7ba54f6c547e01c7eae7b"}], "stats": {"total": 71, "additions": 49, "deletions": 22}, "files": [{"sha": "1b4c6e281e671c6be8184bdf0010f42de3c75e47", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49bef17fd1e7afa1255a875aa23773960c187e9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49bef17fd1e7afa1255a875aa23773960c187e9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c49bef17fd1e7afa1255a875aa23773960c187e9", "patch": "@@ -1,5 +1,9 @@\n 2017-12-14  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/83279\n+\t* src/filesystem/std-ops.cc (do_copy_file): Handle sendfile not\n+\tcopying entire file.\n+\n \tPR libstdc++/68519\n \t* include/std/condition_variable (condition_variable::wait_for):\n \tConvert duration to native clock's duration before addition."}, {"sha": "a15857c31bfd457b7967df6241b92c236d55f114", "filename": "libstdc++-v3/src/filesystem/std-ops.cc", "status": "modified", "additions": 45, "deletions": 22, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49bef17fd1e7afa1255a875aa23773960c187e9/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fstd-ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49bef17fd1e7afa1255a875aa23773960c187e9/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fstd-ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fstd-ops.cc?ref=c49bef17fd1e7afa1255a875aa23773960c187e9", "patch": "@@ -382,48 +382,71 @@ fs::do_copy_file(const char* from, const char* to,\n       return false;\n     }\n \n+  ssize_t n = 0;\n+  size_t count = from_st->st_size;\n #ifdef _GLIBCXX_USE_SENDFILE\n-  off_t offset = 0;\n-  const auto n = ::sendfile(out.fd, in.fd, &offset, from_st->st_size);\n-  if (n < 0 && (errno == ENOSYS || errno == EINVAL))\n+  n = ::sendfile(out.fd, in.fd, nullptr, count);\n+  if (n < 0 && errno != ENOSYS && errno != EINVAL)\n     {\n+      ec.assign(errno, std::generic_category());\n+      return false;\n+    }\n+  if ((size_t)n == count)\n+    {\n+      if (!out.close() || !in.close())\n+\t{\n+\t  ec.assign(errno, std::generic_category());\n+\t  return false;\n+\t}\n+      ec.clear();\n+      return true;\n+    }\n+  else if (n > 0)\n+    count -= n;\n #endif // _GLIBCXX_USE_SENDFILE\n-      __gnu_cxx::stdio_filebuf<char> sbin(in.fd, std::ios::in);\n-      __gnu_cxx::stdio_filebuf<char> sbout(out.fd, std::ios::out);\n-      if (sbin.is_open())\n-\tin.fd = -1;\n-      if (sbout.is_open())\n-\tout.fd = -1;\n-      if (from_st->st_size && !(std::ostream(&sbout) << &sbin))\n+\n+  __gnu_cxx::stdio_filebuf<char> sbin(in.fd, std::ios::in);\n+  __gnu_cxx::stdio_filebuf<char> sbout(out.fd, std::ios::out);\n+\n+  if (sbin.is_open())\n+    in.fd = -1;\n+  if (sbout.is_open())\n+    out.fd = -1;\n+\n+  const std::streampos errpos(std::streamoff(-1));\n+\n+  if (n < 0)\n+    {\n+      auto p1 = sbin.pubseekoff(0, std::ios_base::beg, std::ios_base::in);\n+      auto p2 = sbout.pubseekoff(0, std::ios_base::beg, std::ios_base::out);\n+      if (p1 == errpos || p2 == errpos)\n \t{\n \t  ec = std::make_error_code(std::errc::io_error);\n \t  return false;\n \t}\n-      if (!sbout.close() || !sbin.close())\n+    }\n+  else if (n > 0)\n+    {\n+      auto p = sbout.pubseekoff(n, std::ios_base::beg, std::ios_base::out);\n+      if (p == errpos)\n \t{\n-\t  ec.assign(errno, std::generic_category());\n+\t  ec = std::make_error_code(std::errc::io_error);\n \t  return false;\n \t}\n-\n-      ec.clear();\n-      return true;\n-\n-#ifdef _GLIBCXX_USE_SENDFILE\n     }\n-  if (n != from_st->st_size)\n+\n+  if (count && !(std::ostream(&sbout) << &sbin))\n     {\n-      ec.assign(errno, std::generic_category());\n+      ec = std::make_error_code(std::errc::io_error);\n       return false;\n     }\n-  if (!out.close() || !in.close())\n+  if (!sbout.close() || !sbin.close())\n     {\n       ec.assign(errno, std::generic_category());\n       return false;\n     }\n-\n   ec.clear();\n   return true;\n-#endif // _GLIBCXX_USE_SENDFILE\n }\n #endif // NEED_DO_COPY_FILE\n #endif // _GLIBCXX_HAVE_SYS_STAT_H"}]}