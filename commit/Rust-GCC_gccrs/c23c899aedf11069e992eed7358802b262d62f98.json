{"sha": "c23c899aedf11069e992eed7358802b262d62f98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIzYzg5OWFlZGYxMTA2OWU5OTJlZWQ3MzU4ODAyYjI2MmQ2MmY5OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-07T19:30:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-07T19:30:12Z"}, "message": "combine: Fix split_i2i3 ICE [PR94291]\n\nThe following testcase ICEs on armv7hl-linux-gnueabi.\ntry_combine is called on:\n(gdb) p debug_rtx (i3)\n(insn 20 12 22 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)\n                (const_int -4 [0xfffffffffffffffc])) [1 x+0 S4 A32])\n        (reg:SI 125)) \"pr94291.c\":7:8 241 {*arm_movsi_insn}\n     (expr_list:REG_DEAD (reg:SI 125)\n        (nil)))\n(gdb) p debug_rtx (i2)\n(insn 12 7 20 2 (parallel [\n            (set (reg:CC 100 cc)\n                (compare:CC (reg:SI 121 [ <retval> ])\n                    (const_int 0 [0])))\n            (set (reg:SI 125)\n                (reg:SI 121 [ <retval> ]))\n        ]) \"pr94291.c\":7:8 248 {*movsi_compare0}\n     (expr_list:REG_UNUSED (reg:CC 100 cc)\n        (nil)))\nand tries to recognize cc = r121 cmp 0; [sfp-4] = r121 parallel,\nbut that isn't recognized, so it splits it into two: split_i2i3\n[sfp-4] = r121 followed by cc = r121 cmp 0 which is recognized, but\nICEs because the code below insist that the SET_DEST of newi2pat\n(or first set in PARALLEL thereof) must be a REG or SUBREG of REG,\nbut it is a MEM in this case.  I don't see any condition that would\nguarantee that, perhaps for the swap_i2i3 case it was somehow guaranteed.\n\nAs the code just wants to update LOG_LINKS and LOG_LINKS are only for\nregisters, not for MEM or anything else, the patch just doesn't update those\nif it isn't a REG or SUBREG of REG.\n\n2020-04-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/94291\n\tPR rtl-optimization/84169\n\t* combine.c (try_combine): For split_i2i3, don't assume SET_DEST\n\tmust be a REG or SUBREG of REG; if it is not one of these, don't\n\tupdate LOG_LINKs.\n\n\t* gcc.dg/pr94291.c: New test.", "tree": {"sha": "1e7c842bfc7d60ae247ba8287765a417c8feb402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e7c842bfc7d60ae247ba8287765a417c8feb402"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c23c899aedf11069e992eed7358802b262d62f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23c899aedf11069e992eed7358802b262d62f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23c899aedf11069e992eed7358802b262d62f98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23c899aedf11069e992eed7358802b262d62f98/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88e508f9f112acd07d0c49c53589160db8c85fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e508f9f112acd07d0c49c53589160db8c85fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e508f9f112acd07d0c49c53589160db8c85fcd"}], "stats": {"total": 70, "additions": 51, "deletions": 19}, "files": [{"sha": "12803e90b0a0815de845773849905cb7cdd651a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23c899aedf11069e992eed7358802b262d62f98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23c899aedf11069e992eed7358802b262d62f98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c23c899aedf11069e992eed7358802b262d62f98", "patch": "@@ -1,3 +1,11 @@\n+2020-04-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/94291\n+\tPR rtl-optimization/84169\n+\t* combine.c (try_combine): For split_i2i3, don't assume SET_DEST\n+\tmust be a REG or SUBREG of REG; if it is not one of these, don't\n+\tupdate LOG_LINKs.\n+\n 2020-04-07  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/94479"}, {"sha": "cff76cd3303483aed5476c63b191401ec2599a7e", "filename": "gcc/combine.c", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23c899aedf11069e992eed7358802b262d62f98/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23c899aedf11069e992eed7358802b262d62f98/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c23c899aedf11069e992eed7358802b262d62f98", "patch": "@@ -4351,25 +4351,29 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n       if (GET_CODE (x) == PARALLEL)\n \tx = XVECEXP (newi2pat, 0, 0);\n \n-      /* It can only be a SET of a REG or of a SUBREG of a REG.  */\n-      unsigned int regno = reg_or_subregno (SET_DEST (x));\n-\n-      bool done = false;\n-      for (rtx_insn *insn = NEXT_INSN (i3);\n-\t   !done\n-\t   && insn\n-\t   && NONDEBUG_INSN_P (insn)\n-\t   && BLOCK_FOR_INSN (insn) == this_basic_block;\n-\t   insn = NEXT_INSN (insn))\n-\t{\n-\t  struct insn_link *link;\n-\t  FOR_EACH_LOG_LINK (link, insn)\n-\t    if (link->insn == i3 && link->regno == regno)\n-\t      {\n-\t\tlink->insn = i2;\n-\t\tdone = true;\n-\t\tbreak;\n-\t      }\n+      if (REG_P (SET_DEST (x))\n+\t  || (GET_CODE (SET_DEST (x)) == SUBREG\n+\t      && REG_P (SUBREG_REG (SET_DEST (x)))))\n+\t{\n+\t  unsigned int regno = reg_or_subregno (SET_DEST (x));\n+\n+\t  bool done = false;\n+\t  for (rtx_insn *insn = NEXT_INSN (i3);\n+\t       !done\n+\t       && insn\n+\t       && NONDEBUG_INSN_P (insn)\n+\t       && BLOCK_FOR_INSN (insn) == this_basic_block;\n+\t       insn = NEXT_INSN (insn))\n+\t    {\n+\t      struct insn_link *link;\n+\t      FOR_EACH_LOG_LINK (link, insn)\n+\t\tif (link->insn == i3 && link->regno == regno)\n+\t\t  {\n+\t\t    link->insn = i2;\n+\t\t    done = true;\n+\t\t    break;\n+\t\t  }\n+\t    }\n \t}\n     }\n "}, {"sha": "3cbf891d58d168c14d72f14cd4a94ca646f92755", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23c899aedf11069e992eed7358802b262d62f98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23c899aedf11069e992eed7358802b262d62f98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c23c899aedf11069e992eed7358802b262d62f98", "patch": "@@ -1,3 +1,9 @@\n+2020-04-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/94291\n+\tPR rtl-optimization/84169\n+\t* gcc.dg/pr94291.c: New test.\n+\n 2020-04-07  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/94479"}, {"sha": "7daa2b01166f6e452f243751fa46c6b99893ce0d", "filename": "gcc/testsuite/gcc.dg/pr94291.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23c899aedf11069e992eed7358802b262d62f98/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94291.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23c899aedf11069e992eed7358802b262d62f98/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94291.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94291.c?ref=c23c899aedf11069e992eed7358802b262d62f98", "patch": "@@ -0,0 +1,14 @@\n+/* PR rtl-optimization/94291 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Og\" } */\n+\n+unsigned a;\n+\n+unsigned\n+foo (void)\n+{\n+  unsigned x\n+    = (__builtin_sub_overflow ((long long) a, 0, &x)\n+       ? 1 : (__INTPTR_TYPE__) __builtin_memmove (&x, foo, 1));\n+  return a;\n+}"}]}