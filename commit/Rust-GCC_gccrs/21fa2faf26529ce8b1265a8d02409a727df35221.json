{"sha": "21fa2faf26529ce8b1265a8d02409a727df35221", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFmYTJmYWYyNjUyOWNlOGIxMjY1YThkMDI0MDlhNzI3ZGYzNTIyMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-12T14:17:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-12T14:17:26Z"}, "message": "lto-lang.c (builtin_type_for_size): Use lto_type_for_size.\n\n2012-03-12  Richard Guenther  <rguenther@suse.de>\n\n\tlto/\n\t* lto-lang.c (builtin_type_for_size): Use lto_type_for_size.\n\n\tfortran/\n\t* f95-lang.c (builtin_type_for_size): Use gfc_type_for_size.\n\n\tc-common/\n\t* c-common.c (c_common_get_narrower): Use c_common_type_for_size.\n\t(builtin_type_for_size): Likewise.\n\n\t* config/alpha/alpha.c (alpha_gimplify_va_arg): Use\n\tbuild_nonstandard_integer_type.\n\nFrom-SVN: r185229", "tree": {"sha": "9a64c03995773062640a21db49850e4ab2339e03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a64c03995773062640a21db49850e4ab2339e03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21fa2faf26529ce8b1265a8d02409a727df35221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21fa2faf26529ce8b1265a8d02409a727df35221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21fa2faf26529ce8b1265a8d02409a727df35221", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21fa2faf26529ce8b1265a8d02409a727df35221/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ee6fd6836b487a0229b69821c71b6878b529870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee6fd6836b487a0229b69821c71b6878b529870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee6fd6836b487a0229b69821c71b6878b529870"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "8c9d97773a8f90721652cf57b28a7a495f9dc4d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21fa2faf26529ce8b1265a8d02409a727df35221", "patch": "@@ -1,3 +1,8 @@\n+2012-03-12  Richard Guenther  <rguenther@suse.de>\n+\n+\t* config/alpha/alpha.c (alpha_gimplify_va_arg): Use\n+\tbuild_nonstandard_integer_type.\n+\n 2012-03-12  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.c (signed_or_unsigned_type_for): Use"}, {"sha": "bb9c90191bf2c434ae26ac4586c36a008efe6826", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=21fa2faf26529ce8b1265a8d02409a727df35221", "patch": "@@ -1,3 +1,8 @@\n+2012-03-12  Richard Guenther  <rguenther@suse.de>\n+\n+\t* c-common.c (c_common_get_narrower): Use c_common_type_for_size.\n+\t(builtin_type_for_size): Likewise.\n+\n 2012-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/52215"}, {"sha": "b83f45b9d2c2a8c18406502cc9da316673e3f344", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=21fa2faf26529ce8b1265a8d02409a727df35221", "patch": "@@ -1849,9 +1849,8 @@ c_common_get_narrower (tree op, int *unsignedp_ptr)\n       /* C++0x scoped enumerations don't implicitly convert to integral\n \t type; if we stripped an explicit conversion to a larger type we\n \t need to replace it so common_type will still work.  */\n-      tree type = (lang_hooks.types.type_for_size\n-\t\t   (TYPE_PRECISION (TREE_TYPE (op)),\n-\t\t    TYPE_UNSIGNED (TREE_TYPE (op))));\n+      tree type = c_common_type_for_size (TYPE_PRECISION (TREE_TYPE (op)),\n+\t\t\t\t\t  TYPE_UNSIGNED (TREE_TYPE (op)));\n       op = fold_convert (type, op);\n     }\n   return op;\n@@ -9259,7 +9258,7 @@ c_common_mark_addressable_vec (tree t)\n tree\n builtin_type_for_size (int size, bool unsignedp)\n {\n-  tree type = lang_hooks.types.type_for_size (size, unsignedp);\n+  tree type = c_common_type_for_size (size, unsignedp);\n   return type ? type : error_mark_node;\n }\n "}, {"sha": "7305f6fbb26a54326bdc62ad4547d2f4bfee3b0c", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=21fa2faf26529ce8b1265a8d02409a727df35221", "patch": "@@ -6228,7 +6228,7 @@ alpha_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n      offset field so that it's the proper width for pointer arithmetic.  */\n   base = get_formal_tmp_var (base_field, pre_p);\n \n-  t = fold_convert (lang_hooks.types.type_for_size (64, 0), offset_field);\n+  t = fold_convert (build_nonstandard_integer_type (64, 0), offset_field);\n   offset = get_initialized_tmp_var (t, pre_p, NULL);\n \n   indirect = pass_by_reference (NULL, TYPE_MODE (type), type, false);"}, {"sha": "eae8b067ae34f62fd2a7ab4194ca3ba2b482a6e8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=21fa2faf26529ce8b1265a8d02409a727df35221", "patch": "@@ -1,3 +1,7 @@\n+2012-03-12  Richard Guenther  <rguenther@suse.de>\n+\n+\t* f95-lang.c (builtin_type_for_size): Use gfc_type_for_size.\n+\n 2012-03-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52542"}, {"sha": "05b598ff3ec04573a78a96815ff7481fb4ee9747", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=21fa2faf26529ce8b1265a8d02409a727df35221", "patch": "@@ -605,7 +605,7 @@ build_builtin_fntypes (tree *fntype, tree type)\n static tree\n builtin_type_for_size (int size, bool unsignedp)\n {\n-  tree type = lang_hooks.types.type_for_size (size, unsignedp);\n+  tree type = gfc_type_for_size (size, unsignedp);\n   return type ? type : error_mark_node;\n }\n "}, {"sha": "b35330eb2e6b19ca16916f574107edbbd8de3a97", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=21fa2faf26529ce8b1265a8d02409a727df35221", "patch": "@@ -1,3 +1,7 @@\n+2012-03-12  Richard Guenther  <rguenther@suse.de>\n+\n+\t* lto-lang.c (builtin_type_for_size): Use lto_type_for_size.\n+\n 2012-03-06  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/52097"}, {"sha": "999db8be4317fd3b35b2dade96e2b7c3b0be9418", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fa2faf26529ce8b1265a8d02409a727df35221/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=21fa2faf26529ce8b1265a8d02409a727df35221", "patch": "@@ -36,6 +36,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"lto-streamer.h\"\n \n+static tree lto_type_for_size (unsigned, int);\n+\n static tree handle_noreturn_attribute (tree *, tree, tree, int, bool *);\n static tree handle_leaf_attribute (tree *, tree, tree, int, bool *);\n static tree handle_const_attribute (tree *, tree, tree, int, bool *);\n@@ -523,7 +525,7 @@ def_fn_type (builtin_type def, builtin_type ret, bool var, int n, ...)\n static tree\n builtin_type_for_size (int size, bool unsignedp)\n {\n-  tree type = lang_hooks.types.type_for_size (size, unsignedp);\n+  tree type = lto_type_for_size (size, unsignedp);\n   return type ? type : error_mark_node;\n }\n "}]}