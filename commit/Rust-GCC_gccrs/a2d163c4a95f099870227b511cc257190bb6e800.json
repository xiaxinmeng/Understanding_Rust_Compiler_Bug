{"sha": "a2d163c4a95f099870227b511cc257190bb6e800", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJkMTYzYzRhOTVmMDk5ODcwMjI3YjUxMWNjMjU3MTkwYmI2ZTgwMA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-15T23:44:51Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-15T23:44:51Z"}, "message": "libgcc1-test.c: Renamed from cross-test.c.\n\n\t* libgcc1-test.c: Renamed from cross-test.c.\n\t* Makefile.in (LIBGCC1_TEST): Renamed from CROSS_TEST.\n\t(all.cross): Delete $(ENQUIRE) dependency.\n\t(libgcc1-test): Renamed from cross-test.\n\tDelete unnecessary gcc-cross and $(LIBGCC) dependencies.\n\tLink with -nostartfiles -nostdlib\n\t`$(GCC_FOR_TARGET) --print-libgcc-file-name`.\n\t(libgcc1-test.o): Renamed from cross-test.o.\n\tChange gcc-cross dependency to xgcc since the latter is used.\n\nFrom-SVN: r9188", "tree": {"sha": "320dd22e5403f9c15d47850e61c5718d8a8e7a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/320dd22e5403f9c15d47850e61c5718d8a8e7a1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2d163c4a95f099870227b511cc257190bb6e800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2d163c4a95f099870227b511cc257190bb6e800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2d163c4a95f099870227b511cc257190bb6e800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2d163c4a95f099870227b511cc257190bb6e800/comments", "author": null, "committer": null, "parents": [{"sha": "2117d0f5dc379a21d6e18a0d0460b5319ab157d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2117d0f5dc379a21d6e18a0d0460b5319ab157d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2117d0f5dc379a21d6e18a0d0460b5319ab157d9"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "df905214f8c3c7ae5d144833caa5f81a6eeeffce", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2d163c4a95f099870227b511cc257190bb6e800/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2d163c4a95f099870227b511cc257190bb6e800/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a2d163c4a95f099870227b511cc257190bb6e800", "patch": "@@ -102,7 +102,7 @@ OLDAR = ar\n # install-headers-tar or install-headers-cpio.\n INSTALL_HEADERS_DIR = install-headers-tar\n \n-# The GCC to use for compiling libgcc2.a, enquire, and cross-test.\n+# The GCC to use for compiling libgcc2.a, enquire, and libgcc1-test.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n GCC_FOR_TARGET = ./xgcc -B./\n@@ -236,8 +236,8 @@ LIBGCC2_DEPS =\n # build it.)\n ENQUIRE = enquire\n \n-# Cross-test target (must also be overridable for a target)\n-CROSS_TEST = cross-test\n+# libgcc1-test target (must also be overridable for a target)\n+LIBGCC1_TEST = libgcc1-test\n \n # List of extra executables that should be compiled for this target machine\n # that are used for compiling from source code to object code.\n@@ -589,7 +589,7 @@ all.internal: start.encap rest.encap\n # Note that we can compile enquire using the cross-compiler just built,\n # although we can't run it on this machine.\n all.cross: native gcc-cross specs stmp-headers $(LIBGCC) $(STMP_FIXPROTO) \\\n-\t$(CROSS_TEST) $(ENQUIRE) $(EXTRA_PARTS) lang.all.cross\n+\t$(LIBGCC1_TEST) $(EXTRA_PARTS) lang.all.cross\n # This is what to compile if making gcc with a cross-compiler.\n all.build: native xgcc $(EXTRA_PARTS) lang.all.build\n # This is what must be made before installing GCC and converting libraries.\n@@ -624,12 +624,13 @@ config.status:\n # This does the things that can't be done on the host machine.\n rest.cross: $(LIBGCC) gfloat.h specs\n \n-# Verify that it works to compile and link cross-test.\n+# Verify that it works to compile and link libgcc1-test.\n # If it does, then there are sufficient replacements for libgcc1.a.\n-cross-test: cross-test.o native gcc-cross $(LIBGCC) $(GCC_PARTS)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) cross-test.o -o cross-test\n-cross-test.o: cross-test.c native gcc-cross\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -c $(srcdir)/cross-test.c\n+libgcc1-test: libgcc1-test.o native $(GCC_PARTS)\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) libgcc1-test.o -o libgcc1-test \\\n+\t  -nostartfiles -nostdlib `$(GCC_FOR_TARGET) --print-libgcc-file-name`\n+libgcc1-test.o: libgcc1-test.c native xgcc\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -c $(srcdir)/libgcc1-test.c\n \n # Recompile all the language-independent object files.\n # This is used only if the user explicitly asks for it."}]}