{"sha": "3f8c389fe90bf565a6221a46bb7fb745dd4c1510", "node_id": "C_kwDOANBUbNoAKDNmOGMzODlmZTkwYmY1NjVhNjIyMWE0NmJiN2ZiNzQ1ZGQ0YzE1MTA", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-05-04T16:18:44Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-05-04T16:18:44Z"}, "message": "OpenMP: Fix use_device_{addr,ptr} with in-data-sharing arg\n\nFor array-descriptor vars, the descriptor is assigned to a temporary. However,\nthis failed when the clause's argument was in turn in a data-sharing clause\nas the outer context's VALUE_EXPR wasn't used.\n\ngcc/ChangeLog:\n\n\t* omp-low.cc (lower_omp_target): Fix use_device_{addr,ptr} with list\n\titem that is in an outer data-sharing clause.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.fortran/use_device_addr-5.f90: New test.", "tree": {"sha": "7f9d1fa9367538651022da2ab542d0272b37e1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f9d1fa9367538651022da2ab542d0272b37e1a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f8c389fe90bf565a6221a46bb7fb745dd4c1510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f8c389fe90bf565a6221a46bb7fb745dd4c1510", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f8c389fe90bf565a6221a46bb7fb745dd4c1510", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f8c389fe90bf565a6221a46bb7fb745dd4c1510/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79a1a01cbd0e4a491d7078783131e3f88ca7158d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79a1a01cbd0e4a491d7078783131e3f88ca7158d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79a1a01cbd0e4a491d7078783131e3f88ca7158d"}], "stats": {"total": 161, "additions": 152, "deletions": 9}, "files": [{"sha": "4c528864ab734c3f71c35b8e1ce944a4490ceeaa", "filename": "gcc/omp-low.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f8c389fe90bf565a6221a46bb7fb745dd4c1510/gcc%2Fomp-low.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f8c389fe90bf565a6221a46bb7fb745dd4c1510/gcc%2Fomp-low.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.cc?ref=3f8c389fe90bf565a6221a46bb7fb745dd4c1510", "patch": "@@ -13657,26 +13657,26 @@ lower_omp_target (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n \t\tnew_var = lookup_decl (var, ctx);\n \t\tnew_var = DECL_VALUE_EXPR (new_var);\n \t\ttree v = new_var;\n+\t\ttree v2 = var;\n+\t\tif (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_USE_DEVICE_PTR\n+\t\t    || OMP_CLAUSE_CODE (c) == OMP_CLAUSE_USE_DEVICE_ADDR)\n+\t\t  v2 = maybe_lookup_decl_in_outer_ctx (var, ctx);\n \n \t\tif (is_ref)\n \t\t  {\n-\t\t    var = build_fold_indirect_ref (var);\n-\t\t    gimplify_expr (&var, &assign_body, NULL, is_gimple_val,\n-\t\t\t\t   fb_rvalue);\n-\t\t    v = create_tmp_var_raw (TREE_TYPE (var), get_name (var));\n+\t\t    v2 = build_fold_indirect_ref (v2);\n+\t\t    v = create_tmp_var_raw (TREE_TYPE (v2), get_name (var));\n \t\t    gimple_add_tmp_var (v);\n \t\t    TREE_ADDRESSABLE (v) = 1;\n-\t\t    gimple_seq_add_stmt (&assign_body,\n-\t\t\t\t\t gimple_build_assign (v, var));\n+\t\t    gimplify_assign (v, v2, &assign_body);\n \t\t    tree rhs = build_fold_addr_expr (v);\n \t\t    gimple_seq_add_stmt (&assign_body,\n \t\t\t\t\t gimple_build_assign (new_var, rhs));\n \t\t  }\n \t\telse\n-\t\t  gimple_seq_add_stmt (&assign_body,\n-\t\t\t\t       gimple_build_assign (new_var, var));\n+\t\t  gimplify_assign (new_var, v2, &assign_body);\n \n-\t\ttree v2 = lang_hooks.decls.omp_array_data (unshare_expr (v), false);\n+\t\tv2 = lang_hooks.decls.omp_array_data (unshare_expr (v), false);\n \t\tgcc_assert (v2);\n \t\tgimplify_expr (&x, &assign_body, NULL, is_gimple_val, fb_rvalue);\n \t\tgimple_seq_add_stmt (&assign_body,"}, {"sha": "1def70a1bc0683c98725433c3df58475a983f902", "filename": "libgomp/testsuite/libgomp.fortran/use_device_addr-5.f90", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f8c389fe90bf565a6221a46bb7fb745dd4c1510/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f8c389fe90bf565a6221a46bb7fb745dd4c1510/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-5.f90?ref=3f8c389fe90bf565a6221a46bb7fb745dd4c1510", "patch": "@@ -0,0 +1,143 @@\n+program main\n+  use omp_lib\n+  implicit none\n+  integer, allocatable :: aaa(:,:,:)\n+  integer :: i\n+\n+  allocate (aaa(-4:10,-3:8,2))\n+  aaa(:,:,:) = reshape ([(i, i = 1, size(aaa))], shape(aaa))\n+\n+  do i = 0, omp_get_num_devices()\n+    !$omp target data map(to: aaa)\n+      call test_addr (aaa, i)\n+      call test_ptr (aaa, i)\n+    !$omp end target data\n+  end do\n+  deallocate (aaa)\n+\n+contains\n+\n+  subroutine test_addr (aaaa, dev)\n+    use iso_c_binding\n+    integer, target, allocatable :: aaaa(:,:,:), bbbb(:,:,:)\n+    integer, value :: dev\n+    integer :: i\n+    type(c_ptr) :: ptr\n+    logical :: is_shared\n+\n+    is_shared = .false.\n+    !$omp target device(dev) map(to: is_shared)\n+      is_shared = .true.\n+    !$omp end target\n+\n+    allocate (bbbb(-4:10,-3:8,2))\n+    bbbb(:,:,:) = reshape ([(-i, i = 1, size(bbbb))], shape(bbbb))\n+    !$omp target enter data map(to: bbbb) device(dev)\n+    if (any (lbound (aaaa) /= [-4, -3, 1])) error stop 1\n+    if (any (shape (aaaa) /= [15, 12, 2])) error stop 2\n+    if (any (lbound (bbbb) /= [-4, -3, 1])) error stop 3\n+    if (any (shape (bbbb) /= [15, 12, 2])) error stop 4\n+    if (any (aaaa /= -bbbb)) error stop 5\n+    if (any (aaaa /= reshape ([(i, i = 1, size(aaaa))], shape(aaaa)))) &\n+      error stop 6\n+\n+    !$omp parallel do shared(bbbb, aaaa)\n+    do i = 1,1\n+      if (any (lbound (aaaa) /= [-4, -3, 1])) error stop 5\n+      if (any (shape (aaaa) /= [15, 12, 2])) error stop 6\n+      if (any (lbound (bbbb) /= [-4, -3, 1])) error stop 7\n+      if (any (shape (bbbb) /= [15, 12, 2])) error stop 8\n+      if (any (aaaa /= -bbbb)) error stop 5\n+      if (any (aaaa /= reshape ([(i, i = 1, size(aaaa))], shape(aaaa)))) &\n+        error stop 6\n+      ptr = c_loc (aaaa)\n+      !$omp target data use_device_addr(bbbb, aaaa) device(dev)\n+        if (any (lbound (aaaa) /= [-4, -3, 1])) error stop 9\n+        if (any (shape (aaaa) /= [15, 12, 2])) error stop 10\n+        if (any (lbound (bbbb) /= [-4, -3, 1])) error stop 11\n+        if (any (shape (bbbb) /= [15, 12, 2])) error stop 12\n+        if (is_shared) then\n+          if (any (aaaa /= -bbbb)) error stop 5\n+          if (any (aaaa /= reshape ([(i, i = 1, size(aaaa))], shape(aaaa)))) &\n+            error stop 6\n+        end if\n+        if (is_shared .neqv. c_associated (ptr, c_loc (aaaa))) error stop\n+\n+        !$omp target has_device_addr(bbbb, aaaa) device(dev)\n+           if (any (lbound (aaaa) /= [-4, -3, 1])) error stop 9\n+           if (any (shape (aaaa) /= [15, 12, 2])) error stop 10\n+           if (any (lbound (bbbb) /= [-4, -3, 1])) error stop 11\n+           if (any (shape (bbbb) /= [15, 12, 2])) error stop 12\n+           if (any (aaaa /= -bbbb)) error stop 5\n+           if (any (aaaa /= reshape ([(i, i = 1, size(aaaa))], shape(aaaa)))) &\n+             error stop 6\n+        !$omp end target\n+      !$omp end target data\n+    end do\n+    !$omp target exit data map(delete: bbbb) device(dev)\n+    deallocate (bbbb)\n+  end subroutine test_addr\n+\n+  subroutine test_ptr (aaaa, dev)\n+    use iso_c_binding\n+    integer, target, allocatable :: aaaa(:,:,:), bbbb(:,:,:)\n+    integer, value :: dev\n+    integer :: i\n+    type(c_ptr) :: ptr\n+    logical :: is_shared\n+\n+    is_shared = .false.\n+    !$omp target device(dev) map(to: is_shared)\n+      is_shared = .true.\n+    !$omp end target\n+\n+    allocate (bbbb(-4:10,-3:8,2))\n+    bbbb(:,:,:) = reshape ([(-i, i = 1, size(bbbb))], shape(bbbb))\n+    !$omp target enter data map(to: bbbb) device(dev)\n+    if (any (lbound (aaaa) /= [-4, -3, 1])) error stop 1\n+    if (any (shape (aaaa) /= [15, 12, 2])) error stop 2\n+    if (any (lbound (bbbb) /= [-4, -3, 1])) error stop 3\n+    if (any (shape (bbbb) /= [15, 12, 2])) error stop 4\n+    if (any (aaaa /= -bbbb)) error stop 5\n+    if (any (aaaa /= reshape ([(i, i = 1, size(aaaa))], shape(aaaa)))) &\n+      error stop 6\n+\n+    !$omp parallel do shared(bbbb, aaaa)\n+    do i = 1,1\n+      if (any (lbound (aaaa) /= [-4, -3, 1])) error stop 5\n+      if (any (shape (aaaa) /= [15, 12, 2])) error stop 6\n+      if (any (lbound (bbbb) /= [-4, -3, 1])) error stop 7\n+      if (any (shape (bbbb) /= [15, 12, 2])) error stop 8\n+      if (any (aaaa /= -bbbb)) error stop 5\n+      if (any (aaaa /= reshape ([(i, i = 1, size(aaaa))], shape(aaaa)))) &\n+        error stop 6\n+      ptr = c_loc (aaaa)\n+      !$omp target data use_device_ptr(bbbb, aaaa) device(dev)\n+        if (any (lbound (aaaa) /= [-4, -3, 1])) error stop 9\n+        if (any (shape (aaaa) /= [15, 12, 2])) error stop 10\n+        if (any (lbound (bbbb) /= [-4, -3, 1])) error stop 11\n+        if (any (shape (bbbb) /= [15, 12, 2])) error stop 12\n+        if (is_shared) then\n+          if (any (aaaa /= -bbbb)) error stop 5\n+          if (any (aaaa /= reshape ([(i, i = 1, size(aaaa))], shape(aaaa)))) &\n+            error stop 6\n+        end if\n+        if (is_shared .neqv. c_associated (ptr, c_loc (aaaa))) error stop\n+\n+        ! Uses has_device_addr due to PR fortran/105318\n+        !!$omp target is_device_ptr(bbbb, aaaa) device(dev)\n+        !$omp target has_device_addr(bbbb, aaaa) device(dev)\n+           if (any (lbound (aaaa) /= [-4, -3, 1])) error stop 9\n+           if (any (shape (aaaa) /= [15, 12, 2])) error stop 10\n+           if (any (lbound (bbbb) /= [-4, -3, 1])) error stop 11\n+           if (any (shape (bbbb) /= [15, 12, 2])) error stop 12\n+           if (any (aaaa /= -bbbb)) error stop 5\n+           if (any (aaaa /= reshape ([(i, i = 1, size(aaaa))], shape(aaaa)))) &\n+             error stop 6\n+        !$omp end target\n+      !$omp end target data\n+    end do\n+    !$omp target exit data map(delete: bbbb) device(dev)\n+    deallocate (bbbb)\n+  end subroutine test_ptr\n+end program main"}]}