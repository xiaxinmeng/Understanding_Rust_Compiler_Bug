{"sha": "597bb7f10b5819fa4209fb5d981f5d660661fb00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk3YmI3ZjEwYjU4MTlmYTQyMDlmYjVkOTgxZjVkNjYwNjYxZmIwMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-05T10:55:34Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-05T10:55:34Z"}, "message": "(store_constructor): Properly compute size of array when\nclearing the whole array.\n\nFrom-SVN: r4021", "tree": {"sha": "6f42deec65d5ed116fe3fa64e651113d9b90801c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f42deec65d5ed116fe3fa64e651113d9b90801c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/597bb7f10b5819fa4209fb5d981f5d660661fb00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597bb7f10b5819fa4209fb5d981f5d660661fb00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597bb7f10b5819fa4209fb5d981f5d660661fb00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597bb7f10b5819fa4209fb5d981f5d660661fb00/comments", "author": null, "committer": null, "parents": [{"sha": "f062da046b8132f0d041a5808db21084a627c6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f062da046b8132f0d041a5808db21084a627c6ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f062da046b8132f0d041a5808db21084a627c6ee"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eadf2e3b9f523105eeaa771a4eeb1add532f1b63", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597bb7f10b5819fa4209fb5d981f5d660661fb00/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597bb7f10b5819fa4209fb5d981f5d660661fb00/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=597bb7f10b5819fa4209fb5d981f5d660661fb00", "patch": "@@ -2565,7 +2565,7 @@ store_constructor (exp, target)\n \n       if (list_length (CONSTRUCTOR_ELTS (exp)) < maxelt - minelt + 1\n \t  || (GET_CODE (target) == REG && TREE_STATIC (exp)))\n-\tclear_storage (target, maxelt - minelt + 1);\n+\tclear_storage (target, int_size_in_bytes (type));\n       else\n \t/* Inform later passes that the old value is dead.  */\n \temit_insn (gen_rtx (CLOBBER, VOIDmode, target));"}]}