{"sha": "8c519039a6363f0013d92f2e742adee4800806a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM1MTkwMzlhNjM2M2YwMDEzZDkyZjJlNzQyYWRlZTQ4MDA4MDZhMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-07T13:16:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-07T13:16:05Z"}, "message": "[multiple changes]\n\n2016-07-07  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch3.adb, sem_prag.adb, sem_prag.ads, prj-ext.adb, freeze.adb,\n\tsem_attr.adb: Minor reformatting, fix typos.\n\n2016-07-07  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch12.adb (In_Same_Scope): Created this function to check\n\ta generic package definition against an instantiation for scope\n\tdependancies.\n\t(Install_Body): Add function In_Same_Scope and\n\tamend conditional in charge of delaying the package instance.\n\t(Is_In_Main_Unit): Add guard to check if parent is present in\n\tassignment of Current_Unit.\n\nFrom-SVN: r238115", "tree": {"sha": "7e392e2007a8885558424eaf320f5844e82f4d38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e392e2007a8885558424eaf320f5844e82f4d38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c519039a6363f0013d92f2e742adee4800806a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c519039a6363f0013d92f2e742adee4800806a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c519039a6363f0013d92f2e742adee4800806a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c519039a6363f0013d92f2e742adee4800806a0/comments", "author": null, "committer": null, "parents": [{"sha": "1c122092dcf48801c638abdf070f18c6fe025ad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c122092dcf48801c638abdf070f18c6fe025ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c122092dcf48801c638abdf070f18c6fe025ad6"}], "stats": {"total": 136, "additions": 70, "deletions": 66}, "files": [{"sha": "1dea7dbf8faddffe88a9eeb132044b43fe86194d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8c519039a6363f0013d92f2e742adee4800806a0", "patch": "@@ -1,3 +1,18 @@\n+2016-07-07  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch3.adb, sem_prag.adb, sem_prag.ads, prj-ext.adb, freeze.adb,\n+\tsem_attr.adb: Minor reformatting, fix typos.\n+\n+2016-07-07  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch12.adb (In_Same_Scope): Created this function to check\n+\ta generic package definition against an instantiation for scope\n+\tdependancies.\n+\t(Install_Body): Add function In_Same_Scope and\n+\tamend conditional in charge of delaying the package instance.\n+\t(Is_In_Main_Unit): Add guard to check if parent is present in\n+\tassignment of Current_Unit.\n+\n 2016-07-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Remove redundant test,"}, {"sha": "d5e8540c0c634e52b290c81612bbee1e0c1e8941", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=8c519039a6363f0013d92f2e742adee4800806a0", "patch": "@@ -130,7 +130,7 @@ package body Freeze is\n \n    procedure Check_Inherited_Conditions (R : Entity_Id);\n    --  For a tagged derived type, create wrappers for inherited operations\n-   --  that have a classwide condition, so it can be properly rewritten if\n+   --  that have a class-wide condition, so it can be properly rewritten if\n    --  it involves calls to other overriding primitives.\n \n    procedure Check_Strict_Alignment (E : Entity_Id);\n@@ -1414,7 +1414,7 @@ package body Freeze is\n \n             --  In SPARK mode this is where we can collect the inherited\n             --  conditions, because we do not create the Check pragmas that\n-            --  normally convey the the modified classwide conditions on\n+            --  normally convey the the modified class-wide conditions on\n             --  overriding operations.\n \n             if SPARK_Mode = On then\n@@ -1451,14 +1451,14 @@ package body Freeze is\n             A_Pre    := Find_Aspect (Par_Prim, Aspect_Pre);\n \n             if Present (A_Pre) and then Class_Present (A_Pre) then\n-               Build_Classwide_Expression\n+               Build_Class_Wide_Expression\n                  (Expression (A_Pre), Prim, Par_Prim, Adjust_Sloc => False);\n             end if;\n \n             A_Post := Find_Aspect (Par_Prim, Aspect_Post);\n \n             if Present (A_Post) and then Class_Present (A_Post) then\n-               Build_Classwide_Expression\n+               Build_Class_Wide_Expression\n                  (Expression (A_Post), Prim, Par_Prim, Adjust_Sloc => False);\n             end if;\n          end if;\n@@ -4663,7 +4663,7 @@ package body Freeze is\n          end if;\n \n          --  For a derived tagged type, check whether inherited primitives\n-         --  might require a wrapper to handle classwide conditions.\n+         --  might require a wrapper to handle class-wide conditions.\n \n          if Is_Tagged_Type (Rec) and then Is_Derived_Type (Rec) then\n             Check_Inherited_Conditions (Rec);"}, {"sha": "127438d8a24875d88346510a62bcef28d8dd5723", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=8c519039a6363f0013d92f2e742adee4800806a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -116,7 +116,7 @@ package body Prj.Ext is\n             then\n                if not Silent then\n                   Debug_Output\n-                    (\"Not overridding existing external reference '\"\n+                    (\"Not overriding existing external reference '\"\n                      & External_Name & \"', value was defined in \"\n                      & N.Source'Img);\n                end if;"}, {"sha": "c0be95d525a8c639cb19b50ccd41cdab2e9ea769", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=8c519039a6363f0013d92f2e742adee4800806a0", "patch": "@@ -3377,9 +3377,9 @@ package body Sem_Attr is\n                P_Type := Underlying_Type (P_Type);\n             end if;\n \n-            --  Must have discriminants or be an access type designating\n-            --  a type with discriminants. If it is a classwide type it\n-            --  has unknown discriminants.\n+            --  Must have discriminants or be an access type designating a type\n+            --  with discriminants. If it is a class-wide type it has unknown\n+            --  discriminants.\n \n             if Has_Discriminants (P_Type)\n               or else Has_Unknown_Discriminants (P_Type)\n@@ -5909,7 +5909,7 @@ package body Sem_Attr is\n \n          else\n             Error_Attr_P\n-              (\"prefix of% attribute must be remote access to classwide\");\n+              (\"prefix of% attribute must be remote access-to-class-wide\");\n          end if;\n \n       ----------"}, {"sha": "0aa23ebc2cd9116145999acf4daa8846e1c542d1", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 21, "deletions": 32, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=8c519039a6363f0013d92f2e742adee4800806a0", "patch": "@@ -8939,8 +8939,9 @@ package body Sem_Ch12 is\n \n       Must_Delay : Boolean;\n \n-      function In_Same_Enclosing_Subp return Boolean;\n-      --  Check whether instance and generic body are within same subprogram.\n+      function In_Same_Scope (Generic_Id, Actual_Id : Node_Id) return Boolean;\n+      --  Check if the generic definition's scope tree and the instantiation's\n+      --  scope tree share a dependency.\n \n       function True_Sloc (N : Node_Id) return Source_Ptr;\n       --  If the instance is nested inside a generic unit, the Sloc of the\n@@ -8950,39 +8951,26 @@ package body Sem_Ch12 is\n       --  origin of a node by finding the maximum sloc of any ancestor node.\n       --  Why is this not equivalent to Top_Level_Location ???\n \n-      ----------------------------\n-      -- In_Same_Enclosing_Subp --\n-      ----------------------------\n-\n-      function In_Same_Enclosing_Subp return Boolean is\n-         Scop : Entity_Id;\n-         Subp : Entity_Id;\n+      -------------------\n+      -- In_Same_Scope --\n+      -------------------\n \n+      function In_Same_Scope (Generic_Id, Actual_Id : Node_Id) return Boolean\n+      is\n+         Act_Scop : Entity_Id := Scope (Actual_Id);\n+         Gen_Scop : Entity_Id := Scope (Generic_Id);\n       begin\n-         Scop := Scope (Act_Id);\n-         while Scop /= Standard_Standard\n-           and then not Is_Overloadable (Scop)\n+         while Scope_Depth_Value (Act_Scop) > 0\n+           and then Scope_Depth_Value (Gen_Scop) > 0\n          loop\n-            Scop := Scope (Scop);\n-         end loop;\n-\n-         if Scop = Standard_Standard then\n-            return False;\n-         else\n-            Subp := Scop;\n-         end if;\n-\n-         Scop := Scope (Gen_Id);\n-         while Scop /= Standard_Standard loop\n-            if Scop = Subp then\n+            if Act_Scop = Gen_Scop then\n                return True;\n-            else\n-               Scop := Scope (Scop);\n             end if;\n+            Act_Scop := Scope (Act_Scop);\n+            Gen_Scop := Scope (Gen_Scop);\n          end loop;\n-\n          return False;\n-      end In_Same_Enclosing_Subp;\n+      end In_Same_Scope;\n \n       ---------------\n       -- True_Sloc --\n@@ -9071,9 +9059,8 @@ package body Sem_Ch12 is\n                                         N_Generic_Package_Declaration)\n                      or else (Gen_Unit = Body_Unit\n                                and then True_Sloc (N) < Sloc (Orig_Body)))\n-          and then Is_In_Main_Unit (Gen_Unit)\n-          and then (Scope (Act_Id) = Scope (Gen_Id)\n-                     or else In_Same_Enclosing_Subp));\n+          and then Is_In_Main_Unit (Original_Node (Gen_Unit))\n+          and then (In_Same_Scope (Gen_Id, Act_Id)));\n \n       --  If this is an early instantiation, the freeze node is placed after\n       --  the generic body. Otherwise, if the generic appears in an instance,\n@@ -12901,6 +12888,7 @@ package body Sem_Ch12 is\n       end if;\n \n       Current_Unit := Parent (N);\n+\n       while Present (Current_Unit)\n         and then Nkind (Current_Unit) /= N_Compilation_Unit\n       loop\n@@ -12915,7 +12903,8 @@ package body Sem_Ch12 is\n       return\n         Current_Unit = Cunit (Main_Unit)\n           or else Current_Unit = Library_Unit (Cunit (Main_Unit))\n-          or else (Present (Library_Unit (Current_Unit))\n+          or else (Present (Current_Unit)\n+                    and then Present (Library_Unit (Current_Unit))\n                     and then Is_In_Main_Unit (Library_Unit (Current_Unit)));\n    end Is_In_Main_Unit;\n "}, {"sha": "4053ead57d607e449d70849ceb63a15748d00ea4", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8c519039a6363f0013d92f2e742adee4800806a0", "patch": "@@ -1415,7 +1415,7 @@ package body Sem_Ch3 is\n       elsif Is_Class_Wide_Type (Full_Desig) and then Etype (Full_Desig) = T\n       then\n          Error_Msg_N\n-           (\"access type cannot designate its own classwide type\", S);\n+           (\"access type cannot designate its own class-wide type\", S);\n \n          --  Clean up indication of tagged status to prevent cascaded errors\n \n@@ -4394,7 +4394,7 @@ package body Sem_Ch3 is\n       --  type, rewrite the declaration as a renaming of the result of the\n       --  call. The exceptions below are cases where the copy is expected,\n       --  either by the back end (Aliased case) or by the semantics, as for\n-      --  initializing controlled types or copying tags for classwide types.\n+      --  initializing controlled types or copying tags for class-wide types.\n \n       if Present (E)\n         and then Nkind (E) = N_Explicit_Dereference\n@@ -16679,9 +16679,9 @@ package body Sem_Ch3 is\n                Set_Ekind (Id, Ekind (Prev));         --  will be reset later\n                Set_Class_Wide_Type (Id, Class_Wide_Type (Prev));\n \n-               --  The type of the classwide type is the current Id. Previously\n+               --  Type of the class-wide type is the current Id. Previously\n                --  this was not done for private declarations because of order-\n-               --  of elaboration issues in the back-end, but gigi now handles\n+               --  of-elaboration issues in the back end, but gigi now handles\n                --  this properly.\n \n                Set_Etype (Class_Wide_Type (Id), Id);"}, {"sha": "9128294556ff0a973cc08107673756368c14449f", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=8c519039a6363f0013d92f2e742adee4800806a0", "patch": "@@ -166,11 +166,11 @@ package body Sem_Prag is\n      Table_Increment      => 100,\n      Table_Name           => \"Name_Externals\");\n \n-   --------------------------------------------------------\n-   -- Handling of inherited classwide pre/postconditions --\n-   --------------------------------------------------------\n+   ---------------------------------------------------------\n+   -- Handling of inherited class-wide pre/postconditions --\n+   ---------------------------------------------------------\n \n-   --  Following AI12-0113, the expression for a classwide condition is\n+   --  Following AI12-0113, the expression for a class-wide condition is\n    --  transformed for a subprogram that inherits it, by replacing calls\n    --  to primitive operations of the original controlling type into the\n    --  corresponding overriding operations of the derived type. The following\n@@ -20339,7 +20339,7 @@ package body Sem_Prag is\n \n             else\n                Error_Pragma_Arg\n-                 (\"pragma% applies only to formal access to classwide types\",\n+                 (\"pragma% applies only to formal access-to-class-wide types\",\n                   Arg1);\n             end if;\n          end Remote_Access_Type;\n@@ -26401,11 +26401,11 @@ package body Sem_Prag is\n       return False;\n    end Appears_In;\n \n-   --------------------------------\n-   -- Build_Classwide_Expression --\n-   --------------------------------\n+   ---------------------------------\n+   -- Build_Class_Wide_Expression --\n+   ---------------------------------\n \n-   procedure Build_Classwide_Expression\n+   procedure Build_Class_Wide_Expression\n      (Prag        : Node_Id;\n       Subp        : Entity_Id;\n       Par_Subp    : Entity_Id;\n@@ -26417,7 +26417,7 @@ package body Sem_Prag is\n       function Replace_Entity (N : Node_Id) return Traverse_Result;\n       --  Replace reference to formal of inherited operation or to primitive\n       --  operation of root type, with corresponding entity for derived type,\n-      --  when constructing the classwide condition of an overridding\n+      --  when constructing the class-wide condition of an overriding\n       --  subprogram.\n \n       --------------------\n@@ -26516,10 +26516,10 @@ package body Sem_Prag is\n       procedure Replace_Condition_Entities is\n         new Traverse_Proc (Replace_Entity);\n \n-   --  Start of processing for Build_Classwide_Expression\n+   --  Start of processing for Build_Class_Wide_Expression\n \n    begin\n-      --  Add mapping from old formals to new formals.\n+      --  Add mapping from old formals to new formals\n \n       Par_Formal := First_Formal (Par_Subp);\n       Subp_Formal  := First_Formal (Subp);\n@@ -26531,7 +26531,7 @@ package body Sem_Prag is\n       end loop;\n \n       Replace_Condition_Entities (Prag);\n-   end Build_Classwide_Expression;\n+   end Build_Class_Wide_Expression;\n \n    -----------------------------------\n    -- Build_Pragma_Check_Equivalent --\n@@ -26608,9 +26608,9 @@ package body Sem_Prag is\n            (Unit_Declaration_Node (Subp_Id), Inher_Id);\n          Check_Prag := New_Copy_Tree (Source => Prag);\n \n-         --  Build the inherited classwide condition.\n+         --  Build the inherited class-wide condition\n \n-         Build_Classwide_Expression\n+         Build_Class_Wide_Expression\n            (Check_Prag, Subp_Id, Inher_Id, Adjust_Sloc => True);\n \n       --  If not an inherited condition simply copy the original pragma"}, {"sha": "c442d55246a443c7faeb68916c3c1bcb2b18307f", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c519039a6363f0013d92f2e742adee4800806a0/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=8c519039a6363f0013d92f2e742adee4800806a0", "patch": "@@ -244,21 +244,21 @@ package Sem_Prag is\n    procedure Analyze_Test_Case_In_Decl_Part (N : Node_Id);\n    --  Perform preanalysis of pragma Test_Case\n \n-   procedure Build_Classwide_Expression\n+   procedure Build_Class_Wide_Expression\n      (Prag        : Node_Id;\n       Subp        : Entity_Id;\n       Par_Subp    : Entity_Id;\n       Adjust_Sloc : Boolean);\n-   --  Build the expression for an inherited classwide condition. Prag is\n+   --  Build the expression for an inherited class-wide condition. Prag is\n    --  the pragma constructed from the corresponding aspect of the parent\n-   --  subprogram, and Subp is the overridding operation and Par_Subp is\n+   --  subprogram, and Subp is the overriding operation and Par_Subp is\n    --  the overridden operation that has the condition. Adjust_Sloc is True\n    --  when the sloc of nodes traversed should be adjusted for the inherited\n    --  pragma. The routine is also called to check whether an inherited\n    --  operation that is not overridden but has inherited conditions need\n    --  a wrapper, because the inherited condition includes calls to other\n    --  primitives that have been overridden. In that case the first argument\n-   --  is the expression of the original classwide aspect. In SPARK_Mode, such\n+   --  is the expression of the original class-wide aspect. In SPARK_Mode, such\n    --  operation which are just inherited but have modified pre/postconditions\n    --  are illegal.\n "}]}