{"sha": "7c1d6e89994109e1b6efb5f13890be5586edeb75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MxZDZlODk5OTQxMDllMWI2ZWZiNWYxMzg5MGJlNTU4NmVkZWI3NQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-03-29T12:41:08Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-03-31T13:50:22Z"}, "message": "arm: Fix mult autovectorization patterm for iwmmxt (PR target/99786)\n\nSimilarly to other recently-added autovectorization patterns, mult has\nbeen erroneously enabled for iwmmxt. However, V4HI and V2SI modes are\nsupported, so we make an exception for them.\n\nThe new testcase is derived from gcc.dg/ubsan/pr79904.c, with\nadditional modes added.\n\nI kept dg-do compile because 'assemble' results in error messages from\nthe assembler, which are not related to this PR:\n\nError: selected processor does not support `tmcrr wr0,r4,r5' in ARM mode\nError: selected processor does not support `wstrd wr0,[r0]' in ARM mode\nError: selected processor does not support `wldrd wr0,[r0]' in ARM mode\nError: selected processor does not support `wldrd wr2,.L5' in ARM mode\nError: selected processor does not support `wmulul wr0,wr0,wr2' in ARM mode\nError: selected processor does not support `wstrd wr0,[r0]' in ARM mode\nError: selected processor does not support `wldrd wr0,[r0]' in ARM mode\nError: selected processor does not support `wldrd wr2,.L8' in ARM mode\nError: selected processor does not support `wmulwl wr0,wr0,wr2' in ARM mode\nError: selected processor does not support `wstrd wr0,[r0]' in ARM mode\n\n2021-03-29  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tPR target/99786\n\n\tgcc/\n\t* config/arm/vec-common.md (mul<mode>3): Disable on iwMMXT, expect\n\tfor V4HI and V2SI.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/pr99786.c: New test.", "tree": {"sha": "51868249600926baafe5e35747b2c2d40a65805b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51868249600926baafe5e35747b2c2d40a65805b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c1d6e89994109e1b6efb5f13890be5586edeb75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c1d6e89994109e1b6efb5f13890be5586edeb75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c1d6e89994109e1b6efb5f13890be5586edeb75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c1d6e89994109e1b6efb5f13890be5586edeb75/comments", "author": null, "committer": null, "parents": [{"sha": "bf24f4ec73b65454ea0edcd6ab5616f04958d41e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf24f4ec73b65454ea0edcd6ab5616f04958d41e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf24f4ec73b65454ea0edcd6ab5616f04958d41e"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "0b2b3b1c9ce4ed0891efe2060ef6bc968a6d2757", "filename": "gcc/config/arm/vec-common.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1d6e89994109e1b6efb5f13890be5586edeb75/gcc%2Fconfig%2Farm%2Fvec-common.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1d6e89994109e1b6efb5f13890be5586edeb75/gcc%2Fconfig%2Farm%2Fvec-common.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvec-common.md?ref=7c1d6e89994109e1b6efb5f13890be5586edeb75", "patch": "@@ -103,7 +103,10 @@\n   [(set (match_operand:VDQWH 0 \"s_register_operand\")\n \t(mult:VDQWH (match_operand:VDQWH 1 \"s_register_operand\")\n \t\t    (match_operand:VDQWH 2 \"s_register_operand\")))]\n-  \"ARM_HAVE_<MODE>_ARITH\"\n+  \"ARM_HAVE_<MODE>_ARITH\n+   && (!TARGET_REALLY_IWMMXT\n+       || <MODE>mode == V4HImode\n+       || <MODE>mode == V2SImode)\"\n )\n \n (define_expand \"smin<mode>3\""}, {"sha": "11d86f09d1217aba62df5aea7f53ba11350490fa", "filename": "gcc/testsuite/gcc.target/arm/pr99786.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1d6e89994109e1b6efb5f13890be5586edeb75/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr99786.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1d6e89994109e1b6efb5f13890be5586edeb75/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr99786.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr99786.c?ref=7c1d6e89994109e1b6efb5f13890be5586edeb75", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-mcpu=*\" } { \"-mcpu=iwmmxt\" } } */\n+/* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-mabi=*\" } { \"-mabi=iwmmxt\" } } */\n+/* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-march=*\" } { \"-march=iwmmxt\" } } */\n+/* { dg-skip-if \"Test is specific to ARM mode\" { arm*-*-* } { \"-mthumb\" } { \"\" } } */\n+/* { dg-require-effective-target arm32 } */\n+/* { dg-require-effective-target arm_iwmmxt_ok } */\n+/* { dg-options \"-O3 -mcpu=iwmmxt\" } */\n+\n+typedef signed char V __attribute__((vector_size (8))); \n+\n+void\n+foo (V *a) \n+{ \n+  *a = *a * 3; \n+}\n+\n+typedef signed short Vshort __attribute__((vector_size (8))); \n+void\n+foo_short (Vshort *a) \n+{ \n+  *a = *a * 3; \n+}\n+\n+typedef signed int Vint __attribute__((vector_size (8))); \n+void\n+foo_int (Vint *a) \n+{ \n+  *a = *a * 3; \n+}"}]}