{"sha": "825e5599f356608c3c48f9bcc3febec2d879261e", "node_id": "C_kwDOANBUbNoAKDgyNWU1NTk5ZjM1NjYwOGMzYzQ4ZjliY2MzZmViZWMyZDg3OTI2MWU", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-01-31T08:14:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-01-31T08:15:30Z"}, "message": "Add testcase for incorrect optimization in Ada\n\ngcc/testsuite/\n\t* gnat.dg/div_zero.adb: New test.", "tree": {"sha": "7ea91c7ba4d2c03d764c90dbd7a547092d2b17b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ea91c7ba4d2c03d764c90dbd7a547092d2b17b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/825e5599f356608c3c48f9bcc3febec2d879261e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825e5599f356608c3c48f9bcc3febec2d879261e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/825e5599f356608c3c48f9bcc3febec2d879261e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825e5599f356608c3c48f9bcc3febec2d879261e/comments", "author": null, "committer": null, "parents": [{"sha": "3c7067cc92281dcbfeaf64116d8416f2092b4c10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7067cc92281dcbfeaf64116d8416f2092b4c10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7067cc92281dcbfeaf64116d8416f2092b4c10"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "c7237bd6ab67f5c38b60b698ecf26742b149181f", "filename": "gcc/testsuite/gnat.dg/div_zero.adb", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825e5599f356608c3c48f9bcc3febec2d879261e/gcc%2Ftestsuite%2Fgnat.dg%2Fdiv_zero.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825e5599f356608c3c48f9bcc3febec2d879261e/gcc%2Ftestsuite%2Fgnat.dg%2Fdiv_zero.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiv_zero.adb?ref=825e5599f356608c3c48f9bcc3febec2d879261e", "patch": "@@ -0,0 +1,23 @@\n+-- { dg-do run }\n+\n+-- This test requires architecture- and OS-specific support code for unwinding\n+-- through signal frames (typically located in *-unwind.h) to pass.  Feel free\n+-- to disable it if this code hasn't been implemented yet.\n+\n+procedure Div_Zero is\n+\n+  pragma Suppress (All_Checks);\n+\n+  function Zero return Integer is\n+  begin\n+    return 0;\n+  end;\n+\n+  D : Integer := Zero;\n+\n+begin\n+  D := 1 / D;\n+  raise Program_Error;\n+exception\n+  when Constraint_Error => null;\n+end;"}]}