{"sha": "7666d649f80feb0d9944e5affbe9f0687084054a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY2NmQ2NDlmODBmZWIwZDk5NDRlNWFmZmJlOWYwNjg3MDg0MDU0YQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-09-22T16:01:53Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-09-22T16:01:53Z"}, "message": "Include <bits/uses_allocator.h> in <stack> and <queue>.\n\n\t* include/bits/stl_queue.h: Include missing header.\n\t* include/bits/stl_stack.h: Likewise.\n\t* testsuite/23_containers/priority_queue/requirements/\n\tuses_allocator.cc: New.\n\t* testsuite/23_containers/queue/requirements/uses_allocator.cc: New.\n\t* testsuite/23_containers/stack/requirements/uses_allocator.cc: New.\n\nFrom-SVN: r215470", "tree": {"sha": "d1963fa31ca0090ac40a18fdef964b890c868b08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1963fa31ca0090ac40a18fdef964b890c868b08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7666d649f80feb0d9944e5affbe9f0687084054a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7666d649f80feb0d9944e5affbe9f0687084054a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7666d649f80feb0d9944e5affbe9f0687084054a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7666d649f80feb0d9944e5affbe9f0687084054a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0acc67651f71e0bba0203c371c9e5137a311b2e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0acc67651f71e0bba0203c371c9e5137a311b2e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0acc67651f71e0bba0203c371c9e5137a311b2e3"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "5cd422e4a1191c16f0d5d6abc77d2770490cd2e0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7666d649f80feb0d9944e5affbe9f0687084054a", "patch": "@@ -1,3 +1,12 @@\n+2014-09-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_queue.h: Include missing header.\n+\t* include/bits/stl_stack.h: Likewise.\n+\t* testsuite/23_containers/priority_queue/requirements/\n+\tuses_allocator.cc: New.\n+\t* testsuite/23_containers/queue/requirements/uses_allocator.cc: New.\n+\t* testsuite/23_containers/stack/requirements/uses_allocator.cc: New.\n+\n 2014-09-22  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/status_cxx2011.xml: Update C++11 status."}, {"sha": "32124e34b502150ab50122c99aa3eed23a58bd18", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=7666d649f80feb0d9944e5affbe9f0687084054a", "patch": "@@ -58,6 +58,9 @@\n \n #include <bits/concept_check.h>\n #include <debug/debug.h>\n+#if __cplusplus >= 201103L\n+# include <bits/uses_allocator.h>\n+#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "f4bb72c3891ae327a76867140dc9bd37610ba7be", "filename": "libstdc++-v3/include/bits/stl_stack.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h?ref=7666d649f80feb0d9944e5affbe9f0687084054a", "patch": "@@ -58,6 +58,9 @@\n \n #include <bits/concept_check.h>\n #include <debug/debug.h>\n+#if __cplusplus >= 201103L\n+# include <bits/uses_allocator.h>\n+#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "efe73aee8791b689469b7663d7d36ef48c04994d", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/requirements/uses_allocator.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fuses_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fuses_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Frequirements%2Fuses_allocator.cc?ref=7666d649f80feb0d9944e5affbe9f0687084054a", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <queue>\n+\n+template<typename A>\n+  using uses_allocator = std::uses_allocator<std::priority_queue<int>, A>;\n+\n+static_assert( uses_allocator<std::allocator<int>>::value, \"valid allocator\" );\n+\n+struct X { };\n+static_assert( !uses_allocator<X>::value, \"invalid allocator\" );"}, {"sha": "42106caf8a5a9fe428306dc89a6cc9b9bfc4aaf3", "filename": "libstdc++-v3/testsuite/23_containers/queue/requirements/uses_allocator.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fuses_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fuses_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Frequirements%2Fuses_allocator.cc?ref=7666d649f80feb0d9944e5affbe9f0687084054a", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <queue>\n+\n+template<typename A>\n+  using uses_allocator = std::uses_allocator<std::queue<int>, A>;\n+\n+static_assert( uses_allocator<std::allocator<int>>::value, \"valid allocator\" );\n+\n+struct X { };\n+static_assert( !uses_allocator<X>::value, \"invalid allocator\" );"}, {"sha": "3663d633b45ba96c99a3dc603db165cabf7d9088", "filename": "libstdc++-v3/testsuite/23_containers/stack/requirements/uses_allocator.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fuses_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7666d649f80feb0d9944e5affbe9f0687084054a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fuses_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Frequirements%2Fuses_allocator.cc?ref=7666d649f80feb0d9944e5affbe9f0687084054a", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <stack>\n+\n+template<typename A>\n+  using uses_allocator = std::uses_allocator<std::stack<int>, A>;\n+\n+static_assert( uses_allocator<std::allocator<int>>::value, \"valid allocator\" );\n+\n+struct X { };\n+static_assert( !uses_allocator<X>::value, \"invalid allocator\" );"}]}