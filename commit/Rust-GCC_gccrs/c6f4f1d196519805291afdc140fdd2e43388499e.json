{"sha": "c6f4f1d196519805291afdc140fdd2e43388499e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZmNGYxZDE5NjUxOTgwNTI5MWFmZGMxNDBmZGQyZTQzMzg4NDk5ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2007-11-14T23:21:15Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-11-14T23:21:15Z"}, "message": "re PR target/33923 (ICE in reload_cse_simplify_operands (insn does not satisfy its constraints))\n\n\tPR target/33923\n\t* config/ia64/ia64.h (CANNOT_CHANGE_MODE_CLASS): Forbid mode changes\n\tfor registers in BR_REGS class.\n\nFrom-SVN: r130188", "tree": {"sha": "36aea9f33ba007b4bed28b66f158e01080ecc402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36aea9f33ba007b4bed28b66f158e01080ecc402"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6f4f1d196519805291afdc140fdd2e43388499e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f4f1d196519805291afdc140fdd2e43388499e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6f4f1d196519805291afdc140fdd2e43388499e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f4f1d196519805291afdc140fdd2e43388499e/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7bc70c5bfd8b06a03df87734d37201cc0ac9463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7bc70c5bfd8b06a03df87734d37201cc0ac9463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7bc70c5bfd8b06a03df87734d37201cc0ac9463"}], "stats": {"total": 96, "additions": 93, "deletions": 3}, "files": [{"sha": "60529f5975488215915593102826dbe87198742b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f4f1d196519805291afdc140fdd2e43388499e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f4f1d196519805291afdc140fdd2e43388499e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6f4f1d196519805291afdc140fdd2e43388499e", "patch": "@@ -1,3 +1,9 @@\n+2007-11-14  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/33923\n+\t* config/ia64/ia64.h (CANNOT_CHANGE_MODE_CLASS): Forbid mode changes\n+\tfor registers in BR_REGS class.\n+\n 2007-11-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/34088"}, {"sha": "5f0c28ce706efb36030a534f7c0bd6094033bcfb", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f4f1d196519805291afdc140fdd2e43388499e/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f4f1d196519805291afdc140fdd2e43388499e/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=c6f4f1d196519805291afdc140fdd2e43388499e", "patch": "@@ -887,12 +887,16 @@ enum reg_class\n    : (((CLASS) == FR_REGS || (CLASS) == FP_REGS) && (MODE) == XCmode) ? 2 \\\n    : (GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n \n-/* In FP regs, we can't change FP values to integer values and vice versa,\n+/* In BR regs, we can't change the DImode at all.\n+   In FP regs, we can't change FP values to integer values and vice versa,\n    but we can change e.g. DImode to SImode, and V2SFmode into DImode.  */\n \n #define CANNOT_CHANGE_MODE_CLASS(FROM, TO, CLASS) \t\t\\\n-  (SCALAR_FLOAT_MODE_P (FROM) != SCALAR_FLOAT_MODE_P (TO)\t\\\n-   ? reg_classes_intersect_p (CLASS, FR_REGS) : 0)\n+  (reg_classes_intersect_p (CLASS, BR_REGS)\t\t\t\\\n+   ? (FROM) != (TO)\t\t\t\t\t\t\\\n+   : (SCALAR_FLOAT_MODE_P (FROM) != SCALAR_FLOAT_MODE_P (TO)\t\\\n+      ? reg_classes_intersect_p (CLASS, FR_REGS)\t\t\\\n+      : 0))\n \f\n /* Basic Stack Layout */\n "}, {"sha": "66ac3de12e8f03757d6b6e5320c506a7ee581b3f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f4f1d196519805291afdc140fdd2e43388499e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f4f1d196519805291afdc140fdd2e43388499e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6f4f1d196519805291afdc140fdd2e43388499e", "patch": "@@ -1,3 +1,7 @@\n+2007-11-14  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/pr33923.c: New test.\n+\n 2007-11-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/34088"}, {"sha": "d71e5578a8a054ce6fa5d38578ff6d0c0de24a5c", "filename": "gcc/testsuite/gcc.dg/pr33923.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f4f1d196519805291afdc140fdd2e43388499e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33923.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f4f1d196519805291afdc140fdd2e43388499e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33923.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33923.c?ref=c6f4f1d196519805291afdc140fdd2e43388499e", "patch": "@@ -0,0 +1,76 @@\n+/* PR target/33923 */\n+/* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 --param max-partial-antic-length=0\" } */\n+\n+static int pendingCommand;\n+static int currentModifiers;\n+typedef struct\n+{\n+  int (*updateKeys) (int *keyPressed);\n+}\n+ProtocolOperations;\n+static const ProtocolOperations *protocol;\n+brl_readCommand (void)\n+{\n+  unsigned long int keys;\n+  int command;\n+  int keyPressed;\n+  unsigned char routingKeys[200];\n+  int routingKeyCount;\n+  signed char rightVerticalSensor;\n+  if (pendingCommand != (-1))\n+    {\n+      return command;\n+    }\n+  if (!protocol->updateKeys (&keyPressed))\n+    {\n+      if (rightVerticalSensor >= 0)\n+        keys |= 1;\n+      if ((routingKeyCount == 0) && keys)\n+        {\n+          if (currentModifiers)\n+            {\n+            doChord:switch (keys);\n+            }\n+          else\n+            {\n+            doCharacter:\n+              command = 0X2200;\n+              if (keys & 0X01UL)\n+                command |= 0001;\n+              if (keys & 0X02UL)\n+                command |= 0002;\n+              if (keys & 0X04UL)\n+                command |= 0004;\n+              if (keys & 0X08UL)\n+                command |= 0010;\n+              if (keys & 0X10UL)\n+                command |= 0020;\n+              if (keys & 0X20UL)\n+                command |= 0040;\n+              if (currentModifiers & (0X0010 | 0X0200))\n+                command |= 0100;\n+              if (currentModifiers & 0X0040)\n+                command |= 0200;\n+              if (currentModifiers & 0X0100)\n+                command |= 0X020000;\n+              if (currentModifiers & 0X0400)\n+                command |= 0X080000;\n+              if (currentModifiers & 0X0800)\n+                command |= 0X040000;\n+            }\n+          unsigned char key1 = routingKeys[0];\n+          if (key1 == 0)\n+            {\n+            } else if (key1 == 1)\n+            if (keys)\n+              {\n+                currentModifiers |= 0X0010;\n+                goto doCharacter;\n+              }\n+        }\n+    }\n+  return command;\n+}"}]}