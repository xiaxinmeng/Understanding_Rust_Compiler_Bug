{"sha": "7399e345be175f47d0a7287703c752a2941fa889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM5OWUzNDViZTE3NWY0N2QwYTcyODc3MDNjNzUyYTI5NDFmYTg4OQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-20T23:31:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-20T23:31:00Z"}, "message": "libgo: fix build when using -enable-static=no\n    \n    With -enable-static=no we don't build non-pic objects, but libgotool.a\n    is built from non-pic objects.  Build the packages that go into\n    libgotool.a in static mode in all cases.\n    \n    Also ensure that internal test packages are built, since nothing\n    explicitly depended on them.\n    \n    Reviewed-on: https://go-review.googlesource.com/65050\n\nFrom-SVN: r253042", "tree": {"sha": "d215d05316d47d51edd70abb6400cb803f1591bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d215d05316d47d51edd70abb6400cb803f1591bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7399e345be175f47d0a7287703c752a2941fa889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7399e345be175f47d0a7287703c752a2941fa889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7399e345be175f47d0a7287703c752a2941fa889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7399e345be175f47d0a7287703c752a2941fa889/comments", "author": null, "committer": null, "parents": [{"sha": "073809a7187bba6eb3a775d45a248754e9f37a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/073809a7187bba6eb3a775d45a248754e9f37a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/073809a7187bba6eb3a775d45a248754e9f37a64"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "5b3206abc86689298a1d546f690292087ed6650c", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7399e345be175f47d0a7287703c752a2941fa889/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7399e345be175f47d0a7287703c752a2941fa889/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=7399e345be175f47d0a7287703c752a2941fa889", "patch": "@@ -1,4 +1,4 @@\n-5deeab42b0e5fdf2721773ce7fdaf61716599d4d\n+1fcb9bb3cefb97cfab1e623826a1cc3f6aadd5f7\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "336071d3d1666d0d388dce05769ca4d3ba8775ab", "filename": "libgo/Makefile.am", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7399e345be175f47d0a7287703c752a2941fa889/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7399e345be175f47d0a7287703c752a2941fa889/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=7399e345be175f47d0a7287703c752a2941fa889", "patch": "@@ -395,6 +395,13 @@ toolexeclibgounicode_DATA = \\\n \tunicode/utf16.gox \\\n \tunicode/utf8.gox\n \n+# Some packages are only needed for tests, so unlike the other\n+# internal packages nothing will explicitly depend on them.\n+# Force them to be built.\n+noinst_DATA = \\\n+\tinternal/testenv.gox \\\n+\tnet/internal/socktest.gox\n+\n if LIBGO_IS_RTEMS\n rtems_task_variable_add_file = runtime/rtems-task-variable-add.c\n else\n@@ -573,7 +580,7 @@ s-runtime-inc: runtime.lo Makefile\n \trm -f runtime.inc.tmp2 runtime.inc.tmp3\n \t$(STAMP) $@\n \n-noinst_DATA = zstdpkglist.go zdefaultcc.go\n+noinst_DATA += zstdpkglist.go zdefaultcc.go\n \n # Generate the list of go std packages that were included in libgo\n zstdpkglist.go: s-zstdpkglist; @true\n@@ -924,6 +931,12 @@ libgotool_a_SOURCES =\n libgotool_a_DEPENDENCIES = $(addsuffix .lo,$(GOTOOL_PACKAGES))\n libgotool_a_LIBADD = $(addsuffix .o,$(GOTOOL_PACKAGES))\n \n+define STATIC_template\n+$(subst -,_,$(subst .,_,$(subst /,_,$(1))))_GOCFLAGS = -static\n+endef\n+\n+$(foreach package,$(GOTOOL_PACKAGES),$(eval $(call STATIC_template,$(package).lo)))\n+\n # Make sure runtime.inc is built before compiling any .c file.\n $(libgo_la_OBJECTS): runtime.inc\n $(libgo_llgo_la_OBJECTS): runtime.inc"}, {"sha": "3ace02d8c14a709d9389ea52d0547aaf41745149", "filename": "libgo/Makefile.in", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7399e345be175f47d0a7287703c752a2941fa889/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7399e345be175f47d0a7287703c752a2941fa889/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=7399e345be175f47d0a7287703c752a2941fa889", "patch": "@@ -765,6 +765,12 @@ toolexeclibgounicode_DATA = \\\n \tunicode/utf16.gox \\\n \tunicode/utf8.gox\n \n+\n+# Some packages are only needed for tests, so unlike the other\n+# internal packages nothing will explicitly depend on them.\n+# Force them to be built.\n+noinst_DATA = internal/testenv.gox net/internal/socktest.gox \\\n+\tzstdpkglist.go zdefaultcc.go\n @LIBGO_IS_RTEMS_FALSE@rtems_task_variable_add_file = \n @LIBGO_IS_RTEMS_TRUE@rtems_task_variable_add_file = runtime/rtems-task-variable-add.c\n @LIBGO_IS_AIX_FALSE@@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@runtime_getncpu_file = runtime/getncpu-none.c\n@@ -817,7 +823,6 @@ runtime_files = \\\n GCCGO_INSTALL_NAME := $(shell echo gccgo|sed '$(program_transform_name)')\n GCC_INSTALL_NAME := $(shell echo gcc|sed '$(program_transform_name)')\n GXX_INSTALL_NAME := $(shell echo g++|sed '$(program_transform_name)')\n-noinst_DATA = zstdpkglist.go zdefaultcc.go\n @LIBGO_IS_LINUX_FALSE@syscall_epoll_file = \n @LIBGO_IS_LINUX_TRUE@syscall_epoll_file = epoll.go\n SYSINFO_FLAGS = \\\n@@ -3248,6 +3253,12 @@ s-epoll: Makefile\n \t$(SHELL) $(srcdir)/mvifdiff.sh epoll.go.tmp epoll.go\n \t$(STAMP) $@\n \n+define STATIC_template\n+$(subst -,_,$(subst .,_,$(subst /,_,$(1))))_GOCFLAGS = -static\n+endef\n+\n+$(foreach package,$(GOTOOL_PACKAGES),$(eval $(call STATIC_template,$(package).lo)))\n+\n # Make sure runtime.inc is built before compiling any .c file.\n $(libgo_la_OBJECTS): runtime.inc\n $(libgo_llgo_la_OBJECTS): runtime.inc"}]}