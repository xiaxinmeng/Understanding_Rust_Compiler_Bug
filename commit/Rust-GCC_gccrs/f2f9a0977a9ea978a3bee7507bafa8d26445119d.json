{"sha": "f2f9a0977a9ea978a3bee7507bafa8d26445119d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJmOWEwOTc3YTllYTk3OGEzYmVlNzUwN2JhZmE4ZDI2NDQ1MTE5ZA==", "commit": {"author": {"name": "Patrick Marlier", "email": "patrick.marlier@gmail.com", "date": "2012-05-21T22:48:00Z"}, "committer": {"name": "Patrick Marlier", "email": "pmarlier@gcc.gnu.org", "date": "2012-05-21T22:48:00Z"}, "message": "eh_cpp.cc: Fix __cxa_end_catch declaration.\n\n2012-05-21  Patrick Marlier  <patrick.marlier@gmail.com>\n\n\t* eh_cpp.cc: Fix __cxa_end_catch declaration.\n\nFrom-SVN: r187747", "tree": {"sha": "947643df0c37d9581dbc9d0eb183eada4ef952b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/947643df0c37d9581dbc9d0eb183eada4ef952b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2f9a0977a9ea978a3bee7507bafa8d26445119d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f9a0977a9ea978a3bee7507bafa8d26445119d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f9a0977a9ea978a3bee7507bafa8d26445119d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f9a0977a9ea978a3bee7507bafa8d26445119d/comments", "author": {"login": "patrickmarlier", "id": 3294919, "node_id": "MDQ6VXNlcjMyOTQ5MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3294919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrickmarlier", "html_url": "https://github.com/patrickmarlier", "followers_url": "https://api.github.com/users/patrickmarlier/followers", "following_url": "https://api.github.com/users/patrickmarlier/following{/other_user}", "gists_url": "https://api.github.com/users/patrickmarlier/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrickmarlier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrickmarlier/subscriptions", "organizations_url": "https://api.github.com/users/patrickmarlier/orgs", "repos_url": "https://api.github.com/users/patrickmarlier/repos", "events_url": "https://api.github.com/users/patrickmarlier/events{/privacy}", "received_events_url": "https://api.github.com/users/patrickmarlier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "041f2072200cfe6445d57868a412a17a3d006e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/041f2072200cfe6445d57868a412a17a3d006e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/041f2072200cfe6445d57868a412a17a3d006e04"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "0ccdf42c592d53b30d32e007921cae9b894adb55", "filename": "libitm/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f9a0977a9ea978a3bee7507bafa8d26445119d/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f9a0977a9ea978a3bee7507bafa8d26445119d/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=f2f9a0977a9ea978a3bee7507bafa8d26445119d", "patch": "@@ -1,3 +1,7 @@\n+2012-05-21  Patrick Marlier  <patrick.marlier@gmail.com>\n+\n+\t* eh_cpp.cc: Fix __cxa_end_catch declaration.\n+\n 2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "27e38542d43453b6af9a5f46ac2b68c35a7657e1", "filename": "libitm/eh_cpp.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f9a0977a9ea978a3bee7507bafa8d26445119d/libitm%2Feh_cpp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f9a0977a9ea978a3bee7507bafa8d26445119d/libitm%2Feh_cpp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Feh_cpp.cc?ref=f2f9a0977a9ea978a3bee7507bafa8d26445119d", "patch": "@@ -36,14 +36,14 @@ extern \"C\" {\n extern void *__cxa_allocate_exception (size_t) WEAK;\n extern void __cxa_throw (void *, void *, void *) WEAK;\n extern void *__cxa_begin_catch (void *) WEAK;\n-extern void *__cxa_end_catch (void) WEAK;\n+extern void __cxa_end_catch (void) WEAK;\n extern void __cxa_tm_cleanup (void *, void *, unsigned int) WEAK;\n \n #if !defined (HAVE_ELF_STYLE_WEAKREF) && !defined (__MACH__)\n void *__cxa_allocate_exception (size_t) { return NULL; }\n void __cxa_throw (void *, void *, void *) { return; }\n void *__cxa_begin_catch (void *) { return NULL; }\n-void *__cxa_end_catch (void) { return NULL; }\n+void __cxa_end_catch (void) { return; }\n void __cxa_tm_cleanup (void *, void *, unsigned int) { return; }\n void _Unwind_DeleteException (_Unwind_Exception *) { return; }\n #endif /* HAVE_ELF_STYLE_WEAKREF */"}]}