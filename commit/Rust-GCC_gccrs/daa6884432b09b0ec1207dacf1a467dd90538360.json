{"sha": "daa6884432b09b0ec1207dacf1a467dd90538360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhNjg4NDQzMmIwOWIwZWMxMjA3ZGFjZjFhNDY3ZGQ5MDUzODM2MA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-26T00:16:36Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-26T00:16:36Z"}, "message": "Daily bump.", "tree": {"sha": "70ad324e4da31691b875a4223b2af142986d4bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70ad324e4da31691b875a4223b2af142986d4bf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daa6884432b09b0ec1207dacf1a467dd90538360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa6884432b09b0ec1207dacf1a467dd90538360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa6884432b09b0ec1207dacf1a467dd90538360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa6884432b09b0ec1207dacf1a467dd90538360/comments", "author": null, "committer": null, "parents": [{"sha": "d656bfda2d8316627d0bbb18b10954e6aaf3c88c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d656bfda2d8316627d0bbb18b10954e6aaf3c88c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d656bfda2d8316627d0bbb18b10954e6aaf3c88c"}], "stats": {"total": 310, "additions": 309, "deletions": 1}, "files": [{"sha": "375358f9ccd3c8f813a345e49e8ab012bd959ae8", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1,3 +1,8 @@\n+2021-02-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* server.cc: Use #if NETWORKING not #ifdef, to be consistent\n+\twith elsewhere.\n+\n 2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR c++/98316"}, {"sha": "b3d8d96d85ecbfac7194cb374141b862165bbf60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1,3 +1,55 @@\n+2021-02-25  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/aarch64/aarch64.md (<optab>_rol<mode>3): Add a '#'\n+\tmark in front of the immediate quantity.\n+\t(<optab>_rolsi3_uxtw): Likewise.\n+\n+2021-02-25  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/99271\n+\t* config/arm/thumb2.md (nonsecure_call_reg_thumb2_fpcxt): New pattern.\n+\t(nonsecure_call_value_reg_thumb2_fpcxt): Likewise.\n+\t(nonsecure_call_reg_thumb2): Restrict to using r4 for the callee\n+\taddress and disable when the FPCXT is not available.\n+\t(nonsecure_call_value_reg_thumb2): Likewise.\n+\n+2021-02-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99166\n+\t* doc/invoke.texi (flang-info-module-cmi): Renamed option.\n+\n+2021-02-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* tree-vect-slp.c (optimize_load_redistribution_1): Abort on NULL nodes.\n+\n+2021-02-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99253\n+\t* tree-vect-loop.c (check_reduction_path): First compute\n+\tcode, then verify out-of-loop uses.\n+\n+2021-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/95798\n+\t* match.pd ((T)(A) + CST -> (T)(A + CST)): Add :s to convert.\n+\n+2021-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/80635\n+\t* tree-vrp.c (vrp_simplify_cond_using_ranges): Also handle\n+\tVIEW_CONVERT_EXPR if modes are the same, innerop is integral and\n+\thas mode precision.\n+\n+2021-02-25  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (optimize_load_redistribution_1): Delay\n+\tload_map population.\n+\t(vect_match_slp_patterns_2): Revert part of last change.\n+\t(vect_analyze_slp): Do not interleave optimize_load_redistribution\n+\twith pattern detection but do it afterwards.  Dump the\n+\twhole SLP graph after pattern recognition and load\n+\tredistribution optimization finished.\n+\n 2021-02-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/99226"}, {"sha": "912738ecba1b7663f62265f36b2965f1b2dca0c5", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1 +1 @@\n-20210225\n+20210226"}, {"sha": "955e89f5fdc7cf6ed7d56f135afa884b579d439d", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1,3 +1,19 @@\n+2021-02-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99193\n+\t* region-model-impl-calls.cc (region_model::impl_call_realloc): New.\n+\t* region-model.cc (region_model::on_call_pre): Call it.\n+\t* region-model.h (region_model::impl_call_realloc): New decl.\n+\t* sm-malloc.cc (enum wording): Add WORDING_REALLOCATED.\n+\t(malloc_state_machine::m_realloc): New field.\n+\t(use_after_free::describe_state_change): Add case for\n+\tWORDING_REALLOCATED.\n+\t(use_after_free::describe_final_event): Likewise.\n+\t(malloc_state_machine::malloc_state_machine): Initialize\n+\tm_realloc.\n+\t(malloc_state_machine::on_stmt): Handle realloc by calling...\n+\t(malloc_state_machine::on_realloc_call): New.\n+\n 2021-02-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/99196"}, {"sha": "a13d02102d0fb91e6db96e08f77e18b0230c5dd6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1,3 +1,8 @@\n+2021-02-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99166\n+\t* c.opt (-flang-info-module-cmi): Renamed option.\n+\n 2021-02-19  Nathan Sidwell  <nathan@acm.org>\n \n \t* c.opt (flang-info-module-read, flang-info-module-read=): New."}, {"sha": "9b12a171feb34c474865c8d42ade105b93926532", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1,3 +1,53 @@\n+2021-02-25  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99213\n+\tPR c++/94521\n+\t* error.c (dump_scope): Pass TFF_NO_TEMPLATE_BINDINGS instead of\n+\tTFF_NO_FUNCTION_ARGUMENTS when dumping a function scope.\n+\n+2021-02-25  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99103\n+\t* pt.c (is_spec_or_derived): Drop cv-qualifiers from 'etype'.\n+\t(maybe_aggr_guide): Fix order of arguments to is_spec_or_derived.\n+\n+2021-02-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tDR 1312\n+\tPR c++/99176\n+\t* constexpr.c (is_std_construct_at): New overload.\n+\t(is_std_allocator_allocate): New overload.\n+\t(cxx_eval_call_expression): Use the new overloads.\n+\t(cxx_eval_constant_expression): Reject casting\n+\tfrom void * as per DR 1312.  Don't check can_convert.\n+\n+2021-02-25  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/97587\n+\t* coroutines.cc (struct param_info): Track rvalue refs.\n+\t(morph_fn_to_coro): Track rvalue refs, and call the promise\n+\tCTOR with the frame copy of passed parms.\n+\n+2021-02-25  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95822\n+\t* coroutines.cc (morph_fn_to_coro): Unconditionally remove any\n+\tset throwing_cleanup marker.\n+\n+2021-02-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99166\n+\t* module.cc (module_state::inform_cmi_p): Renamed field.\n+\t(module_state::do_import): Adjust.\n+\t(init_modules, finish_module_processing): Likewise.\n+\t(handle_module_option): Likewise.\n+\n+2021-02-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98318\n+\t* mapper-client.cc (module_client::open_module_client): Fix typo\n+\tof fd init.\n+\n 2021-02-24  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/98718"}, {"sha": "93933e7fb0fe4f8921bb94da2fc815b355f91dd2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1,3 +1,90 @@\n+2021-02-25  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99213\n+\tPR c++/94521\n+\t* g++.dg/diagnostic/local1.C: New test.\n+\n+2021-02-25  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/99103\n+\t* g++.dg/cpp1z/class-deduction79.C: New test.\n+\t* g++.dg/cpp1z/class-deduction80.C: New test.\n+\n+2021-02-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tDR 1312\n+\tPR c++/99176\n+\t* g++.dg/cpp0x/constexpr-nullptr-2.C: Adjust dg-error.\n+\t* g++.dg/cpp0x/constexpr-cast2.C: New test.\n+\t* g++.dg/cpp0x/constexpr-cast3.C: New test.\n+\n+2021-02-25  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/97587\n+\t* g++.dg/coroutines/coro1-refs-and-ctors.h: Add a CTOR with two\n+\treference parms, to distinguish the rvalue ref. variant.\n+\t* g++.dg/coroutines/pr97587.C: New test.\n+\n+2021-02-25  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95822\n+\t* g++.dg/coroutines/pr95822.C: New test.\n+\n+2021-02-25  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* gcc.target/arm/cmse/cmse-18.c: New test.\n+\n+2021-02-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99166\n+\t* g++.dg/modules/pr99166_a.X: Adjust.\n+\t* g++.dg/modules/pr99166_b.C: Adjust.\n+\t* g++.dg/modules/pr99166_c.C: Adjust.\n+\t* g++.dg/modules/pr99166_d.C: Adjust.\n+\n+2021-02-25  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gfortran.dg/pr95690.f90: CRIS error appears on line 5.\n+\n+2021-02-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* g++.dg/vect/simd-complex-num-null-node.cc: New test.\n+\n+2021-02-25  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR testsuite/99233\n+\t* gcc.target/powerpc/pr96264.c: Run it only for powerpc64le.\n+\n+2021-02-25  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR middle-end/97172\n+\t* gcc.dg/pr97172-2.c: Add dg-require-effective-target shared.\n+\n+2021-02-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/99253\n+\t* gcc.dg/vect/pr99253.c: New testcase.\n+\n+2021-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/95798\n+\t* gcc.target/i386/pr95798-1.c: New test.\n+\t* gcc.target/i386/pr95798-2.c: New test.\n+\n+2021-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/80635\n+\t* g++.dg/warn/pr80635-1.C: New test.\n+\t* g++.dg/warn/pr80635-2.C: New test.\n+\n+2021-02-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99193\n+\t* gcc.dg/analyzer/pr99193-1.c: New test.\n+\t* gcc.dg/analyzer/pr99193-2.c: New test.\n+\t* gcc.dg/analyzer/pr99193-3.c: New test.\n+\t* gcc.dg/analyzer/realloc-1.c: New test.\n+\n 2021-02-24  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/98718"}, {"sha": "7948d0938631f06080195c828c5bb9bf6538c860", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1,3 +1,60 @@\n+2021-02-25  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/98738\n+\t* libgomp.h (enum gomp_task_kind): Add GOMP_TASK_DETACHED.\n+\t(struct gomp_task): Replace detach and completion_sem fields with\n+\tunion containing completion_sem and detach_team.  Add deferred_p\n+\tfield.\n+\t(struct gomp_team): Remove task_detach_queue.\n+\t* task.c: Include assert.h.\n+\t(gomp_init_task): Initialize deferred_p and completion_sem fields.\n+\tRearrange initialization order of fields.\n+\t(task_fulfilled_p): Delete.\n+\t(GOMP_task): Use address of task as the event handle.  Remove\n+\tinitialization of detach field.  Initialize deferred_p field.\n+\tUse automatic local for completion_sem.  Initialize detach_team field\n+\tfor deferred tasks.\n+\t(gomp_barrier_handle_tasks): Remove handling of task_detach_queue.\n+\tSet kind of suspended detach task to GOMP_TASK_DETACHED and\n+\tdecrement task_running_count.  Move finish_cancelled block out of\n+\telse branch.  Relocate call to gomp_team_barrier_done.\n+\t(GOMP_taskwait): Handle tasks with completion events that have not\n+\tbeen fulfilled.\n+\t(GOMP_taskgroup_end): Likewise.\n+\t(omp_fulfill_event): Use address of task as event handle.  Post to\n+\tcompletion_sem for undeferred tasks.  Clear detach_team if task\n+\thas not finished.  For finished tasks, handle post-execution tasks,\n+\tcall gomp_team_barrier_wake if necessary, and free task.\n+\t* team.c (gomp_new_team): Remove initialization of task_detach_queue.\n+\t(free_team): Remove free of task_detach_queue.\n+\t* testsuite/libgomp.c-c++-common/task-detach-1.c: Fix formatting.\n+\t* testsuite/libgomp.c-c++-common/task-detach-2.c: Fix formatting.\n+\t* testsuite/libgomp.c-c++-common/task-detach-3.c: Fix formatting.\n+\t* testsuite/libgomp.c-c++-common/task-detach-4.c: Fix formatting.\n+\t* testsuite/libgomp.c-c++-common/task-detach-5.c: Fix formatting.\n+\tChange data-sharing of detach events on enclosing parallel to private.\n+\t* testsuite/libgomp.c-c++-common/task-detach-6.c: Likewise.  Remove\n+\ttaskwait directive.\n+\t* testsuite/libgomp.c-c++-common/task-detach-7.c: New.\n+\t* testsuite/libgomp.c-c++-common/task-detach-8.c: New.\n+\t* testsuite/libgomp.c-c++-common/task-detach-9.c: New.\n+\t* testsuite/libgomp.c-c++-common/task-detach-10.c: New.\n+\t* testsuite/libgomp.c-c++-common/task-detach-11.c: New.\n+\t* testsuite/libgomp.fortran/task-detach-1.f90: Fix formatting.\n+\t* testsuite/libgomp.fortran/task-detach-2.f90: Fix formatting.\n+\t* testsuite/libgomp.fortran/task-detach-3.f90: Fix formatting.\n+\t* testsuite/libgomp.fortran/task-detach-4.f90: Fix formatting.\n+\t* testsuite/libgomp.fortran/task-detach-5.f90: Fix formatting.\n+\tChange data-sharing of detach events on enclosing parallel to private.\n+\t* testsuite/libgomp.fortran/task-detach-6.f90: Likewise.  Remove\n+\ttaskwait directive.\n+\t* testsuite/libgomp.fortran/task-detach-7.f90: New.\n+\t* testsuite/libgomp.fortran/task-detach-8.f90: New.\n+\t* testsuite/libgomp.fortran/task-detach-9.f90: New.\n+\t* testsuite/libgomp.fortran/task-detach-10.f90: New.\n+\t* testsuite/libgomp.fortran/task-detach-11.f90: New.\n+\n 2021-02-22  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/99171"}, {"sha": "2df8f703a044c7d418e83d30f5a3c50d78a0c2dd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa6884432b09b0ec1207dacf1a467dd90538360/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa6884432b09b0ec1207dacf1a467dd90538360/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=daa6884432b09b0ec1207dacf1a467dd90538360", "patch": "@@ -1,3 +1,39 @@\n+2021-02-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/chrono (year_month_day::_S_from_days): Perform\n+\tall calculations with type uint32_t.\n+\n+2021-02-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/abi.xml: Document versioning for GCC 11.\n+\t* doc/html/manual/abi.html: Regenerate.\n+\n+2021-02-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99270\n+\t* testsuite/27_io/headers/cstdio/types_std.cc: Use pointer to\n+\tFILE instead of FILE.\n+\n+2021-02-25  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/abi/post/aarch64-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/ia64-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/m68k-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/riscv64-linux-gnu/baseline_symbols.txt: Update.\n+\n+2021-02-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99265\n+\t* include/std/chrono (year_month_day::_S_from_days): Cast long\n+\tto int explicitly.\n+\n+2021-02-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/utility (to_underlying): Define.\n+\t* include/std/version (__cpp_lib_to_underlying): Define.\n+\t* testsuite/20_util/to_underlying/1.cc: New test.\n+\t* testsuite/20_util/to_underlying/version.cc: New test.\n+\n 2021-02-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/99261"}]}