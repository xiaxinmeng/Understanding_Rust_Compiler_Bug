{"sha": "09edc2c2bbca4e668222ec0ffdae15f051cf8ea1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllZGMyYzJiYmNhNGU2NjgyMjJlYzBmZmRhZTE1ZjA1MWNmOGVhMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T09:53:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T09:53:22Z"}, "message": "[multiple changes]\n\n2015-02-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* inline.adb (Expand_Inlined_Call): Skip again calls to subprogram\n\trenamings.\n\t* exp_ch6.adb (Expand_Call): Use back-end inlining\n\tinstead of expansion for simple subprogram renamings.\n\n2015-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb: Minor reformatting.\n\nFrom-SVN: r220844", "tree": {"sha": "09db00ead348c3392e60bb057f44aeab61757db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09db00ead348c3392e60bb057f44aeab61757db6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/comments", "author": null, "committer": null, "parents": [{"sha": "22efcab77ad9a19cae5e828a9bcfd4dba9ea02ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22efcab77ad9a19cae5e828a9bcfd4dba9ea02ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22efcab77ad9a19cae5e828a9bcfd4dba9ea02ec"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "e50d195412429a4433e4aeb8c6636199f8ec16d3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=09edc2c2bbca4e668222ec0ffdae15f051cf8ea1", "patch": "@@ -1,3 +1,14 @@\n+2015-02-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* inline.adb (Expand_Inlined_Call): Skip again calls to subprogram\n+\trenamings.\n+\t* exp_ch6.adb (Expand_Call): Use back-end inlining\n+\tinstead of expansion for simple subprogram renamings.\n+\n+2015-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb: Minor reformatting.\n+\n 2015-02-20  Vincent Celier  <celier@adacore.com>\n \n \t* switch-c.adb (Scan_Front_End_Switches): Do not fail when --RTS="}, {"sha": "8b2278f2bab89bef65edf39684e7ec24bfc85f47", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=09edc2c2bbca4e668222ec0ffdae15f051cf8ea1", "patch": "@@ -3778,12 +3778,17 @@ package body Exp_Ch6 is\n            or else Nkind (Unit_Declaration_Node (Subp)) /=\n                                                  N_Subprogram_Declaration\n            or else No (Body_To_Inline (Unit_Declaration_Node (Subp)))\n+           or else Nkind (Body_To_Inline (Unit_Declaration_Node (Subp))) in\n+                                                                      N_Entity\n          then\n             Add_Inlined_Body (Subp, Call_Node);\n \n          --  Front end expansion of simple functions returning unconstrained\n-         --  types (see Check_And_Split_Unconstrained_Function) and simple\n-         --  renamings inlined by the front end (see Build_Renamed_Body).\n+         --  types (see Check_And_Split_Unconstrained_Function). Note that the\n+         --  case of a simple renaming (Body_To_Inline in N_Entity above, see\n+         --  also Build_Renamed_Body) cannot be expanded here because this may\n+         --  give rise to order-of-elaboration issues for the types of the\n+         --  parameters of the subprogram, if any.\n \n          else\n             Expand_Inlined_Call (Call_Node, Subp, Orig_Subp);"}, {"sha": "aa835adf6320153d96a49e7c90eeffea13faa31f", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=09edc2c2bbca4e668222ec0ffdae15f051cf8ea1", "patch": "@@ -7315,8 +7315,9 @@ package body Exp_Util is\n         (Loc         : Source_Ptr;\n          Id          : Character;\n          Related_Nod : Node_Id := Empty) return Entity_Id;\n-      --  Create an external symbol of the form xxx_FIRST/_LAST if Related_Id\n-      --  is present, otherwise it generates an internal temporary.\n+      --  Create an external symbol of the form xxx_FIRST/_LAST if Related_Nod\n+      --  is present (xxx is taken from the Chars field of Related_Nod),\n+      --  otherwise it generates an internal temporary.\n \n       ---------------------\n       -- Build_Temporary --"}, {"sha": "9a60befa0bf969102bd9a89ebfa7dce16f3cddff", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09edc2c2bbca4e668222ec0ffdae15f051cf8ea1/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=09edc2c2bbca4e668222ec0ffdae15f051cf8ea1", "patch": "@@ -2694,12 +2694,11 @@ package body Inline is\n          return;\n \n       --  Skip inlining if this is not a true inlining since the attribute\n-      --  Body_To_Inline is also set for renamings (see sinfo.ads)\n+      --  Body_To_Inline is also set for renamings (see sinfo.ads). For a\n+      --  true inlining, Orig_Bod has code rather than being an entity.\n \n       elsif Nkind (Orig_Bod) in N_Entity then\n-         if not Has_Pragma_Inline (Subp) then\n-            return;\n-         end if;\n+         return;\n \n       --  Skip inlining if the function returns an unconstrained type using\n       --  an extended return statement since this part of the new inlining"}]}