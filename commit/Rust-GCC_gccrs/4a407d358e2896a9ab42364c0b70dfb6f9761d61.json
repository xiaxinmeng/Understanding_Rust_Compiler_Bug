{"sha": "4a407d358e2896a9ab42364c0b70dfb6f9761d61", "node_id": "C_kwDOANBUbNoAKDRhNDA3ZDM1OGUyODk2YTlhYjQyMzY0YzBiNzBkZmI2Zjk3NjFkNjE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-11T20:23:48Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-11T21:55:11Z"}, "message": "libstdc++: Fix debug containers for C++98 mode\n\nSince r12-5072 made _Safe_container::operator=(const _Safe_container&)\nprotected, the debug containers no longer compile in C++98 mode. They\nhave user-provided copy assignment operators in C++98 mode, and they\nassign each base class in turn. The 'this->_M_safe() = __x' expressions\nfail, because calling a protected member function is only allowed via\n'this'. They could be fixed by using this->_Safe::operator=(__x) but a\nsimpler solution is to just remove the user-provided assignment\noperators and let the compiler define them (as we do for C++11 and\nlater, by defining them as defaulted).\n\nThe only change needed for that to work is to define the _Safe_vector\ncopy assignment operator in C++98 mode, so that the implicit\n__gnu_debug::vector::operator= definition will call it, instead of\nneeding to call _M_update_guaranteed_capacity() manually.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/debug/deque (deque::operator=(const deque&)): Remove\n\tdefinition.\n\t* include/debug/list (list::operator=(const list&)): Likewise.\n\t* include/debug/map.h (map::operator=(const map&)): Likewise.\n\t* include/debug/multimap.h (multimap::operator=(const multimap&)):\n\tLikewise.\n\t* include/debug/multiset.h (multiset::operator=(const multiset&)):\n\tLikewise.\n\t* include/debug/set.h (set::operator=(const set&)): Likewise.\n\t* include/debug/string (basic_string::operator=(const basic_string&)):\n\tLikewise.\n\t* include/debug/vector (vector::operator=(const vector&)):\n\tLikewise.\n\t(_Safe_vector::operator=(const _Safe_vector&)): Define for\n\tC++98 as well.", "tree": {"sha": "748e408e922a7f5fea61a3d33a869e01efab719f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/748e408e922a7f5fea61a3d33a869e01efab719f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a407d358e2896a9ab42364c0b70dfb6f9761d61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a407d358e2896a9ab42364c0b70dfb6f9761d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a407d358e2896a9ab42364c0b70dfb6f9761d61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a407d358e2896a9ab42364c0b70dfb6f9761d61/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53b3edceab96de49034fa8cea79f3b365c63f3e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b3edceab96de49034fa8cea79f3b365c63f3e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b3edceab96de49034fa8cea79f3b365c63f3e5"}], "stats": {"total": 93, "additions": 14, "deletions": 79}, "files": [{"sha": "52778ba16174342e42f91e97e6ebaf695549def0", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=4a407d358e2896a9ab42364c0b70dfb6f9761d61", "patch": "@@ -156,15 +156,7 @@ namespace __debug\n       deque(_Base_ref __x)\n       : _Base(__x._M_ref) { }\n \n-#if __cplusplus < 201103L\n-      deque&\n-      operator=(const deque& __x)\n-      {\n-\tthis->_M_safe() = __x;\n-\t_M_base() = __x;\n-\treturn *this;\n-      }\n-#else\n+#if __cplusplus >= 201103L\n       deque&\n       operator=(const deque&) = default;\n "}, {"sha": "f40ebc8521e7bb0836b1b73f0b9fe414e069631e", "filename": "libstdc++-v3/include/debug/list", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist?ref=4a407d358e2896a9ab42364c0b70dfb6f9761d61", "patch": "@@ -161,15 +161,7 @@ namespace __debug\n       list(_Base_ref __x)\n       : _Base(__x._M_ref) { }\n \n-#if __cplusplus < 201103L\n-      list&\n-      operator=(const list& __x)\n-      {\n-\tthis->_M_safe() = __x;\n-\t_M_base() = __x;\n-\treturn *this;\n-      }\n-#else\n+#if __cplusplus >= 201103L\n       list&\n       operator=(const list&) = default;\n "}, {"sha": "3883c54687170f416c6ea87db3de3bfeea4f125f", "filename": "libstdc++-v3/include/debug/map.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h?ref=4a407d358e2896a9ab42364c0b70dfb6f9761d61", "patch": "@@ -152,15 +152,7 @@ namespace __debug\n \t\t__gnu_debug::__base(__last),\n \t\t__comp, __a) { }\n \n-#if __cplusplus < 201103L\n-      map&\n-      operator=(const map& __x)\n-      {\n-\tthis->_M_safe() = __x;\n-\t_M_base() = __x;\n-\treturn *this;\n-      }\n-#else\n+#if __cplusplus >= 201103L\n       map&\n       operator=(const map&) = default;\n "}, {"sha": "073c1c392409406fd1a3274dbe464ca4f4f4ee87", "filename": "libstdc++-v3/include/debug/multimap.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h?ref=4a407d358e2896a9ab42364c0b70dfb6f9761d61", "patch": "@@ -152,15 +152,7 @@ namespace __debug\n       multimap(_Base_ref __x)\n       : _Base(__x._M_ref) { }\n \n-#if __cplusplus < 201103L\n-      multimap&\n-      operator=(const multimap& __x)\n-      {\n-\tthis->_M_safe() = __x;\n-\t_M_base() = __x;\n-\treturn *this;\n-      }\n-#else\n+#if __cplusplus >= 201103L\n       multimap&\n       operator=(const multimap&) = default;\n "}, {"sha": "479411d9d063d987622528dac9298e0f06dcb5e1", "filename": "libstdc++-v3/include/debug/multiset.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h?ref=4a407d358e2896a9ab42364c0b70dfb6f9761d61", "patch": "@@ -152,15 +152,7 @@ namespace __debug\n       multiset(_Base_ref __x)\n       : _Base(__x._M_ref) { }\n \n-#if __cplusplus < 201103L\n-      multiset&\n-      operator=(const multiset& __x)\n-      {\n-\tthis->_M_safe() = __x;\n-\t_M_base() = __x;\n-\treturn *this;\n-      }\n-#else\n+#if __cplusplus >= 201103L\n       multiset&\n       operator=(const multiset&) = default;\n "}, {"sha": "e35e5c1faae2adfc52c0860550021e62d924e728", "filename": "libstdc++-v3/include/debug/set.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h?ref=4a407d358e2896a9ab42364c0b70dfb6f9761d61", "patch": "@@ -150,15 +150,7 @@ namespace __debug\n       set(_Base_ref __x)\n       : _Base(__x._M_ref) { }\n \n-#if __cplusplus < 201103L\n-      set&\n-      operator=(const set& __x)\n-      {\n-\tthis->_M_safe() = __x;\n-\t_M_base() = __x;\n-\treturn *this;\n-      }\n-#else\n+#if __cplusplus >= 201103L\n       set&\n       operator=(const set&) = default;\n "}, {"sha": "2209f88fd54873d2c534ef498dba8694a5c30f4d", "filename": "libstdc++-v3/include/debug/string", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring?ref=4a407d358e2896a9ab42364c0b70dfb6f9761d61", "patch": "@@ -201,15 +201,7 @@ namespace __gnu_debug\n \t\t  __glibcxx_check_valid_constructor_range(__begin, __end)),\n \t\t__gnu_debug::__base(__end), __a) { }\n \n-#if __cplusplus < 201103L\n-      basic_string&\n-      operator=(const basic_string& __str)\n-      {\n-\tthis->_M_safe() = __str;\n-\t_M_base() = __str;\n-\treturn *this;\n-      }\n-#else\n+#if __cplusplus >= 201103L\n       basic_string&\n       operator=(const basic_string&) = default;\n "}, {"sha": "b532a168e0ef33f1245d2b7434f33eb7cf3af9a2", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a407d358e2896a9ab42364c0b70dfb6f9761d61/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=4a407d358e2896a9ab42364c0b70dfb6f9761d61", "patch": "@@ -71,18 +71,18 @@ namespace __gnu_debug\n \t: _M_guaranteed_capacity(__n)\n       { }\n \n-#if __cplusplus >= 201103L\n-      _Safe_vector(_Safe_vector&& __x) noexcept\n-\t: _Safe_vector()\n-      { __x._M_guaranteed_capacity = 0; }\n-\n       _Safe_vector&\n-      operator=(const _Safe_vector&) noexcept\n+      operator=(const _Safe_vector&) _GLIBCXX_NOEXCEPT\n       {\n \t_M_update_guaranteed_capacity();\n \treturn *this;\n       }\n \n+#if __cplusplus >= 201103L\n+      _Safe_vector(_Safe_vector&& __x) noexcept\n+\t: _Safe_vector()\n+      { __x._M_guaranteed_capacity = 0; }\n+\n       _Safe_vector&\n       operator=(_Safe_vector&& __x) noexcept\n       {\n@@ -234,16 +234,7 @@ namespace __debug\n       vector(_Base_ref __x)\n       : _Base(__x._M_ref) { }\n \n-#if __cplusplus < 201103L\n-      vector&\n-      operator=(const vector& __x)\n-      {\n-\tthis->_M_safe() = __x;\n-\t_M_base() = __x;\n-\tthis->_M_update_guaranteed_capacity();\n-\treturn *this;\n-      }\n-#else\n+#if __cplusplus >= 201103L\n       vector&\n       operator=(const vector&) = default;\n "}]}