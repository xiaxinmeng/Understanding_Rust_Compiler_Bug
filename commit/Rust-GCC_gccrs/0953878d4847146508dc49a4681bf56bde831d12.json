{"sha": "0953878d4847146508dc49a4681bf56bde831d12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk1Mzg3OGQ0ODQ3MTQ2NTA4ZGM0OWE0NjgxYmY1NmJkZTgzMWQxMg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-01-05T15:22:38Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-01-05T15:22:38Z"}, "message": "c-typeck.c (constructor_no_implicit): Remove.\n\n\t* c-typeck.c (constructor_no_implicit): Remove.\n\t(set_designator, process_init_element): Don't check\n\tconstructor_no_implicit.\n\nFrom-SVN: r92951", "tree": {"sha": "5d187034169ae334fd9db4506ff30f71a331b03a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d187034169ae334fd9db4506ff30f71a331b03a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0953878d4847146508dc49a4681bf56bde831d12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0953878d4847146508dc49a4681bf56bde831d12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0953878d4847146508dc49a4681bf56bde831d12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0953878d4847146508dc49a4681bf56bde831d12/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf99f196e2e18b62becbb660761fc2a586b85d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf99f196e2e18b62becbb660761fc2a586b85d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf99f196e2e18b62becbb660761fc2a586b85d78"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "428d578ace930963e7e187405763af321f227ec1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0953878d4847146508dc49a4681bf56bde831d12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0953878d4847146508dc49a4681bf56bde831d12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0953878d4847146508dc49a4681bf56bde831d12", "patch": "@@ -1,3 +1,9 @@\n+2005-01-05  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* c-typeck.c (constructor_no_implicit): Remove.\n+\t(set_designator, process_init_element): Don't check\n+\tconstructor_no_implicit.\n+\n 2005-01-05  J\"orn Rennecke <joern.rennecke@st.com>\n \t    Kaz Kojima  <kkojima@gcc.gnu.org>\n "}, {"sha": "e173c6a2d2388b34cc6cfb21db86b26d934f5226", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0953878d4847146508dc49a4681bf56bde831d12/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0953878d4847146508dc49a4681bf56bde831d12/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=0953878d4847146508dc49a4681bf56bde831d12", "patch": "@@ -1,6 +1,6 @@\n /* Build expressions with type checking for C compiler.\n-   Copyright (C) 1987, 1988, 1991, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -4353,9 +4353,6 @@ static struct init_node *constructor_pending_elts;\n /* The SPELLING_DEPTH of this constructor.  */\n static int constructor_depth;\n \n-/* 0 if implicitly pushing constructor levels is allowed.  */\n-int constructor_no_implicit = 0; /* 0 for C; 1 for some other languages.  */\n-\n /* DECL node for which an initializer is being read.\n    0 means we are reading a constructor expression\n    such as (struct foo) {...}.  */\n@@ -5026,12 +5023,6 @@ set_designator (int array)\n       return 0;\n     }\n \n-  if (constructor_no_implicit)\n-    {\n-      error_init (\"initialization designators may not nest\");\n-      return 1;\n-    }\n-\n   switch (TREE_CODE (constructor_type))\n     {\n     case  RECORD_TYPE:\n@@ -6002,7 +5993,7 @@ process_init_element (struct c_expr value)\n \t    value.value = orig_value;\n \t  /* Otherwise, if we have come to a subaggregate,\n \t     and we don't have an element of its type, push into it.  */\n-\t  else if (value.value != 0 && !constructor_no_implicit\n+\t  else if (value.value != 0\n \t\t   && value.value != error_mark_node\n \t\t   && TYPE_MAIN_VARIANT (TREE_TYPE (value.value)) != fieldtype\n \t\t   && (fieldcode == RECORD_TYPE || fieldcode == ARRAY_TYPE\n@@ -6090,7 +6081,7 @@ process_init_element (struct c_expr value)\n \t    value.value = orig_value;\n \t  /* Otherwise, if we have come to a subaggregate,\n \t     and we don't have an element of its type, push into it.  */\n-\t  else if (value.value != 0 && !constructor_no_implicit\n+\t  else if (value.value != 0\n \t\t   && value.value != error_mark_node\n \t\t   && TYPE_MAIN_VARIANT (TREE_TYPE (value.value)) != fieldtype\n \t\t   && (fieldcode == RECORD_TYPE || fieldcode == ARRAY_TYPE\n@@ -6130,7 +6121,7 @@ process_init_element (struct c_expr value)\n \t    value.value = orig_value;\n \t  /* Otherwise, if we have come to a subaggregate,\n \t     and we don't have an element of its type, push into it.  */\n-\t  else if (value.value != 0 && !constructor_no_implicit\n+\t  else if (value.value != 0\n \t\t   && value.value != error_mark_node\n \t\t   && TYPE_MAIN_VARIANT (TREE_TYPE (value.value)) != elttype\n \t\t   && (eltcode == RECORD_TYPE || eltcode == ARRAY_TYPE"}]}