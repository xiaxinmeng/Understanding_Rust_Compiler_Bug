{"sha": "a4f710a6578cea62b7ae7d7ec7f63b0d454972f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmNzEwYTY1NzhjZWE2MmI3YWU3ZDdlYzdmNjNiMGQ0NTQ5NzJmMw==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2013-09-02T23:01:49Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2013-09-02T23:01:49Z"}, "message": "inclhack.def (aix_assert): New fix.\n\n\t* inclhack.def (aix_assert): New fix.\n        * fixincl.x: Regenerate.\n\t* tests/base/assert.h [AIX_ASSERT_CHECK]: New check.\n\nFrom-SVN: r202192", "tree": {"sha": "f05c9cb70fc53cb5f980a6f50cd54d2536ef4cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f05c9cb70fc53cb5f980a6f50cd54d2536ef4cd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a64bbb3f8997b97c3f8c049ed7ff1090bf8ee863", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a64bbb3f8997b97c3f8c049ed7ff1090bf8ee863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a64bbb3f8997b97c3f8c049ed7ff1090bf8ee863"}], "stats": {"total": 86, "additions": 79, "deletions": 7}, "files": [{"sha": "4a9d22997ff0ab2a01814140f2c0ba10f9cd04ba", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=a4f710a6578cea62b7ae7d7ec7f63b0d454972f3", "patch": "@@ -1,3 +1,9 @@\n+2013-09-02  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* inclhack.def (aix_assert): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/assert.h [AIX_ASSERT_CHECK]: New check.\n+\n 2013-07-06  Bruce Korb  <bkorb@gnu.org>\n \n \t* inclhack.def (cdef_cplusplus): removed, per Bug 51776"}, {"sha": "eb2ee648fba3582b22dcbfdf854818ca98bc7983", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 52, "deletions": 7, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=a4f710a6578cea62b7ae7d7ec7f63b0d454972f3", "patch": "@@ -1,12 +1,12 @@\n /*  -*- buffer-read-only: t -*- vi: set ro:\n- *\n+ * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n- *\n- * It has been AutoGen-ed  July  6, 2013 at 10:40:53 AM by AutoGen 5.17.5pre10\n+ * \n+ * It has been AutoGen-ed  August 31, 2013 at 04:29:02 PM by AutoGen 5.12\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Jul  6 10:40:53 PDT 2013\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Aug 31 16:29:02 PDT 2013\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 227 fixup descriptions.\n+ * This file contains 228 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -734,6 +734,45 @@ static const char* apzAab_Vxworks_UnistdPatch[] = {\n #endif /* _UNISTD_H */\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Assert fix\n+ */\n+tSCC zAix_AssertName[] =\n+     \"aix_assert\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_AssertList[] =\n+  \"assert.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_AssertMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_AssertSelect0[] =\n+       \"#define[ \\t]static_assert[ \\t]_Static_assert\";\n+\n+#define    AIX_ASSERT_TEST_CT  1\n+static tTestDesc aAix_AssertTests[] = {\n+  { TT_EGREP,    zAix_AssertSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Assert\n+ */\n+static const char* apzAix_AssertPatch[] = {\n+    \"format\",\n+    \"#ifndef __cplusplus\\n\\\n+%0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Complex fix\n@@ -9329,9 +9368,9 @@ static const char* apzComplier_H_TradcppPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          266\n+#define REGEX_COUNT          267\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            227\n+#define FIX_COUNT            228\n \n /*\n  *  Enumerate the fixes\n@@ -9349,6 +9388,7 @@ typedef enum {\n     AAB_VXWORKS_REGS_VXTYPES_FIXIDX,\n     AAB_VXWORKS_STDINT_FIXIDX,\n     AAB_VXWORKS_UNISTD_FIXIDX,\n+    AIX_ASSERT_FIXIDX,\n     AIX_COMPLEX_FIXIDX,\n     AIX_MALLOC_FIXIDX,\n     AIX_NET_IF_ARP_FIXIDX,\n@@ -9627,6 +9667,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AAB_VXWORKS_UNISTD_TEST_CT, FD_MACH_ONLY | FD_REPLACEMENT,\n      aAab_Vxworks_UnistdTests,   apzAab_Vxworks_UnistdPatch, 0 },\n \n+  {  zAix_AssertName,    zAix_AssertList,\n+     apzAix_AssertMachs,\n+     AIX_ASSERT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_AssertTests,   apzAix_AssertPatch, 0 },\n+\n   {  zAix_ComplexName,    zAix_ComplexList,\n      apzAix_ComplexMachs,\n      AIX_COMPLEX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "996356a3930a6126e10fef01d427f42401e8fd2a", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=a4f710a6578cea62b7ae7d7ec7f63b0d454972f3", "patch": "@@ -568,6 +568,20 @@ fix = {\n \t_EndOfHeader_;\n };\n \n+/*\n+ * assert.h on AIX 7 redefines static_assert as _Static_assert without\n+ * protecting C++.\n+ */\n+fix = {\n+    hackname  = aix_assert;\n+    mach      = \"*-*-aix*\";\n+    files     = assert.h;\n+    select    = \"#define[ \\t]static_assert[ \\t]_Static_assert\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifndef __cplusplus\\n%0\\n#endif\";\n+    test_text = \"#define static_assert _Static_assert\";\n+};\n+\n /*\n  * complex.h on AIX 5 and AIX 6 define _Complex_I and I in terms of __I,\n  * which only is provided by AIX xlc C99."}, {"sha": "19dc52575ee15ec8876d3809667204cb1a6476ea", "filename": "fixincludes/tests/base/assert.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/fixincludes%2Ftests%2Fbase%2Fassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f710a6578cea62b7ae7d7ec7f63b0d454972f3/fixincludes%2Ftests%2Fbase%2Fassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fassert.h?ref=a4f710a6578cea62b7ae7d7ec7f63b0d454972f3", "patch": "@@ -19,6 +19,13 @@\n #include <stdio.h>\n \n \n+#if defined( AIX_ASSERT_CHECK )\n+#ifndef __cplusplus\n+#define static_assert _Static_assert\n+#endif\n+#endif  /* AIX_ASSERT_CHECK */\n+\n+\n #if defined( ALPHA___ASSERT_CHECK )\n extern void __assert(const char *, const char *, int);\n #endif  /* ALPHA___ASSERT_CHECK */"}]}