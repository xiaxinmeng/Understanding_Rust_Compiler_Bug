{"sha": "682e69e1a3138385c1d1c7387baedc3e3f2d3a57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgyZTY5ZTFhMzEzODM4NWMxZDFjNzM4N2JhZWRjM2UzZjJkM2E1Nw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-07-11T23:00:08Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-07-11T23:00:08Z"}, "message": "re PR fortran/15986 (Forward referenced procedure not handled correctly)\n\n\tPR fortran/15986\n\t* parse.c (gfc_fixup_sibling_symbols): Also look for untyped\n\tvariables.\n\t(parse_contained): Mark contained symbols as referenced.\ntestsuite/\n\t* gfortran.dg/contained_1.f90: New test.\n\nFrom-SVN: r84536", "tree": {"sha": "f82026b8934f8c5eee67469dbea505c8961f5d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82026b8934f8c5eee67469dbea505c8961f5d15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/682e69e1a3138385c1d1c7387baedc3e3f2d3a57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682e69e1a3138385c1d1c7387baedc3e3f2d3a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/682e69e1a3138385c1d1c7387baedc3e3f2d3a57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/comments", "author": null, "committer": null, "parents": [{"sha": "df23e6bbfaa8254963aa5254a851c942f3c8b594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df23e6bbfaa8254963aa5254a851c942f3c8b594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df23e6bbfaa8254963aa5254a851c942f3c8b594"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "3a45a96125a983f099f73c2b590cf153195530a3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=682e69e1a3138385c1d1c7387baedc3e3f2d3a57", "patch": "@@ -1,3 +1,10 @@\n+2004-07-11  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/15986\n+\t* parse.c (gfc_fixup_sibling_symbols): Also look for untyped\n+\tvariables.\n+\t(parse_contained): Mark contained symbols as referenced.\n+\n 2004-07-11  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/16455"}, {"sha": "32f5185b2d6d9816d9680579e8049fdb62132c1f", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=682e69e1a3138385c1d1c7387baedc3e3f2d3a57", "patch": "@@ -2116,7 +2116,9 @@ gfc_fixup_sibling_symbols (gfc_symbol * sym, gfc_namespace * siblings)\n         continue;\n \n       old_sym = st->n.sym;\n-      if (old_sym->attr.flavor == FL_PROCEDURE && old_sym->ns == ns\n+      if ((old_sym->attr.flavor == FL_PROCEDURE\n+\t   || old_sym->ts.type == BT_UNKNOWN)\n+\t  && old_sym->ns == ns\n           && ! old_sym->attr.contained)\n         {\n           /* Replace it with the symbol from the parent namespace.  */\n@@ -2199,6 +2201,7 @@ parse_contained (int module)\n           /* Mark this as a contained function, so it isn't replaced\n              by other module functions.  */\n           sym->attr.contained = 1;\n+\t  sym->attr.referenced = 1;\n \n           /* Fix up any sibling functions that refer to this one.  */\n           gfc_fixup_sibling_symbols (sym, gfc_current_ns);"}, {"sha": "f4080b5a0bf6284cbd835e554b84d84d6b54aa0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=682e69e1a3138385c1d1c7387baedc3e3f2d3a57", "patch": "@@ -1,3 +1,8 @@\n+2004-07-11  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR fortran/15986\n+\t* gfortran.dg/contained_1.f90: New test.\n+\n 2004-07-11  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/parse/defarg8.C: New test."}, {"sha": "9b6e4395492d9495e440a0cdbd0446ab13b62e6a", "filename": "gcc/testsuite/gfortran.dg/contained_1.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682e69e1a3138385c1d1c7387baedc3e3f2d3a57/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_1.f90?ref=682e69e1a3138385c1d1c7387baedc3e3f2d3a57", "patch": "@@ -0,0 +1,33 @@\n+! PR15986\n+! Siblings may be used as actual arguments, in which case they look like\n+! variables during parsing.  Also checks that actual variables aren't replaced\n+! by siblings with the same name\n+! { dg-do run }\n+module contained_1_mod\n+integer i\n+contains\n+subroutine a\n+  integer :: c = 42\n+  call sub(b, c)\n+end subroutine a\n+subroutine b()\n+  i = i + 1\n+end subroutine b\n+subroutine c\n+end subroutine\n+end module\n+\n+subroutine sub (proc, var)\n+  external proc1\n+  integer var\n+\n+  if (var .ne. 42) call abort\n+  call proc\n+end subroutine\n+\n+program contained_1\n+  use contained_1_mod\n+  i = 0\n+  call a\n+  if (i .ne. 1) call abort\n+end program"}]}