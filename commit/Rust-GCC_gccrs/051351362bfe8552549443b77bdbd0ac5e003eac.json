{"sha": "051351362bfe8552549443b77bdbd0ac5e003eac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUxMzUxMzYyYmZlODU1MjU0OTQ0M2I3N2JkYmQwYWM1ZTAwM2VhYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-05-19T14:32:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-05-19T14:32:23Z"}, "message": "re PR middle-end/61209 (internal compiler error: in fold_convert_loc, at fold-const.c:1950)\n\n2014-05-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/61209\n\t* tree-ssa-sccvn.c (visit_phi): Avoid setting expr to VN_TOP.\n\n\t* gfortran.dg/pr61209.f90: New testcase.\n\nFrom-SVN: r210613", "tree": {"sha": "af10f92a91fffb8d09a0fb417dee649957a83b4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af10f92a91fffb8d09a0fb417dee649957a83b4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/051351362bfe8552549443b77bdbd0ac5e003eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051351362bfe8552549443b77bdbd0ac5e003eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/051351362bfe8552549443b77bdbd0ac5e003eac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051351362bfe8552549443b77bdbd0ac5e003eac/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40ba8dfb395e8ed85990a2655cf0d8a0f7619e0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ba8dfb395e8ed85990a2655cf0d8a0f7619e0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ba8dfb395e8ed85990a2655cf0d8a0f7619e0c"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "90eca0c687b13664e77118e887994a0d4808221e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051351362bfe8552549443b77bdbd0ac5e003eac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051351362bfe8552549443b77bdbd0ac5e003eac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=051351362bfe8552549443b77bdbd0ac5e003eac", "patch": "@@ -1,3 +1,8 @@\n+2014-05-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61209\n+\t* tree-ssa-sccvn.c (visit_phi): Avoid setting expr to VN_TOP.\n+\n 2014-05-19  Nick Clifton  <nickc@redhat.com>\n \n \t* except.c (init_eh): Fix computation of builtin setjmp buffer"}, {"sha": "83b42642cdca02b68172c78c70068c66764f2765", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051351362bfe8552549443b77bdbd0ac5e003eac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051351362bfe8552549443b77bdbd0ac5e003eac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=051351362bfe8552549443b77bdbd0ac5e003eac", "patch": "@@ -1,3 +1,8 @@\n+2014-05-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61209\n+\t* gfortran.dg/pr61209.f90: New testcase.\n+\n 2014-05-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/61184"}, {"sha": "481714daeee459f39f0fb8ac9813e1dbf00f6ed3", "filename": "gcc/testsuite/gfortran.dg/pr61209.f90", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051351362bfe8552549443b77bdbd0ac5e003eac/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61209.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051351362bfe8552549443b77bdbd0ac5e003eac/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61209.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61209.f90?ref=051351362bfe8552549443b77bdbd0ac5e003eac", "patch": "@@ -0,0 +1,46 @@\n+! { dg-do compile }\n+! { dg-options \"-O -fbounds-check\" }\n+MODULE array_types\n+  INTERFACE array_data\n+     MODULE PROCEDURE array_data_i1d\n+  END INTERFACE\n+  TYPE array_i1d_type\n+  END TYPE array_i1d_type\n+  TYPE array_i1d_obj\n+     TYPE(array_i1d_type), POINTER      :: low\n+  END TYPE array_i1d_obj\n+  TYPE dbcsr_type\n+     TYPE(array_i1d_obj)     :: local_rows\n+     LOGICAL                 :: local_indexing\n+  END TYPE dbcsr_type\n+  TYPE dbcsr_obj\n+     TYPE(dbcsr_type) :: m\n+  END TYPE dbcsr_obj\n+CONTAINS\n+  FUNCTION array_data_i1d(array) RESULT (DATA)\n+    TYPE(array_i1d_obj), INTENT(IN)          :: array\n+    INTEGER, DIMENSION(:), POINTER           :: DATA\n+    IF (ASSOCIATED (array%low)) THEN\n+    ENDIF\n+  END FUNCTION array_data_i1d\n+  SUBROUTINE dbcsr_make_index_list (matrix, thread_redist)\n+    TYPE(dbcsr_obj), INTENT(INOUT)           :: matrix\n+    LOGICAL, INTENT(IN)                      :: thread_redist\n+    INTEGER, ALLOCATABLE, DIMENSION(:, :)    :: blki\n+    INTEGER, DIMENSION(:), POINTER           :: local_rows, td\n+    INTEGER :: blk\n+    nthreads = 0\n+    IF (nthreads .GT. 0 .AND. thread_redist) THEN\n+       IF (matrix%m%local_indexing) THEN\n+          local_rows => array_data (matrix%m%local_rows)\n+       ENDIF\n+       CALL dbcsr_build_row_index_inplace (thr_c, nthreads)\n+       IF (matrix%m%local_indexing) THEN\n+          DO blk = 1, nblks\n+             IF (td(local_rows(blki(1, blk))) .EQ. ithread) THEN\n+             ENDIF\n+          ENDDO\n+       ENDIF\n+    ENDIF\n+  END SUBROUTINE dbcsr_make_index_list\n+END MODULE"}, {"sha": "bd603729f132f9b98cc60f25722f0573d43a343e", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051351362bfe8552549443b77bdbd0ac5e003eac/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051351362bfe8552549443b77bdbd0ac5e003eac/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=051351362bfe8552549443b77bdbd0ac5e003eac", "patch": "@@ -3125,12 +3125,14 @@ visit_phi (gimple phi)\n       if (is_gimple_min_invariant (sameval))\n \t{\n \t  VN_INFO (PHI_RESULT (phi))->has_constants = true;\n-\t  VN_INFO (PHI_RESULT (phi))->expr = sameval;\n+\t  if (sameval != VN_TOP)\n+\t    VN_INFO (PHI_RESULT (phi))->expr = sameval;\n \t}\n       else\n \t{\n \t  VN_INFO (PHI_RESULT (phi))->has_constants = false;\n-\t  VN_INFO (PHI_RESULT (phi))->expr = sameval;\n+\t  if (sameval != VN_TOP)\n+\t    VN_INFO (PHI_RESULT (phi))->expr = sameval;\n \t}\n \n       if (TREE_CODE (sameval) == SSA_NAME)"}]}