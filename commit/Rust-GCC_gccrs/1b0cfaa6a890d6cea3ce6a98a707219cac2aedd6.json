{"sha": "1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIwY2ZhYTZhODkwZDZjZWEzY2U2YTk4YTcwNzIxOWNhYzJhZWRkNg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2007-06-07T15:34:40Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2007-06-07T15:34:40Z"}, "message": "re PR tree-optimization/32220 (internal compiler error: in eliminate_temp_copies, at tree-predcom.c:1937)\n\n\tPR tree-optimization/32220\n\t* tree-predcom.c (eliminate_temp_copies): Handle the case that loop\n\tphi node is reached before defining statement.\n\n\t* gfortran.dg/predcom-2.f: New testcase.\n\nFrom-SVN: r125531", "tree": {"sha": "2586a430ab0f0ff3785d02bffe3655a97c934318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2586a430ab0f0ff3785d02bffe3655a97c934318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/comments", "author": null, "committer": null, "parents": [{"sha": "554a540059995075ef1f631dbbfc7ef975ede43f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554a540059995075ef1f631dbbfc7ef975ede43f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/554a540059995075ef1f631dbbfc7ef975ede43f"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "621396fd1b1ccb31050356b93ba564fdbecc1b3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6", "patch": "@@ -1,3 +1,9 @@\n+2007-06-07  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/32220\n+\t* tree-predcom.c (eliminate_temp_copies): Handle the case that loop\n+\tphi node is reached before defining statement.\n+\n 2007-06-06  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/32231"}, {"sha": "746e3db77bd77c2b1cae6f7a354c0eeb35cc5ba2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6", "patch": "@@ -1,3 +1,8 @@\n+2007-06-07  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/32220\n+\t* gfortran.dg/predcom-2.f: New testcase.\n+\n 2007-06-06  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/32231"}, {"sha": "7e43cb07ae5d9985b8733813cdd10acbb955ee2d", "filename": "gcc/testsuite/gfortran.dg/predcom-2.f", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredcom-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredcom-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredcom-2.f?ref=1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6", "patch": "@@ -0,0 +1,20 @@\n+! PR 32220, ICE when the loop is not unrolled enough to eliminate all \n+!   register copies\n+! { dg-do compile }\n+! { dg-options \"-O3\" }\n+\n+      subroutine derv (b,cosxy,thick)\n+c\n+      common /shell4/xji(3,3)\n+c\n+      dimension cosxy(6,*),\n+     1          thick(*),b(*)\n+c\n+\n+      do 125 i=1,3\n+      b(k2+i)=xji(i,1) + xji(i,2) + xji(i,3)\n+  125 b(k3+i)=cosxy(i+3,kk) + cosxy(i,kk)\n+c\n+c\n+      return\n+      end"}, {"sha": "4e5471397dbdbc3f300469ab458035997e73c3c8", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=1b0cfaa6a890d6cea3ce6a98a707219cac2aedd6", "patch": "@@ -1932,7 +1932,13 @@ eliminate_temp_copies (struct loop *loop, bitmap tmp_vars)\n \n       /* Base all the ssa names in the ud and du chain of NAME on VAR.  */\n       stmt = SSA_NAME_DEF_STMT (use);\n-      while (TREE_CODE (stmt) == PHI_NODE)\n+      while (TREE_CODE (stmt) == PHI_NODE\n+\t     /* In case we could not unroll the loop enough to eliminate\n+\t\tall copies, we may reach the loop header before the defining\n+\t\tstatement (in that case, some register copies will be present\n+\t\tin loop latch in the final code, corresponding to the newly\n+\t\tcreated looparound phi nodes).  */\n+\t     && bb_for_stmt (stmt) != loop->header)\n \t{\n \t  gcc_assert (single_pred_p (bb_for_stmt (stmt)));\n \t  use = PHI_ARG_DEF (stmt, 0);"}]}