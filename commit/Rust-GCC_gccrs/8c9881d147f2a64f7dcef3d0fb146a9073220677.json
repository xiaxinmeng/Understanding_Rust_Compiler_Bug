{"sha": "8c9881d147f2a64f7dcef3d0fb146a9073220677", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5ODgxZDE0N2YyYTY0ZjdkY2VmM2QwZmIxNDZhOTA3MzIyMDY3Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-24T17:12:32Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-24T17:12:32Z"}, "message": "(optabs): Add backslashes to prevent SCCS confusion.\n\nFrom-SVN: r4560", "tree": {"sha": "2aaf683293a68a17d73f8c290a196eb28863624b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2aaf683293a68a17d73f8c290a196eb28863624b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c9881d147f2a64f7dcef3d0fb146a9073220677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9881d147f2a64f7dcef3d0fb146a9073220677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9881d147f2a64f7dcef3d0fb146a9073220677", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9881d147f2a64f7dcef3d0fb146a9073220677/comments", "author": null, "committer": null, "parents": [{"sha": "06a601c3f1a4f20cd2512b3e7ee7627197cb31fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a601c3f1a4f20cd2512b3e7ee7627197cb31fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a601c3f1a4f20cd2512b3e7ee7627197cb31fe"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "b07b8404ffb86e4d6bbf9013c6cc0a1962ca4c25", "filename": "gcc/genopinit.c", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9881d147f2a64f7dcef3d0fb146a9073220677/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9881d147f2a64f7dcef3d0fb146a9073220677/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=8c9881d147f2a64f7dcef3d0fb146a9073220677", "patch": "@@ -63,28 +63,31 @@ void fancy_abort ();\n    used for comparisons.  In that case, %c and %C are the lower-case and\n    upper-case forms of the comparison, respectively.  */\n \n+/* The reason we use \\% is to avoid sequences of the form %-capletter-%\n+   which SCCS treats as magic.  This gets warnings which you should ignore.  */\n+\n char *optabs[] =\n-{ \"extendtab[(int) %B][(int) %A][0] = CODE_FOR_%(extend%a%b2%)\",\n-  \"extendtab[(int) %B][(int) %A][1] = CODE_FOR_%(zero_extend%a%b2%)\",\n-  \"fixtab[(int) %A][(int) %B][0] = CODE_FOR_%(fix%F%a%I%b2%)\",\n-  \"fixtab[(int) %A][(int) %B][1] = CODE_FOR_%(fixuns%F%a%b2%)\",\n-  \"fixtrunctab[(int) %A][(int) %B][0] = CODE_FOR_%(fix_trunc%F%a%I%b2%)\",\n-  \"fixtrunctab[(int) %A][(int) %B][1] = CODE_FOR_%(fixuns_trunc%F%a%I%b2%)\",\n-  \"floattab[(int) %B][(int) %A][0] = CODE_FOR_%(float%I%a%F%b2%)\",\n-  \"floattab[(int) %B][(int) %A][1] = CODE_FOR_%(floatuns%I%a%F%b%)\",\n+{ \"extendtab[(int) %B][(int) %A][0] = CODE_FOR_%(extend%a\\%b2%)\",\n+  \"extendtab[(int) %B][(int) %A][1] = CODE_FOR_%(zero_extend%a\\%b2%)\",\n+  \"fixtab[(int) %A][(int) %B][0] = CODE_FOR_%(fix%F\\%a%I\\%b2%)\",\n+  \"fixtab[(int) %A][(int) %B][1] = CODE_FOR_%(fixuns%F\\%a%b2%)\",\n+  \"fixtrunctab[(int) %A][(int) %B][0] = CODE_FOR_%(fix_trunc%F\\%a%I\\%b2%)\",\n+  \"fixtrunctab[(int) %A][(int) %B][1] = CODE_FOR_%(fixuns_trunc%F\\%a%I\\%b2%)\",\n+  \"floattab[(int) %B][(int) %A][0] = CODE_FOR_%(float%I\\%a%F\\%b2%)\",\n+  \"floattab[(int) %B][(int) %A][1] = CODE_FOR_%(floatuns%I\\%a%F\\%b%)\",\n   \"add_optab->handlers[(int) %A].insn_code = CODE_FOR_%(add%a3%)\",\n   \"sub_optab->handlers[(int) %A].insn_code = CODE_FOR_%(sub%a3%)\",\n   \"smul_optab->handlers[(int) %A].insn_code = CODE_FOR_%(mul%a3%)\",\n   \"smul_widen_optab->handlers[(int) %B].insn_code = CODE_FOR_%(mul%a%b3%)%N\",\n   \"umul_widen_optab->handlers[(int) %B].insn_code = CODE_FOR_%(umul%a%b3%)%N\",\n-  \"sdiv_optab->handlers[(int) %A].insn_code = CODE_FOR_%(div%I%a3%)\",\n-  \"udiv_optab->handlers[(int) %A].insn_code = CODE_FOR_%(udiv%I%a3%)\",\n+  \"sdiv_optab->handlers[(int) %A].insn_code = CODE_FOR_%(div%I\\%a3%)\",\n+  \"udiv_optab->handlers[(int) %A].insn_code = CODE_FOR_%(udiv%I\\%a3%)\",\n   \"sdivmod_optab->handlers[(int) %A].insn_code = CODE_FOR_%(divmod%a4%)\",\n   \"udivmod_optab->handlers[(int) %A].insn_code = CODE_FOR_%(udivmod%a4%)\",\n   \"smod_optab->handlers[(int) %A].insn_code = CODE_FOR_%(mod%a3%)\",\n   \"umod_optab->handlers[(int) %A].insn_code = CODE_FOR_%(umod%a3%)\",\n-  \"flodiv_optab->handlers[(int) %A].insn_code = CODE_FOR_%(div%F%a3%)\",\n-  \"ftrunc_optab->handlers[(int) %A].insn_code = CODE_FOR_%(ftrunc%F%a2%)\",\n+  \"flodiv_optab->handlers[(int) %A].insn_code = CODE_FOR_%(div%F\\%a3%)\",\n+  \"ftrunc_optab->handlers[(int) %A].insn_code = CODE_FOR_%(ftrunc%F\\%a2%)\",\n   \"and_optab->handlers[(int) %A].insn_code = CODE_FOR_%(and%a3%)\",\n   \"ior_optab->handlers[(int) %A].insn_code = CODE_FOR_%(ior%a3%)\",\n   \"xor_optab->handlers[(int) %A].insn_code = CODE_FOR_%(xor%a3%)\",\n@@ -94,12 +97,12 @@ char *optabs[] =\n   \"lshr_optab->handlers[(int) %A].insn_code = CODE_FOR_%(lshr%a3%)\",\n   \"rotl_optab->handlers[(int) %A].insn_code = CODE_FOR_%(rotl%a3%)\",\n   \"rotr_optab->handlers[(int) %A].insn_code = CODE_FOR_%(rotr%a3%)\",\n-  \"smin_optab->handlers[(int) %A].insn_code = CODE_FOR_%(smin%I%a3%)\",\n-  \"smin_optab->handlers[(int) %A].insn_code = CODE_FOR_%(min%F%a3%)\",\n-  \"smax_optab->handlers[(int) %A].insn_code = CODE_FOR_%(smax%I%a3%)\",\n-  \"smax_optab->handlers[(int) %A].insn_code = CODE_FOR_%(max%F%a3%)\",\n-  \"umin_optab->handlers[(int) %A].insn_code = CODE_FOR_%(umin%I%a3%)\",\n-  \"umax_optab->handlers[(int) %A].insn_code = CODE_FOR_%(umax%I%a3%)\",\n+  \"smin_optab->handlers[(int) %A].insn_code = CODE_FOR_%(smin%I\\%a3%)\",\n+  \"smin_optab->handlers[(int) %A].insn_code = CODE_FOR_%(min%F\\%a3%)\",\n+  \"smax_optab->handlers[(int) %A].insn_code = CODE_FOR_%(smax%I\\%a3%)\",\n+  \"smax_optab->handlers[(int) %A].insn_code = CODE_FOR_%(max%F\\%a3%)\",\n+  \"umin_optab->handlers[(int) %A].insn_code = CODE_FOR_%(umin%I\\%a3%)\",\n+  \"umax_optab->handlers[(int) %A].insn_code = CODE_FOR_%(umax%I\\%a3%)\",\n   \"neg_optab->handlers[(int) %A].insn_code = CODE_FOR_%(neg%a2%)\",\n   \"abs_optab->handlers[(int) %A].insn_code = CODE_FOR_%(abs%a2%)\",\n   \"sqrt_optab->handlers[(int) %A].insn_code = CODE_FOR_%(sqrt%a2%)\","}]}