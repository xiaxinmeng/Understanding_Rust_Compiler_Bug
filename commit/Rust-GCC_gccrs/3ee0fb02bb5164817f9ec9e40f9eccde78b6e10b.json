{"sha": "3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VlMGZiMDJiYjUxNjQ4MTdmOWVjOWU0MGY5ZWNjZGU3OGI2ZTEwYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-04-10T07:29:29Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-04-10T07:29:29Z"}, "message": "Evaluate a SAVE_EXPR before an UBSAN check (PR sanitizer/80350).\n\n2017-04-10  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/80350\n\t* c-ubsan.c (ubsan_instrument_shift): Evaluate RHS before\n\tdoing an UBSAN check.\n2017-04-10  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/80350\n\t* c-c++-common/ubsan/pr80350.c: New test.\n\nFrom-SVN: r246799", "tree": {"sha": "31af896cdb1e309a27a9f50375a1da7ebc7ee096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31af896cdb1e309a27a9f50375a1da7ebc7ee096"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "167a5b77978fd30959290d5649d96534ae8db9a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167a5b77978fd30959290d5649d96534ae8db9a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167a5b77978fd30959290d5649d96534ae8db9a3"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "ff6edbdbef6494a5996584cdbce5e72b6cd03092", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b", "patch": "@@ -1,3 +1,9 @@\n+2017-04-10  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/80350\n+\t* c-ubsan.c (ubsan_instrument_shift): Evaluate RHS before\n+\tdoing an UBSAN check.\n+\n 2017-04-03  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* c-warn.c (do_warn_double_promotion): Fix typo in comment."}, {"sha": "e48841a334cc759a0afa55c98efca789fffeb373", "filename": "gcc/c-family/c-ubsan.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/gcc%2Fc-family%2Fc-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/gcc%2Fc-family%2Fc-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ubsan.c?ref=3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b", "patch": "@@ -172,6 +172,7 @@ ubsan_instrument_shift (location_t loc, enum tree_code code,\n   /* In case we have a SAVE_EXPR in a conditional context, we need to\n      make sure it gets evaluated before the condition.  */\n   t = fold_build2 (COMPOUND_EXPR, TREE_TYPE (t), unshare_expr (op0), t);\n+  t = fold_build2 (COMPOUND_EXPR, TREE_TYPE (t), unshare_expr (op1), t);\n \n   enum sanitize_code recover_kind = SANITIZE_SHIFT_EXPONENT;\n   tree else_t = void_node;"}, {"sha": "8e6523ac41be6b7eab88b1654e7000ab4f8ba56c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b", "patch": "@@ -1,3 +1,8 @@\n+2017-04-10  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/80350\n+\t* c-c++-common/ubsan/pr80350.c: New test.\n+\n 2017-04-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/80324"}, {"sha": "317d2facaf7a8fb4f7150715da7f6fcfa6fed880", "filename": "gcc/testsuite/c-c++-common/ubsan/pr80350.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80350.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80350.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80350.c?ref=3ee0fb02bb5164817f9ec9e40f9eccde78b6e10b", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/80310 */\n+/* { dg-do run } */\n+/* { dg-options \"-O0 -fsanitize=shift -fno-sanitize-recover=shift\" } */\n+\n+unsigned int x = 1;\n+unsigned int y = 0;\n+\n+void foo() {\n+  y = 1 >> (!x * 1111);\n+}\n+\n+int main () {\n+    foo ();\n+    if (y != 1)\n+      __builtin_abort ();\n+    return 0;\n+}"}]}