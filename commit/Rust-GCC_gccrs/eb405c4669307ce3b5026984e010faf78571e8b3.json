{"sha": "eb405c4669307ce3b5026984e010faf78571e8b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI0MDVjNDY2OTMwN2NlM2I1MDI2OTg0ZTAxMGZhZjc4NTcxZThiMw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2011-10-20T13:57:21Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2011-10-20T13:57:21Z"}, "message": "exception.c (parse_lsda_header): hardcode ttype_encoding for older ARM EABI toolchains.\n\n2011-10-17  Paul Brook  <paul@codesourcery.com>\n            Matthias Klose  <doko@ubuntu.com>\n\n        * exception.c (parse_lsda_header): hardcode ttype_encoding for older\n        ARM EABI toolchains.\n        (get_ttype_entry) Remove __ARM_EABI_UNWINDER__ variant.\n\nCo-Authored-By: Matthias Klose <doko@ubuntu.com>\n\nFrom-SVN: r180255", "tree": {"sha": "da52fe8c30c6977caad20b3f25097ca238f65a42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da52fe8c30c6977caad20b3f25097ca238f65a42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb405c4669307ce3b5026984e010faf78571e8b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb405c4669307ce3b5026984e010faf78571e8b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb405c4669307ce3b5026984e010faf78571e8b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb405c4669307ce3b5026984e010faf78571e8b3/comments", "author": null, "committer": null, "parents": [{"sha": "86220f3f94c22f1b52d3406326b797ae9a0ba967", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86220f3f94c22f1b52d3406326b797ae9a0ba967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86220f3f94c22f1b52d3406326b797ae9a0ba967"}], "stats": {"total": 34, "additions": 12, "deletions": 22}, "files": [{"sha": "86e8c139194ba3b9e895ac8c2ebb89af84430357", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb405c4669307ce3b5026984e010faf78571e8b3/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb405c4669307ce3b5026984e010faf78571e8b3/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=eb405c4669307ce3b5026984e010faf78571e8b3", "patch": "@@ -1,3 +1,10 @@\n+2011-10-17  Paul Brook  <paul@codesourcery.com>\n+\t    Matthias Klose  <doko@ubuntu.com>\n+\n+\t* exception.c (parse_lsda_header): hardcode ttype_encoding for older\n+\tARM EABI toolchains.\n+\t(get_ttype_entry) Remove __ARM_EABI_UNWINDER__ variant.\n+\n 2011-10-09  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR libobjc/49883"}, {"sha": "04308ce13e7d9319abdc19de6f70439cf3e8c273", "filename": "libobjc/exception.c", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb405c4669307ce3b5026984e010faf78571e8b3/libobjc%2Fexception.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb405c4669307ce3b5026984e010faf78571e8b3/libobjc%2Fexception.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fexception.c?ref=eb405c4669307ce3b5026984e010faf78571e8b3", "patch": "@@ -159,6 +159,11 @@ parse_lsda_header (struct _Unwind_Context *context, const unsigned char *p,\n   info->ttype_encoding = *p++;\n   if (info->ttype_encoding != DW_EH_PE_omit)\n     {\n+#if _GLIBCXX_OVERRIDE_TTYPE_ENCODING\n+      /* Older ARM EABI toolchains set this value incorrectly, so use a\n+\t hardcoded OS-specific format.  */\n+      info->ttype_encoding = _GLIBCXX_OVERRIDE_TTYPE_ENCODING;\n+#endif\n       p = read_uleb128 (p, &tmp);\n       info->TType = p + tmp;\n     }\n@@ -174,26 +179,6 @@ parse_lsda_header (struct _Unwind_Context *context, const unsigned char *p,\n   return p;\n }\n \n-#ifdef __ARM_EABI_UNWINDER__\n-\n-static Class\n-get_ttype_entry (struct lsda_header_info *info, _uleb128_t i)\n-{\n-  _Unwind_Ptr ptr;\n-  \n-  ptr = (_Unwind_Ptr) (info->TType - (i * 4));\n-  ptr = _Unwind_decode_target2 (ptr);\n-\n-  /* NULL ptr means catch-all.  Note that if the class is not found,\n-     this will abort the program.  */\n-  if (ptr)\n-    return objc_getRequiredClass ((const char *) ptr);\n-  else\n-    return 0;\n-}\n-\n-#else\n-\n static Class\n get_ttype_entry (struct lsda_header_info *info, _Unwind_Word i)\n {\n@@ -211,8 +196,6 @@ get_ttype_entry (struct lsda_header_info *info, _Unwind_Word i)\n     return 0;\n }\n \n-#endif\n-\n /* Using a different personality function name causes link failures\n    when trying to mix code using different exception handling\n    models.  */"}]}