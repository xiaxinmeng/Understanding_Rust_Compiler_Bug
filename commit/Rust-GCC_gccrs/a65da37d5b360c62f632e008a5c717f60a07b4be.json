{"sha": "a65da37d5b360c62f632e008a5c717f60a07b4be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY1ZGEzN2Q1YjM2MGM2MmY2MzJlMDA4YTVjNzE3ZjYwYTA3YjRiZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2005-06-29T12:18:08Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2005-06-29T12:18:08Z"}, "message": "basic_string.h, [...]: Fix Doxygen comments that use wrong parameter and function names.\n\n\t* include/bits/basic_string.h, include/bits/locale_facets.h: Fix\n\tDoxygen comments that use wrong parameter and function names.\n\nFrom-SVN: r101419", "tree": {"sha": "1aa92d69a967ccd73f7c904765a4cb2c5b053c08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aa92d69a967ccd73f7c904765a4cb2c5b053c08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a65da37d5b360c62f632e008a5c717f60a07b4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65da37d5b360c62f632e008a5c717f60a07b4be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a65da37d5b360c62f632e008a5c717f60a07b4be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65da37d5b360c62f632e008a5c717f60a07b4be/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d31a1f43716b73d356552e8879d061f8f5a3dbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d31a1f43716b73d356552e8879d061f8f5a3dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d31a1f43716b73d356552e8879d061f8f5a3dbc"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "8f34871759643f18ef22c267211c84b02253cf49", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65da37d5b360c62f632e008a5c717f60a07b4be/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65da37d5b360c62f632e008a5c717f60a07b4be/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a65da37d5b360c62f632e008a5c717f60a07b4be", "patch": "@@ -1,3 +1,8 @@\n+2005-06-29  Jonathan Wakely  <redi@gcc.gnu.org>\n+\n+\t* include/bits/basic_string.h, include/bits/locale_facets.h: Fix\n+\tDoxygen comments that use wrong parameter and function names.\n+\n 2005-06-29  Paolo Carlini  <pcarlini@suse.de>\n \n \t* docs/html/ext/lwg-active.html, lwg-defects.html: Import Revision 37."}, {"sha": "498d7065f161b769a56381ad2fab4e4cd276c68a", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65da37d5b360c62f632e008a5c717f60a07b4be/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65da37d5b360c62f632e008a5c717f60a07b4be/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=a65da37d5b360c62f632e008a5c717f60a07b4be", "patch": "@@ -404,7 +404,7 @@ namespace std\n       basic_string();\n \n       /**\n-       *  @brief  Construct an empty string using allocator a.\n+       *  @brief  Construct an empty string using allocator @a a.\n        */\n       explicit\n       basic_string(const _Alloc& __a);\n@@ -439,7 +439,7 @@ namespace std\n        *  @param  n  Number of characters to copy.\n        *  @param  a  Allocator to use (default is default allocator).\n        *\n-       *  NB: s must have at least n characters, '\\0' has no special\n+       *  NB: @a s must have at least @a n characters, '\\0' has no special\n        *  meaning.\n        */\n       basic_string(const _CharT* __s, size_type __n,\n@@ -636,8 +636,8 @@ namespace std\n       /**\n        *  @brief  Attempt to preallocate enough memory for specified number of\n        *          characters.\n-       *  @param  n  Number of characters required.\n-       *  @throw  std::length_error  If @a n exceeds @c max_size().\n+       *  @param  res_arg  Number of characters required.\n+       *  @throw  std::length_error  If @a res_arg exceeds @c max_size().\n        *\n        *  This function attempts to reserve enough memory for the\n        *  %string to hold the specified number of characters.  If the\n@@ -670,7 +670,7 @@ namespace std\n       // Element access:\n       /**\n        *  @brief  Subscript access to the data contained in the %string.\n-       *  @param  n  The index of the character to access.\n+       *  @param  pos  The index of the character to access.\n        *  @return  Read-only (constant) reference to the character.\n        *\n        *  This operator allows for easy, array-style, data access.\n@@ -687,7 +687,7 @@ namespace std\n \n       /**\n        *  @brief  Subscript access to the data contained in the %string.\n-       *  @param  n  The index of the character to access.\n+       *  @param  pos  The index of the character to access.\n        *  @return  Read/write reference to the character.\n        *\n        *  This operator allows for easy, array-style, data access.\n@@ -765,7 +765,7 @@ namespace std\n \n       /**\n        *  @brief  Append a character.\n-       *  @param s  The character to append.\n+       *  @param c  The character to append.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -1204,15 +1204,15 @@ namespace std\n        *  @brief  Replace characters with value of a C substring.\n        *  @param pos  Index of first character to replace.\n        *  @param n1  Number of characters to be replaced.\n-       *  @param str  C string to insert.\n-       *  @param n2  Number of characters from str to use.\n+       *  @param s  C string to insert.\n+       *  @param n2  Number of characters from @a s to use.\n        *  @return  Reference to this string.\n        *  @throw  std::out_of_range  If @a pos1 > size().\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n        *  Removes the characters in the range [pos,pos + n1) from this string.\n-       *  In place, the first @a n2 characters of @a str are inserted, or all\n-       *  of @a str if @a n2 is too large.  If @a pos is beyond end of string,\n+       *  In place, the first @a n2 characters of @a s are inserted, or all\n+       *  of @a s if @a n2 is too large.  If @a pos is beyond end of string,\n        *  out_of_range is thrown.  If the length of result exceeds max_size(),\n        *  length_error is thrown.  The value of the string doesn't change if\n        *  an error is thrown.\n@@ -1225,13 +1225,13 @@ namespace std\n        *  @brief  Replace characters with value of a C string.\n        *  @param pos  Index of first character to replace.\n        *  @param n1  Number of characters to be replaced.\n-       *  @param str  C string to insert.\n+       *  @param s  C string to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::out_of_range  If @a pos > size().\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n        *  Removes the characters in the range [pos,pos + n1) from this string.\n-       *  In place, the first @a n characters of @a str are inserted.  If @a\n+       *  In place, the first @a n characters of @a s are inserted.  If @a\n        *  pos is beyond end of string, out_of_range is thrown.  If the length\n        *  of result exceeds max_size(), length_error is thrown.  The value of\n        *  the string doesn't change if an error is thrown."}, {"sha": "c47768904ceaf8c0caf596e1f52a19cda42d50b2", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65da37d5b360c62f632e008a5c717f60a07b4be/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65da37d5b360c62f632e008a5c717f60a07b4be/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=a65da37d5b360c62f632e008a5c717f60a07b4be", "patch": "@@ -1950,7 +1950,7 @@ namespace std\n        *  @brief  Numeric parsing.\n        *\n        *  Parses the input stream into the bool @a v.  It does so by calling\n-       *  num_put::do_put().\n+       *  num_get::do_get().\n        *\n        *  If ios_base::boolalpha is set, attempts to read\n        *  ctype<CharT>::truename() or ctype<CharT>::falsename().  Sets\n@@ -1979,7 +1979,7 @@ namespace std\n        *  @brief  Numeric parsing.\n        *\n        *  Parses the input stream into the integral variable @a v.  It does so\n-       *  by calling num_put::do_put().\n+       *  by calling num_get::do_get().\n        *\n        *  Parsing is affected by the flag settings in @a io.\n        *\n@@ -2043,7 +2043,7 @@ namespace std\n        *  @brief  Numeric parsing.\n        *\n        *  Parses the input stream into the integral variable @a v.  It does so\n-       *  by calling num_put::do_put().\n+       *  by calling num_get::do_get().\n        *\n        *  The input characters are parsed like the scanf %g specifier.  The\n        *  matching type length modifier is also used.\n@@ -2084,7 +2084,7 @@ namespace std\n        *  @brief  Numeric parsing.\n        *\n        *  Parses the input stream into the pointer variable @a v.  It does so\n-       *  by calling num_put::do_put().\n+       *  by calling num_get::do_get().\n        *\n        *  The input characters are parsed like the scanf %p specifier.\n        *"}]}