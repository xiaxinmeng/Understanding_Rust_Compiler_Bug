{"sha": "c8faea875f141782c70267f2020ba3861fc27d13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhmYWVhODc1ZjE0MTc4MmM3MDI2N2YyMDIwYmEzODYxZmMyN2QxMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-13T22:23:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-13T22:23:39Z"}, "message": "Unknown; from Jason.\n\nFrom-SVN: r9937", "tree": {"sha": "4463501b868fe1ad06ac72c677b01166d945c9a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4463501b868fe1ad06ac72c677b01166d945c9a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8faea875f141782c70267f2020ba3861fc27d13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8faea875f141782c70267f2020ba3861fc27d13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8faea875f141782c70267f2020ba3861fc27d13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8faea875f141782c70267f2020ba3861fc27d13/comments", "author": null, "committer": null, "parents": [{"sha": "df38ebdddbe9930ae15570cea3a8fb28cd0d0ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df38ebdddbe9930ae15570cea3a8fb28cd0d0ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df38ebdddbe9930ae15570cea3a8fb28cd0d0ebd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ef4667d0ad22da01b608e551ab1e1c2dd1287f5f", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8faea875f141782c70267f2020ba3861fc27d13/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8faea875f141782c70267f2020ba3861fc27d13/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=c8faea875f141782c70267f2020ba3861fc27d13", "patch": "@@ -1844,7 +1844,7 @@ build_indirect_ref (ptr, errorstring)\n \t\t\t   ptr : default_conversion (ptr));\n   register tree type = TREE_TYPE (pointer);\n \n-  if (ptr == current_class_decl)\n+  if (ptr == current_class_decl && C_C_D)\n     return C_C_D;\n \n   ptr = build_expr_type_conversion (WANT_POINTER, pointer, 1);"}]}