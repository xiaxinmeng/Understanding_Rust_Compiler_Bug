{"sha": "3b2337831a81e4783d7205525c82f3b0cb11459c", "node_id": "C_kwDOANBUbNoAKDNiMjMzNzgzMWE4MWU0NzgzZDcyMDU1MjVjODJmM2IwY2IxMTQ1OWM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-24T11:47:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-24T13:20:26Z"}, "message": "libstdc++: Add xfail to some printer tests for debug mode\n\nThe type printers are not substituting std::string for\nstd::basic_string<char> in debug mode, mark some tests as xfail.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/libstdc++-prettyprinters/80276.cc: Add xfail for\n\tdebug mode.\n\t* testsuite/libstdc++-prettyprinters/libfundts.cc: Likewise.", "tree": {"sha": "3c1468ba4403a33e2b8a062c6964eda8a6cdc222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c1468ba4403a33e2b8a062c6964eda8a6cdc222"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b2337831a81e4783d7205525c82f3b0cb11459c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b2337831a81e4783d7205525c82f3b0cb11459c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b2337831a81e4783d7205525c82f3b0cb11459c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b2337831a81e4783d7205525c82f3b0cb11459c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04b73e15b7d691e4e668f2584b57f09f598d397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04b73e15b7d691e4e668f2584b57f09f598d397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04b73e15b7d691e4e668f2584b57f09f598d397"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "49420a3f811c1812060c629c591135a9b5935bfe", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/80276.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b2337831a81e4783d7205525c82f3b0cb11459c/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b2337831a81e4783d7205525c82f3b0cb11459c/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2F80276.cc?ref=3b2337831a81e4783d7205525c82f3b0cb11459c", "patch": "@@ -46,7 +46,7 @@ main()\n   // { dg-final { whatis-regexp-test p1 \"std::unique_ptr<std::(__debug::)?vector<std::unique_ptr<std::(__debug::)?vector<int>\\\\*>>>\" } }\n   // { dg-final { whatis-regexp-test p2 \"std::unique_ptr<std::(__debug::)?vector<std::unique_ptr<std::(__debug::)?set<int>\\\\*>>\\\\\\[\\\\\\]>\" } }\n   // { dg-final { whatis-regexp-test p3 \"std::unique_ptr<std::(__debug::)?set<std::unique_ptr<std::(__debug::)?vector<int>\\\\*>>\\\\\\[10\\\\\\]>\" } }\n-  // { dg-final { whatis-regexp-test p4 \"std::unique_ptr<std::(__debug::)?vector<std::unique_ptr<std::(__debug::)?list<std::string>\\\\\\[\\\\\\]>>\\\\\\[99\\\\\\]>\" { xfail c++20 } } }\n+  // { dg-final { whatis-regexp-test p4 \"std::unique_ptr<std::(__debug::)?vector<std::unique_ptr<std::(__debug::)?list<std::string>\\\\\\[\\\\\\]>>\\\\\\[99\\\\\\]>\" { xfail { c++20 || debug_mode } } } }\n \n   placeholder(&p1);\t\t// Mark SPOT\n   placeholder(&p2);"}, {"sha": "85005c0617fb820b877ca3f079686381bfc7ffdc", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/libfundts.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b2337831a81e4783d7205525c82f3b0cb11459c/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b2337831a81e4783d7205525c82f3b0cb11459c/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Flibfundts.cc?ref=3b2337831a81e4783d7205525c82f3b0cb11459c", "patch": "@@ -50,7 +50,7 @@ main()\n   om = std::map<int, double>{ {1, 2.}, {3, 4.}, {5, 6.} };\n // { dg-final { regexp-test om {std::experimental::optional<std::(__debug::)?map<int, double>> containing std::(__debug::)?map with 3 elements = {\\[1\\] = 2, \\[3\\] = 4, \\[5\\] = 6}} } }\n   optional<std::string> os{ \"stringy\" };\n-// { dg-final { note-test os {std::experimental::optional<std::string> = {[contained value] = \"stringy\"}} { xfail c++20 } } }\n+// { dg-final { note-test os {std::experimental::optional<std::string> = {[contained value] = \"stringy\"}} { xfail { c++20 || debug_mode } } } }\n \n   any a;\n // { dg-final { note-test a {std::experimental::any [no contained value]} } }\n@@ -61,7 +61,7 @@ main()\n   any ap = (void*)nullptr;\n // { dg-final { note-test ap {std::experimental::any containing void * = {[contained value] = 0x0}} } }\n   any as = *os;\n-// { dg-final { note-test as {std::experimental::any containing std::string = {[contained value] = \"stringy\"}} { xfail c++20 } } }\n+// { dg-final { note-test as {std::experimental::any containing std::string = {[contained value] = \"stringy\"}} { xfail { c++20 || debug_mode } } } }\n   any as2(\"stringiest\");\n // { dg-final { regexp-test as2 {std::experimental::any containing const char \\* = {\\[contained value\\] = 0x[[:xdigit:]]+ \"stringiest\"}} } }\n   any am = *om;"}]}