{"sha": "44d90fe1c00fa4bf947716cbfecf945892f182a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRkOTBmZTFjMDBmYTRiZjk0NzcxNmNiZmVjZjk0NTg5MmYxODJhNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-04-24T16:35:17Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-04-24T16:35:17Z"}, "message": "c.opt ([Wpointer-arith]): Enabled by -Wpedantic, as documented.\n\n/c-family\n2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n            Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\t* c.opt ([Wpointer-arith]): Enabled by -Wpedantic, as documented.\n\t* c-common.c (pointer_int_sum): Change -Wpointer-arith pedwarns\n\tto simply use OPT_Wpointer_arith.\n\t(c_sizeof_or_alignof_type): Likewise.\n\n/cp\n2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* typeck.c (cxx_sizeof_or_alignof_type): Change -Wpointer-arith\n\tpedwarn to simply use OPT_Wpointer_arith.\n\t(cp_build_unary_op): Likewise.\n\n/c\n2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* c-typeck.c (pointer_diff): Change -Wpointer-arith pedwarns\n\tto simply use OPT_Wpointer_arith.\n\t(build_unary_op): Likewise.\n\n/testsuite\n2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* c-c++-common/Wpointer-arith-1.c: New.\n\nCo-Authored-By: Manuel L\u00f3pez-Ib\u00e1\u00f1ez <manu@gcc.gnu.org>\n\nFrom-SVN: r198256", "tree": {"sha": "5e50f567107a826356fa5426fbedd18bebb7acde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e50f567107a826356fa5426fbedd18bebb7acde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44d90fe1c00fa4bf947716cbfecf945892f182a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d90fe1c00fa4bf947716cbfecf945892f182a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d90fe1c00fa4bf947716cbfecf945892f182a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d90fe1c00fa4bf947716cbfecf945892f182a6/comments", "author": null, "committer": null, "parents": [{"sha": "f6ce35ac7cd0498638a00396ae4a47269def92ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ce35ac7cd0498638a00396ae4a47269def92ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ce35ac7cd0498638a00396ae4a47269def92ac"}], "stats": {"total": 77, "additions": 63, "deletions": 14}, "files": [{"sha": "275b20dfb350e85f9e9ed7e29292b0ceb72c1f4b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -1,3 +1,11 @@\n+2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+            Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\t* c.opt ([Wpointer-arith]): Enabled by -Wpedantic, as documented.\n+\t* c-common.c (pointer_int_sum): Change -Wpointer-arith pedwarns\n+\tto simply use OPT_Wpointer_arith.\n+\t(c_sizeof_or_alignof_type): Likewise.\n+\n 2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Define __GXX_EXPERIMENTAL_CXX1Y__."}, {"sha": "b29f5fa0bed92ee760ef0f161c032771f58c6e92", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -4280,13 +4280,13 @@ pointer_int_sum (location_t loc, enum tree_code resultcode,\n \n   if (TREE_CODE (TREE_TYPE (result_type)) == VOID_TYPE)\n     {\n-      pedwarn (loc, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+      pedwarn (loc, OPT_Wpointer_arith,\n \t       \"pointer of type %<void *%> used in arithmetic\");\n       size_exp = integer_one_node;\n     }\n   else if (TREE_CODE (TREE_TYPE (result_type)) == FUNCTION_TYPE)\n     {\n-      pedwarn (loc, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+      pedwarn (loc, OPT_Wpointer_arith,\n \t       \"pointer to a function used in arithmetic\");\n       size_exp = integer_one_node;\n     }\n@@ -4864,8 +4864,8 @@ c_sizeof_or_alignof_type (location_t loc,\n     {\n       if (is_sizeof)\n \t{\n-\t  if (complain && (pedantic || warn_pointer_arith))\n-\t    pedwarn (loc, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+\t  if (complain && warn_pointer_arith)\n+\t    pedwarn (loc, OPT_Wpointer_arith,\n \t\t     \"invalid application of %<sizeof%> to a function type\");\n           else if (!complain)\n             return error_mark_node;\n@@ -4888,8 +4888,8 @@ c_sizeof_or_alignof_type (location_t loc,\n   else if (type_code == VOID_TYPE || type_code == ERROR_MARK)\n     {\n       if (type_code == VOID_TYPE\n-\t  && complain && (pedantic || warn_pointer_arith))\n-\tpedwarn (loc, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+\t  && complain && warn_pointer_arith)\n+\tpedwarn (loc, OPT_Wpointer_arith,\n \t\t \"invalid application of %qs to a void type\", op_name);\n       else if (!complain)\n         return error_mark_node;"}, {"sha": "124c13986a8e5f27540e791204a36d6f6d8f279f", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -614,7 +614,7 @@ C++ ObjC++ Var(warn_pmf2ptr) Init(1) Warning\n Warn when converting the type of pointers to member functions\n \n Wpointer-arith\n-C ObjC C++ ObjC++ Var(warn_pointer_arith) Warning\n+C ObjC C++ ObjC++ Var(warn_pointer_arith) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic)\n Warn about function pointer arithmetic\n \n Wpointer-sign"}, {"sha": "cdcd416bae90022280bd0d83ef9f83394259ce65", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -1,3 +1,9 @@\n+2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* c-typeck.c (pointer_diff): Change -Wpointer-arith pedwarns\n+\tto simply use OPT_Wpointer_arith.\n+\t(build_unary_op): Likewise.\n+\n 2013-04-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/19449"}, {"sha": "5a29f7c6a34f560ced87d9b1e6a9ece1224016ec", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -3333,10 +3333,10 @@ pointer_diff (location_t loc, tree op0, tree op1)\n \n \n   if (TREE_CODE (target_type) == VOID_TYPE)\n-    pedwarn (loc, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+    pedwarn (loc, OPT_Wpointer_arith,\n \t     \"pointer of type %<void *%> used in subtraction\");\n   if (TREE_CODE (target_type) == FUNCTION_TYPE)\n-    pedwarn (loc, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+    pedwarn (loc, OPT_Wpointer_arith,\n \t     \"pointer to a function used in subtraction\");\n \n   /* If the conversion to ptrdiff_type does anything like widening or\n@@ -3663,10 +3663,10 @@ build_unary_op (location_t location,\n \t\t     || TREE_CODE (TREE_TYPE (argtype)) == VOID_TYPE)\n \t      {\n \t\tif (code == PREINCREMENT_EXPR || code == POSTINCREMENT_EXPR)\n-\t\t  pedwarn (location, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+\t\t  pedwarn (location, OPT_Wpointer_arith,\n \t\t\t   \"wrong type argument to increment\");\n \t\telse\n-\t\t  pedwarn (location, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+\t\t  pedwarn (location, OPT_Wpointer_arith,\n \t\t\t   \"wrong type argument to decrement\");\n \t      }\n "}, {"sha": "761ca341719d35c31646f9d0542f5a91ebd90de2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -1,3 +1,9 @@\n+2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* typeck.c (cxx_sizeof_or_alignof_type): Change -Wpointer-arith\n+\tpedwarn to simply use OPT_Wpointer_arith.\n+\t(cp_build_unary_op): Likewise.\n+\n 2013-04-24  Jason Merrill  <jason@redhat.com>\n \n \tN3648: init-captures are named."}, {"sha": "84da5de51d27f308a3c20e0edbb26b45725ae110", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -1522,7 +1522,7 @@ cxx_sizeof_or_alignof_type (tree type, enum tree_code op, bool complain)\n   if (TREE_CODE (type) == METHOD_TYPE)\n     {\n       if (complain)\n-\tpedwarn (input_location, pedantic ? OPT_Wpedantic : OPT_Wpointer_arith, \n+\tpedwarn (input_location, OPT_Wpointer_arith, \n \t\t \"invalid application of %qs to a member function\", \n \t\t operator_name_info[(int) op].name);\n       value = size_one_node;\n@@ -5601,8 +5601,7 @@ cp_build_unary_op (enum tree_code code, tree xarg, int noconvert,\n \t    else if (!TYPE_PTROB_P (argtype)) \n               {\n                 if (complain & tf_error)\n-                  pedwarn (input_location,\n-\t\t\t   pedantic ? OPT_Wpedantic : OPT_Wpointer_arith,\n+                  pedwarn (input_location, OPT_Wpointer_arith,\n \t\t\t   (code == PREINCREMENT_EXPR\n                               || code == POSTINCREMENT_EXPR)\n \t\t\t   ? G_(\"ISO C++ forbids incrementing a pointer of type %qT\")"}, {"sha": "c3cd691f1175a22ed080efa6a20b3f8a325fe7d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -1,3 +1,7 @@\n+2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* c-c++-common/Wpointer-arith-1.c: New.\n+\n 2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp1y/cxx1y_macro.C: New."}, {"sha": "86668ef1b7ec5c1b1cec350419492bdf658872f5", "filename": "gcc/testsuite/c-c++-common/Wpointer-arith-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWpointer-arith-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d90fe1c00fa4bf947716cbfecf945892f182a6/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWpointer-arith-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWpointer-arith-1.c?ref=44d90fe1c00fa4bf947716cbfecf945892f182a6", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wpedantic -Wno-pointer-arith\" } */\n+\n+void h(void)\n+{\n+  typedef void (*pft) ();\n+  typedef void (ft) ();\n+\n+  void *pv = 0;\n+  pft pf = 0;\n+\n+  pv++;\n+  pf++;\n+\n+  --pv;\n+  --pf;\n+\n+  pv += 1;\n+  pf += 1;\n+\n+  pv = pv - 1;\n+  pf = pf - 1;\n+\n+  sizeof (void);\n+  sizeof (ft);\n+}"}]}