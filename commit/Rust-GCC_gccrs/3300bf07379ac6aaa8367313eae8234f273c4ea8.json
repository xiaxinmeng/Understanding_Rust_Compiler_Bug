{"sha": "3300bf07379ac6aaa8367313eae8234f273c4ea8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMwMGJmMDczNzlhYzZhYWE4MzY3MzEzZWFlODIzNGYyNzNjNGVhOA==", "commit": {"author": {"name": "Peter O'Gorman", "email": "peter@pogma.com", "date": "2005-08-07T02:39:12Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-08-07T02:39:12Z"}, "message": "Make Darwin -bundle option work.  Patch from Peter O'Gorman.\n\nPR 21366\n* gcc.c (process_command): Check the argument to -b has a dash.\n* doc/invoke.texi: Update -b and -V docs.\n\nFrom-SVN: r102829", "tree": {"sha": "0f8a13dcac8da97a70836a45d7a5b75832fe3342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f8a13dcac8da97a70836a45d7a5b75832fe3342"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3300bf07379ac6aaa8367313eae8234f273c4ea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3300bf07379ac6aaa8367313eae8234f273c4ea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3300bf07379ac6aaa8367313eae8234f273c4ea8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3300bf07379ac6aaa8367313eae8234f273c4ea8/comments", "author": {"login": "pogma", "id": 607929, "node_id": "MDQ6VXNlcjYwNzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/607929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pogma", "html_url": "https://github.com/pogma", "followers_url": "https://api.github.com/users/pogma/followers", "following_url": "https://api.github.com/users/pogma/following{/other_user}", "gists_url": "https://api.github.com/users/pogma/gists{/gist_id}", "starred_url": "https://api.github.com/users/pogma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pogma/subscriptions", "organizations_url": "https://api.github.com/users/pogma/orgs", "repos_url": "https://api.github.com/users/pogma/repos", "events_url": "https://api.github.com/users/pogma/events{/privacy}", "received_events_url": "https://api.github.com/users/pogma/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2ba06d66dfa00f390cb4d8199352853db7ba1bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ba06d66dfa00f390cb4d8199352853db7ba1bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2ba06d66dfa00f390cb4d8199352853db7ba1bd"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "be5749bdc79a806768b6ed1c8eb1cb981cdb9f21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3300bf07379ac6aaa8367313eae8234f273c4ea8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3300bf07379ac6aaa8367313eae8234f273c4ea8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3300bf07379ac6aaa8367313eae8234f273c4ea8", "patch": "@@ -1,3 +1,9 @@\n+2005-08-06  Peter O'Gorman  <peter@pogma.com>\n+\n+\tPR 21366\n+\t* gcc.c (process_command): Check the argument to -b has a dash.\n+\t* doc/invoke.texi: Update -b and -V docs.\n+\n 2005-08-06  James E Wilson  <wilson@specifix.com>\n \n \t* config/mips/cross64.h, config/mips/t-cross64: Delete."}, {"sha": "cdedd818524ed677c69dfe7695d36a8e9f480cfd", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3300bf07379ac6aaa8367313eae8234f273c4ea8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3300bf07379ac6aaa8367313eae8234f273c4ea8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3300bf07379ac6aaa8367313eae8234f273c4ea8", "patch": "@@ -6943,14 +6943,16 @@ The argument @var{machine} specifies the target machine for compilation.\n The value to use for @var{machine} is the same as was specified as the\n machine type when configuring GCC as a cross-compiler.  For\n example, if a cross-compiler was configured with @samp{configure\n-i386v}, meaning to compile for an 80386 running System V, then you\n-would specify @option{-b i386v} to run that cross compiler.\n+arm-elf}, meaning to compile for an arm processor with elf binaries,\n+then you would specify @option{-b arm-elf} to run that cross compiler.\n+Because there are other options beginning with @option{-b}, the\n+configuration must contain a hyphen. \n \n @item -V @var{version}\n @opindex V\n The argument @var{version} specifies which version of GCC to run.\n This is useful when multiple versions are installed.  For example,\n-@var{version} might be @samp{2.0}, meaning to run GCC version 2.0.\n+@var{version} might be @samp{4.0}, meaning to run GCC version 4.0.\n @end table\n \n The @option{-V} and @option{-b} options work by running the"}, {"sha": "a3a8402337e922b8adad0eb3ea77947c22ed22a3", "filename": "gcc/gcc.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3300bf07379ac6aaa8367313eae8234f273c4ea8/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3300bf07379ac6aaa8367313eae8234f273c4ea8/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=3300bf07379ac6aaa8367313eae8234f273c4ea8", "patch": "@@ -3175,9 +3175,12 @@ process_command (int argc, const char **argv)\n     }\n \n   /* If there is a -V or -b option (or both), process it now, before\n-     trying to interpret the rest of the command line.  */\n+     trying to interpret the rest of the command line. \n+     Use heuristic that all configuration names must have at least\n+     one dash '-'. This allows us to pass options starting with -b.  */\n   if (argc > 1 && argv[1][0] == '-'\n-      && (argv[1][1] == 'V' || argv[1][1] == 'b'))\n+      && (argv[1][1] == 'V' || \n+\t ((argv[1][1] == 'b') && (NULL != strchr(argv[1] + 2,'-')))))\n     {\n       const char *new_version = DEFAULT_TARGET_VERSION;\n       const char *new_machine = DEFAULT_TARGET_MACHINE;\n@@ -3187,7 +3190,8 @@ process_command (int argc, const char **argv)\n       int baselen;\n \n       while (argc > 1 && argv[1][0] == '-'\n-\t     && (argv[1][1] == 'V' || argv[1][1] == 'b'))\n+\t     && (argv[1][1] == 'V' ||\n+\t\t((argv[1][1] == 'b') && ( NULL != strchr(argv[1] + 2,'-')))))\n \t{\n \t  char opt = argv[1][1];\n \t  const char *arg;\n@@ -3608,6 +3612,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t  switch (c)\n \t    {\n \t    case 'b':\n+\t      if (NULL == strchr(argv[i] + 2, '-')) break;\n \t    case 'V':\n \t      fatal (\"'-%c' must come at the start of the command line\", c);\n \t      break;"}]}