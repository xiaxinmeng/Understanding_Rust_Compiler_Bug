{"sha": "590549fbed8b78dc7fbe8708ab4a25e0a5939995", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkwNTQ5ZmJlZDhiNzhkYzdmYmU4NzA4YWI0YTI1ZTBhNTkzOTk5NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T12:48:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T12:48:33Z"}, "message": "[multiple changes]\n\n2011-08-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* a-exexpr.adb (Propagate_Exception): Remove all the parameters as\n\tthey were unused.\n\t* a-exexpr-gcc.adb (Propagate_Exception): Ditto.\n\t* a-except-2005.adb (Propagate_Exception): Adjust spec.\n\t(Raise_Current_Excep): Adjust call.\n\t(Raise_From_Signal_Handler): Call now simply call Raise_Current_Excep.\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_disp.adb: Minor reformatting.\n\nFrom-SVN: r178215", "tree": {"sha": "bcccd6b829524a56b32c0d2e91de2fe117756799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcccd6b829524a56b32c0d2e91de2fe117756799"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/590549fbed8b78dc7fbe8708ab4a25e0a5939995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/590549fbed8b78dc7fbe8708ab4a25e0a5939995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/590549fbed8b78dc7fbe8708ab4a25e0a5939995", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/590549fbed8b78dc7fbe8708ab4a25e0a5939995/comments", "author": null, "committer": null, "parents": [{"sha": "62380e66a503c97a2cf222ede1f5b2665bdbed38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62380e66a503c97a2cf222ede1f5b2665bdbed38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62380e66a503c97a2cf222ede1f5b2665bdbed38"}], "stats": {"total": 58, "additions": 21, "deletions": 37}, "files": [{"sha": "9a68b31c2b94c1c21cc446bc416e8f403e03cd05", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=590549fbed8b78dc7fbe8708ab4a25e0a5939995", "patch": "@@ -1,3 +1,16 @@\n+2011-08-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* a-exexpr.adb (Propagate_Exception): Remove all the parameters as\n+\tthey were unused.\n+\t* a-exexpr-gcc.adb (Propagate_Exception): Ditto.\n+\t* a-except-2005.adb (Propagate_Exception): Adjust spec.\n+\t(Raise_Current_Excep): Adjust call.\n+\t(Raise_From_Signal_Handler): Call now simply call Raise_Current_Excep.\n+\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_disp.adb: Minor reformatting.\n+\n 2011-08-29  Tristan Gingold  <gingold@adacore.com>\n \n \t* a-exexpr.adb (Setup_Exception): Removed."}, {"sha": "e45466e407187a9f35e8e32c869ccc1212a06297", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=590549fbed8b78dc7fbe8708ab4a25e0a5939995", "patch": "@@ -239,9 +239,7 @@ package body Ada.Exceptions is\n       -- Exception propagation routines --\n       ------------------------------------\n \n-      procedure Propagate_Exception\n-        (E                   : Exception_Id;\n-         From_Signal_Handler : Boolean);\n+      procedure Propagate_Exception;\n       pragma No_Return (Propagate_Exception);\n       --  This procedure propagates the exception represented by the occurrence\n       --  referenced by Current_Excep in the TSD for the current task.\n@@ -268,8 +266,7 @@ package body Ada.Exceptions is\n    procedure Raise_Current_Excep (E : Exception_Id);\n    pragma No_Return (Raise_Current_Excep);\n    pragma Export (C, Raise_Current_Excep, \"__gnat_raise_nodefer_with_msg\");\n-   --  This is a simple wrapper to Exception_Propagation.Propagate_Exception\n-   --  setting the From_Signal_Handler argument to False.\n+   --  This is a simple wrapper to Exception_Propagation.Propagate_Exception.\n    --\n    --  This external name for Raise_Current_Excep is historical, and probably\n    --  should be changed but for now we keep it, because gdb and gigi know\n@@ -815,8 +812,7 @@ package body Ada.Exceptions is\n    procedure Raise_Current_Excep (E : Exception_Id) is\n    begin\n       Debug_Raise_Exception (E => SSL.Exception_Data_Ptr (E));\n-      Exception_Propagation.Propagate_Exception\n-        (E => E, From_Signal_Handler => False);\n+      Exception_Propagation.Propagate_Exception;\n    end Raise_Current_Excep;\n \n    ---------------------\n@@ -923,9 +919,7 @@ package body Ada.Exceptions is\n          Abort_Defer.all;\n       end if;\n \n-      Debug_Raise_Exception (E => SSL.Exception_Data_Ptr (E));\n-      Exception_Propagation.Propagate_Exception\n-        (E => E, From_Signal_Handler => True);\n+      Raise_Current_Excep (E);\n    end Raise_From_Signal_Handler;\n \n    -------------------------"}, {"sha": "a433dddf71ce37cffc6e3d4bc38e7404bc16b20c", "filename": "gcc/ada/a-exexpr-gcc.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2Fa-exexpr-gcc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2Fa-exexpr-gcc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr-gcc.adb?ref=590549fbed8b78dc7fbe8708ab4a25e0a5939995", "patch": "@@ -445,12 +445,7 @@ package body Exception_Propagation is\n    --  handling the two phase scheme it implements.\n \n    procedure Propagate_Exception\n-     (E                   : Exception_Id;\n-      From_Signal_Handler : Boolean)\n    is\n-      pragma Inspection_Point (E);\n-      pragma Unreferenced (From_Signal_Handler);\n-\n       Excep         : constant EOA := Get_Current_Excep.all;\n       GCC_Exception : GNAT_GCC_Exception_Access;\n "}, {"sha": "cbe8a5c1c38cb67be72793d7b0f454d2e23ad906", "filename": "gcc/ada/a-exexpr.adb", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2Fa-exexpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2Fa-exexpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr.adb?ref=590549fbed8b78dc7fbe8708ab4a25e0a5939995", "patch": "@@ -32,28 +32,14 @@\n --  This is the default version, using the __builtin_setjmp/longjmp EH\n --  mechanism.\n \n-with System.Storage_Elements;  use System.Storage_Elements;\n-\n with Ada.Unchecked_Conversion;\n \n-pragma Warnings (Off);\n---  Since several constructs give warnings in 3.14a1, including unreferenced\n---  variables and pragma Unreferenced itself.\n-\n separate (Ada.Exceptions)\n package body Exception_Propagation is\n \n    --  Common binding to __builtin_longjmp for sjlj variants.\n \n-   --  The builtin expects a pointer type for the jmpbuf address argument, and\n-   --  System.Address doesn't work because this is really an integer type.\n-\n-   type Jmpbuf_Address is access Character;\n-\n-   function To_Jmpbuf_Address is new\n-     Ada.Unchecked_Conversion (System.Address, Jmpbuf_Address);\n-\n-   procedure builtin_longjmp (buffer : Jmpbuf_Address; Flag : Integer);\n+   procedure builtin_longjmp (buffer : System.Address; Flag : Integer);\n    pragma No_Return (builtin_longjmp);\n    pragma Import (Intrinsic, builtin_longjmp, \"__builtin_longjmp\");\n \n@@ -62,11 +48,7 @@ package body Exception_Propagation is\n    -------------------------\n \n    procedure Propagate_Exception\n-     (E                   : Exception_Id;\n-      From_Signal_Handler : Boolean)\n    is\n-      pragma Inspection_Point (E);\n-\n       Jumpbuf_Ptr : constant Address := Get_Jmpbuf_Address.all;\n       Excep       : constant EOA := Get_Current_Excep.all;\n    begin\n@@ -108,7 +90,7 @@ package body Exception_Propagation is\n             Exception_Traces.Notify_Handled_Exception;\n          end if;\n \n-         builtin_longjmp (To_Jmpbuf_Address (Jumpbuf_Ptr), 1);\n+         builtin_longjmp (Jumpbuf_Ptr, 1);\n \n       else\n          Exception_Traces.Notify_Unhandled_Exception;"}, {"sha": "1272d0172685e3feac50b8054b42e07c02185cdb", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/590549fbed8b78dc7fbe8708ab4a25e0a5939995/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=590549fbed8b78dc7fbe8708ab4a25e0a5939995", "patch": "@@ -3701,8 +3701,8 @@ package body Exp_Disp is\n \n          function Is_Actual_For_Formal_Incomplete_Type\n            (T : Entity_Id) return Boolean;\n-         --  In Ada2012, if a nested generic has an incomplete formal type, the\n-         --  actual may be (and usually is) a private type whose completion\n+         --  In Ada 2012, if a nested generic has an incomplete formal type,\n+         --  the actual may be (and usually is) a private type whose completion\n          --  appears later. It is safe to build the dispatch table in this\n          --  case, gigi will have full views available.\n "}]}