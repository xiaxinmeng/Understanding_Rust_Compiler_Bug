{"sha": "04b4f3152593f85b05974528d1607619dd77d702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRiNGYzMTUyNTkzZjg1YjA1OTc0NTI4ZDE2MDc2MTlkZDc3ZDcwMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-12T09:26:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-12T09:26:57Z"}, "message": "i386: Fix up V32HImode permutations with -mno-avx512bw [PR101860]\n\nMy patch from yesterday apparently broke some V32HImode permutations\nas the testcase shows.\nThe first function assumed it would never be called in d->testing_p mode\nand so went right away into emitting the code.\nAnd the second one assumed V32HImode would never reach it, which now\ncan for the !TARGET_AVX512BW case.  We don't have a instruction\nin that case though.\n\n2021-08-12  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/101860\n\t* config/i386/i386-expand.c (ix86_expand_vec_one_operand_perm_avx512):\n\tIf d->testing_p, return true after performing checks instead of\n\tactually expanding the insn.\n\t(expand_vec_perm_broadcast_1): Handle V32HImode - assert\n\t!TARGET_AVX512BW and return false.\n\n\t* gcc.target/i386/avx512f-pr101860.c: New test.", "tree": {"sha": "0eb7800d2424aa21abacf7343a299d158b6525f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eb7800d2424aa21abacf7343a299d158b6525f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04b4f3152593f85b05974528d1607619dd77d702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b4f3152593f85b05974528d1607619dd77d702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b4f3152593f85b05974528d1607619dd77d702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b4f3152593f85b05974528d1607619dd77d702/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01f8a8b48e50cbaa68b878d9f8a330b8c0736bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f8a8b48e50cbaa68b878d9f8a330b8c0736bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f8a8b48e50cbaa68b878d9f8a330b8c0736bed"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "a652b25f5345afb4a98b673ddb83edc24418279c", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b4f3152593f85b05974528d1607619dd77d702/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b4f3152593f85b05974528d1607619dd77d702/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=04b4f3152593f85b05974528d1607619dd77d702", "patch": "@@ -18116,6 +18116,9 @@ ix86_expand_vec_one_operand_perm_avx512 (struct expand_vec_perm_d *d)\n       return false;\n     }\n \n+  if (d->testing_p)\n+    return true;\n+\n   target = d->target;\n   op0 = d->op0;\n   for (int i = 0; i < d->nelt; ++i)\n@@ -20481,6 +20484,10 @@ expand_vec_perm_broadcast_1 (struct expand_vec_perm_d *d)\n       gcc_assert (!TARGET_AVX2 || d->perm[0]);\n       return false;\n \n+    case E_V32HImode:\n+      gcc_assert (!TARGET_AVX512BW);\n+      return false;\n+\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "1aadfa28ac845160c6d7c18c02fe9446fe411a35", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr101860.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b4f3152593f85b05974528d1607619dd77d702/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr101860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b4f3152593f85b05974528d1607619dd77d702/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr101860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr101860.c?ref=04b4f3152593f85b05974528d1607619dd77d702", "patch": "@@ -0,0 +1,5 @@\n+/* PR target/101860 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512f -mno-avx512bw\" } */\n+\n+#include \"../../gcc.dg/torture/vshuf-v32hi.c\""}]}