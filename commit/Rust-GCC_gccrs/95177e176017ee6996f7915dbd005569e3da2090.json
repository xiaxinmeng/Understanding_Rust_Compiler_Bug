{"sha": "95177e176017ee6996f7915dbd005569e3da2090", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUxNzdlMTc2MDE3ZWU2OTk2Zjc5MTVkYmQwMDU1NjllM2RhMjA5MA==", "commit": {"author": {"name": "David Ung", "email": "davidu@mips.com", "date": "2005-05-11T12:52:58Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-05-11T12:52:58Z"}, "message": "mips.md (type): Add imul3.\n\n\t* config/mips/mips.md (type): Add imul3.\n\t(length, hazard, may_clobber_hilo): Check for imul3.\n\t(mulsi3_mult3, muldi3_mult3, *muls, <su>mulsi3_highpart_mulhi_internal)\n\t(*<su>mulsi3_highpart_neg_mulhi_internal): Set attr to imul3.\n\t* config/mips/24k.md (r24k_int_mul3): Enable this reservation\n\tfor a 3 operand mul and its bypasses.\n\t* config/mips/3000.md (r3k_imul): Add imul3 to reservations.\n\t* config/mips/4000.md (r4k_imul): Likewise.\n\t* config/mips/4100.md (r4100_imul_si, r4100_imul_di):  Likewise.\n\t* config/mips/4130.md (vr4130_class, vr4130_mulsi)\n\t(vr4130_muldi): Likewise.\n\t* config/mips/4300.md (r4300_imul_si, r4300_imul_di): Likewise.\n\t* config/mips/4600.md (r4600_imul, r4650_imul): Likewise.\n\t* config/mips/5000.md (r5k_imul_si, r5k_imul_di): Likewise.\n\t* config/mips/5400.md (ir_vr54_imul_si, ir_vr54_imul_di)\n\t(ir_vr54_imadd_si): Likewise.\n\t* config/mips/5500.md (ir_vr55_imul_si, ir_vr55_imul_di):  Likewise.\n\t* config/mips/7000.md (rm7_impy_si_mult, rm7_impy_si_mul)\n\t(rm7_impy_di): Likewise.\n\t* config/mips/9000.md (rm9k_mulsi, rm9k_muldi):  Likewise.\n\t* config/mips/generic.md (generic_imul): Likewise.\n\t* config/mips/sb1.md (ir_sb1_mulsi, ir_sb1_muldi): Likewise.\n\t* config/mips/sr71k.md (ir_sr70_imul_si, ir_sr70_imul_di):  Likewise.\n\nFrom-SVN: r99577", "tree": {"sha": "38c6d6aa2e12cfcfadb23595bfdc50ba84dbd6b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38c6d6aa2e12cfcfadb23595bfdc50ba84dbd6b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95177e176017ee6996f7915dbd005569e3da2090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95177e176017ee6996f7915dbd005569e3da2090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95177e176017ee6996f7915dbd005569e3da2090", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95177e176017ee6996f7915dbd005569e3da2090/comments", "author": null, "committer": null, "parents": [{"sha": "cbbaf4aefa255ae4f4a60fe0ec62d2151b4eac81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbbaf4aefa255ae4f4a60fe0ec62d2151b4eac81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbbaf4aefa255ae4f4a60fe0ec62d2151b4eac81"}], "stats": {"total": 117, "additions": 71, "deletions": 46}, "files": [{"sha": "d620fc48c9d4c501ccf075ae87d24ae34308ecf8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -1,3 +1,29 @@\n+2005-05-11  David Ung  <davidu@mips.com>\n+\n+\t* config/mips/mips.md (type): Add imul3.\n+\t(length, hazard, may_clobber_hilo): Check for imul3.\n+\t(mulsi3_mult3, muldi3_mult3, *muls, <su>mulsi3_highpart_mulhi_internal)\n+\t(*<su>mulsi3_highpart_neg_mulhi_internal): Set attr to imul3.\n+\t* config/mips/24k.md (r24k_int_mul3): Enable this reservation\n+\tfor a 3 operand mul and its bypasses.\n+\t* config/mips/3000.md (r3k_imul): Add imul3 to reservations.\n+\t* config/mips/4000.md (r4k_imul): Likewise.\n+\t* config/mips/4100.md (r4100_imul_si, r4100_imul_di):  Likewise.\n+\t* config/mips/4130.md (vr4130_class, vr4130_mulsi)\n+\t(vr4130_muldi): Likewise.\n+\t* config/mips/4300.md (r4300_imul_si, r4300_imul_di): Likewise.\n+\t* config/mips/4600.md (r4600_imul, r4650_imul): Likewise.\n+\t* config/mips/5000.md (r5k_imul_si, r5k_imul_di): Likewise.\n+\t* config/mips/5400.md (ir_vr54_imul_si, ir_vr54_imul_di)\n+\t(ir_vr54_imadd_si): Likewise.\n+\t* config/mips/5500.md (ir_vr55_imul_si, ir_vr55_imul_di):  Likewise.\n+\t* config/mips/7000.md (rm7_impy_si_mult, rm7_impy_si_mul)\n+\t(rm7_impy_di): Likewise.\n+\t* config/mips/9000.md (rm9k_mulsi, rm9k_muldi):  Likewise.\n+\t* config/mips/generic.md (generic_imul): Likewise.\n+\t* config/mips/sb1.md (ir_sb1_mulsi, ir_sb1_muldi): Likewise.\n+\t* config/mips/sr71k.md (ir_sr70_imul_si, ir_sr70_imul_di):  Likewise.\n+\n 2005-05-11  J\"orn Rennecke <joern.rennecke@st.com>\n \n \tPR middle-end/20371:"}, {"sha": "feac2fe07cfeb8d0452decce48461b38e1f5ee1b", "filename": "gcc/config/mips/24k.md", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F24k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F24k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F24k.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -87,12 +87,10 @@\n   \"r24k_iss+(r24k_mul3a|r24k_mul3b|r24k_mul3c)\")\n \n ;; mul - delivers result to gpr in 5 cycles \n-;; (disabled for now until we introduce the 3 operand mul into the general \n-;;  patterns).\n-;;(define_insn_reservation \"r24k_int_mul3\" 5 \n-;; (and (eq_attr \"cpu\" \"24k,24kx\")\n-;;   (eq_attr \"type\" \"imul3\")) \n-;; \"r24k_iss+(r24k_mul3a|r24k_mul3b|r24k_mul3c)*5\")\n+(define_insn_reservation \"r24k_int_mul3\" 5 \n+  (and (eq_attr \"cpu\" \"24k,24kx\")\n+       (eq_attr \"type\" \"imul3\")) \n+  \"r24k_iss+(r24k_mul3a|r24k_mul3b|r24k_mul3c)*5\")\n \n ;; mfhi, mflo, mflhxu - deliver result to gpr in 5 cycles\n (define_insn_reservation \"r24k_int_mfhilo\" 5 \n@@ -186,9 +184,9 @@\n ;; mul3->next use : 5 cycles (default)\n ;; mul3->l/s base : 6 cycles\n ;; mul3->prefetch : 6 cycles\n-;;(define_bypass 6 \"r24k_int_mul3\" \"r24k_int_load\")\n-;;(define_bypass 6 \"r24k_int_mul3\" \"r24k_int_store\" \"!store_data_bypass_p\")\n-;;(define_bypass 6 \"r24k_int_mul3\" \"r24k_int_prefetch\")\n+(define_bypass 6 \"r24k_int_mul3\" \"r24k_int_load\")\n+(define_bypass 6 \"r24k_int_mul3\" \"r24k_int_store\" \"!store_data_bypass_p\")\n+(define_bypass 6 \"r24k_int_mul3\" \"r24k_int_prefetch\")\n \n ;; mfhilo->next use  : 5 cycles (default)\n ;; mfhilo->l/s base  : 6 cycles "}, {"sha": "bc748d8758fd461bedec6245835dbd0c38d8ab07", "filename": "gcc/config/mips/3000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F3000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F3000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F3000.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -29,7 +29,7 @@\n \n (define_insn_reservation \"r3k_imul\" 12\n   (and (eq_attr \"cpu\" \"r3000,r3900\")\n-       (eq_attr \"type\" \"imul,imadd\"))\n+       (eq_attr \"type\" \"imul,imul3,imadd\"))\n   \"imuldiv*12\")\n \n (define_insn_reservation \"r3k_idiv\" 35"}, {"sha": "4fcd240279c2d146d311d4cae67292e1a0f3e0d5", "filename": "gcc/config/mips/4000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4000.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -24,7 +24,7 @@\n \n (define_insn_reservation \"r4k_imul\" 10\n   (and (eq_attr \"cpu\" \"r4000\")\n-       (eq_attr \"type\" \"imul,imadd\"))\n+       (eq_attr \"type\" \"imul,imul3,imadd\"))\n   \"imuldiv*10\")\n \n (define_insn_reservation \"r4k_idiv\" 69"}, {"sha": "5601c979edbfdc2f6e7db8fc354f5c0dcd73ee4a", "filename": "gcc/config/mips/4100.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4100.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4100.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4100.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -29,13 +29,13 @@\n \n (define_insn_reservation \"r4100_imul_si\" 1\n   (and (eq_attr \"cpu\" \"r4100,r4120\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"SI\")))\n   \"imuldiv\")\n \n (define_insn_reservation \"r4100_imul_di\" 4\n   (and (eq_attr \"cpu\" \"r4100,r4120\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"DI\")))\n   \"imuldiv*4\")\n "}, {"sha": "6feeab38bbfe75eb71c698f76bed07b9a164ce71", "filename": "gcc/config/mips/4130.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4130.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4130.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4130.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -55,7 +55,7 @@\n   (cond [(eq_attr \"type\" \"load,store\")\n \t (const_string \"mem\")\n \n-\t (eq_attr \"type\" \"mfhilo,mthilo,imul,imadd,idiv\")\n+\t (eq_attr \"type\" \"mfhilo,mthilo,imul,imul3,imadd,idiv\")\n \t (const_string \"mul\")]\n \t(const_string \"alu\")))\n \n@@ -95,15 +95,15 @@\n ;; use \"mtlo; macc\" instead of \"mult; mflo\".\n (define_insn_reservation \"vr4130_mulsi\" 4\n   (and (eq_attr \"cpu\" \"r4130\")\n-       (and (eq_attr \"type\" \"imul\")\n+       (and (eq_attr \"type\" \"imul,imul3\")\n \t    (eq_attr \"mode\" \"SI\")))\n   \"vr4130_muldiv + (vr4130_mulpre * 2)\")\n \n ;; As for vr4130_mulsi, but the product is available in LO and HI\n ;; after 3 cycles.\n (define_insn_reservation \"vr4130_muldi\" 6\n   (and (eq_attr \"cpu\" \"r4130\")\n-       (and (eq_attr \"type\" \"imul\")\n+       (and (eq_attr \"type\" \"imul,imul3\")\n \t    (eq_attr \"mode\" \"DI\")))\n   \"(vr4130_muldiv * 3) + (vr4130_mulpre * 4)\")\n "}, {"sha": "0b319eaaac8e203e96a6dd7c7dfd5c4029d896a8", "filename": "gcc/config/mips/4300.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4300.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -29,13 +29,13 @@\n \n (define_insn_reservation \"r4300_imul_si\" 5\n   (and (eq_attr \"cpu\" \"r4300\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"SI\")))\n   \"imuldiv*5\")\n \n (define_insn_reservation \"r4300_imul_di\" 8\n   (and (eq_attr \"cpu\" \"r4300\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"DI\")))\n   \"imuldiv*8\")\n "}, {"sha": "7892200f20ab1a879ba7dc4ae4269d23a50bd8d5", "filename": "gcc/config/mips/4600.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4600.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F4600.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F4600.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -27,7 +27,7 @@\n \n (define_insn_reservation \"r4600_imul\" 10\n   (and (eq_attr \"cpu\" \"r4600\")\n-       (eq_attr \"type\" \"imul,imadd\"))\n+       (eq_attr \"type\" \"imul,imul3,imadd\"))\n   \"imuldiv*10\")\n \n (define_insn_reservation \"r4600_idiv\" 42\n@@ -38,7 +38,7 @@\n \n (define_insn_reservation \"r4650_imul\" 4\n   (and (eq_attr \"cpu\" \"r4650\")\n-       (eq_attr \"type\" \"imul,imadd\"))\n+       (eq_attr \"type\" \"imul,imul3,imadd\"))\n   \"imuldiv*4\")\n \n (define_insn_reservation \"r4650_idiv\" 36"}, {"sha": "b00e707f1bd582977f008aeba528642e33a3c64a", "filename": "gcc/config/mips/5000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F5000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F5000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5000.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -29,13 +29,13 @@\n \n (define_insn_reservation \"r5k_imul_si\" 5\n   (and (eq_attr \"cpu\" \"r5000\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"SI\")))\n   \"imuldiv*5\")\n \n (define_insn_reservation \"r5k_imul_di\" 9\n   (and (eq_attr \"cpu\" \"r5000\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"DI\")))\n   \"imuldiv*9\")\n "}, {"sha": "8571308c96ea26b8eccb2fa20a3b8037aec94d59", "filename": "gcc/config/mips/5400.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F5400.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F5400.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5400.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -65,19 +65,19 @@\n \n (define_insn_reservation \"ir_vr54_imul_si\" 3\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (and (eq_attr \"type\" \"imul\")\n+       (and (eq_attr \"type\" \"imul,imul3\")\n             (eq_attr \"mode\" \"SI\")))\n   \"vr54_dp0|vr54_dp1\")\n \n (define_insn_reservation \"ir_vr54_imul_di\" 4\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (and (eq_attr \"type\" \"imul\")\n+       (and (eq_attr \"type\" \"imul,imul3\")\n             (eq_attr \"mode\" \"DI\")))\n   \"vr54_dp0|vr54_dp1\")\n \n (define_insn_reservation \"ir_vr54_imadd_si\" 3\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (eq_attr \"type\" \"imul\"))\n+       (eq_attr \"type\" \"imul,imul3\"))\n   \"vr54_mac\")\n \n (define_insn_reservation \"ir_vr54_idiv_si\" 42"}, {"sha": "881cbcb4cff8c7b77667e6b2dd9464f9b0013254", "filename": "gcc/config/mips/5500.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5500.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -78,7 +78,7 @@\n ;; latency of {mul,mult}->{mfhi,mflo}.\n (define_insn_reservation \"ir_vr55_imul_si\" 5\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (and (eq_attr \"type\" \"imul\")\n+       (and (eq_attr \"type\" \"imul,imul3\")\n             (eq_attr \"mode\" \"SI\")))\n   \"vr55_mac\")\n \n@@ -91,7 +91,7 @@\n ;; between it and the dmult.\n (define_insn_reservation \"ir_vr55_imul_di\" 9\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (and (eq_attr \"type\" \"imul\")\n+       (and (eq_attr \"type\" \"imul,imul3\")\n             (eq_attr \"mode\" \"DI\")))\n   \"vr55_mac*4\")\n "}, {"sha": "0323472aedee8c74e1058c261a6cee91aed94301", "filename": "gcc/config/mips/7000.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F7000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F7000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F7000.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -111,21 +111,21 @@\n \n (define_insn_reservation \"rm7_impy_si_mult\" 5\n \t\t (and (eq_attr \"cpu\" \"r7000\")\n-\t\t      (and (eq_attr \"type\" \"imul,imadd\")\n+\t\t      (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t\t\t   (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t(match_operand 0 \"hilo_operand\"))))\n \t\t\t \"rm7_impydiv+(rm7_impydiv_iter*3)\")\n \n ;; There are an additional 2 stall cycles.\n (define_insn_reservation \"rm7_impy_si_mul\" 2\n \t\t (and (eq_attr \"cpu\" \"r7000\")\n-\t\t      (and (eq_attr \"type\" \"imul,imadd\")\n+\t\t      (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t\t\t   (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t(not (match_operand 0 \"hilo_operand\")))))\n \t\t\t \"rm7_impydiv\")\n \n (define_insn_reservation \"rm7_impy_di\" 9 (and (eq_attr \"cpu\" \"r7000\")\n-\t\t\t\t\t  (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t\t  (and (eq_attr \"type\" \"imul,imul3\")\n \t\t\t\t\t       (eq_attr \"mode\" \"DI\")))\n \t\t\t \"rm7_impydiv+(rm7_impydiv_iter*8)\")\n "}, {"sha": "4aa3ff6b2aa96f06f0cfab2e5818cd436a57fe9c", "filename": "gcc/config/mips/9000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F9000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2F9000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F9000.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -64,13 +64,13 @@\n ;; This applies to both 'mul' and 'mult'.\n (define_insn_reservation \"rm9k_mulsi\" 3\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"!DI\")))\n   \"rm9k_f_int\")\n \n (define_insn_reservation \"rm9k_muldi\" 7\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"DI\")))\n   \"rm9k_f_int + rm9k_imul * 7\")\n "}, {"sha": "7ddb0bd5163c267b3bea75d89ede2156157c6302", "filename": "gcc/config/mips/generic.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2Fgeneric.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2Fgeneric.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgeneric.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -48,7 +48,7 @@\n   \"imuldiv*3\")\n \n (define_insn_reservation \"generic_imul\" 17\n-  (eq_attr \"type\" \"imul,imadd\")\n+  (eq_attr \"type\" \"imul,imul3,imadd\")\n   \"imuldiv*17\")\n \n (define_insn_reservation \"generic_idiv\" 38"}, {"sha": "1473f55a9274a98da259a33a23a5c142f4df05fb", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -126,7 +126,8 @@\n ;; slt\t\tset less than instructions\n ;; clz\t\tthe clz and clo instructions\n ;; trap\t\ttrap if instructions\n-;; imul\t\tinteger multiply\n+;; imul\t\tinteger multiply 2 operands\n+;; imul3\tinteger multiply 3 operands\n ;; imadd\tinteger multiply-add\n ;; idiv\t\tinteger divide\n ;; fmove\tfloating point register move\n@@ -148,7 +149,7 @@\n ;; multi\tmultiword sequence (or user asm statements)\n ;; nop\t\tno operation\n (define_attr \"type\"\n-  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,condmove,xfer,mthilo,mfhilo,const,arith,shift,slt,clz,trap,imul,imadd,idiv,fmove,fadd,fmul,fmadd,fdiv,frdiv,frdiv1,frdiv2,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,frsqrt1,frsqrt2,multi,nop\"\n+  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,condmove,xfer,mthilo,mfhilo,const,arith,shift,slt,clz,trap,imul,imul3,imadd,idiv,fmove,fadd,fmul,fmadd,fdiv,frdiv,frdiv1,frdiv2,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,frsqrt1,frsqrt2,multi,nop\"\n   (cond [(eq_attr \"jal\" \"!unset\") (const_string \"call\")\n \t (eq_attr \"got\" \"load\") (const_string \"load\")]\n \t(const_string \"unknown\")))\n@@ -253,7 +254,7 @@\n \t  ;; VR4120 errata MD(4): if there are consecutive dmult instructions,\n \t  ;; the result of the second one is missed.  The assembler should work\n \t  ;; around this by inserting a nop after the first dmult.\n-\t  (and (eq_attr \"type\" \"imul\")\n+\t  (and (eq_attr \"type\" \"imul,imul3\")\n \t       (and (eq_attr \"mode\" \"DI\")\n \t\t    (ne (symbol_ref \"TARGET_FIX_VR4120\") (const_int 0))))\n \t  (const_int 8)\n@@ -317,7 +318,7 @@\n ;; True if an instruction might assign to hi or lo when reloaded.\n ;; This is used by the TUNE_MACC_CHAINS code.\n (define_attr \"may_clobber_hilo\" \"no,yes\"\n-  (if_then_else (eq_attr \"type\" \"imul,imadd,idiv,mthilo\")\n+  (if_then_else (eq_attr \"type\" \"imul,imul3,imadd,idiv,mthilo\")\n \t\t(const_string \"yes\")\n \t\t(const_string \"no\")))\n \n@@ -967,7 +968,7 @@\n     return \"mul\\t%0,%1,%2\";\n   return \"mult\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\" \"imul\")\n+  [(set_attr \"type\" \"imul3,imul\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"muldi3_mult3\"\n@@ -978,7 +979,7 @@\n    (clobber (match_scratch:DI 4 \"=l\"))]\n   \"TARGET_64BIT && GENERATE_MULT3_DI\"\n   \"dmult\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"imul\")\n+  [(set_attr \"type\" \"imul3\")\n    (set_attr \"mode\" \"DI\")])\n \n ;; If a register gets allocated to LO, and we spill to memory, the reload\n@@ -1400,7 +1401,7 @@\n   \"@\n    muls\\t$0,%1,%2\n    muls\\t%0,%1,%2\"\n-  [(set_attr \"type\"     \"imul\")\n+  [(set_attr \"type\"     \"imul,imul3\")\n    (set_attr \"mode\"     \"SI\")])\n \n ;; ??? We could define a mulditi3 pattern when TARGET_64BIT.\n@@ -1586,7 +1587,7 @@\n   \"@\n    mult<u>\\t%1,%2\n    mulhi<u>\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"imul\")\n+  [(set_attr \"type\" \"imul,imul3\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*<su>mulsi3_highpart_neg_mulhi_internal\"\n@@ -1604,7 +1605,7 @@\n   \"@\n    mulshi<u>\\t%.,%1,%2\n    mulshi<u>\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"imul\")\n+  [(set_attr \"type\" \"imul,imul3\")\n    (set_attr \"mode\" \"SI\")])\n \n ;; Disable unsigned multiplication for -mfix-vr4120.  This is for VR4120"}, {"sha": "b1b085f45ed121e8858bd63914bdd6c0e0ff8294", "filename": "gcc/config/mips/sb1.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2Fsb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2Fsb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsb1.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -296,7 +296,7 @@\n \n (define_insn_reservation \"ir_sb1_mulsi\" 3\n   (and (eq_attr \"cpu\" \"sb1\")\n-       (and (eq_attr \"type\" \"imul,imadd\")\n+       (and (eq_attr \"type\" \"imul,imul3,imadd\")\n \t    (eq_attr \"mode\" \"SI\")))\n   \"sb1_ex1+sb1_mul\")\n \n@@ -305,7 +305,7 @@\n \n (define_insn_reservation \"ir_sb1_muldi\" 4\n   (and (eq_attr \"cpu\" \"sb1\")\n-       (and (eq_attr \"type\" \"imul\")\n+       (and (eq_attr \"type\" \"imul,imul3\")\n \t    (eq_attr \"mode\" \"DI\")))\n   \"sb1_ex1+sb1_mul, sb1_mul\")\n "}, {"sha": "9ccfc5942d95d802e72559d0573c784ad61e4eb9", "filename": "gcc/config/mips/sr71k.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2Fsr71k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95177e176017ee6996f7915dbd005569e3da2090/gcc%2Fconfig%2Fmips%2Fsr71k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsr71k.md?ref=95177e176017ee6996f7915dbd005569e3da2090", "patch": "@@ -209,14 +209,14 @@\n (define_insn_reservation \"ir_sr70_imul_si\"\n                                  4\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (and (eq_attr \"type\" \"imul,imadd\")\n+                               (and (eq_attr \"type\" \"imul,imul3,imadd\")\n                                     (eq_attr \"mode\" \"SI\")))\n                          \"ri_alux,ipu_alux,ipu_macc_iter\")\n \n (define_insn_reservation \"ir_sr70_imul_di\"\n                                  6\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (and (eq_attr \"type\" \"imul,imadd\")\n+                               (and (eq_attr \"type\" \"imul,imul3,imadd\")\n                                     (eq_attr \"mode\" \"DI\")))\n                          \"ri_alux,ipu_alux,(ipu_macc_iter*3)\")\n "}]}