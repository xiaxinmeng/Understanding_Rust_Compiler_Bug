{"sha": "1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZjZmFjODhkZWMyNGE1YWUwMDVhODJiMWFhODVlMGU0MjkxYTgxZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-07-04T20:46:38Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-07-04T20:46:38Z"}, "message": "re PR target/81294 (_subborrow_u64 argument order inconsistent with intrinsic reference, icc)\n\n\tPR target/81294\n\t* config/i386/adxintrin.h (_subborrow_u32): Swap _X and _Y\n\targuments in the call to __builtin_ia32_sbb_u32.\n\t(_subborrow_u64): Swap _X and _Y arguments in the call to\n\t__builtin_ia32_sbb_u64.\n\ntestsuite/ChangeLog:\n\n\tPR target/81294\n\t* gcc.target/i386/adx-addcarryx32-2.c (adx_test): Swap\n\tx and y arguments in the call to _subborrow_u32.\n\t* gcc.target/i386/adx-addcarryx64-2.c (adx_test): Swap\n\tx and y arguments in the call to _subborrow_u64.\n\t* gcc.target/i386/pr81294-1.c: New test.\n\t* gcc.target/i386/pr81294-2.c: Ditto.\n\nFrom-SVN: r249976", "tree": {"sha": "991f689dd7afb95aab39937ce680608b512b9c06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/991f689dd7afb95aab39937ce680608b512b9c06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06a1b2334039de170886563546096fffa79c804d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a1b2334039de170886563546096fffa79c804d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a1b2334039de170886563546096fffa79c804d"}], "stats": {"total": 87, "additions": 81, "deletions": 6}, "files": [{"sha": "e09edc970f192b67acc3ae641d7292d38a0e3e71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "patch": "@@ -1,3 +1,11 @@\n+2017-07-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/81294\n+\t* config/i386/adxintrin.h (_subborrow_u32): Swap _X and _Y\n+\targuments in the call to __builtin_ia32_sbb_u32.\n+\t(_subborrow_u64): Swap _X and _Y arguments in the call to\n+\t__builtin_ia32_sbb_u64.\n+\n 2017-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/81278"}, {"sha": "7acdaf4ab6f7675401eab1c512175e6493620c6d", "filename": "gcc/config/i386/adxintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Fconfig%2Fi386%2Fadxintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Fconfig%2Fi386%2Fadxintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fadxintrin.h?ref=1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "patch": "@@ -33,7 +33,7 @@ __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _subborrow_u32 (unsigned char __CF, unsigned int __X,\n \t\tunsigned int __Y, unsigned int *__P)\n {\n-  return __builtin_ia32_sbb_u32 (__CF, __Y, __X, __P);\n+  return __builtin_ia32_sbb_u32 (__CF, __X, __Y, __P);\n }\n \n extern __inline unsigned char\n@@ -58,7 +58,7 @@ __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _subborrow_u64 (unsigned char __CF, unsigned long long __X,\n \t\tunsigned long long __Y, unsigned long long *__P)\n {\n-  return __builtin_ia32_sbb_u64 (__CF, __Y, __X, __P);\n+  return __builtin_ia32_sbb_u64 (__CF, __X, __Y, __P);\n }\n \n extern __inline unsigned char"}, {"sha": "18ec2147b16f71d0c3ec00122295c84bc87c2465", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "patch": "@@ -1,3 +1,13 @@\n+2017-07-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/81294\n+\t* gcc.target/i386/adx-addcarryx32-2.c (adx_test): Swap\n+\tx and y arguments in the call to _subborrow_u32.\n+\t* gcc.target/i386/adx-addcarryx64-2.c (adx_test): Swap\n+\tx and y arguments in the call to _subborrow_u64.\n+\t* gcc.target/i386/pr81294-1.c: New test.\n+\t* gcc.target/i386/pr81294-2.c: Ditto.\n+\n 2017-07-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/simd/vminmaxnm_1.c: Fix strict aliasing issues."}, {"sha": "ddee754c9621573ed067ea68d62795e057483787", "filename": "gcc/testsuite/gcc.target/i386/adx-addcarryx32-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx32-2.c?ref=1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "patch": "@@ -44,9 +44,9 @@ adx_test (void)\n   sum_ref = 0x0;\n \n   /* X = 0x00000001, Y = 0x00000000, C = 0.  */\n-  c = _subborrow_u32 (c, x, y, &x);\n+  c = _subborrow_u32 (c, y, x, &x);\n   /* X = 0xFFFFFFFF, Y = 0x00000000, C = 1.  */\n-  c = _subborrow_u32 (c, x, y, &x);\n+  c = _subborrow_u32 (c, y, x, &x);\n   /* X = 0xFFFFFFFF, Y = 0xFFFFFFFF, C = 1.  */\n \n   if (x != sum_ref)"}, {"sha": "287e263a9dd7a369babbff33c86510e248dac080", "filename": "gcc/testsuite/gcc.target/i386/adx-addcarryx64-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-addcarryx64-2.c?ref=1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "patch": "@@ -44,9 +44,9 @@ adx_test (void)\n   sum_ref = 0x0LL;\n \n   /* X = 0x0000000000000001, Y = 0x0000000000000000, C = 0.  */\n-  c = _subborrow_u64 (c, x, y, &x);\n+  c = _subborrow_u64 (c, y, x, &x);\n   /* X = 0xFFFFFFFFFFFFFFFF, Y = 0x0000000000000000, C = 1.  */\n-  c = _subborrow_u64 (c, x, y, &x);\n+  c = _subborrow_u64 (c, y, x, &x);\n   /* X = 0x0000000000000000, Y = 0x0000000000000000, C = 1.  */\n \n   if (x != sum_ref)"}, {"sha": "6a15ed0a410ef1b26789ce5d59eaa6db0b39770c", "filename": "gcc/testsuite/gcc.target/i386/pr81294-1.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81294-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81294-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81294-1.c?ref=1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "patch": "@@ -0,0 +1,29 @@\n+/* PR target/81294 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <x86intrin.h>\n+\n+int\n+main ()\n+{\n+  volatile unsigned char c;\n+  unsigned int x;\n+  volatile unsigned int y, sum_ref;\n+\n+  c = 0;\n+  x = 1;\n+  y = 0;\n+  sum_ref = 0x0;\n+\n+  /* X = 0x00000001, Y = 0x00000000, C = 0.  */\n+  c = _subborrow_u32 (c, y, x, &x);\n+  /* X = 0xFFFFFFFF, Y = 0x00000000, C = 1.  */\n+  c = _subborrow_u32 (c, y, x, &x);\n+  /* X = 0xFFFFFFFF, Y = 0xFFFFFFFF, C = 1.  */\n+\n+  if (x != sum_ref)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "3e3bdb44139e552962e1dd7ebeefcfd0b626ba86", "filename": "gcc/testsuite/gcc.target/i386/pr81294-2.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81294-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81294-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81294-2.c?ref=1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "patch": "@@ -0,0 +1,28 @@\n+/* PR target/81294 */\n+/* { dg-do run { target { ! ia32 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <x86intrin.h>\n+\n+int main ()\n+{\n+  volatile unsigned char c;\n+  unsigned long long x;\n+  volatile unsigned long long y, sum_ref;\n+\n+  c = 0;\n+  x = 1LL;\n+  y = 0LL;\n+  sum_ref = 0x0LL;\n+\n+  /* X = 0x0000000000000001, Y = 0x0000000000000000, C = 0.  */\n+  c = _subborrow_u64 (c, y, x, &x);\n+  /* X = 0xFFFFFFFFFFFFFFFF, Y = 0x0000000000000000, C = 1.  */\n+  c = _subborrow_u64 (c, y, x, &x);\n+  /* X = 0x0000000000000000, Y = 0x0000000000000000, C = 1.  */\n+\n+  if (x != sum_ref)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}