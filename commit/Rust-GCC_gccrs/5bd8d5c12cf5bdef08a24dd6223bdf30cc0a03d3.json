{"sha": "5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJkOGQ1YzEyY2Y1YmRlZjA4YTI0ZGQ2MjIzYmRmMzBjYzBhMDNkMw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2015-01-20T09:26:50Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2015-01-20T09:26:50Z"}, "message": "Link with -lrt on Solaris 10\n\n\t* configure.ac: Check if sched_yield and/or nanosleep need -lrt.\n\t* configure: Regenerate.\n\t* Makefile.am (go$(EXEEXT), gofmt$(EXEEXT), cgo$(EXEEXT)): Link\n\twith $(LIBS).\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r219882", "tree": {"sha": "7cb07f2082bc60ac9f1a160134c2c066b0fc993e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cb07f2082bc60ac9f1a160134c2c066b0fc993e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42df23a65ee2b93425c2627f3d312dcfe7fcf122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42df23a65ee2b93425c2627f3d312dcfe7fcf122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42df23a65ee2b93425c2627f3d312dcfe7fcf122"}], "stats": {"total": 137, "additions": 131, "deletions": 6}, "files": [{"sha": "11cb109f5e3d75f49d55ff1f78952642e0cd03f3", "filename": "gotools/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FChangeLog?ref=5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "patch": "@@ -1,3 +1,11 @@\n+2015-01-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac: Check if sched_yield and/or nanosleep need -lrt.\n+\t* configure: Regenerate.\n+\t* Makefile.am (go$(EXEEXT), gofmt$(EXEEXT), cgo$(EXEEXT)): Link\n+\twith $(LIBS).\n+\t* Makefile.in: Regenerate.\n+\n 2015-01-15  Ian Lance Taylor  <iant@google.com>\n \n \t* configure.ac: Check for networking libraries; see NET_LIBS."}, {"sha": "5e044d29056e94be4725c8f3912dc74acafaf8f8", "filename": "gotools/Makefile.am", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.am?ref=5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "patch": "@@ -108,11 +108,11 @@ bin_PROGRAMS = go$(EXEEXT) gofmt$(EXEEXT)\n libexecsub_PROGRAMS = cgo$(EXEEXT)\n \n go$(EXEEXT): $(go_cmd_go_files) zdefaultcc.go $(LIBGODEP)\n-\t$(GOLINK) $(go_cmd_go_files) zdefaultcc.go $(NET_LIBS)\n+\t$(GOLINK) $(go_cmd_go_files) zdefaultcc.go $(LIBS) $(NET_LIBS)\n gofmt$(EXEEXT): $(go_cmd_gofmt_files) $(LIBGODEP)\n-\t$(GOLINK) $(go_cmd_gofmt_files) $(NET_LIBS)\n+\t$(GOLINK) $(go_cmd_gofmt_files) $(LIBS) $(NET_LIBS)\n cgo$(EXEEXT): $(go_cmd_cgo_files) zdefaultcc.go $(LIBGODEP)\n-\t$(GOLINK) $(go_cmd_cgo_files) zdefaultcc.go $(NET_LIBS)\n+\t$(GOLINK) $(go_cmd_cgo_files) zdefaultcc.go $(LIBS) $(NET_LIBS)\n \n else\n "}, {"sha": "8279d9a7dce4bca36cce5d89610ca9d30b09430e", "filename": "gotools/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2FMakefile.in?ref=5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "patch": "@@ -590,11 +590,11 @@ s-zdefaultcc: Makefile\n \t$(STAMP) $@ \n \n @NATIVE_TRUE@go$(EXEEXT): $(go_cmd_go_files) zdefaultcc.go $(LIBGODEP)\n-@NATIVE_TRUE@\t$(GOLINK) $(go_cmd_go_files) zdefaultcc.go $(NET_LIBS)\n+@NATIVE_TRUE@\t$(GOLINK) $(go_cmd_go_files) zdefaultcc.go $(LIBS) $(NET_LIBS)\n @NATIVE_TRUE@gofmt$(EXEEXT): $(go_cmd_gofmt_files) $(LIBGODEP)\n-@NATIVE_TRUE@\t$(GOLINK) $(go_cmd_gofmt_files) $(NET_LIBS)\n+@NATIVE_TRUE@\t$(GOLINK) $(go_cmd_gofmt_files) $(LIBS) $(NET_LIBS)\n @NATIVE_TRUE@cgo$(EXEEXT): $(go_cmd_cgo_files) zdefaultcc.go $(LIBGODEP)\n-@NATIVE_TRUE@\t$(GOLINK) $(go_cmd_cgo_files) zdefaultcc.go $(NET_LIBS)\n+@NATIVE_TRUE@\t$(GOLINK) $(go_cmd_cgo_files) zdefaultcc.go $(LIBS) $(NET_LIBS)\n \n # For a non-native build we have to build the programs using a\n # previously built host (or build -> host) Go compiler.  We should"}, {"sha": "21be4655a3f66a582a9f26feb04a80e73ad21fbc", "filename": "gotools/configure", "status": "modified", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2Fconfigure?ref=5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "patch": "@@ -3907,6 +3907,119 @@ $as_echo \"$gotools_cv_lib_sockets\" >&6; }\n NET_LIBS=\"$gotools_cv_lib_sockets\"\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing sched_yield\" >&5\n+$as_echo_n \"checking for library containing sched_yield... \" >&6; }\n+if test \"${ac_cv_search_sched_yield+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_func_search_save_LIBS=$LIBS\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char sched_yield ();\n+int\n+main ()\n+{\n+return sched_yield ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+for ac_lib in '' rt; do\n+  if test -z \"$ac_lib\"; then\n+    ac_res=\"none required\"\n+  else\n+    ac_res=-l$ac_lib\n+    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n+  fi\n+  if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_search_sched_yield=$ac_res\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext\n+  if test \"${ac_cv_search_sched_yield+set}\" = set; then :\n+  break\n+fi\n+done\n+if test \"${ac_cv_search_sched_yield+set}\" = set; then :\n+\n+else\n+  ac_cv_search_sched_yield=no\n+fi\n+rm conftest.$ac_ext\n+LIBS=$ac_func_search_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_sched_yield\" >&5\n+$as_echo \"$ac_cv_search_sched_yield\" >&6; }\n+ac_res=$ac_cv_search_sched_yield\n+if test \"$ac_res\" != no; then :\n+  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n+\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing nanosleep\" >&5\n+$as_echo_n \"checking for library containing nanosleep... \" >&6; }\n+if test \"${ac_cv_search_nanosleep+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_func_search_save_LIBS=$LIBS\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char nanosleep ();\n+int\n+main ()\n+{\n+return nanosleep ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+for ac_lib in '' rt; do\n+  if test -z \"$ac_lib\"; then\n+    ac_res=\"none required\"\n+  else\n+    ac_res=-l$ac_lib\n+    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n+  fi\n+  if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_search_nanosleep=$ac_res\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext\n+  if test \"${ac_cv_search_nanosleep+set}\" = set; then :\n+  break\n+fi\n+done\n+if test \"${ac_cv_search_nanosleep+set}\" = set; then :\n+\n+else\n+  ac_cv_search_nanosleep=no\n+fi\n+rm conftest.$ac_ext\n+LIBS=$ac_func_search_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_nanosleep\" >&5\n+$as_echo \"$ac_cv_search_nanosleep\" >&6; }\n+ac_res=$ac_cv_search_nanosleep\n+if test \"$ac_res\" != no; then :\n+  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n+\n+fi\n+\n+\n ac_config_files=\"$ac_config_files Makefile\"\n \n "}, {"sha": "e4528a4f31ee891c00317c90b022b1ccf3dcbf28", "filename": "gotools/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3/gotools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gotools%2Fconfigure.ac?ref=5bd8d5c12cf5bdef08a24dd6223bdf30cc0a03d3", "patch": "@@ -79,6 +79,10 @@ AC_CACHE_CHECK([for socket libraries], gotools_cv_lib_sockets,\n NET_LIBS=\"$gotools_cv_lib_sockets\"\n AC_SUBST(NET_LIBS)\n \n+dnl Test if -lrt is required for sched_yield and/or nanosleep.\n+AC_SEARCH_LIBS([sched_yield], [rt])\n+AC_SEARCH_LIBS([nanosleep], [rt])\n+\n AC_CONFIG_FILES(Makefile)\n \n AC_OUTPUT"}]}