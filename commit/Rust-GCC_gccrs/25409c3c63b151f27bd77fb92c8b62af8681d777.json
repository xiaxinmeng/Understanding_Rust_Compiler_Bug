{"sha": "25409c3c63b151f27bd77fb92c8b62af8681d777", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0MDljM2M2M2IxNTFmMjdiZDc3ZmI5MmM4YjYyYWY4NjgxZDc3Nw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2018-05-25T09:05:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:05:04Z"}, "message": "[Ada] Membership test of class-wide interface\n\nThe compiler rejects the use of a membership test when the left operand\nis a class-wide interface type object and the right operand is not a\nclass-wide type.\n\n2018-05-25  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Membership_Op): Allow the use of the membership\n\ttest when the left operand is a class-wide interface and the right\n\toperand is not a class-wide type.\n\t* exp_ch4.adb (Tagged_Membership): Adding support for interface as the\n\tleft operand.\n\ngcc/testsuite/\n\n\t* gnat.dg/interface7.adb: New testcase.\n\nFrom-SVN: r260738", "tree": {"sha": "d26a019e5cfaf745e6caebd74e8f607218e03454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d26a019e5cfaf745e6caebd74e8f607218e03454"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25409c3c63b151f27bd77fb92c8b62af8681d777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25409c3c63b151f27bd77fb92c8b62af8681d777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25409c3c63b151f27bd77fb92c8b62af8681d777", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25409c3c63b151f27bd77fb92c8b62af8681d777/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f6237e3ddfba881d87d9c62d0b806717a71fbe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f6237e3ddfba881d87d9c62d0b806717a71fbe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f6237e3ddfba881d87d9c62d0b806717a71fbe5"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "d20be7e484cf37165e82e921080eae4216370cca", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=25409c3c63b151f27bd77fb92c8b62af8681d777", "patch": "@@ -1,3 +1,11 @@\n+2018-05-25  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Membership_Op): Allow the use of the membership\n+\ttest when the left operand is a class-wide interface and the right\n+\toperand is not a class-wide type.\n+\t* exp_ch4.adb (Tagged_Membership): Adding support for interface as the\n+\tleft operand.\n+\n 2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_aggr.adb (Flatten): A quantified expression cannot be duplicated"}, {"sha": "65de38e9e8332948e351a71accfb378e29d7c680", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=25409c3c63b151f27bd77fb92c8b62af8681d777", "patch": "@@ -13891,7 +13891,7 @@ package body Exp_Ch4 is\n           Selector_Name =>\n             New_Occurrence_Of (First_Tag_Component (Left_Type), Loc));\n \n-      if Is_Class_Wide_Type (Right_Type) then\n+      if Is_Class_Wide_Type (Right_Type) or else Is_Interface (Left_Type) then\n \n          --  No need to issue a run-time check if we statically know that the\n          --  result of this membership test is always true. For example,"}, {"sha": "a71e5830ef5f8dfabd19a21c79338884574376bb", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=25409c3c63b151f27bd77fb92c8b62af8681d777", "patch": "@@ -9032,7 +9032,6 @@ package body Sem_Res is\n       elsif Ada_Version >= Ada_2005\n         and then Is_Class_Wide_Type (Etype (L))\n         and then Is_Interface (Etype (L))\n-        and then Is_Class_Wide_Type (Etype (R))\n         and then not Is_Interface (Etype (R))\n       then\n          return;"}, {"sha": "821a12dc6ce6fbfcd1c1fde9692c33bd2a28297e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=25409c3c63b151f27bd77fb92c8b62af8681d777", "patch": "@@ -1,3 +1,7 @@\n+2018-05-25  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat.dg/interface7.adb: New testcase.\n+\n 2018-05-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/sec_stack2.adb: New testcase."}, {"sha": "90417fed05f1a55264a7602f0d47282d8d02f84b", "filename": "gcc/testsuite/gnat.dg/interface7.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Ftestsuite%2Fgnat.dg%2Finterface7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25409c3c63b151f27bd77fb92c8b62af8681d777/gcc%2Ftestsuite%2Fgnat.dg%2Finterface7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finterface7.adb?ref=25409c3c63b151f27bd77fb92c8b62af8681d777", "patch": "@@ -0,0 +1,16 @@\n+--  { dg-do compile }\n+\n+procedure Interface7 is\n+   type I_Type is interface;\n+\n+   type A1_Type is tagged null record;\n+   type A2_Type is new A1_Type and I_Type with null record;\n+\n+   procedure Test (X : I_Type'Class) is\n+   begin\n+      if X in A2_Type then   --  Test\n+         null;\n+      end if;\n+   end Test;\n+\n+begin null; end;"}]}