{"sha": "194c91ec5337a1a231a1c5fd29d5ecc48504d4b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk0YzkxZWM1MzM3YTFhMjMxYTFjNWZkMjlkNWVjYzQ4NTA0ZDRiMg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-09-25T08:22:56Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-25T08:22:56Z"}, "message": "InetAddress.java: Reorder imports, remove implementation comment.\n\n2003-09-25  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/InetAddress.java:\n\tReorder imports, remove implementation comment.\n\t(isMulticastAddress): Merged documentation from classpath.\n\t* java/net/URLConnection.java\n\t(setRequestProperty): Check key for null, fix documentation.\n\t(adREquestProperty): Check key for null, remove wrong implementation\n\tand replace it with comment to overwrite this method in subclasses,\n\tfix documentation.\n\nFrom-SVN: r71767", "tree": {"sha": "a76a1c6adac953df1d6d51da71baa722a834173a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a76a1c6adac953df1d6d51da71baa722a834173a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2/comments", "author": null, "committer": null, "parents": [{"sha": "26d8a39350affc665e2bc0b273873a6fca4b5564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d8a39350affc665e2bc0b273873a6fca4b5564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d8a39350affc665e2bc0b273873a6fca4b5564"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "b8769cb747df0ad1ddd720736f434709c81ee252", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=194c91ec5337a1a231a1c5fd29d5ecc48504d4b2", "patch": "@@ -1,3 +1,14 @@\n+2003-09-25  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/InetAddress.java:\n+\tReorder imports, remove implementation comment.\n+\t(isMulticastAddress): Merged documentation from classpath.\n+\t* java/net/URLConnection.java\n+\t(setRequestProperty): Check key for null, fix documentation.\n+\t(adREquestProperty): Check key for null, remove wrong implementation\n+\tand replace it with comment to overwrite this method in subclasses,\n+\tfix documentation.\n+\n 2003-09-25  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/reflect/Proxy.java (generate): Uncomment protection"}, {"sha": "65c84d86b0b5683bdbe88bbf3d412ecac9405252", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=194c91ec5337a1a231a1c5fd29d5ecc48504d4b2", "patch": "@@ -38,18 +38,11 @@\n \n package java.net;\n \n+import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.IOException;\n-import java.io.Serializable;\n import java.io.ObjectStreamException;\n-\n-/*\n- * Written using on-line Java Platform 1.2 API Specification, as well\n- * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n- * (The latter turns out to have some errors ...)\n- * Status:  Believed complete and correct.\n- */\n+import java.io.Serializable;\n \n /**\n  * This class models an Internet address.  It does not have a public\n@@ -137,7 +130,11 @@ public class InetAddress implements Serializable\n   }\n \n   /**\n-   * Utility routine to check if the InetAddress is an IP multicast address\n+   * Returns true if this address is a multicast address, false otherwise.\n+   * An address is multicast if the high four bits are \"1110\".  These are\n+   * also known as \"Class D\" addresses.\n+   *\n+   * @return true if mulitcast, false if not\n    *\n    * @since 1.1\n    */"}, {"sha": "5c43a7cac24717d707d5b8968a2b07fc6a24d185", "filename": "libjava/java/net/URLConnection.java", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2/libjava%2Fjava%2Fnet%2FURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194c91ec5337a1a231a1c5fd29d5ecc48504d4b2/libjava%2Fjava%2Fnet%2FURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLConnection.java?ref=194c91ec5337a1a231a1c5fd29d5ecc48504d4b2", "patch": "@@ -698,12 +698,11 @@ public void setDefaultUseCaches(boolean defaultusecaches)\n   }\n \n   /**\n-   * Returns the default value used to determine whether or not caching\n-   * of documents will be done when possible.\n-   *\n-   * @param key Key of the property to set\n-   * @param value Value of the Property to set\n+   * Sets the value of the named request property\n    *\n+   * @param key The name of the property\n+   * @param value The value of the property\n+   * \n    * @exception IllegalStateException If already connected\n    * @exception NullPointerException If key is null\n    *\n@@ -717,12 +716,16 @@ public void setRequestProperty(String key, String value)\n     if (connected)\n       throw new IllegalStateException (\"Already connected\");\n \n+    if (key == null)\n+      throw new NullPointerException (\"key is null\");\n+    \n     // Do nothing unless overridden by subclasses that support setting\n     // header fields in the request.\n   }\n \n   /**\n-   * Sets the value of the named request property\n+   * Adds a new request property by a key/value pair.\n+   * This method does not overwrite* existing properties with the same key.\n    *\n    * @param key Key of the property to add\n    * @param value Value of the Property to add\n@@ -740,10 +743,11 @@ public void addRequestProperty(String key, String value)\n     if (connected)\n       throw new IllegalStateException (\"Already connected\");\n \n-    if (getRequestProperty (key) == null)\n-      {\n-        setRequestProperty (key, value);\n-      }\n+    if (key == null)\n+      throw new NullPointerException (\"key is null\");\n+    \n+    // Do nothing unless overridden by subclasses that support adding\n+    // header fields in the request.\n   }\n \n   /**"}]}