{"sha": "9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFiNWQ4NmI0YTgwMGE5OGFiNzA2NWU4N2I1MDk2ZGFhYmRiNGMyZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-16T14:03:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T14:03:00Z"}, "message": "exp_util.adb, [...]: Minor reformatting.\n\n2014-07-16  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb, sem_attr.adb, exp_ch4.adb, a-cohase.ads,\n\ta-coinho-shared.adb, a-coinho-shared.ads: Minor reformatting.\n\n2014-07-16  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Add note that integrated\n\tpreprocessing cannot be applied to configuration pragma files.\n\nFrom-SVN: r212648", "tree": {"sha": "fcd24794771ee85269b3df27270adacde1114f64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcd24794771ee85269b3df27270adacde1114f64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/comments", "author": null, "committer": null, "parents": [{"sha": "6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cade1b0a0c3b50e1c1d60357a948f29de016ed5"}], "stats": {"total": 131, "additions": 65, "deletions": 66}, "files": [{"sha": "898468ce82823b838eed946ae80f9a73d2a0565d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "patch": "@@ -1,3 +1,13 @@\n+2014-07-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb, sem_attr.adb, exp_ch4.adb, a-cohase.ads,\n+\ta-coinho-shared.adb, a-coinho-shared.ads: Minor reformatting.\n+\n+2014-07-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Add note that integrated\n+\tpreprocessing cannot be applied to configuration pragma files.\n+\n 2014-07-16  Yannick Moy  <moy@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute/cases Pred"}, {"sha": "9c112fa3ee20d8b53601b836398f757585dda8b5", "filename": "gcc/ada/a-cohase.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.ads?ref=9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "patch": "@@ -544,9 +544,10 @@ private\n    No_Element : constant Cursor := (Container => null, Node => null);\n \n    type Iterator is new Limited_Controlled\n-     and Set_Iterator_Interfaces.Forward_Iterator with record\n-        Container : Set_Access;\n-     end record;\n+     and Set_Iterator_Interfaces.Forward_Iterator with\n+   record\n+      Container : Set_Access;\n+   end record;\n \n    overriding function First (Object : Iterator) return Cursor;\n "}, {"sha": "1f3d8bc5f91b05fdc0092d4f30e3ec87e4a92c1b", "filename": "gcc/ada/a-coinho-shared.adb", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fa-coinho-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fa-coinho-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.adb?ref=9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "patch": "@@ -39,12 +39,14 @@ package body Ada.Containers.Indefinite_Holders is\n    function \"=\" (Left, Right : Holder) return Boolean is\n    begin\n       if Left.Reference = Right.Reference then\n-         --  Covers both null and not null but the same shared object cases.\n+\n+         --  Covers both null and not null but the same shared object cases\n \n          return True;\n \n       elsif Left.Reference /= null and Right.Reference /= null then\n          return Left.Reference.Element.all = Right.Reference.Element.all;\n+\n       else\n          return False;\n       end if;\n@@ -58,7 +60,8 @@ package body Ada.Containers.Indefinite_Holders is\n    begin\n       if Container.Reference /= null then\n          if Container.Busy = 0 then\n-            --  Container is not locked, reuse existing internal shared object.\n+\n+            --  Container is not locked, reuse existing internal shared object\n \n             Reference (Container.Reference);\n          else\n@@ -164,20 +167,23 @@ package body Ada.Containers.Indefinite_Holders is\n    begin\n       if Source.Reference = null then\n          return (Controlled with null, 0);\n+\n       elsif Source.Busy = 0 then\n-         --  Container is not locked, reuse internal shared object.\n+\n+         --  Container is not locked, reuse internal shared object\n \n          Reference (Source.Reference);\n \n          return (Controlled with Source.Reference, 0);\n+\n       else\n-         --  Otherwise, create copy of both internal shared object and elemet.\n+         --  Otherwise, create copy of both internal shared object and element\n \n          return\n            (Controlled with\n-               new Shared_Holder'\n-                 (Counter => <>,\n-                  Element => new Element_Type'(Source.Reference.Element.all)),\n+              new Shared_Holder'\n+                (Counter => <>,\n+                 Element => new Element_Type'(Source.Reference.Element.all)),\n                0);\n       end if;\n    end Copy;\n@@ -268,8 +274,8 @@ package body Ada.Containers.Indefinite_Holders is\n          raise Constraint_Error with \"container is empty\";\n \n       elsif Container.Busy = 0\n-        and then not System.Atomic_Counters.Is_One\n-                       (Container.Reference.Counter)\n+        and then\n+          not System.Atomic_Counters.Is_One (Container.Reference.Counter)\n       then\n          --  Container is not locked and internal shared object is used by\n          --  other container, create copy of both internal shared object and\n@@ -339,14 +345,15 @@ package body Ada.Containers.Indefinite_Holders is\n    end Reference;\n \n    function Reference\n-     (Container : aliased in out Holder) return Reference_Type is\n+     (Container : aliased in out Holder) return Reference_Type\n+   is\n    begin\n       if Container.Reference = null then\n          raise Constraint_Error with \"container is empty\";\n \n       elsif Container.Busy = 0\n-        and then not System.Atomic_Counters.Is_One\n-                       (Container.Reference.Counter)\n+        and then\n+          not System.Atomic_Counters.Is_One (Container.Reference.Counter)\n       then\n          --  Container is not locked and internal shared object is used by\n          --  other container, create copy of both internal shared object and\n@@ -463,8 +470,8 @@ package body Ada.Containers.Indefinite_Holders is\n          raise Constraint_Error with \"container is empty\";\n \n       elsif Container.Busy = 0\n-        and then not System.Atomic_Counters.Is_One\n-                       (Container.Reference.Counter)\n+        and then\n+          not System.Atomic_Counters.Is_One (Container.Reference.Counter)\n       then\n          --  Container is not locked and internal shared object is used by\n          --  other container, create copy of both internal shared object and"}, {"sha": "b040e666141e86a8d526ce9013b0c960b780f3d6", "filename": "gcc/ada/a-coinho-shared.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fa-coinho-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fa-coinho-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.ads?ref=9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "patch": "@@ -29,6 +29,10 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n+--  Missing documentation: what is this unit all about??? From its name it\n+--  is some variation of a-coinho.ads/adb, but documentation needs to be\n+--  HERE explaining that ???\n+\n private with Ada.Finalization;\n private with Ada.Streams;\n private with System.Atomic_Counters;"}, {"sha": "4f60b312c7c0b3c0c22fc9d406021ffcb0e0792a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "patch": "@@ -12558,16 +12558,16 @@ package body Exp_Ch4 is\n       Temp_Id   : Entity_Id;\n       Temp_Ins  : Node_Id;\n \n-      Hook_Context         : constant Node_Id := Find_Hook_Context (Rel_Node);\n+      Hook_Context : constant Node_Id := Find_Hook_Context (Rel_Node);\n       --  Node on which to insert the hook pointer (as an action): the\n       --  innermost enclosing non-transient scope.\n \n       Finalization_Context : Node_Id;\n       --  Node after which to insert finalization actions\n \n       Finalize_Always : Boolean;\n-      --  If False, call to finalizer includes a test of whether the\n-      --  hook pointer is null.\n+      --  If False, call to finalizer includes a test of whether the hook\n+      --  pointer is null.\n \n       In_Cond_Expr : constant Boolean :=\n                        Within_Case_Or_If_Expression (Rel_Node);\n@@ -12582,11 +12582,11 @@ package body Exp_Ch4 is\n \n       if Is_Boolean_Type (Etype (Rel_Node)) then\n \n-         --  In this case, the finalization context is chosen so that\n-         --  we know at finalization point that the hook pointer is\n-         --  never null, so no need for a test, we can call the finalizer\n-         --  unconditionally, except in the case where the object is\n-         --  created in a specific branch of a conditional expression.\n+         --  In this case, the finalization context is chosen so that we know\n+         --  at finalization point that the hook pointer is never null, so no\n+         --  need for a test, we can call the finalizer unconditionally, except\n+         --  in the case where the object is created in a specific branch of a\n+         --  conditional expression.\n \n          Finalize_Always :=\n             not (In_Cond_Expr"}, {"sha": "bd0e5aacede402d43a08eb073f87b0e927cc8a54", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "patch": "@@ -7343,7 +7343,7 @@ package body Exp_Util is\n             elsif Is_Access_Type (Obj_Typ)\n               and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n               and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                                N_Object_Declaration\n+                                                        N_Object_Declaration\n             then\n                return True;\n \n@@ -7353,7 +7353,7 @@ package body Exp_Util is\n             elsif Is_Access_Type (Obj_Typ)\n               and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n               and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                                                      N_Defining_Identifier\n+                                                        N_Defining_Identifier\n               and then Present (Expr)\n               and then Nkind (Expr) = N_Null\n             then"}, {"sha": "d2f081865933dcc36ff38686230512b357520d58", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 10, "deletions": 35, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "patch": "@@ -7714,6 +7714,8 @@ through a process called preprocessing. Integrated preprocessing is specified\n through switches @option{-gnatep} and/or @option{-gnateD}. @option{-gnatep}\n indicates, through a text file, the preprocessing data to be used.\n @option{-gnateD} specifies or modifies the values of preprocessing symbol.\n+Note that integrated preprocessing applies only to Ada source files, it is\n+not available for configuration pragma files.\n \n @noindent\n Note that when integrated preprocessing is used, the output from the\n@@ -15098,7 +15100,6 @@ Ada source code into XML.\n \n @menu\n * Switches for gnat2xml::\n-* Driving gnat2xml with gnatmake::\n * Other Programs::\n * Structure of the XML::\n @end menu\n@@ -15141,8 +15142,14 @@ Options:\n       the argument project has the value @var{value}. Has no effect if no\n       project is specified as tool argument.\n \n--mdir -- generate one .xml file for each Ada source file, in directory\n-         @file{dir}. (Default is to generate the XML to standard output.)\n+--incremental -- incremental processing on a per-file basis. Source files are\n+      only processed if they have been modified, or if files they depend\n+      on have been modified. This is similar to the way gnatmake/gprbuild\n+      only compiles files that need to be recompiled.\n+\n+--output-dir=@var{dir} -- generate one .xml file for each Ada source file, in\n+      directory @file{dir}. (Default is to generate the XML to standard\n+      output.)\n \n --compact -- debugging version, with interspersed source, and a more\n       compact representation of \"sloc\". This version does not conform\n@@ -15178,38 +15185,6 @@ body source code lives in mumble-dumble.ads and mumble-dumble.adb,\n the above will produce xml-files/mumble-dumble.ads.xml and\n xml-files/mumble-dumble.adb.xml.\n \n-@node Driving gnat2xml with gnatmake\n-@section Driving @command{gnat2xml} with @command{gnatmake}\n-\n-@noindent\n-You can use gnatmake to drive @command{gnat2xml} to get incremental\n-updates of the XML files on a per-source-file basis. For example, if\n-you already have a bunch of XML files, and then you change one source\n-file, it will regenerate XML files only for that source file, and\n-other related source files. Gnatmake takes care of tracking inter-file\n-dependencies.\n-\n-To do this, you tell gnatmake to pretend that @command{gnat2xml} is\n-the Ada compiler (instead of using gcc as the Ada compiler, as is\n-normal).\n-\n-To tell gnatmake to use @command{gnat2xml} instead of gcc as the\n-``compiler'', for example:\n-\n-@smallexample\n-gnatmake -gnatc main.adb --GCC=\"gnat2xml -mxml\"\n-@end smallexample\n-\n-@noindent\n-The @option{--GCC=} switch tells gnatmake that the ``compiler'' to run\n-is @command{gnat2xml -mxml}. As usual, @option{-mxml} means to put the\n-XML files in the @file{xml} subdirectory.\n-\n-You must give the @option{-gnatc} switch to gnatmake, which means\n-``compile only; do not generate object code''. Otherwise, gnatmake will\n-complain about missing object (*.o) files; @command{gnat2xml} of\n-course does not generate *.o files.\n-\n @node Other Programs\n @section Other Programs\n "}, {"sha": "371bb063fe349ded90fe1b8745f9decce68d5077", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "patch": "@@ -4843,8 +4843,9 @@ package body Sem_Attr is\n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n-         --  For floating-point types, enable range check in\n-         --  Check_Float_Overflow mode only.\n+         --  Since Pred works on the base type, we normally do no check for the\n+         --  floating-point case, since the base type is unconstrained. But we\n+         --  make an exception in Check_Float_Overflow mode.\n \n          if Is_Floating_Point_Type (P_Type) then\n             if Check_Float_Overflow\n@@ -5751,8 +5752,9 @@ package body Sem_Attr is\n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n-         --  For floating-point types, enable range check in\n-         --  Check_Float_Overflow mode only.\n+         --  Since Pred works on the base type, we normally do no check for the\n+         --  floating-point case, since the base type is unconstrained. But we\n+         --  make an exception in Check_Float_Overflow mode.\n \n          if Is_Floating_Point_Type (P_Type) then\n             if Check_Float_Overflow"}]}