{"sha": "b4b0018b305101e1f5b4951169e1d5649747367e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRiMDAxOGIzMDUxMDFlMWY1YjQ5NTExNjllMWQ1NjQ5NzQ3MzY3ZQ==", "commit": {"author": {"name": "Naveen.H.S", "email": "naveen.hs@kpitcummins.com", "date": "2008-03-25T13:38:45Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2008-03-25T13:38:45Z"}, "message": "sh.md (prefetch): Add condition for SH2A target.\n\n\t* config/sh/sh.md (prefetch): Add condition for SH2A target.\n\t(prefetch_sh2a): New.\t\n\n\t* gcc.target/sh/sh2a-prefetch.c: New test.\n\nFrom-SVN: r133516", "tree": {"sha": "c812e8bd0ba9e0a60a0830662d2b015f47fb7973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c812e8bd0ba9e0a60a0830662d2b015f47fb7973"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4b0018b305101e1f5b4951169e1d5649747367e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b0018b305101e1f5b4951169e1d5649747367e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4b0018b305101e1f5b4951169e1d5649747367e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b0018b305101e1f5b4951169e1d5649747367e/comments", "author": null, "committer": null, "parents": [{"sha": "e990551a821ea234e518ef75a380f0c0ab7af2c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e990551a821ea234e518ef75a380f0c0ab7af2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e990551a821ea234e518ef75a380f0c0ab7af2c0"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "339c91e3dd92a78011de47f45421133cce58914b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b0018b305101e1f5b4951169e1d5649747367e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b0018b305101e1f5b4951169e1d5649747367e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4b0018b305101e1f5b4951169e1d5649747367e", "patch": "@@ -1,3 +1,8 @@\n+2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n+\n+\t* config/sh/sh.md (prefetch): Add condition for SH2A target.\n+\t(prefetch_sh2a): New.\t\n+\n 2008-03-25  Jayant Sonar  <Jayant.sonar@kpitcummins.com>\n \t    Naveen.H.S  <naveen.hs@kpitcummins.com>\n "}, {"sha": "0073370701edab8880724b87183ab1d47d17be8d", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b0018b305101e1f5b4951169e1d5649747367e/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b0018b305101e1f5b4951169e1d5649747367e/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=b4b0018b305101e1f5b4951169e1d5649747367e", "patch": "@@ -13716,7 +13716,8 @@ mov.l\\\\t1f,r0\\\\n\\\\\n   [(prefetch (match_operand 0 \"address_operand\" \"p\")\n              (match_operand:SI 1 \"const_int_operand\" \"n\")\n              (match_operand:SI 2 \"const_int_operand\" \"n\"))]\n-  \"(TARGET_HARD_SH4 || TARGET_SH5) && (TARGET_SHMEDIA || !TARGET_VXWORKS_RTP)\"\n+  \"TARGET_SH2A || ((TARGET_HARD_SH4 || TARGET_SH5)\n+   && (TARGET_SHMEDIA || !TARGET_VXWORKS_RTP))\"\n   \"\n {\n   if (GET_MODE (operands[0]) != Pmode\n@@ -13727,6 +13728,14 @@ mov.l\\\\t1f,r0\\\\n\\\\\n     operands[0] = force_reg (Pmode, operands[0]);\n }\")\n \n+(define_insn \"prefetch_m2a\"\n+  [(prefetch (match_operand:SI 0 \"register_operand\" \"r\")\n+\t     (match_operand:SI 1 \"const_int_operand\" \"n\")\n+\t     (match_operand:SI 2 \"const_int_operand\" \"n\"))]\n+  \"TARGET_SH2A\"\n+  \"pref\\\\t@%0\"\n+  [(set_attr \"type\" \"other\")])\n+\n (define_insn \"alloco_i\"\n   [(set (mem:BLK (match_operand:QI 0 \"cache_address_operand\" \"p\"))\n \t(unspec:BLK [(const_int 0)] UNSPEC_ALLOCO))]"}, {"sha": "f61cfcf55077b540bb7731242e4584dd75f5cc33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b0018b305101e1f5b4951169e1d5649747367e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b0018b305101e1f5b4951169e1d5649747367e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4b0018b305101e1f5b4951169e1d5649747367e", "patch": "@@ -1,3 +1,7 @@\n+2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n+\n+\t* gcc.target/sh/sh2a-prefetch.c: New test.\n+\n 2008-03-25  Jayant Sonar  <Jayant.sonar@kpitcummins.com>\n \t    Naveen.H.S  <naveen.hs@kpitcummins.com>\n "}, {"sha": "e0c9a0d7dc65a24d288f3c1fd226b899c4dcc61c", "filename": "gcc/testsuite/gcc.target/sh/sh2a-prefetch.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b0018b305101e1f5b4951169e1d5649747367e/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b0018b305101e1f5b4951169e1d5649747367e/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-prefetch.c?ref=b4b0018b305101e1f5b4951169e1d5649747367e", "patch": "@@ -0,0 +1,34 @@\n+/* Testcase to check generation of a SH2A specific instruction PREF @Rm.  */\n+/* { dg-do assemble {target sh*-*-*}}  */\n+/* { dg-options \"-O0\" }  */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } \"*\" \"-m2a -m2a-nofpu -m2a-single -m2a-single-only\" }  */\n+/* { dg-final { scan-assembler \"pref\"} }  */\n+\n+void\n+opt (void)\n+{\n+  int *p, wk;\n+  int data[100];\n+\n+  /* data prefetch , instructions hit the cache. */\n+\n+  __builtin_prefetch (&data[0], 0, 0);\n+  __builtin_prefetch (&data[0], 0, 1);\n+  __builtin_prefetch (&data[0], 0, 2);\n+  __builtin_prefetch (&data[0], 0, 3);\n+  __builtin_prefetch (&data[0], 1, 0);\n+  __builtin_prefetch (&data[0], 1, 1);\n+  __builtin_prefetch (&data[0], 1, 2);\n+  __builtin_prefetch (&data[0], 1, 3);\n+\n+\n+  for (p = &data[0]; p < &data[9]; p++)\n+    {\n+      if (*p > *(p + 1))\n+        {\n+          wk = *p;\n+          *p = *(p + 1);\n+          *(p + 1) = wk;\n+        }\n+    }\n+}"}]}