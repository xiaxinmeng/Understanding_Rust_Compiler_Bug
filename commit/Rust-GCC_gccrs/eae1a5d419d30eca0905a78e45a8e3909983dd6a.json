{"sha": "eae1a5d419d30eca0905a78e45a8e3909983dd6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlMWE1ZDQxOWQzMGVjYTA5MDVhNzhlNDVhOGUzOTA5OTgzZGQ2YQ==", "commit": {"author": {"name": "Roman Gareev", "email": "gareevroman@gmail.com", "date": "2014-08-18T15:42:11Z"}, "committer": {"name": "Roman Gareev", "email": "romangareev@gcc.gnu.org", "date": "2014-08-18T15:42:11Z"}, "message": "configure.ac: Eliminate ClooG installation dependency.\n\n\n\t* configure.ac: Eliminate ClooG installation dependency.\n\t* configure: Regenerate.\n\t* Makefile.tpl: Add definition of ISLLIBS and HOST_ISLLIBS.\n\t* Makefile.in: Regenerate.\n\n[config/]\n\n\t* cloog.m4: Remove the path to isllibs from clooglibs.\n\t* isl.m4: Add paths to islinc, isllibs.\n\n[gcc/]\n\n\t* Makefile.in: Add definition of ISLLIBS, HOST_ISLLIBS.\n\t* config.in: Add undef of HAVE_isl.\n\t* configure: Regenerate.\n\t* configure.ac: Add definition of HAVE_isl.\n\t* graphite-blocking.c: Add checking of HAVE_isl.\n\t* graphite-dependences.c: Likewise.\n\t* graphite-interchange.c: Likewise.\n\t* graphite-isl-ast-to-gimple.c: Likewise.\n\t* graphite-optimize-isl.c: Likewise.\n\t* graphite-poly.c: Likewise.\n\t* graphite-scop-detection.c: Likewise.\n\t* graphite-sese-to-poly.c: Likewise.\n\t* graphite.c: Likewise.\n\t* toplev.c: Replace the checking of HAVE_cloog with the checking\n\tof HAVE_isl.\n\nFrom-SVN: r214106", "tree": {"sha": "a353a3d31ffda81ef6d90612de9127c49b5fe3d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a353a3d31ffda81ef6d90612de9127c49b5fe3d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eae1a5d419d30eca0905a78e45a8e3909983dd6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae1a5d419d30eca0905a78e45a8e3909983dd6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae1a5d419d30eca0905a78e45a8e3909983dd6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae1a5d419d30eca0905a78e45a8e3909983dd6a/comments", "author": {"login": "gareevroman", "id": 6114710, "node_id": "MDQ6VXNlcjYxMTQ3MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6114710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gareevroman", "html_url": "https://github.com/gareevroman", "followers_url": "https://api.github.com/users/gareevroman/followers", "following_url": "https://api.github.com/users/gareevroman/following{/other_user}", "gists_url": "https://api.github.com/users/gareevroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gareevroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gareevroman/subscriptions", "organizations_url": "https://api.github.com/users/gareevroman/orgs", "repos_url": "https://api.github.com/users/gareevroman/repos", "events_url": "https://api.github.com/users/gareevroman/events{/privacy}", "received_events_url": "https://api.github.com/users/gareevroman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7e78447084450a8961172d8670f3add9a439d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e78447084450a8961172d8670f3add9a439d3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e78447084450a8961172d8670f3add9a439d3c"}], "stats": {"total": 201, "additions": 154, "deletions": 47}, "files": [{"sha": "04e92bc1ccbfa2ae75944b4f1f9bbea80df65868", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -1,3 +1,10 @@\n+2014-08-18 Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* configure.ac: Eliminate ClooG installation dependency.\n+\t* configure: Regenerate.\n+\t* Makefile.tpl: Add definition of ISLLIBS and HOST_ISLLIBS.\n+\t* Makefile.in: Regenerate.\n+\n 2014-08-15  Ilya Verbin  <iverbin@gmail.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "add8cf6b379f2add77ba9aae2b7720ac98f8b952", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -219,6 +219,7 @@ HOST_EXPORTS = \\\n \tHOST_LIBS=\"$(STAGE1_LIBS)\"; export HOST_LIBS; \\\n \tGMPLIBS=\"$(HOST_GMPLIBS)\"; export GMPLIBS; \\\n \tGMPINC=\"$(HOST_GMPINC)\"; export GMPINC; \\\n+\tISLLIBS=\"$(HOST_ISLLIBS)\"; export ISLLIBS; \\\n \tISLINC=\"$(HOST_ISLINC)\"; export ISLINC; \\\n \tCLOOGLIBS=\"$(HOST_CLOOGLIBS)\"; export CLOOGLIBS; \\\n \tCLOOGINC=\"$(HOST_CLOOGINC)\"; export CLOOGINC; \\\n@@ -310,6 +311,7 @@ HOST_GMPLIBS = @gmplibs@\n HOST_GMPINC = @gmpinc@\n \n # Where to find ISL\n+HOST_ISLLIBS = @isllibs@\n HOST_ISLINC = @islinc@\n \n # Where to find CLOOG"}, {"sha": "00dba363a9ddfe8b5794318f87c4d51fe396f071", "filename": "Makefile.tpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -222,6 +222,7 @@ HOST_EXPORTS = \\\n \tHOST_LIBS=\"$(STAGE1_LIBS)\"; export HOST_LIBS; \\\n \tGMPLIBS=\"$(HOST_GMPLIBS)\"; export GMPLIBS; \\\n \tGMPINC=\"$(HOST_GMPINC)\"; export GMPINC; \\\n+\tISLLIBS=\"$(HOST_ISLLIBS)\"; export ISLLIBS; \\\n \tISLINC=\"$(HOST_ISLINC)\"; export ISLINC; \\\n \tCLOOGLIBS=\"$(HOST_CLOOGLIBS)\"; export CLOOGLIBS; \\\n \tCLOOGINC=\"$(HOST_CLOOGINC)\"; export CLOOGINC; \\\n@@ -313,6 +314,7 @@ HOST_GMPLIBS = @gmplibs@\n HOST_GMPINC = @gmpinc@\n \n # Where to find ISL\n+HOST_ISLLIBS = @isllibs@\n HOST_ISLINC = @islinc@\n \n # Where to find CLOOG"}, {"sha": "3a0d438cd510cc3ec627a7a15150add5d5a42479", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -1,3 +1,8 @@\n+2014-08-18 Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* cloog.m4: Remove the path to isllibs from clooglibs.\n+\t* isl.m4: Add paths to islinc, isllibs.\n+\n 2014-07-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/47230"}, {"sha": "b80ac2742aad704d243193c25541be9702fe38d6", "filename": "config/cloog.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/config%2Fcloog.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/config%2Fcloog.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fcloog.m4?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -69,7 +69,7 @@ AC_DEFUN([CLOOG_INIT_FLAGS],\n   fi\n \n   clooginc=\"-DCLOOG_INT_GMP ${clooginc}\"\n-  clooglibs=\"${clooglibs} -lcloog-isl ${isllibs} -lisl\"\n+  clooglibs=\"${clooglibs} -lcloog-isl\"\n ]\n )\n "}, {"sha": "9743aee0e13037148ff1efb2def7649b2bbc0af9", "filename": "config/isl.m4", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/config%2Fisl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/config%2Fisl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fisl.m4?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -68,6 +68,9 @@ AC_DEFUN([ISL_INIT_FLAGS],\n     ENABLE_ISL_CHECK=no\n     AC_MSG_WARN([using in-tree ISL, disabling version check])\n   fi\n+\n+  islinc=\"-DCLOOG_INT_GMP ${islinc}\"\n+  isllibs=\"${isllibs} -lisl\"\n ]\n )\n "}, {"sha": "6e24b556d85ed335b145e01a1711fd1f172d1057", "filename": "configure", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -649,6 +649,7 @@ extra_linker_plugin_configure_flags\n clooginc\n clooglibs\n islinc\n+isllibs\n poststage1_ldflags\n poststage1_libs\n stage1_ldflags\n@@ -2760,7 +2761,7 @@ build_libs=\"build-libiberty\"\n build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n-#\n+#f\n host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libdecnumber gmp mpfr mpc isl cloog libelf libiconv\"\n \n # these tools are built for the host environment\n@@ -5835,10 +5836,9 @@ if test \"${with_isl+set}\" = set; then :\n fi\n \n \n-# Treat either --without-cloog or --without-isl as a request to disable\n+# Treat --without-isl as a request to disable\n # GRAPHITE support and skip all following checks.\n-if test \"x$with_isl\" != \"xno\" &&\n-   test \"x$with_cloog\" != \"xno\"; then\n+if test \"x$with_isl\" != \"xno\"; then\n   # Check for ISL\n \n \n@@ -5890,6 +5890,9 @@ fi\n $as_echo \"$as_me: WARNING: using in-tree ISL, disabling version check\" >&2;}\n   fi\n \n+  islinc=\"-DCLOOG_INT_GMP ${islinc}\"\n+  isllibs=\"${isllibs} -lisl\"\n+\n \n \n   if test \"${ENABLE_ISL_CHECK}\" = yes ; then\n@@ -6021,7 +6024,7 @@ $as_echo \"$as_me: WARNING: using in-tree CLooG, disabling version check\" >&2;}\n   fi\n \n   clooginc=\"-DCLOOG_INT_GMP ${clooginc}\"\n-  clooglibs=\"${clooglibs} -lcloog-isl ${isllibs} -lisl\"\n+  clooglibs=\"${clooglibs} -lcloog-isl\"\n \n \n \n@@ -6098,18 +6101,25 @@ $as_echo \"$gcc_cv_cloog\" >&6; }\n   fi\n fi\n \n-# If either the ISL or the CLooG check failed, disable builds of in-tree\n-# variants of both\n+# If the ISL check failed, disable builds of in-tree\n+# variants of both ISL and CLooG\n if test \"x$with_isl\" = xno ||\n-   test \"x$with_cloog\" = xno ||\n-   test \"x$gcc_cv_cloog\" = xno ||\n    test \"x$gcc_cv_isl\" = xno; then\n   noconfigdirs=\"$noconfigdirs cloog isl\"\n   islinc=\n   clooginc=\n   clooglibs=\n fi\n \n+# If the CLooG check failed, disable builds of in-tree\n+# variants of CLooG\n+if test \"x$with_cloog\" = xno ||\n+   test \"x$gcc_cv_cloog\" = xno; then\n+  noconfigdirs=\"$noconfigdirs cloog isl\"\n+  clooginc=\n+  clooglibs=\n+fi\n+\n \n \n \n@@ -7325,7 +7335,7 @@ do\n \n \n     case $lib in\n-    mpc | mpfr | gmp | cloog)\n+    mpc | mpfr | gmp | isl | cloog)\n       # If we're processing --with-$lib, --with-$lib-include or\n       # --with-$lib-lib, for one of the libs above, and target is\n       # different from host, don't pass the current argument to any"}, {"sha": "8f747d62c7278729a96c86a4ed6423a2e2fd44a1", "filename": "configure.ac", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -132,7 +132,7 @@ build_libs=\"build-libiberty\"\n build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n-#\n+#f\n host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libdecnumber gmp mpfr mpc isl cloog libelf libiconv\"\n \n # these tools are built for the host environment\n@@ -1644,10 +1644,9 @@ AC_ARG_WITH(isl,\n     Equivalent to --with-isl-include=PATH/include\n     plus --with-isl-lib=PATH/lib])])\n \n-# Treat either --without-cloog or --without-isl as a request to disable\n+# Treat --without-isl as a request to disable\n # GRAPHITE support and skip all following checks.\n-if test \"x$with_isl\" != \"xno\" &&\n-   test \"x$with_cloog\" != \"xno\"; then\n+if test \"x$with_isl\" != \"xno\"; then\n   # Check for ISL\n   dnl Provide configure switches and initialize islinc & isllibs\n   dnl with user input.\n@@ -1672,23 +1671,30 @@ if test \"x$with_isl\" != \"xno\" &&\n   fi\n fi\n \n-# If either the ISL or the CLooG check failed, disable builds of in-tree\n-# variants of both\n+# If the ISL check failed, disable builds of in-tree\n+# variants of both ISL and CLooG\n if test \"x$with_isl\" = xno ||\n-   test \"x$with_cloog\" = xno ||\n-   test \"x$gcc_cv_cloog\" = xno ||\n    test \"x$gcc_cv_isl\" = xno; then\n   noconfigdirs=\"$noconfigdirs cloog isl\"\n   islinc=\n   clooginc=\n   clooglibs=\n fi\n \n+# If the CLooG check failed, disable builds of in-tree\n+# variants of CLooG\n+if test \"x$with_cloog\" = xno ||\n+   test \"x$gcc_cv_cloog\" = xno; then\n+  noconfigdirs=\"$noconfigdirs cloog isl\"\n+  clooginc=\n+  clooglibs=\n+fi\n+\n+AC_SUBST(isllibs)\n AC_SUBST(islinc)\n AC_SUBST(clooglibs)\n AC_SUBST(clooginc)\n \n-\n # Check for LTO support.\n AC_ARG_ENABLE(lto,\n [AS_HELP_STRING([--enable-lto], [enable link time optimization support])],\n@@ -2812,7 +2818,7 @@ changequote(,)\n changequote([,])\n \n     case $lib in\n-    mpc | mpfr | gmp | cloog)\n+    mpc | mpfr | gmp | isl | cloog)\n       # If we're processing --with-$lib, --with-$lib-include or\n       # --with-$lib-lib, for one of the libs above, and target is\n       # different from host, don't pass the current argument to any"}, {"sha": "7f7a3bfff15f4a695a88cfaebf5ebddd3303223d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -1,3 +1,21 @@\n+2014-08-18 Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* Makefile.in: Add definition of ISLLIBS, HOST_ISLLIBS.\n+\t* config.in: Add undef of HAVE_isl.\n+\t* configure: Regenerate.\n+\t* configure.ac: Add definition of HAVE_isl.\n+\t* graphite-blocking.c: Add checking of HAVE_isl.\n+\t* graphite-dependences.c: Likewise.\n+\t* graphite-interchange.c: Likewise.\n+\t* graphite-isl-ast-to-gimple.c: Likewise.\n+\t* graphite-optimize-isl.c: Likewise.\n+\t* graphite-poly.c: Likewise.\n+\t* graphite-scop-detection.c: Likewise.\n+\t* graphite-sese-to-poly.c: Likewise.\n+\t* graphite.c: Likewise.\n+\t* toplev.c: Replace the checking of HAVE_cloog with the checking\n+\tof HAVE_isl.\n+\n 2014-08-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62090"}, {"sha": "1b3820b4b34b6f44471f9528d2381592a2880005", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -335,6 +335,7 @@ GMPLIBS = @GMPLIBS@\n GMPINC = @GMPINC@\n \n # How to find ISL\n+ISLLIBS = @ISLLIBS@\n ISLINC = @ISLINC@\n \n # How to find CLOOG\n@@ -1011,7 +1012,7 @@ BUILD_LIBDEPS= $(BUILD_LIBIBERTY)\n # and the system's installed libraries.\n LIBS = @LIBS@ libcommon.a $(CPPLIB) $(LIBINTL) $(LIBICONV) $(LIBBACKTRACE) \\\n \t$(LIBIBERTY) $(LIBDECNUMBER) $(HOST_LIBS)\n-BACKENDLIBS = $(CLOOGLIBS) $(GMPLIBS) $(PLUGINLIBS) $(HOST_LIBS) \\\n+BACKENDLIBS = $(CLOOGLIBS) $(ISLLIBS) $(GMPLIBS) $(PLUGINLIBS) $(HOST_LIBS) \\\n \t$(ZLIB)\n # Any system libraries needed just for GNAT.\n SYSLIBS = @GNAT_LIBEXC@"}, {"sha": "90809e37466ce57f3660c7107da4fac50c23d5a2", "filename": "gcc/config.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -1699,13 +1699,16 @@\n #undef HAVE_WORKING_VFORK\n #endif\n \n+/* Define if isl is in use. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_isl\n+#endif\n \n /* Define if cloog is in use. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_cloog\n #endif\n \n-\n /* Define if F_SETLKW supported by fcntl. */\n #ifndef USED_FOR_TARGET\n #undef HOST_HAS_F_SETLKW"}, {"sha": "5e0dcfbfe169253151a4b88e74683dc94f6922e1", "filename": "gcc/configure", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -27888,6 +27888,11 @@ fi\n \n \n \n+if test \"x${ISLLIBS}\" != \"x\" ; then\n+\n+$as_echo \"#define HAVE_isl 1\" >>confdefs.h\n+\n+fi\n \n \n "}, {"sha": "cdd5ed7baef1fa840cb4af91c3906e60ba3031bf", "filename": "gcc/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -5514,6 +5514,9 @@ AC_ARG_VAR(GMPINC,[How to find GMP include files])\n \n AC_ARG_VAR(ISLLIBS,[How to link ISL])\n AC_ARG_VAR(ISLINC,[How to find ISL include files])\n+if test \"x${ISLLIBS}\" != \"x\" ; then \n+   AC_DEFINE(HAVE_isl, 1, [Define if isl is in use.])\n+fi\n \n AC_ARG_VAR(CLOOGLIBS,[How to link CLOOG])\n AC_ARG_VAR(CLOOGINC,[How to find CLOOG include files])"}, {"sha": "2e83fea4c7b7fffa4940411d3512b55993021bbc", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -23,14 +23,16 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n #include <isl/constraint.h>\n+#ifdef HAVE_cloog\n #include <cloog/cloog.h>\n #include <cloog/isl/domain.h>\n #endif\n+#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -49,7 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-data-ref.h\"\n #include \"sese.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include \"graphite-poly.h\"\n \n "}, {"sha": "cab63478dff5f75996b4b231bea710bfd2168a3f", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -21,15 +21,17 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n #include <isl/flow.h>\n #include <isl/constraint.h>\n+#ifdef HAVE_cloog\n #include <cloog/cloog.h>\n #include <cloog/isl/domain.h>\n #endif\n+#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -49,7 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-scalar-evolution.h\"\n #include \"sese.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include \"graphite-poly.h\"\n #include \"graphite-htab.h\"\n \n@@ -630,6 +632,8 @@ graphite_legal_transform (scop_p scop)\n   return res;\n }\n \n+#ifdef HAVE_cloog\n+\n /* Return true when the loop at DEPTH carries dependences.  BODY is\n    the body of the loop.  */\n \n@@ -685,3 +689,4 @@ loop_is_parallel_p (loop_p loop, bb_pbb_htab_type *bb_pbb_mapping, int depth)\n }\n \n #endif\n+#endif"}, {"sha": "8d691dbc7d50dd7f781c415d129bad400cb9db88", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -23,7 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/aff.h>\n #include <isl/set.h>\n #include <isl/map.h>\n@@ -37,9 +37,11 @@ extern \"C\" {\n #if defined(__cplusplus)\n }\n #endif\n+#ifdef HAVE_cloog\n #include <cloog/cloog.h>\n #include <cloog/isl/domain.h>\n #endif\n+#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -59,7 +61,7 @@ extern \"C\" {\n #include \"tree-scalar-evolution.h\"\n #include \"sese.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include \"graphite-poly.h\"\n \n /* XXX isl rewrite following comment */"}, {"sha": "5cb0919a61e9ffd82b61a48a1b480245e9533169", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -20,7 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n@@ -55,7 +55,7 @@ extern \"C\" {\n #include \"tree-into-ssa.h\"\n #include <map>\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include \"graphite-poly.h\"\n #include \"graphite-isl-ast-to-gimple.h\"\n "}, {"sha": "ce372e6e4995dd9cd02d63c9cd3b5e5e8d23d0fe", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -20,7 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n@@ -48,7 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-scalar-evolution.h\"\n #include \"sese.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include \"graphite-poly.h\"\n \n static isl_union_set *"}, {"sha": "57f62cd2ba1c3e9819c6767888642692092a2c37", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -21,7 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n@@ -36,9 +36,11 @@ extern \"C\" {\n #if defined(__cplusplus)\n }\n #endif\n+#ifdef HAVE_cloog\n #include <cloog/cloog.h>\n #include <cloog/isl/domain.h>\n #endif\n+#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -60,7 +62,7 @@ extern \"C\" {\n #include \"tree-scalar-evolution.h\"\n #include \"sese.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include \"graphite-poly.h\"\n \n #define OPENSCOP_MAX_STRING 256"}, {"sha": "53823b8678735f914579691c889046b11df92f04", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -21,13 +21,15 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n+#ifdef HAVE_cloog\n #include <cloog/cloog.h>\n #include <cloog/isl/domain.h>\n #endif\n+#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -56,7 +58,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-propagate.h\"\n #include \"cp/cp-tree.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include \"graphite-poly.h\"\n #include \"graphite-scop-detection.h\"\n "}, {"sha": "c3adfe13e9e1af6ce51943930462f478ed9b1c5a", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -20,7 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n@@ -38,10 +38,12 @@ extern \"C\" {\n #if defined(__cplusplus)\n }\n #endif\n+#ifdef HAVE_cloog\n #include <cloog/cloog.h>\n #include <cloog/cloog.h>\n #include <cloog/isl/domain.h>\n #endif\n+#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -74,7 +76,7 @@ extern \"C\" {\n #include \"sese.h\"\n #include \"tree-ssa-propagate.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include \"expr.h\"\n #include \"graphite-poly.h\"\n #include \"graphite-sese-to-poly.h\""}, {"sha": "650432d255255550f8c27cc69f96d765544f538e", "filename": "gcc/graphite.c", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -34,15 +34,17 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/options.h>\n #include <isl/union_map.h>\n+#ifdef HAVE_cloog\n #include <cloog/cloog.h>\n #include <cloog/isl/domain.h>\n #include <cloog/isl/cloog.h>\n #endif\n+#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -68,16 +70,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"tree-cfgcleanup.h\"\n \n-#ifdef HAVE_cloog\n+#ifdef HAVE_isl\n \n #include \"graphite-poly.h\"\n #include \"graphite-scop-detection.h\"\n-#include \"graphite-clast-to-gimple.h\"\n #include \"graphite-isl-ast-to-gimple.h\"\n #include \"graphite-sese-to-poly.h\"\n #include \"graphite-htab.h\"\n \n+#ifdef HAVE_cloog\n+#include \"graphite-clast-to-gimple.h\"\n+\n CloogState *cloog_state;\n+#endif\n \n /* Print global statistics to FILE.  */\n \n@@ -228,7 +233,9 @@ graphite_initialize (isl_ctx *ctx)\n   recompute_all_dominators ();\n   initialize_original_copy_tables ();\n \n+#ifdef HAVE_cloog\n   cloog_state = cloog_isl_state_malloc (ctx);\n+#endif\n \n   if (dump_file && dump_flags)\n     dump_function_to_file (current_function_decl, dump_file, dump_flags);\n@@ -251,7 +258,9 @@ graphite_finalize (bool need_cfg_cleanup_p)\n       tree_estimate_probability ();\n     }\n \n+#ifdef HAVE_cloog\n   cloog_state_free (cloog_state);\n+#endif\n   free_original_copy_tables ();\n \n   if (dump_file && dump_flags)\n@@ -292,19 +301,37 @@ graphite_transform_loops (void)\n     }\n \n   bb_pbb_htab_type bb_pbb_mapping (10);\n+\n+#ifndef HAVE_cloog\n+  if(flag_graphite_code_gen == FGRAPHITE_CODE_GEN_CLOOG)\n+    {\n+      flag_graphite_code_gen = FGRAPHITE_CODE_GEN_ISL;\n+      printf (\"The CLooG code generator cannot be used (CLooG is not \"\n+\t      \"available). The ISL code generator was chosen.\\n\");\n+    }\n+#endif\n+\n   FOR_EACH_VEC_ELT (scops, i, scop)\n     if (dbg_cnt (graphite_scop))\n       {\n \tscop->ctx = ctx;\n \tbuild_poly_scop (scop);\n \n+#ifdef HAVE_cloog\n \tif (POLY_SCOP_P (scop)\n \t    && apply_poly_transforms (scop)\n \t    && (((flag_graphite_code_gen == FGRAPHITE_CODE_GEN_ISL)\n \t    && graphite_regenerate_ast_isl (scop))\n \t    || ((flag_graphite_code_gen == FGRAPHITE_CODE_GEN_CLOOG)\n \t    && graphite_regenerate_ast_cloog (scop, &bb_pbb_mapping))))\n \t  need_cfg_cleanup_p = true;\n+#else\n+\tif (POLY_SCOP_P (scop)\n+\t    && apply_poly_transforms (scop)\n+\t    && graphite_regenerate_ast_isl (scop))\n+\t  need_cfg_cleanup_p = true;\n+#endif\n+\n       }\n \n   free_scops (scops);\n@@ -313,12 +340,12 @@ graphite_transform_loops (void)\n   isl_ctx_free (ctx);\n }\n \n-#else /* If Cloog is not available: #ifndef HAVE_cloog.  */\n+#else /* If ISL is not available: #ifndef HAVE_isl.  */\n \n static void\n graphite_transform_loops (void)\n {\n-  sorry (\"Graphite loop optimizations cannot be used\");\n+  sorry (\"Graphite loop optimizations cannot be used (ISL is not available).\");\n }\n \n #endif"}, {"sha": "aaad68816e48c1b35a8038dd7f0d2b66f3dd85a7", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae1a5d419d30eca0905a78e45a8e3909983dd6a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=eae1a5d419d30eca0905a78e45a8e3909983dd6a", "patch": "@@ -1275,15 +1275,15 @@ process_options (void)\n   else\n     aux_base_name = \"gccaux\";\n \n-#ifndef HAVE_cloog\n+#ifndef HAVE_isl\n   if (flag_graphite\n       || flag_graphite_identity\n       || flag_loop_block\n       || flag_loop_interchange\n       || flag_loop_strip_mine\n       || flag_loop_parallelize_all)\n-    sorry (\"Graphite loop optimizations cannot be used (-fgraphite, \"\n-\t   \"-fgraphite-identity, -floop-block, \"\n+    sorry (\"Graphite loop optimizations cannot be used (ISL is not available)\" \n+\t   \"(-fgraphite, -fgraphite-identity, -floop-block, \"\n \t   \"-floop-interchange, -floop-strip-mine, -floop-parallelize-all, \"\n \t   \"and -ftree-loop-linear)\");\n #endif"}]}