{"sha": "a414fd426346558d7a913af3ed82bcc1121fc880", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQxNGZkNDI2MzQ2NTU4ZDdhOTEzYWYzZWQ4MmJjYzExMjFmYzg4MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-12-05T20:53:39Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-12-05T20:53:39Z"}, "message": "Fix g++.dg/torture/pr59226.C\n\nthis patch fixes ICE in g++.dg/torture/pr59226.C which was triggered by\nnew comdat_local sanity check.  What happens here is that function gets\ninlined into its own thunk which makes it !comdat_local_p but the updating\ncode does not notice since thunk calls comdat local alias of the function\nitself and we look at alias target rather than original callee.\n\nThis also shows that we miss optimization here.  Currently we will not inline\nthunk out of its comdat local group w/o inlining function it is associated with\ninto it.\n\nWe should teach inline_call to reoslve edges to aliases while inlining and \nrelax calls_comdat_local flag.  But this needs bit more work, so I fix the\nICE first.\n\n\t* ipa-inline-transform.c (inline_call): Fix maintenatnce of comdat_local\n\nFrom-SVN: r279021", "tree": {"sha": "ad5a3edff5a4f5544f7171ff5f7da8a21c5467b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad5a3edff5a4f5544f7171ff5f7da8a21c5467b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a414fd426346558d7a913af3ed82bcc1121fc880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a414fd426346558d7a913af3ed82bcc1121fc880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a414fd426346558d7a913af3ed82bcc1121fc880", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a414fd426346558d7a913af3ed82bcc1121fc880/comments", "author": null, "committer": null, "parents": [{"sha": "7906797ebec6881d7d90165340f51efcf447d716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7906797ebec6881d7d90165340f51efcf447d716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7906797ebec6881d7d90165340f51efcf447d716"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "ab19c525fb28cb225b984105c1fe1e82e0776741", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a414fd426346558d7a913af3ed82bcc1121fc880/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a414fd426346558d7a913af3ed82bcc1121fc880/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a414fd426346558d7a913af3ed82bcc1121fc880", "patch": "@@ -1,3 +1,7 @@\n+2019-12-05  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline-transform.c (inline_call): Fix maintenatnce of comdat_local\n+\n 2019-12-05  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cgraphclones.c (localize_profile): New function."}, {"sha": "fb2726d72f5d4895300473517d87816a157543e0", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a414fd426346558d7a913af3ed82bcc1121fc880/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a414fd426346558d7a913af3ed82bcc1121fc880/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=a414fd426346558d7a913af3ed82bcc1121fc880", "patch": "@@ -331,6 +331,7 @@ inline_call (struct cgraph_edge *e, bool update_original,\n   int old_size = 0, new_size = 0;\n   struct cgraph_node *to = NULL;\n   struct cgraph_edge *curr = e;\n+  bool comdat_local = e->callee->comdat_local_p ();\n   struct cgraph_node *callee = e->callee->ultimate_alias_target ();\n   bool new_edges_found = false;\n \n@@ -502,7 +503,7 @@ inline_call (struct cgraph_edge *e, bool update_original,\n \n   if (callee->calls_comdat_local)\n     to->calls_comdat_local = true;\n-  else if (to->calls_comdat_local && callee->comdat_local_p ())\n+  else if (to->calls_comdat_local && comdat_local)\n     {\n       struct cgraph_edge *se = to->callees;\n       for (; se; se = se->next_callee)"}]}