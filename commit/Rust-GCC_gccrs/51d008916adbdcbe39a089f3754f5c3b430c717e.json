{"sha": "51d008916adbdcbe39a089f3754f5c3b430c717e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFkMDA4OTE2YWRiZGNiZTM5YTA4OWYzNzU0ZjVjM2I0MzBjNzE3ZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-25T02:33:12Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-25T02:33:12Z"}, "message": "tree-vect-analyze.c (vect_mark_relevant): Take VEC(tree,heap) instead of varray_type as an argument.\n\n\t* tree-vect-analyze.c (vect_mark_relevant): Take\n\tVEC(tree,heap) instead of varray_type as an argument.\n\t(vect_mark_stmts_to_be_vectorized): Change the type of\n\tworklist to VEC(tree,heap).  Adjust uses of worklist.\n\nFrom-SVN: r98695", "tree": {"sha": "0ba3673ca9dc521954986763e3a21121fa40893d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ba3673ca9dc521954986763e3a21121fa40893d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51d008916adbdcbe39a089f3754f5c3b430c717e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d008916adbdcbe39a089f3754f5c3b430c717e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51d008916adbdcbe39a089f3754f5c3b430c717e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d008916adbdcbe39a089f3754f5c3b430c717e/comments", "author": null, "committer": null, "parents": [{"sha": "eb1093d3721a1435bf078b2356d9a707d1a4752e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1093d3721a1435bf078b2356d9a707d1a4752e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1093d3721a1435bf078b2356d9a707d1a4752e"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "72e91c064b1ecdab1caac831fe8cc44bd8964298", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51d008916adbdcbe39a089f3754f5c3b430c717e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51d008916adbdcbe39a089f3754f5c3b430c717e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51d008916adbdcbe39a089f3754f5c3b430c717e", "patch": "@@ -1,3 +1,10 @@\n+2005-04-25  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-vect-analyze.c (vect_mark_relevant): Take\n+\tVEC(tree,heap) instead of varray_type as an argument.\n+\t(vect_mark_stmts_to_be_vectorized): Change the type of\n+\tworklist to VEC(tree,heap).  Adjust uses of worklist.\n+\n 2005-04-24  Devang Patel  <dpatel@apple.com>\n \n \t*  config/rs6000/darwin.h (ASM_OUTPUT_MAX_SKIP_ALIGN): New."}, {"sha": "71f7663357e15a96b480522d2360d5708a46530c", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51d008916adbdcbe39a089f3754f5c3b430c717e/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51d008916adbdcbe39a089f3754f5c3b430c717e/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=51d008916adbdcbe39a089f3754f5c3b430c717e", "patch": "@@ -54,7 +54,7 @@ static bool vect_determine_vectorization_factor (loop_vec_info);\n \n /* Utility functions for the analyses.  */\n static bool exist_non_indexing_operands_for_use_p (tree, tree);\n-static void vect_mark_relevant (varray_type *, tree);\n+static void vect_mark_relevant (VEC(tree,heap) **, tree);\n static bool vect_stmt_relevant_p (tree, loop_vec_info);\n static tree vect_get_loop_niters (struct loop *, tree *);\n static bool vect_analyze_data_ref_dependence\n@@ -2061,7 +2061,7 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo)\n    Mark STMT as \"relevant for vectorization\" and add it to WORKLIST.  */\n \n static void\n-vect_mark_relevant (varray_type *worklist, tree stmt)\n+vect_mark_relevant (VEC(tree,heap) **worklist, tree stmt)\n {\n   stmt_vec_info stmt_info;\n \n@@ -2070,7 +2070,7 @@ vect_mark_relevant (varray_type *worklist, tree stmt)\n \n   if (TREE_CODE (stmt) == PHI_NODE)\n     {\n-      VARRAY_PUSH_TREE (*worklist, stmt);\n+      VEC_safe_push (tree, heap, *worklist, stmt);\n       return;\n     }\n \n@@ -2094,7 +2094,7 @@ vect_mark_relevant (varray_type *worklist, tree stmt)\n     }\n \n   STMT_VINFO_RELEVANT_P (stmt_info) = 1;\n-  VARRAY_PUSH_TREE (*worklist, stmt);\n+  VEC_safe_push (tree, heap, *worklist, stmt);\n }\n \n \n@@ -2190,7 +2190,7 @@ vect_stmt_relevant_p (tree stmt, loop_vec_info loop_vinfo)\n static bool\n vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo)\n {\n-  varray_type worklist;\n+  VEC(tree,heap) *worklist;\n   struct loop *loop = LOOP_VINFO_LOOP (loop_vinfo);\n   basic_block *bbs = LOOP_VINFO_BBS (loop_vinfo);\n   unsigned int nbbs = loop->num_nodes;\n@@ -2225,7 +2225,7 @@ vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo)\n \t}\n     }\n \n-  VARRAY_TREE_INIT (worklist, 64, \"work list\");\n+  worklist = VEC_alloc (tree, heap, 64);\n \n   /* 1. Init worklist.  */\n \n@@ -2253,10 +2253,9 @@ vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo)\n \n   /* 2. Process_worklist */\n \n-  while (VARRAY_ACTIVE_SIZE (worklist) > 0)\n+  while (VEC_length (tree, worklist) > 0)\n     {\n-      stmt = VARRAY_TOP_TREE (worklist);\n-      VARRAY_POP (worklist);\n+      stmt = VEC_pop (tree, worklist);\n \n       if (vect_print_dump_info (REPORT_DETAILS, UNKNOWN_LOC))\n \t{\n@@ -2281,7 +2280,7 @@ vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo)\n \t\t  if (vect_print_dump_info (REPORT_UNVECTORIZED_LOOPS,\n \t\t\t\t\t    LOOP_LOC (loop_vinfo)))\n \t\t    fprintf (vect_dump, \"not vectorized: unsupported use in stmt.\");\n-\t\t  varray_clear (worklist);\n+\t\t  VEC_free (tree, heap, worklist);\n \t\t  return false;\n \t\t}\n \t      if (!def_stmt)\n@@ -2318,7 +2317,7 @@ vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo)\n                   if (vect_print_dump_info (REPORT_UNVECTORIZED_LOOPS,\n \t\t\t\t\t    LOOP_LOC (loop_vinfo)))\n                     fprintf (vect_dump, \"not vectorized: unsupported use in stmt.\");\n-                  varray_clear (worklist);\n+\t\t  VEC_free (tree, heap, worklist);\n                   return false;\n                 }\n \n@@ -2338,7 +2337,7 @@ vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo)\n \t}\n     }\t\t\t\t/* while worklist */\n \n-  varray_clear (worklist);\n+  VEC_free (tree, heap, worklist);\n   return true;\n }\n "}]}