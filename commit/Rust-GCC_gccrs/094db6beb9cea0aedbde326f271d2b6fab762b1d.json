{"sha": "094db6beb9cea0aedbde326f271d2b6fab762b1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk0ZGI2YmViOWNlYTBhZWRiZGUzMjZmMjcxZDJiNmZhYjc2MmIxZA==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2018-08-01T14:09:56Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2018-08-01T14:09:56Z"}, "message": "[PATCH] Remove use of 'struct map' from plugin (nvptx)\n\n\tlibgomp/\n\t* plugin/plugin-nvptx.c (struct map): Removed.\n\t(map_init, map_pop): Remove use of struct map. (map_push):\n\tLikewise and change argument list.\n\t* testsuite/libgomp.oacc-c-c++-common/mapping-1.c: New\n\nCo-Authored-By: James Norris <jnorris@codesourcery.com>\n\nFrom-SVN: r263212", "tree": {"sha": "bf6d90866d7cc69f1786746cccc0421d49c9a98f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf6d90866d7cc69f1786746cccc0421d49c9a98f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/094db6beb9cea0aedbde326f271d2b6fab762b1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094db6beb9cea0aedbde326f271d2b6fab762b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094db6beb9cea0aedbde326f271d2b6fab762b1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094db6beb9cea0aedbde326f271d2b6fab762b1d/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ecfbf82a49d5522f4c55c3fedd70759687bbeaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ecfbf82a49d5522f4c55c3fedd70759687bbeaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ecfbf82a49d5522f4c55c3fedd70759687bbeaf"}], "stats": {"total": 104, "additions": 77, "deletions": 27}, "files": [{"sha": "cc5325fe8a821f76af557a3beaca85c9de60dc21", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094db6beb9cea0aedbde326f271d2b6fab762b1d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094db6beb9cea0aedbde326f271d2b6fab762b1d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=094db6beb9cea0aedbde326f271d2b6fab762b1d", "patch": "@@ -1,3 +1,11 @@\n+2018-08-01  Cesar Philippidis  <cesar@codesourcery.com>\n+\t    James Norris <jnorris@codesourcery.com>\n+\n+\t* plugin/plugin-nvptx.c (struct map): Removed.\n+\t(map_init, map_pop): Remove use of struct map. (map_push):\n+\tLikewise and change argument list.\n+\t* testsuite/libgomp.oacc-c-c++-common/mapping-1.c: New\n+\n 2018-08-01  Tom de Vries  <tdevries@suse.de>\n \n \t* plugin/cuda-lib.def: New file.  Factor out of ..."}, {"sha": "cc465b4addb24514ac6bc03a6bd1bde39ff3c3d5", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 6, "deletions": 27, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094db6beb9cea0aedbde326f271d2b6fab762b1d/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094db6beb9cea0aedbde326f271d2b6fab762b1d/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=094db6beb9cea0aedbde326f271d2b6fab762b1d", "patch": "@@ -177,13 +177,6 @@ struct nvptx_thread\n   struct ptx_device *ptx_dev;\n };\n \n-struct map\n-{\n-  int     async;\n-  size_t  size;\n-  char    mappings[0];\n-};\n-\n static bool\n map_init (struct ptx_stream *s)\n {\n@@ -217,16 +210,12 @@ map_fini (struct ptx_stream *s)\n static void\n map_pop (struct ptx_stream *s)\n {\n-  struct map *m;\n-\n   assert (s != NULL);\n   assert (s->h_next);\n   assert (s->h_prev);\n   assert (s->h_tail);\n \n-  m = s->h_tail;\n-\n-  s->h_tail += m->size;\n+  s->h_tail = s->h_next;\n \n   if (s->h_tail >= s->h_end)\n     s->h_tail = s->h_begin + (int) (s->h_tail - s->h_end);\n@@ -244,37 +233,27 @@ map_pop (struct ptx_stream *s)\n }\n \n static void\n-map_push (struct ptx_stream *s, int async, size_t size, void **h, void **d)\n+map_push (struct ptx_stream *s, size_t size, void **h, void **d)\n {\n   int left;\n   int offset;\n-  struct map *m;\n \n   assert (s != NULL);\n \n   left = s->h_end - s->h_next;\n-  size += sizeof (struct map);\n \n   assert (s->h_prev);\n   assert (s->h_next);\n \n   if (size >= left)\n     {\n-      m = s->h_prev;\n-      m->size += left;\n-      s->h_next = s->h_begin;\n-\n-      if (s->h_next + size > s->h_end)\n-\tGOMP_PLUGIN_fatal (\"unable to push map\");\n+      assert (s->h_next == s->h_prev);\n+      s->h_next = s->h_prev = s->h_tail = s->h_begin;\n     }\n \n   assert (s->h_next);\n \n-  m = s->h_next;\n-  m->async = async;\n-  m->size = size;\n-\n-  offset = (void *)&m->mappings[0] - s->h;\n+  offset = s->h_next - s->h;\n \n   *d = (void *)(s->d + offset);\n   *h = (void *)(s->h + offset);\n@@ -1210,7 +1189,7 @@ nvptx_exec (void (*fn), size_t mapnum, void **hostaddrs, void **devaddrs,\n   /* This reserves a chunk of a pre-allocated page of memory mapped on both\n      the host and the device. HP is a host pointer to the new chunk, and DP is\n      the corresponding device pointer.  */\n-  map_push (dev_str, async, mapnum * sizeof (void *), &hp, &dp);\n+  map_push (dev_str, mapnum * sizeof (void *), &hp, &dp);\n \n   GOMP_PLUGIN_debug (0, \"  %s: prepare mappings\\n\", __FUNCTION__);\n "}, {"sha": "593e7d4d553bb08545ed1a8fcf592f0fc8ca63f2", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/mapping-1.c", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094db6beb9cea0aedbde326f271d2b6fab762b1d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fmapping-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094db6beb9cea0aedbde326f271d2b6fab762b1d/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fmapping-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fmapping-1.c?ref=094db6beb9cea0aedbde326f271d2b6fab762b1d", "patch": "@@ -0,0 +1,63 @@\n+/* { dg-do run } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <unistd.h>\n+\n+/* Exercise the kernel launch argument mapping.  */\n+\n+int\n+main (int argc, char **argv)\n+{\n+  int a[256], b[256], c[256], d[256], e[256], f[256];\n+  int i;\n+  int n;\n+\n+  /* 48 is the size of the mappings for the first parallel construct.  */\n+  n = sysconf (_SC_PAGESIZE) / 48 - 1;\n+\n+  i = 0;\n+\n+  for (i = 0; i < n; i++)\n+    {\n+      #pragma acc parallel copy (a, b, c, d)\n+\t{\n+\t  int j;\n+\n+\t  for (j = 0; j < 256; j++)\n+\t    {\n+\t      a[j] = j;\n+\t      b[j] = j;\n+\t      c[j] = j;\n+\t      d[j] = j;\n+\t    }\n+\t}\n+    }\n+\n+#pragma acc parallel copy (a, b, c, d, e, f)\n+  {\n+    int j;\n+\n+    for (j = 0; j < 256; j++)\n+      {\n+\ta[j] = j;\n+\tb[j] = j;\n+\tc[j] = j;\n+\td[j] = j;\n+\te[j] = j;\n+\tf[j] = j;\n+      }\n+  }\n+\n+  for (i = 0; i < 256; i++)\n+   {\n+     if (a[i] != i) abort();\n+     if (b[i] != i) abort();\n+     if (c[i] != i) abort();\n+     if (d[i] != i) abort();\n+     if (e[i] != i) abort();\n+     if (f[i] != i) abort();\n+   }\n+\n+  exit (0);\n+}"}]}