{"sha": "a5e3dd5d2e0073f585fa97d6b961752432c3d122", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVlM2RkNWQyZTAwNzNmNTg1ZmE5N2Q2Yjk2MTc1MjQzMmMzZDEyMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-02-11T17:16:40Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-02-11T17:16:40Z"}, "message": "regalloc/debug: fix buggy print_hard_reg_set\n\n* ira-conflicts.c (print_hard_reg_set): Correct output for sets\nincluding FIRST_PSEUDO_REGISTER - 1.\n* ira-color.c (print_hard_reg_set): Ditto.\n\nBefore, for a target with FIRST_PSEUDO_REGISTER 20, you'd get \"19-18\"\nfor (1<<19).  For (1<<18)|(1<<19), you'd get \"18\".\n\nI was using ira-conflicts.c:print_hard_reg_set with a local\npatch to gdbinit.in in a debug-session, and noticed the\nerroneous output.  I see there's an almost identical function in\nira-color.c and on top of that, there's another function by the\nsame name and with similar semantics in sel-sched-dump.c, but\nthe last one doesn't try to print ranges.", "tree": {"sha": "4b74cbfe4e786b900513a0e9c6a27e81fc14a10e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b74cbfe4e786b900513a0e9c6a27e81fc14a10e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5e3dd5d2e0073f585fa97d6b961752432c3d122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e3dd5d2e0073f585fa97d6b961752432c3d122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e3dd5d2e0073f585fa97d6b961752432c3d122", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e3dd5d2e0073f585fa97d6b961752432c3d122/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0e05505ffd58d3d0ed9c22e0cc6b954e25c8b1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e05505ffd58d3d0ed9c22e0cc6b954e25c8b1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e05505ffd58d3d0ed9c22e0cc6b954e25c8b1b"}], "stats": {"total": 50, "additions": 30, "deletions": 20}, "files": [{"sha": "7ddb6c301d780dce12256feed81f2861a1e2d122", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e3dd5d2e0073f585fa97d6b961752432c3d122/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e3dd5d2e0073f585fa97d6b961752432c3d122/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5e3dd5d2e0073f585fa97d6b961752432c3d122", "patch": "@@ -1,3 +1,9 @@\n+2020-02-11  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* ira-conflicts.c (print_hard_reg_set): Correct output for sets\n+\tincluding FIRST_PSEUDO_REGISTER - 1.\n+\t* ira-color.c (print_hard_reg_set): Ditto.\n+\n 2020-02-11  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n \n \t* config/arm/arm-builtins.c (enum arm_type_qualifiers): "}, {"sha": "0bcc80463b0cf6df2d7804abee776dc818ae0e7d", "filename": "gcc/ira-color.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e3dd5d2e0073f585fa97d6b961752432c3d122/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e3dd5d2e0073f585fa97d6b961752432c3d122/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=a5e3dd5d2e0073f585fa97d6b961752432c3d122", "patch": "@@ -480,24 +480,26 @@ first_common_ancestor_node (allocno_hard_regs_node_t first,\n static void\n print_hard_reg_set (FILE *f, HARD_REG_SET set, bool new_line_p)\n {\n-  int i, start;\n+  int i, start, end;\n \n-  for (start = -1, i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n+  for (start = end = -1, i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n     {\n-      if (TEST_HARD_REG_BIT (set, i))\n+      bool reg_included = TEST_HARD_REG_BIT (set, i);\n+\n+      if (reg_included)\n \t{\n-\t  if (i == 0 || ! TEST_HARD_REG_BIT (set, i - 1))\n+\t  if (start == -1)\n \t    start = i;\n+\t  end = i;\n \t}\n-      if (start >= 0\n-\t  && (i == FIRST_PSEUDO_REGISTER - 1 || ! TEST_HARD_REG_BIT (set, i)))\n+      if (start >= 0 && (!reg_included || i == FIRST_PSEUDO_REGISTER - 1))\n \t{\n-\t  if (start == i - 1)\n+\t  if (start == end)\n \t    fprintf (f, \" %d\", start);\n-\t  else if (start == i - 2)\n-\t    fprintf (f, \" %d %d\", start, start + 1);\n+\t  else if (start == end + 1)\n+\t    fprintf (f, \" %d %d\", start, end);\n \t  else\n-\t    fprintf (f, \" %d-%d\", start, i - 1);\n+\t    fprintf (f, \" %d-%d\", start, end);\n \t  start = -1;\n \t}\n     }"}, {"sha": "0220e725e555aa8fa1caf7bdce878289d3317118", "filename": "gcc/ira-conflicts.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e3dd5d2e0073f585fa97d6b961752432c3d122/gcc%2Fira-conflicts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e3dd5d2e0073f585fa97d6b961752432c3d122/gcc%2Fira-conflicts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-conflicts.c?ref=a5e3dd5d2e0073f585fa97d6b961752432c3d122", "patch": "@@ -611,25 +611,27 @@ build_conflicts (void)\n static void\n print_hard_reg_set (FILE *file, const char *title, HARD_REG_SET set)\n {\n-  int i, start;\n+  int i, start, end;\n \n   fputs (title, file);\n-  for (start = -1, i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n+  for (start = end = -1, i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n     {\n-      if (TEST_HARD_REG_BIT (set, i))\n+      bool reg_included = TEST_HARD_REG_BIT (set, i);\n+\n+      if (reg_included)\n \t{\n-\t  if (i == 0 || ! TEST_HARD_REG_BIT (set, i - 1))\n+\t  if (start == -1)\n \t    start = i;\n+\t  end = i;\n \t}\n-      if (start >= 0\n-\t  && (i == FIRST_PSEUDO_REGISTER - 1 || ! TEST_HARD_REG_BIT (set, i)))\n+      if (start >= 0 && (!reg_included || i == FIRST_PSEUDO_REGISTER - 1))\n \t{\n-\t  if (start == i - 1)\n+\t  if (start == end)\n \t    fprintf (file, \" %d\", start);\n-\t  else if (start == i - 2)\n-\t    fprintf (file, \" %d %d\", start, start + 1);\n+\t  else if (start == end + 1)\n+\t    fprintf (file, \" %d %d\", start, end);\n \t  else\n-\t    fprintf (file, \" %d-%d\", start, i - 1);\n+\t    fprintf (file, \" %d-%d\", start, end);\n \t  start = -1;\n \t}\n     }"}]}