{"sha": "0e1e07728074a7162c8173abd10bc32e814ea254", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUxZTA3NzI4MDc0YTcxNjJjODE3M2FiZDEwYmMzMmU4MTRlYTI1NA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-01-25T15:18:08Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-07T09:28:54Z"}, "message": "[Ada] Minor efficiency improvement in containers\n\ngcc/ada/\n\n\t* libgnat/a-conhel.adb (TC_Check): Move the Assert into the\n\t'if'.", "tree": {"sha": "9dc5101544554b877ef1135a9b330834b85cfdfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dc5101544554b877ef1135a9b330834b85cfdfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e1e07728074a7162c8173abd10bc32e814ea254", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1e07728074a7162c8173abd10bc32e814ea254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e1e07728074a7162c8173abd10bc32e814ea254", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1e07728074a7162c8173abd10bc32e814ea254/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f015e33fc4cac3ee7f11aceb08f5d76b1b588111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f015e33fc4cac3ee7f11aceb08f5d76b1b588111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f015e33fc4cac3ee7f11aceb08f5d76b1b588111"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "e7d82ac1636df0f8f2e3d68c1c97df12c38ad92a", "filename": "gcc/ada/libgnat/a-conhel.adb", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1e07728074a7162c8173abd10bc32e814ea254/gcc%2Fada%2Flibgnat%2Fa-conhel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1e07728074a7162c8173abd10bc32e814ea254/gcc%2Fada%2Flibgnat%2Fa-conhel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-conhel.adb?ref=0e1e07728074a7162c8173abd10bc32e814ea254", "patch": "@@ -122,17 +122,20 @@ package body Ada.Containers.Helpers is\n \n       procedure TC_Check (T_Counts : Tamper_Counts) is\n       begin\n-         if T_Check and then T_Counts.Busy > 0 then\n-            raise Program_Error with\n-              \"attempt to tamper with cursors\";\n+         if T_Check then\n+            if T_Counts.Busy > 0 then\n+               raise Program_Error with\n+                 \"attempt to tamper with cursors\";\n+            end if;\n+\n+            --  The lock status (which monitors \"element tampering\") always\n+            --  implies that the busy status (which monitors \"cursor\n+            --  tampering\") is set too; this is a representation invariant.\n+            --  Thus if the busy count is zero, then the lock count\n+            --  must also be zero.\n+\n+            pragma Assert (T_Counts.Lock = 0);\n          end if;\n-\n-         --  The lock status (which monitors \"element tampering\") always\n-         --  implies that the busy status (which monitors \"cursor tampering\")\n-         --  is set too; this is a representation invariant. Thus if the busy\n-         --  bit is not set, then the lock bit must not be set either.\n-\n-         pragma Assert (T_Counts.Lock = 0);\n       end TC_Check;\n \n       --------------"}]}