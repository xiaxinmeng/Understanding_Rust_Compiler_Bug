{"sha": "e42bcfa38cc3f3315d10f448675807eee860ae3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyYmNmYTM4Y2MzZjMzMTVkMTBmNDQ4Njc1ODA3ZWVlODYwYWUzYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-05T14:30:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-05T14:30:30Z"}, "message": "[multiple changes]\n\n2011-09-05  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* s-finmas.adb (Set_Finalize_Address): Explain the reason\n\tfor the synchronization. Move the test for null from\n\ts-stposu.Allocate_Any_Controlled to this routine since the check\n\tneeds to be protected too.\n\t(Set_Heterogeneous_Finalize_Address): Explain the reason for the\n\tsynchronization code.\n\t* s-finmas.ads (Set_Heterogeneous_Finalize_Address): Add comment\n\texplaining the context in which this routine is used.\n\t* s-stposu.adb (Allocate_Any_Controlled): Move the test for null\n\tto s-finmas.Set_Finalize_Address.\n\n2011-09-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* einfo.ads: Document that itypes have no parent field.\n\n2011-09-05  Robert Dewar  <dewar@adacore.com>\n\n\t* rtsfind.adb (Check_CRT): Check for overloaded entity\n\t* rtsfind.ads: Document that entities to be found by rtsfind\n\tcannot be overloaded\n\t* s-taenca.adb, s-tasren.adb, s-tpobop.adb, s-tpoben.ads, s-tpoben.adb\n\t(Lock_Entries_With_Status): New name for Lock_Entries with two\n\targuments (changed to meet rtsfind no overloading rule).\n\nFrom-SVN: r178551", "tree": {"sha": "646f5b0a10883cd181e5420ad3f2d7169d6b0ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/646f5b0a10883cd181e5420ad3f2d7169d6b0ac8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e42bcfa38cc3f3315d10f448675807eee860ae3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42bcfa38cc3f3315d10f448675807eee860ae3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42bcfa38cc3f3315d10f448675807eee860ae3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42bcfa38cc3f3315d10f448675807eee860ae3c/comments", "author": null, "committer": null, "parents": [{"sha": "544e7c17b592df04a71809db899725dc502103c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544e7c17b592df04a71809db899725dc502103c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/544e7c17b592df04a71809db899725dc502103c9"}], "stats": {"total": 133, "additions": 102, "deletions": 31}, "files": [{"sha": "e80bae811dbd05a9deaf8a3a9883b38a3fc55df2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -1,3 +1,29 @@\n+2011-09-05  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* s-finmas.adb (Set_Finalize_Address): Explain the reason\n+\tfor the synchronization. Move the test for null from\n+\ts-stposu.Allocate_Any_Controlled to this routine since the check\n+\tneeds to be protected too.\n+\t(Set_Heterogeneous_Finalize_Address): Explain the reason for the\n+\tsynchronization code.\n+\t* s-finmas.ads (Set_Heterogeneous_Finalize_Address): Add comment\n+\texplaining the context in which this routine is used.\n+\t* s-stposu.adb (Allocate_Any_Controlled): Move the test for null\n+\tto s-finmas.Set_Finalize_Address.\n+\n+2011-09-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.ads: Document that itypes have no parent field.\n+\n+2011-09-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* rtsfind.adb (Check_CRT): Check for overloaded entity\n+\t* rtsfind.ads: Document that entities to be found by rtsfind\n+\tcannot be overloaded\n+\t* s-taenca.adb, s-tasren.adb, s-tpobop.adb, s-tpoben.ads, s-tpoben.adb\n+\t(Lock_Entries_With_Status): New name for Lock_Entries with two\n+\targuments (changed to meet rtsfind no overloading rule).\n+\n 2011-09-05  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* s-finmas.adb (Set_Finalize_Address (Address,"}, {"sha": "001e49b032a5ca4fe928874188a845be4437b196", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -442,6 +442,11 @@ package Einfo is\n --       declaration, the associated_node_for_itype is the discriminant\n --       specification. For an access parameter it is the enclosing subprogram\n --       declaration.\n+--\n+--       Itypes have no explicit declaration, and therefore are not attached to\n+--       the tree: their Parent field is always empty. The Associated_Node_For_\n+--       Itype is the only way to determine the construct that leads to the\n+--       creation of a given itype entity.\n \n --    Associated_Storage_Pool (Node22) [root type only]\n --       Present in simple and general access type entities. References the"}, {"sha": "459f886dcc9f2a2435b9a8cf1f342a2e367eadc9", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -135,7 +135,7 @@ package body Rtsfind is\n    --  Check entity Eid to ensure that configurable run-time restrictions are\n    --  met. May generate an error message (if RTE_Available_Call is false) and\n    --  raise RE_Not_Available if entity E does not exist (e.g. Eid is Empty).\n-   --  Above documentation not clear ???\n+   --  Also check that entity is not overloaded.\n \n    procedure Entity_Not_Defined (Id : RE_Id);\n    --  Outputs error messages for an entity that is not defined in the run-time\n@@ -233,6 +233,22 @@ package body Rtsfind is\n             raise RE_Not_Available;\n          end if;\n \n+         --  Check entity is not overloaded, checking for special exceptions\n+\n+         if Has_Homonym (Eid)\n+           and then E /= RE_Save_Occurrence\n+         then\n+            Set_Standard_Error;\n+            Write_Str (\"Run-time configuration error (\");\n+            Write_Str (\"rtsfind entity \"\"\");\n+            Get_Decoded_Name_String (Chars (Eid));\n+            Set_Casing (Mixed_Case);\n+            Write_Str (Name_Buffer (1 .. Name_Len));\n+            Write_Str (\"\"\" is overloaded)\");\n+            Write_Eol;\n+            raise Unrecoverable_Error;\n+         end if;\n+\n          --  Otherwise entity is accessible\n \n          return Eid;\n@@ -414,8 +430,8 @@ package body Rtsfind is\n          return E1 = E2;\n       end if;\n \n-      --  If the unit containing E is not loaded, we already know that\n-      --  the entity we have cannot have come from this unit.\n+      --  If the unit containing E is not loaded, we already know that the\n+      --  entity we have cannot have come from this unit.\n \n       E_Unit_Name := Get_Unit_Name (RE_Unit_Table (E));\n "}, {"sha": "7b772d021c460613d68f3c26c4be8b91bb6f51bd", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -498,6 +498,14 @@ package Rtsfind is\n    --  value is required syntactically, but no real entry is required or\n    --  needed. Use of this value will cause a fatal error in an RTE call.\n \n+   --  Note that under no circumstances can any of these entities be defined\n+   --  more than once in a given package, i.e. no overloading is allowed for\n+   --  any entity that is found using rtsfind. A fatal error is given if this\n+   --  rule is violated. The one exception is for Save_Occurrence, where the\n+   --  RM mandates the overloading. In this case, the compiler only uses the\n+   --  procedure, not the function, and the procedure must come first so that\n+   --  the compiler finds it and not the function.\n+\n    type RE_Id is (\n \n      RE_Null,"}, {"sha": "c663988f43a33c99782afc2ed62e9259b0229d94", "filename": "gcc/ada/s-finmas.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-finmas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-finmas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finmas.adb?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -463,8 +463,17 @@ package body System.Finalization_Masters is\n       Fin_Addr_Ptr : Finalize_Address_Ptr)\n    is\n    begin\n+      --  TSS primitive Finalize_Address is set at the point of allocation,\n+      --  either through Allocate_Any_Controlled or through this routine.\n+      --  Since multiple tasks can allocate on the same finalization master,\n+      --  access to this attribute must be protected.\n+\n       Lock_Task.all;\n-      Master.Finalize_Address := Fin_Addr_Ptr;\n+\n+      if Master.Finalize_Address = null then\n+         Master.Finalize_Address := Fin_Addr_Ptr;\n+      end if;\n+\n       Unlock_Task.all;\n    end Set_Finalize_Address;\n \n@@ -477,6 +486,9 @@ package body System.Finalization_Masters is\n       Fin_Addr_Ptr : Finalize_Address_Ptr)\n    is\n    begin\n+      --  Protected access is required in this case because\n+      --  Finalize_Address_Table is a global data structure.\n+\n       Lock_Task.all;\n       Finalize_Address_Table.Set (Obj, Fin_Addr_Ptr);\n       Unlock_Task.all;"}, {"sha": "bb9ff5bdc3c9eacf091b28858953d20acea93e65", "filename": "gcc/ada/s-finmas.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-finmas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-finmas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finmas.ads?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -124,7 +124,10 @@ package System.Finalization_Masters is\n    procedure Set_Heterogeneous_Finalize_Address\n      (Obj          : System.Address;\n       Fin_Addr_Ptr : Finalize_Address_Ptr);\n-   --  Add a relation pair object - Finalize_Address to the internal hash table\n+   --  Add a relation pair object - Finalize_Address to the internal hash\n+   --  table. This is done in the context of allocation on a heterogeneous\n+   --  finalization master where a single master services multiple anonymous\n+   --  access-to-controlled types.\n \n    procedure Set_Is_Heterogeneous (Master : in out Finalization_Master);\n    --  Mark the master as being a heterogeneous collection of objects"}, {"sha": "b8ad53d613b826408bc07da7d8716c99a5d14875", "filename": "gcc/ada/s-stposu.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-stposu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-stposu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.adb?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -276,9 +276,7 @@ package body System.Storage_Pools.Subpools is\n          --    3) Most cases of anonymous access types usage\n \n          if Master.Is_Homogeneous then\n-            if Finalize_Address (Master.all) = null then\n-               Set_Finalize_Address (Master.all, Fin_Address);\n-            end if;\n+            Set_Finalize_Address (Master.all, Fin_Address);\n \n          --  Heterogeneous masters service the following:\n "}, {"sha": "b1e9b640ba87aab1ba95f77cff2d94f0bf91c9a8", "filename": "gcc/ada/s-taenca.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-taenca.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-taenca.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taenca.adb?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2010, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -216,7 +216,7 @@ package body System.Tasking.Entry_Calls is\n                   STPO.Unlock_RTS;\n                end if;\n \n-               Lock_Entries (Test_PO, Ceiling_Violation);\n+               Lock_Entries_With_Status (Test_PO, Ceiling_Violation);\n \n                --  ???\n "}, {"sha": "4034e61af17e3bc8bf66526aa4577ad97235e337", "filename": "gcc/ada/s-tasren.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasren.adb?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -628,7 +628,7 @@ package body System.Tasking.Rendezvous is\n                --  Requeue to a protected entry\n \n                Called_PO := POE.To_Protection (Entry_Call.Called_PO);\n-               STPE.Lock_Entries (Called_PO, Ceiling_Violation);\n+               STPE.Lock_Entries_With_Status (Called_PO, Ceiling_Violation);\n \n                if Ceiling_Violation then\n                   pragma Assert (Ex = Ada.Exceptions.Null_Id);"}, {"sha": "88527315e4268a992da4cae1128b76b1c9fa90e3", "filename": "gcc/ada/s-tpoben.adb", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-tpoben.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-tpoben.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpoben.adb?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                               B o d y                                    --\n --                                                                          --\n---          Copyright (C) 1998-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -261,7 +261,22 @@ package body System.Tasking.Protected_Objects.Entries is\n    -- Lock_Entries --\n    ------------------\n \n-   procedure Lock_Entries\n+   procedure Lock_Entries (Object : Protection_Entries_Access) is\n+      Ceiling_Violation : Boolean;\n+\n+   begin\n+      Lock_Entries_With_Status (Object, Ceiling_Violation);\n+\n+      if Ceiling_Violation then\n+         raise Program_Error with \"Ceiling Violation\";\n+      end if;\n+   end Lock_Entries;\n+\n+   ------------------------------\n+   -- Lock_Entries_With_Status --\n+   ------------------------------\n+\n+   procedure Lock_Entries_With_Status\n      (Object            : Protection_Entries_Access;\n       Ceiling_Violation : out Boolean)\n    is\n@@ -316,19 +331,7 @@ package body System.Tasking.Protected_Objects.Entries is\n               Self_Id.Common.Protected_Action_Nesting + 1;\n          end;\n       end if;\n-\n-   end Lock_Entries;\n-\n-   procedure Lock_Entries (Object : Protection_Entries_Access) is\n-      Ceiling_Violation : Boolean;\n-\n-   begin\n-      Lock_Entries (Object, Ceiling_Violation);\n-\n-      if Ceiling_Violation then\n-         raise Program_Error with \"Ceiling Violation\";\n-      end if;\n-   end Lock_Entries;\n+   end Lock_Entries_With_Status;\n \n    ----------------------------\n    -- Lock_Read_Only_Entries --"}, {"sha": "ce7045cf56e2a96fb4d5237d7a97c26fd4871b0f", "filename": "gcc/ada/s-tpoben.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-tpoben.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-tpoben.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpoben.ads?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -183,7 +183,7 @@ package System.Tasking.Protected_Objects.Entries is\n    --  Unlock has been made by the caller. Program_Error is raised in case of\n    --  ceiling violation.\n \n-   procedure Lock_Entries\n+   procedure Lock_Entries_With_Status\n      (Object            : Protection_Entries_Access;\n       Ceiling_Violation : out Boolean);\n    --  Same as above, but return the ceiling violation status instead of"}, {"sha": "171c771ed61aa6d50a1ef9125af4f27edbb20473", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42bcfa38cc3f3315d10f448675807eee860ae3c/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=e42bcfa38cc3f3315d10f448675807eee860ae3c", "patch": "@@ -568,7 +568,7 @@ package body System.Tasking.Protected_Objects.Operations is\n       --  where abort is already deferred.\n \n       Initialization.Defer_Abort_Nestable (Self_ID);\n-      Lock_Entries (Object, Ceiling_Violation);\n+      Lock_Entries_With_Status (Object, Ceiling_Violation);\n \n       if Ceiling_Violation then\n \n@@ -722,7 +722,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n             --  Requeue is to different PO\n \n-            Lock_Entries (New_Object, Ceiling_Violation);\n+            Lock_Entries_With_Status (New_Object, Ceiling_Violation);\n \n             if Ceiling_Violation then\n                Object.Call_In_Progress := null;\n@@ -966,7 +966,7 @@ package body System.Tasking.Protected_Objects.Operations is\n       end if;\n \n       Initialization.Defer_Abort_Nestable (Self_Id);\n-      Lock_Entries (Object, Ceiling_Violation);\n+      Lock_Entries_With_Status (Object, Ceiling_Violation);\n \n       if Ceiling_Violation then\n          Initialization.Undefer_Abort (Self_Id);"}]}