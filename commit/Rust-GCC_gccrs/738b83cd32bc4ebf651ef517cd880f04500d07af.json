{"sha": "738b83cd32bc4ebf651ef517cd880f04500d07af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM4YjgzY2QzMmJjNGViZjY1MWVmNTE3Y2Q4ODBmMDQ1MDBkMDdhZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-09-26T09:16:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-09-26T09:16:54Z"}, "message": "[Ada] Set Current_Error_Node directly\n\nThis changes gigi to set Current_Error_Node directly, which should\nresult in a more robust error handling.\n\n2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* gcc-interface/gigi.h (error_gnat_node): Delete.\n\t* gcc-interface/trans.c (error_gnat_node): Likewise.\n\t(gigi): Replace it with Current_Error_Node.\n\t(gnat_to_gnu): Likewise.\n\t* gcc-interface/utils.c (rest_of_subprog_body_compilation):\n\tLikewise.\n\t* gcc-interface/misc.c (internal_error_function): Do not set it.\n\nFrom-SVN: r264607", "tree": {"sha": "2a5a822894fcb5b28e5cbe09f5dced2ca199f022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a5a822894fcb5b28e5cbe09f5dced2ca199f022"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/738b83cd32bc4ebf651ef517cd880f04500d07af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738b83cd32bc4ebf651ef517cd880f04500d07af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/738b83cd32bc4ebf651ef517cd880f04500d07af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738b83cd32bc4ebf651ef517cd880f04500d07af/comments", "author": null, "committer": null, "parents": [{"sha": "3b9d159401751981118415b472dd0bdb68e862f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9d159401751981118415b472dd0bdb68e862f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b9d159401751981118415b472dd0bdb68e862f6"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "d6d46eed0b07167f289aaf8032e5d6d4a9b7619c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=738b83cd32bc4ebf651ef517cd880f04500d07af", "patch": "@@ -1,3 +1,13 @@\n+2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/gigi.h (error_gnat_node): Delete.\n+\t* gcc-interface/trans.c (error_gnat_node): Likewise.\n+\t(gigi): Replace it with Current_Error_Node.\n+\t(gnat_to_gnu): Likewise.\n+\t* gcc-interface/utils.c (rest_of_subprog_body_compilation):\n+\tLikewise.\n+\t* gcc-interface/misc.c (internal_error_function): Do not set it.\n+\n 2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Adjust"}, {"sha": "3029732603a4c1ddb8178207f836fa24d5f73a58", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=738b83cd32bc4ebf651ef517cd880f04500d07af", "patch": "@@ -214,9 +214,6 @@ extern void destroy_gnat_decl (void);\n /* Highest number in the front-end node table.  */\n extern int max_gnat_nodes;\n \n-/* Current node being treated, in case abort called.  */\n-extern Node_Id error_gnat_node;\n-\n /* True when gigi is being called on an analyzed but unexpanded\n    tree, and the only purpose of the call is to properly annotate\n    types with representation information.  */"}, {"sha": "16a9d2ccf8e0a3745499721bdbe46bbbe1077aa3", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=738b83cd32bc4ebf651ef517cd880f04500d07af", "patch": "@@ -347,7 +347,6 @@ internal_error_function (diagnostic_context *context, const char *msgid,\n   sp_loc.Bounds = &temp_loc;\n   sp_loc.Array = loc;\n \n-  Current_Error_Node = error_gnat_node;\n   Compiler_Abort (sp, sp_loc, true);\n }\n "}, {"sha": "12f6a87437fb0036ef878f4b6e48d939daa200cb", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=738b83cd32bc4ebf651ef517cd880f04500d07af", "patch": "@@ -86,9 +86,6 @@ struct List_Header *List_Headers_Ptr;\n /* Highest number in the front-end node table.  */\n int max_gnat_nodes;\n \n-/* Current node being treated, in case abort called.  */\n-Node_Id error_gnat_node;\n-\n /* True when gigi is being called on an analyzed but unexpanded\n    tree, and the only purpose of the call is to properly annotate\n    types with representation information.  */\n@@ -719,7 +716,7 @@ gigi (Node_Id gnat_root,\n   destroy_gnat_utils ();\n \n   /* We cannot track the location of errors past this point.  */\n-  error_gnat_node = Empty;\n+  Current_Error_Node = Empty;\n }\n \f\n /* Return a subprogram decl corresponding to __gnat_rcheck_xx for the given\n@@ -5910,7 +5907,7 @@ gnat_to_gnu (Node_Id gnat_node)\n   bool sync = false;\n \n   /* Save node number for error message and set location information.  */\n-  error_gnat_node = gnat_node;\n+  Current_Error_Node = gnat_node;\n   Sloc_to_locus (Sloc (gnat_node), &input_location);\n \n   /* If we are only annotating types and this node is a statement, return"}, {"sha": "73ab562bbb1fe333ed6a2dcdf19efa375cc9cfdc", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738b83cd32bc4ebf651ef517cd880f04500d07af/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=738b83cd32bc4ebf651ef517cd880f04500d07af", "patch": "@@ -3389,7 +3389,7 @@ void\n rest_of_subprog_body_compilation (tree subprog_decl)\n {\n   /* We cannot track the location of errors past this point.  */\n-  error_gnat_node = Empty;\n+  Current_Error_Node = Empty;\n \n   /* If we're only annotating types, don't actually compile this function.  */\n   if (type_annotate_only)"}]}