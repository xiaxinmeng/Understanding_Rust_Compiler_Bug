{"sha": "cfd65e8d5299a7cf7d2ecd92b0e24ea4cfb697d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZkNjVlOGQ1Mjk5YTdjZjdkMmVjZDkyYjBlMjRlYTRjZmI2OTdkOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-06T12:05:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-06T12:05:06Z"}, "message": "phiopt: Use gphi *phi instead of gimple *phi some more\n\nVarious functions in phiopt are also called with a gphi * but use\ngimple * argument for it.\n\n2021-05-06  Jakub Jelinek  <jakub@redhat.com>\n\n\t* tree-ssa-phiopt.c (value_replacement, minmax_replacement,\n\tabs_replacement, xor_replacement,\n\tcond_removal_in_popcount_clz_ctz_pattern,\n\treplace_phi_edge_with_variable): Change type of phi argument from\n\tgimple * to gphi *.", "tree": {"sha": "0627407acef0356866c910aa4227933a31a8f5c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0627407acef0356866c910aa4227933a31a8f5c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfd65e8d5299a7cf7d2ecd92b0e24ea4cfb697d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfd65e8d5299a7cf7d2ecd92b0e24ea4cfb697d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfd65e8d5299a7cf7d2ecd92b0e24ea4cfb697d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfd65e8d5299a7cf7d2ecd92b0e24ea4cfb697d9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1ac9ffb5a7f44b2e2633b7265c21ce803c8e854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ac9ffb5a7f44b2e2633b7265c21ce803c8e854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ac9ffb5a7f44b2e2633b7265c21ce803c8e854"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "e0a41d41fbafc1b2ff070dfddd562852921ce89d", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfd65e8d5299a7cf7d2ecd92b0e24ea4cfb697d9/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfd65e8d5299a7cf7d2ecd92b0e24ea4cfb697d9/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=cfd65e8d5299a7cf7d2ecd92b0e24ea4cfb697d9", "patch": "@@ -57,23 +57,23 @@ static bool conditional_replacement (basic_block, basic_block,\n static gphi *factor_out_conditional_conversion (edge, edge, gphi *, tree, tree,\n \t\t\t\t\t\tgimple *);\n static int value_replacement (basic_block, basic_block,\n-\t\t\t      edge, edge, gimple *, tree, tree);\n+\t\t\t      edge, edge, gphi *, tree, tree);\n static bool minmax_replacement (basic_block, basic_block,\n-\t\t\t\tedge, edge, gimple *, tree, tree);\n+\t\t\t\tedge, edge, gphi *, tree, tree);\n static bool abs_replacement (basic_block, basic_block,\n-\t\t\t     edge, edge, gimple *, tree, tree);\n+\t\t\t     edge, edge, gphi *, tree, tree);\n static bool xor_replacement (basic_block, basic_block,\n-\t\t\t     edge, edge, gimple *, tree, tree);\n+\t\t\t     edge, edge, gphi *, tree, tree);\n static bool spaceship_replacement (basic_block, basic_block,\n \t\t\t\t   edge, edge, gphi *, tree, tree);\n static bool cond_removal_in_popcount_clz_ctz_pattern (basic_block, basic_block,\n-\t\t\t\t\t\t      edge, edge, gimple *,\n+\t\t\t\t\t\t      edge, edge, gphi *,\n \t\t\t\t\t\t      tree, tree);\n static bool cond_store_replacement (basic_block, basic_block, edge, edge,\n \t\t\t\t    hash_set<tree> *);\n static bool cond_if_else_store_replacement (basic_block, basic_block, basic_block);\n static hash_set<tree> * get_non_trapping ();\n-static void replace_phi_edge_with_variable (basic_block, edge, gimple *, tree);\n+static void replace_phi_edge_with_variable (basic_block, edge, gphi *, tree);\n static void hoist_adjacent_loads (basic_block, basic_block,\n \t\t\t\t  basic_block, basic_block);\n static bool gate_hoist_loads (void);\n@@ -389,7 +389,7 @@ tree_ssa_phiopt_worker (bool do_store_elim, bool do_hoist_loads, bool early_p)\n \n static void\n replace_phi_edge_with_variable (basic_block cond_block,\n-\t\t\t\tedge e, gimple *phi, tree new_tree)\n+\t\t\t\tedge e, gphi *phi, tree new_tree)\n {\n   basic_block bb = gimple_bb (phi);\n   basic_block block_to_remove;\n@@ -1113,8 +1113,7 @@ absorbing_element_p (tree_code code, tree arg, bool right, tree rval)\n \n static int\n value_replacement (basic_block cond_bb, basic_block middle_bb,\n-\t\t   edge e0, edge e1, gimple *phi,\n-\t\t   tree arg0, tree arg1)\n+\t\t   edge e0, edge e1, gphi *phi, tree arg0, tree arg1)\n {\n   gimple_stmt_iterator gsi;\n   gimple *cond;\n@@ -1422,8 +1421,7 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \n static bool\n minmax_replacement (basic_block cond_bb, basic_block middle_bb,\n-\t\t    edge e0, edge e1, gimple *phi,\n-\t\t    tree arg0, tree arg1)\n+\t\t    edge e0, edge e1, gphi *phi, tree arg0, tree arg1)\n {\n   tree result;\n   edge true_edge, false_edge;\n@@ -2267,7 +2265,7 @@ spaceship_replacement (basic_block cond_bb, basic_block middle_bb,\n static bool\n cond_removal_in_popcount_clz_ctz_pattern (basic_block cond_bb,\n \t\t\t\t\t  basic_block middle_bb,\n-\t\t\t\t\t  edge e1, edge e2, gimple *phi,\n+\t\t\t\t\t  edge e1, edge e2, gphi *phi,\n \t\t\t\t\t  tree arg0, tree arg1)\n {\n   gimple *cond;\n@@ -2425,7 +2423,7 @@ cond_removal_in_popcount_clz_ctz_pattern (basic_block cond_bb,\n static bool\n abs_replacement (basic_block cond_bb, basic_block middle_bb,\n \t\t edge e0 ATTRIBUTE_UNUSED, edge e1,\n-\t\t gimple *phi, tree arg0, tree arg1)\n+\t\t gphi *phi, tree arg0, tree arg1)\n {\n   tree result;\n   gassign *new_stmt;\n@@ -2549,7 +2547,7 @@ abs_replacement (basic_block cond_bb, basic_block middle_bb,\n static bool\n xor_replacement (basic_block cond_bb, basic_block middle_bb,\n \t\t edge e0 ATTRIBUTE_UNUSED, edge e1,\n-\t\t gimple *phi, tree arg0, tree arg1)\n+\t\t gphi *phi, tree arg0, tree arg1)\n {\n   if (!INTEGRAL_TYPE_P (TREE_TYPE (arg1)))\n     return false;"}]}