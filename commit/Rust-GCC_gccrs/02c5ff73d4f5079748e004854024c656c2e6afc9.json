{"sha": "02c5ff73d4f5079748e004854024c656c2e6afc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJjNWZmNzNkNGY1MDc5NzQ4ZTAwNDg1NDAyNGM2NTZjMmU2YWZjOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-09-08T18:12:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-09-08T18:12:37Z"}, "message": "decl.c (grokmethod): Rename from start_method.\n\n\t* decl.c (grokmethod): Rename from start_method.\n\t(finish_method): Remove.\n\t* cp-tree.h: Adjust.\n\t* parser.c (cp_parser_save_member_function_body): Adjust.\n\nFrom-SVN: r151526", "tree": {"sha": "2339e78f9bc818c70ec05a01489f0027d1558a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2339e78f9bc818c70ec05a01489f0027d1558a3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02c5ff73d4f5079748e004854024c656c2e6afc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c5ff73d4f5079748e004854024c656c2e6afc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02c5ff73d4f5079748e004854024c656c2e6afc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c5ff73d4f5079748e004854024c656c2e6afc9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e54529c11ba739ea0a6d7c5a2daa16680a73e14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e54529c11ba739ea0a6d7c5a2daa16680a73e14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e54529c11ba739ea0a6d7c5a2daa16680a73e14"}], "stats": {"total": 74, "additions": 12, "deletions": 62}, "files": [{"sha": "69eb4768b45414d1c5fe86e61b8b22a7428d5ae3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c5ff73d4f5079748e004854024c656c2e6afc9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c5ff73d4f5079748e004854024c656c2e6afc9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=02c5ff73d4f5079748e004854024c656c2e6afc9", "patch": "@@ -1,3 +1,10 @@\n+2009-09-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (grokmethod): Rename from start_method.\n+\t(finish_method): Remove.\n+\t* cp-tree.h: Adjust.\n+\t* parser.c (cp_parser_save_member_function_body): Adjust.\n+\n 2009-09-03  Doug Kwan  <dougkwan@google.com>\n \n \t* tree.c (cp_fix_function_decl_p): New."}, {"sha": "4f0386815d165df3a3d5a8d0a8498ad3196ba4c5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c5ff73d4f5079748e004854024c656c2e6afc9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c5ff73d4f5079748e004854024c656c2e6afc9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=02c5ff73d4f5079748e004854024c656c2e6afc9", "patch": "@@ -4418,8 +4418,7 @@ extern tree begin_function_body\t\t\t(void);\n extern void finish_function_body\t\t(tree);\n extern tree outer_curly_brace_block\t\t(tree);\n extern tree finish_function\t\t\t(int);\n-extern tree start_method\t\t\t(cp_decl_specifier_seq *, const cp_declarator *, tree);\n-extern tree finish_method\t\t\t(tree);\n+extern tree grokmethod\t\t\t\t(cp_decl_specifier_seq *, const cp_declarator *, tree);\n extern void maybe_register_incomplete_var\t(tree);\n extern void maybe_commonize_var\t\t\t(tree);\n extern void complete_vars\t\t\t(tree);"}, {"sha": "99ae9f18138d89b38aa9110667bc3cfbc86b9e6b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 55, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c5ff73d4f5079748e004854024c656c2e6afc9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c5ff73d4f5079748e004854024c656c2e6afc9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=02c5ff73d4f5079748e004854024c656c2e6afc9", "patch": "@@ -12444,8 +12444,8 @@ finish_function (int flags)\n    CHANGES TO CODE IN `grokfield'.  */\n \n tree\n-start_method (cp_decl_specifier_seq *declspecs,\n-\t      const cp_declarator *declarator, tree attrlist)\n+grokmethod (cp_decl_specifier_seq *declspecs,\n+\t    const cp_declarator *declarator, tree attrlist)\n {\n   tree fndecl = grokdeclarator (declarator, declspecs, MEMFUNCDEF, 0,\n \t\t\t\t&attrlist);\n@@ -12499,62 +12499,9 @@ start_method (cp_decl_specifier_seq *declspecs,\n \n   cp_finish_decl (fndecl, NULL_TREE, false, NULL_TREE, 0);\n \n-  /* Make a place for the parms.  */\n-  begin_scope (sk_function_parms, fndecl);\n-\n   DECL_IN_AGGR_P (fndecl) = 1;\n   return fndecl;\n }\n-\n-/* Go through the motions of finishing a function definition.\n-   We don't compile this method until after the whole class has\n-   been processed.\n-\n-   FINISH_METHOD must return something that looks as though it\n-   came from GROKFIELD (since we are defining a method, after all).\n-\n-   This is called after parsing the body of the function definition.\n-   STMTS is the chain of statements that makes up the function body.\n-\n-   DECL is the ..._DECL that `start_method' provided.  */\n-\n-tree\n-finish_method (tree decl)\n-{\n-  tree fndecl = decl;\n-  tree old_initial;\n-\n-  tree link;\n-\n-  if (decl == void_type_node)\n-    return decl;\n-\n-  old_initial = DECL_INITIAL (fndecl);\n-\n-  /* Undo the level for the parms (from start_method).\n-     This is like poplevel, but it causes nothing to be\n-     saved.  Saving information here confuses symbol-table\n-     output routines.  Besides, this information will\n-     be correctly output when this method is actually\n-     compiled.  */\n-\n-  /* Clear out the meanings of the local variables of this level;\n-     also record in each decl which block it belongs to.  */\n-\n-  for (link = current_binding_level->names; link; link = TREE_CHAIN (link))\n-    {\n-      if (DECL_NAME (link) != NULL_TREE)\n-\tpop_binding (DECL_NAME (link), link);\n-      gcc_assert (TREE_CODE (link) != FUNCTION_DECL);\n-      DECL_CONTEXT (link) = NULL_TREE;\n-    }\n-\n-  poplevel (0, 0, 0);\n-\n-  DECL_INITIAL (fndecl) = old_initial;\n-\n-  return decl;\n-}\n \f\n \n /* VAR is a VAR_DECL.  If its type is incomplete, remember VAR so that"}, {"sha": "14733b835bddf9b0f509314124954b26ebae4502", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02c5ff73d4f5079748e004854024c656c2e6afc9/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02c5ff73d4f5079748e004854024c656c2e6afc9/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=02c5ff73d4f5079748e004854024c656c2e6afc9", "patch": "@@ -18172,8 +18172,8 @@ cp_parser_save_member_function_body (cp_parser* parser,\n   cp_token *last;\n   tree fn;\n \n-  /* Create the function-declaration.  */\n-  fn = start_method (decl_specifiers, declarator, attributes);\n+  /* Create the FUNCTION_DECL.  */\n+  fn = grokmethod (decl_specifiers, declarator, attributes);\n   /* If something went badly wrong, bail out now.  */\n   if (fn == error_mark_node)\n     {\n@@ -18221,9 +18221,6 @@ cp_parser_save_member_function_body (cp_parser* parser,\n      friend templates are handled correctly.  */\n   DECL_INITIALIZED_IN_CLASS_P (fn) = 1;\n \n-  /* We're done with the inline definition.  */\n-  finish_method (fn);\n-\n   /* Add FN to the queue of functions to be parsed later.  */\n   TREE_VALUE (parser->unparsed_functions_queues)\n     = tree_cons (NULL_TREE, fn,"}]}