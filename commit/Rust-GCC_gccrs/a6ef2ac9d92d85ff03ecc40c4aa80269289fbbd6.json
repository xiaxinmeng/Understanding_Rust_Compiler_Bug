{"sha": "a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZlZjJhYzlkOTJkODVmZjAzZWNjNDBjNGFhODAyNjkyODlmYmJkNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-12T22:47:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-12T22:47:55Z"}, "message": "omp-builtins.def (BUILT_IN_GOMP_LOOP_NONMONOTONIC_RUNTIME_START, [...]): Fix up function types - remove one argument.\n\n\t* omp-builtins.def (BUILT_IN_GOMP_LOOP_NONMONOTONIC_RUNTIME_START,\n\tBUILT_IN_GOMP_LOOP_MAYBE_NONMONOTONIC_RUNTIME_START,\n\tBUILT_IN_GOMP_LOOP_ULL_NONMONOTONIC_RUNTIME_START,\n\tBUILT_IN_GOMP_LOOP_ULL_MAYBE_NONMONOTONIC_RUNTIME_START,\n\tBUILT_IN_GOMP_PARALLEL_LOOP_NONMONOTONIC_RUNTIME,\n\tBUILT_IN_GOMP_PARALLEL_LOOP_MAYBE_NONMONOTONIC_RUNTIME): Fix up\n\tfunction types - remove one argument.\n\n\t* testsuite/libgomp.c-c++-common/for-16.c: New test.\n\nFrom-SVN: r267067", "tree": {"sha": "6c920b965a377bf127357cecb4fb2e0ee962e407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c920b965a377bf127357cecb4fb2e0ee962e407"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/comments", "author": null, "committer": null, "parents": [{"sha": "77a242860085d70b33d12302ca8c729f0c060905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a242860085d70b33d12302ca8c729f0c060905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a242860085d70b33d12302ca8c729f0c060905"}], "stats": {"total": 141, "additions": 135, "deletions": 6}, "files": [{"sha": "bce500dcdde10362781b857ba9e0f0468dad4403", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6", "patch": "@@ -1,3 +1,14 @@\n+2018-12-12  Tom de Vries  <tdevries@suse.de>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-builtins.def (BUILT_IN_GOMP_LOOP_NONMONOTONIC_RUNTIME_START,\n+\tBUILT_IN_GOMP_LOOP_MAYBE_NONMONOTONIC_RUNTIME_START,\n+\tBUILT_IN_GOMP_LOOP_ULL_NONMONOTONIC_RUNTIME_START,\n+\tBUILT_IN_GOMP_LOOP_ULL_MAYBE_NONMONOTONIC_RUNTIME_START,\n+\tBUILT_IN_GOMP_PARALLEL_LOOP_NONMONOTONIC_RUNTIME,\n+\tBUILT_IN_GOMP_PARALLEL_LOOP_MAYBE_NONMONOTONIC_RUNTIME): Fix up\n+\tfunction types - remove one argument.\n+\n 2018-12-12  Martin Sebor  <msebor@redhat.com>\n \n \t* doc/extend.texi (attribute copy): Fix typos."}, {"sha": "187268097bcac465ca8ecbe2f2598e0496d8a38f", "filename": "gcc/omp-builtins.def", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/gcc%2Fomp-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/gcc%2Fomp-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-builtins.def?ref=a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6", "patch": "@@ -126,11 +126,11 @@ DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_NONMONOTONIC_GUIDED_START,\n \t\t  ATTR_NOTHROW_LEAF_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_NONMONOTONIC_RUNTIME_START,\n \t\t  \"GOMP_loop_nonmonotonic_runtime_start\",\n-\t\t  BT_FN_BOOL_LONG_LONG_LONG_LONG_LONGPTR_LONGPTR,\n+\t\t  BT_FN_BOOL_LONG_LONG_LONG_LONGPTR_LONGPTR,\n \t\t  ATTR_NOTHROW_LEAF_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_MAYBE_NONMONOTONIC_RUNTIME_START,\n \t\t  \"GOMP_loop_maybe_nonmonotonic_runtime_start\",\n-\t\t  BT_FN_BOOL_LONG_LONG_LONG_LONG_LONGPTR_LONGPTR,\n+\t\t  BT_FN_BOOL_LONG_LONG_LONG_LONGPTR_LONGPTR,\n \t\t  ATTR_NOTHROW_LEAF_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START,\n \t\t  \"GOMP_loop_ordered_static_start\",\n@@ -234,11 +234,11 @@ DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_ULL_NONMONOTONIC_GUIDED_START,\n \t\t  ATTR_NOTHROW_LEAF_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_ULL_NONMONOTONIC_RUNTIME_START,\n \t\t  \"GOMP_loop_ull_nonmonotonic_runtime_start\",\n-\t\t  BT_FN_BOOL_BOOL_ULL_ULL_ULL_ULL_ULLPTR_ULLPTR,\n+\t\t  BT_FN_BOOL_BOOL_ULL_ULL_ULL_ULLPTR_ULLPTR,\n \t\t  ATTR_NOTHROW_LEAF_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_ULL_MAYBE_NONMONOTONIC_RUNTIME_START,\n \t\t  \"GOMP_loop_ull_maybe_nonmonotonic_runtime_start\",\n-\t\t  BT_FN_BOOL_BOOL_ULL_ULL_ULL_ULL_ULLPTR_ULLPTR,\n+\t\t  BT_FN_BOOL_BOOL_ULL_ULL_ULL_ULLPTR_ULLPTR,\n \t\t  ATTR_NOTHROW_LEAF_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START,\n \t\t  \"GOMP_loop_ull_ordered_static_start\",\n@@ -349,11 +349,11 @@ DEF_GOMP_BUILTIN (BUILT_IN_GOMP_PARALLEL_LOOP_NONMONOTONIC_GUIDED,\n \t\t  ATTR_NOTHROW_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_PARALLEL_LOOP_NONMONOTONIC_RUNTIME,\n \t\t  \"GOMP_parallel_loop_nonmonotonic_runtime\",\n-\t\t  BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG_LONG_UINT,\n+\t\t  BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG_UINT,\n \t\t  ATTR_NOTHROW_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_PARALLEL_LOOP_MAYBE_NONMONOTONIC_RUNTIME,\n \t\t  \"GOMP_parallel_loop_maybe_nonmonotonic_runtime\",\n-\t\t  BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG_LONG_UINT,\n+\t\t  BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG_UINT,\n \t\t  ATTR_NOTHROW_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_LOOP_END, \"GOMP_loop_end\",\n \t\t  BT_FN_VOID, ATTR_NOTHROW_LEAF_LIST)"}, {"sha": "b8f508f05ab65f72016cc161f9bf463531247161", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6", "patch": "@@ -1,3 +1,7 @@\n+2018-12-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c-c++-common/for-16.c: New test.\n+\n 2018-12-12  Andreas Schwab  <schwab@suse.de>\n \n \t* config/linux/ia64/futex.h (sys_futex0): Don't mark r12 as"}, {"sha": "5649ba9ee874758ee54d7a44eeb78a1d41271a0c", "filename": "libgomp/testsuite/libgomp.c-c++-common/for-16.c", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ffor-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ffor-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ffor-16.c?ref=a6ef2ac9d92d85ff03ecc40c4aa80269289fbbd6", "patch": "@@ -0,0 +1,114 @@\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+void abort (void);\n+\n+unsigned long long int k = 16;\n+#pragma omp declare target to (k)\n+\n+int\n+main ()\n+{\n+  unsigned char a[144], b[144], c[144];\n+  int l;\n+  #pragma omp target map(from:a, b, c)\n+  {\n+    int i;\n+    unsigned long long int j;\n+    #pragma omp parallel for schedule (runtime)\n+    for (i = 0; i < 16; i++)\n+      a[i] = i;\n+    #pragma omp parallel for schedule (monotonic: runtime)\n+    for (i = 0; i < 16; i++)\n+      a[i + 16] = i + 16;\n+    #pragma omp parallel for schedule (nonmonotonic: runtime)\n+    for (i = 0; i < 16; i++)\n+      a[i + 32] = i + 32;\n+    #pragma omp parallel\n+    {\n+      #pragma omp for schedule (runtime)\n+      for (i = 0; i < 16; i++)\n+        a[i + 48] = i + 48;\n+      #pragma omp for schedule (monotonic: runtime)\n+      for (i = 0; i < 16; i++)\n+        a[i + 64] = i + 64;\n+      #pragma omp for schedule (nonmonotonic: runtime)\n+      for (i = 0; i < 16; i++)\n+        a[i + 80] = i + 80;\n+      #pragma omp for schedule (runtime)\n+      for (j = 0; j < k; j++)\n+        a[j + 96] = j + 96;\n+      #pragma omp for schedule (monotonic: runtime)\n+      for (j = 0; j < k; j++)\n+        a[j + 112] = j + 112;\n+      #pragma omp for schedule (nonmonotonic: runtime)\n+      for (j = 0; j < k; j++)\n+        a[j + 128] = j + 128;\n+    }\n+    #pragma omp parallel for schedule (dynamic)\n+    for (i = 0; i < 16; i++)\n+      b[i] = i;\n+    #pragma omp parallel for schedule (monotonic: dynamic)\n+    for (i = 0; i < 16; i++)\n+      b[i + 16] = i + 16;\n+    #pragma omp parallel for schedule (nonmonotonic: dynamic)\n+    for (i = 0; i < 16; i++)\n+      b[i + 32] = i + 32;\n+    #pragma omp parallel\n+    {\n+      #pragma omp for schedule (dynamic)\n+      for (i = 0; i < 16; i++)\n+        b[i + 48] = i + 48;\n+      #pragma omp for schedule (monotonic: dynamic)\n+      for (i = 0; i < 16; i++)\n+        b[i + 64] = i + 64;\n+      #pragma omp for schedule (nonmonotonic: dynamic)\n+      for (i = 0; i < 16; i++)\n+        b[i + 80] = i + 80;\n+      #pragma omp for schedule (dynamic)\n+      for (j = 0; j < k; j++)\n+        b[j + 96] = j + 96;\n+      #pragma omp for schedule (monotonic: dynamic)\n+      for (j = 0; j < k; j++)\n+        b[j + 112] = j + 112;\n+      #pragma omp for schedule (nonmonotonic: dynamic)\n+      for (j = 0; j < k; j++)\n+        b[j + 128] = j + 128;\n+    }\n+    #pragma omp parallel for schedule (guided)\n+    for (i = 0; i < 16; i++)\n+      c[i] = i;\n+    #pragma omp parallel for schedule (monotonic: guided)\n+    for (i = 0; i < 16; i++)\n+      c[i + 16] = i + 16;\n+    #pragma omp parallel for schedule (nonmonotonic: guided)\n+    for (i = 0; i < 16; i++)\n+      c[i + 32] = i + 32;\n+    #pragma omp parallel\n+    {\n+      #pragma omp for schedule (guided)\n+      for (i = 0; i < 16; i++)\n+        c[i + 48] = i + 48;\n+      #pragma omp for schedule (monotonic: guided)\n+      for (i = 0; i < 16; i++)\n+        c[i + 64] = i + 64;\n+      #pragma omp for schedule (nonmonotonic: guided)\n+      for (i = 0; i < 16; i++)\n+        c[i + 80] = i + 80;\n+      #pragma omp for schedule (guided)\n+      for (j = 0; j < k; j++)\n+        c[j + 96] = j + 96;\n+      #pragma omp for schedule (monotonic: guided)\n+      for (j = 0; j < k; j++)\n+        c[j + 112] = j + 112;\n+      #pragma omp for schedule (nonmonotonic: guided)\n+      for (j = 0; j < k; j++)\n+        c[j + 128] = j + 128;\n+    }\n+  }\n+  for (l = 0; l < 144; ++l)\n+    if (a[l] != l || b[l] != l || c[l] != l)\n+      abort ();\n+  return 0;\n+}"}]}