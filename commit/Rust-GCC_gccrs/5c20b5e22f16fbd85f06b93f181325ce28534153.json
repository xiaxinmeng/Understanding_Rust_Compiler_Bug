{"sha": "5c20b5e22f16fbd85f06b93f181325ce28534153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMyMGI1ZTIyZjE2ZmJkODVmMDZiOTNmMTgxMzI1Y2UyODUzNDE1Mw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2009-07-23T12:52:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T12:52:19Z"}, "message": "sem.adb (Do_Units_And_Dependents): Process bodies only for units that are in the context of the main unit body.\n\n\t* sem.adb (Do_Units_And_Dependents): Process bodies only for units that\n\tare in the context of the main unit body.\n\nFrom-SVN: r150008", "tree": {"sha": "bb372961e7b7271ce4c740f28a335a2257f770a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb372961e7b7271ce4c740f28a335a2257f770a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c20b5e22f16fbd85f06b93f181325ce28534153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c20b5e22f16fbd85f06b93f181325ce28534153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c20b5e22f16fbd85f06b93f181325ce28534153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c20b5e22f16fbd85f06b93f181325ce28534153/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce14c57705bb8d3f0aae4d18cd93e997f0087b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce14c57705bb8d3f0aae4d18cd93e997f0087b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce14c57705bb8d3f0aae4d18cd93e997f0087b98"}], "stats": {"total": 91, "additions": 45, "deletions": 46}, "files": [{"sha": "6cfab5c597933ccbc0d89be77bbea3250e7ea045", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c20b5e22f16fbd85f06b93f181325ce28534153/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c20b5e22f16fbd85f06b93f181325ce28534153/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5c20b5e22f16fbd85f06b93f181325ce28534153", "patch": "@@ -1,3 +1,8 @@\n+2009-07-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem.adb (Do_Units_And_Dependents): Process bodies only for units that\n+\tare in the context of the main unit body.\n+\n 2009-07-23  Sergey Rybin  <rybin@adacore.com>\n \n \t* gnat_ugn.texi (Misnamed_Controlling_Parameters gnatcheck rule): Fix"}, {"sha": "463d212ea48a78da0e37772c371692ba0ddce3e0", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 40, "deletions": 46, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c20b5e22f16fbd85f06b93f181325ce28534153/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c20b5e22f16fbd85f06b93f181325ce28534153/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=5c20b5e22f16fbd85f06b93f181325ce28534153", "patch": "@@ -107,6 +107,7 @@ package body Sem is\n    procedure Analyze (N : Node_Id) is\n    begin\n       Debug_A_Entry (\"analyzing  \", N);\n+\n       --  Immediate return if already analyzed\n \n       if Analyzed (N) then\n@@ -1688,59 +1689,47 @@ package body Sem is\n       --  Start of processing for Do_Unit_And_Dependents\n \n       begin\n-         if Seen (Unit_Num) then\n-            return;\n-         end if;\n-\n-         Seen (Unit_Num) := True;\n-\n-         --  Process corresponding spec of body first\n-\n-         if Nkind_In (Item, N_Package_Body, N_Subprogram_Body) then\n-            declare\n-               Spec_Unit : constant Node_Id := Library_Unit (CU);\n-            begin\n-               if Spec_Unit = CU then  --  ???Why needed?\n-                  pragma Assert (Acts_As_Spec (CU));\n-                  null;\n-               else\n-                  Do_Unit_And_Dependents (Spec_Unit, Unit (Spec_Unit));\n-               end if;\n-            end;\n-         end if;\n+         if not Seen (Unit_Num) then\n \n-         --  Process the with clauses\n+            Seen (Unit_Num) := True;\n \n-         Do_Withed_Units (CU, Include_Limited => False);\n+            --  Process corresponding spec of body first\n \n-         --  Process the unit itself\n+            if Nkind_In (Item, N_Package_Body, N_Subprogram_Body) then\n+               declare\n+                  Spec_Unit : constant Node_Id := Library_Unit (CU);\n+               begin\n+                  if Spec_Unit = CU then  --  ???Why needed?\n+                     pragma Assert (Acts_As_Spec (CU));\n+                     null;\n+                  else\n+                     Do_Unit_And_Dependents (Spec_Unit, Unit (Spec_Unit));\n+                  end if;\n+               end;\n+            end if;\n \n-         if not Nkind_In (Item, N_Package_Body, N_Subprogram_Body)\n-           or else Acts_As_Spec (CU)\n-           or else (CU = Cunit (Main_Unit) and then Do_Main)\n+            --  Process the with clauses\n \n-         then\n+            Do_Withed_Units (CU, Include_Limited => False);\n \n-            Do_Action (CU, Item);\n+            --  Process the unit itself\n \n-            Done (Unit_Num) := True;\n+            if not Nkind_In (Item, N_Package_Body, N_Subprogram_Body)\n+              or else Acts_As_Spec (CU)\n+              or else (CU = Cunit (Main_Unit) and then Do_Main)\n+            then\n+               Do_Action (CU, Item);\n+               Done (Unit_Num) := True;\n+            end if;\n          end if;\n \n-         --  Process corresponding body of spec last. However, if this body is\n-         --  the main unit (because some dependent of the main unit depends on\n-         --  the main unit's spec), we don't process it now. We also skip\n-         --  processing of the body of a unit named by pragma Extend_System,\n-         --  because it has cyclic dependences in some cases.\n-\n-         --  A body that is not the main unit is present because of inlining\n-         --  and/or instantiations, and it is best to process a body as early\n-         --  as possible after the spec (as if an Elaborate_Body were present).\n-         --  Currently all such bodies are added to the units list. It might\n-         --  be possible to restrict the list to those bodies that are used\n-         --  in the main unit. Possible optimization ???\n-\n-         --  Such bodies can also appear in a circular dependency list, where\n-         --  spec A depends on spec B and the body of B depends on spec A.\n+         --  Process corresponding body of spec last. This is either the main\n+         --  unit, or the body of a spec that is in the context of the main\n+         --  unit, and that is instantiated, or else contains a generic that\n+         --  is instantiated, or a subprogram that is inlined in the main unit.\n+\n+         --  We exclude bodies that may appear in a circular dependency list,\n+         --  where spec A depends on spec B and body of B depends on spec A.\n          --  This is not an elaboration issue, but body B must be excluded\n          --  from the processing.\n \n@@ -1752,6 +1741,10 @@ package body Sem is\n                --  Check whether this body depends on a spec that is pending,\n                --  that is to say has been seen but not processed yet.\n \n+               -------------------------\n+               -- Circular_Dependence --\n+               -------------------------\n+\n                function Circular_Dependence (B : Node_Id) return Boolean is\n                   Item : Node_Id;\n                   UN   : Unit_Number_Type;\n@@ -1780,6 +1773,7 @@ package body Sem is\n                  and then Body_Unit /= Cunit (Main_Unit)\n                  and then Unit_Num /= Get_Source_Unit (System_Aux_Id)\n                  and then not Circular_Dependence (Body_Unit)\n+                 and then Do_Main\n                then\n                   Do_Unit_And_Dependents (Body_Unit, Unit (Body_Unit));\n                   Do_Action (Body_Unit, Unit (Body_Unit));\n@@ -1842,8 +1836,8 @@ package body Sem is\n \n                --  If it's a body, ignore it. Bodies appear in the list only\n                --  because of inlining/instantiations, and they are processed\n-               --  immediately after the corresponding specs.\n-               --  The main unit is processed separately after all other units.\n+               --  immediately after the corresponding specs. The main unit is\n+               --  processed separately after all other units.\n \n                when N_Package_Body | N_Subprogram_Body =>\n                   null;"}]}