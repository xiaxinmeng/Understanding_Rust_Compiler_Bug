{"sha": "0f57194bfccc05e07b48e8ccd60d3653c6d65c9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY1NzE5NGJmY2NjMDVlMDdiNDhlOGNjZDYwZDM2NTNjNmQ2NWM5YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-12-06T09:24:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-12-06T09:24:36Z"}, "message": "re PR c++/71537 (GCC rejects consetxpr boolean conversions and comparisons on the result of pointer arithmetic.)\n\n\tPR c++/71537\n\t* fold-const.c (fold_comparison): Assume CONSTANT_CLASS_P (base0)\n\tplus offset is non-zero.  For maybe_nonzero_address decl base0,\n\trequire indirect_base0.\n\n\t* g++.dg/cpp0x/constexpr-71537.C: New test.\n\nFrom-SVN: r243286", "tree": {"sha": "0be8f1ad83787cea9053f376cd058a980b2a2abe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0be8f1ad83787cea9053f376cd058a980b2a2abe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66972191ee05c5dd2d02e5d062fe1c942e42fcd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66972191ee05c5dd2d02e5d062fe1c942e42fcd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66972191ee05c5dd2d02e5d062fe1c942e42fcd7"}], "stats": {"total": 44, "additions": 36, "deletions": 8}, "files": [{"sha": "aef86e3566ccffaa97b2d4ee12dad2041f84adb8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f57194bfccc05e07b48e8ccd60d3653c6d65c9a", "patch": "@@ -1,5 +1,10 @@\n 2016-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/71537\n+\t* fold-const.c (fold_comparison): Assume CONSTANT_CLASS_P (base0)\n+\tplus offset is non-zero.  For maybe_nonzero_address decl base0,\n+\trequire indirect_base0.\n+\n \tPR c++/71537\n \t* fold-const-call.c (fold_const_call_1): Remove memchr handling here.\n \t(fold_const_call) <case CFN_BUILT_IN_STRNCMP,"}, {"sha": "c649e547ead5997504b5b3addd22471532878e6f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0f57194bfccc05e07b48e8ccd60d3653c6d65c9a", "patch": "@@ -8419,14 +8419,16 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n \t below follow the C++ rules with the additional property that\n \t every object pointer compares greater than a null pointer.\n       */\n-      else if (DECL_P (base0)\n-\t       && maybe_nonzero_address (base0) > 0\n-\t       /* Avoid folding references to struct members at offset 0 to\n-\t\t  prevent tests like '&ptr->firstmember == 0' from getting\n-\t\t  eliminated.  When ptr is null, although the -> expression\n-\t\t  is strictly speaking invalid, GCC retains it as a matter\n-\t\t  of QoI.  See PR c/44555. */\n-\t       && (offset0 == NULL_TREE && bitpos0 != 0)\n+      else if (((DECL_P (base0)\n+\t\t && maybe_nonzero_address (base0) > 0\n+\t\t /* Avoid folding references to struct members at offset 0 to\n+\t\t    prevent tests like '&ptr->firstmember == 0' from getting\n+\t\t    eliminated.  When ptr is null, although the -> expression\n+\t\t    is strictly speaking invalid, GCC retains it as a matter\n+\t\t    of QoI.  See PR c/44555. */\n+\t\t && (offset0 == NULL_TREE && bitpos0 != 0))\n+\t\t|| CONSTANT_CLASS_P (base0))\n+\t       && indirect_base0\n \t       /* The caller guarantees that when one of the arguments is\n \t\t  constant (i.e., null in this case) it is second.  */\n \t       && integer_zerop (arg1))"}, {"sha": "7aa429fca28505ce86b4d65af671fa2cb712ed93", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f57194bfccc05e07b48e8ccd60d3653c6d65c9a", "patch": "@@ -1,5 +1,8 @@\n 2016-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/71537\n+\t* g++.dg/cpp0x/constexpr-71537.C: New test.\n+\n \tPR c++/71537\n \t* g++.dg/cpp0x/constexpr-memchr.C: New test.\n "}, {"sha": "3d5ac349225ee53e4709af92723c5f50d6e8abe7", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-71537.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-71537.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f57194bfccc05e07b48e8ccd60d3653c6d65c9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-71537.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-71537.C?ref=0f57194bfccc05e07b48e8ccd60d3653c6d65c9a", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/71537\n+// { dg-do compile { target c++11 } }\n+\n+constexpr int n[42] = {1};\n+constexpr int x1 = n ? 1 : 0;\n+constexpr int x2 = n + 1 ? 1 : 0;\n+constexpr int x3 = \"abc\" ? 1 : 0;\n+constexpr int x4 = \"abc\" + 1 ? 1 : 0;\n+constexpr bool x5 = \"abc\" + 1;\n+constexpr bool x6 = \"abc\" + 4;\n+constexpr bool x7 = n + 42;\n+static_assert (x1 == 1, \"\");\n+static_assert (x2 == 1, \"\");\n+static_assert (x3 == 1, \"\");\n+static_assert (x4 == 1, \"\");\n+static_assert (x5, \"\");\n+static_assert (x6, \"\");\n+static_assert (x7, \"\");"}]}