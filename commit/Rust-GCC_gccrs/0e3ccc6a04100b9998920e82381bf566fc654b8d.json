{"sha": "0e3ccc6a04100b9998920e82381bf566fc654b8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzY2NjNmEwNDEwMGI5OTk4OTIwZTgyMzgxYmY1NjZmYzY1NGI4ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-08-28T12:20:44Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:24:50Z"}, "message": "[Ada] Missing detection of unused with_clause\n\ngcc/ada/\n\n\t* sem_ch4.adb (Complete_Object_Operation): Only mark entities\n\treferenced if we are compiling the extended main unit.\n\t* sem_attr.adb (Analyze_Attribute [Attribute_Tag]): Record a\n\treference on the type and its scope.", "tree": {"sha": "80f0a8d46a991f0a42bcb9d11a7b5d611a7097fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80f0a8d46a991f0a42bcb9d11a7b5d611a7097fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e3ccc6a04100b9998920e82381bf566fc654b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3ccc6a04100b9998920e82381bf566fc654b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e3ccc6a04100b9998920e82381bf566fc654b8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3ccc6a04100b9998920e82381bf566fc654b8d/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c875250d42d16abb1c638a1b340ea5dac5c9a479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c875250d42d16abb1c638a1b340ea5dac5c9a479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c875250d42d16abb1c638a1b340ea5dac5c9a479"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "7a488a772034aba52716858e4900287680573577", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3ccc6a04100b9998920e82381bf566fc654b8d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3ccc6a04100b9998920e82381bf566fc654b8d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=0e3ccc6a04100b9998920e82381bf566fc654b8d", "patch": "@@ -6288,6 +6288,15 @@ package body Sem_Attr is\n \n          if Comes_From_Source (N) then\n             Check_Not_Incomplete_Type;\n+\n+            --  'Tag requires visibility on the corresponding package holding\n+            --  the tag, so record a reference here, to avoid spurious unused\n+            --  with_clause reported when compiling the main unit.\n+\n+            if In_Extended_Main_Source_Unit (Current_Scope) then\n+               Set_Referenced (P_Type, True);\n+               Set_Referenced (Scope (P_Type), True);\n+            end if;\n          end if;\n \n          --  Set appropriate type"}, {"sha": "8d743383075ad54a0b7c32b7eb7ab0eaa914d1ea", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3ccc6a04100b9998920e82381bf566fc654b8d/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3ccc6a04100b9998920e82381bf566fc654b8d/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=0e3ccc6a04100b9998920e82381bf566fc654b8d", "patch": "@@ -9010,16 +9010,20 @@ package body Sem_Ch4 is\n             Rewrite (First_Actual, Obj);\n          end if;\n \n-         --  The operation is obtained from the dispatch table and not by\n-         --  visibility, and may be declared in a unit that is not explicitly\n-         --  referenced in the source, but is nevertheless required in the\n-         --  context of the current unit. Indicate that operation and its scope\n-         --  are referenced, to prevent spurious and misleading warnings. If\n-         --  the operation is overloaded, all primitives are in the same scope\n-         --  and we can use any of them.\n-\n-         Set_Referenced (Entity (Subprog), True);\n-         Set_Referenced (Scope (Entity (Subprog)), True);\n+         if In_Extended_Main_Source_Unit (Current_Scope) then\n+            --  The operation is obtained from the dispatch table and not by\n+            --  visibility, and may be declared in a unit that is not\n+            --  explicitly referenced in the source, but is nevertheless\n+            --  required in the context of the current unit. Indicate that\n+            --  operation and its scope are referenced, to prevent spurious and\n+            --  misleading warnings. If the operation is overloaded, all\n+            --  primitives are in the same scope and we can use any of them.\n+            --  Don't do that outside the main unit since otherwise this will\n+            --  e.g. prevent the detection of some unused with clauses.\n+\n+            Set_Referenced (Entity (Subprog), True);\n+            Set_Referenced (Scope (Entity (Subprog)), True);\n+         end if;\n \n          Rewrite (Node_To_Replace, Call_Node);\n "}]}