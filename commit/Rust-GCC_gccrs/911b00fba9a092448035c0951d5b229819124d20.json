{"sha": "911b00fba9a092448035c0951d5b229819124d20", "node_id": "C_kwDOANBUbNoAKDkxMWIwMGZiYTlhMDkyNDQ4MDM1YzA5NTFkNWIyMjk4MTkxMjRkMjA", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-07-06T20:56:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-21T15:25:00Z"}, "message": "[Ada] Remove if_expression\n\ngcc/ada/\n\n\t* sem_eval.adb (Fold_Shift): Replace an if_expression with an\n\tif_statement.", "tree": {"sha": "3beee6603b038156dcac368dc21f996a077730b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3beee6603b038156dcac368dc21f996a077730b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/911b00fba9a092448035c0951d5b229819124d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911b00fba9a092448035c0951d5b229819124d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/911b00fba9a092448035c0951d5b229819124d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911b00fba9a092448035c0951d5b229819124d20/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b12d18a82597b97cbaccbac4253e8837f339d9a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12d18a82597b97cbaccbac4253e8837f339d9a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12d18a82597b97cbaccbac4253e8837f339d9a0"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "6f814069f3caac49eb41c30691272badd55ca969", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/911b00fba9a092448035c0951d5b229819124d20/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/911b00fba9a092448035c0951d5b229819124d20/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=911b00fba9a092448035c0951d5b229819124d20", "patch": "@@ -5063,12 +5063,20 @@ package body Sem_Eval is\n                --  result is always positive, even if the original operand was\n                --  negative.\n \n-               Fold_Uint\n-                 (N,\n-                  (Expr_Value (Left) +\n-                     (if Expr_Value (Left) >= Uint_0 then Uint_0 else Modulus))\n-                  / (Uint_2 ** Expr_Value (Right)),\n-                  Static => Static);\n+               declare\n+                  M : Unat;\n+               begin\n+                  if Expr_Value (Left) >= Uint_0 then\n+                     M := Uint_0;\n+                  else\n+                     M := Modulus;\n+                  end if;\n+\n+                  Fold_Uint\n+                    (N,\n+                     (Expr_Value (Left) + M) / (Uint_2 ** Expr_Value (Right)),\n+                     Static => Static);\n+               end;\n             end if;\n          elsif Op = N_Op_Shift_Right_Arithmetic then\n             Check_Elab_Call;"}]}