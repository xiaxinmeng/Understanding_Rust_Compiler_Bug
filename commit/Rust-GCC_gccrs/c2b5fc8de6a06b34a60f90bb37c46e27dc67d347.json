{"sha": "c2b5fc8de6a06b34a60f90bb37c46e27dc67d347", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJiNWZjOGRlNmEwNmIzNGE2MGY5MGJiMzdjNDZlMjdkYzY3ZDM0Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-12T17:44:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-12T17:44:23Z"}, "message": "re PR tree-optimization/48975 (ICE in execute_cse_reciprocals() with -fno-tree-slp-vectorize)\n\n\tPR tree-optimization/48975\n\t* tree-if-conv.c (combine_blocks): Call free_bb_predicate\n\ton all bbs here and free and clear ifc_bbs at the end.\n\n\t* gcc.dg/pr48975.c: New test.\n\nFrom-SVN: r173709", "tree": {"sha": "f50e6dc79484fad7c3b75ea106712b82ba60cda9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f50e6dc79484fad7c3b75ea106712b82ba60cda9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13157033d4fc1d109b1dc7c063bfa46638144df5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13157033d4fc1d109b1dc7c063bfa46638144df5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13157033d4fc1d109b1dc7c063bfa46638144df5"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "4bb144ef92cf32e0ae7b7f924279c7eb128c4d31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2b5fc8de6a06b34a60f90bb37c46e27dc67d347", "patch": "@@ -1,3 +1,9 @@\n+2011-05-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/48975\n+\t* tree-if-conv.c (combine_blocks): Call free_bb_predicate\n+\ton all bbs here and free and clear ifc_bbs at the end.\n+\n 2011-05-12  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple.c (gtc_visit): Compare TREE_ADDRESSABLE, handle"}, {"sha": "9c3552a85503eebc709524e694fe317827f39cc0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c2b5fc8de6a06b34a60f90bb37c46e27dc67d347", "patch": "@@ -1,3 +1,8 @@\n+2011-05-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/48975\n+\t* gcc.dg/pr48975.c: New test.\n+\n 2011-05-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/48972"}, {"sha": "58658d8714927b750fe38e6ce3bbab1c77525503", "filename": "gcc/testsuite/gcc.dg/pr48975.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48975.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48975.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48975.c?ref=c2b5fc8de6a06b34a60f90bb37c46e27dc67d347", "patch": "@@ -0,0 +1,18 @@\n+/* PR tree-optimization/48975 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -ffast-math -fno-tree-slp-vectorize\" } */\n+\n+static int\n+foo (int x)\n+{\n+  return (x > 0) ? 0 : x + 1;\n+}\n+\n+void\n+bar (unsigned int x)\n+{\n+  int l = 1;\n+lab:\n+  while (x)\n+    x = foo (x);\n+}"}, {"sha": "bf1c8cdbc47e2a90b36ebb13970b0b470c32bfc2", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b5fc8de6a06b34a60f90bb37c46e27dc67d347/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=c2b5fc8de6a06b34a60f90bb37c46e27dc67d347", "patch": "@@ -1,5 +1,5 @@\n /* If-conversion for vectorizer.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Devang Patel <dpatel@apple.com>\n \n@@ -1637,6 +1637,7 @@ combine_blocks (struct loop *loop)\n   for (i = 0; i < orig_loop_num_nodes; i++)\n     {\n       bb = ifc_bbs[i];\n+      free_bb_predicate (bb);\n       if (bb_with_exit_edge_p (loop, bb))\n \t{\n \t  exit_bb = bb;\n@@ -1712,6 +1713,9 @@ combine_blocks (struct loop *loop)\n       && exit_bb != loop->header\n       && can_merge_blocks_p (loop->header, exit_bb))\n     merge_blocks (loop->header, exit_bb);\n+\n+  free (ifc_bbs);\n+  ifc_bbs = NULL;\n }\n \n /* If-convert LOOP when it is legal.  For the moment this pass has no"}]}