{"sha": "f59028696ad31fa3caeba83f0b47271095fc883c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU5MDI4Njk2YWQzMWZhM2NhZWJhODNmMGI0NzI3MTA5NWZjODgzYw==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-06-27T10:21:04Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-06-27T10:21:04Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1306", "tree": {"sha": "0ea33d00009f19b44689b20363bf90ee74c996eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ea33d00009f19b44689b20363bf90ee74c996eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f59028696ad31fa3caeba83f0b47271095fc883c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f59028696ad31fa3caeba83f0b47271095fc883c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f59028696ad31fa3caeba83f0b47271095fc883c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f59028696ad31fa3caeba83f0b47271095fc883c/comments", "author": null, "committer": null, "parents": [{"sha": "9aea9597cff287e07ff3f55ade3d8a9567a5278f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aea9597cff287e07ff3f55ade3d8a9567a5278f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aea9597cff287e07ff3f55ade3d8a9567a5278f"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "e1ad1cac048e01ebb0a00a4ebbb6e54c3bd3a3a8", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f59028696ad31fa3caeba83f0b47271095fc883c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f59028696ad31fa3caeba83f0b47271095fc883c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f59028696ad31fa3caeba83f0b47271095fc883c", "patch": "@@ -2399,7 +2399,13 @@ range_test (jcode, type, lo_code, hi_code, var, lo_cst, hi_cst)\n \n   /* When normalizing, it is possible to both increment the smaller constant\n      and decrement the larger constant.  See if they are still ordered.  */\n-  if (tree_int_cst_lt (lo_cst, hi_cst))\n+  if (tree_int_cst_lt (hi_cst, lo_cst))\n+    return 0;\n+\n+  /* Fail if VAR isn't an integer.  */\n+  utype = TREE_TYPE (var);\n+  if (TREE_CODE (utype) != INTEGER_TYPE\n+      && TREE_CODE (utype) != ENUMERAL_TYPE)\n     return 0;\n \n   /* The range test is invalid if subtracting the two constants results\n@@ -2408,7 +2414,6 @@ range_test (jcode, type, lo_code, hi_code, var, lo_cst, hi_cst)\n       || ! int_fits_type_p (lo_cst, TREE_TYPE (var)))\n     return 0;\n \n-  utype = TREE_TYPE (var);\n   if (! TREE_UNSIGNED (utype))\n     {\n       utype = unsigned_type (utype);"}]}