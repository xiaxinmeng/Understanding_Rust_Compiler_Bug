{"sha": "f8719680bfd5adf14aa91ce3017d59f7eac7f64e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg3MTk2ODBiZmQ1YWRmMTRhYTkxY2UzMDE3ZDU5ZjdlYWM3ZjY0ZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2018-10-24T21:55:39Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2018-10-24T21:55:39Z"}, "message": "gOlogy: do not change code in isolate-paths for warnings only\n\nThe isolate-paths pass is activated by various -f flags, but also by\n-Wnull-dereference.  Most of its codegen changes are conditioned on at\nleast one of the -f flags, but those that detect, warn about and\nisolate paths that return the address of local variables are enabled\neven if the pass is activated only by -Wnull-dereference.\n\n-W flags should not cause codegen changes, so this patch makes the\ncodegen changes conditional on the presence of any of the -f flags\nthat activate the pass.  Should we have a separate option to activate\nonly this kind of transformation?\n\nfor  gcc/ChangeLog\n\n\t* gimple-ssa-isolate-paths.c\n\t(find_implicit_erroneous_behavior): Do not change code if the\n\tpass is running for warnings only.\n\t(find_explicit_erroneous_behavior): Likewise.\n\nFrom-SVN: r265473", "tree": {"sha": "1561860e0ec71bca48e6f93ac01c3169d8c0c8b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1561860e0ec71bca48e6f93ac01c3169d8c0c8b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8719680bfd5adf14aa91ce3017d59f7eac7f64e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8719680bfd5adf14aa91ce3017d59f7eac7f64e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8719680bfd5adf14aa91ce3017d59f7eac7f64e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8719680bfd5adf14aa91ce3017d59f7eac7f64e/comments", "author": null, "committer": null, "parents": [{"sha": "f78f04627d5805bbcc07e05a41352b0de36f3dba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78f04627d5805bbcc07e05a41352b0de36f3dba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78f04627d5805bbcc07e05a41352b0de36f3dba"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "fdfca8ba6bc3768319e1bb2333470caf2e55142d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8719680bfd5adf14aa91ce3017d59f7eac7f64e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8719680bfd5adf14aa91ce3017d59f7eac7f64e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8719680bfd5adf14aa91ce3017d59f7eac7f64e", "patch": "@@ -1,3 +1,10 @@\n+2018-10-24  Alexandre Oliva <aoliva@redhat.com>\n+\n+\t* gimple-ssa-isolate-paths.c\n+\t(find_implicit_erroneous_behavior): Do not change code if the\n+\tpass is running for warnings only.\n+\t(find_explicit_erroneous_behavior): Likewise.\n+\n 2018-10-24  Michael Meissner  <meissner@linux.ibm.com>\n \n \t* config/rs6000/rs6000.c (TARGET_MANGLE_DECL_ASSEMBLER_NAME):"}, {"sha": "880836c21aa79ac4af38d233cd6b94220b2075c4", "filename": "gcc/gimple-ssa-isolate-paths.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8719680bfd5adf14aa91ce3017d59f7eac7f64e/gcc%2Fgimple-ssa-isolate-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8719680bfd5adf14aa91ce3017d59f7eac7f64e/gcc%2Fgimple-ssa-isolate-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-isolate-paths.c?ref=f8719680bfd5adf14aa91ce3017d59f7eac7f64e", "patch": "@@ -431,7 +431,9 @@ find_implicit_erroneous_behavior (void)\n \t\t\t\t\t\"declared here\");\n \t\t\t  }\n \n-\t\t\t  if (gimple_bb (use_stmt) == bb)\n+\t\t\t  if ((flag_isolate_erroneous_paths_dereference\n+\t\t\t       || flag_isolate_erroneous_paths_attribute)\n+\t\t\t      && gimple_bb (use_stmt) == bb)\n \t\t\t    {\n \t\t\t      duplicate = isolate_path (bb, duplicate, e,\n \t\t\t\t\t\t\tuse_stmt, lhs, true);\n@@ -553,9 +555,16 @@ find_explicit_erroneous_behavior (void)\n \t\t\t  inform (DECL_SOURCE_LOCATION(valbase),\n \t\t\t\t  \"declared here\");\n \t\t      }\n-\t\t      tree zero = build_zero_cst (TREE_TYPE (val));\n-\t\t      gimple_return_set_retval (return_stmt, zero);\n-\t\t      update_stmt (stmt);\n+\n+\t\t      /* Do not modify code if the user only asked for\n+\t\t\t warnings.  */\n+\t\t      if (flag_isolate_erroneous_paths_dereference\n+\t\t\t  || flag_isolate_erroneous_paths_attribute)\n+\t\t\t{\n+\t\t\t  tree zero = build_zero_cst (TREE_TYPE (val));\n+\t\t\t  gimple_return_set_retval (return_stmt, zero);\n+\t\t\t  update_stmt (stmt);\n+\t\t\t}\n \t\t    }\n \t\t}\n \t    }"}]}