{"sha": "450b0ebbc011c68aeeeaee858cd38006aec62432", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUwYjBlYmJjMDExYzY4YWVlZWFlZTg1OGNkMzgwMDZhZWM2MjQzMg==", "commit": {"author": {"name": "David Holsgrove", "email": "david.holsgrove@xilinx.com", "date": "2013-07-23T21:09:50Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2013-07-23T21:09:50Z"}, "message": "microblaze.c: Add microblaze_asm_output_mi_thunk and define TARGET_ASM_OUTPUT_MI_THUNK and...\n\n\t* config/microblaze/microblaze.c: Add microblaze_asm_output_mi_thunk\n\tand define TARGET_ASM_OUTPUT_MI_THUNK and\n\tTARGET_ASM_CAN_OUTPUT_MI_THUNK.\n\nFrom-SVN: r201185", "tree": {"sha": "dedeb3a06148a8bab7e5717aa45639006ee9a7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dedeb3a06148a8bab7e5717aa45639006ee9a7c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/450b0ebbc011c68aeeeaee858cd38006aec62432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450b0ebbc011c68aeeeaee858cd38006aec62432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/450b0ebbc011c68aeeeaee858cd38006aec62432", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450b0ebbc011c68aeeeaee858cd38006aec62432/comments", "author": {"login": "davidholsgrove", "id": 4031547, "node_id": "MDQ6VXNlcjQwMzE1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4031547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidholsgrove", "html_url": "https://github.com/davidholsgrove", "followers_url": "https://api.github.com/users/davidholsgrove/followers", "following_url": "https://api.github.com/users/davidholsgrove/following{/other_user}", "gists_url": "https://api.github.com/users/davidholsgrove/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidholsgrove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidholsgrove/subscriptions", "organizations_url": "https://api.github.com/users/davidholsgrove/orgs", "repos_url": "https://api.github.com/users/davidholsgrove/repos", "events_url": "https://api.github.com/users/davidholsgrove/events{/privacy}", "received_events_url": "https://api.github.com/users/davidholsgrove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da8091da1b221bb3e3743ff0ae8413eadc83da4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da8091da1b221bb3e3743ff0ae8413eadc83da4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da8091da1b221bb3e3743ff0ae8413eadc83da4e"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "ad01f9d391317d8f42cb1d02e30149cec349599a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=450b0ebbc011c68aeeeaee858cd38006aec62432", "patch": "@@ -1,3 +1,9 @@\n+2013-07-23  David Holsgrove <david.holsgrove@xilinx.com>\n+\n+\t* config/microblaze/microblaze.c: Add microblaze_asm_output_mi_thunk\n+\tand define TARGET_ASM_OUTPUT_MI_THUNK and\n+\tTARGET_ASM_CAN_OUTPUT_MI_THUNK.\n+\n 2013-07-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/invoke.texi (SPARC Options): Document new leon3 processor value."}, {"sha": "c9c164962cd6d761f089f76b812013c9fdec8186", "filename": "gcc/config/microblaze/constraints.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2Fconfig%2Fmicroblaze%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2Fconfig%2Fmicroblaze%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fconstraints.md?ref=450b0ebbc011c68aeeeaee858cd38006aec62432", "patch": "@@ -70,3 +70,8 @@\n   \"Double word operand.\"\n   (and (match_code \"mem\")\n        (match_test \"double_memory_operand (op, GET_MODE (op))\")))\n+\n+(define_memory_constraint \"Q\"\n+  \"Memory operand which is a single register.\"\n+  (and (match_code \"mem\")\n+       (match_test \"GET_CODE ( XEXP (op, 0)) == REG\")))"}, {"sha": "649a6b74bbe14b0eaece96f7807020a59fffc4a0", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=450b0ebbc011c68aeeeaee858cd38006aec62432", "patch": "@@ -2118,6 +2118,7 @@ microblaze_initial_elimination_offset (int from, int to)\n    't'  print 't' for EQ, 'f' for NE\n    'm'  Print 1<<operand.\n    'i'  Print 'i' if MEM operand has immediate value\n+   'y'  Print 'y' if MEM operand is single register\n    'o'\tPrint operand address+4\n    '?'\tPrint 'd' if we use a branch with delay slot instead of normal branch.\n    'h'  Print high word of const_double (int or float) value as hex\n@@ -2288,6 +2289,15 @@ print_operand (FILE * file, rtx op, int letter)\n \trtx op4 = adjust_address (op, GET_MODE (op), 4);\n \toutput_address (XEXP (op4, 0));\n       }\n+    else if (letter == 'y')\n+      {\n+        rtx mem_reg = XEXP (op, 0);\n+        if (GET_CODE (mem_reg) == REG)\n+        {\n+            register int regnum = REGNO (mem_reg);\n+            fprintf (file, \"%s\", reg_names[regnum]);\n+        }\n+      }\n     else\n       output_address (XEXP (op, 0));\n "}, {"sha": "40d273936193cc49150bdf545208166ac95d2ca6", "filename": "gcc/config/microblaze/microblaze.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md?ref=450b0ebbc011c68aeeeaee858cd38006aec62432", "patch": "@@ -2221,3 +2221,5 @@\n   [(set_attr \"type\"     \"arith\")\n   (set_attr \"mode\"      \"SI\")\n   (set_attr \"length\"    \"4\")])\n+\n+(include \"sync.md\")"}, {"sha": "d880422f8189b57262a00a0d4de41558b4e5201c", "filename": "gcc/config/microblaze/sync.md", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2Fconfig%2Fmicroblaze%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450b0ebbc011c68aeeeaee858cd38006aec62432/gcc%2Fconfig%2Fmicroblaze%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fsync.md?ref=450b0ebbc011c68aeeeaee858cd38006aec62432", "patch": "@@ -0,0 +1,43 @@\n+;; Machine description for Xilinx MicroBlaze synchronization instructions.\n+;; Copyright (C) 2011-2013 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_insn \"atomic_compare_and_swapsi\"\n+  [(match_operand:SI 0 \"register_operand\" \"=&d\")\t;; bool output\n+   (match_operand:SI 1 \"register_operand\" \"=&d\")\t;; val output\n+   (match_operand:SI 2 \"nonimmediate_operand\" \"+Q\")\t;; memory\n+   (match_operand:SI 3 \"register_operand\" \"d\")\t\t;; expected value\n+   (match_operand:SI 4 \"register_operand\" \"d\")\t\t;; desired value\n+   (match_operand:SI 5 \"const_int_operand\" \"\")\t\t;; is_weak\n+   (match_operand:SI 6 \"const_int_operand\" \"\")\t\t;; mod_s\n+   (match_operand:SI 7 \"const_int_operand\" \"\")\t\t;; mod_f\n+   (clobber (match_scratch:SI 8 \"=&d\"))]\n+  \"\"\n+  {\n+    output_asm_insn (\"addc \\tr0,r0,r0\", operands);\n+    output_asm_insn (\"lwx  \\t%1,%y2,r0\", operands);\n+    output_asm_insn (\"addic\\t%8,r0,0\", operands);\n+    output_asm_insn (\"bnei \\t%8,.-8\", operands);\n+    output_asm_insn (\"cmp  \\t%0,%1,%3\", operands);\n+    output_asm_insn (\"bnei \\t%0,.+16\", operands);\n+    output_asm_insn (\"swx  \\t%4,%y2,r0\", operands);\n+    output_asm_insn (\"addic\\t%8,r0,0\", operands);\n+    output_asm_insn (\"bnei \\t%8,.-28\", operands);\n+    return \"\";\n+  }\n+)"}]}