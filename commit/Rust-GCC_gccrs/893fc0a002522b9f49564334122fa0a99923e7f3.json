{"sha": "893fc0a002522b9f49564334122fa0a99923e7f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkzZmMwYTAwMjUyMmI5ZjQ5NTY0MzM0MTIyZmEwYTk5OTIzZTdmMw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-09-01T15:04:11Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-09-01T15:04:11Z"}, "message": "rs6000: Use LR_REGNO instead of constant 65\n\nMany places still use 65 instead of the symbolic constant LR_REGNO.  This\nfixes them all (I looked for the string \"65\" only, in config/rs6000/ only,\nI didn't read all code :-) )\n\nI left it in *restore_world because Iain will remove it there soon.\n\n\n\t* config/rs6000/altivec.md (*save_world, *save_vregs_<mode>_r11,\n\tsave_vregs_<mode>_r12, *restore_vregs_<mode>_r11,\n\t*restore_vregs_<mode>_r12): Use LR_REGNO instead of 65.\n\t* config/rs6000/darwin.md (load_macho_picbase, load_macho_picbase_si,\n\tload_macho_picbase_di, *call_indirect_nonlocal_darwin64,\n\t*call_nonlocal_darwin64, *call_value_indirect_nonlocal_darwin64,\n\t*call_value_nonlocal_darwin64, reload_macho_picbase,\n\treload_macho_picbase_si, reload_macho_picbase_di): Ditto.\n\t* config/rs6000/rs6000.h (RETURN_ADDR_IN_PREVIOUS_FRAME): Ditto.\n\t* config/rs6000/rs6000.md (*save_gpregs_<mode>_r11,\n\t*save_gpregs_<mode>_r12, *save_gpregs_<mode>_r1,\n\t*save_fpregs_<mode>_r11, *save_fpregs_<mode>_r12,\n\t*save_fpregs_<mode>_r1): Ditto.\n\t* config/rs6000/spe.md (*save_gpregs_spe, *restore_gpregs_spe,\n\t*return_and_restore_gpregs_spe): Ditto.\n\nFrom-SVN: r239941", "tree": {"sha": "cb74bee7fff274f09250b2cdf7049253666591e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb74bee7fff274f09250b2cdf7049253666591e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/893fc0a002522b9f49564334122fa0a99923e7f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/893fc0a002522b9f49564334122fa0a99923e7f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/893fc0a002522b9f49564334122fa0a99923e7f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/893fc0a002522b9f49564334122fa0a99923e7f3/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a345b5b02652cfa82f18a995fa939a6009ffd73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a345b5b02652cfa82f18a995fa939a6009ffd73c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a345b5b02652cfa82f18a995fa939a6009ffd73c"}], "stats": {"total": 70, "additions": 44, "deletions": 26}, "files": [{"sha": "03f96f4d5fb9addce0071acb43289a757f1f70a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=893fc0a002522b9f49564334122fa0a99923e7f3", "patch": "@@ -1,3 +1,21 @@\n+2016-09-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/altivec.md (*save_world, *save_vregs_<mode>_r11,\n+\tsave_vregs_<mode>_r12, *restore_vregs_<mode>_r11,\n+\t*restore_vregs_<mode>_r12): Use LR_REGNO instead of 65.\n+\t* config/rs6000/darwin.md (load_macho_picbase, load_macho_picbase_si,\n+\tload_macho_picbase_di, *call_indirect_nonlocal_darwin64,\n+\t*call_nonlocal_darwin64, *call_value_indirect_nonlocal_darwin64,\n+\t*call_value_nonlocal_darwin64, reload_macho_picbase,\n+\treload_macho_picbase_si, reload_macho_picbase_di): Ditto.\n+\t* config/rs6000/rs6000.h (RETURN_ADDR_IN_PREVIOUS_FRAME): Ditto.\n+\t* config/rs6000/rs6000.md (*save_gpregs_<mode>_r11,\n+\t*save_gpregs_<mode>_r12, *save_gpregs_<mode>_r1,\n+\t*save_fpregs_<mode>_r11, *save_fpregs_<mode>_r12,\n+\t*save_fpregs_<mode>_r1): Ditto.\n+\t* config/rs6000/spe.md (*save_gpregs_spe, *restore_gpregs_spe,\n+\t*return_and_restore_gpregs_spe): Ditto.\n+\n 2016-09-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md"}, {"sha": "25472c29725905c2e5a6cc9a0d2eab4bbd2f206c", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=893fc0a002522b9f49564334122fa0a99923e7f3", "patch": "@@ -397,7 +397,7 @@\n \n (define_insn \"*save_world\"\n  [(match_parallel 0 \"save_world_operation\"\n-                  [(clobber (reg:SI 65))\n+                  [(clobber (reg:SI LR_REGNO))\n                    (use (match_operand:SI 1 \"call_operand\" \"s\"))])]\n  \"TARGET_MACHO && (DEFAULT_ABI == ABI_DARWIN) && TARGET_32BIT\"         \n  \"bl %z1\"\n@@ -407,7 +407,7 @@\n (define_insn \"*restore_world\"\n  [(match_parallel 0 \"restore_world_operation\"\n                   [(return)\n-\t\t   (use (reg:SI 65))\n+\t\t   (use (reg:SI LR_REGNO))\n                    (use (match_operand:SI 1 \"call_operand\" \"s\"))\n                    (clobber (match_operand:SI 2 \"gpc_reg_operand\" \"=r\"))])]\n  \"TARGET_MACHO && (DEFAULT_ABI == ABI_DARWIN) && TARGET_32BIT\"\n@@ -421,7 +421,7 @@\n ;; to describe the operation to dwarf2out_frame_debug_expr.\n (define_insn \"*save_vregs_<mode>_r11\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-     [(clobber (reg:P 65))\n+     [(clobber (reg:P LR_REGNO))\n       (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n       (clobber (reg:P 11))\n       (use (reg:P 0))\n@@ -435,7 +435,7 @@\n \n (define_insn \"*save_vregs_<mode>_r12\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-     [(clobber (reg:P 65))\n+     [(clobber (reg:P LR_REGNO))\n       (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n       (clobber (reg:P 12))\n       (use (reg:P 0))\n@@ -449,7 +449,7 @@\n \n (define_insn \"*restore_vregs_<mode>_r11\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-     [(clobber (reg:P 65))\n+     [(clobber (reg:P LR_REGNO))\n       (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n       (clobber (reg:P 11))\n       (use (reg:P 0))\n@@ -463,7 +463,7 @@\n \n (define_insn \"*restore_vregs_<mode>_r12\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-     [(clobber (reg:P 65))\n+     [(clobber (reg:P LR_REGNO))\n       (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n       (clobber (reg:P 12))\n       (use (reg:P 0))"}, {"sha": "5870e0a762f4c7038610a1354819aa87e406a718", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=893fc0a002522b9f49564334122fa0a99923e7f3", "patch": "@@ -238,7 +238,7 @@ You should have received a copy of the GNU General Public License\n   \"\")\n \n (define_expand \"load_macho_picbase\"\n-  [(set (reg:SI 65)\n+  [(set (reg:SI LR_REGNO)\n         (unspec [(match_operand 0 \"\" \"\")]\n                    UNSPEC_LD_MPIC))]\n   \"(DEFAULT_ABI == ABI_DARWIN) && flag_pic\"\n@@ -252,7 +252,7 @@ You should have received a copy of the GNU General Public License\n })\n \n (define_insn \"load_macho_picbase_si\"\n-  [(set (reg:SI 65)\n+  [(set (reg:SI LR_REGNO)\n \t(unspec:SI [(match_operand:SI 0 \"immediate_operand\" \"s\")\n \t\t    (pc)] UNSPEC_LD_MPIC))]\n   \"(DEFAULT_ABI == ABI_DARWIN) && flag_pic\"\n@@ -268,7 +268,7 @@ You should have received a copy of the GNU General Public License\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"load_macho_picbase_di\"\n-  [(set (reg:DI 65)\n+  [(set (reg:DI LR_REGNO)\n \t(unspec:DI [(match_operand:DI 0 \"immediate_operand\" \"s\")\n \t\t    (pc)] UNSPEC_LD_MPIC))]\n   \"(DEFAULT_ABI == ABI_DARWIN) && flag_pic && TARGET_64BIT\"\n@@ -325,7 +325,7 @@ You should have received a copy of the GNU General Public License\n   [(call (mem:SI (match_operand:DI 0 \"register_operand\" \"c,*l,c,*l\"))\n \t (match_operand 1 \"\" \"g,g,g,g\"))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,O,n,n\"))\n-   (clobber (reg:SI 65))]\n+   (clobber (reg:SI LR_REGNO))]\n   \"DEFAULT_ABI == ABI_DARWIN && TARGET_64BIT\"\n {\n   return \"b%T0l\";\n@@ -337,7 +337,7 @@ You should have received a copy of the GNU General Public License\n   [(call (mem:SI (match_operand:DI 0 \"symbol_ref_operand\" \"s,s\"))\n \t (match_operand 1 \"\" \"g,g\"))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n-   (clobber (reg:SI 65))]\n+   (clobber (reg:SI LR_REGNO))]\n   \"(DEFAULT_ABI == ABI_DARWIN)\n    && (INTVAL (operands[2]) & CALL_LONG) == 0\"\n {\n@@ -355,7 +355,7 @@ You should have received a copy of the GNU General Public License\n \t(call (mem:SI (match_operand:DI 1 \"register_operand\" \"c,*l,c,*l\"))\n \t      (match_operand 2 \"\" \"g,g,g,g\")))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,O,n,n\"))\n-   (clobber (reg:SI 65))]\n+   (clobber (reg:SI LR_REGNO))]\n   \"DEFAULT_ABI == ABI_DARWIN\"\n {\n   return \"b%T1l\";\n@@ -368,7 +368,7 @@ You should have received a copy of the GNU General Public License\n \t(call (mem:SI (match_operand:DI 1 \"symbol_ref_operand\" \"s,s\"))\n \t      (match_operand 2 \"\" \"g,g\")))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n-   (clobber (reg:SI 65))]\n+   (clobber (reg:SI LR_REGNO))]\n   \"(DEFAULT_ABI == ABI_DARWIN)\n    && (INTVAL (operands[3]) & CALL_LONG) == 0\"\n {\n@@ -382,7 +382,7 @@ You should have received a copy of the GNU General Public License\n    (set_attr \"length\" \"4,8\")])\n \n (define_expand \"reload_macho_picbase\"\n-  [(set (reg:SI 65)\n+  [(set (reg:SI LR_REGNO)\n         (unspec [(match_operand 0 \"\" \"\")]\n                    UNSPEC_RELD_MPIC))]\n   \"(DEFAULT_ABI == ABI_DARWIN) && flag_pic\"\n@@ -396,7 +396,7 @@ You should have received a copy of the GNU General Public License\n })\n \n (define_insn \"reload_macho_picbase_si\"\n-  [(set (reg:SI 65)\n+  [(set (reg:SI LR_REGNO)\n         (unspec:SI [(match_operand:SI 0 \"immediate_operand\" \"s\")\n \t\t    (pc)] UNSPEC_RELD_MPIC))]\n   \"(DEFAULT_ABI == ABI_DARWIN) && flag_pic\"\n@@ -419,7 +419,7 @@ You should have received a copy of the GNU General Public License\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"reload_macho_picbase_di\"\n-  [(set (reg:DI 65)\n+  [(set (reg:DI LR_REGNO)\n \t(unspec:DI [(match_operand:DI 0 \"immediate_operand\" \"s\")\n \t\t    (pc)] UNSPEC_RELD_MPIC))]\n   \"(DEFAULT_ABI == ABI_DARWIN) && flag_pic && TARGET_64BIT\""}, {"sha": "446d388469e67fc0f456e14bed96861905cd4b63", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=893fc0a002522b9f49564334122fa0a99923e7f3", "patch": "@@ -1958,7 +1958,7 @@ typedef struct rs6000_args\n #define TRAMPOLINE_SIZE rs6000_trampoline_size ()\n \f\n /* Definitions for __builtin_return_address and __builtin_frame_address.\n-   __builtin_return_address (0) should give link register (65), enable\n+   __builtin_return_address (0) should give link register (LR_REGNO), enable\n    this.  */\n /* This should be uncommented, so that the link register is used, but\n    currently this would result in unmatched insns and spilling fixed"}, {"sha": "1ecbb9d930c69ddd98d1bf207a9cca45e4fe02be", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=893fc0a002522b9f49564334122fa0a99923e7f3", "patch": "@@ -12455,7 +12455,7 @@\n \n (define_insn \"*save_gpregs_<mode>_r11\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-\t\t   [(clobber (reg:P 65))\n+\t\t   [(clobber (reg:P LR_REGNO))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n                     (use (reg:P 11))\n \t\t    (set (match_operand:P 2 \"memory_operand\" \"=m\")\n@@ -12467,7 +12467,7 @@\n \n (define_insn \"*save_gpregs_<mode>_r12\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-\t\t   [(clobber (reg:P 65))\n+\t\t   [(clobber (reg:P LR_REGNO))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n                     (use (reg:P 12))\n \t\t    (set (match_operand:P 2 \"memory_operand\" \"=m\")\n@@ -12479,7 +12479,7 @@\n \n (define_insn \"*save_gpregs_<mode>_r1\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-\t\t   [(clobber (reg:P 65))\n+\t\t   [(clobber (reg:P LR_REGNO))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n                     (use (reg:P 1))\n \t\t    (set (match_operand:P 2 \"memory_operand\" \"=m\")\n@@ -12491,7 +12491,7 @@\n \n (define_insn \"*save_fpregs_<mode>_r11\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-\t\t   [(clobber (reg:P 65))\n+\t\t   [(clobber (reg:P LR_REGNO))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n                     (use (reg:P 11))\n \t\t    (set (match_operand:DF 2 \"memory_operand\" \"=m\")\n@@ -12503,7 +12503,7 @@\n \n (define_insn \"*save_fpregs_<mode>_r12\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-\t\t   [(clobber (reg:P 65))\n+\t\t   [(clobber (reg:P LR_REGNO))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n                     (use (reg:P 12))\n \t\t    (set (match_operand:DF 2 \"memory_operand\" \"=m\")\n@@ -12515,7 +12515,7 @@\n \n (define_insn \"*save_fpregs_<mode>_r1\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-\t\t   [(clobber (reg:P 65))\n+\t\t   [(clobber (reg:P LR_REGNO))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n                     (use (reg:P 1))\n \t\t    (set (match_operand:DF 2 \"memory_operand\" \"=m\")"}, {"sha": "4b2220d38bba517ca69a3773cdc4d9d41ba3e71f", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893fc0a002522b9f49564334122fa0a99923e7f3/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=893fc0a002522b9f49564334122fa0a99923e7f3", "patch": "@@ -3464,7 +3464,7 @@\n ;; Out-of-line prologues and epilogues.\n (define_insn \"*save_gpregs_spe\"\n   [(match_parallel 0 \"any_parallel_operand\"\n-\t\t   [(clobber (reg:P 65))\n+\t\t   [(clobber (reg:P LR_REGNO))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n \t\t    (use (reg:P 11))\n \t\t    (set (match_operand:V2SI 2 \"memory_operand\" \"=m\")\n@@ -3476,7 +3476,7 @@\n \n (define_insn \"*restore_gpregs_spe\"\n  [(match_parallel 0 \"any_parallel_operand\"\n-\t\t  [(clobber (reg:P 65))\n+\t\t  [(clobber (reg:P LR_REGNO))\n \t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n \t\t   (use (reg:P 11))\n \t\t   (set (match_operand:V2SI 2 \"gpc_reg_operand\" \"=r\")\n@@ -3489,7 +3489,7 @@\n (define_insn \"*return_and_restore_gpregs_spe\"\n  [(match_parallel 0 \"any_parallel_operand\"\n \t\t  [(return)\n-\t\t   (clobber (reg:P 65))\n+\t\t   (clobber (reg:P LR_REGNO))\n \t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n \t\t   (use (reg:P 11))\n \t\t   (set (match_operand:V2SI 2 \"gpc_reg_operand\" \"=r\")"}]}