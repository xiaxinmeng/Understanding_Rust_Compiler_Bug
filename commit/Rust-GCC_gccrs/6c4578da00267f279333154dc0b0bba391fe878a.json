{"sha": "6c4578da00267f279333154dc0b0bba391fe878a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM0NTc4ZGEwMDI2N2YyNzkzMzMxNTRkYzBiMGJiYTM5MWZlODc4YQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-05-10T14:31:54Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-05-10T14:31:54Z"}, "message": "re PR fortran/54613 ([F08] Add FINDLOC plus support MAXLOC/MINLOC with KIND=/BACK=)\n\n2018-05-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/54613\n\t* intrinsic.texi: Document BACK for MINLOC and MAXLOC.\n\nFrom-SVN: r260116", "tree": {"sha": "e8223ffc7b00caee9a1b3696d420522a6f448e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8223ffc7b00caee9a1b3696d420522a6f448e42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c4578da00267f279333154dc0b0bba391fe878a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c4578da00267f279333154dc0b0bba391fe878a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c4578da00267f279333154dc0b0bba391fe878a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c4578da00267f279333154dc0b0bba391fe878a/comments", "author": null, "committer": null, "parents": [{"sha": "88bf4c34e3dc1de4253cd23abb26917976cec3dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88bf4c34e3dc1de4253cd23abb26917976cec3dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88bf4c34e3dc1de4253cd23abb26917976cec3dc"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "474cd7036b560142240eb1178ad7129dc02cb252", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c4578da00267f279333154dc0b0bba391fe878a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c4578da00267f279333154dc0b0bba391fe878a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6c4578da00267f279333154dc0b0bba391fe878a", "patch": "@@ -1,3 +1,8 @@\n+2018-05-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/54613\n+\t* intrinsic.texi: Document BACK for MINLOC and MAXLOC.\n+\n 2018-05-10  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/68846"}, {"sha": "adea02a78e5d66c8d1d093f840744017c51b72ef", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c4578da00267f279333154dc0b0bba391fe878a/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c4578da00267f279333154dc0b0bba391fe878a/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=6c4578da00267f279333154dc0b0bba391fe878a", "patch": "@@ -9991,23 +9991,26 @@ locations of the maximum element along each row of the array in the\n @var{DIM} direction.  If @var{MASK} is present, only the elements for\n which @var{MASK} is @code{.TRUE.} are considered.  If more than one\n element in the array has the maximum value, the location returned is\n-that of the first such element in array element order.  If the array has\n-zero size, or all of the elements of @var{MASK} are @code{.FALSE.}, then\n+that of the first such element in array element order if the\n+@var{BACK} is not present, or if it false; otherwise, the location\n+returned is that of the first such element. If the array has zero\n+size, or all of the elements of @var{MASK} are @code{.FALSE.}, then\n the result is an array of zeroes.  Similarly, if @var{DIM} is supplied\n and all of the elements of @var{MASK} along a given row are zero, the\n result value for that row is zero.\n \n @item @emph{Standard}:\n Fortran 95 and later; @var{ARRAY} of @code{CHARACTER} and the\n @var{KIND} argument are available in Fortran 2003 and later.\n+The @var{BACK} argument is available in Fortran 2008 and later.\n \n @item @emph{Class}:\n Transformational function\n \n @item @emph{Syntax}:\n @multitable @columnfractions .80\n-@item @code{RESULT = MAXLOC(ARRAY, DIM [, MASK] [,KIND])}\n-@item @code{RESULT = MAXLOC(ARRAY [, MASK] [,KIND])}\n+@item @code{RESULT = MAXLOC(ARRAY, DIM [, MASK] [,KIND] [,BACK])}\n+@item @code{RESULT = MAXLOC(ARRAY [, MASK] [,KIND] [,BACK])}\n @end multitable\n \n @item @emph{Arguments}:\n@@ -10021,6 +10024,7 @@ inclusive.  It may not be an optional dummy argument.\n and conformable with @var{ARRAY}.\n @item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n expression indicating the kind parameter of the result.\n+@item @var{BACK} @tab (Optional) A scalar of type @code{LOGICAL}.\n @end multitable\n \n @item @emph{Return value}:\n@@ -10343,7 +10347,9 @@ locations of the minimum element along each row of the array in the\n @var{DIM} direction.  If @var{MASK} is present, only the elements for\n which @var{MASK} is @code{.TRUE.} are considered.  If more than one\n element in the array has the minimum value, the location returned is\n-that of the first such element in array element order.  If the array has\n+that of the first such element in array element order if the\n+@var{BACK} is not present, or if it false; otherwise, the location\n+returned is that of the first such element.  If the array has\n zero size, or all of the elements of @var{MASK} are @code{.FALSE.}, then\n the result is an array of zeroes.  Similarly, if @var{DIM} is supplied\n and all of the elements of @var{MASK} along a given row are zero, the\n@@ -10352,14 +10358,15 @@ result value for that row is zero.\n @item @emph{Standard}:\n Fortran 95 and later; @var{ARRAY} of @code{CHARACTER} and the\n @var{KIND} argument are available in Fortran 2003 and later.\n+The @var{BACK} argument is available in Fortran 2008 and later.\n \n @item @emph{Class}:\n Transformational function\n \n @item @emph{Syntax}:\n @multitable @columnfractions .80\n-@item @code{RESULT = MINLOC(ARRAY, DIM [, MASK] [,KIND])}\n-@item @code{RESULT = MINLOC(ARRAY [, MASK], [,KIND])}\n+@item @code{RESULT = MINLOC(ARRAY, DIM [, MASK] [,KIND] [,BACK])}\n+@item @code{RESULT = MINLOC(ARRAY [, MASK], [,KIND] [,BACK])}\n @end multitable\n \n @item @emph{Arguments}:\n@@ -10373,6 +10380,7 @@ inclusive.  It may not be an optional dummy argument.\n and conformable with @var{ARRAY}.\n @item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n expression indicating the kind parameter of the result.\n+@item @var{BACK} @tab (Optional) A scalar of type @code{LOGICAL}.\n @end multitable\n \n @item @emph{Return value}:"}]}