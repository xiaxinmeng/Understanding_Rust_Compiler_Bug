{"sha": "d4d3092396c9a4045e87252431461f61a69e13aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRkMzA5MjM5NmM5YTQwNDVlODcyNTI0MzE0NjFmNjFhNjllMTNhYQ==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2018-08-15T12:24:54Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2018-08-15T12:24:54Z"}, "message": "S/390: Remove branch splitting loop\n\nSince there is no branch splitting anymore, the loop is no longer\nnecessary: pool chunkification can be done in one step.\n\ngcc/ChangeLog:\n\n2018-08-15  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* config/s390/s390.c (s390_reorg): Remove loop.\n\nFrom-SVN: r263557", "tree": {"sha": "1235ea6d72c5455877893619611b202523d7b82f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1235ea6d72c5455877893619611b202523d7b82f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4d3092396c9a4045e87252431461f61a69e13aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d3092396c9a4045e87252431461f61a69e13aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4d3092396c9a4045e87252431461f61a69e13aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d3092396c9a4045e87252431461f61a69e13aa/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7273331429916a0c203b1064e0414c741c06a78f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7273331429916a0c203b1064e0414c741c06a78f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7273331429916a0c203b1064e0414c741c06a78f"}], "stats": {"total": 74, "additions": 21, "deletions": 53}, "files": [{"sha": "5728118c982ebc4f60394bf743cfa223d518a6a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d3092396c9a4045e87252431461f61a69e13aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d3092396c9a4045e87252431461f61a69e13aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4d3092396c9a4045e87252431461f61a69e13aa", "patch": "@@ -1,3 +1,7 @@\n+2018-08-15  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* config/s390/s390.c (s390_reorg): Remove loop.\n+\n 2018-08-15  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.c"}, {"sha": "5c2a8cb2c6cb8986641daff570ed65f8c84759c6", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 17, "deletions": 53, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d3092396c9a4045e87252431461f61a69e13aa/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d3092396c9a4045e87252431461f61a69e13aa/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d4d3092396c9a4045e87252431461f61a69e13aa", "patch": "@@ -14023,7 +14023,7 @@ s390_adjust_loops ()\n static void\n s390_reorg (void)\n {\n-  bool pool_overflow = false;\n+  struct constant_pool *pool;\n   rtx_insn *insn;\n   int hw_before, hw_after;\n \n@@ -14035,62 +14035,26 @@ s390_reorg (void)\n   split_all_insns_noflow ();\n \n   /* Install the main literal pool and the associated base\n-     register load insns.\n-\n-     In addition, there are two problematic situations we need\n-     to correct:\n-\n-     - the literal pool might be > 4096 bytes in size, so that\n-       some of its elements cannot be directly accessed\n-\n-     - a branch target might be > 64K away from the branch, so that\n-       it is not possible to use a PC-relative instruction.\n+     register load insns.  The literal pool might be > 4096 bytes in\n+     size, so that some of its elements cannot be directly accessed.\n \n-     To fix those, we split the single literal pool into multiple\n+     To fix this, we split the single literal pool into multiple\n      pool chunks, reloading the pool base register at various\n      points throughout the function to ensure it always points to\n-     the pool chunk the following code expects, and / or replace\n-     PC-relative branches by absolute branches.\n-\n-     However, the two problems are interdependent: splitting the\n-     literal pool can move a branch further away from its target,\n-     causing the 64K limit to overflow, and on the other hand,\n-     replacing a PC-relative branch by an absolute branch means\n-     we need to put the branch target address into the literal\n-     pool, possibly causing it to overflow.\n-\n-     So, we loop trying to fix up both problems until we manage\n-     to satisfy both conditions at the same time.  Note that the\n-     loop is guaranteed to terminate as every pass of the loop\n-     strictly decreases the total number of PC-relative branches\n-     in the function.  (This is not completely true as there\n-     might be branch-over-pool insns introduced by chunkify_start.\n-     Those never need to be split however.)  */\n-\n-  for (;;)\n-    {\n-      struct constant_pool *pool = NULL;\n-\n-      /* Collect the literal pool.  */\n-      if (!pool_overflow)\n-\t{\n-\t  pool = s390_mainpool_start ();\n-\t  if (!pool)\n-\t    pool_overflow = true;\n-\t}\n-\n-      /* If literal pool overflowed, start to chunkify it.  */\n-      if (pool_overflow)\n-\tpool = s390_chunkify_start ();\n+     the pool chunk the following code expects.  */\n \n-      /* If we made it up to here, both conditions are satisfied.\n-\t Finish up literal pool related changes.  */\n-      if (pool_overflow)\n-\ts390_chunkify_finish (pool);\n-      else\n-\ts390_mainpool_finish (pool);\n-\n-      break;\n+  /* Collect the literal pool.  */\n+  pool = s390_mainpool_start ();\n+  if (pool)\n+    {\n+      /* Finish up literal pool related changes.  */\n+      s390_mainpool_finish (pool);\n+    }\n+  else\n+    {\n+      /* If literal pool overflowed, chunkify it.  */\n+      pool = s390_chunkify_start ();\n+      s390_chunkify_finish (pool);\n     }\n \n   /* Generate out-of-pool execute target insns.  */"}]}