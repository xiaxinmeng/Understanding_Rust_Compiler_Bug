{"sha": "6822e1b3e497703bd5a6691d44814198221d9584", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgyMmUxYjNlNDk3NzAzYmQ1YTY2OTFkNDQ4MTQxOTgyMjFkOTU4NA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-23T15:12:08Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-26T13:13:35Z"}, "message": "Add GENERIC support for TypeCastExpr to call fold_convert_loc", "tree": {"sha": "bf44a7ef29bdaa802b1bdb2ffb92656fd4d9c345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf44a7ef29bdaa802b1bdb2ffb92656fd4d9c345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6822e1b3e497703bd5a6691d44814198221d9584", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6822e1b3e497703bd5a6691d44814198221d9584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6822e1b3e497703bd5a6691d44814198221d9584", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6822e1b3e497703bd5a6691d44814198221d9584/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75750d58cefe00aaf0a9512286cd47115940a469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75750d58cefe00aaf0a9512286cd47115940a469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75750d58cefe00aaf0a9512286cd47115940a469"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "2a147abcf096a0c4c0012e43808464ceb00b50c3", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6822e1b3e497703bd5a6691d44814198221d9584/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6822e1b3e497703bd5a6691d44814198221d9584/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=6822e1b3e497703bd5a6691d44814198221d9584", "patch": "@@ -417,6 +417,24 @@ class CompileExpr : public HIRCompileBase\n       = ctx->get_backend ()->negation_expression (op, negated_expr, location);\n   }\n \n+  void visit (HIR::TypeCastExpr &expr) override\n+  {\n+    TyTy::BaseType *tyty_to_cast_to = nullptr;\n+    if (!ctx->get_tyctx ()->lookup_type (expr.get_mappings ().get_hirid (),\n+\t\t\t\t\t &tyty_to_cast_to))\n+      {\n+\ttranslated = ctx->get_backend ()->error_expression ();\n+\treturn;\n+      }\n+\n+    auto type_to_cast_to = TyTyResolveCompile::compile (ctx, tyty_to_cast_to);\n+    auto casted_expr\n+      = CompileExpr::Compile (expr.get_casted_expr ().get (), ctx);\n+    translated\n+      = ctx->get_backend ()->convert_expression (type_to_cast_to, casted_expr,\n+\t\t\t\t\t\t expr.get_locus ());\n+  }\n+\n   void visit (HIR::IfExpr &expr) override\n   {\n     auto stmt = CompileConditionalBlocks::compile (&expr, ctx, nullptr);"}]}