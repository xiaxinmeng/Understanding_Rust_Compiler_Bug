{"sha": "4303c581960b6069e8893d88da5461d9286c37e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwM2M1ODE5NjBiNjA2OWU4ODkzZDg4ZGE1NDYxZDkyODZjMzdlOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2014-08-07T18:02:06Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2014-08-07T18:02:06Z"}, "message": "Makefile.in (LIBGCOV_INTERFACE): Move _gcov_dump ...\n\n\t* Makefile.in (LIBGCOV_INTERFACE): Move _gcov_dump ...\n\t(LIBGCOV_DRIVER): ... to here.\n\t* libgcov.h (gcov_do_dump): New #define.\n\t(struct gcov_root): New.\n\t(__gcov_root): New declaration.\n\t(__gcov_dump_one): Declare.\n\t* libgcov-driver.c (gcov_list, gcov_dump_complete,\n\trun_accounted): Delete.\n\t(gcov_compute_histogram): Add LIST argument, adjust.\n\t(compute_summary): Adjust gcov_compute_histogram call.\n\t(gcov_do_dump): Not hidden, static in libgcov.\n\t(gcov_clear): Move  to interface.c.\n\t(__gcov_dump_one): New, broken out of ...\n\t(gcov_exit): ... here.  Make static.\n\t(__gcov_root): New.\n\t(__gcov_init): Adjust.\n\t* libgcov-interface.c (gcov_clear, gcov_exit): Remove\n\tdeclarations.\n\t(__gcov_flush): Use __gcov_dump_one and __gcov_reset.\n\t(gcov_clear): Moved from driver.c.   Add LIST argument.\n\t(__gcov_reset): Adjust for changed interfaces.\n\t(__gcov_fork): Remove local declaration of __gcov_flush_mx.\n\nFrom-SVN: r213719", "tree": {"sha": "96f601ae4d1e3bbc82671ac85806d78d72ba85a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96f601ae4d1e3bbc82671ac85806d78d72ba85a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4303c581960b6069e8893d88da5461d9286c37e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4303c581960b6069e8893d88da5461d9286c37e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4303c581960b6069e8893d88da5461d9286c37e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4303c581960b6069e8893d88da5461d9286c37e8/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8bd8ef50e46874632c6cbd5f1446f7a6712f979c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bd8ef50e46874632c6cbd5f1446f7a6712f979c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bd8ef50e46874632c6cbd5f1446f7a6712f979c"}], "stats": {"total": 167, "additions": 97, "deletions": 70}, "files": [{"sha": "911c16d3e3eb463ec1f6a960aed4e14dd75d3db3", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=4303c581960b6069e8893d88da5461d9286c37e8", "patch": "@@ -1,3 +1,28 @@\n+2014-08-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in (LIBGCOV_INTERFACE): Move _gcov_dump ...\n+\t(LIBGCOV_DRIVER): ... to here.\n+\t* libgcov.h (gcov_do_dump): New #define.\n+\t(struct gcov_root): New.\n+\t(__gcov_root): New declaration.\n+\t(__gcov_dump_one): Declare.\n+\t* libgcov-driver.c (gcov_list, gcov_dump_complete,\n+\trun_accounted): Delete.\n+\t(gcov_compute_histogram): Add LIST argument, adjust.\n+\t(compute_summary): Adjust gcov_compute_histogram call.\n+\t(gcov_do_dump): Not hidden, static in libgcov.\n+\t(gcov_clear): Move  to interface.c.\n+\t(__gcov_dump_one): New, broken out of ...\n+\t(gcov_exit): ... here.  Make static.\n+\t(__gcov_root): New.\n+\t(__gcov_init): Adjust.\n+\t* libgcov-interface.c (gcov_clear, gcov_exit): Remove\n+\tdeclarations.\n+\t(__gcov_flush): Use __gcov_dump_one and __gcov_reset.\n+\t(gcov_clear): Moved from driver.c.   Add LIST argument.\n+\t(__gcov_reset): Adjust for changed interfaces.\n+\t(__gcov_fork): Remove local declaration of __gcov_flush_mx.\n+\n 2014-08-04  Rohit  <rohitarulraj@freescale.com>\n \n \tPR target/60102"}, {"sha": "e9caad3eeecf8b58b2c21fdac6114fb9f9e2c311", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=4303c581960b6069e8893d88da5461d9286c37e8", "patch": "@@ -859,9 +859,8 @@ LIBGCOV_PROFILER = _gcov_interval_profiler _gcov_pow2_profiler\t\t\\\n  \t_gcov_average_profiler _gcov_ior_profiler\t\t\t\\\n \t_gcov_indirect_call_profiler_v2 _gcov_time_profiler\n LIBGCOV_INTERFACE = _gcov_flush _gcov_fork _gcov_execl _gcov_execlp    \\\n-\t_gcov_execle _gcov_execv _gcov_execvp _gcov_execve _gcov_reset \\\n-\t_gcov_dump\n-LIBGCOV_DRIVER = _gcov \n+\t_gcov_execle _gcov_execv _gcov_execvp _gcov_execve _gcov_reset\n+LIBGCOV_DRIVER = _gcov _gcov_dump\n \n libgcov-merge-objects = $(patsubst %,%$(objext),$(LIBGCOV_MERGE))\n libgcov-profiler-objects = $(patsubst %,%$(objext),$(LIBGCOV_PROFILER))"}, {"sha": "34c58cd5feca5c6db06c14c8f8c691f9d780bca2", "filename": "libgcc/libgcov-driver.c", "status": "modified", "additions": 20, "deletions": 57, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2Flibgcov-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2Flibgcov-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-driver.c?ref=4303c581960b6069e8893d88da5461d9286c37e8", "patch": "@@ -73,16 +73,6 @@ struct gcov_filename\n   size_t prefix; /* chars to prepend to filename */\n };\n \n-/* Chain of per-object gcov structures.  */\n-#ifndef IN_GCOV_TOOL\n-/* We need to expose this static variable when compiling for gcov-tool.  */\n-static\n-#endif\n-struct gcov_info *gcov_list;\n-\n-/* Flag when the profile has already been dumped via __gcov_dump().  */\n-static int gcov_dump_complete;\n-\n static struct gcov_fn_buffer *\n free_fn_data (const struct gcov_info *gi_ptr, struct gcov_fn_buffer *buffer,\n               unsigned limit)\n@@ -222,7 +212,7 @@ gcov_histogram_insert(gcov_bucket_type *histogram, gcov_type value)\n /* Computes a histogram of the arc counters to place in the summary SUM.  */\n \n static void\n-gcov_compute_histogram (struct gcov_summary *sum)\n+gcov_compute_histogram (struct gcov_info *list, struct gcov_summary *sum)\n {\n   struct gcov_info *gi_ptr;\n   const struct gcov_fn_info *gfi_ptr;\n@@ -248,7 +238,7 @@ gcov_compute_histogram (struct gcov_summary *sum)\n \n   /* Walk through all the per-object structures and record each of\n      the count values in histogram.  */\n-  for (gi_ptr = gcov_list; gi_ptr; gi_ptr = gi_ptr->next)\n+  for (gi_ptr = list; gi_ptr; gi_ptr = gi_ptr->next)\n     {\n       if (!gi_ptr->merge[t_ix])\n         continue;\n@@ -279,10 +269,6 @@ gcov_compute_histogram (struct gcov_summary *sum)\n static struct gcov_fn_buffer *fn_buffer;\n /* buffer for summary from other programs to be written out. */\n static struct gcov_summary_buffer *sum_buffer;\n-/* If application calls fork or exec multiple times, we end up storing\n-   profile repeadely.  We should not account this as multiple runs or\n-   functions executed once may mistakely become cold.  */\n-static int run_accounted = 0;\n \n /* This function computes the program level summary and the histo-gram.\n    It computes and returns CRC32 and stored summary in THIS_PRG.\n@@ -346,7 +332,7 @@ compute_summary (struct gcov_info *list, struct gcov_summary *this_prg,\n             }\n         }\n     }\n-  gcov_compute_histogram (this_prg);\n+  gcov_compute_histogram (list, this_prg);\n   return crc32;\n }\n \n@@ -752,7 +738,10 @@ read_fatal:;\n    summary and then traverses gcov_list list and dumps the gcov_info\n    objects one by one.  */\n \n-void ATTRIBUTE_HIDDEN\n+#if !IN_GCOV_TOOL\n+static\n+#endif\n+void\n gcov_do_dump (struct gcov_info *list, int run_counted)\n {\n   struct gcov_info *gi_ptr;\n@@ -777,50 +766,24 @@ gcov_do_dump (struct gcov_info *list, int run_counted)\n \n #if !IN_GCOV_TOOL\n void\n-gcov_exit (void)\n+__gcov_dump_one (struct gcov_root *root)\n {\n-  /* Prevent the counters from being dumped a second time on exit when the\n-     application already wrote out the profile using __gcov_dump().  */\n-  if (gcov_dump_complete)\n+  if (root->dumped)\n     return;\n \n-  gcov_dump_complete = 1;\n-\n-  gcov_do_dump (gcov_list, run_accounted);\n+  gcov_do_dump (root->list, root->run_counted);\n   \n-  run_accounted = 1;\n+  root->dumped = 1;\n+  root->run_counted = 1;\n }\n \n-/* Reset all counters to zero.  */\n+/* Per-program/shared-object gcov state.  */\n+struct gcov_root __gcov_root;\n \n-void\n-gcov_clear (void)\n+static void\n+gcov_exit (void)\n {\n-  const struct gcov_info *gi_ptr;\n-\n-  gcov_dump_complete = 0;\n-  for (gi_ptr = gcov_list; gi_ptr; gi_ptr = gi_ptr->next)\n-    {\n-      unsigned f_ix;\n-\n-      for (f_ix = 0; f_ix < gi_ptr->n_functions; f_ix++)\n-        {\n-          unsigned t_ix;\n-          const struct gcov_fn_info *gfi_ptr = gi_ptr->functions[f_ix];\n-\n-          if (!gfi_ptr || gfi_ptr->key != gi_ptr)\n-            continue;\n-          const struct gcov_ctr_info *ci_ptr = gfi_ptr->ctrs;\n-          for (t_ix = 0; t_ix != GCOV_COUNTERS; t_ix++)\n-            {\n-              if (!gi_ptr->merge[t_ix])\n-                continue;\n-\n-              memset (ci_ptr->values, 0, sizeof (gcov_type) * ci_ptr->num);\n-              ci_ptr++;\n-            }\n-        }\n-    }\n+  __gcov_dump_one (&__gcov_root);\n }\n \n /* Add a new object file onto the bb chain.  Invoked automatically\n@@ -833,11 +796,11 @@ __gcov_init (struct gcov_info *info)\n     return;\n   if (gcov_version (info, info->version, 0))\n     {\n-      if (!gcov_list)\n+      if (!__gcov_root.list)\n         atexit (gcov_exit);\n \n-      info->next = gcov_list;\n-      gcov_list = info;\n+      info->next = __gcov_root.list;\n+      __gcov_root.list = info;\n     }\n   info->version = 0;\n }"}, {"sha": "f73666c136729ebc58364313110ea6c2e26184d2", "filename": "libgcc/libgcov-interface.c", "status": "modified", "additions": 37, "deletions": 9, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2Flibgcov-interface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2Flibgcov-interface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-interface.c?ref=4303c581960b6069e8893d88da5461d9286c37e8", "patch": "@@ -42,8 +42,7 @@ void __gcov_dump (void) {}\n \n #else\n \n-extern void gcov_clear (void) ATTRIBUTE_HIDDEN;\n-extern void gcov_exit (void) ATTRIBUTE_HIDDEN;\n+extern __gthread_mutex_t __gcov_flush_mx ATTRIBUTE_HIDDEN;\n extern __gthread_mutex_t __gcov_flush_mx ATTRIBUTE_HIDDEN;\n \n #ifdef L_gcov_flush\n@@ -77,8 +76,8 @@ __gcov_flush (void)\n   init_mx_once ();\n   __gthread_mutex_lock (&__gcov_flush_mx);\n \n-  gcov_exit ();\n-  gcov_clear ();\n+  __gcov_dump_one (&__gcov_root);\n+  __gcov_reset ();\n \n   __gthread_mutex_unlock (&__gcov_flush_mx);\n }\n@@ -87,31 +86,61 @@ __gcov_flush (void)\n \n #ifdef L_gcov_reset\n \n+/* Reset all counters to zero.  */\n+\n+static void\n+gcov_clear (const struct gcov_info *list)\n+{\n+  const struct gcov_info *gi_ptr;\n+\n+  for (gi_ptr = list; gi_ptr; gi_ptr = gi_ptr->next)\n+    {\n+      unsigned f_ix;\n+\n+      for (f_ix = 0; f_ix < gi_ptr->n_functions; f_ix++)\n+        {\n+          unsigned t_ix;\n+          const struct gcov_fn_info *gfi_ptr = gi_ptr->functions[f_ix];\n+\n+          if (!gfi_ptr || gfi_ptr->key != gi_ptr)\n+            continue;\n+          const struct gcov_ctr_info *ci_ptr = gfi_ptr->ctrs;\n+          for (t_ix = 0; t_ix != GCOV_COUNTERS; t_ix++)\n+            {\n+              if (!gi_ptr->merge[t_ix])\n+                continue;\n+\n+              memset (ci_ptr->values, 0, sizeof (gcov_type) * ci_ptr->num);\n+              ci_ptr++;\n+            }\n+        }\n+    }\n+}\n+\n /* Function that can be called from application to reset counters to zero,\n    in order to collect profile in region of interest.  */\n \n void\n __gcov_reset (void)\n {\n-  gcov_clear ();\n+  gcov_clear (__gcov_root.list);\n+  __gcov_root.dumped = 0;\n }\n \n #endif /* L_gcov_reset */\n \n #ifdef L_gcov_dump\n-\n /* Function that can be called from application to write profile collected\n    so far, in order to collect profile in region of interest.  */\n \n void\n __gcov_dump (void)\n {\n-  gcov_exit ();\n+  __gcov_dump_one (&__gcov_root);\n }\n \n #endif /* L_gcov_dump */\n \n-\n #ifdef L_gcov_fork\n /* A wrapper for the fork function.  Flushes the accumulated profiling data, so\n    that they are not counted twice.  */\n@@ -120,7 +149,6 @@ pid_t\n __gcov_fork (void)\n {\n   pid_t pid;\n-  extern __gthread_mutex_t __gcov_flush_mx;\n   __gcov_flush ();\n   pid = fork ();\n   if (pid == 0)"}, {"sha": "dfef181ce1a63d72603156f1b424550333a713fc", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4303c581960b6069e8893d88da5461d9286c37e8/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=4303c581960b6069e8893d88da5461d9286c37e8", "patch": "@@ -100,7 +100,6 @@ typedef unsigned gcov_type_unsigned __attribute__ ((mode (QI)));\n #define gcov_read_unsigned __gcov_read_unsigned\n #define gcov_read_counter __gcov_read_counter\n #define gcov_read_summary __gcov_read_summary\n-#define gcov_do_dump __gcov_do_dump\n \n #else /* IN_GCOV_TOOL */\n /* About the host.  */\n@@ -207,6 +206,19 @@ struct gcov_info\n #endif /* !IN_GCOV_TOOL */\n };\n \n+/* Root of a program/shared-object state */\n+struct gcov_root\n+{\n+  struct gcov_info *list;\n+  unsigned dumped : 1;\t/* counts have been dumped.  */\n+  unsigned run_counted : 1;  /* run has been accounted for.  */\n+};\n+\n+extern struct gcov_root __gcov_root ATTRIBUTE_HIDDEN;\n+\n+/* Dump a set of gcov objects.  */\n+extern void __gcov_dump_one (struct gcov_root *) ATTRIBUTE_HIDDEN;\n+\n /* Register a new object file module.  */\n extern void __gcov_init (struct gcov_info *) ATTRIBUTE_HIDDEN;\n "}]}