{"sha": "7da35c0f68cd2f53a7124aee3b5c71e70655c231", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RhMzVjMGY2OGNkMmY1M2E3MTI0YWVlM2I1YzcxZTcwNjU1YzIzMQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@apple.com", "date": "2006-10-16T20:07:46Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-10-16T20:07:46Z"}, "message": "asm-4.c: Fix inline asm for darwin x86_64.\n\n2006-10-16  Eric Christopher  <echristo@apple.com>\n\n        * gcc.target/i386/asm-4.c: Fix inline asm for darwin\n        x86_64.\n\nFrom-SVN: r117795", "tree": {"sha": "588aa5d4cf2a1d7ba3a0f4e1ee2b8ea0cbbeeabd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/588aa5d4cf2a1d7ba3a0f4e1ee2b8ea0cbbeeabd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7da35c0f68cd2f53a7124aee3b5c71e70655c231", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da35c0f68cd2f53a7124aee3b5c71e70655c231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da35c0f68cd2f53a7124aee3b5c71e70655c231", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da35c0f68cd2f53a7124aee3b5c71e70655c231/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9292251252fac782337985692acf17c0c650192c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9292251252fac782337985692acf17c0c650192c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9292251252fac782337985692acf17c0c650192c"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "560c025f76ce169f4892ce9468972d6eeaaa49a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da35c0f68cd2f53a7124aee3b5c71e70655c231/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da35c0f68cd2f53a7124aee3b5c71e70655c231/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7da35c0f68cd2f53a7124aee3b5c71e70655c231", "patch": "@@ -1,3 +1,8 @@\n+2006-10-16  Eric Christopher  <echristo@apple.com>\n+\n+\t* gcc.target/i386/asm-4.c: Fix inline asm for darwin\n+\tx86_64.\n+\n 2006-10-16  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/28211"}, {"sha": "d077e3a9871306bc278bb4d94e85530b3e9e8c34", "filename": "gcc/testsuite/gcc.target/i386/asm-4.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da35c0f68cd2f53a7124aee3b5c71e70655c231/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da35c0f68cd2f53a7124aee3b5c71e70655c231/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-4.c?ref=7da35c0f68cd2f53a7124aee3b5c71e70655c231", "patch": "@@ -25,7 +25,13 @@ int (*fn) (int, int, int, int);\n void\n baz (void)\n {\n+  /* Darwin loads 64-bit regions above the 4GB boundary so\n+     we need to use this instead.  */\n+#if defined (__LP64__) && defined (__MACH__)\n+  __asm (\"leaq foo(%%rip), %0\" : \"=r\" (fn));\n+#else\n   __asm (\"movl $foo, %k0\" : \"=r\" (fn));\n+#endif\n   if (fn (2, 3, 4, 5) != 14)\n     abort ();\n }"}]}