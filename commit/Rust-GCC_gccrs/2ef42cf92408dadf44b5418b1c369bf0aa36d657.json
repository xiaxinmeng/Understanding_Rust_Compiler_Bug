{"sha": "2ef42cf92408dadf44b5418b1c369bf0aa36d657", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmNDJjZjkyNDA4ZGFkZjQ0YjU0MThiMWMzNjliZjBhYTM2ZDY1Nw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-04-25T16:39:57Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-04-25T16:39:57Z"}, "message": "re PR sanitizer/80349 (UBSAN: compile time crash with \"type mismatch in binary expression\" message)\n\n\tPR sanitizer/80349\n\t* fold-const.c (fold_binary_loc) <case BIT_IOR_EXPR>: Convert arg0's\n\tfirst argument to type.\n\n\t* g++.dg/ubsan/pr80349-2.C: New test.\n\nFrom-SVN: r247257", "tree": {"sha": "0559664ecf5005057eead62d6c64c33d51e42534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0559664ecf5005057eead62d6c64c33d51e42534"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ef42cf92408dadf44b5418b1c369bf0aa36d657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef42cf92408dadf44b5418b1c369bf0aa36d657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef42cf92408dadf44b5418b1c369bf0aa36d657", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef42cf92408dadf44b5418b1c369bf0aa36d657/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70caf430fe8b94a213f60ef7798766990da1b311", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70caf430fe8b94a213f60ef7798766990da1b311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70caf430fe8b94a213f60ef7798766990da1b311"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "1d35b3c9c2c47f34514862e792db13743c0778c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef42cf92408dadf44b5418b1c369bf0aa36d657/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef42cf92408dadf44b5418b1c369bf0aa36d657/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ef42cf92408dadf44b5418b1c369bf0aa36d657", "patch": "@@ -1,3 +1,9 @@\n+2017-04-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/80349\n+\t* fold-const.c (fold_binary_loc) <case BIT_IOR_EXPR>: Convert arg0's\n+\tfirst argument to type.\n+\n 2017-04-25  Bill Seurer  <seurer@linux.vnet.ibm.com>\n \n \tPR target/80482"}, {"sha": "ce4b2df8cd2c7c1756dc7a8ec81d90e8560044db", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef42cf92408dadf44b5418b1c369bf0aa36d657/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef42cf92408dadf44b5418b1c369bf0aa36d657/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=2ef42cf92408dadf44b5418b1c369bf0aa36d657", "patch": "@@ -9898,8 +9898,10 @@ fold_binary_loc (location_t loc,\n \n \t  /* If (C1|C2) == ~0 then (X&C1)|C2 becomes X|C2.  */\n \t  if (msk.and_not (c1 | c2) == 0)\n-\t    return fold_build2_loc (loc, BIT_IOR_EXPR, type,\n-\t\t\t\t    TREE_OPERAND (arg0, 0), arg1);\n+\t    {\n+\t      tem = fold_convert_loc (loc, type, TREE_OPERAND (arg0, 0));\n+\t      return fold_build2_loc (loc, BIT_IOR_EXPR, type, tem, arg1);\n+\t    }\n \n \t  /* Minimize the number of bits set in C1, i.e. C1 := C1 & ~C2,\n \t     unless (C1 & ~C2) | (C2 & C3) for some C3 is a mask of some"}, {"sha": "0b2e208561257017ef26102bf46e5bbbae6c0157", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef42cf92408dadf44b5418b1c369bf0aa36d657/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef42cf92408dadf44b5418b1c369bf0aa36d657/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ef42cf92408dadf44b5418b1c369bf0aa36d657", "patch": "@@ -1,3 +1,8 @@\n+2017-04-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/80349\n+\t* g++.dg/ubsan/pr80349-2.C: New test.\n+\n 2017-04-25  Volker Reichelt  <v.reichelt@netcologne.de>\n \n \t* g++.dg/cpp0x/enum34.C: New test."}, {"sha": "ca5ea4a0dbe2cad0c08ace38aa46d8201b5a6e81", "filename": "gcc/testsuite/g++.dg/ubsan/pr80349-2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef42cf92408dadf44b5418b1c369bf0aa36d657/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr80349-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef42cf92408dadf44b5418b1c369bf0aa36d657/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr80349-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr80349-2.C?ref=2ef42cf92408dadf44b5418b1c369bf0aa36d657", "patch": "@@ -0,0 +1,11 @@\n+// PR sanitizer/80349\n+// { dg-do compile }\n+// { dg-options \"-fsanitize=undefined\" }\n+\n+unsigned long int ll;\n+\n+int\n+foo ()\n+{\n+  return (2036854775807 >> ll & char(207648476159223) | 502810590243120797UL) << 0;\n+}"}]}