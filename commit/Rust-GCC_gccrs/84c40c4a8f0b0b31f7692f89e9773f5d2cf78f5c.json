{"sha": "84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRjNDBjNGE4ZjBiMGIzMWY3NjkyZjg5ZTk3NzNmNWQyY2Y3OGY1Yw==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2009-05-22T17:58:45Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2009-05-22T17:58:45Z"}, "message": "win32.S (_ffi_closure_STDCALL): New function.\n\n\t* src/x86/win32.S (_ffi_closure_STDCALL):  New function.\n\t(.eh_frame):  Add FDE for it.\n\nFrom-SVN: r147802", "tree": {"sha": "232653b4a801cf6086988d952bdd4dd3e7f0f477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/232653b4a801cf6086988d952bdd4dd3e7f0f477"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8353cd27a414d07e1ee6806c0742081f1b3ee899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8353cd27a414d07e1ee6806c0742081f1b3ee899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8353cd27a414d07e1ee6806c0742081f1b3ee899"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "d4da6b37025afd1c1000e792707fdf1b1154b16c", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c", "patch": "@@ -1,3 +1,8 @@\n+2009-05-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* src/x86/win32.S (_ffi_closure_STDCALL):  New function.\n+\t(.eh_frame):  Add FDE for it.\n+\n 2009-05-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \t* configure.ac:  Also check if assembler supports pc-relative"}, {"sha": "fa480ef95690c6d40f8953ab1792200d15fa1464", "filename": "libffi/src/x86/win32.S", "status": "modified", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c/libffi%2Fsrc%2Fx86%2Fwin32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c/libffi%2Fsrc%2Fx86%2Fwin32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fwin32.S?ref=84c40c4a8f0b0b31f7692f89e9773f5d2cf78f5c", "patch": "@@ -390,6 +390,70 @@ _ffi_closure_raw_SYSV:\n \n #endif /* !FFI_NO_RAW_API */\n \n+        # This assumes we are using gas.\n+\t.balign\t16\n+\t.globl\t_ffi_closure_STDCALL\n+\t.def\t_ffi_closure_STDCALL;\t.scl\t2;\t.type\t32;\t.endef\n+_ffi_closure_STDCALL:\n+.LFB5:\n+\tpushl\t%ebp\n+.LCFI9:\n+\tmovl\t%esp, %ebp\n+.LCFI10:\n+\tsubl\t$40, %esp\n+\tleal\t-24(%ebp), %edx\n+\tmovl\t%edx, -12(%ebp)\t/* resp */\n+\tleal\t12(%ebp), %edx  /* account for stub return address on stack */\n+\tmovl\t%edx, 4(%esp)\t/* args */\n+\tleal\t-12(%ebp), %edx\n+\tmovl\t%edx, (%esp)\t/* &resp */\n+\tcall\t_ffi_closure_SYSV_inner\n+\tmovl\t-12(%ebp), %ecx\n+\t/* It would be nice to just share this code with the\n+\t   duplicate sequence in _ffi_closure_SYSV, if only\n+\t   there were some way to represent that in the EH info.  */\n+\tcmpl\t$FFI_TYPE_INT, %eax\n+\tje\t.Lscls_retint\n+\tcmpl\t$FFI_TYPE_FLOAT, %eax\n+\tje\t.Lscls_retfloat\n+\tcmpl\t$FFI_TYPE_DOUBLE, %eax\n+\tje\t.Lscls_retdouble\n+\tcmpl\t$FFI_TYPE_LONGDOUBLE, %eax\n+\tje\t.Lscls_retldouble\n+\tcmpl\t$FFI_TYPE_SINT64, %eax\n+\tje\t.Lscls_retllong\n+\tcmpl\t$FFI_TYPE_SINT8, %eax\t/* 1-byte struct */\n+\tje\t.Lscls_retstruct1\n+\tcmpl\t$FFI_TYPE_SINT16, %eax\t/* 2-bytes struct */\n+\tje\t.Lscls_retstruct2\n+.Lscls_epilogue:\n+\tmovl\t%ebp, %esp\n+\tpopl\t%ebp\n+\tret\n+.Lscls_retint:\n+\tmovl\t(%ecx), %eax\n+\tjmp\t.Lscls_epilogue\n+.Lscls_retfloat:\n+\tflds\t(%ecx)\n+\tjmp\t.Lscls_epilogue\n+.Lscls_retdouble:\n+\tfldl\t(%ecx)\n+\tjmp\t.Lscls_epilogue\n+.Lscls_retldouble:\n+\tfldt\t(%ecx)\n+\tjmp\t.Lscls_epilogue\n+.Lscls_retllong:\n+\tmovl\t(%ecx), %eax\n+\tmovl\t4(%ecx), %edx\n+\tjmp\t.Lscls_epilogue\n+.Lscls_retstruct1:\n+\tmovsbl\t(%ecx), %eax\n+\tjmp\t.Lscls_epilogue\n+.Lscls_retstruct2:\n+\tmovswl\t(%ecx), %eax\n+\tjmp\t.Lscls_epilogue\n+.ffi_closure_STDCALL_end:\n+.LFE5:\n \n \t.section\t.eh_frame,\"w\"\n .Lframe1:\n@@ -552,3 +616,34 @@ _ffi_closure_raw_SYSV:\n .LEFDE4:\n \n #endif /* !FFI_NO_RAW_API */\n+\n+.LSFDE5:\n+\t.long\t.LEFDE5-.LASFDE5\t/* FDE Length */\n+.LASFDE5:\n+\t.long\t.LASFDE5-.Lframe1\t/* FDE CIE offset */\n+#if defined __PIC__ && defined HAVE_AS_X86_PCREL\n+\t.long\t.LFB5-.\t/* FDE initial location */\n+#else\n+\t.long\t.LFB5\n+#endif\n+\t.long\t.LFE5-.LFB5\t/* FDE address range */\n+#ifdef __PIC__\n+\t.byte\t0x0\t/* .uleb128 0x0; Augmentation size */\n+#endif\n+\t/* DW_CFA_xxx CFI instructions go here.  */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI9-.LFB5\n+\t.byte\t0xe\t/* DW_CFA_def_cfa_offset CFA = r4 + 8 = 8(%esp) */\n+\t.byte\t0x8\t/* .uleb128 0x8 */\n+\t.byte\t0x85\t/* DW_CFA_offset, column 0x5 %ebp at CFA + 2 * -4 */\n+\t.byte\t0x2\t/* .uleb128 0x2 */\n+\n+\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n+\t.long\t.LCFI10-.LCFI9\n+\t.byte\t0xd\t/* DW_CFA_def_cfa_register CFA = r5 = %ebp */\n+\t.byte\t0x5\t/* .uleb128 0x5 */\n+\n+\t/* End of DW_CFA_xxx CFI instructions.  */\n+\t.align 4\n+.LEFDE5:"}]}