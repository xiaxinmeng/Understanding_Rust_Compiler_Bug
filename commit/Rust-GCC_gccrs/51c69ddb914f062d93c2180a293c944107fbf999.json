{"sha": "51c69ddb914f062d93c2180a293c944107fbf999", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFjNjlkZGI5MTRmMDYyZDkzYzIxODBhMjkzYzk0NDEwN2ZiZjk5OQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2008-09-01T13:40:49Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2008-09-01T13:40:49Z"}, "message": "arm.md: Include cortex-r4f.md.\n\n2008-09-01  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* config/arm/arm.md: Include cortex-r4f.md.\n\t(attr fpu): Update type list.\n\t(attr type): Add fcpys, ffariths, ffarithd, fadds, faddd, fconsts,\n\tfconstd, fcmps and fcmpd. \n\t(attr tune_cortexr4): Define.\n\t(attr generic_sched, attr generic_vfp): Use tune_cortexr4.\n\t* config/arm/vfp.md: Document fcpys, ffariths, ffarithd, fadds, faddd,\n\tfconsts, fconstd, fcmps and fcmpd.  Use them in insn patterns.\n\t* config/arm/arm.c (arm_issue_rate): Add cortexr4f.\n\t* config/arm/arm1020e.md (v10_ffarith, v10_farith): Use new insn\n\ttypes.\n\t* config/arm/cortex-a8-neon.md (cortex_a8_vfp_add_sub,\n\tcortex_a8_vfp_farith: Ditto.\n\t* config/arm/vfp11.md (vfp_ffarith, vfp_farith): Ditto.\n\t* config/arm/cortex-r4.md: Use tune_cortexr4.\n\t* config/arm/cortex-r4f.md: New file.\n\nFrom-SVN: r139865", "tree": {"sha": "0be3dc8b233c9750aadeb34c084509825c78d8c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0be3dc8b233c9750aadeb34c084509825c78d8c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51c69ddb914f062d93c2180a293c944107fbf999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c69ddb914f062d93c2180a293c944107fbf999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c69ddb914f062d93c2180a293c944107fbf999", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c69ddb914f062d93c2180a293c944107fbf999/comments", "author": null, "committer": null, "parents": [{"sha": "ff8b183bbbf3de4d4447b5ff5825717c5b92cc87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff8b183bbbf3de4d4447b5ff5825717c5b92cc87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff8b183bbbf3de4d4447b5ff5825717c5b92cc87"}], "stats": {"total": 305, "additions": 251, "deletions": 54}, "files": [{"sha": "2a38a712df7448226b974a78c7dd11ae76e23d00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -1,3 +1,22 @@\n+2008-09-01  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.md: Include cortex-r4f.md.\n+\t(attr fpu): Update type list.\n+\t(attr type): Add fcpys, ffariths, ffarithd, fadds, faddd, fconsts,\n+\tfconstd, fcmps and fcmpd. \n+\t(attr tune_cortexr4): Define.\n+\t(attr generic_sched, attr generic_vfp): Use tune_cortexr4.\n+\t* config/arm/vfp.md: Document fcpys, ffariths, ffarithd, fadds, faddd,\n+\tfconsts, fconstd, fcmps and fcmpd.  Use them in insn patterns.\n+\t* config/arm/arm.c (arm_issue_rate): Add cortexr4f.\n+\t* config/arm/arm1020e.md (v10_ffarith, v10_farith): Use new insn\n+\ttypes.\n+\t* config/arm/cortex-a8-neon.md (cortex_a8_vfp_add_sub,\n+\tcortex_a8_vfp_farith: Ditto.\n+\t* config/arm/vfp11.md (vfp_ffarith, vfp_farith): Ditto.\n+\t* config/arm/cortex-r4.md: Use tune_cortexr4.\n+\t* config/arm/cortex-r4f.md: New file.\n+\n 2008-09-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/37305"}, {"sha": "68f22781eb0c2d0fcafbe6f1974d426674f70807", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -19024,6 +19024,7 @@ arm_issue_rate (void)\n   switch (arm_tune)\n     {\n     case cortexr4:\n+    case cortexr4f:\n     case cortexa8:\n       return 2;\n "}, {"sha": "204f8a4ad6b44c6cf0d06af7b619fb2cab356e6e", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -157,7 +157,7 @@\n ; Floating Point Unit.  If we only have floating point emulation, then there\n ; is no point in scheduling the floating point insns.  (Well, for best\n ; performance we should try and group them together).\n-(define_attr \"fpu\" \"none,fpa,fpe2,fpe3,maverick,vfp\"\n+(define_attr \"fpu\" \"none,fpa,fpe2,fpe3,maverick,vfp,vfpv3d16,vfpv3,neon\"\n   (const (symbol_ref \"arm_fpu_attr\")))\n \n ; LENGTH of an instruction (in bytes)\n@@ -239,7 +239,7 @@\n ;\n \n (define_attr \"type\"\n-\t\"alu,alu_shift,alu_shift_reg,mult,block,float,fdivx,fdivd,fdivs,fmul,fmuls,fmuld,fmacs,fmacd,ffmul,farith,ffarith,f_flag,float_em,f_load,f_store,f_loads,f_loadd,f_stores,f_stored,f_mem_r,r_mem_f,f_2_r,r_2_f,f_cvt,branch,call,load_byte,load1,load2,load3,load4,store1,store2,store3,store4,mav_farith,mav_dmult\"\n+\t\"alu,alu_shift,alu_shift_reg,mult,block,float,fdivx,fdivd,fdivs,fmul,fmuls,fmuld,fmacs,fmacd,ffmul,farith,ffarith,f_flag,float_em,f_load,f_store,f_loads,f_loadd,f_stores,f_stored,f_mem_r,r_mem_f,f_2_r,r_2_f,f_cvt,branch,call,load_byte,load1,load2,load3,load4,store1,store2,store3,store4,mav_farith,mav_dmult,fconsts,fconstd,fadds,faddd,ffariths,ffarithd,fcmps,fcmpd,fcpys\"\n \t(if_then_else \n \t (eq_attr \"insn\" \"smulxy,smlaxy,smlalxy,smulwy,smlawx,mul,muls,mla,mlas,umull,umulls,umlal,umlals,smull,smulls,smlal,smlals\")\n \t (const_string \"mult\")\n@@ -331,18 +331,26 @@\n ;; Processor type.  This is created automatically from arm-cores.def.\n (include \"arm-tune.md\")\n \n+(define_attr \"tune_cortexr4\" \"yes,no\"\n+  (const (if_then_else\n+\t  (eq_attr \"tune\" \"cortexr4,cortexr4f\")\n+\t  (const_string \"yes\")\n+\t  (const_string \"no\"))))\n+\n ;; True if the generic scheduling description should be used.\n \n (define_attr \"generic_sched\" \"yes,no\"\n   (const (if_then_else \n-          (eq_attr \"tune\" \"arm926ejs,arm1020e,arm1026ejs,arm1136js,arm1136jfs,cortexa8,cortexr4\")\n+          (ior (eq_attr \"tune\" \"arm926ejs,arm1020e,arm1026ejs,arm1136js,arm1136jfs,cortexa8\")\n+\t      (eq_attr \"tune_cortexr4\" \"yes\"))\n           (const_string \"no\")\n           (const_string \"yes\"))))\n \n (define_attr \"generic_vfp\" \"yes,no\"\n   (const (if_then_else\n \t  (and (eq_attr \"fpu\" \"vfp\")\n-\t       (eq_attr \"tune\" \"!arm1020e,arm1022e,cortexa8\"))\n+\t       (eq_attr \"tune\" \"!arm1020e,arm1022e,cortexa8\")\n+\t       (eq_attr \"tune_cortexr4\" \"no\"))\n \t  (const_string \"yes\")\n \t  (const_string \"no\"))))\n \n@@ -353,6 +361,7 @@\n (include \"arm1136jfs.md\")\n (include \"cortex-a8.md\")\n (include \"cortex-r4.md\")\n+(include \"cortex-r4f.md\")\n (include \"vfp11.md\")\n \n \f"}, {"sha": "397ddd5f97c9ea6d825cc2a0767f364c00bb4b10", "filename": "gcc/config/arm/arm1020e.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Farm1020e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Farm1020e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1020e.md?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -269,12 +269,12 @@\n ;; first execute state.  We model this by using 1020a_e in the first cycle.\n (define_insn_reservation \"v10_ffarith\" 5\n  (and (eq_attr \"vfp10\" \"yes\")\n-      (eq_attr \"type\" \"ffarith\"))\n+      (eq_attr \"type\" \"fcpys,ffariths,ffarithd,fcmps,fcmpd\"))\n  \"1020a_e+v10_fmac\")\n \n (define_insn_reservation \"v10_farith\" 5\n  (and (eq_attr \"vfp10\" \"yes\")\n-      (eq_attr \"type\" \"farith\"))\n+      (eq_attr \"type\" \"faddd,fadds\"))\n  \"1020a_e+v10_fmac\")\n \n (define_insn_reservation \"v10_cvt\" 5"}, {"sha": "93453b618db71e1d2bdb6af255970529def19716", "filename": "gcc/config/arm/cortex-a8-neon.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -134,7 +134,7 @@\n \n (define_insn_reservation \"cortex_a8_vfp_add_sub\" 10\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"type\" \"farith\"))\n+       (eq_attr \"type\" \"fconsts,fconstd,fadds,faddd\"))\n   \"cortex_a8_vfp,cortex_a8_vfplite*9\")\n \n (define_insn_reservation \"cortex_a8_vfp_muls\" 12\n@@ -172,7 +172,7 @@\n ;; take four cycles, we pick that latency.\n (define_insn_reservation \"cortex_a8_vfp_farith\" 4\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"type\" \"ffarith\"))\n+       (eq_attr \"type\" \"fcpys,ffariths,ffarithd,fconsts,fconstd,fcmps,fcmpd\"))\n   \"cortex_a8_vfp,cortex_a8_vfplite*3\")\n \n (define_insn_reservation \"cortex_a8_vfp_cvt\" 7"}, {"sha": "e26c3d45d5e6c5926500510c653619fb2a686851", "filename": "gcc/config/arm/cortex-r4.md", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4.md?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -77,24 +77,24 @@\n ;; Data processing instructions.  Moves without shifts are kept separate\n ;; for the purposes of the dual-issue constraints above.\n (define_insn_reservation \"cortex_r4_alu\" 2\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (and (eq_attr \"type\" \"alu\")\n             (not (eq_attr \"insn\" \"mov\"))))\n   \"cortex_r4_alu\")\n \n (define_insn_reservation \"cortex_r4_mov\" 2\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (and (eq_attr \"type\" \"alu\")\n             (eq_attr \"insn\" \"mov\")))\n   \"cortex_r4_mov\")\n \n (define_insn_reservation \"cortex_r4_alu_shift\" 2\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"alu_shift\"))\n   \"cortex_r4_alu\")\n \n (define_insn_reservation \"cortex_r4_alu_shift_reg\" 2\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"alu_shift_reg\"))\n   \"cortex_r4_alu_shift_reg\")\n \n@@ -127,32 +127,32 @@\n ;; Multiplication instructions.\n \n (define_insn_reservation \"cortex_r4_mul_4\" 4\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"insn\" \"mul,smmul\"))\n   \"cortex_r4_mul_2\")\n \n (define_insn_reservation \"cortex_r4_mul_3\" 3\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"insn\" \"smulxy,smulwy,smuad,smusd\"))\n   \"cortex_r4_mul\")\n \n (define_insn_reservation \"cortex_r4_mla_4\" 4\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"insn\" \"mla,smmla\"))\n   \"cortex_r4_mul_2\")\n \n (define_insn_reservation \"cortex_r4_mla_3\" 3\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"insn\" \"smlaxy,smlawy,smlad,smlsd\"))\n   \"cortex_r4_mul\")\n \n (define_insn_reservation \"cortex_r4_smlald\" 3\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"insn\" \"smlald,smlsld\"))\n   \"cortex_r4_mul\")\n \n (define_insn_reservation \"cortex_r4_mull\" 4\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"insn\" \"smull,umull,umlal,umaal\"))\n   \"cortex_r4_mul_2\")\n \n@@ -195,27 +195,27 @@\n ;; is performed with B having ten more leading zeros than A.\n ;; This gives a latency of nine for udiv and ten for sdiv.\n (define_insn_reservation \"cortex_r4_udiv\" 9\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"insn\" \"udiv\"))\n   \"cortex_r4_div_9\")\n \n (define_insn_reservation \"cortex_r4_sdiv\" 10\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"insn\" \"sdiv\"))\n   \"cortex_r4_div_10\")\n \n ;; Branches.  We assume correct prediction.\n \n (define_insn_reservation \"cortex_r4_branch\" 0\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"branch\"))\n   \"cortex_r4_branch\")\n \n ;; Call latencies are not predictable.  A semi-arbitrary very large\n ;; number is used as \"positive infinity\" so that everything should be\n ;; finished by the time of return.\n (define_insn_reservation \"cortex_r4_call\" 32\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"call\"))\n   \"nothing\")\n \n@@ -226,12 +226,12 @@\n ;; accesses following are correctly aligned.\n \n (define_insn_reservation \"cortex_r4_load_1_2\" 3\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"load1,load2\"))\n   \"cortex_r4_load_store\")\n \n (define_insn_reservation \"cortex_r4_load_3_4\" 4\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"load3,load4\"))\n   \"cortex_r4_load_store_2\")\n \n@@ -281,12 +281,12 @@\n ;; Store instructions.\n \n (define_insn_reservation \"cortex_r4_store_1_2\" 0\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"store1,store2\"))\n   \"cortex_r4_load_store\")\n \n (define_insn_reservation \"cortex_r4_store_3_4\" 0\n-  (and (eq_attr \"tune\" \"cortexr4\")\n+  (and (eq_attr \"tune_cortexr4\" \"yes\")\n        (eq_attr \"type\" \"store3,store4\"))\n   \"cortex_r4_load_store_2\")\n "}, {"sha": "8982bc068eb3f5276d50a4871bfa28b73bd1f31a", "filename": "gcc/config/arm/cortex-r4f.md", "status": "added", "additions": 161, "deletions": 0, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fcortex-r4f.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fcortex-r4f.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4f.md?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -0,0 +1,161 @@\n+;; ARM Cortex-R4F VFP pipeline description\n+;; Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n+;; Written by CodeSourcery.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but\n+;; WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+;; General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; With the exception of simple VMOV <freg>, <freg> instructions and\n+;; the accululate operand of a multiply-accumulate instruction, all\n+;; registers are early registers.  Thus base latencies are 1 more than\n+;; those listed in the TRM.\n+\n+;; We use the A, B abd C units from the integer core, plus two additional\n+;; units to enforce VFP dual issue constraints.\n+\n+;;\t\t  A B C\t    V1\tVMLA\n+;; fcpy\t\t  1 2\n+;; farith\t  1 2\t    1\n+;; fmrc\t\t  1 2\n+;; fconst\t  1 2 *\t    *\n+;; ffarith\t  1 2 *\t    *\n+;; fmac\t\t  1 2\t    1\t2\n+;; fdiv\t\t  1 2\t    *\n+;; f_loads\t  *   *\t    *\n+;; f_stores\t  *   *\t    \t*\n+\n+(define_cpu_unit \"cortex_r4_v1\" \"cortex_r4\")\n+\n+(define_cpu_unit \"cortex_r4_vmla\" \"cortex_r4\")\n+\n+(define_reservation \"cortex_r4_issue_ab\"\n+\t\t    \"(cortex_r4_issue_a|cortex_r4_issue_b)\")\n+(define_reservation \"cortex_r4_single_issue\"\n+\t\t    \"cortex_r4_issue_a+cortex_r4_issue_b\")\n+\n+(define_insn_reservation \"cortex_r4_fcpys\" 2\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"fcpys\"))\n+ \"cortex_r4_issue_ab\")\n+\n+(define_insn_reservation \"cortex_r4_ffariths\" 2\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"ffariths,fconsts,fcmps\"))\n+ \"cortex_r4_issue_ab+cortex_r4_issue_c+cortex_r4_v1\")\n+\n+(define_insn_reservation \"cortex_r4_fariths\" 3\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"fadds,fmuls\"))\n+ \"(cortex_r4_issue_a+cortex_r4_v1)|cortex_r4_issue_b\")\n+\n+(define_insn_reservation \"cortex_r4_fmacs\" 6\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"fmacs\"))\n+ \"(cortex_r4_issue_a+cortex_r4_v1)|(cortex_r4_issue_b+cortex_r4_vmla)\")\n+\n+(define_insn_reservation \"cortex_r4_fdivs\" 17\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"fdivs\"))\n+ \"cortex_r4_issue_ab+cortex_r4_v1,cortex_r4_issue_a+cortex_r4_v1\")\n+\n+(define_insn_reservation \"cortex_r4_floads\" 2\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"f_loads\"))\n+ \"cortex_r4_issue_a+cortex_r4_issue_c+cortex_r4_v1\")\n+\n+(define_insn_reservation \"cortex_r4_fstores\" 1\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"f_stores\"))\n+ \"cortex_r4_issue_a+cortex_r4_issue_c+cortex_r4_vmla\")\n+\n+(define_insn_reservation \"cortex_r4_mcr\" 2\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"r_2_f\"))\n+ \"cortex_r4_issue_ab\")\n+\n+(define_insn_reservation \"cortex_r4_mrc\" 3\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"f_2_r\"))\n+ \"cortex_r4_issue_ab\")\n+\n+;; Bypasses for normal (not early) regs.\n+(define_bypass 1 \"cortex_r4_ffariths,cortex_r4_fcpys,cortex_r4_mcr\"\n+\t\t \"cortex_r4_fcpys\")\n+(define_bypass 2 \"cortex_r4_fariths\"\n+\t\t \"cortex_r4_fcpys\")\n+(define_bypass 5 \"cortex_r4_fmacs\"\n+\t\t \"cortex_r4_fcpys\")\n+(define_bypass 16 \"cortex_r4_fdivs\"\n+\t\t  \"cortex_r4_fcpys\")\n+\n+(define_bypass 1 \"cortex_r4_ffariths,cortex_r4_fcpys,cortex_r4_mcr\"\n+\t\t \"cortex_r4_fmacs\"\n+\t\t \"arm_no_early_mul_dep\")\n+(define_bypass 2 \"cortex_r4_fariths\"\n+\t\t \"cortex_r4_fmacs\"\n+\t\t \"arm_no_early_mul_dep\")\n+;; mac->mac has an extra forwarding path.\n+(define_bypass 3 \"cortex_r4_fmacs\"\n+\t\t \"cortex_r4_fmacs\"\n+\t\t \"arm_no_early_mul_dep\")\n+(define_bypass 16 \"cortex_r4_fdivs\"\n+\t\t  \"cortex_r4_fmacs\"\n+\t\t  \"arm_no_early_mul_dep\")\n+\n+;; Double precision operations.  These can not dual issue.\n+\n+(define_insn_reservation \"cortex_r4_fmacd\" 20\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"fmacd\"))\n+ \"cortex_r4_single_issue*13\")\n+\n+(define_insn_reservation \"cortex_r4_farith\" 10\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"faddd,fmuld\"))\n+ \"cortex_r4_single_issue*3\")\n+\n+;; FIXME: The short cycle count suggests these instructions complete\n+;; out of order.  Chances are this is not a pipelined operation.\n+(define_insn_reservation \"cortex_r4_fdivd\" 97\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"fdivd\"))\n+ \"cortex_r4_single_issue*3\")\n+\n+(define_insn_reservation \"cortex_r4_ffarithd\" 2\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"ffarithd,fconstd\"))\n+ \"cortex_r4_single_issue\")\n+\n+(define_insn_reservation \"cortex_r4_fcmpd\" 2\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"fcmpd\"))\n+ \"cortex_r4_single_issue*2\")\n+\n+(define_insn_reservation \"cortex_r4_f_cvt\" 8\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"f_cvt\"))\n+ \"cortex_r4_single_issue*3\")\n+\n+(define_insn_reservation \"cortex_r4_f_memd\" 8\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"f_loadd,f_stored\"))\n+ \"cortex_r4_single_issue\")\n+\n+(define_insn_reservation \"cortex_r4_f_flag\" 1\n+ (and (eq_attr \"tune_cortexr4\" \"yes\")\n+      (eq_attr \"type\" \"f_stores\"))\n+ \"cortex_r4_single_issue\")\n+"}, {"sha": "737f81ccb27bb6edeb001d5fa239836effe84570", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -24,8 +24,15 @@\n )\n \n ;; The VFP \"type\" attributes differ from those used in the FPA model.\n-;; ffarith\tFast floating point insns, e.g. abs, neg, cpy, cmp.\n-;; farith\tMost arithmetic insns.\n+;; fcpys\tSingle precision cpy.\n+;; ffariths\tSingle precision abs, neg.\n+;; ffarithd\tDouble precision abs, neg, cpy.\n+;; fadds\tSingle precision add/sub.\n+;; faddd\tDouble precision add/sub.\n+;; fconsts\tSingle precision load immediate.\n+;; fconstd\tDouble precision load immediate.\n+;; fcmps\tSingle precision comparison.\n+;; fcmpd\tDouble precision comparison.\n ;; fmuls\tSingle precision multiply.\n ;; fmuld\tDouble precision multiply.\n ;; fmacs\tSingle precision multiply-accumulate.\n@@ -74,7 +81,7 @@\n     }\n   \"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"*,*,*,*,load1,store1,r_2_f,f_2_r,ffarith,f_loads,f_stores\")\n+   (set_attr \"type\" \"*,*,*,*,load1,store1,r_2_f,f_2_r,fcpys,f_loads,f_stores\")\n    (set_attr \"pool_range\"     \"*,*,*,*,4096,*,*,*,*,1020,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,*,4084,*,*,*,*,1008,*\")]\n )\n@@ -111,7 +118,7 @@\n     }\n   \"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"*,*,*,*,load1,store1,r_2_f,f_2_r,ffarith,f_load,f_store\")\n+   (set_attr \"type\" \"*,*,*,*,load1,store1,r_2_f,f_2_r,fcpys,f_load,f_store\")\n    (set_attr \"pool_range\"     \"*,*,*,*,4096,*,*,*,*,1020,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,*,   0,*,*,*,*,1008,*\")]\n )\n@@ -145,7 +152,7 @@\n       gcc_unreachable ();\n     }\n   \"\n-  [(set_attr \"type\" \"*,load2,store2,r_2_f,f_2_r,ffarith,f_loadd,f_stored\")\n+  [(set_attr \"type\" \"*,load2,store2,r_2_f,f_2_r,ffarithd,f_loadd,f_stored\")\n    (set_attr \"length\" \"8,8,8,4,4,4,4,4\")\n    (set_attr \"pool_range\"     \"*,1020,*,*,*,*,1020,*\")\n    (set_attr \"neg_pool_range\" \"*,1008,*,*,*,*,1008,*\")]\n@@ -172,7 +179,7 @@\n       abort ();\n     }\n   \"\n-  [(set_attr \"type\" \"*,load2,store2,r_2_f,f_2_r,ffarith,f_load,f_store\")\n+  [(set_attr \"type\" \"*,load2,store2,r_2_f,f_2_r,ffarithd,f_load,f_store\")\n    (set_attr \"length\" \"8,8,8,4,4,4,4,4\")\n    (set_attr \"pool_range\"     \"*,4096,*,*,*,*,1020,*\")\n    (set_attr \"neg_pool_range\" \"*,   0,*,*,*,*,1008,*\")]\n@@ -214,7 +221,7 @@\n   \"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"type\"\n-     \"r_2_f,f_2_r,farith,f_loads,f_stores,load1,store1,ffarith,*\")\n+     \"r_2_f,f_2_r,fconsts,f_loads,f_stores,load1,store1,fcpys,*\")\n    (set_attr \"pool_range\" \"*,*,*,1020,*,4096,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,1008,*,4080,*,*,*\")]\n )\n@@ -250,7 +257,7 @@\n   \"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"type\"\n-     \"r_2_f,f_2_r,farith,f_load,f_store,load1,store1,ffarith,*\")\n+     \"r_2_f,f_2_r,fconsts,f_load,f_store,load1,store1,fcpys,*\")\n    (set_attr \"pool_range\" \"*,*,*,1020,*,4092,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,1008,*,0,*,*,*\")]\n )\n@@ -288,7 +295,7 @@\n     }\n   \"\n   [(set_attr \"type\"\n-     \"r_2_f,f_2_r,farith,f_loadd,f_stored,load2,store2,ffarith,*\")\n+     \"r_2_f,f_2_r,fconstd,f_loadd,f_stored,load2,store2,ffarithd,*\")\n    (set_attr \"length\" \"4,4,4,8,8,4,4,4,8\")\n    (set_attr \"pool_range\" \"*,*,*,1020,*,1020,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,1008,*,1008,*,*,*\")]\n@@ -320,7 +327,7 @@\n     }\n   \"\n   [(set_attr \"type\"\n-     \"r_2_f,f_2_r,farith,load2,store2,f_load,f_store,ffarith,*\")\n+     \"r_2_f,f_2_r,fconstd,load2,store2,f_load,f_store,ffarithd,*\")\n    (set_attr \"length\" \"4,4,4,8,8,4,4,4,8\")\n    (set_attr \"pool_range\" \"*,*,*,4096,*,1020,*,*,*\")\n    (set_attr \"neg_pool_range\" \"*,*,*,0,*,1008,*,*,*\")]\n@@ -349,7 +356,7 @@\n    fmrs%D3\\\\t%0, %2\\;fmrs%d3\\\\t%0, %1\"\n    [(set_attr \"conds\" \"use\")\n     (set_attr \"length\" \"4,4,8,4,4,8,4,4,8\")\n-    (set_attr \"type\" \"ffarith,ffarith,ffarith,r_2_f,r_2_f,r_2_f,f_2_r,f_2_r,f_2_r\")]\n+    (set_attr \"type\" \"fcpys,fcpys,fcpys,r_2_f,r_2_f,r_2_f,f_2_r,f_2_r,f_2_r\")]\n )\n \n (define_insn \"*thumb2_movsfcc_vfp\"\n@@ -372,7 +379,7 @@\n    ite\\\\t%D3\\;fmrs%D3\\\\t%0, %2\\;fmrs%d3\\\\t%0, %1\"\n    [(set_attr \"conds\" \"use\")\n     (set_attr \"length\" \"6,6,10,6,6,10,6,6,10\")\n-    (set_attr \"type\" \"ffarith,ffarith,ffarith,r_2_f,r_2_f,r_2_f,f_2_r,f_2_r,f_2_r\")]\n+    (set_attr \"type\" \"fcpys,fcpys,fcpys,r_2_f,r_2_f,r_2_f,f_2_r,f_2_r,f_2_r\")]\n )\n \n (define_insn \"*movdfcc_vfp\"\n@@ -395,7 +402,7 @@\n    fmrrd%D3\\\\t%Q0, %R0, %P2\\;fmrrd%d3\\\\t%Q0, %R0, %P1\"\n    [(set_attr \"conds\" \"use\")\n     (set_attr \"length\" \"4,4,8,4,4,8,4,4,8\")\n-    (set_attr \"type\" \"ffarith,ffarith,ffarith,r_2_f,r_2_f,r_2_f,f_2_r,f_2_r,f_2_r\")]\n+    (set_attr \"type\" \"ffarithd,ffarithd,ffarithd,r_2_f,r_2_f,r_2_f,f_2_r,f_2_r,f_2_r\")]\n )\n \n (define_insn \"*thumb2_movdfcc_vfp\"\n@@ -418,7 +425,7 @@\n    ite\\\\t%D3\\;fmrrd%D3\\\\t%Q0, %R0, %P2\\;fmrrd%d3\\\\t%Q0, %R0, %P1\"\n    [(set_attr \"conds\" \"use\")\n     (set_attr \"length\" \"6,6,10,6,6,10,6,6,10\")\n-    (set_attr \"type\" \"ffarith,ffarith,ffarith,r_2_f,r_2_f,r_2_f,f_2_r,f_2_r,f_2_r\")]\n+    (set_attr \"type\" \"ffarithd,ffarithd,ffarithd,r_2_f,r_2_f,r_2_f,f_2_r,f_2_r,f_2_r\")]\n )\n \n \n@@ -430,7 +437,7 @@\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n   \"fabss%?\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith\")]\n+   (set_attr \"type\" \"ffariths\")]\n )\n \n (define_insn \"*absdf2_vfp\"\n@@ -439,7 +446,7 @@\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n   \"fabsd%?\\\\t%P0, %P1\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith\")]\n+   (set_attr \"type\" \"ffarithd\")]\n )\n \n (define_insn \"*negsf2_vfp\"\n@@ -450,7 +457,7 @@\n    fnegs%?\\\\t%0, %1\n    eor%?\\\\t%0, %1, #-2147483648\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith\")]\n+   (set_attr \"type\" \"ffariths\")]\n )\n \n (define_insn_and_split \"*negdf2_vfp\"\n@@ -496,7 +503,7 @@\n   \"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"length\" \"4,4,8\")\n-   (set_attr \"type\" \"ffarith\")]\n+   (set_attr \"type\" \"ffarithd\")]\n )\n \n \n@@ -509,7 +516,7 @@\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n   \"fadds%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"farith\")]\n+   (set_attr \"type\" \"fadds\")]\n )\n \n (define_insn \"*adddf3_vfp\"\n@@ -519,7 +526,7 @@\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n   \"faddd%?\\\\t%P0, %P1, %P2\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"farith\")]\n+   (set_attr \"type\" \"faddd\")]\n )\n \n \n@@ -530,7 +537,7 @@\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n   \"fsubs%?\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"farith\")]\n+   (set_attr \"type\" \"fadds\")]\n )\n \n (define_insn \"*subdf3_vfp\"\n@@ -540,7 +547,7 @@\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n   \"fsubd%?\\\\t%P0, %P1, %P2\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"farith\")]\n+   (set_attr \"type\" \"faddd\")]\n )\n \n \n@@ -909,7 +916,7 @@\n    fcmps%?\\\\t%0, %1\n    fcmpzs%?\\\\t%0\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith\")]\n+   (set_attr \"type\" \"fcmps\")]\n )\n \n (define_insn \"*cmpsf_trap_vfp\"\n@@ -921,7 +928,7 @@\n    fcmpes%?\\\\t%0, %1\n    fcmpezs%?\\\\t%0\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith\")]\n+   (set_attr \"type\" \"fcmpd\")]\n )\n \n (define_insn \"*cmpdf_vfp\"\n@@ -933,7 +940,7 @@\n    fcmpd%?\\\\t%P0, %P1\n    fcmpzd%?\\\\t%P0\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith\")]\n+   (set_attr \"type\" \"fcmpd\")]\n )\n \n (define_insn \"*cmpdf_trap_vfp\"\n@@ -945,7 +952,7 @@\n    fcmped%?\\\\t%P0, %P1\n    fcmpezd%?\\\\t%P0\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith\")]\n+   (set_attr \"type\" \"fcmpd\")]\n )\n \n "}, {"sha": "8f863fd70cd0a5124675bac8211249fb3db7170e", "filename": "gcc/config/arm/vfp11.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fvfp11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c69ddb914f062d93c2180a293c944107fbf999/gcc%2Fconfig%2Farm%2Fvfp11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp11.md?ref=51c69ddb914f062d93c2180a293c944107fbf999", "patch": "@@ -51,12 +51,12 @@\n \n (define_insn_reservation \"vfp_ffarith\" 4\n  (and (eq_attr \"generic_vfp\" \"yes\")\n-      (eq_attr \"type\" \"ffarith\"))\n+      (eq_attr \"type\" \"fcpys,ffariths,ffarithd,fcmps,fcmpd\"))\n  \"fmac\")\n \n (define_insn_reservation \"vfp_farith\" 8\n  (and (eq_attr \"generic_vfp\" \"yes\")\n-      (eq_attr \"type\" \"farith,f_cvt,fmuls,fmacs\"))\n+      (eq_attr \"type\" \"fadds,faddd,fconsts,fconstd,f_cvt,fmuls,fmacs\"))\n  \"fmac\")\n \n (define_insn_reservation \"vfp_fmul\" 9"}]}