{"sha": "7f6f1f521fc12d4dbbdd0766d8fb7121d1e5ea8d", "node_id": "C_kwDOANBUbNoAKDdmNmYxZjUyMWZjMTJkNGRiYmRkMDc2NmQ4ZmI3MTIxZDFlNWVhOGQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-01T20:31:34Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-03T11:06:25Z"}, "message": "Avoid comparing ranges when sub-ranges is 0.\n\nThere is nothing else to compare when the number of sub-ranges is 0.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (irange::operator==): Early bail on m_num_ranges\n\tequal to 0.", "tree": {"sha": "f395894c8e3cf0e99b5ff637e4c531e3a4cd0581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f395894c8e3cf0e99b5ff637e4c531e3a4cd0581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f6f1f521fc12d4dbbdd0766d8fb7121d1e5ea8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f6f1f521fc12d4dbbdd0766d8fb7121d1e5ea8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f6f1f521fc12d4dbbdd0766d8fb7121d1e5ea8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f6f1f521fc12d4dbbdd0766d8fb7121d1e5ea8d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e1de8d2db2500d9d4d76c91c3c2dab761566a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1de8d2db2500d9d4d76c91c3c2dab761566a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1de8d2db2500d9d4d76c91c3c2dab761566a1a"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "e1066f4946e4c5f1e653f62d8255c100fc2ada22", "filename": "gcc/value-range.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f6f1f521fc12d4dbbdd0766d8fb7121d1e5ea8d/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f6f1f521fc12d4dbbdd0766d8fb7121d1e5ea8d/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=7f6f1f521fc12d4dbbdd0766d8fb7121d1e5ea8d", "patch": "@@ -1260,6 +1260,9 @@ irange::operator== (const irange &other) const\n   if (m_num_ranges != other.m_num_ranges)\n     return false;\n \n+  if (m_num_ranges == 0)\n+    return true;\n+\n   for (unsigned i = 0; i < m_num_ranges; ++i)\n     {\n       tree lb = tree_lower_bound (i);"}]}