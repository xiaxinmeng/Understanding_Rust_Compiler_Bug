{"sha": "f2c573b11296a52ff9a020d0143f26a224ec7767", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJjNTczYjExMjk2YTUyZmY5YTAyMGQwMTQzZjI2YTIyNGVjNzc2Nw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2006-02-15T09:41:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:41:49Z"}, "message": "make.adb (Collect_Arguments_And_Compile): For VMS...\n\n2006-02-13  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Collect_Arguments_And_Compile): For VMS, when compiling the\n\tmain source, add switch -mdebug-main=_ada_ so that the executable can\n\tbe debugged by the standard VMS debugger.\n\t(Gnatmake): Set No_Main_Subprogram to True when there is no main\n\tsubprogram, to avoid issuing -mdebug-main=_ada_ for VMS uselessly.\n\tExit the Multi_Main_Loop when Unique_Compile is True after compilation\n\tof the last source, as the binding and linking phases are never\n\tperformed.\n\tSet all executable obsolete when rebuilding a library.\n\n\t* makeutl.adb (Linker_Options_Switches): Do not process empty linker\n\toptions.\n\nFrom-SVN: r111078", "tree": {"sha": "dd9ddd1553fe7308698f9b32e3db83749260df72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd9ddd1553fe7308698f9b32e3db83749260df72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2c573b11296a52ff9a020d0143f26a224ec7767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c573b11296a52ff9a020d0143f26a224ec7767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c573b11296a52ff9a020d0143f26a224ec7767", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c573b11296a52ff9a020d0143f26a224ec7767/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25c87b0f9cc0730ea1fcccec747e99653faf3995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25c87b0f9cc0730ea1fcccec747e99653faf3995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25c87b0f9cc0730ea1fcccec747e99653faf3995"}], "stats": {"total": 106, "additions": 74, "deletions": 32}, "files": [{"sha": "341a7affd8875dbc1910a9fa4f9a095cc82c189b", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 56, "deletions": 20, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c573b11296a52ff9a020d0143f26a224ec7767/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c573b11296a52ff9a020d0143f26a224ec7767/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=f2c573b11296a52ff9a020d0143f26a224ec7767", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2065,11 +2065,11 @@ package body Make is\n       Process_Created : Boolean := False;\n \n       procedure Add_Process\n-        (Pid    : Process_Id;\n-         Sfile  : File_Name_Type;\n-         Afile  : File_Name_Type;\n-         Uname  : Unit_Name_Type;\n-         Mfile  : Natural := No_Mapping_File);\n+        (Pid   : Process_Id;\n+         Sfile : File_Name_Type;\n+         Afile : File_Name_Type;\n+         Uname : Unit_Name_Type;\n+         Mfile : Natural := No_Mapping_File);\n       --  Adds process Pid to the current list of outstanding compilation\n       --  processes and record the full name of the source file Sfile that\n       --  we are compiling, the name of its library file Afile and the\n@@ -2098,7 +2098,8 @@ package body Make is\n       --  Check if s-stalib.adb needs to be compiled\n \n       procedure Collect_Arguments_And_Compile\n-        (Source_File : File_Name_Type; Source_Index : Int);\n+        (Source_File  : File_Name_Type;\n+         Source_Index : Int);\n       --  Collect arguments from project file (if any) and compile\n \n       function Compile\n@@ -2146,11 +2147,11 @@ package body Make is\n       -----------------\n \n       procedure Add_Process\n-        (Pid    : Process_Id;\n-         Sfile  : File_Name_Type;\n-         Afile  : File_Name_Type;\n-         Uname  : Unit_Name_Type;\n-         Mfile  : Natural := No_Mapping_File)\n+        (Pid   : Process_Id;\n+         Sfile : File_Name_Type;\n+         Afile : File_Name_Type;\n+         Uname : Unit_Name_Type;\n+         Mfile : Natural := No_Mapping_File)\n       is\n          OC1 : constant Positive := Outstanding_Compiles + 1;\n \n@@ -2304,7 +2305,8 @@ package body Make is\n       -----------------------------------\n \n       procedure Collect_Arguments_And_Compile\n-        (Source_File : File_Name_Type; Source_Index : Int)\n+        (Source_File  : File_Name_Type;\n+         Source_Index : Int)\n       is\n       begin\n          --  Process_Created will be set True if an attempt is made to compile\n@@ -2318,6 +2320,29 @@ package body Make is\n             Collect_Arguments (Source_File, Source_Index, Args);\n          end if;\n \n+         --  For VMS, when compiling the main source, add switch\n+         --  -mdebug-main=_ada_ so that the executable can be debugged\n+         --  by the standard VMS debugger.\n+\n+         if not No_Main_Subprogram\n+           and then Targparm.OpenVMS_On_Target\n+           and then Source_File = Main_Source\n+         then\n+            --  First, check if compilation will be invoked with -g\n+\n+            for J in 1 .. Last_Argument loop\n+               if Arguments (J)'Length >= 2\n+                 and then Arguments (J) (1 .. 2) = \"-g\"\n+                 and then (Arguments (J)'Length < 5\n+                             or else Arguments (J) (1 .. 5) /= \"-gnat\")\n+               then\n+                  Add_Arguments\n+                    ((1 => new String'(\"-mdebug-main=_ada_\")));\n+                  exit;\n+               end if;\n+            end loop;\n+         end if;\n+\n          --  If we use mapping file (-P or -C switches), then get one\n \n          if Create_Mapping_File then\n@@ -4063,6 +4088,7 @@ package body Make is\n             Make_Failed (\"-B cannot be used for a library project file\");\n \n          else\n+            No_Main_Subprogram := True;\n             Insert_Project_Sources\n               (The_Project  => Main_Project,\n                All_Projects => Unique_Compile_All_Projects,\n@@ -4147,6 +4173,7 @@ package body Make is\n \n                      --  Put all the sources in the queue\n \n+                     No_Main_Subprogram := True;\n                      Insert_Project_Sources\n                        (The_Project  => Main_Project,\n                         All_Projects => Unique_Compile_All_Projects,\n@@ -4269,7 +4296,10 @@ package body Make is\n          Write_Str (\"GNATMAKE \");\n          Write_Str (Gnatvsn.Gnat_Version_String);\n          Write_Eol;\n-         Write_Str (\"Copyright 1995-2004 Free Software Foundation, Inc.\");\n+         Write_Str\n+           (\"Copyright 1995-\" &\n+            Current_Year &\n+            \", Free Software Foundation, Inc.\");\n          Write_Eol;\n       end if;\n \n@@ -5131,6 +5161,11 @@ package body Make is\n \n                   for J in 1 .. Library_Projs.Last loop\n                      Library_Rebuilt := True;\n+\n+                     --  If a library is rebuilt, then executables are obsolete\n+\n+                     Executable_Obsolete := True;\n+\n                      MLib.Prj.Build_Library\n                        (For_Project   => Library_Projs.Table (J),\n                         In_Tree       => Project_Tree,\n@@ -5176,12 +5211,13 @@ package body Make is\n \n                --    4) Made unit cannot be a main unit\n \n-               if (Do_Not_Execute\n-                   or List_Dependencies\n-                   or not Do_Bind_Step\n-                   or not Is_Main_Unit)\n-                 and then not No_Main_Subprogram\n-                 and then not Build_Bind_And_Link_Full_Project\n+               if ((Do_Not_Execute\n+                    or List_Dependencies\n+                    or not Do_Bind_Step\n+                    or not Is_Main_Unit)\n+                  and then not No_Main_Subprogram\n+                  and then not Build_Bind_And_Link_Full_Project)\n+                 or else Unique_Compile\n                then\n                   if Osint.Number_Of_Files = 1 then\n                      exit Multiple_Main_Loop;"}, {"sha": "8a7039f14fc37656b279c11745ce9b946b0b249f", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c573b11296a52ff9a020d0143f26a224ec7767/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c573b11296a52ff9a020d0143f26a224ec7767/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=f2c573b11296a52ff9a020d0143f26a224ec7767", "patch": "@@ -278,20 +278,26 @@ package body Makeutl is\n             while Options /= Nil_String loop\n                Option :=\n                  In_Tree.String_Elements.Table (Options).Value;\n+               Get_Name_String (Option);\n+\n+               --  Do not consider empty linker options\n+\n+               if Name_Len /= 0 then\n+                  Add_Linker_Option (Name_Buffer (1 .. Name_Len));\n+\n+                  --  Object files and -L switches specified with relative\n+                  --  paths must be converted to absolute paths.\n+\n+                  Test_If_Relative_Path\n+                    (Switch =>\n+                       Linker_Options_Buffer (Last_Linker_Option),\n+                     Parent =>\n+                       In_Tree.Projects.Table (Proj).Dir_Path,\n+                     Including_L_Switch => True);\n+               end if;\n+\n                Options :=\n                  In_Tree.String_Elements.Table (Options).Next;\n-               Add_Linker_Option (Get_Name_String (Option));\n-\n-               --  Object files and -L switches specified with\n-               --  relative paths and must be converted to\n-               --  absolute paths.\n-\n-               Test_If_Relative_Path\n-                 (Switch =>\n-                    Linker_Options_Buffer (Last_Linker_Option),\n-                  Parent =>\n-                    In_Tree.Projects.Table (Proj).Dir_Path,\n-                  Including_L_Switch => True);\n             end loop;\n          end;\n       end loop;"}]}