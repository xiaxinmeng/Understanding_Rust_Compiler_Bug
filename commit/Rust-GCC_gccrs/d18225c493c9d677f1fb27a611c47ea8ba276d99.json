{"sha": "d18225c493c9d677f1fb27a611c47ea8ba276d99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE4MjI1YzQ5M2M5ZDY3N2YxZmIyN2E2MTFjNDdlYThiYTI3NmQ5OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-11T13:01:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-11T13:01:45Z"}, "message": "Use PVPROTO for varargs prototypes.\n\nFrom-SVN: r6744", "tree": {"sha": "d059139df2815d12d548a4deb5ab3aa510dcdfcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d059139df2815d12d548a4deb5ab3aa510dcdfcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d18225c493c9d677f1fb27a611c47ea8ba276d99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d18225c493c9d677f1fb27a611c47ea8ba276d99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d18225c493c9d677f1fb27a611c47ea8ba276d99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d18225c493c9d677f1fb27a611c47ea8ba276d99/comments", "author": null, "committer": null, "parents": [{"sha": "bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdea67faf3e8e7a7791444f5f8b0f0f3d38fa1d1"}], "stats": {"total": 56, "additions": 32, "deletions": 24}, "files": [{"sha": "f80d34d19e18ea2034313da34d0bf5268b7fdfd1", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d18225c493c9d677f1fb27a611c47ea8ba276d99", "patch": "@@ -413,7 +413,7 @@ static rtx simplify_shift_const\tPROTO((rtx, enum rtx_code, enum machine_mode,\n \t\t\t\t       rtx, int));\n static int recog_for_combine\tPROTO((rtx *, rtx, rtx *));\n static rtx gen_lowpart_for_combine  PROTO((enum machine_mode, rtx));\n-static rtx gen_rtx_combine PROTO((enum rtx_code code, enum machine_mode mode,\n+static rtx gen_rtx_combine PVPROTO((enum rtx_code code, enum machine_mode mode,\n \t\t\t\t  ...));\n static rtx gen_binary\t\tPROTO((enum rtx_code, enum machine_mode,\n \t\t\t\t       rtx, rtx));"}, {"sha": "3b02d694a4642a8e379bab9cddd4f930ece3c587", "filename": "gcc/expr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=d18225c493c9d677f1fb27a611c47ea8ba276d99", "patch": "@@ -624,9 +624,9 @@ extern void emit_push_insn PROTO((rtx, enum machine_mode, tree, rtx, int,\n \t\t\t\t  int, rtx, int, rtx, rtx));\n \n /* Emit library call.  */\n-extern void emit_library_call PROTO((rtx orgfun, int no_queue,\n+extern void emit_library_call PVPROTO((rtx orgfun, int no_queue,\n   enum machine_mode outmode, int nargs, ...));\n-extern rtx emit_library_call_value PROTO((rtx orgfun, rtx value, int no_queue,\n+extern rtx emit_library_call_value PVPROTO((rtx orgfun, rtx value, int no_queue,\n   enum machine_mode outmode, int nargs, ...));\n \n /* Expand an assignment that stores the value of FROM into TO. */"}, {"sha": "a41e960920bc5239f183a1adc6c31bef7c8408c0", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=d18225c493c9d677f1fb27a611c47ea8ba276d99", "patch": "@@ -62,9 +62,11 @@ compilation is specified by a string called a \"spec\".  */\n \n #ifndef VPROTO\n #ifdef __STDC__\n+#define PVPROTO(ARGS)\t\tARGS\n #define VPROTO(ARGS)\t\tARGS\n #define VA_START(va_list,var)\tva_start(va_list,var)\n #else\n+#define PVPROTO(ARGS)\t\t()\n #define VPROTO(ARGS)\t\t(va_alist) va_dcl\n #define VA_START(va_list,var)\tva_start(va_list)\n #endif\n@@ -215,8 +217,8 @@ static void pfatal_with_name\tPROTO((char *));\n static void perror_with_name\tPROTO((char *));\n static void perror_exec\t\tPROTO((char *));\n #ifdef HAVE_VPRINTF\n-static void fatal\t\tPROTO((char *, ...));\n-static void error\t\tPROTO((char *, ...));\n+static void fatal\t\tPVPROTO((char *, ...));\n+static void error\t\tPVPROTO((char *, ...));\n #else\n /* We must not provide any prototype here, even if ANSI C.  */\n static void fatal\t\tPROTO(());"}, {"sha": "b57bfd450002d6d0665a58463f4b17d989ba3ced", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=d18225c493c9d677f1fb27a611c47ea8ba276d99", "patch": "@@ -359,9 +359,9 @@ static char *alternative_name;\n rtx frame_pointer_rtx, hard_frame_pointer_rtx, stack_pointer_rtx;\n rtx arg_pointer_rtx;\n \n-static rtx attr_rtx\t\tPROTO((enum rtx_code, ...));\n+static rtx attr_rtx\t\tPVPROTO((enum rtx_code, ...));\n #ifdef HAVE_VPRINTF\n-static char *attr_printf\tPROTO((int, char *, ...));\n+static char *attr_printf\tPVPROTO((int, char *, ...));\n #else\n static char *attr_printf ();\n #endif"}, {"sha": "79add8d1dea0d669cb86d0b053ad648e87acdfc5", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=d18225c493c9d677f1fb27a611c47ea8ba276d99", "patch": "@@ -618,8 +618,11 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n typedef void *PTR_T;\n typedef const void *CPTR_T;\n #define __proto(x) x\n+#ifndef VPROTO\n+#define PVPROTO(ARGS)\t\tARGS\n #define VPROTO(ARGS)            ARGS\n #define VA_START(va_list,var)  va_start(va_list,var)\n+#endif\n #else\n \n #if defined(_STDIO_H_) || defined(__STDIO_H__)\t\t/* Ultrix 4.0, SGI */\n@@ -633,9 +636,12 @@ typedef char *CPTR_T;\n \n #define __proto(x) ()\n #define const\n+#ifndef VPROTO\n+#define PVPROTO(ARGS)\t\t()\n #define VPROTO(ARGS)            (va_alist) va_dcl\n #define VA_START(va_list,var)  va_start(va_list)\n #endif\n+#endif\n \n /* Do to size_t being defined in sys/types.h and different\n    in stddef.h, we have to do this by hand.....  Note, these\n@@ -665,8 +671,8 @@ extern PTR_T\txrealloc\t__proto((PTR_T, Size_t));\n extern void\txfree\t\t__proto((PTR_T));\n \n #ifdef HAVE_VPRINTF\n-extern void\tfatal\t\t__proto((char *format, ...));\n-extern void\terror\t\t__proto((char *format, ...));\n+extern void\tfatal\t\tPVPROTO((char *format, ...));\n+extern void\terror\t\tPVPROTO((char *format, ...));\n #else\n /* We must not provide any prototype here, even if ANSI C.  */\n extern void\tfatal\t\t__proto(());"}, {"sha": "a25227067cf7992e16599059ee630e6031e8ac1c", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=d18225c493c9d677f1fb27a611c47ea8ba276d99", "patch": "@@ -32,7 +32,7 @@ extern void output_asm_insn PROTO((char *, rtx *));\n \n /* Output a string of assembler code, substituting numbers, strings\n    and fixed syntactic prefixes.  */\n-extern void asm_fprintf STDIO_PROTO((FILE *file, char *p, ...));\n+extern void asm_fprintf STDIO_PROTO(PVPROTO((FILE *file, char *p, ...)));\n \n /* Print an integer constant expression in assembler syntax.\n    Addition and subtraction are the only arithmetic"}, {"sha": "b21f0e31fd6c177481524ec34d62de73ea7ab53d", "filename": "gcc/toplev.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18225c493c9d677f1fb27a611c47ea8ba276d99/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d18225c493c9d677f1fb27a611c47ea8ba276d99", "patch": "@@ -110,20 +110,20 @@ extern void dump_sched_info ();\n extern void dump_local_alloc ();\n \n void rest_of_decl_compilation ();\n-void error_with_file_and_line PROTO((char *file, int line, char *s, ...));\n-void error_with_decl PROTO((tree decl, char *s, ...));\n-void error_for_asm PROTO((rtx insn, char *s, ...));\n-void error PROTO((char *s, ...));\n-void fatal PROTO((char *s, ...));\n-void warning_with_file_and_line PROTO((char *file, int line, char *s, ...));\n-void warning_with_decl PROTO((tree decl, char *s, ...));\n-void warning_for_asm PROTO((rtx insn, char *s, ...));\n-void warning PROTO((char *s, ...));\n-void pedwarn PROTO((char *s, ...));\n-void pedwarn_with_decl PROTO((tree decl, char *s, ...));\n-void pedwarn_with_file_and_line PROTO((char *file, int line, char *s, ...));\n-void sorry PROTO((char *s, ...));\n-void really_sorry PROTO((char *s, ...));\n+void error_with_file_and_line PVPROTO((char *file, int line, char *s, ...));\n+void error_with_decl PVPROTO((tree decl, char *s, ...));\n+void error_for_asm PVPROTO((rtx insn, char *s, ...));\n+void error PVPROTO((char *s, ...));\n+void fatal PVPROTO((char *s, ...));\n+void warning_with_file_and_line PVPROTO((char *file, int line, char *s, ...));\n+void warning_with_decl PVPROTO((tree decl, char *s, ...));\n+void warning_for_asm PVPROTO((rtx insn, char *s, ...));\n+void warning PVPROTO((char *s, ...));\n+void pedwarn PVPROTO((char *s, ...));\n+void pedwarn_with_decl PVPROTO((tree decl, char *s, ...));\n+void pedwarn_with_file_and_line PVPROTO((char *file, int line, char *s, ...));\n+void sorry PVPROTO((char *s, ...));\n+void really_sorry PVPROTO((char *s, ...));\n void fancy_abort ();\n #ifndef abort\n void abort ();"}]}