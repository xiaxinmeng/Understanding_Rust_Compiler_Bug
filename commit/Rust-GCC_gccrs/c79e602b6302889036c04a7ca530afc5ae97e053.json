{"sha": "c79e602b6302889036c04a7ca530afc5ae97e053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc5ZTYwMmI2MzAyODg5MDM2YzA0YTdjYTUzMGFmYzVhZTk3ZTA1Mw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-03-16T00:59:31Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-03-16T00:59:31Z"}, "message": "charset.c (_cpp_valid_ucn): In identifiers, reject a partial UCN rather than printing an error.\n\n2005-03-15  Geoffrey Keating  <geoffk@apple.com>\n\n\t* charset.c (_cpp_valid_ucn): In identifiers, reject a partial\n\tUCN rather than printing an error.\n\nIndex: gcc/testsuite/ChangeLog\n2005-03-15  Geoffrey Keating  <geoffk@apple.com>\n\n\t* gcc.dg/cpp/ucnid-7.c: New.\n\nFrom-SVN: r96546", "tree": {"sha": "62dc23023bb72619d67f7423a9526121e5f67962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62dc23023bb72619d67f7423a9526121e5f67962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c79e602b6302889036c04a7ca530afc5ae97e053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79e602b6302889036c04a7ca530afc5ae97e053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c79e602b6302889036c04a7ca530afc5ae97e053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79e602b6302889036c04a7ca530afc5ae97e053/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2532808d17ab69f24bb50e9daf6c27e20d90f352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2532808d17ab69f24bb50e9daf6c27e20d90f352", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2532808d17ab69f24bb50e9daf6c27e20d90f352"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "9f4d667f69f3502d7c1949cb178c44a786f08486", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79e602b6302889036c04a7ca530afc5ae97e053/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79e602b6302889036c04a7ca530afc5ae97e053/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c79e602b6302889036c04a7ca530afc5ae97e053", "patch": "@@ -1,3 +1,7 @@\n+2005-03-15  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.dg/cpp/ucnid-7.c: New.\n+\n 2005-03-15  Janis Johnson  <janis187@us.ibm.com>\n \t    Dorit Naishlos  <dorit@il.ibm.com>\n "}, {"sha": "854c948341aaacf41a814b978515e156b81d276d", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-7.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79e602b6302889036c04a7ca530afc5ae97e053/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79e602b6302889036c04a7ca530afc5ae97e053/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-7.c?ref=c79e602b6302889036c04a7ca530afc5ae97e053", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c99\" } */\n+#define a b(\n+#define b(x) q\n+int a\\U0000000z );"}, {"sha": "e5ecf6d3d0063f14d8a235ee8a35c22e95db17e1", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79e602b6302889036c04a7ca530afc5ae97e053/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79e602b6302889036c04a7ca530afc5ae97e053/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=c79e602b6302889036c04a7ca530afc5ae97e053", "patch": "@@ -1,3 +1,8 @@\n+2005-03-15  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* charset.c (_cpp_valid_ucn): In identifiers, reject a partial\n+\tUCN rather than printing an error.\n+\n 2005-03-14  Geoffrey Keating  <geoffk@apple.com>\n \n \t* lex.c (forms_identifier_p): Disable UCNs in C89 mode."}, {"sha": "ba53f6337ccd263e34fdd5b28ae68fbd90757561", "filename": "libcpp/charset.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79e602b6302889036c04a7ca530afc5ae97e053/libcpp%2Fcharset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79e602b6302889036c04a7ca530afc5ae97e053/libcpp%2Fcharset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fcharset.c?ref=c79e602b6302889036c04a7ca530afc5ae97e053", "patch": "@@ -923,9 +923,8 @@ ucn_valid_in_identifier (cpp_reader *pfile, cppchar_t c,\n    program is ill-formed.\n \n    *PSTR must be preceded by \"\\u\" or \"\\U\"; it is assumed that the\n-   buffer end is delimited by a non-hex digit.  Returns zero if UCNs\n-   are not part of the relevant standard, or if the string beginning\n-   at *PSTR doesn't syntactically match the form 'NNNN' or 'NNNNNNNN'.\n+   buffer end is delimited by a non-hex digit.  Returns zero if the\n+   UCN has not been consumed.\n \n    Otherwise the nonzero value of the UCN, whether valid or invalid,\n    is returned.  Diagnostics are emitted for invalid values.  PSTR\n@@ -974,10 +973,15 @@ _cpp_valid_ucn (cpp_reader *pfile, const uchar **pstr,\n     }\n   while (--length && str < limit);\n \n+  /* Partial UCNs are not valid in strings, but decompose into\n+     multiple tokens in identifiers, so we can't give a helpful\n+     error message in that case.  */\n+  if (length && identifier_pos)\n+    return 0;\n+  \n   *pstr = str;\n   if (length)\n     {\n-      /* We'll error when we try it out as the start of an identifier.  */\n       cpp_error (pfile, CPP_DL_ERROR,\n \t\t \"incomplete universal character name %.*s\",\n \t\t (int) (str - base), base);"}]}