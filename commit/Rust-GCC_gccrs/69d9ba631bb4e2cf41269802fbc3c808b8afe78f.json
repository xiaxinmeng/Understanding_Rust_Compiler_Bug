{"sha": "69d9ba631bb4e2cf41269802fbc3c808b8afe78f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlkOWJhNjMxYmI0ZTJjZjQxMjY5ODAyZmJjM2M4MDhiOGFmZTc4Zg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2013-09-12T09:35:54Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2013-09-12T09:35:54Z"}, "message": "Makefile.in: Import target_cpu, target_vendor, target_os and their host_ counterparts.\n\n2013-10-11  Thomas Schwinge  <thomas@codesourcery.com>\n            Olivier Hainque  <hainque@adacore.com>\n\n\t* gcc-interface/Makefile.in: Import target_cpu, target_vendor,\n\ttarget_os and their host_ counterparts. Remove host_canonical and\n\ttarget_cpu_default, unused. Remove local ad-hoc computations of\n\t\"host\", \"targ\", \"arch\", \"osys\" and \"manu\". Replace uses of these by\n\tuses of the now imported family, hence back to filters against\n\tcanonical values. Remove filters on e500 for target_cpu, expected to\n\tbe canonicalized into powerpc. Invert the logic filtering on 64bit\n\tsparc for VxWorks. Simplify the filtering logic for bareboard tools\n\ttarget pairs, now using straight elf/eabi filters on the target_os\n\tpart only.\n\nFrom-SVN: r202518", "tree": {"sha": "1787daf3fa95ef81b2f7c5702c4c8b4156a0639d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1787daf3fa95ef81b2f7c5702c4c8b4156a0639d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69d9ba631bb4e2cf41269802fbc3c808b8afe78f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d9ba631bb4e2cf41269802fbc3c808b8afe78f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d9ba631bb4e2cf41269802fbc3c808b8afe78f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d9ba631bb4e2cf41269802fbc3c808b8afe78f/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "893e85fa0d8f2defe4af2490ec8a45a6adb510d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/893e85fa0d8f2defe4af2490ec8a45a6adb510d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/893e85fa0d8f2defe4af2490ec8a45a6adb510d4"}], "stats": {"total": 152, "additions": 72, "deletions": 80}, "files": [{"sha": "b851683f13f17b1f8dd1f150f61b37ee8fe1a852", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 72, "deletions": 80, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d9ba631bb4e2cf41269802fbc3c808b8afe78f/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d9ba631bb4e2cf41269802fbc3c808b8afe78f/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=69d9ba631bb4e2cf41269802fbc3c808b8afe78f", "patch": "@@ -153,10 +153,14 @@ objdir = .\n \n target_alias=@target_alias@\n target=@target@\n+target_cpu=@target_cpu@\n+target_vendor=@target_vendor@\n+target_os=@target_os@\n+host_cpu=@host_cpu@\n+host_vendor=@host_vendor@\n+host_os=@host_os@\n xmake_file = @xmake_file@\n tmake_file = @tmake_file@\n-host_canonical=@host@\n-target_cpu_default=@target_cpu_default@\n #version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < $(srcdir)/version.c`\n #mainversion=`sed -e 's/.*\\\"\\([0-9]*\\.[0-9]*\\).*/\\1/' < $(srcdir)/version.c`\n \n@@ -254,20 +258,6 @@ TOOLS_LIBS = ../link.o ../targext.o ../../ggc-none.o ../../libcommon-target.a \\\n   ../../libcommon.a ../../../libcpp/libcpp.a $(LIBGNAT) $(LIBINTL) $(LIBICONV) \\\n   ../$(LIBBACKTRACE) ../$(LIBIBERTY) $(SYSLIBS) $(TGT_LIB)\n \n-# Convert the target variable into a space separated list of architecture,\n-# manufacturer, and operating system and assign each of those to its own\n-# variable.\n-host:=$(subst -, ,$(host_canonical))\n-targ:=$(subst -, ,$(subst -gnu, ,$(target_alias)))\n-arch:=$(word 1,$(targ))\n-ifeq ($(words $(targ)),2)\n-  manu:=\n-  osys:=$(word 2,$(targ))\n-else\n-  manu:=$(word 2,$(targ))\n-  osys:=$(word 3,$(targ))\n-endif\n-\n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,\n # so that tm.h and config.h will be found in the compilation\n@@ -279,7 +269,7 @@ ADA_INCLUDES = -I- -I. -I$(srcdir)/ada\n # Likewise, but valid for subdirectories of the current dir.\n # FIXME: for VxWorks, we cannot add $(fsrcdir) because the regs.h file in\n # that directory conflicts with a system header file.\n-ifneq ($(findstring vxworks,$(osys)),)\n+ifneq ($(findstring vxworks,$(target_os)),)\n   INCLUDES_FOR_SUBDIR = -iquote . -iquote .. -iquote ../.. \\\n \t\t\t-iquote $(fsrcdir)/ada \\\n \t\t\t-I$(fsrcdir)/../include $(GMPINC)\n@@ -351,12 +341,12 @@ GNATMAKE_OBJS = a-except.o ali.o ali-util.o aspects.o s-casuti.o alloc.o \\\n # picks up the right files. For a given target this must be coherent\n # with MULTILIB_DIRNAMES defined in gcc/config/target/t-*.\n \n-ifeq ($(strip $(filter-out %x86_64, $(arch))),)\n+ifeq ($(strip $(filter-out %x86_64, $(target_cpu))),)\n   ifeq ($(strip $(MULTISUBDIR)),/32)\n-    arch:=i686\n+    target_cpu:=i686\n   else\n     ifeq ($(strip $(MULTISUBDIR)),/x32)\n-      arch:=x32\n+      target_cpu:=x32\n     endif\n   endif\n endif\n@@ -459,7 +449,7 @@ EXTRA_LIBGNAT_SRCS=\n # If what's left is null then it's a match.\n \n # m68k VxWorks\n-ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n+ifeq ($(strip $(filter-out m68k% wrs vx%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n@@ -502,7 +492,7 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n endif\n \n # PowerPC and e500v2 VxWorks\n-ifeq ($(strip $(filter-out e500% powerpc% wrs vxworks,$(targ))),)\n+ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n@@ -608,7 +598,7 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworks,$(targ))),)\n endif\n \n # PowerPC and e500v2 VxWorks 653\n-ifeq ($(strip $(filter-out powerpc% e500v2 wrs vxworksae,$(targ))),)\n+ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(target_cpu) $(target_vendor) $(target_os))),)\n   # target pairs for vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n   a-elchha.adb<a-elchha-vxworks-ppc-full.adb \\\n@@ -670,7 +660,7 @@ ifeq ($(strip $(filter-out powerpc% e500v2 wrs vxworksae,$(targ))),)\n endif\n \n # PowerPC and e500v2 VxWorks MILS\n-ifeq ($(strip $(filter-out e500% powerpc% wrs vxworksmils,$(targ))),)\n+ifeq ($(strip $(filter-out powerpc% wrs vxworksmils,$(target_cpu) $(target_vendor) $(target_os))),)\n   # target pairs for vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n   a-elchha.adb<a-elchha-vx6-raven-cert.adb \\\n@@ -720,7 +710,7 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworksmils,$(targ))),)\n endif\n \n # VxWorksae / VxWorks 653 for x86 (vxsim) - ?? VxWorks mils not implemented\n-ifeq ($(strip $(filter-out %86 wrs vxworksae vxworksmils,$(targ))),)\n+ifeq ($(strip $(filter-out %86 wrs vxworksae vxworksmils,$(target_cpu) $(target_vendor) $(target_os))),)\n   # target pairs for kernel + vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n   a-elchha.adb<a-elchha-vxworks-ppc-full.adb \\\n@@ -780,7 +770,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworksae vxworksmils,$(targ))),)\n endif\n \n # Sparc VxWorks\n-ifeq ($(strip $(filter-out sparc% leon% wrs vx%,$(targ))),)\n+ifeq ($(strip $(filter-out sparc% wrs vx%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n@@ -807,16 +797,16 @@ ifeq ($(strip $(filter-out sparc% leon% wrs vx%,$(targ))),)\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n   indepsw.adb<indepsw-gnu.adb\n \n-  ifeq ($(strip $(filter-out sparc erc32 leon leon3, $(arch))),)\n-    # 32-bits\n-    LIBGNAT_TARGET_PAIRS += \\\n-    s-vxwork.ads<s-vxwork-sparc.ads \\\n-    system.ads<system-vxworks-sparc-kernel.ads\n-  else\n+  ifeq ($(strip $(filter-out sparc64 sparcv9, $(target_cpu))),)\n     # 64-bits\n     LIBGNAT_TARGET_PAIRS += \\\n     s-vxwork.ads<s-vxwork-sparcv9.ads \\\n     system.ads<system-vxworks-sparcv9.ads\n+  else\n+    # 32-bits\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-vxwork.ads<s-vxwork-sparc.ads \\\n+    system.ads<system-vxworks-sparc-kernel.ads\n   endif\n \n   ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n@@ -832,7 +822,7 @@ ifeq ($(strip $(filter-out sparc% leon% wrs vx%,$(targ))),)\n endif\n \n # x86 VxWorks\n-ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n+ifeq ($(strip $(filter-out %86 wrs vxworks,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   i-vxwork.ads<i-vxwork-x86.ads \\\n@@ -923,7 +913,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n endif\n \n # ARM VxWorks\n-ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n+ifeq ($(strip $(filter-out arm% coff wrs vx%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n@@ -959,7 +949,7 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n endif\n \n # MIPS VxWorks\n-ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n+ifeq ($(strip $(filter-out mips% wrs vx%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n@@ -994,7 +984,8 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n endif\n \n-ifeq ($(strip $(filter-out arm% androideabi,$(arch) $(osys))),)\n+# ARM linux, Android eabi\n+ifeq ($(strip $(filter-out arm% linux-androideabi,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1022,7 +1013,7 @@ ifeq ($(strip $(filter-out arm% androideabi,$(arch) $(osys))),)\n endif\n \n # Sparc Solaris\n-ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n+ifeq ($(strip $(filter-out sparc% sun solaris%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-solaris.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1046,7 +1037,7 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n-  ifeq ($(strip $(filter-out sparc sun solaris%,$(targ))),)\n+  ifeq ($(strip $(filter-out sparc sun solaris%,$(target_cpu) $(target_vendor) $(target_os))),)\n     ifeq ($(strip $(MULTISUBDIR)),/sparcv9)\n       LIBGNAT_TARGET_PAIRS = \\\n       $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n@@ -1097,7 +1088,7 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(targ))),)\n endif\n \n # x86 and x86-64 solaris\n-ifeq ($(strip $(filter-out %86 %x86_64 %amd64 solaris2%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-solaris.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1122,7 +1113,7 @@ ifeq ($(strip $(filter-out %86 %x86_64 %amd64 solaris2%,$(arch) $(osys))),)\n   $(X86_64_TARGET_PAIRS) \\\n   system.ads<system-solaris-x86_64.ads\n \n-  ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n+  ifeq ($(strip $(filter-out %86 solaris2%,$(target_cpu) $(target_os))),)\n     ifeq ($(strip $(MULTISUBDIR)),/amd64)\n       LIBGNAT_TARGET_PAIRS = \\\n       $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n@@ -1154,7 +1145,7 @@ ifeq ($(strip $(filter-out %86 %x86_64 %amd64 solaris2%,$(arch) $(osys))),)\n endif\n \n # x86 Linux\n-ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out %86 linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   a-synbar.adb<a-synbar-posix.adb \\\n@@ -1215,7 +1206,7 @@ ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n endif\n \n # x86 kfreebsd\n-ifeq ($(strip $(filter-out %86 kfreebsd%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out %86 kfreebsd%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-freebsd.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1246,7 +1237,7 @@ ifeq ($(strip $(filter-out %86 kfreebsd%,$(arch) $(osys))),)\n   MISCLIB = -lutil\n endif\n \n-ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-freebsd.ads \\\n   a-numaux.adb<a-numaux-x86.adb \\\n@@ -1275,7 +1266,7 @@ ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(arch) $(osys))),)\n endif\n \n # x86 FreeBSD\n-ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-freebsd.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1304,7 +1295,7 @@ ifeq ($(strip $(filter-out %86 freebsd%,$(arch) $(osys))),)\n endif\n \n # x86-64 FreeBSD\n-ifeq ($(strip $(filter-out %86_64 freebsd%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out %86_64 freebsd%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-freebsd.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1333,7 +1324,7 @@ ifeq ($(strip $(filter-out %86_64 freebsd%,$(arch) $(osys))),)\n endif\n \n # S390 Linux\n-ifeq ($(strip $(filter-out s390% linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out s390% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1354,7 +1345,7 @@ ifeq ($(strip $(filter-out s390% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS_64 = \\\n   system.ads<system-linux-s390x.ads\n \n-  ifeq ($(strip $(filter-out s390x,$(arch))),)\n+  ifeq ($(strip $(filter-out s390x,$(target_cpu))),)\n     ifeq ($(strip $(MULTISUBDIR)),/32)\n       LIBGNAT_TARGET_PAIRS = \\\n       $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n@@ -1379,7 +1370,7 @@ ifeq ($(strip $(filter-out s390% linux%,$(arch) $(osys))),)\n endif\n \n # HP/PA HP-UX 10\n-ifeq ($(strip $(filter-out hppa% hp hpux10%,$(targ))),)\n+ifeq ($(strip $(filter-out hppa% hp hpux10%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-excpol.adb<a-excpol-abort.adb \\\n   a-intnam.ads<a-intnam-hpux.ads \\\n@@ -1399,7 +1390,7 @@ ifeq ($(strip $(filter-out hppa% hp hpux10%,$(targ))),)\n endif\n \n # HP/PA HP-UX 11\n-ifeq ($(strip $(filter-out hppa% hp hpux11%,$(targ))),)\n+ifeq ($(strip $(filter-out hppa% hp hpux11%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-hpux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1426,7 +1417,7 @@ ifeq ($(strip $(filter-out hppa% hp hpux11%,$(targ))),)\n endif\n \n # IBM AIX\n-ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n+ifeq ($(strip $(filter-out ibm aix%,$(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-aix.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1470,7 +1461,7 @@ ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n endif\n \n # RTEMS\n-ifeq ($(strip $(filter-out rtems%,$(osys))),)\n+ifeq ($(strip $(filter-out rtems%,$(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   system.ads<system-rtems.ads \\\n   a-intnam.ads<a-intnam-rtems.ads \\\n@@ -1488,7 +1479,7 @@ ifeq ($(strip $(filter-out rtems%,$(osys))),)\n endif\n \n # OpenVMS (host)\n-ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(host))),)\n+ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(host_cpu) $(host_vendor) $(host_os))),)\n \n soext  = .exe\n hyphen = _\n@@ -1498,7 +1489,7 @@ LN_S = cp -p\n endif\n \n # OpenVMS (target)\n-ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ))),)\n+ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n     a-caldel.adb<a-caldel-vms.adb \\\n     a-calend.adb<a-calend-vms.adb \\\n@@ -1532,7 +1523,7 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n     s-tpopde.adb<s-tpopde-vms.adb \\\n     s-tpopde.ads<s-tpopde-vms.ads\n \n-  ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(targ))),)\n+  ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(target_cpu) $(target_vendor) $(target_os))),)\n     LIBGNAT_TARGET_PAIRS += \\\n       g-enblsp.adb<g-enblsp-vms-ia64.adb \\\n       g-trasym.adb<g-trasym-vms-ia64.adb \\\n@@ -1552,7 +1543,7 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n       symbols.adb<symbols-vms.adb \\\n       symbols-processing.adb<symbols-processing-vms-ia64.adb\n   else\n-    ifeq ($(strip $(filter-out alpha64 dec vms% openvms% alphavms%,$(targ))),)\n+    ifeq ($(strip $(filter-out alpha64 dec vms% openvms% alphavms%,$(target_cpu) $(target_vendor) $(target_os))),)\n       LIBGNAT_TARGET_PAIRS += \\\n         g-enblsp.adb<g-enblsp-vms-alpha.adb \\\n         g-trasym.adb<g-trasym-vms-alpha.adb \\\n@@ -1590,22 +1581,22 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n   LIBRARY_VERSION := $(subst .,_,$(LIB_VERSION))\n endif\n \n-# *-elf\n-ifeq ($(strip $(filter-out lmp avr none powerpc% eabispe leon% erc32% unknown elf,$(targ))),)\n+# *-elf, *-eabi or *-eabispe\n+ifeq ($(strip $(filter-out elf eabi eabispe,$(target_os))),)\n   TOOLS_TARGET_PAIRS=\\\n   mlib-tgt-specific.adb<mlib-tgt-specific-xi.adb \\\n   indepsw.adb<indepsw-gnu.adb\n endif\n \n # Cygwin/Mingw32\n-ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(osys))),)\n+ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(target_os))),)\n   # Cygwin provides a full Posix environment, and so we use the default\n   # versions of s-memory and g-socthi rather than the Windows-specific\n   # MinGW versions.  Ideally we would use all the default versions for\n   # Cygwin and none of the MinGW versions, but for historical reasons\n   # the Cygwin port has always been a CygMing frankenhybrid and it is\n   # a long-term project to disentangle them.\n-  ifeq ($(strip $(filter-out cygwin%,$(osys))),)\n+  ifeq ($(strip $(filter-out cygwin%,$(target_os))),)\n     LIBGNAT_TARGET_PAIRS = \\\n     s-memory.adb<s-memory.adb \\\n     g-socthi.ads<g-socthi.ads \\\n@@ -1663,7 +1654,7 @@ ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(osys))),)\n     s-osprim.adb<s-osprim-mingw.adb \\\n     s-taprop.adb<s-taprop-mingw.adb\n \n-    ifeq ($(strip $(filter-out x86_64%,$(arch))),)\n+    ifeq ($(strip $(filter-out x86_64%,$(target_cpu))),)\n       ifeq ($(strip $(MULTISUBDIR)),/32)\n \tLIBGNAT_TARGET_PAIRS += \\\n \t  $(X86_TARGET_PAIRS) \\\n@@ -1714,7 +1705,7 @@ ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(osys))),)\n endif\n \n # Mips Linux\n-ifeq ($(strip $(filter-out mips linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out mips linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1738,7 +1729,7 @@ ifeq ($(strip $(filter-out mips linux%,$(arch) $(osys))),)\n endif\n \n # Mips/el Linux\n-ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out mipsel linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1781,7 +1772,7 @@ ifeq ($(strip $(filter-out mipsel linux%,$(arch) $(osys))),)\n endif\n \n # Mips64/el Linux\n-ifeq ($(strip $(filter-out mips64el linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out mips64el linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1824,7 +1815,7 @@ ifeq ($(strip $(filter-out mips64el linux%,$(arch) $(osys))),)\n endif\n \n # PowerPC and e500v2 Linux\n-ifeq ($(strip $(filter-out powerpc% e500% linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out powerpc% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-exetim.adb<a-exetim-posix.adb \\\n   a-exetim.ads<a-exetim-default.ads \\\n@@ -1887,7 +1878,8 @@ ifeq ($(strip $(filter-out powerpc% e500% linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-ifeq ($(strip $(filter-out arm%-linux,$(arch)-$(osys)) $(if $(findstring eabi,$(word 4,$(targ))),,$(word 4,$(targ)))),)\n+# ARM linux, GNU eabi\n+ifeq ($(strip $(filter-out arm% linux-gnueabi,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1902,7 +1894,7 @@ ifeq ($(strip $(filter-out arm%-linux,$(arch)-$(osys)) $(if $(findstring eabi,$(\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb\n \n-  ifeq ($(strip $(filter-out arm%b,$(arch))),)\n+  ifeq ($(strip $(filter-out arm%b,$(target_cpu))),)\n     LIBGNAT_TARGET_PAIRS += \\\n     system.ads<system-linux-armeb.ads\n   else\n@@ -1923,7 +1915,7 @@ ifeq ($(strip $(filter-out arm%-linux,$(arch)-$(osys)) $(if $(findstring eabi,$(\n endif\n \n # Sparc Linux\n-ifeq ($(strip $(filter-out sparc% linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out sparc% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1965,7 +1957,7 @@ ifeq ($(strip $(filter-out sparc% linux%,$(arch) $(osys))),)\n endif\n \n # HP/PA Linux\n-ifeq ($(strip $(filter-out hppa% linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out hppa% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1994,7 +1986,7 @@ ifeq ($(strip $(filter-out hppa% linux%,$(arch) $(osys))),)\n endif\n \n # SH4 Linux\n-ifeq ($(strip $(filter-out sh4% linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out sh4% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -2024,7 +2016,7 @@ ifeq ($(strip $(filter-out sh4% linux%,$(arch) $(osys))),)\n endif\n \n # IA64 Linux\n-ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out %ia64 linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-exetim.adb<a-exetim-posix.adb \\\n   a-exetim.ads<a-exetim-default.ads \\\n@@ -2063,7 +2055,7 @@ ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n endif\n \n # IA64 HP-UX\n-ifeq ($(strip $(filter-out ia64% hp hpux%,$(targ))),)\n+ifeq ($(strip $(filter-out ia64% hp hpux%,$(target_cpu) $(target_vendor) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-hpux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -2092,7 +2084,7 @@ ifeq ($(strip $(filter-out ia64% hp hpux%,$(targ))),)\n endif\n \n # Alpha Linux\n-ifeq ($(strip $(filter-out alpha% linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out alpha% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -2123,7 +2115,7 @@ ifeq ($(strip $(filter-out alpha% linux%,$(arch) $(osys))),)\n endif\n \n # x86-64 Linux\n-ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out %x86_64 linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-exetim.adb<a-exetim-posix.adb \\\n   a-exetim.ads<a-exetim-default.ads \\\n@@ -2160,7 +2152,7 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-ifeq ($(strip $(filter-out %x32 linux%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out %x32 linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-exetim.adb<a-exetim-posix.adb \\\n   a-exetim.ads<a-exetim-default.ads \\\n@@ -2198,7 +2190,7 @@ ifeq ($(strip $(filter-out %x32 linux%,$(arch) $(osys))),)\n endif\n \n # Darwin (Mac OS X)\n-ifeq ($(strip $(filter-out darwin%,$(osys))),)\n+ifeq ($(strip $(filter-out darwin%,$(target_cpu))),)\n   SO_OPTS = -shared-libgcc\n   LIBGNAT_TARGET_PAIRS = \\\n     a-intnam.ads<a-intnam-darwin.ads \\\n@@ -2209,7 +2201,7 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n     s-taspri.ads<s-taspri-posix.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb\n \n-  ifeq ($(strip $(filter-out %86,$(arch))),)\n+  ifeq ($(strip $(filter-out %86,$(target_cpu))),)\n     LIBGNAT_TARGET_PAIRS += \\\n       s-intman.adb<s-intman-susv3.adb \\\n       s-osprim.adb<s-osprim-darwin.adb \\\n@@ -2229,7 +2221,7 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n     EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n   endif\n \n-  ifeq ($(strip $(filter-out %x86_64,$(arch))),)\n+  ifeq ($(strip $(filter-out %x86_64,$(target_cpu))),)\n     LIBGNAT_TARGET_PAIRS += \\\n       s-intman.adb<s-intman-susv3.adb \\\n       s-osprim.adb<s-osprim-darwin.adb \\\n@@ -2249,7 +2241,7 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n     EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n   endif\n \n-  ifeq ($(strip $(filter-out powerpc%,$(arch))),)\n+  ifeq ($(strip $(filter-out powerpc%,$(target_cpu))),)\n     LIBGNAT_TARGET_PAIRS += \\\n       s-intman.adb<s-intman-posix.adb \\\n       s-osprim.adb<s-osprim-posix.adb \\\n@@ -2279,7 +2271,7 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n endif\n \n # ARM Nucleus\n-ifeq ($(strip $(filter-out arm nucleus%,$(arch) $(osys))),)\n+ifeq ($(strip $(filter-out arm nucleus%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   system.ads<system-nucleus-arm.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n@@ -2621,7 +2613,7 @@ install-gnatlib: ../stamp-gnatlib-$(RTSDIR)\n \t$(RM) ../stamp-gnatlib-$(RTSDIR)\n \ttouch ../stamp-gnatlib1-$(RTSDIR)\n \n-ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(subst -, ,$(host)))),)\n+ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%, $(host_cpu) $(host_os))),)\n OSCONS_CPP=../../$(DECC) -E /comment=as_is -DNATIVE \\\n              -DTARGET='\"\"$(target)\"\"' $(fsrcpfx)ada/s-oscons-tmplt.c\n "}]}