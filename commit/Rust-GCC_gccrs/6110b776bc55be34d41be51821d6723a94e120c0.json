{"sha": "6110b776bc55be34d41be51821d6723a94e120c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjExMGI3NzZiYzU1YmUzNGQ0MWJlNTE4MjFkNjcyM2E5NGUxMjBjMA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2006-03-26T05:20:09Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-03-26T05:20:09Z"}, "message": "re PR fortran/26816 ([4.1 only] FLOAT Intrinsic does not work with Integer Halfword input)\n\n\tPR fortran/26816\n\t* intrinsic.c (add_functions): Allow FLOAT to accept all integer kinds.\n\t* intrinsic.texi: Document FLOAT.\n\n\t* gfortran.dg/float_1.f90: New test.\n\nFrom-SVN: r112392", "tree": {"sha": "3bed4db4af247fc165f3ea184471aa5961edbdbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bed4db4af247fc165f3ea184471aa5961edbdbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6110b776bc55be34d41be51821d6723a94e120c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6110b776bc55be34d41be51821d6723a94e120c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6110b776bc55be34d41be51821d6723a94e120c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6110b776bc55be34d41be51821d6723a94e120c0/comments", "author": null, "committer": null, "parents": [{"sha": "0853054e96b9be76be424b0bdde28a54305fdd60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0853054e96b9be76be424b0bdde28a54305fdd60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0853054e96b9be76be424b0bdde28a54305fdd60"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "e5245db20f7d1014805679ee096dfe1f40a3ee76", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6110b776bc55be34d41be51821d6723a94e120c0", "patch": "@@ -1,3 +1,9 @@\n+2006-03-25  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/26816\n+\t* intrinsic.c (add_functions): Allow FLOAT to accept all integer kinds.\n+\t* intrinsic.texi: Document FLOAT.\n+\n 2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR fortran/26769"}, {"sha": "707fe5b456a03abf75ab184044514368c5595f9d", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=6110b776bc55be34d41be51821d6723a94e120c0", "patch": "@@ -1899,7 +1899,7 @@ add_functions (void)\n \t     a, BT_UNKNOWN, dr, REQUIRED);\n \n   add_sym_1 (\"float\", 1, 0, BT_REAL, dr, GFC_STD_F77,\n-\t     NULL, gfc_simplify_float, NULL,\n+\t     gfc_check_i, gfc_simplify_float, NULL,\n \t     a, BT_INTEGER, di, REQUIRED);\n \n   add_sym_1 (\"sngl\", 1, 0, BT_REAL, dr, GFC_STD_F77,"}, {"sha": "5942329be8c2cc4344d9dc23dd6ed6210bd2433f", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=6110b776bc55be34d41be51821d6723a94e120c0", "patch": "@@ -88,6 +88,7 @@ and editing.  All contributions and corrections are strongly encouraged.\n * @code{EXP}:           EXP,       Exponential function\n * @code{EXPONENT}:      EXPONENT,  Exponent function\n * @code{FDATE}:         FDATE,     Subroutine (or function) to get the current time as a string\n+* @code{FLOAT}:         FLOAT,     Convert integer to default real\n * @code{FLOOR}:         FLOOR,     Integer floor function\n * @code{FNUM}:          FNUM,      File number function\n * @code{FREE}:          FREE,      Memory de-allocation subroutine\n@@ -2842,6 +2843,41 @@ end program test_fdate\n @end smallexample\n @end table\n \n+@node FLOAT\n+@section @code{FLOAT} --- Convert integer to default real\n+@findex @code{FLOAT} intrinsic\n+@cindex floor\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{FLOAT(I)} converts the integer @var{I} to a default real value.\n+\n+@item @emph{Option}:\n+gnu\n+\n+@item @emph{Class}:\n+function\n+\n+@item @emph{Syntax}:\n+@code{X = FLOAT(I)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .80\n+@item @var{I} @tab The type shall be @code{INTEGER(*)}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type default @code{REAL}\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_float\n+    integer :: i = 1\n+    if (float(i) /= 1.) call abort\n+end program test_float\n+@end smallexample\n+@end table\n+\n \n @node FLOOR\n @section @code{FLOOR} --- Integer floor function"}, {"sha": "2a9840b89792579b82a565d6e3ed768adec5b5cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6110b776bc55be34d41be51821d6723a94e120c0", "patch": "@@ -1,3 +1,8 @@\n+2006-03-25  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/26816 \n+\t* gfortran.dg/float_1.f90: New test.\n+\n 2006-03-25  Steven G. Kargl  <kargsl@comcast.net>\n \n \t* gfortran.dg/transfer_array_intrinsic_1.f90: Restrict to i?86 and"}, {"sha": "224d31dce0d93f58c17685747ca3ecf230ecf93b", "filename": "gcc/testsuite/gfortran.dg/float_1.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ftestsuite%2Fgfortran.dg%2Ffloat_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6110b776bc55be34d41be51821d6723a94e120c0/gcc%2Ftestsuite%2Fgfortran.dg%2Ffloat_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffloat_1.f90?ref=6110b776bc55be34d41be51821d6723a94e120c0", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do run }\n+! PR fortran/26816\n+program test_float\n+   integer(1) :: i1 = 1\n+   integer(2) :: i2 = 1\n+   integer(4) :: i4 = 1\n+   integer(8) :: i8 = 1\n+   if (float(i1) /= 1.) call abort\n+   if (float(i2) /= 1.) call abort\n+   if (float(i4) /= 1.) call abort\n+   if (float(i8) /= 1.) call abort\n+end program test_float"}]}