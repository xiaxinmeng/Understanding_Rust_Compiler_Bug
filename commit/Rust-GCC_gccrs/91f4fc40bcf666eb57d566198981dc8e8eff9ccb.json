{"sha": "91f4fc40bcf666eb57d566198981dc8e8eff9ccb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFmNGZjNDBiY2Y2NjZlYjU3ZDU2NjE5ODk4MWRjOGU4ZWZmOWNjYg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-10T15:48:27Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-11T01:43:49Z"}, "message": "c++: Improve dump_decl for standard concepts\n\nThis patch improves the pretty printing of standard concept definitions in error\nmessages.  In particular, standard concepts are now printed qualified whenever\nappropriate, and the \"concept\" specifier is printed only when the\nTFF_DECL_SPECIFIERS flag is specified.\n\nIn the below test, the first error message changes from\n  9:15: error: \u2018b\u2019 was not declared in this scope; did you mean \u2018concept b\u2019?\nto\n  9:15: error: \u2018b\u2019 was not declared in this scope; did you mean \u2018a::b\u2019?\n\ngcc/cp/ChangeLog:\n\n\t* error.c (dump_decl) [CONCEPT_DECL]: Use dump_simple_decl.\n\t(dump_simple_decl): Handle standard concept definitions as well as\n\tvariable concept definitions.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp2a/concepts6.C: New test.", "tree": {"sha": "3a83045dfc372022e579cc2b7a17764df7651c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a83045dfc372022e579cc2b7a17764df7651c94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91f4fc40bcf666eb57d566198981dc8e8eff9ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f4fc40bcf666eb57d566198981dc8e8eff9ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f4fc40bcf666eb57d566198981dc8e8eff9ccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/comments", "author": null, "committer": null, "parents": [{"sha": "9053a18fc77781f64ed66d1bd761bdefb68b871a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9053a18fc77781f64ed66d1bd761bdefb68b871a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9053a18fc77781f64ed66d1bd761bdefb68b871a"}], "stats": {"total": 46, "additions": 36, "deletions": 10}, "files": [{"sha": "5a6e3564edae4f11a672839d55b76eb4b1afe8ea", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=91f4fc40bcf666eb57d566198981dc8e8eff9ccb", "patch": "@@ -1,3 +1,9 @@\n+2020-02-12  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* error.c (dump_decl) [CONCEPT_DECL]: Use dump_simple_decl.\n+\t(dump_simple_decl): Handle standard concept definitions as well as\n+\tvariable concept definitions.\n+\n 2020-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/93641"}, {"sha": "cc51b6ffe1339c11eafdbd8e9b87561c36d13bb1", "filename": "gcc/cp/error.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=91f4fc40bcf666eb57d566198981dc8e8eff9ccb", "patch": "@@ -1037,14 +1037,13 @@ dump_simple_decl (cxx_pretty_printer *pp, tree t, tree type, int flags)\n \n   if (flags & TFF_DECL_SPECIFIERS)\n     {\n-      if (VAR_P (t) && DECL_DECLARED_CONSTEXPR_P (t))\n-        {\n-\t  if (DECL_LANG_SPECIFIC (t) && DECL_DECLARED_CONCEPT_P (t))\n-\t    pp_cxx_ws_string (pp, \"concept\");\n-\t  else\n-\t    pp_cxx_ws_string (pp, \"constexpr\");\n-\t}\n-      dump_type_prefix (pp, type, flags & ~TFF_UNQUALIFIED_NAME);\n+      if (concept_definition_p (t))\n+\tpp_cxx_ws_string (pp, \"concept\");\n+      else if (VAR_P (t) && DECL_DECLARED_CONSTEXPR_P (t))\n+\tpp_cxx_ws_string (pp, \"constexpr\");\n+\n+      if (!standard_concept_p (t))\n+\tdump_type_prefix (pp, type, flags & ~TFF_UNQUALIFIED_NAME);\n       pp_maybe_space (pp);\n     }\n   if (! (flags & TFF_UNQUALIFIED_NAME)\n@@ -1296,8 +1295,7 @@ dump_decl (cxx_pretty_printer *pp, tree t, int flags)\n       break;\n \n     case CONCEPT_DECL:\n-      pp_cxx_ws_string (pp, \"concept\");\n-      dump_decl_name (pp, DECL_NAME (t), flags);\n+      dump_simple_decl (pp, t, TREE_TYPE (t), flags);\n       break;\n \n     case WILDCARD_DECL:"}, {"sha": "5f31ceb04debc97e12fd1343607f778decfaed6c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=91f4fc40bcf666eb57d566198981dc8e8eff9ccb", "patch": "@@ -1,3 +1,7 @@\n+2020-02-12  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* g++.dg/cpp2a/concepts6.C: New test.\n+\n 2020-02-10  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93350"}, {"sha": "d69628b0318e02f8d2756aa452820ff62685194e", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts6.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f4fc40bcf666eb57d566198981dc8e8eff9ccb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts6.C?ref=91f4fc40bcf666eb57d566198981dc8e8eff9ccb", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do compile { target c++2a } }\n+\n+namespace a\n+{\n+  template<typename = int>\n+    concept b = true; // { dg-message \".a::b. declared here\" }\n+}\n+\n+static_assert(b); // { dg-error \"did you mean .a::b.\" }\n+\n+namespace c\n+{\n+  template<typename>\n+    concept b = true; // { dg-message \"concept c::b.\" }\n+\n+  template<typename>\n+    concept b = true; // { dg-error \"concept c::b.\" }\n+}"}]}