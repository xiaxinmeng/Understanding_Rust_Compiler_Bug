{"sha": "fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRiOGI0YzAyNWFhZWM2ZWYyMDhjMGFmNjk4Y2MzZmFhODdkMTVkZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-11-03T17:33:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-11-03T17:33:31Z"}, "message": "tree-tailcall.c (find_tail_calls): Convert the operands to the type of the result before building binary expressions.\n\n\t* tree-tailcall.c (find_tail_calls): Convert the operands to the type\n\tof the result before building binary expressions.\n\nFrom-SVN: r166260", "tree": {"sha": "c41ccdf4f2a83d3a7481104e5f49d0bedf5f94fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c41ccdf4f2a83d3a7481104e5f49d0bedf5f94fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/comments", "author": null, "committer": null, "parents": [{"sha": "5554928d3d05201ad1b0c826c5221ead783f765f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5554928d3d05201ad1b0c826c5221ead783f765f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5554928d3d05201ad1b0c826c5221ead783f765f"}], "stats": {"total": 119, "additions": 116, "deletions": 3}, "files": [{"sha": "1e16506d931082a131ec281d46d4578a90b7e30f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "patch": "@@ -1,3 +1,8 @@\n+2010-11-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-tailcall.c (find_tail_calls): Convert the operands to the type\n+\tof the result before building binary expressions.\n+\n 2010-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/45865"}, {"sha": "26555d71b385ff7cfaef989392c8b781c3f2f34d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "patch": "@@ -1,3 +1,8 @@\n+2010-11-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt8.ad[sb]: New test.\n+\t* gnat.dg/opt8_pkg.ads: New helper.\n+\n 2010-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/45865"}, {"sha": "72145fd6b795896932848f459e2fda53181de867", "filename": "gcc/testsuite/gnat.dg/opt8.adb", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8.adb?ref=fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "patch": "@@ -0,0 +1,48 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O2\" }\n+\n+with Opt8_Pkg;\n+\n+package body Opt8 is\n+\n+    function Content_Value (Rec : Kappa_Component_Rec)\n+        return Value_Number is\n+    begin\n+        return Opt8_Pkg.Id_To_VN (Rec.Content_VN);\n+    end;\n+\n+    function Possible_Values_Count (V: Kappa_Component_Ptr) return Natural is\n+        Result : Natural := 0;\n+        List : Kappa_Component_Ptr := V;\n+    begin\n+        while List /= null loop\n+            Result := Result +1;\n+            List := List.Next;\n+        end loop;\n+        return Result;\n+    end;\n+\n+    function VN_Complexity (Val : Value_Number; N : Natural)\n+        return Natural is\n+        Result : Natural := 0;\n+      begin\n+        case Val.Kind is\n+            when Membership_VN =>\n+                Result :=  VN_Complexity(Val, N);\n+            when Selected_Address_VN =>\n+                Result :=  VN_Complexity(Val, N) + 1;\n+            when Kappa_VN =>\n+                Result := Possible_Values_Count(Val.Possible_New_Values)*3;\n+                if Val.Use_Default then\n+                    if Result < N then\n+                      Result := Result +\n+                          VN_Complexity(Content_Value (Val.old_Value), N);\n+                    end if;\n+                end if;\n+            when others =>\n+              Result := 0;\n+          end case;\n+        return Result;\n+    end;\n+\n+end Opt8;"}, {"sha": "57d84a2935d50110ceba0b9a88a26ac3f3c8653c", "filename": "gcc/testsuite/gnat.dg/opt8.ads", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8.ads?ref=fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "patch": "@@ -0,0 +1,46 @@\n+package Opt8 is\n+\n+    type Value_Number_Kind is\n+      (Int_Literal_VN,\n+       Selected_Address_VN,\n+       Membership_VN,\n+       Initial_External_Kappa_VN,\n+       Aliased_Kappa_VN,\n+       Phi_As_Kappa_VN,\n+       Multi_Target_Call_Kappa_VN,\n+       Final_Value_Of_Seq_Kappa_VN,\n+       Block_Kappa_VN);\n+\n+    subtype Kappa_VN is Value_Number_Kind\n+    range Initial_External_Kappa_VN .. Block_Kappa_VN;\n+\n+    type Value_Number_Id is new Positive;\n+\n+    type Kappa_Component_Rec;\n+\n+    type Kappa_Component_Ptr is access Kappa_Component_Rec;\n+\n+    type Kappa_Component_Rec is record\n+        Content_VN : Value_Number_Id;\n+        Next : Kappa_Component_Ptr;\n+    end record;\n+\n+    type Value_Number_Rec(Kind : Value_Number_Kind) is record\n+        Id: Value_Number_Id;\n+        case Kind is\n+            when Int_Literal_VN =>\n+                Int_Val : Integer;\n+            when Kappa_VN =>\n+                Old_Value : Kappa_Component_Rec;\n+                Possible_New_Values : Kappa_Component_Ptr;\n+                Use_Default : Boolean;\n+            when Others =>\n+                null;\n+        end case;\n+    end record;\n+\n+    type Value_Number is access all Value_Number_Rec;\n+\n+    function VN_Complexity (Val : Value_Number; N : Natural) return Natural;\n+\n+end Opt8;"}, {"sha": "3e39f1177a2f9d6005f6f0ca94eb7780cf2133a2", "filename": "gcc/testsuite/gnat.dg/opt8_pkg.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt8_pkg.ads?ref=fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "patch": "@@ -0,0 +1,7 @@\n+with Opt8; use Opt8;\n+\n+package Opt8_Pkg is\n+\n+    function Id_To_VN (Id: Value_Number_Id) return Value_Number;\n+\n+end Opt8_Pkg;"}, {"sha": "10ae450886fd5828a61d1b6d28ae7fd47b747243", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb8b4c025aaec6ef208c0af698cc3faa87d15dd/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=fdb8b4c025aaec6ef208c0af698cc3faa87d15dd", "patch": "@@ -532,20 +532,22 @@ find_tail_calls (basic_block bb, struct tailcall **ret)\n \n       if (tmp_a)\n \t{\n+\t  tree type = TREE_TYPE (tmp_a);\n \t  if (a)\n-\t    a = fold_build2 (PLUS_EXPR, TREE_TYPE (tmp_a), a, tmp_a);\n+\t    a = fold_build2 (PLUS_EXPR, type, fold_convert (type, a), tmp_a);\n \t  else\n \t    a = tmp_a;\n \t}\n       if (tmp_m)\n \t{\n+\t  tree type = TREE_TYPE (tmp_m);\n \t  if (m)\n-\t    m = fold_build2 (MULT_EXPR, TREE_TYPE (tmp_m), m, tmp_m);\n+\t    m = fold_build2 (MULT_EXPR, type, fold_convert (type, m), tmp_m);\n \t  else\n \t    m = tmp_m;\n \n \t  if (a)\n-\t    a = fold_build2 (MULT_EXPR, TREE_TYPE (tmp_m), a, tmp_m);\n+\t    a = fold_build2 (MULT_EXPR, type, fold_convert (type, a), tmp_m);\n \t}\n     }\n "}]}