{"sha": "8c9ee176a61d7591e666700e41af2aadb60b8f6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5ZWUxNzZhNjFkNzU5MWU2NjY3MDBlNDFhZjJhYWRiNjBiOGY2YQ==", "commit": {"author": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2017-12-05T14:17:35Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gcc.gnu.org", "date": "2017-12-05T14:17:35Z"}, "message": "gcc: xtensa: enable address sanitizer\n\ngcc/\n2017-12-05  Max Filippov  <jcmvbkbc@gmail.com>\n\n\t* config/xtensa/xtensa.c (xtensa_asan_shadow_offset): New\n\tfunction.\n\t(TARGET_ASAN_SHADOW_OFFSET): New macro definition.\n\t* config/xtensa/xtensa.h (FRAME_GROWS_DOWNWARD): Set to 1 if\n\tASAN is enabled.\n\nFrom-SVN: r255420", "tree": {"sha": "53a784a6fc435c9508d843f0ffc75296987e80c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53a784a6fc435c9508d843f0ffc75296987e80c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c9ee176a61d7591e666700e41af2aadb60b8f6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9ee176a61d7591e666700e41af2aadb60b8f6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9ee176a61d7591e666700e41af2aadb60b8f6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9ee176a61d7591e666700e41af2aadb60b8f6a/comments", "author": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac550b9a0e827dc155c2d38b24c527f47be191dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac550b9a0e827dc155c2d38b24c527f47be191dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac550b9a0e827dc155c2d38b24c527f47be191dc"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "9097671c09aa30af225a0f0dfbbba027b8be3668", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9ee176a61d7591e666700e41af2aadb60b8f6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9ee176a61d7591e666700e41af2aadb60b8f6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c9ee176a61d7591e666700e41af2aadb60b8f6a", "patch": "@@ -1,3 +1,11 @@\n+2017-12-05  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/xtensa/xtensa.c (xtensa_asan_shadow_offset): New\n+\tfunction.\n+\t(TARGET_ASAN_SHADOW_OFFSET): New macro definition.\n+\t* config/xtensa/xtensa.h (FRAME_GROWS_DOWNWARD): Set to 1 if\n+\tASAN is enabled.\n+\n 2017-12-05  Richard Biener   <rguenther@suse.de>\n \n \t* timevar.def (TV_TREE_RECIP, TV_TREE_SINCOS, TV_TREE_WIDEN_MUL):"}, {"sha": "92b9a600df823486d96e1add406263ff333fc394", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9ee176a61d7591e666700e41af2aadb60b8f6a/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9ee176a61d7591e666700e41af2aadb60b8f6a/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=8c9ee176a61d7591e666700e41af2aadb60b8f6a", "patch": "@@ -183,6 +183,7 @@ static bool xtensa_hard_regno_mode_ok (unsigned int, machine_mode);\n static bool xtensa_modes_tieable_p (machine_mode, machine_mode);\n static HOST_WIDE_INT xtensa_constant_alignment (const_tree, HOST_WIDE_INT);\n static HOST_WIDE_INT xtensa_starting_frame_offset (void);\n+static unsigned HOST_WIDE_INT xtensa_asan_shadow_offset (void);\n \n \f\n \n@@ -325,6 +326,9 @@ static HOST_WIDE_INT xtensa_starting_frame_offset (void);\n #undef TARGET_STARTING_FRAME_OFFSET\n #define TARGET_STARTING_FRAME_OFFSET xtensa_starting_frame_offset\n \n+#undef TARGET_ASAN_SHADOW_OFFSET\n+#define TARGET_ASAN_SHADOW_OFFSET xtensa_asan_shadow_offset\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n \f\n@@ -4413,4 +4417,12 @@ xtensa_starting_frame_offset (void)\n   return crtl->outgoing_args_size;\n }\n \n+/* Implement TARGET_ASAN_SHADOW_OFFSET.  */\n+\n+static unsigned HOST_WIDE_INT\n+xtensa_asan_shadow_offset (void)\n+{\n+  return HOST_WIDE_INT_UC (0x10000000);\n+}\n+\n #include \"gt-xtensa.h\""}, {"sha": "1602fae3d9ea792b8da79017689372b1537624a2", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9ee176a61d7591e666700e41af2aadb60b8f6a/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9ee176a61d7591e666700e41af2aadb60b8f6a/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=8c9ee176a61d7591e666700e41af2aadb60b8f6a", "patch": "@@ -430,7 +430,8 @@ enum reg_class\n \n #define STACK_GROWS_DOWNWARD 1\n \n-#define FRAME_GROWS_DOWNWARD flag_stack_protect\n+#define FRAME_GROWS_DOWNWARD (flag_stack_protect \\\n+\t\t\t      || (flag_sanitize & SANITIZE_ADDRESS) != 0)\n \n /* The ARG_POINTER and FRAME_POINTER are not real Xtensa registers, so\n    they are eliminated to either the stack pointer or hard frame pointer.  */"}]}