{"sha": "37f2200463a45c51ccb631f74439475b135907cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdmMjIwMDQ2M2E0NWM1MWNjYjYzMWY3NDQzOTQ3NWIxMzU5MDdjZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2003-06-25T20:23:14Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2003-06-25T20:23:14Z"}, "message": "i386.c (MASK_SSE1): Removed.\n\n2003-06-25  H.J. Lu <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.c (MASK_SSE1): Removed.\n\t(MASK_SSE164): Removed.\n\t(MASK_SSE264): Removed.\n\t(bdesc_2arg): Replace MASK_SSE1 with MASK_SSE. Replace\n\tMASK_SSE164 with MASK_SSE | MASK_64BIT. Replace MASK_SSE264\n\twith MASK_SSE2 | MASK_64BIT.\n\t(bdesc_1arg): Likewise.\n\t(ix86_init_mmx_sse_builtins): Likewise.\n\n\t* config/i386/i386.h (TARGET_SSE): Remove MASK_SSE2.\n\t(TARGET_SWITCHES): Enable both MASK_SSE and MASK_SSE2 for\n\t-msse2.\n\nFrom-SVN: r68492", "tree": {"sha": "face56ba373b7747375468ea81c75e4dc1f91f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/face56ba373b7747375468ea81c75e4dc1f91f60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37f2200463a45c51ccb631f74439475b135907cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f2200463a45c51ccb631f74439475b135907cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37f2200463a45c51ccb631f74439475b135907cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f2200463a45c51ccb631f74439475b135907cf/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85f015e1202e8a9945aa1b81917fcd5fd4de5e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85f015e1202e8a9945aa1b81917fcd5fd4de5e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85f015e1202e8a9945aa1b81917fcd5fd4de5e72"}], "stats": {"total": 290, "additions": 150, "deletions": 140}, "files": [{"sha": "62f2c9b0a6724ce1cf67008b614230043661fc68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f2200463a45c51ccb631f74439475b135907cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f2200463a45c51ccb631f74439475b135907cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37f2200463a45c51ccb631f74439475b135907cf", "patch": "@@ -1,3 +1,18 @@\n+2003-06-25  H.J. Lu <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (MASK_SSE1): Removed.\n+\t(MASK_SSE164): Removed.\n+\t(MASK_SSE264): Removed.\n+\t(bdesc_2arg): Replace MASK_SSE1 with MASK_SSE. Replace\n+\tMASK_SSE164 with MASK_SSE | MASK_64BIT. Replace MASK_SSE264\n+\twith MASK_SSE2 | MASK_64BIT.\n+\t(bdesc_1arg): Likewise.\n+\t(ix86_init_mmx_sse_builtins): Likewise.\n+\n+\t* config/i386/i386.h (TARGET_SSE): Remove MASK_SSE2.\n+\t(TARGET_SWITCHES): Enable both MASK_SSE and MASK_SSE2 for\n+\t-msse2.\n+\n 2003-06-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* hwint.h (HOST_WIDE_INT_PRINT, HOST_WIDE_INT_PRINT_C): New macros."}, {"sha": "56c5ce5e2becb71cc5d8185b372688cfa3c6b92d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 133, "deletions": 138, "changes": 271, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f2200463a45c51ccb631f74439475b135907cf/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f2200463a45c51ccb631f74439475b135907cf/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=37f2200463a45c51ccb631f74439475b135907cf", "patch": "@@ -12771,25 +12771,20 @@ struct builtin_description\n   const unsigned int flag;\n };\n \n-/* Used for builtins that are enabled both by -msse and -msse2.  */\n-#define MASK_SSE1 (MASK_SSE | MASK_SSE2)\n-#define MASK_SSE164 (MASK_SSE | MASK_SSE2 | MASK_64BIT)\n-#define MASK_SSE264 (MASK_SSE2 | MASK_64BIT)\n-\n static const struct builtin_description bdesc_comi[] =\n {\n-  { MASK_SSE1, CODE_FOR_sse_comi, \"__builtin_ia32_comieq\", IX86_BUILTIN_COMIEQSS, UNEQ, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_comi, \"__builtin_ia32_comilt\", IX86_BUILTIN_COMILTSS, UNLT, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_comi, \"__builtin_ia32_comile\", IX86_BUILTIN_COMILESS, UNLE, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_comi, \"__builtin_ia32_comigt\", IX86_BUILTIN_COMIGTSS, GT, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_comi, \"__builtin_ia32_comige\", IX86_BUILTIN_COMIGESS, GE, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_comi, \"__builtin_ia32_comineq\", IX86_BUILTIN_COMINEQSS, LTGT, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomieq\", IX86_BUILTIN_UCOMIEQSS, UNEQ, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomilt\", IX86_BUILTIN_UCOMILTSS, UNLT, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomile\", IX86_BUILTIN_UCOMILESS, UNLE, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomigt\", IX86_BUILTIN_UCOMIGTSS, GT, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomige\", IX86_BUILTIN_UCOMIGESS, GE, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomineq\", IX86_BUILTIN_UCOMINEQSS, LTGT, 0 },\n+  { MASK_SSE, CODE_FOR_sse_comi, \"__builtin_ia32_comieq\", IX86_BUILTIN_COMIEQSS, UNEQ, 0 },\n+  { MASK_SSE, CODE_FOR_sse_comi, \"__builtin_ia32_comilt\", IX86_BUILTIN_COMILTSS, UNLT, 0 },\n+  { MASK_SSE, CODE_FOR_sse_comi, \"__builtin_ia32_comile\", IX86_BUILTIN_COMILESS, UNLE, 0 },\n+  { MASK_SSE, CODE_FOR_sse_comi, \"__builtin_ia32_comigt\", IX86_BUILTIN_COMIGTSS, GT, 0 },\n+  { MASK_SSE, CODE_FOR_sse_comi, \"__builtin_ia32_comige\", IX86_BUILTIN_COMIGESS, GE, 0 },\n+  { MASK_SSE, CODE_FOR_sse_comi, \"__builtin_ia32_comineq\", IX86_BUILTIN_COMINEQSS, LTGT, 0 },\n+  { MASK_SSE, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomieq\", IX86_BUILTIN_UCOMIEQSS, UNEQ, 0 },\n+  { MASK_SSE, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomilt\", IX86_BUILTIN_UCOMILTSS, UNLT, 0 },\n+  { MASK_SSE, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomile\", IX86_BUILTIN_UCOMILESS, UNLE, 0 },\n+  { MASK_SSE, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomigt\", IX86_BUILTIN_UCOMIGTSS, GT, 0 },\n+  { MASK_SSE, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomige\", IX86_BUILTIN_UCOMIGESS, GE, 0 },\n+  { MASK_SSE, CODE_FOR_sse_ucomi, \"__builtin_ia32_ucomineq\", IX86_BUILTIN_UCOMINEQSS, LTGT, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_comi, \"__builtin_ia32_comisdeq\", IX86_BUILTIN_COMIEQSD, UNEQ, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_comi, \"__builtin_ia32_comisdlt\", IX86_BUILTIN_COMILTSD, UNLT, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_comi, \"__builtin_ia32_comisdle\", IX86_BUILTIN_COMILESD, UNLE, 0 },\n@@ -12807,51 +12802,51 @@ static const struct builtin_description bdesc_comi[] =\n static const struct builtin_description bdesc_2arg[] =\n {\n   /* SSE */\n-  { MASK_SSE1, CODE_FOR_addv4sf3, \"__builtin_ia32_addps\", IX86_BUILTIN_ADDPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_subv4sf3, \"__builtin_ia32_subps\", IX86_BUILTIN_SUBPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_mulv4sf3, \"__builtin_ia32_mulps\", IX86_BUILTIN_MULPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_divv4sf3, \"__builtin_ia32_divps\", IX86_BUILTIN_DIVPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_vmaddv4sf3,  \"__builtin_ia32_addss\", IX86_BUILTIN_ADDSS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_vmsubv4sf3,  \"__builtin_ia32_subss\", IX86_BUILTIN_SUBSS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmulv4sf3,  \"__builtin_ia32_mulss\", IX86_BUILTIN_MULSS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_vmdivv4sf3,  \"__builtin_ia32_divss\", IX86_BUILTIN_DIVSS, 0, 0 },\n-\n-  { MASK_SSE1, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpeqps\", IX86_BUILTIN_CMPEQPS, EQ, 0 },\n-  { MASK_SSE1, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpltps\", IX86_BUILTIN_CMPLTPS, LT, 0 },\n-  { MASK_SSE1, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpleps\", IX86_BUILTIN_CMPLEPS, LE, 0 },\n-  { MASK_SSE1, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpgtps\", IX86_BUILTIN_CMPGTPS, LT, 1 },\n-  { MASK_SSE1, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpgeps\", IX86_BUILTIN_CMPGEPS, LE, 1 },\n-  { MASK_SSE1, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpunordps\", IX86_BUILTIN_CMPUNORDPS, UNORDERED, 0 },\n-  { MASK_SSE1, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpneqps\", IX86_BUILTIN_CMPNEQPS, EQ, 0 },\n-  { MASK_SSE1, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpnltps\", IX86_BUILTIN_CMPNLTPS, LT, 0 },\n-  { MASK_SSE1, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpnleps\", IX86_BUILTIN_CMPNLEPS, LE, 0 },\n-  { MASK_SSE1, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpngtps\", IX86_BUILTIN_CMPNGTPS, LT, 1 },\n-  { MASK_SSE1, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpngeps\", IX86_BUILTIN_CMPNGEPS, LE, 1 },\n-  { MASK_SSE1, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpordps\", IX86_BUILTIN_CMPORDPS, UNORDERED, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmaskcmpv4sf3, \"__builtin_ia32_cmpeqss\", IX86_BUILTIN_CMPEQSS, EQ, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmaskcmpv4sf3, \"__builtin_ia32_cmpltss\", IX86_BUILTIN_CMPLTSS, LT, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmaskcmpv4sf3, \"__builtin_ia32_cmpless\", IX86_BUILTIN_CMPLESS, LE, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmaskcmpv4sf3, \"__builtin_ia32_cmpunordss\", IX86_BUILTIN_CMPUNORDSS, UNORDERED, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmaskncmpv4sf3, \"__builtin_ia32_cmpneqss\", IX86_BUILTIN_CMPNEQSS, EQ, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmaskncmpv4sf3, \"__builtin_ia32_cmpnltss\", IX86_BUILTIN_CMPNLTSS, LT, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmaskncmpv4sf3, \"__builtin_ia32_cmpnless\", IX86_BUILTIN_CMPNLESS, LE, 0 },\n-  { MASK_SSE1, CODE_FOR_vmmaskncmpv4sf3, \"__builtin_ia32_cmpordss\", IX86_BUILTIN_CMPORDSS, UNORDERED, 0 },\n-\n-  { MASK_SSE1, CODE_FOR_sminv4sf3, \"__builtin_ia32_minps\", IX86_BUILTIN_MINPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_smaxv4sf3, \"__builtin_ia32_maxps\", IX86_BUILTIN_MAXPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_vmsminv4sf3, \"__builtin_ia32_minss\", IX86_BUILTIN_MINSS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_vmsmaxv4sf3, \"__builtin_ia32_maxss\", IX86_BUILTIN_MAXSS, 0, 0 },\n-\n-  { MASK_SSE1, CODE_FOR_sse_andv4sf3, \"__builtin_ia32_andps\", IX86_BUILTIN_ANDPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_nandv4sf3,  \"__builtin_ia32_andnps\", IX86_BUILTIN_ANDNPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_iorv4sf3, \"__builtin_ia32_orps\", IX86_BUILTIN_ORPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_xorv4sf3,  \"__builtin_ia32_xorps\", IX86_BUILTIN_XORPS, 0, 0 },\n-\n-  { MASK_SSE1, CODE_FOR_sse_movss,  \"__builtin_ia32_movss\", IX86_BUILTIN_MOVSS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_movhlps,  \"__builtin_ia32_movhlps\", IX86_BUILTIN_MOVHLPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_movlhps,  \"__builtin_ia32_movlhps\", IX86_BUILTIN_MOVLHPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_unpckhps, \"__builtin_ia32_unpckhps\", IX86_BUILTIN_UNPCKHPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_unpcklps, \"__builtin_ia32_unpcklps\", IX86_BUILTIN_UNPCKLPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_addv4sf3, \"__builtin_ia32_addps\", IX86_BUILTIN_ADDPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_subv4sf3, \"__builtin_ia32_subps\", IX86_BUILTIN_SUBPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_mulv4sf3, \"__builtin_ia32_mulps\", IX86_BUILTIN_MULPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_divv4sf3, \"__builtin_ia32_divps\", IX86_BUILTIN_DIVPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_vmaddv4sf3,  \"__builtin_ia32_addss\", IX86_BUILTIN_ADDSS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_vmsubv4sf3,  \"__builtin_ia32_subss\", IX86_BUILTIN_SUBSS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_vmmulv4sf3,  \"__builtin_ia32_mulss\", IX86_BUILTIN_MULSS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_vmdivv4sf3,  \"__builtin_ia32_divss\", IX86_BUILTIN_DIVSS, 0, 0 },\n+\n+  { MASK_SSE, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpeqps\", IX86_BUILTIN_CMPEQPS, EQ, 0 },\n+  { MASK_SSE, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpltps\", IX86_BUILTIN_CMPLTPS, LT, 0 },\n+  { MASK_SSE, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpleps\", IX86_BUILTIN_CMPLEPS, LE, 0 },\n+  { MASK_SSE, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpgtps\", IX86_BUILTIN_CMPGTPS, LT, 1 },\n+  { MASK_SSE, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpgeps\", IX86_BUILTIN_CMPGEPS, LE, 1 },\n+  { MASK_SSE, CODE_FOR_maskcmpv4sf3, \"__builtin_ia32_cmpunordps\", IX86_BUILTIN_CMPUNORDPS, UNORDERED, 0 },\n+  { MASK_SSE, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpneqps\", IX86_BUILTIN_CMPNEQPS, EQ, 0 },\n+  { MASK_SSE, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpnltps\", IX86_BUILTIN_CMPNLTPS, LT, 0 },\n+  { MASK_SSE, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpnleps\", IX86_BUILTIN_CMPNLEPS, LE, 0 },\n+  { MASK_SSE, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpngtps\", IX86_BUILTIN_CMPNGTPS, LT, 1 },\n+  { MASK_SSE, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpngeps\", IX86_BUILTIN_CMPNGEPS, LE, 1 },\n+  { MASK_SSE, CODE_FOR_maskncmpv4sf3, \"__builtin_ia32_cmpordps\", IX86_BUILTIN_CMPORDPS, UNORDERED, 0 },\n+  { MASK_SSE, CODE_FOR_vmmaskcmpv4sf3, \"__builtin_ia32_cmpeqss\", IX86_BUILTIN_CMPEQSS, EQ, 0 },\n+  { MASK_SSE, CODE_FOR_vmmaskcmpv4sf3, \"__builtin_ia32_cmpltss\", IX86_BUILTIN_CMPLTSS, LT, 0 },\n+  { MASK_SSE, CODE_FOR_vmmaskcmpv4sf3, \"__builtin_ia32_cmpless\", IX86_BUILTIN_CMPLESS, LE, 0 },\n+  { MASK_SSE, CODE_FOR_vmmaskcmpv4sf3, \"__builtin_ia32_cmpunordss\", IX86_BUILTIN_CMPUNORDSS, UNORDERED, 0 },\n+  { MASK_SSE, CODE_FOR_vmmaskncmpv4sf3, \"__builtin_ia32_cmpneqss\", IX86_BUILTIN_CMPNEQSS, EQ, 0 },\n+  { MASK_SSE, CODE_FOR_vmmaskncmpv4sf3, \"__builtin_ia32_cmpnltss\", IX86_BUILTIN_CMPNLTSS, LT, 0 },\n+  { MASK_SSE, CODE_FOR_vmmaskncmpv4sf3, \"__builtin_ia32_cmpnless\", IX86_BUILTIN_CMPNLESS, LE, 0 },\n+  { MASK_SSE, CODE_FOR_vmmaskncmpv4sf3, \"__builtin_ia32_cmpordss\", IX86_BUILTIN_CMPORDSS, UNORDERED, 0 },\n+\n+  { MASK_SSE, CODE_FOR_sminv4sf3, \"__builtin_ia32_minps\", IX86_BUILTIN_MINPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_smaxv4sf3, \"__builtin_ia32_maxps\", IX86_BUILTIN_MAXPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_vmsminv4sf3, \"__builtin_ia32_minss\", IX86_BUILTIN_MINSS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_vmsmaxv4sf3, \"__builtin_ia32_maxss\", IX86_BUILTIN_MAXSS, 0, 0 },\n+\n+  { MASK_SSE, CODE_FOR_sse_andv4sf3, \"__builtin_ia32_andps\", IX86_BUILTIN_ANDPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sse_nandv4sf3,  \"__builtin_ia32_andnps\", IX86_BUILTIN_ANDNPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sse_iorv4sf3, \"__builtin_ia32_orps\", IX86_BUILTIN_ORPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sse_xorv4sf3,  \"__builtin_ia32_xorps\", IX86_BUILTIN_XORPS, 0, 0 },\n+\n+  { MASK_SSE, CODE_FOR_sse_movss,  \"__builtin_ia32_movss\", IX86_BUILTIN_MOVSS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sse_movhlps,  \"__builtin_ia32_movhlps\", IX86_BUILTIN_MOVHLPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sse_movlhps,  \"__builtin_ia32_movlhps\", IX86_BUILTIN_MOVLHPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sse_unpckhps, \"__builtin_ia32_unpckhps\", IX86_BUILTIN_UNPCKHPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sse_unpcklps, \"__builtin_ia32_unpcklps\", IX86_BUILTIN_UNPCKLPS, 0, 0 },\n \n   /* MMX */\n   { MASK_MMX, CODE_FOR_addv8qi3, \"__builtin_ia32_paddb\", IX86_BUILTIN_PADDB, 0, 0 },\n@@ -12874,15 +12869,15 @@ static const struct builtin_description bdesc_2arg[] =\n \n   { MASK_MMX, CODE_FOR_mulv4hi3, \"__builtin_ia32_pmullw\", IX86_BUILTIN_PMULLW, 0, 0 },\n   { MASK_MMX, CODE_FOR_smulv4hi3_highpart, \"__builtin_ia32_pmulhw\", IX86_BUILTIN_PMULHW, 0, 0 },\n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_umulv4hi3_highpart, \"__builtin_ia32_pmulhuw\", IX86_BUILTIN_PMULHUW, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_umulv4hi3_highpart, \"__builtin_ia32_pmulhuw\", IX86_BUILTIN_PMULHUW, 0, 0 },\n \n   { MASK_MMX, CODE_FOR_mmx_anddi3, \"__builtin_ia32_pand\", IX86_BUILTIN_PAND, 0, 0 },\n   { MASK_MMX, CODE_FOR_mmx_nanddi3, \"__builtin_ia32_pandn\", IX86_BUILTIN_PANDN, 0, 0 },\n   { MASK_MMX, CODE_FOR_mmx_iordi3, \"__builtin_ia32_por\", IX86_BUILTIN_POR, 0, 0 },\n   { MASK_MMX, CODE_FOR_mmx_xordi3, \"__builtin_ia32_pxor\", IX86_BUILTIN_PXOR, 0, 0 },\n \n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_mmx_uavgv8qi3, \"__builtin_ia32_pavgb\", IX86_BUILTIN_PAVGB, 0, 0 },\n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_mmx_uavgv4hi3, \"__builtin_ia32_pavgw\", IX86_BUILTIN_PAVGW, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_mmx_uavgv8qi3, \"__builtin_ia32_pavgb\", IX86_BUILTIN_PAVGB, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_mmx_uavgv4hi3, \"__builtin_ia32_pavgw\", IX86_BUILTIN_PAVGW, 0, 0 },\n \n   { MASK_MMX, CODE_FOR_eqv8qi3, \"__builtin_ia32_pcmpeqb\", IX86_BUILTIN_PCMPEQB, 0, 0 },\n   { MASK_MMX, CODE_FOR_eqv4hi3, \"__builtin_ia32_pcmpeqw\", IX86_BUILTIN_PCMPEQW, 0, 0 },\n@@ -12891,10 +12886,10 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_MMX, CODE_FOR_gtv4hi3, \"__builtin_ia32_pcmpgtw\", IX86_BUILTIN_PCMPGTW, 0, 0 },\n   { MASK_MMX, CODE_FOR_gtv2si3, \"__builtin_ia32_pcmpgtd\", IX86_BUILTIN_PCMPGTD, 0, 0 },\n \n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_umaxv8qi3, \"__builtin_ia32_pmaxub\", IX86_BUILTIN_PMAXUB, 0, 0 },\n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_smaxv4hi3, \"__builtin_ia32_pmaxsw\", IX86_BUILTIN_PMAXSW, 0, 0 },\n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_uminv8qi3, \"__builtin_ia32_pminub\", IX86_BUILTIN_PMINUB, 0, 0 },\n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_sminv4hi3, \"__builtin_ia32_pminsw\", IX86_BUILTIN_PMINSW, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_umaxv8qi3, \"__builtin_ia32_pmaxub\", IX86_BUILTIN_PMAXUB, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_smaxv4hi3, \"__builtin_ia32_pmaxsw\", IX86_BUILTIN_PMAXSW, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_uminv8qi3, \"__builtin_ia32_pminub\", IX86_BUILTIN_PMINUB, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_sminv4hi3, \"__builtin_ia32_pminsw\", IX86_BUILTIN_PMINSW, 0, 0 },\n \n   { MASK_MMX, CODE_FOR_mmx_punpckhbw, \"__builtin_ia32_punpckhbw\", IX86_BUILTIN_PUNPCKHBW, 0, 0 },\n   { MASK_MMX, CODE_FOR_mmx_punpckhwd, \"__builtin_ia32_punpckhwd\", IX86_BUILTIN_PUNPCKHWD, 0, 0 },\n@@ -12908,9 +12903,9 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_MMX, CODE_FOR_mmx_packssdw, 0, IX86_BUILTIN_PACKSSDW, 0, 0 },\n   { MASK_MMX, CODE_FOR_mmx_packuswb, 0, IX86_BUILTIN_PACKUSWB, 0, 0 },\n \n-  { MASK_SSE1, CODE_FOR_cvtpi2ps, 0, IX86_BUILTIN_CVTPI2PS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_cvtsi2ss, 0, IX86_BUILTIN_CVTSI2SS, 0, 0 },\n-  { MASK_SSE164, CODE_FOR_cvtsi2ssq, 0, IX86_BUILTIN_CVTSI642SS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_cvtpi2ps, 0, IX86_BUILTIN_CVTPI2PS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_cvtsi2ss, 0, IX86_BUILTIN_CVTSI2SS, 0, 0 },\n+  { MASK_SSE | MASK_64BIT, CODE_FOR_cvtsi2ssq, 0, IX86_BUILTIN_CVTSI642SS, 0, 0 },\n \n   { MASK_MMX, CODE_FOR_ashlv4hi3, 0, IX86_BUILTIN_PSLLW, 0, 0 },\n   { MASK_MMX, CODE_FOR_ashlv4hi3, 0, IX86_BUILTIN_PSLLWI, 0, 0 },\n@@ -12931,7 +12926,7 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_MMX, CODE_FOR_ashrv2si3, 0, IX86_BUILTIN_PSRAD, 0, 0 },\n   { MASK_MMX, CODE_FOR_ashrv2si3, 0, IX86_BUILTIN_PSRADI, 0, 0 },\n \n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_mmx_psadbw, 0, IX86_BUILTIN_PSADBW, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_mmx_psadbw, 0, IX86_BUILTIN_PSADBW, 0, 0 },\n   { MASK_MMX, CODE_FOR_mmx_pmaddwd, 0, IX86_BUILTIN_PMADDWD, 0, 0 },\n \n   /* SSE2 */\n@@ -13061,26 +13056,26 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_SSE2, CODE_FOR_sse2_pmaddwd, 0, IX86_BUILTIN_PMADDWD128, 0, 0 },\n \n   { MASK_SSE2, CODE_FOR_cvtsi2sd, 0, IX86_BUILTIN_CVTSI2SD, 0, 0 },\n-  { MASK_SSE264, CODE_FOR_cvtsi2sdq, 0, IX86_BUILTIN_CVTSI642SD, 0, 0 },\n+  { MASK_SSE2 | MASK_64BIT, CODE_FOR_cvtsi2sdq, 0, IX86_BUILTIN_CVTSI642SD, 0, 0 },\n   { MASK_SSE2, CODE_FOR_cvtsd2ss, 0, IX86_BUILTIN_CVTSD2SS, 0, 0 },\n   { MASK_SSE2, CODE_FOR_cvtss2sd, 0, IX86_BUILTIN_CVTSS2SD, 0, 0 }\n };\n \n static const struct builtin_description bdesc_1arg[] =\n {\n-  { MASK_SSE1 | MASK_3DNOW_A, CODE_FOR_mmx_pmovmskb, 0, IX86_BUILTIN_PMOVMSKB, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_sse_movmskps, 0, IX86_BUILTIN_MOVMSKPS, 0, 0 },\n+  { MASK_SSE | MASK_3DNOW_A, CODE_FOR_mmx_pmovmskb, 0, IX86_BUILTIN_PMOVMSKB, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sse_movmskps, 0, IX86_BUILTIN_MOVMSKPS, 0, 0 },\n \n-  { MASK_SSE1, CODE_FOR_sqrtv4sf2, 0, IX86_BUILTIN_SQRTPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_rsqrtv4sf2, 0, IX86_BUILTIN_RSQRTPS, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_rcpv4sf2, 0, IX86_BUILTIN_RCPPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_sqrtv4sf2, 0, IX86_BUILTIN_SQRTPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_rsqrtv4sf2, 0, IX86_BUILTIN_RSQRTPS, 0, 0 },\n+  { MASK_SSE, CODE_FOR_rcpv4sf2, 0, IX86_BUILTIN_RCPPS, 0, 0 },\n \n-  { MASK_SSE1, CODE_FOR_cvtps2pi, 0, IX86_BUILTIN_CVTPS2PI, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_cvtss2si, 0, IX86_BUILTIN_CVTSS2SI, 0, 0 },\n-  { MASK_SSE164, CODE_FOR_cvtss2siq, 0, IX86_BUILTIN_CVTSS2SI64, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_cvttps2pi, 0, IX86_BUILTIN_CVTTPS2PI, 0, 0 },\n-  { MASK_SSE1, CODE_FOR_cvttss2si, 0, IX86_BUILTIN_CVTTSS2SI, 0, 0 },\n-  { MASK_SSE164, CODE_FOR_cvttss2siq, 0, IX86_BUILTIN_CVTTSS2SI64, 0, 0 },\n+  { MASK_SSE, CODE_FOR_cvtps2pi, 0, IX86_BUILTIN_CVTPS2PI, 0, 0 },\n+  { MASK_SSE, CODE_FOR_cvtss2si, 0, IX86_BUILTIN_CVTSS2SI, 0, 0 },\n+  { MASK_SSE | MASK_64BIT, CODE_FOR_cvtss2siq, 0, IX86_BUILTIN_CVTSS2SI64, 0, 0 },\n+  { MASK_SSE, CODE_FOR_cvttps2pi, 0, IX86_BUILTIN_CVTTPS2PI, 0, 0 },\n+  { MASK_SSE, CODE_FOR_cvttss2si, 0, IX86_BUILTIN_CVTTSS2SI, 0, 0 },\n+  { MASK_SSE | MASK_64BIT, CODE_FOR_cvttss2siq, 0, IX86_BUILTIN_CVTTSS2SI64, 0, 0 },\n \n   { MASK_SSE2, CODE_FOR_sse2_pmovmskb, 0, IX86_BUILTIN_PMOVMSKB128, 0, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_movmskpd, 0, IX86_BUILTIN_MOVMSKPD, 0, 0 },\n@@ -13102,8 +13097,8 @@ static const struct builtin_description bdesc_1arg[] =\n \n   { MASK_SSE2, CODE_FOR_cvtsd2si, 0, IX86_BUILTIN_CVTSD2SI, 0, 0 },\n   { MASK_SSE2, CODE_FOR_cvttsd2si, 0, IX86_BUILTIN_CVTTSD2SI, 0, 0 },\n-  { MASK_SSE264, CODE_FOR_cvtsd2siq, 0, IX86_BUILTIN_CVTSD2SI64, 0, 0 },\n-  { MASK_SSE264, CODE_FOR_cvttsd2siq, 0, IX86_BUILTIN_CVTTSD2SI64, 0, 0 },\n+  { MASK_SSE2 | MASK_64BIT, CODE_FOR_cvtsd2siq, 0, IX86_BUILTIN_CVTSD2SI64, 0, 0 },\n+  { MASK_SSE2 | MASK_64BIT, CODE_FOR_cvttsd2siq, 0, IX86_BUILTIN_CVTTSD2SI64, 0, 0 },\n \n   { MASK_SSE2, CODE_FOR_cvtps2dq, 0, IX86_BUILTIN_CVTPS2DQ, 0, 0 },\n   { MASK_SSE2, CODE_FOR_cvtps2pd, 0, IX86_BUILTIN_CVTPS2PD, 0, 0 },\n@@ -13518,52 +13513,52 @@ ix86_init_mmx_sse_builtins ()\n   def_builtin (MASK_MMX, \"__builtin_ia32_packssdw\", v4hi_ftype_v2si_v2si, IX86_BUILTIN_PACKSSDW);\n   def_builtin (MASK_MMX, \"__builtin_ia32_packuswb\", v8qi_ftype_v4hi_v4hi, IX86_BUILTIN_PACKUSWB);\n \n-  def_builtin (MASK_SSE1, \"__builtin_ia32_ldmxcsr\", void_ftype_unsigned, IX86_BUILTIN_LDMXCSR);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_stmxcsr\", unsigned_ftype_void, IX86_BUILTIN_STMXCSR);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_cvtpi2ps\", v4sf_ftype_v4sf_v2si, IX86_BUILTIN_CVTPI2PS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_cvtps2pi\", v2si_ftype_v4sf, IX86_BUILTIN_CVTPS2PI);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_cvtsi2ss\", v4sf_ftype_v4sf_int, IX86_BUILTIN_CVTSI2SS);\n-  def_builtin (MASK_SSE164, \"__builtin_ia32_cvtsi642ss\", v4sf_ftype_v4sf_int64, IX86_BUILTIN_CVTSI642SS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_cvtss2si\", int_ftype_v4sf, IX86_BUILTIN_CVTSS2SI);\n-  def_builtin (MASK_SSE164, \"__builtin_ia32_cvtss2si64\", int64_ftype_v4sf, IX86_BUILTIN_CVTSS2SI64);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_cvttps2pi\", v2si_ftype_v4sf, IX86_BUILTIN_CVTTPS2PI);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_cvttss2si\", int_ftype_v4sf, IX86_BUILTIN_CVTTSS2SI);\n-  def_builtin (MASK_SSE164, \"__builtin_ia32_cvttss2si64\", int64_ftype_v4sf, IX86_BUILTIN_CVTTSS2SI64);\n-\n-  def_builtin (MASK_SSE1 | MASK_3DNOW_A, \"__builtin_ia32_pextrw\", int_ftype_v4hi_int, IX86_BUILTIN_PEXTRW);\n-  def_builtin (MASK_SSE1 | MASK_3DNOW_A, \"__builtin_ia32_pinsrw\", v4hi_ftype_v4hi_int_int, IX86_BUILTIN_PINSRW);\n-\n-  def_builtin (MASK_SSE1 | MASK_3DNOW_A, \"__builtin_ia32_maskmovq\", void_ftype_v8qi_v8qi_pchar, IX86_BUILTIN_MASKMOVQ);\n-\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_loadaps\", v4sf_ftype_pcfloat, IX86_BUILTIN_LOADAPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_loadups\", v4sf_ftype_pcfloat, IX86_BUILTIN_LOADUPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_loadss\", v4sf_ftype_pcfloat, IX86_BUILTIN_LOADSS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_storeaps\", void_ftype_pfloat_v4sf, IX86_BUILTIN_STOREAPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_storeups\", void_ftype_pfloat_v4sf, IX86_BUILTIN_STOREUPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_storess\", void_ftype_pfloat_v4sf, IX86_BUILTIN_STORESS);\n-\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_loadhps\", v4sf_ftype_v4sf_pv2si, IX86_BUILTIN_LOADHPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_loadlps\", v4sf_ftype_v4sf_pv2si, IX86_BUILTIN_LOADLPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_storehps\", void_ftype_pv2si_v4sf, IX86_BUILTIN_STOREHPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_storelps\", void_ftype_pv2si_v4sf, IX86_BUILTIN_STORELPS);\n-\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_movmskps\", int_ftype_v4sf, IX86_BUILTIN_MOVMSKPS);\n-  def_builtin (MASK_SSE1 | MASK_3DNOW_A, \"__builtin_ia32_pmovmskb\", int_ftype_v8qi, IX86_BUILTIN_PMOVMSKB);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_movntps\", void_ftype_pfloat_v4sf, IX86_BUILTIN_MOVNTPS);\n-  def_builtin (MASK_SSE1 | MASK_3DNOW_A, \"__builtin_ia32_movntq\", void_ftype_pdi_di, IX86_BUILTIN_MOVNTQ);\n-\n-  def_builtin (MASK_SSE1 | MASK_3DNOW_A, \"__builtin_ia32_sfence\", void_ftype_void, IX86_BUILTIN_SFENCE);\n-\n-  def_builtin (MASK_SSE1 | MASK_3DNOW_A, \"__builtin_ia32_psadbw\", di_ftype_v8qi_v8qi, IX86_BUILTIN_PSADBW);\n-\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_rcpps\", v4sf_ftype_v4sf, IX86_BUILTIN_RCPPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_rcpss\", v4sf_ftype_v4sf, IX86_BUILTIN_RCPSS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_rsqrtps\", v4sf_ftype_v4sf, IX86_BUILTIN_RSQRTPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_rsqrtss\", v4sf_ftype_v4sf, IX86_BUILTIN_RSQRTSS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_sqrtps\", v4sf_ftype_v4sf, IX86_BUILTIN_SQRTPS);\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_sqrtss\", v4sf_ftype_v4sf, IX86_BUILTIN_SQRTSS);\n-\n-  def_builtin (MASK_SSE1, \"__builtin_ia32_shufps\", v4sf_ftype_v4sf_v4sf_int, IX86_BUILTIN_SHUFPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_ldmxcsr\", void_ftype_unsigned, IX86_BUILTIN_LDMXCSR);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_stmxcsr\", unsigned_ftype_void, IX86_BUILTIN_STMXCSR);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_cvtpi2ps\", v4sf_ftype_v4sf_v2si, IX86_BUILTIN_CVTPI2PS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_cvtps2pi\", v2si_ftype_v4sf, IX86_BUILTIN_CVTPS2PI);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_cvtsi2ss\", v4sf_ftype_v4sf_int, IX86_BUILTIN_CVTSI2SS);\n+  def_builtin (MASK_SSE | MASK_64BIT, \"__builtin_ia32_cvtsi642ss\", v4sf_ftype_v4sf_int64, IX86_BUILTIN_CVTSI642SS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_cvtss2si\", int_ftype_v4sf, IX86_BUILTIN_CVTSS2SI);\n+  def_builtin (MASK_SSE | MASK_64BIT, \"__builtin_ia32_cvtss2si64\", int64_ftype_v4sf, IX86_BUILTIN_CVTSS2SI64);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_cvttps2pi\", v2si_ftype_v4sf, IX86_BUILTIN_CVTTPS2PI);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_cvttss2si\", int_ftype_v4sf, IX86_BUILTIN_CVTTSS2SI);\n+  def_builtin (MASK_SSE | MASK_64BIT, \"__builtin_ia32_cvttss2si64\", int64_ftype_v4sf, IX86_BUILTIN_CVTTSS2SI64);\n+\n+  def_builtin (MASK_SSE | MASK_3DNOW_A, \"__builtin_ia32_pextrw\", int_ftype_v4hi_int, IX86_BUILTIN_PEXTRW);\n+  def_builtin (MASK_SSE | MASK_3DNOW_A, \"__builtin_ia32_pinsrw\", v4hi_ftype_v4hi_int_int, IX86_BUILTIN_PINSRW);\n+\n+  def_builtin (MASK_SSE | MASK_3DNOW_A, \"__builtin_ia32_maskmovq\", void_ftype_v8qi_v8qi_pchar, IX86_BUILTIN_MASKMOVQ);\n+\n+  def_builtin (MASK_SSE, \"__builtin_ia32_loadaps\", v4sf_ftype_pcfloat, IX86_BUILTIN_LOADAPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_loadups\", v4sf_ftype_pcfloat, IX86_BUILTIN_LOADUPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_loadss\", v4sf_ftype_pcfloat, IX86_BUILTIN_LOADSS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_storeaps\", void_ftype_pfloat_v4sf, IX86_BUILTIN_STOREAPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_storeups\", void_ftype_pfloat_v4sf, IX86_BUILTIN_STOREUPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_storess\", void_ftype_pfloat_v4sf, IX86_BUILTIN_STORESS);\n+\n+  def_builtin (MASK_SSE, \"__builtin_ia32_loadhps\", v4sf_ftype_v4sf_pv2si, IX86_BUILTIN_LOADHPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_loadlps\", v4sf_ftype_v4sf_pv2si, IX86_BUILTIN_LOADLPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_storehps\", void_ftype_pv2si_v4sf, IX86_BUILTIN_STOREHPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_storelps\", void_ftype_pv2si_v4sf, IX86_BUILTIN_STORELPS);\n+\n+  def_builtin (MASK_SSE, \"__builtin_ia32_movmskps\", int_ftype_v4sf, IX86_BUILTIN_MOVMSKPS);\n+  def_builtin (MASK_SSE | MASK_3DNOW_A, \"__builtin_ia32_pmovmskb\", int_ftype_v8qi, IX86_BUILTIN_PMOVMSKB);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_movntps\", void_ftype_pfloat_v4sf, IX86_BUILTIN_MOVNTPS);\n+  def_builtin (MASK_SSE | MASK_3DNOW_A, \"__builtin_ia32_movntq\", void_ftype_pdi_di, IX86_BUILTIN_MOVNTQ);\n+\n+  def_builtin (MASK_SSE | MASK_3DNOW_A, \"__builtin_ia32_sfence\", void_ftype_void, IX86_BUILTIN_SFENCE);\n+\n+  def_builtin (MASK_SSE | MASK_3DNOW_A, \"__builtin_ia32_psadbw\", di_ftype_v8qi_v8qi, IX86_BUILTIN_PSADBW);\n+\n+  def_builtin (MASK_SSE, \"__builtin_ia32_rcpps\", v4sf_ftype_v4sf, IX86_BUILTIN_RCPPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_rcpss\", v4sf_ftype_v4sf, IX86_BUILTIN_RCPSS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_rsqrtps\", v4sf_ftype_v4sf, IX86_BUILTIN_RSQRTPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_rsqrtss\", v4sf_ftype_v4sf, IX86_BUILTIN_RSQRTSS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_sqrtps\", v4sf_ftype_v4sf, IX86_BUILTIN_SQRTPS);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_sqrtss\", v4sf_ftype_v4sf, IX86_BUILTIN_SQRTSS);\n+\n+  def_builtin (MASK_SSE, \"__builtin_ia32_shufps\", v4sf_ftype_v4sf_v4sf_int, IX86_BUILTIN_SHUFPS);\n \n   /* Original 3DNow!  */\n   def_builtin (MASK_3DNOW, \"__builtin_ia32_femms\", void_ftype_void, IX86_BUILTIN_FEMMS);\n@@ -13595,7 +13590,7 @@ ix86_init_mmx_sse_builtins ()\n   def_builtin (MASK_3DNOW_A, \"__builtin_ia32_pswapdsf\", v2sf_ftype_v2sf, IX86_BUILTIN_PSWAPDSF);\n   def_builtin (MASK_3DNOW_A, \"__builtin_ia32_pswapdsi\", v2si_ftype_v2si, IX86_BUILTIN_PSWAPDSI);\n \n-  def_builtin (MASK_SSE1, \"__builtin_ia32_setzerops\", v4sf_ftype_void, IX86_BUILTIN_SSE_ZERO);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_setzerops\", v4sf_ftype_void, IX86_BUILTIN_SSE_ZERO);\n \n   /* SSE2 */\n   def_builtin (MASK_SSE2, \"__builtin_ia32_pextrw128\", int_ftype_v8hi_int, IX86_BUILTIN_PEXTRW128);\n@@ -13646,15 +13641,15 @@ ix86_init_mmx_sse_builtins ()\n \n   def_builtin (MASK_SSE2, \"__builtin_ia32_cvtsd2si\", int_ftype_v2df, IX86_BUILTIN_CVTSD2SI);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_cvttsd2si\", int_ftype_v2df, IX86_BUILTIN_CVTTSD2SI);\n-  def_builtin (MASK_SSE264, \"__builtin_ia32_cvtsd2si64\", int64_ftype_v2df, IX86_BUILTIN_CVTSD2SI64);\n-  def_builtin (MASK_SSE264, \"__builtin_ia32_cvttsd2si64\", int64_ftype_v2df, IX86_BUILTIN_CVTTSD2SI64);\n+  def_builtin (MASK_SSE2 | MASK_64BIT, \"__builtin_ia32_cvtsd2si64\", int64_ftype_v2df, IX86_BUILTIN_CVTSD2SI64);\n+  def_builtin (MASK_SSE2 | MASK_64BIT, \"__builtin_ia32_cvttsd2si64\", int64_ftype_v2df, IX86_BUILTIN_CVTTSD2SI64);\n \n   def_builtin (MASK_SSE2, \"__builtin_ia32_cvtps2dq\", v4si_ftype_v4sf, IX86_BUILTIN_CVTPS2DQ);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_cvtps2pd\", v2df_ftype_v4sf, IX86_BUILTIN_CVTPS2PD);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_cvttps2dq\", v4si_ftype_v4sf, IX86_BUILTIN_CVTTPS2DQ);\n \n   def_builtin (MASK_SSE2, \"__builtin_ia32_cvtsi2sd\", v2df_ftype_v2df_int, IX86_BUILTIN_CVTSI2SD);\n-  def_builtin (MASK_SSE264, \"__builtin_ia32_cvtsi642sd\", v2df_ftype_v2df_int64, IX86_BUILTIN_CVTSI642SD);\n+  def_builtin (MASK_SSE2 | MASK_64BIT, \"__builtin_ia32_cvtsi642sd\", v2df_ftype_v2df_int64, IX86_BUILTIN_CVTSI642SD);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_cvtsd2ss\", v4sf_ftype_v4sf_v2df, IX86_BUILTIN_CVTSD2SS);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_cvtss2sd\", v2df_ftype_v2df_v4sf, IX86_BUILTIN_CVTSS2SD);\n \n@@ -13678,7 +13673,7 @@ ix86_init_mmx_sse_builtins ()\n   def_builtin (MASK_SSE2, \"__builtin_ia32_stored\", void_ftype_pcint_v4si, IX86_BUILTIN_STORED);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_movq\", v2di_ftype_v2di, IX86_BUILTIN_MOVQ);\n \n-  def_builtin (MASK_SSE1, \"__builtin_ia32_setzero128\", v2di_ftype_void, IX86_BUILTIN_CLRTI);\n+  def_builtin (MASK_SSE, \"__builtin_ia32_setzero128\", v2di_ftype_void, IX86_BUILTIN_CLRTI);\n \n   def_builtin (MASK_SSE2, \"__builtin_ia32_psllw128\", v8hi_ftype_v8hi_v2di, IX86_BUILTIN_PSLLW128);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_pslld128\", v4si_ftype_v4si_v2di, IX86_BUILTIN_PSLLD128);"}, {"sha": "25b9acfe07b2685e55836630d5636418ab5627a1", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f2200463a45c51ccb631f74439475b135907cf/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f2200463a45c51ccb631f74439475b135907cf/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=37f2200463a45c51ccb631f74439475b135907cf", "patch": "@@ -300,7 +300,7 @@ extern int x86_prefetch_sse;\n \n #define ASSEMBLER_DIALECT (ix86_asm_dialect)\n \n-#define TARGET_SSE ((target_flags & (MASK_SSE | MASK_SSE2)) != 0)\n+#define TARGET_SSE ((target_flags & MASK_SSE) != 0)\n #define TARGET_SSE2 ((target_flags & MASK_SSE2) != 0)\n #define TARGET_SSE_MATH ((ix86_fpmath & FPMATH_SSE) != 0)\n #define TARGET_MIX_SSE_I387 ((ix86_fpmath & FPMATH_SSE) \\\n@@ -393,7 +393,7 @@ extern int x86_prefetch_sse;\n     N_(\"Support MMX and SSE built-in functions and code generation\") },\t      \\\n   { \"no-sse\",\t\t\t -MASK_SSE,\t\t\t\t      \\\n     N_(\"Do not support MMX and SSE built-in functions and code generation\") },\\\n-  { \"sse2\",\t\t\t MASK_SSE2,\t\t\t\t      \\\n+  { \"sse2\",\t\t\t (MASK_SSE2|MASK_SSE),\t\t\t      \\\n     N_(\"Support MMX, SSE and SSE2 built-in functions and code generation\") }, \\\n   { \"no-sse2\",\t\t\t -MASK_SSE2,\t\t\t\t      \\\n     N_(\"Do not support MMX, SSE and SSE2 built-in functions and code generation\") },    \\"}]}