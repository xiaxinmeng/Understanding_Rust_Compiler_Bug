{"sha": "58ddc179d494fd426aca184a1a5749d9fa6f81b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThkZGMxNzlkNDk0ZmQ0MjZhY2ExODRhMWE1NzQ5ZDlmYTZmODFiOQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2008-10-22T18:19:29Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2008-10-22T18:19:29Z"}, "message": "Import GNU Classpath (libgcj-import-20081021).\n\n2008-10-22  Matthias Klose  <doko@ubuntu.com>\n\n        Import GNU Classpath (libgcj-import-20081021).\n\n        * Regenerate class and header files.\n        * Regenerate auto* files.\n\nFrom-SVN: r141302", "tree": {"sha": "577596282d00bf61e1bf433dc5d7aa0a417f5c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/577596282d00bf61e1bf433dc5d7aa0a417f5c5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58ddc179d494fd426aca184a1a5749d9fa6f81b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ddc179d494fd426aca184a1a5749d9fa6f81b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58ddc179d494fd426aca184a1a5749d9fa6f81b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ddc179d494fd426aca184a1a5749d9fa6f81b9/comments", "author": null, "committer": null, "parents": [{"sha": "51c869cac9a2b641ee21172ea193eadef9b1f476", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c869cac9a2b641ee21172ea193eadef9b1f476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c869cac9a2b641ee21172ea193eadef9b1f476"}], "stats": {"total": 792, "additions": 242, "deletions": 550}, "files": [{"sha": "7377e625c5cdebcc8334561f13fb750c1e244385", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -1,3 +1,10 @@\n+2008-10-22  Matthias Klose  <doko@ubuntu.com>\n+\n+\tImport GNU Classpath (libgcj-import-20081021).\n+\n+\t* Regenerate class and header files.\n+\t* Regenerate auto* files.\n+\n 2008-10-21  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n \t* sources.am, Makfile.in: Regenerate."}, {"sha": "3f561a669184a82f2cbfc99a64c23c44b736cdce", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 80, "deletions": 11, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -5,6 +5,23 @@\n \t* tools/Makefile.am:\n \tUse gjdoc_gendir when calling antlr.\n \n+2008-10-17  Robert Lougher  <rob.lougher@gmail.com>\n+\n+\t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_CairoGraphics2D.c\n+\t(Java_gnu_java_awt_peer_gtk_CairoGraphics2D_cairoDrawGlyphVector):\n+\tRelease 'fonts'.\n+\n+2008-10-16  Tom Tromey  <tromey@redhat.com>\n+\n+\t* tools/gnu/classpath/tools/jar/WorkSet.java (initSet): Use\n+\tforeach.  Change argument type.\n+\t(WorkSet): Change argument type.\n+\t* tools/gnu/classpath/tools/jar/Indexer.java (indexJarFile): Use\n+\tforeach.\n+\t* tools/gnu/classpath/tools/jar/Creator.java\n+\t(writeCommandLineEntries): Use foreach.\n+\t(getAllEntries): Likewise.\n+\n 2008-10-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n \t* configure.ac:\n@@ -18,7 +35,7 @@\n \tOnly build GJDoc parser when both\n \tCREATE_GJDOC and CREATE_GJDOC_PARSER\n \tare on.\n-\t\n+\n 2008-10-02  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n \t* configure.ac:\n@@ -32,15 +49,72 @@\n \t* tools/Makefile.am:\n \tSupport CREATE_GJDOC_PARSER option.\n \n+2008-09-29  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/ac_prog_antlr.m4:\n+\tCheck for antlr binary as well.\n+\t\n+2008-09-28  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* configure.ac:\n+\tAlways check for JAVA prior to ANTLR check.\n+\t* java/lang/ThreadLocal.java,\n+\t* java/lang/ThreadLocalMap.java:\n+\tRename notFound back to sentinel to avoid\n+\tpotential issues with use of the old name.\n+\tCleanup formatting.\n+\t* java/nio/Buffer.java,\n+\t* java/nio/ByteBuffer.java,\n+\t* java/nio/ByteBufferImpl.java,\n+\t* java/nio/CharBuffer.java,\n+\t* java/nio/CharViewBufferImpl.java,\n+\t* java/nio/DirectByteBufferImpl.java,\n+\t* java/nio/DoubleBuffer.java,\n+\t* java/nio/DoubleBufferImpl.java,\n+\t* java/nio/FloatBuffer.java,\n+\t* java/nio/FloatBufferImpl.java,\n+\t* java/nio/IntBuffer.java,\n+\t* java/nio/LongBuffer.java,\n+\t* java/nio/LongBufferImpl.java,\n+\t* java/nio/MappedByteBuffer.java,\n+\t* java/nio/ShortBuffer.java,\n+\t* java/nio/ShortBufferImpl.java,\n+\t* java/nio/ShortViewBufferImpl.java:\n+\tCleanup formatting.\n+\n+2008-09-16  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* java/lang/System.java (getenv): Reinstate\n+\tuse of EnvironmentMap as opposed to raw\n+\tHashMap.\n+\n+2008-09-16  Mario Torre  <neugens@aicas.com>\n+\n+\t* java/lang/System.java (getenv): Fix env entries of the form\n+\tkey=value=value=value not parsed correctly. \n+\t\n+2008-09-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\tReported by: Matthias Klose\n+\t* tools/Makefile.am:\n+\tSimplify the addition of the ANTLR\n+\tJAR file to the classpath.\n+\t\n+2008-09-14  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/ac_prog_antlr.m4:\n+\tAllow use of runantlr on systems\n+\twhich have it (Debian/Ubuntu).\n+\t\n 2008-09-14  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n \t* examples/Makefile.am:\n-        Check lib directly as well as glibj.zip\n-        for boot classes.\n+\tCheck lib directly as well as glibj.zip\n+\tfor boot classes.\n \t* m4/acinclude.m4:\n-        Only require the class files to be built\n-        to allow the tools and examples to be built,\n-        not the installation of glibj.zip.\n+\tOnly require the class files to be built\n+\tto allow the tools and examples to be built,\n+\tnot the installation of glibj.zip.\n \t* tools/Makefile.am:\n \tCheck lib directly as well as glibj.zip\n \tfor boot classes.\n@@ -435,7 +509,6 @@\n \n \t* m4/acinclude.m4 (CLASSPATH_COND_IF): New macro.\n \t* configure.ac: Use it.\n-\t* configure: Regenerate.\n \t* tools/Makefile.am (!CREATE_WRAPPERS): Update comment.\n \n 2008-07-12  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n@@ -1578,10 +1651,6 @@\n \t* javax/management/StandardMBean.java:\n \tFix warnings due to use of generics.\n \t\n-2008-06-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n-\n-\t* native/fdlibm/dtoa.c: include stdlib.h, for 'free'.\n-\n 2008-06-16  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n \t* javax/management/openmbean/ArrayType.java,"}, {"sha": "fbd88cdc2784999c6c1cddf712e936138a391259", "filename": "libjava/classpath/configure", "status": "modified", "additions": 5, "deletions": 399, "changes": 404, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -28984,7 +28984,7 @@ fi\n \n \n if test \"x${TOOLSDIR}\" != x; then\n-  if test \"x${COMPILE_WRAPPERS}\" = xno && test \"x${enable_java_maintainer_mode}\" = xyes; then\n+    if test \"x${COMPILE_WRAPPERS}\" = xno && test \"x${enable_java_maintainer_mode}\" = xyes; then\n \n \n if test \"x$JAVAPREFIX\" = x; then\n@@ -29372,7 +29372,7 @@ echo \"${ECHO_T}$ac_cv_prog_java_works\" >&6\n \n \n   fi\n-  if test \"x${COMPILE_GJDOC}\" = xyes; then\n+    if test \"x${COMPILE_GJDOC}\" = xyes; then\n \n   echo \"$as_me:$LINENO: checking for the ANTLR parser generator JAR file\" >&5\n echo $ECHO_N \"checking for the ANTLR parser generator JAR file... $ECHO_C\" >&6\n@@ -29393,393 +29393,7 @@ echo \"$as_me: error: specified ANTLR jar file $ANTLR_JAR not found.\" >&2;}\n echo \"${ECHO_T}$ANTLR_JAR\" >&6\n \n \n-    if test \"x${REGENERATE_GJDOC_PARSER}\" = xyes; then\n-      if test \"x${enable_java_maintainer_mode}\" = xyes; then\n-\n-if test \"x$JAVAPREFIX\" = x; then\n-        test \"x$JAVA\" = x && for ac_prog in cacao$EXEEXT jamvm$EXEEXT kaffe$EXEEXT gij$EXEEXT java$EXEEXT\n-do\n-  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n-set dummy $ac_prog; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_JAVA+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test -n \"$JAVA\"; then\n-  ac_cv_prog_JAVA=\"$JAVA\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_JAVA=\"$ac_prog\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-fi\n-fi\n-JAVA=$ac_cv_prog_JAVA\n-if test -n \"$JAVA\"; then\n-  echo \"$as_me:$LINENO: result: $JAVA\" >&5\n-echo \"${ECHO_T}$JAVA\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  test -n \"$JAVA\" && break\n-done\n-\n-else\n-        test \"x$JAVA\" = x && for ac_prog in cacao$EXEEXT jamvm$EXEEXT kaffe$EXEEXT gij$EXEEXT java$EXEEXT\n-do\n-  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n-set dummy $ac_prog; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_JAVA+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test -n \"$JAVA\"; then\n-  ac_cv_prog_JAVA=\"$JAVA\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_JAVA=\"$ac_prog\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-fi\n-fi\n-JAVA=$ac_cv_prog_JAVA\n-if test -n \"$JAVA\"; then\n-  echo \"$as_me:$LINENO: result: $JAVA\" >&5\n-echo \"${ECHO_T}$JAVA\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  test -n \"$JAVA\" && break\n-done\n-test -n \"$JAVA\" || JAVA=\"$JAVAPREFIX\"\n-\n-fi\n-test \"x$JAVA\" = x && { { echo \"$as_me:$LINENO: error: no acceptable Java virtual machine found in \\$PATH\" >&5\n-echo \"$as_me: error: no acceptable Java virtual machine found in \\$PATH\" >&2;}\n-   { (exit 1); exit 1; }; }\n-\n-# Extract the first word of \"uudecode$EXEEXT\", so it can be a program name with args.\n-set dummy uudecode$EXEEXT; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_uudecode+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test -n \"$uudecode\"; then\n-  ac_cv_prog_uudecode=\"$uudecode\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_uudecode=\"yes\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-fi\n-fi\n-uudecode=$ac_cv_prog_uudecode\n-if test -n \"$uudecode\"; then\n-  echo \"$as_me:$LINENO: result: $uudecode\" >&5\n-echo \"${ECHO_T}$uudecode\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-if test x$uudecode = xyes; then\n-echo \"$as_me:$LINENO: checking if uudecode can decode base 64 file\" >&5\n-echo $ECHO_N \"checking if uudecode can decode base 64 file... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_uudecode_base64+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-\n-cat << \\EOF > Test.uue\n-begin-base64 644 Test.class\n-yv66vgADAC0AFQcAAgEABFRlc3QHAAQBABBqYXZhL2xhbmcvT2JqZWN0AQAE\n-bWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARDb2RlAQAPTGluZU51\n-bWJlclRhYmxlDAAKAAsBAARleGl0AQAEKEkpVgoADQAJBwAOAQAQamF2YS9s\n-YW5nL1N5c3RlbQEABjxpbml0PgEAAygpVgwADwAQCgADABEBAApTb3VyY2VG\n-aWxlAQAJVGVzdC5qYXZhACEAAQADAAAAAAACAAkABQAGAAEABwAAACEAAQAB\n-AAAABQO4AAyxAAAAAQAIAAAACgACAAAACgAEAAsAAQAPABAAAQAHAAAAIQAB\n-AAEAAAAFKrcAErEAAAABAAgAAAAKAAIAAAAEAAQABAABABMAAAACABQ=\n-====\n-EOF\n-if uudecode$EXEEXT Test.uue; then\n-        ac_cv_prog_uudecode_base64=yes\n-else\n-        echo \"configure: 29543: uudecode had trouble decoding base 64 file 'Test.uue'\" >&5\n-        echo \"configure: failed file was:\" >&5\n-        cat Test.uue >&5\n-        ac_cv_prog_uudecode_base64=no\n-fi\n-rm -f Test.uue\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_prog_uudecode_base64\" >&5\n-echo \"${ECHO_T}$ac_cv_prog_uudecode_base64\" >&6\n-fi\n-if test x$ac_cv_prog_uudecode_base64 != xyes; then\n-        rm -f Test.class\n-        { echo \"$as_me:$LINENO: WARNING: I have to compile Test.class from scratch\" >&5\n-echo \"$as_me: WARNING: I have to compile Test.class from scratch\" >&2;}\n-        if test x$ac_cv_prog_javac_works = xno; then\n-                { { echo \"$as_me:$LINENO: error: Cannot compile java source. $JAVAC does not work properly\" >&5\n-echo \"$as_me: error: Cannot compile java source. $JAVAC does not work properly\" >&2;}\n-   { (exit 1); exit 1; }; }\n-        fi\n-        if test x$ac_cv_prog_javac_works = x; then\n-\n-ECJ_OPTS=\"-warn:-deprecation,serial,unusedImport\"\n-JAVAC_OPTS=\"-Xlint:unchecked,cast,divzero,empty,finally,overrides\"\n-GCJ_OPTS=\"-g\"\n-if test \"x$JAVAPREFIX\" = x; then\n-        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT $ECJ_OPTS\" \"ecj-3.3$EXEEXT $ECJ_OPTS\" \"ecj-3.2$EXEEXT $ECJ_OPTS\" \"javac$EXEEXT $JAVAC_OPTS\" \"gcj$EXEEXT -C\"\n-do\n-  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n-set dummy $ac_prog; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_JAVAC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test -n \"$JAVAC\"; then\n-  ac_cv_prog_JAVAC=\"$JAVAC\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_JAVAC=\"$ac_prog\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-fi\n-fi\n-JAVAC=$ac_cv_prog_JAVAC\n-if test -n \"$JAVAC\"; then\n-  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n-echo \"${ECHO_T}$JAVAC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  test -n \"$JAVAC\" && break\n-done\n-\n-else\n-        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT $ECJ_OPTS\" \"ecj-3.3$EXEEXT $ECJ_OPTS\" \"ecj-3.2$EXEEXT $ECJ_OPTS\" \"javac$EXEEXT $JAVAC_OPTS\" \"gcj$EXEEXT -C\"\n-do\n-  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n-set dummy $ac_prog; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_JAVAC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test -n \"$JAVAC\"; then\n-  ac_cv_prog_JAVAC=\"$JAVAC\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_JAVAC=\"$ac_prog\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-fi\n-fi\n-JAVAC=$ac_cv_prog_JAVAC\n-if test -n \"$JAVAC\"; then\n-  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n-echo \"${ECHO_T}$JAVAC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  test -n \"$JAVAC\" && break\n-done\n-test -n \"$JAVAC\" || JAVAC=\"$JAVAPREFIX\"\n-\n-fi\n-test \"x$JAVAC\" = x && { { echo \"$as_me:$LINENO: error: no acceptable Java compiler found in \\$PATH\" >&5\n-echo \"$as_me: error: no acceptable Java compiler found in \\$PATH\" >&2;}\n-   { (exit 1); exit 1; }; }\n-echo \"$as_me:$LINENO: checking if $JAVAC is a version of gcj\" >&5\n-echo $ECHO_N \"checking if $JAVAC is a version of gcj... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_javac_is_gcj+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-\n-if $JAVAC --version | grep gcj > /dev/null; then\n-  ac_cv_prog_javac_is_gcj=yes;\n-  JAVAC=\"$JAVAC $GCJ_OPTS\";\n-fi\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_prog_javac_is_gcj\" >&5\n-echo \"${ECHO_T}$ac_cv_prog_javac_is_gcj\" >&6\n-JAVAC_IS_GCJ=$ac_cv_prog_javac_is_gcj\n-\n-\n-\n-if test x\"${JAVAC_IS_GCJ}\" = xyes; then\n-  GCJ_JAVAC_TRUE=\n-  GCJ_JAVAC_FALSE='#'\n-else\n-  GCJ_JAVAC_TRUE='#'\n-  GCJ_JAVAC_FALSE=\n-fi\n-\n-if test \"$enable_java_maintainer_mode\" = yes; then\n-\n-echo \"$as_me:$LINENO: checking if $JAVAC works\" >&5\n-echo $ECHO_N \"checking if $JAVAC works... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_javac_works+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-\n-JAVA_TEST=Object.java\n-CLASS_TEST=Object.class\n-cat << \\EOF > $JAVA_TEST\n-/* #line 29690 \"configure\" */\n-package java.lang;\n-\n-public class Object\n-{\n-  static <T> void doStuff()\n-  {\n-  }\n-}\n-EOF\n-if test x$JAVAC_IS_GCJ = xyes; then\n-  CMD=\"$JAVAC $JAVACFLAGS -fsource=1.5 -ftarget=1.5 $JAVA_TEST\"\n-else\n-  CMD=\"$JAVAC $JAVACFLAGS -source 1.5 -target 1.5 $JAVA_TEST\"\n-fi\n-if { ac_try='$CMD'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } >/dev/null 2>&1; then\n-  ac_cv_prog_javac_works=yes\n-else\n-  { { echo \"$as_me:$LINENO: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&5\n-echo \"$as_me: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&2;}\n-   { (exit 1); exit 1; }; }\n-  echo \"configure: failed program was:\" >&5\n-  cat $JAVA_TEST >&5\n-fi\n-rm -f $JAVA_TEST $CLASS_TEST\n-\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_prog_javac_works\" >&5\n-echo \"${ECHO_T}$ac_cv_prog_javac_works\" >&6\n-\n-fi\n-\n-        fi\n-fi\n-echo \"$as_me:$LINENO: checking if $JAVA works\" >&5\n-echo $ECHO_N \"checking if $JAVA works... $ECHO_C\" >&6\n-if test \"${ac_cv_prog_java_works+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-\n-JAVA_TEST=Test.java\n-CLASS_TEST=Test.class\n-TEST=Test\n-cat << \\EOF > $JAVA_TEST\n-/* [#]line 29739 \"configure\" */\n-public class Test {\n-public static void main (String args[]) {\n-        System.exit (0);\n-} }\n-EOF\n-if test x$ac_cv_prog_uudecode_base64 != xyes; then\n-        if { ac_try='$JAVAC $JAVACFLAGS $JAVA_TEST'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } && test -s $CLASS_TEST; then\n-                :\n-        else\n-          echo \"configure: failed program was:\" >&5\n-          cat $JAVA_TEST >&5\n-          { { echo \"$as_me:$LINENO: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&5\n-echo \"$as_me: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&2;}\n-   { (exit 1); exit 1; }; }\n-        fi\n-fi\n-if { ac_try='CLASSPATH=.:$CLASSPATH $JAVA $JAVAFLAGS $TEST'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } >/dev/null 2>&1; then\n-  ac_cv_prog_java_works=yes\n-else\n-  echo \"configure: failed program was:\" >&5\n-  cat $JAVA_TEST >&5\n-  { { echo \"$as_me:$LINENO: error: The Java VM $JAVA failed (see config.log, check the CLASSPATH?)\" >&5\n-echo \"$as_me: error: The Java VM $JAVA failed (see config.log, check the CLASSPATH?)\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-rm -fr $JAVA_TEST $CLASS_TEST Test.uue\n-\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_prog_java_works\" >&5\n-echo \"${ECHO_T}$ac_cv_prog_java_works\" >&6\n-\n-\n-\n+        if test \"x${REGENERATE_GJDOC_PARSER}\" = xyes && test \"x${enable_java_maintainer_mode}\" = xyes; then\n \n     if test -n \"$ac_tool_prefix\"; then\n   for ac_prog in cantlr runantlr antlr\n@@ -29895,7 +29509,6 @@ echo $ECHO_N \"checking for antlr 2.7.1 or better... $ECHO_C\" >&6\n   echo \"$as_me:$LINENO: result: $antlr_version_major.$antlr_version_minor.$antlr_version_micro\" >&5\n echo \"${ECHO_T}$antlr_version_major.$antlr_version_minor.$antlr_version_micro\" >&6\n \n-      fi\n     fi\n   fi\n fi\n@@ -30034,7 +29647,7 @@ else\n JAVA_TEST=Object.java\n CLASS_TEST=Object.class\n cat << \\EOF > $JAVA_TEST\n-/* #line 30037 \"configure\" */\n+/* #line 29650 \"configure\" */\n package java.lang;\n \n public class Object\n@@ -30075,7 +29688,7 @@ fi\n   JAVA_TEST=Test.java\n   CLASS_TEST=Test.class\n   cat << \\EOF > $JAVA_TEST\n-  /* #line 30078 \"configure\" */\n+  /* #line 29691 \"configure\" */\n   public class Test\n   {\n     public static void main(String args)\n@@ -30820,13 +30433,6 @@ echo \"$as_me: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n-if test -z \"${GCJ_JAVAC_TRUE}\" && test -z \"${GCJ_JAVAC_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n if test -z \"${USE_ESCHER_TRUE}\" && test -z \"${USE_ESCHER_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"USE_ESCHER\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5"}, {"sha": "9ff6e03e22fc6f67ba35458dffc236097d902c40", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -1015,18 +1015,17 @@ AM_CONDITIONAL(USE_PREBUILT_GLIBJ_ZIP, test x$use_glibj_zip = xtrue)\n AC_SUBST(PATH_TO_GLIBJ_ZIP)\n \n if test \"x${TOOLSDIR}\" != x; then\n+  dnl GCJ LOCAL\n   if test \"x${COMPILE_WRAPPERS}\" = xno && test \"x${enable_java_maintainer_mode}\" = xyes; then\n     AC_PROG_JAVA\n   fi\n+  dnl END GCJ LOCAL\n   if test \"x${COMPILE_GJDOC}\" = xyes; then\n     AC_LIB_ANTLR\n-    if test \"x${REGENERATE_GJDOC_PARSER}\" = xyes; then\n-dnl GCJ LOCAL\n-      if test \"x${enable_java_maintainer_mode}\" = xyes; then\n-        AC_PROG_JAVA\n+    dnl GCJ LOCAL\n+    if test \"x${REGENERATE_GJDOC_PARSER}\" = xyes && test \"x${enable_java_maintainer_mode}\" = xyes; then\n+    dnl END GCJ LOCAL\n \tAC_PROG_ANTLR(2,7,1)\n-      fi\n-dnl END GCJ LOCAL\n     fi\n   fi\n fi"}, {"sha": "58b1bbad3d1563aef6fec3c1e904a603218ddfcf", "filename": "libjava/classpath/java/lang/System.java", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Flang%2FSystem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Flang%2FSystem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FSystem.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -546,20 +546,28 @@ public static Map<String, String> getenv()\n     SecurityManager sm = SecurityManager.current; // Be thread-safe.\n     if (sm != null)\n       sm.checkPermission(new RuntimePermission(\"getenv.*\"));\n+\n     if (environmentMap == null)\n       {\n-\tList<String> environ = (List<String>)VMSystem.environ();\n \tMap<String,String> variables = new EnvironmentMap();\n-\tfor (String pair : environ)\n-\t  {\n-\t    String[] parts = pair.split(\"=\");\n-\t    if (parts.length == 2)\n-\t      variables.put(parts[0], parts[1]);\n-\t    else\n-\t      variables.put(parts[0], \"\");\n-\t  }\n-\tenvironmentMap = Collections.unmodifiableMap(variables);\n+        List<String> environ = (List<String>)VMSystem.environ();\n+        for (String envEntry : environ)\n+          {\n+            // avoid broken and null entries\n+            if (envEntry != null && !envEntry.endsWith(\"=\"))\n+              {\n+                // it's perfectly legal that some entries may be in the form\n+                // key=value=value=value\n+                int equalSignIndex = envEntry.indexOf('=');            \n+                String key = envEntry.substring(0, equalSignIndex);\n+                String value = envEntry.substring(equalSignIndex + 1);\n+                variables.put(key, value);\n+              }\n+          }\n+        \n+        environmentMap = Collections.unmodifiableMap(variables);\n       }\n+    \n     return environmentMap;\n   }\n "}, {"sha": "1f60a55539ba13e25265a86ae39208e0efad6422", "filename": "libjava/classpath/java/lang/ThreadLocal.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Flang%2FThreadLocal.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Flang%2FThreadLocal.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FThreadLocal.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -90,7 +90,7 @@\n    * user. Do not expose this to the public. Package visible for use by\n    * InheritableThreadLocal\n    */\n-  static final Object notFound = new Object();\n+  static final Object sentinel = new Object();\n \n   /**\n    * The base for the computation of the next hash for a thread local.\n@@ -100,7 +100,8 @@\n   /**\n    * Allocate a new hash.\n    */\n-  private synchronized int computeNextHash() {\n+  private synchronized int computeNextHash() \n+  {\n     return nextHashBase++ * 6709;\n   }\n \n@@ -144,7 +145,7 @@ public T get()\n     // Note that we don't have to synchronize, as only this thread will\n     // ever modify the map.\n     T value = (T) map.get(this);\n-    if (value == notFound)\n+    if (value == sentinel)\n       {\n         value = initialValue();\n         map.set(this, value);"}, {"sha": "5dc670255377a1453ffe5258aa57fd6d104268a9", "filename": "libjava/classpath/java/nio/Buffer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Fnio%2FBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Fnio%2FBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2FBuffer.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -56,7 +56,8 @@\n    *\n    * Should be package private.\n    */\n-  Buffer (int capacity, int limit, int position, int mark, Pointer address)\n+  Buffer (int capacity, int limit, int position, int mark,\n+\t  Pointer address)\n   {\n     this.address = address;\n "}, {"sha": "939718e9c0f6a4d8eaabd0238336d6576b701349", "filename": "libjava/classpath/java/nio/DirectByteBufferImpl.java", "status": "modified", "additions": 52, "deletions": 41, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Fnio%2FDirectByteBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Fnio%2FDirectByteBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2FDirectByteBufferImpl.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -1,4 +1,4 @@\n-/* DirectByteBufferImpl.java --\n+/* DirectByteBufferImpl.java -- \n    Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -60,8 +60,8 @@ abstract class DirectByteBufferImpl extends ByteBuffer\n   static final class ReadOnly extends DirectByteBufferImpl\n   {\n     ReadOnly(Object owner, Pointer address,\n-             int capacity, int limit,\n-             int position)\n+\t     int capacity, int limit,\n+\t     int position)\n     {\n       super(owner, address, capacity, limit, position);\n     }\n@@ -89,9 +89,14 @@ static final class ReadWrite extends DirectByteBufferImpl\n       super(capacity);\n     }\n \n+    ReadWrite(Pointer address, int capacity)\n+    {\n+      super(address, capacity);\n+    }\n+    \n     ReadWrite(Object owner, Pointer address,\n-              int capacity, int limit,\n-              int position)\n+\t      int capacity, int limit,\n+\t      int position)\n     {\n       super(owner, address, capacity, limit, position);\n     }\n@@ -104,21 +109,28 @@ public boolean isReadOnly()\n \n   DirectByteBufferImpl(int capacity)\n   {\n-    super(capacity, capacity, 0, -1, VMDirectByteBuffer.allocate(capacity), null, 0);\n+    super(capacity, capacity, 0, -1,\n+\t  VMDirectByteBuffer.allocate(capacity), null, 0);\n     this.owner = this;\n   }\n \n+  DirectByteBufferImpl(Pointer address, int capacity)\n+  {\n+    super(capacity, capacity, 0, -1, address, null, 0);\n+    this.owner = null;\n+  }\n+  \n   DirectByteBufferImpl(Object owner, Pointer address,\n-                       int capacity, int limit,\n-                       int position)\n+\t\t       int capacity, int limit,\n+\t\t       int position)\n   {\n     super(capacity, limit, position, -1, address, null, 0);\n     this.owner = owner;\n   }\n \n   /**\n    * Allocates a new direct byte buffer.\n-   */\n+   */ \n   public static ByteBuffer allocate(int capacity)\n   {\n     return new DirectByteBufferImpl.ReadWrite(capacity);\n@@ -129,7 +141,7 @@ protected void finalize() throws Throwable\n     if (owner == this)\n         VMDirectByteBuffer.free(address);\n   }\n-\n+  \n   public byte get()\n   {\n     checkForUnderflow();\n@@ -168,48 +180,47 @@ public ByteBuffer put(byte value)\n     position(pos + 1);\n     return this;\n   }\n-\n+  \n   public ByteBuffer put(int index, byte value)\n   {\n     checkIndex(index);\n \n     VMDirectByteBuffer.put(address, index, value);\n     return this;\n   }\n-\n+  \n   public ByteBuffer put (byte[] src, int offset, int length)\n   {\n     checkArraySize (src.length, offset, length);\n     checkForUnderflow (length);\n-\n     int index = position ();\n     VMDirectByteBuffer.put (address, index, src, offset, length);\n     position (index + length);\n-\n+    \n     return this;\n   }\n-\n+  \n   void shiftDown(int dst_offset, int src_offset, int count)\n   {\n     VMDirectByteBuffer.shiftDown(address, dst_offset, src_offset, count);\n   }\n-\n+  \n   public ByteBuffer compact()\n   {\n     checkIfReadOnly();\n     mark = -1;\n     int pos = position();\n     if (pos > 0)\n       {\n-        int count = remaining();\n-        VMDirectByteBuffer.shiftDown(address, 0, pos, count);\n-        position(count);\n-        limit(capacity());\n+\tint count = remaining();\n+\tVMDirectByteBuffer.shiftDown(address, 0, pos, count);\n+\tposition(count);\n+\tlimit(capacity());\n       }\n     else\n       {\n-        position(limit());\n-        limit(capacity());\n+\tposition(limit());\n+\tlimit(capacity());\n       }\n     return this;\n   }\n@@ -244,9 +255,9 @@ private ByteBuffer duplicate(boolean readOnly)\n \n     if (mark != pos)\n       {\n-        result.position(mark);\n-        result.mark();\n-        result.position(pos);\n+\tresult.position(mark);\n+\tresult.mark();\n+\tresult.position(pos);\n       }\n     return result;\n   }\n@@ -300,18 +311,18 @@ public char getChar()\n   {\n     return ByteBufferHelper.getChar(this, order());\n   }\n-\n+  \n   public ByteBuffer putChar(char value)\n   {\n     ByteBufferHelper.putChar(this, value, order());\n     return this;\n   }\n-\n+  \n   public char getChar(int index)\n   {\n     return ByteBufferHelper.getChar(this, index, order());\n   }\n-\n+  \n   public ByteBuffer putChar(int index, char value)\n   {\n     ByteBufferHelper.putChar(this, index, value, order());\n@@ -322,18 +333,18 @@ public short getShort()\n   {\n     return ByteBufferHelper.getShort(this, order());\n   }\n-\n+  \n   public ByteBuffer putShort(short value)\n   {\n     ByteBufferHelper.putShort(this, value, order());\n     return this;\n   }\n-\n+  \n   public short getShort(int index)\n   {\n     return ByteBufferHelper.getShort(this, index, order());\n   }\n-\n+  \n   public ByteBuffer putShort(int index, short value)\n   {\n     ByteBufferHelper.putShort(this, index, value, order());\n@@ -344,18 +355,18 @@ public int getInt()\n   {\n     return ByteBufferHelper.getInt(this, order());\n   }\n-\n+  \n   public ByteBuffer putInt(int value)\n   {\n     ByteBufferHelper.putInt(this, value, order());\n     return this;\n   }\n-\n+  \n   public int getInt(int index)\n   {\n     return ByteBufferHelper.getInt(this, index, order());\n   }\n-\n+  \n   public ByteBuffer putInt(int index, int value)\n   {\n     ByteBufferHelper.putInt(this, index, value, order());\n@@ -366,18 +377,18 @@ public long getLong()\n   {\n     return ByteBufferHelper.getLong(this, order());\n   }\n-\n+  \n   public ByteBuffer putLong(long value)\n   {\n     ByteBufferHelper.putLong(this, value, order());\n     return this;\n   }\n-\n+  \n   public long getLong(int index)\n   {\n     return ByteBufferHelper.getLong(this, index, order());\n   }\n-\n+  \n   public ByteBuffer putLong(int index, long value)\n   {\n     ByteBufferHelper.putLong(this, index, value, order());\n@@ -388,13 +399,13 @@ public float getFloat()\n   {\n     return ByteBufferHelper.getFloat(this, order());\n   }\n-\n+  \n   public ByteBuffer putFloat(float value)\n   {\n     ByteBufferHelper.putFloat(this, value, order());\n     return this;\n   }\n-\n+  \n   public float getFloat(int index)\n   {\n     return ByteBufferHelper.getFloat(this, index, order());\n@@ -416,12 +427,12 @@ public ByteBuffer putDouble(double value)\n     ByteBufferHelper.putDouble(this, value, order());\n     return this;\n   }\n-\n+  \n   public double getDouble(int index)\n   {\n     return ByteBufferHelper.getDouble(this, index, order());\n   }\n-\n+  \n   public ByteBuffer putDouble(int index, double value)\n   {\n     ByteBufferHelper.putDouble(this, index, value, order());"}, {"sha": "dd50be84611c2d49491533dcfe621330727f7c11", "filename": "libjava/classpath/java/nio/IntBuffer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Fnio%2FIntBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Fnio%2FIntBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2FIntBuffer.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -50,8 +50,8 @@ public abstract class IntBuffer extends Buffer\n   final int array_offset;\n   final int[] backing_buffer;\n \n-  IntBuffer (int capacity, int limit, int position, int mark, RawData address,\n-\t     int[] backing_buffer, int array_offset)\n+  IntBuffer (int capacity, int limit, int position, int mark,\n+\t      RawData address, int[] backing_buffer, int array_offset)\n   {\n     super (capacity, limit, position, mark, address);\n     this.backing_buffer = backing_buffer;"}, {"sha": "627085556f653b386b801b41156aed8ec80a024f", "filename": "libjava/classpath/java/nio/ShortViewBufferImpl.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Fnio%2FShortViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fjava%2Fnio%2FShortViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2FShortViewBufferImpl.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -49,7 +49,8 @@ final class ShortViewBufferImpl extends ShortBuffer\n   ShortViewBufferImpl (ByteBuffer bb, int capacity)\n   {\n     super (capacity, capacity, 0, -1, bb.isDirect() ?\n-           VMDirectByteBuffer.adjustAddress(bb.address, bb.position()):null, null, 0);\n+           VMDirectByteBuffer.adjustAddress(bb.address, bb.position()):null,\n+\t   null, 0);\n     this.bb = bb;\n     this.offset = bb.position();\n     this.readOnly = bb.isReadOnly();\n@@ -61,7 +62,8 @@ public ShortViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n \t\t\t      boolean readOnly, ByteOrder endian)\n   {\n     super (capacity, limit, position, mark, bb.isDirect() ?\n-           VMDirectByteBuffer.adjustAddress(bb.address, offset):null, null, 0);\n+           VMDirectByteBuffer.adjustAddress(bb.address, offset):null,\n+\t   null, 0);\n     this.bb = bb;\n     this.offset = offset;\n     this.readOnly = readOnly;"}, {"sha": "04aed15b51120fead3d33deca226beff3991b830", "filename": "libjava/classpath/lib/java/nio/ShortViewBufferImpl.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2FShortViewBufferImpl.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2FShortViewBufferImpl.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fnio%2FShortViewBufferImpl.class?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9"}, {"sha": "444c77896260cb35258759b1ecf20ba5ae62a1ed", "filename": "libjava/classpath/native/jni/gtk-peer/gnu_java_awt_peer_gtk_CairoGraphics2D.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_CairoGraphics2D.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_CairoGraphics2D.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_CairoGraphics2D.c?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -1,5 +1,5 @@\n /* gnu_java_awt_peer_gtk_CairoGraphics2d.c\n-   Copyright (C) 2006  Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2008  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n    \n@@ -371,8 +371,9 @@ Java_gnu_java_awt_peer_gtk_CairoGraphics2D_cairoDrawGlyphVector\n       cairo_font_face_destroy (ft);\n       pango_fc_font_unlock_face(font);\n     }\n-    gdk_threads_leave();\n+  gdk_threads_leave();\n     \n+  (*env)->ReleaseLongArrayElements (env, java_fontset, fonts, 0);\n   g_free(glyphs);\n }\n "}, {"sha": "ad88b1c5d24abc2e48e9a41aced6d89a157fedfc", "filename": "libjava/classpath/tools/Makefile.am", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2FMakefile.am?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -1,5 +1,16 @@\n ## Input file for automake to generate the Makefile.in used by configure\n \n+if CREATE_GJDOC\n+## GCJ LOCAL: always put source files in srcdir\n+## if CREATE_GJDOC_PARSER\n+## gjdoc_gendir = ${top_builddir}/tools/generated\n+## else\n+gjdoc_gendir = ${top_srcdir}/tools/generated\n+## endif\n+## END GCJ LOCAL\n+ANTLR_CLASSPATH = $(ANTLR_JAR):$(gjdoc_gendir)\n+endif\n+\n ## GCJ LOCAL: use srcdir to find core classes.\n GLIBJ_BOOTCLASSPATH='$(top_srcdir)/lib'\n GLIBJ_CLASSPATH=.:$(srcdir)/asm:$(ANTLR_CLASSPATH)\n@@ -12,17 +23,6 @@ else\n JCOMPILER = $(JAVAC) $(JAVACFLAGS) -source 1.5 -target 1.5 -encoding UTF-8 -bootclasspath $(GLIBJ_BOOTCLASSPATH) -classpath $(GLIBJ_CLASSPATH)\n endif\n \n-if CREATE_GJDOC\n-## GCJ LOCAL: always put source files in srcdir\n-## if CREATE_GJDOC_PARSER\n-## gjdoc_gendir = ${top_builddir}/tools/generated\n-## else\n-gjdoc_gendir = ${top_srcdir}/tools/generated\n-## endif\n-## END GCJ LOCAL\n-ANTLR_CLASSPATH = $(ANTLR_JAR):$(gjdoc_gendir)\n-endif\n-\n if CREATE_WRAPPERS\n bin_SCRIPTS =\n bin_PROGRAMS = gappletviewer gjarsigner gkeytool \\\n@@ -320,8 +320,19 @@ $(TOOLS_ZIP): $(ALL_TOOLS_FILES)\n ## GCJ LOCAL: put classes in srcdir\n ##\t@rm -rf classes asm\n ##\t@mkdir_p@ classes asm\n+if JAVA_MAINTAINER_MODE\n+if CREATE_GJDOC\n+if CREATE_GJDOC_PARSER\n+## Generate antlr sources.\n+\t@mkdir_p@ $(gjdoc_gendir)/gnu/classpath/tools/gjdoc/expr\n+\t$(ANTLR) -o $(gjdoc_gendir)/gnu/classpath/tools/gjdoc/expr/ \\\n+\t  $(srcdir)/gnu/classpath/tools/gjdoc/expr/java-expression.g\n+endif\n+endif\n ## Compile ASM separately as it is latin-1 encoded.\n \tfind $(srcdir)/external/asm -name '*.java' -print > asm.lst\n+\tAC=`echo $(JCOMPILER) | sed -e 's/UTF-8/ISO-8859-1/g'`; \\\n+\t  $$AC -g -w -d $(srcdir)/asm @asm.lst\n \tfind $(srcdir)/gnu/classpath/tools \\\n \t     $(srcdir)/com/sun/javadoc \\\n \t     $(srcdir)/com/sun/tools/doclets \\\n@@ -339,20 +350,8 @@ $(TOOLS_ZIP): $(ALL_TOOLS_FILES)\n \telse \\\n \t    echo -n > vm-tools.lst; \\\n \tfi\n-\tcat classes.lst asm.lst vm-tools.lst > all-classes.lst\n-if JAVA_MAINTAINER_MODE\n-if CREATE_GJDOC\n-if CREATE_GJDOC_PARSER\n-## Generate antlr sources.\n-\t@mkdir_p@ $(gjdoc_gendir)/gnu/classpath/tools/gjdoc/expr\n-\t$(ANTLR) -o $(gjdoc_gendir)/gnu/classpath/tools/gjdoc/expr \\\n-\t  $(srcdir)/gnu/classpath/tools/gjdoc/expr/java-expression.g\n-endif\n-endif\n-## Compile ASM separately as it is latin-1 encoded.\n-\tAC=`echo $(JCOMPILER) | sed -e 's/UTF-8/ISO-8859-1/g'`; \\\n-\t  $$AC -g -w -d $(srcdir)/asm @asm.lst\n \t$(JCOMPILER) $(USE_JAVAC_FLAGS) -g -d $(srcdir)/classes @classes.lst @vm-tools.lst\n+\tcat classes.lst asm.lst vm-tools.lst > all-classes.lst\n endif\n ## END GCJ LOCAL\n ## Copy over tools resource files.\n@@ -364,8 +363,10 @@ endif\n \t  echo \"  cp $(srcdir)/resource/$$p classes/$$p\"; \\\n \t  cp $(srcdir)/resource/$$p classes/$$p; \\\n \tdone\n+## BEGIN GCJ LOCAL\n \tcp -pR $(srcdir)/asm .\n \tcp -pR $(srcdir)/classes .\n+## END GCJ LOCAL\n if CREATE_GJDOC\n ## Copy over gjdoc resource files.\n \tfor res in $(gjdoc_resources); do \\"}, {"sha": "6a863425b0142cca71f0d14016b05ae856349dbd", "filename": "libjava/classpath/tools/Makefile.in", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2FMakefile.in?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -447,14 +447,14 @@ target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n uudecode = @uudecode@\n vm_classes = @vm_classes@\n+@CREATE_GJDOC_TRUE@gjdoc_gendir = ${top_srcdir}/tools/generated\n+@CREATE_GJDOC_TRUE@ANTLR_CLASSPATH = $(ANTLR_JAR):$(gjdoc_gendir)\n GLIBJ_BOOTCLASSPATH = '$(top_srcdir)/lib'\n GLIBJ_CLASSPATH = .:$(srcdir)/asm:$(ANTLR_CLASSPATH)\n @GCJ_JAVAC_FALSE@JCOMPILER = $(JAVAC) $(JAVACFLAGS) -source 1.5 -target 1.5 -encoding UTF-8 -bootclasspath $(GLIBJ_BOOTCLASSPATH) -classpath $(GLIBJ_CLASSPATH)\n \n # Setup the compiler to use the GNU Classpath library we just built.\n @GCJ_JAVAC_TRUE@JCOMPILER = $(JAVAC) $(JAVACFLAGS) -fsource=1.5 -ftarget=1.5 --encoding=UTF-8 --bootclasspath=$(GLIBJ_BOOTCLASSPATH) --classpath=$(GLIBJ_CLASSPATH)\n-@CREATE_GJDOC_TRUE@gjdoc_gendir = ${top_srcdir}/tools/generated\n-@CREATE_GJDOC_TRUE@ANTLR_CLASSPATH = $(ANTLR_JAR):$(gjdoc_gendir)\n @CREATE_WRAPPERS_TRUE@bin_SCRIPTS = \n @CREATE_WRAPPERS_TRUE@AM_CPPFLAGS = -Wall \\\n @CREATE_WRAPPERS_TRUE@\t-I$(top_srcdir)/include \\\n@@ -1312,31 +1312,31 @@ dist-hook:\n # immediately.  And copy the template files we use to the classes dir\n # so they get also included.\n $(TOOLS_ZIP): $(ALL_TOOLS_FILES)\n-\tfind $(srcdir)/external/asm -name '*.java' -print > asm.lst\n-\tfind $(srcdir)/gnu/classpath/tools \\\n-\t     $(srcdir)/com/sun/javadoc \\\n-\t     $(srcdir)/com/sun/tools/doclets \\\n-\t     $(srcdir)/com/sun/tools/javadoc \\\n-\t     $(srcdir)/com/sun/tools/javac \\\n-\t     $(srcdir)/com/sun/tools/javah \\\n-\t     $(srcdir)/sun/rmi/rmic \\\n-\t     $(GJDOC_EX) \\\n-\t     -name '*.java' -print > classes.lst\n-\tif [ -f $(top_builddir)/../vm-tools-packages ]; then \\\n-\t    : > vm-tools.lst; \\\n-\t    for pkg in `cat $(top_builddir)/../vm-tools-packages`; do \\\n-\t      $(FIND) $(top_srcdir)/../$$pkg -follow -name '*.java' -print >> vm-tools.lst; \\\n-\t    done \\\n-\telse \\\n-\t    echo -n > vm-tools.lst; \\\n-\tfi\n-\tcat classes.lst asm.lst vm-tools.lst > all-classes.lst\n @CREATE_GJDOC_PARSER_TRUE@@CREATE_GJDOC_TRUE@@JAVA_MAINTAINER_MODE_TRUE@\t@mkdir_p@ $(gjdoc_gendir)/gnu/classpath/tools/gjdoc/expr\n-@CREATE_GJDOC_PARSER_TRUE@@CREATE_GJDOC_TRUE@@JAVA_MAINTAINER_MODE_TRUE@\t$(ANTLR) -o $(gjdoc_gendir)/gnu/classpath/tools/gjdoc/expr \\\n+@CREATE_GJDOC_PARSER_TRUE@@CREATE_GJDOC_TRUE@@JAVA_MAINTAINER_MODE_TRUE@\t$(ANTLR) -o $(gjdoc_gendir)/gnu/classpath/tools/gjdoc/expr/ \\\n @CREATE_GJDOC_PARSER_TRUE@@CREATE_GJDOC_TRUE@@JAVA_MAINTAINER_MODE_TRUE@\t  $(srcdir)/gnu/classpath/tools/gjdoc/expr/java-expression.g\n+@JAVA_MAINTAINER_MODE_TRUE@\tfind $(srcdir)/external/asm -name '*.java' -print > asm.lst\n @JAVA_MAINTAINER_MODE_TRUE@\tAC=`echo $(JCOMPILER) | sed -e 's/UTF-8/ISO-8859-1/g'`; \\\n @JAVA_MAINTAINER_MODE_TRUE@\t  $$AC -g -w -d $(srcdir)/asm @asm.lst\n+@JAVA_MAINTAINER_MODE_TRUE@\tfind $(srcdir)/gnu/classpath/tools \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t     $(srcdir)/com/sun/javadoc \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t     $(srcdir)/com/sun/tools/doclets \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t     $(srcdir)/com/sun/tools/javadoc \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t     $(srcdir)/com/sun/tools/javac \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t     $(srcdir)/com/sun/tools/javah \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t     $(srcdir)/sun/rmi/rmic \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t     $(GJDOC_EX) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t     -name '*.java' -print > classes.lst\n+@JAVA_MAINTAINER_MODE_TRUE@\tif [ -f $(top_builddir)/../vm-tools-packages ]; then \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    : > vm-tools.lst; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    for pkg in `cat $(top_builddir)/../vm-tools-packages`; do \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      $(FIND) $(top_srcdir)/../$$pkg -follow -name '*.java' -print >> vm-tools.lst; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    done \\\n+@JAVA_MAINTAINER_MODE_TRUE@\telse \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    echo -n > vm-tools.lst; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\tfi\n @JAVA_MAINTAINER_MODE_TRUE@\t$(JCOMPILER) $(USE_JAVAC_FLAGS) -g -d $(srcdir)/classes @classes.lst @vm-tools.lst\n+@JAVA_MAINTAINER_MODE_TRUE@\tcat classes.lst asm.lst vm-tools.lst > all-classes.lst\n \t@list=`cd $(srcdir)/resource && find gnu/classpath/tools com/sun/tools/javac \\\n \t       sun/rmi/rmic $(GJDOC_EX) -name \\*.properties -print -o -name \\*.jav -print`; \\\n \tfor p in $$list; do \\"}, {"sha": "517fe0c7a3399962ddb14962645ac43f61b43aa4", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/jar/Creator.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FCreator.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FCreator.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FCreator.class?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9"}, {"sha": "bea2d0f3df77c2e60334caed069607dd2247f1c9", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/jar/Indexer.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FIndexer.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FIndexer.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FIndexer.class?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9"}, {"sha": "5e792e60dab944ed0c43d690642dd7a4170a673c", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/jar/WorkSet.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FWorkSet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FWorkSet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FWorkSet.class?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9"}, {"sha": "a6b6112caa1c8f2e85726ed8a203574ec50f8467", "filename": "libjava/classpath/tools/gnu/classpath/tools/jar/Creator.java", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FCreator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FCreator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FCreator.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -1,5 +1,5 @@\n /* Creator.java - create a new jar file\n- Copyright (C) 2006 Free Software Foundation, Inc.\n+ Copyright (C) 2006, 2008 Free Software Foundation, Inc.\n \n  This file is part of GNU Classpath.\n \n@@ -49,7 +49,6 @@\n import java.text.MessageFormat;\n import java.util.ArrayList;\n import java.util.HashSet;\n-import java.util.Iterator;\n import java.util.jar.Attributes;\n import java.util.jar.JarFile;\n import java.util.jar.JarOutputStream;\n@@ -179,13 +178,9 @@ private void addEntries(ArrayList<Entry> result, Entry entry)\n \n   private ArrayList<Entry> getAllEntries(Main parameters)\n   {\n-    Iterator it = parameters.entries.iterator();\n     ArrayList<Entry> allEntries = new ArrayList<Entry>();\n-    while (it.hasNext())\n-      {\n-        Entry entry = (Entry) it.next();\n-        addEntries(allEntries, entry);\n-      }\n+    for (Entry entry : parameters.entries)\n+      addEntries(allEntries, entry);\n     return allEntries;\n   }\n \n@@ -196,13 +191,9 @@ private void writeCommandLineEntries(Main parameters)\n     writtenItems.add(\"META-INF/\"); //$NON-NLS-1$\n     writtenItems.add(JarFile.MANIFEST_NAME);\n \n-    ArrayList allEntries = getAllEntries(parameters);\n-    Iterator it = allEntries.iterator();\n-    while (it.hasNext())\n-      {\n-        Entry entry = (Entry) it.next();\n-        writeFile(entry.file, entry.name, parameters.verbose);\n-      }\n+    ArrayList<Entry> allEntries = getAllEntries(parameters);\n+    for (Entry entry : allEntries)\n+      writeFile(entry.file, entry.name, parameters.verbose);\n   }\n \n   protected Manifest createManifest(Main parameters)"}, {"sha": "217b64405a6f66891142f239865e3b38a20e235b", "filename": "libjava/classpath/tools/gnu/classpath/tools/jar/Indexer.java", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FIndexer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FIndexer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FIndexer.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -1,5 +1,5 @@\n /* Indexer.java -- add index.list file to jar\n-   Copyright (C) 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2008 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,6 @@\n import java.io.OutputStream;\n import java.text.MessageFormat;\n import java.util.Enumeration;\n-import java.util.Iterator;\n import java.util.LinkedHashSet;\n import java.util.StringTokenizer;\n import java.util.jar.Attributes;\n@@ -90,10 +89,9 @@ private void indexJarFile(StringBuilder result, File fileName,\n         result.append(fileName);\n         // Any line ending will do.\n         result.append('\\n');\n-        Iterator i = entries.iterator();\n-        while (i.hasNext())\n+\tfor (String s : entries)\n           {\n-            result.append(i.next());\n+            result.append(s);\n             result.append('\\n');\n           }\n         // Paragraph break."}, {"sha": "d4b7f1eac02a5544821edb47ff3c6e941f0d0066", "filename": "libjava/classpath/tools/gnu/classpath/tools/jar/WorkSet.java", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FWorkSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ddc179d494fd426aca184a1a5749d9fa6f81b9/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FWorkSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjar%2FWorkSet.java?ref=58ddc179d494fd426aca184a1a5749d9fa6f81b9", "patch": "@@ -1,5 +1,5 @@\n /* WorkSet.java -- Helper to track what files to work on\n-   Copyright (C) 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2008 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,21 +40,18 @@\n \n import java.util.ArrayList;\n import java.util.HashSet;\n-import java.util.Iterator;\n \n public class WorkSet\n {\n   private HashSet<String> allItems;\n \n-  private void initSet(ArrayList entries)\n+  private void initSet(ArrayList<Entry> entries)\n   {\n     if (entries == null || entries.isEmpty())\n       return;\n     allItems = new HashSet<String>();\n-    Iterator it = entries.iterator();\n-    while (it.hasNext())\n+    for (Entry entry : entries)\n       {\n-        Entry entry = (Entry) it.next();\n         int len = entry.name.length();\n         while (len > 0 && entry.name.charAt(len - 1) == '/')\n           --len;\n@@ -63,7 +60,7 @@ private void initSet(ArrayList entries)\n       }\n   }\n \n-  public WorkSet(ArrayList entries)\n+  public WorkSet(ArrayList<Entry> entries)\n   {\n     initSet(entries);\n   }"}]}