{"sha": "e71b408aa242ffc76ffd19ebcdbd40279a1d9349", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxYjQwOGFhMjQyZmZjNzZmZmQxOWViY2RiZDQwMjc5YTFkOTM0OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-14T11:16:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-15T07:19:26Z"}, "message": "middle-end/94539 - void * aliases every other pointer\n\nThis makes same_type_for_tbaa_p conservative in the same way\nget_alias_set is about void * which we allow to alias all other\npointers.\n\n2020-04-15  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/94539\n\t* tree-ssa-alias.c (same_type_for_tbaa): Defer to\n\talias_sets_conflict_p for pointers.\n\n\t* gcc.dg/alias-14.c: Make dg-do run.", "tree": {"sha": "19da1ef7ccdb744483811f95be28b003256bd893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19da1ef7ccdb744483811f95be28b003256bd893"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e71b408aa242ffc76ffd19ebcdbd40279a1d9349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71b408aa242ffc76ffd19ebcdbd40279a1d9349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e71b408aa242ffc76ffd19ebcdbd40279a1d9349", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b6551bc6049b34425fb96e8d91eb15b04f87f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6551bc6049b34425fb96e8d91eb15b04f87f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b6551bc6049b34425fb96e8d91eb15b04f87f62"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "2d6c5c88b7d1862fba9d13adf390e18c2e3d5b02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e71b408aa242ffc76ffd19ebcdbd40279a1d9349", "patch": "@@ -1,3 +1,9 @@\n+2020-04-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/94539\n+\t* tree-ssa-alias.c (same_type_for_tbaa): Defer to\n+\talias_sets_conflict_p for pointers.\n+\n 2020-04-14  Max Filippov  <jcmvbkbc@gmail.com>\n \n \tPR target/94584"}, {"sha": "0e4eea3873d221fb7d4c60e86f74dd4305bfd620", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e71b408aa242ffc76ffd19ebcdbd40279a1d9349", "patch": "@@ -1,3 +1,8 @@\n+2020-04-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/94539\n+\t* gcc.dg/alias-14.c: Make dg-do run.\n+\n 2020-04-13  Max Filippov  <jcmvbkbc@gmail.com>\n \n \tPR target/94584"}, {"sha": "24f0d1c1168cdf4b273c1468f6aaa58ee50a9b22", "filename": "gcc/testsuite/gcc.dg/alias-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/gcc%2Ftestsuite%2Fgcc.dg%2Falias-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/gcc%2Ftestsuite%2Fgcc.dg%2Falias-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falias-14.c?ref=e71b408aa242ffc76ffd19ebcdbd40279a1d9349", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O2\" } */\n #include <stddef.h>\n void *a;"}, {"sha": "ede4f198342db99e58c6d7febac1d957b9e18df8", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71b408aa242ffc76ffd19ebcdbd40279a1d9349/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=e71b408aa242ffc76ffd19ebcdbd40279a1d9349", "patch": "@@ -839,7 +839,16 @@ same_type_for_tbaa (tree type1, tree type2)\n      would mean that conversions between them are useless, whereas they are\n      not (e.g. type and subtypes can have different modes).  So, in the end,\n      they are only guaranteed to have the same alias set.  */\n-  if (get_alias_set (type1) == get_alias_set (type2))\n+  alias_set_type set1 = get_alias_set (type1);\n+  alias_set_type set2 = get_alias_set (type2);\n+  if (set1 == set2)\n+    return -1;\n+\n+  /* Pointers to void are considered compatible with all other pointers,\n+     so for two pointers see what the alias set resolution thinks.  */\n+  if (POINTER_TYPE_P (type1)\n+      && POINTER_TYPE_P (type2)\n+      && alias_sets_conflict_p (set1, set2))\n     return -1;\n \n   /* The types are known to be not equal.  */"}]}