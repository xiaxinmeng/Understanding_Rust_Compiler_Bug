{"sha": "240922421def12476ef77ed7d2b4feecd56b0a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQwOTIyNDIxZGVmMTI0NzZlZjc3ZWQ3ZDJiNGZlZWNkNTZiMGE2Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-06T21:40:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-06T21:40:30Z"}, "message": "(const_method): Do not synthesize long constants with byte or word\noperations with TARGET_5200.\n\nFrom-SVN: r12181", "tree": {"sha": "f3f111b00ce84b81d5684025d43dae8657ab9e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3f111b00ce84b81d5684025d43dae8657ab9e64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/240922421def12476ef77ed7d2b4feecd56b0a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240922421def12476ef77ed7d2b4feecd56b0a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/240922421def12476ef77ed7d2b4feecd56b0a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240922421def12476ef77ed7d2b4feecd56b0a6f/comments", "author": null, "committer": null, "parents": [{"sha": "106bee4b93f05e7ef8b24a56c66e1351d6206ae3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/106bee4b93f05e7ef8b24a56c66e1351d6206ae3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/106bee4b93f05e7ef8b24a56c66e1351d6206ae3"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "2e524798ad956bf1612520718147f87f3bd45de1", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240922421def12476ef77ed7d2b4feecd56b0a6f/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240922421def12476ef77ed7d2b4feecd56b0a6f/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=240922421def12476ef77ed7d2b4feecd56b0a6f", "patch": "@@ -1066,20 +1066,26 @@ const_method (constant)\n   i = INTVAL (constant);\n   if (USE_MOVQ (i))\n     return MOVQ;\n-  /* if -256 < N < 256 but N is not in range for a moveq\n-     N^ff will be, so use moveq #N^ff, dreg; not.b dreg. */\n-  if (USE_MOVQ (i ^ 0xff))\n-    return NOTB;\n-  /* Likewise, try with not.w */\n-  if (USE_MOVQ (i ^ 0xffff))\n-    return NOTW;\n-  /* This is the only value where neg.w is useful */\n-  if (i == -65408)\n-    return NEGW;\n-  /* Try also with swap */\n-  u = i;\n-  if (USE_MOVQ ((u >> 16) | (u << 16)))\n-    return SWAP;\n+\n+  /* The Coldfire doesn't have byte or word operations. */\n+  /* FIXME: This may not be useful for the m68060 either */\n+  if (!TARGET_5200) \n+    {\n+      /* if -256 < N < 256 but N is not in range for a moveq\n+\t N^ff will be, so use moveq #N^ff, dreg; not.b dreg. */\n+      if (USE_MOVQ (i ^ 0xff))\n+\treturn NOTB;\n+      /* Likewise, try with not.w */\n+      if (USE_MOVQ (i ^ 0xffff))\n+\treturn NOTW;\n+      /* This is the only value where neg.w is useful */\n+      if (i == -65408)\n+\treturn NEGW;\n+      /* Try also with swap */\n+      u = i;\n+      if (USE_MOVQ ((u >> 16) | (u << 16)))\n+\treturn SWAP;\n+    }\n   /* Otherwise, use move.l */\n   return MOVL;\n }"}]}