{"sha": "e2a606cb27a100bb5fd96dcd62da9b2c1e2f4b57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJhNjA2Y2IyN2ExMDBiYjVmZDk2ZGNkNjJkYTliMmMxZTJmNGI1Nw==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-08-02T21:27:07Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-08-02T21:27:07Z"}, "message": "(i386_branch_cost, i386_branch_cost_string): Added.\n\nFrom-SVN: r12584", "tree": {"sha": "1761de3098f5f705f5d489dd9493a8345b0120b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1761de3098f5f705f5d489dd9493a8345b0120b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2a606cb27a100bb5fd96dcd62da9b2c1e2f4b57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a606cb27a100bb5fd96dcd62da9b2c1e2f4b57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2a606cb27a100bb5fd96dcd62da9b2c1e2f4b57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a606cb27a100bb5fd96dcd62da9b2c1e2f4b57/comments", "author": null, "committer": null, "parents": [{"sha": "f8a5c113dd2a02970b87121571de46f5f1f09007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a5c113dd2a02970b87121571de46f5f1f09007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a5c113dd2a02970b87121571de46f5f1f09007"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9ce6f26e91dfdc0eba74dc709c0db21060690b03", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a606cb27a100bb5fd96dcd62da9b2c1e2f4b57/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a606cb27a100bb5fd96dcd62da9b2c1e2f4b57/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=e2a606cb27a100bb5fd96dcd62da9b2c1e2f4b57", "patch": "@@ -264,6 +264,7 @@ extern int ix86_isa;\n   { \"align-loops=\",\t&i386_align_loops_string },\t\t\t\\\n   { \"align-jumps=\",\t&i386_align_jumps_string },\t\t\t\\\n   { \"align-functions=\",\t&i386_align_funcs_string },\t\t\t\\\n+  { \"branch-cost=\",\t&i386_branch_cost_string },\t\t\t\\\n   SUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n }\n \n@@ -530,9 +531,6 @@ extern int ix86_isa;\n \n #define MODES_TIEABLE_P(MODE1, MODE2) ((MODE1) == (MODE2))\n \n-/* Provide the cost of a branch.  Exact meaning under development.  */\n-#define BRANCH_COST (TARGET_PENTIUMPRO ? 5 : 1)    \n-\n /* Specify the registers used for certain standard purposes.\n    The values of these macros are register numbers.  */\n \n@@ -2016,7 +2014,7 @@ while (0)\n /* A C expression for the cost of a branch instruction.  A value of 1\n    is the default; other values are interpreted relative to that.  */\n \n-/* #define BRANCH_COST 1 */\n+#define BRANCH_COST i386_branch_cost\n \n /* Define this macro as a C expression which is nonzero if accessing\n    less than a word of memory (i.e. a `char' or a `short') is no\n@@ -2636,10 +2634,12 @@ extern char *i386_regparm_string;\t\t/* # registers to use to pass args */\n extern char *i386_align_loops_string;\t\t/* power of two alignment for loops */\n extern char *i386_align_jumps_string;\t\t/* power of two alignment for non-loop jumps */\n extern char *i386_align_funcs_string;\t\t/* power of two alignment for functions */\n+extern char *i386_branch_cost_string;\t\t/* values 1-5: see jump.c */\n extern int i386_regparm;\t\t\t/* i386_regparm_string as a number */\n extern int i386_align_loops;\t\t\t/* power of two alignment for loops */\n extern int i386_align_jumps;\t\t\t/* power of two alignment for non-loop jumps */\n extern int i386_align_funcs;\t\t\t/* power of two alignment for functions */\n+extern int i386_branch_cost;\t\t\t/* values 1-5: see jump.c */\n extern char *hi_reg_name[];\t\t\t/* names for 16 bit regs */\n extern char *qi_reg_name[];\t\t\t/* names for 8 bit regs (low) */\n extern char *qi_high_reg_name[];\t\t/* names for 8 bit regs (high) */"}]}