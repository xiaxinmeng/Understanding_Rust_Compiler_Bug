{"sha": "23685ae6ecac53a9365195feaf56c986d7c2eae0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM2ODVhZTZlY2FjNTNhOTM2NTE5NWZlYWY1NmM5ODZkN2MyZWFlMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:34:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:34:00Z"}, "message": "[multiple changes]\n\n2011-08-02  Pascal Obry  <obry@adacore.com>\n\n\t* prj-proc.adb, make.adb, makeutl.adb: Minor reformatting.\n\n2011-08-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch5.adb (Expand_Iterator_Loop): Code cleanup and reorganization.\n\tSet the associated loop as the related expression of internally\n\tgenerated cursors.\n\t* exp_ch7.adb (Is_Container_Cursor): New routine.\n\t(Wrap_Transient_Declaration): Supress the finalization of the list\n\tcontroller when the declaration denotes a container cursor.\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* opt.ads (SPARK_Mode): update comment, SPARK_Mode only set through\n\tcommand line now.\n\t* par-ch3.adb (P_Delta_Constraint): remove check in SPARK mode that the\n\texpression is a simple expression. This check cannot be performed in\n\tthe semantics, so just drop it.\n\t(P_Index_Or_Discriminant_Constraint): move check that the index or\n\tdiscriminant is a subtype mark to Analyze_Subtype_Declaration in the\n\tsemantics. Other cases were previously checked in the semantics.\n\t* par-ch4.adb (P_Name): move checks that a selector name is not\n\tcharacter literal or an operator symbol to Find_Selected_Component in\n\tthe semantics\n\t* par-ch5.adb (Parse_Decls_Begin_End): move check that basic\n\tdeclarations are not placed after later declarations in a separate\n\tprocedure in Sem_Util (possibly not the best choice?), to be used both\n\tduring parsing, for Ada 83 mode, and during semantic analysis, for\n\tSPARK mode.\n\t* par-endh.adb (Check_End): move check that end label is not missing\n\tto Process_End_Label in the semantics\n\t* par-prag.adb (Process_Restrictions_Or_Restriction_Warnings): remove\n\tthe special case for SPARK restriction\n\t* par.adb: use and with Sem_Util, for use in Parse_Decls_Begin_End\n\t* restrict.adb, restrict.ads (Check_Formal_Restriction): add a\n\tparameter Force to issue the error message even on internal node (used\n\tfor generated end label). Call Check_Restriction to check when an error\n\tmust be issued. In SPARK mode, issue an error message even if the\n\trestriction is not set.\n\t(Check_Restriction): new procedure with an additional out parameter to\n\tinform the caller that a message has been issued\n\t* sem_aggr.adb: Minor modification of message\n\t* sem_attr.adb (Analyze_Attribute): call Check_Formal_Restriction\n\tinstead of issuing an error message directly\n\t* sem_ch3.adb (Analyze_Declarations): move here the check that basic\n\tdeclarations are not placed after later declarations, by calling\n\tCheck_Later_Vs_Basic_Declarations\n\t(Analyze_Subtype_Declaration): move here the check that an index or\n\tdiscriminant constraint must be a subtype mark. Change the check that\n\ta subtype of String must start at one so that it works on subtype marks.\n\t* sem_ch4.adb (Analyze_Call): move here the check that a named\n\tassociation cannot follow a positional one in a call\n\t* sem_ch5.adb (Check_Unreachable_Code): call Check_Formal_Restriction\n\tinstead of issuing an error message directly\n\t* sem_ch8.adb (Find_Selected_Component): move here the check that a\n\tselector name is not a character literal or an operator symbol. Move\n\there the check that the prefix of an expanded name cannot be a\n\tsubprogram or a loop statement.\n\t* sem_util.adb, sem_util.ads (Check_Later_Vs_Basic_Declarations): new\n\tprocedure called from parsing and semantics to check that basic\n\tdeclarations are not placed after later declarations\n\t(Process_End_Label): move here the check that end label is not missing\n\n2011-08-02  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Enumeration_Representation_Clause): Ignore enum\n\trepresentation clause in codepeer mode, since it confuses CodePeer and\n\tdoes not bring useful info.\n\n2011-08-02  Ed Falis  <falis@adacore.com>\n\n\t* init.c: initialize fp hw on MILS.\n\n2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* errout.adb (First_Node): for bodies, return the node itself (small\n\toptimization). For other nodes, do not check source_unit if the node\n\tcomes from Standard.\n\nFrom-SVN: r177151", "tree": {"sha": "4e98438440d868bda34ceaaef134d76e9b9cf7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e98438440d868bda34ceaaef134d76e9b9cf7a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23685ae6ecac53a9365195feaf56c986d7c2eae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23685ae6ecac53a9365195feaf56c986d7c2eae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23685ae6ecac53a9365195feaf56c986d7c2eae0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23685ae6ecac53a9365195feaf56c986d7c2eae0/comments", "author": null, "committer": null, "parents": [{"sha": "d2d9cc2290489f4ebbcf86544b806f0cd7fb59f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d9cc2290489f4ebbcf86544b806f0cd7fb59f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d9cc2290489f4ebbcf86544b806f0cd7fb59f2"}], "stats": {"total": 743, "additions": 504, "deletions": 239}, "files": [{"sha": "79c2ce742daabc6dc7027060206454cf63347339", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -1,3 +1,84 @@\n+2011-08-02  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-proc.adb, make.adb, makeutl.adb: Minor reformatting.\n+\n+2011-08-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Iterator_Loop): Code cleanup and reorganization.\n+\tSet the associated loop as the related expression of internally\n+\tgenerated cursors.\n+\t* exp_ch7.adb (Is_Container_Cursor): New routine.\n+\t(Wrap_Transient_Declaration): Supress the finalization of the list\n+\tcontroller when the declaration denotes a container cursor.\n+\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* opt.ads (SPARK_Mode): update comment, SPARK_Mode only set through\n+\tcommand line now.\n+\t* par-ch3.adb (P_Delta_Constraint): remove check in SPARK mode that the\n+\texpression is a simple expression. This check cannot be performed in\n+\tthe semantics, so just drop it.\n+\t(P_Index_Or_Discriminant_Constraint): move check that the index or\n+\tdiscriminant is a subtype mark to Analyze_Subtype_Declaration in the\n+\tsemantics. Other cases were previously checked in the semantics.\n+\t* par-ch4.adb (P_Name): move checks that a selector name is not\n+\tcharacter literal or an operator symbol to Find_Selected_Component in\n+\tthe semantics\n+\t* par-ch5.adb (Parse_Decls_Begin_End): move check that basic\n+\tdeclarations are not placed after later declarations in a separate\n+\tprocedure in Sem_Util (possibly not the best choice?), to be used both\n+\tduring parsing, for Ada 83 mode, and during semantic analysis, for\n+\tSPARK mode.\n+\t* par-endh.adb (Check_End): move check that end label is not missing\n+\tto Process_End_Label in the semantics\n+\t* par-prag.adb (Process_Restrictions_Or_Restriction_Warnings): remove\n+\tthe special case for SPARK restriction\n+\t* par.adb: use and with Sem_Util, for use in Parse_Decls_Begin_End\n+\t* restrict.adb, restrict.ads (Check_Formal_Restriction): add a\n+\tparameter Force to issue the error message even on internal node (used\n+\tfor generated end label). Call Check_Restriction to check when an error\n+\tmust be issued. In SPARK mode, issue an error message even if the\n+\trestriction is not set.\n+\t(Check_Restriction): new procedure with an additional out parameter to\n+\tinform the caller that a message has been issued\n+\t* sem_aggr.adb: Minor modification of message\n+\t* sem_attr.adb (Analyze_Attribute): call Check_Formal_Restriction\n+\tinstead of issuing an error message directly\n+\t* sem_ch3.adb (Analyze_Declarations): move here the check that basic\n+\tdeclarations are not placed after later declarations, by calling\n+\tCheck_Later_Vs_Basic_Declarations\n+\t(Analyze_Subtype_Declaration): move here the check that an index or\n+\tdiscriminant constraint must be a subtype mark. Change the check that\n+\ta subtype of String must start at one so that it works on subtype marks.\n+\t* sem_ch4.adb (Analyze_Call): move here the check that a named\n+\tassociation cannot follow a positional one in a call\n+\t* sem_ch5.adb (Check_Unreachable_Code): call Check_Formal_Restriction\n+\tinstead of issuing an error message directly\n+\t* sem_ch8.adb (Find_Selected_Component): move here the check that a\n+\tselector name is not a character literal or an operator symbol. Move\n+\there the check that the prefix of an expanded name cannot be a\n+\tsubprogram or a loop statement.\n+\t* sem_util.adb, sem_util.ads (Check_Later_Vs_Basic_Declarations): new\n+\tprocedure called from parsing and semantics to check that basic\n+\tdeclarations are not placed after later declarations\n+\t(Process_End_Label): move here the check that end label is not missing\n+\n+2011-08-02  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Enumeration_Representation_Clause): Ignore enum\n+\trepresentation clause in codepeer mode, since it confuses CodePeer and\n+\tdoes not bring useful info.\n+\n+2011-08-02  Ed Falis  <falis@adacore.com>\n+\n+\t* init.c: initialize fp hw on MILS.\n+\n+2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* errout.adb (First_Node): for bodies, return the node itself (small\n+\toptimization). For other nodes, do not check source_unit if the node\n+\tcomes from Standard.\n+\n 2011-08-02  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch3.adb: Minor comment additions."}, {"sha": "cfe1d038e1a90367d81b38af021df7faa7c29490", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -1332,6 +1332,7 @@ package body Errout is\n          --  best to just ignore this situation.\n \n          if Loc < Eloc\n+           and then Loc /= Standard_Location\n            and then Get_Source_File_Index (Loc) = Sfile\n          then\n             Earliest := Original_Node (N);\n@@ -1344,10 +1345,17 @@ package body Errout is\n    --  Start of processing for First_Node\n \n    begin\n-      Earliest := Original_Node (C);\n-      Eloc := Sloc (Earliest);\n-      Search_Tree_First (Original_Node (C));\n-      return Earliest;\n+      if Nkind (C) in N_Unit_Body\n+        or else Nkind (C) in N_Proper_Body\n+      then\n+         return C;\n+\n+      else\n+         Earliest := Original_Node (C);\n+         Eloc := Sloc (Earliest);\n+         Search_Tree_First (Original_Node (C));\n+         return Earliest;\n+      end if;\n    end First_Node;\n \n    ----------------"}, {"sha": "de277662978defe5b1736e44187e55669d997fb2", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 59, "deletions": 51, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -2859,13 +2859,10 @@ package body Exp_Ch5 is\n          --  with the obvious replacements if \"reverse\" is specified.\n \n          declare\n-            Element_Type  : constant Entity_Id := Etype (Id);\n-            Pack          : constant Entity_Id := Scope (Base_Type (Typ));\n-            Name_Init     : Name_Id;\n-            Name_Step     : Name_Id;\n-            Cond          : Node_Id;\n-            Cursor_Decl   : Node_Id;\n-            Renaming_Decl : Node_Id;\n+            Element_Type : constant Entity_Id := Etype (Id);\n+            Pack         : constant Entity_Id := Scope (Base_Type (Typ));\n+            Name_Init    : Name_Id;\n+            Name_Step    : Name_Id;\n \n          begin\n             Stats := Statements (N);\n@@ -2876,52 +2873,24 @@ package body Exp_Ch5 is\n                Cursor := Id;\n             end if;\n \n-            if Reverse_Present (I_Spec) then\n-\n-               --  Must verify that the container has a reverse iterator ???\n+            --  Must verify that the container has a reverse iterator ???\n \n+            if Reverse_Present (I_Spec) then\n                Name_Init := Name_Last;\n                Name_Step := Name_Previous;\n-\n             else\n                Name_Init := Name_First;\n                Name_Step := Name_Next;\n             end if;\n \n-            --  C : Cursor_Type := Container.First;\n-\n-            Cursor_Decl :=\n-              Make_Object_Declaration (Loc,\n-                Defining_Identifier => Cursor,\n-                Object_Definition   =>\n-                  Make_Selected_Component (Loc,\n-                    Prefix        => New_Occurrence_Of (Pack, Loc),\n-                    Selector_Name => Make_Identifier (Loc, Name_Cursor)),\n-                Expression =>\n-                  Make_Selected_Component (Loc,\n-                    Prefix        => Relocate_Node (Container),\n-                    Selector_Name => Make_Identifier (Loc, Name_Init)));\n-\n-            Insert_Action (N, Cursor_Decl);\n-\n-            --  while C /= No_Element loop\n-\n-            Cond := Make_Op_Ne (Loc,\n-                      Left_Opnd  => New_Occurrence_Of (Cursor, Loc),\n-                      Right_Opnd => Make_Selected_Component (Loc,\n-                         Prefix        => New_Occurrence_Of (Pack, Loc),\n-                         Selector_Name =>\n-                           Make_Identifier (Loc, Name_No_Element)));\n+            --  The code below only handles containers where Element is not a\n+            --  primitive operation of the container. This excludes for now the\n+            --  Hi-Lite formal containers. Generate:\n+            --\n+            --    Id : Element_Type renames Container.Element (Cursor);\n \n             if Of_Present (I_Spec) then\n-\n-               --  Id : Element_Type renames Container.Element (Cursor);\n-\n-               --  The code below only handles containers where Element is not\n-               --  a primitive operation of the container. This excludes\n-               --  for now the Hi-Lite formal containers.\n-\n-               Renaming_Decl :=\n+               Prepend_To (Stats,\n                  Make_Object_Renaming_Declaration (Loc,\n                    Defining_Identifier => Id,\n                    Subtype_Mark        =>\n@@ -2934,9 +2903,7 @@ package body Exp_Ch5 is\n                            Selector_Name =>\n                              Make_Identifier (Loc, Chars => Name_Element)),\n                        Expressions =>\n-                         New_List (New_Occurrence_Of (Cursor, Loc))));\n-\n-               Prepend (Renaming_Decl, Stats);\n+                         New_List (New_Occurrence_Of (Cursor, Loc)))));\n             end if;\n \n             --  For both iterator forms, add call to step operation (Next or\n@@ -2951,11 +2918,52 @@ package body Exp_Ch5 is\n                 Parameter_Associations =>\n                   New_List (New_Occurrence_Of (Cursor, Loc))));\n \n-            New_Loop := Make_Loop_Statement (Loc,\n-              Iteration_Scheme =>\n-                Make_Iteration_Scheme (Loc, Condition => Cond),\n-              Statements       => Stats,\n-              End_Label        => Empty);\n+            --  Generate:\n+            --    while Cursor /= No_Element loop\n+            --       <Stats>\n+            --    end loop;\n+\n+            New_Loop :=\n+              Make_Loop_Statement (Loc,\n+                Iteration_Scheme =>\n+                  Make_Iteration_Scheme (Loc,\n+                    Condition =>\n+                      Make_Op_Ne (Loc,\n+                        Left_Opnd =>\n+                          New_Occurrence_Of (Cursor, Loc),\n+                        Right_Opnd =>\n+                          Make_Selected_Component (Loc,\n+                            Prefix =>\n+                              New_Occurrence_Of (Pack, Loc),\n+                            Selector_Name =>\n+                              Make_Identifier (Loc, Name_No_Element)))),\n+                Statements => Stats,\n+                End_Label  => Empty);\n+\n+            --  When the cursor is internally generated, associate it with the\n+            --  loop statement.\n+\n+            if Of_Present (I_Spec) then\n+               Set_Ekind (Cursor, E_Variable);\n+               Set_Related_Expression (Cursor, New_Loop);\n+            end if;\n+\n+            --  Create the declaration of the cursor and insert it before the\n+            --  source loop. Generate:\n+            --\n+            --    C : Cursor_Type := Container.First;\n+\n+            Insert_Action (N,\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Cursor,\n+                Object_Definition   =>\n+                  Make_Selected_Component (Loc,\n+                    Prefix        => New_Occurrence_Of (Pack, Loc),\n+                    Selector_Name => Make_Identifier (Loc, Name_Cursor)),\n+                Expression =>\n+                  Make_Selected_Component (Loc,\n+                    Prefix        => Relocate_Node (Container),\n+                    Selector_Name => Make_Identifier (Loc, Name_Init))));\n \n             --  If the range of iteration is given by a function call that\n             --  returns a container, the finalization actions have been saved"}, {"sha": "a344d9318799f1d23c6322e683a074b7435e48bc", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 62, "deletions": 8, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -1517,9 +1517,10 @@ package body Exp_Ch7 is\n       if Present (Len_Ref) then\n          Action :=\n            Make_Implicit_If_Statement (N,\n-             Condition => Make_Op_Gt (Loc,\n-               Left_Opnd  => Len_Ref,\n-               Right_Opnd => Make_Integer_Literal (Loc, 0)),\n+             Condition =>\n+               Make_Op_Gt (Loc,\n+                 Left_Opnd  => Len_Ref,\n+                 Right_Opnd => Make_Integer_Literal (Loc, 0)),\n              Then_Statements => New_List (Action));\n       end if;\n \n@@ -3417,14 +3418,44 @@ package body Exp_Ch7 is\n    --    Finalize_One (_v2);\n \n    procedure Wrap_Transient_Declaration (N : Node_Id) is\n-      S              : Entity_Id;\n-      LC             : Entity_Id := Empty;\n-      Nodes          : List_Id;\n       Loc            : constant Source_Ptr := Sloc (N);\n-      First_Decl_Loc : Source_Ptr;\n+      Next_N         : constant Node_Id := Next (N);\n       Enclosing_S    : Entity_Id;\n+      First_Decl_Loc : Source_Ptr;\n+      LC             : Entity_Id := Empty;\n+      Nodes          : List_Id;\n+      S              : Entity_Id;\n       Uses_SS        : Boolean;\n-      Next_N         : constant Node_Id := Next (N);\n+\n+      function Is_Container_Cursor (Decl : Node_Id) return Boolean;\n+      --  Determine whether object declaration Decl is a cursor used to iterate\n+      --  over an Ada 2005/12 container.\n+\n+      -------------------------\n+      -- Is_Container_Cursor --\n+      -------------------------\n+\n+      function Is_Container_Cursor (Decl : Node_Id) return Boolean is\n+         Def_Id : constant Entity_Id := Defining_Identifier (Decl);\n+         Expr   : constant Node_Id   := Expression (Decl);\n+\n+      begin\n+         --  A cursor declaration appears in the following form:\n+         --\n+         --    Index : Pack.Cursor := First (...);\n+\n+         return\n+           Chars (Etype (Def_Id)) = Name_Cursor\n+             and then Present (Expr)\n+             and then Nkind (Expr) = N_Function_Call\n+             and then Chars (Name (Expr)) = Name_First\n+             and then\n+               (Nkind (Parent (Decl)) = N_Expression_With_Actions\n+                  or else\n+                Nkind (Related_Expression (Def_Id)) = N_Loop_Statement);\n+      end Is_Container_Cursor;\n+\n+   --  Start of processing for Wrap_Transient_Declaration\n \n    begin\n       S := Current_Scope;\n@@ -3503,6 +3534,29 @@ package body Exp_Ch7 is\n          then\n             null;\n \n+         --  The declaration of a container cursor is a special context where\n+         --  the finalization of the list controller needs to be supressed. In\n+         --  the following simplified example:\n+         --\n+         --    LC   : Simple_List_Controller;\n+         --    Temp : Ptr_Typ := Container_Creator_Function'Reference;\n+         --    Deep_Tag_Attach (Temp, LC);\n+         --    Obj  : Pack.Cursor := First (Temp.all);\n+         --    Finalize (LC);\n+         --    <execute the loop>\n+         --\n+         --  the finalization of the list controller destroys the contents of\n+         --  container Temp, and as a result Obj points to nothing. Note that\n+         --  Temp will be finalized by the finalization list of the enclosing\n+         --  scope.\n+\n+         elsif Ada_Version >= Ada_2012\n+           and then Is_Container_Cursor (N)\n+         then\n+            null;\n+\n+         --  Finalize the list controller\n+\n          else\n             Nodes :=\n               Make_Final_Call"}, {"sha": "df0bb932ca7a588a25b5f83851d7310dca0e276d", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -2026,7 +2026,7 @@ __gnat_init_float (void)\n      to get correct Ada semantics.  Note that for AE653 vThreads, the HW\n      overflow settings are an OS configuration issue.  The instructions\n      below have no effect.  */\n-#if defined (_ARCH_PPC) && !defined (_SOFT_FLOAT) && !defined (VTHREADS)\n+#if defined (_ARCH_PPC) && !defined (_SOFT_FLOAT) && (!defined (VTHREADS) || defined (__VXWORKSMILS__))\n #if defined (__SPE__)\n   {\n      const unsigned long spefscr_mask = 0xfffffff3;"}, {"sha": "642281d2fd287d3fce142efbc3cf882d374fb285", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -3823,7 +3823,8 @@ package body Make is\n             else\n                declare\n                   Parent_Directory : constant String :=\n-                    Get_Name_String (Project.Directory.Display_Name);\n+                                       Get_Name_String\n+                                         (Project.Directory.Display_Name);\n \n                begin\n                   return Parent_Directory & Path_Name;"}, {"sha": "bf352d774eba3b08b55e302d463234cb2407fddd", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -422,7 +422,7 @@ package body Makeutl is\n \n                      declare\n                         ALI_Path_Name : constant String :=\n-                          Name_Buffer (1 .. Name_Len);\n+                                          Name_Buffer (1 .. Name_Len);\n \n                      begin\n                         if Is_Regular_File"}, {"sha": "732fc4d97f8ee336bd58cf5e54254b71e987b5c6", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -1887,8 +1887,7 @@ package Opt is\n    --  belong to the ALFA subset of Ada. Set by debuf flag -gnatd.F.\n \n    SPARK_Mode : Boolean := False;\n-   --  Reject constructs not allowed by SPARK. Set by flag -gnatd.D or\n-   --  by pragma SPARK_95.\n+   --  Reject constructs not allowed by SPARK. Set by flag -gnatd.D.\n \n private\n "}, {"sha": "0d62eb8b0fa6ee934d5c6a09bc1662a074087725", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -2544,11 +2544,6 @@ package body Ch3 is\n       Expr_Node := P_Expression;\n       Check_Simple_Expression_In_Ada_83 (Expr_Node);\n \n-      if Expr_Form = EF_Non_Simple then\n-         Check_Formal_Restriction\n-           (\"this expression must be parenthesized\", Expr_Node);\n-      end if;\n-\n       Set_Delta_Expression (Constraint_Node, Expr_Node);\n \n       if Token = Tok_Range then\n@@ -3082,12 +3077,6 @@ package body Ch3 is\n \n          Expr_Node := P_Expression_Or_Range_Attribute;\n \n-         if Expr_Form /= EF_Simple_Name\n-           and then Formal_Verification_Mode\n-         then\n-            Error_Msg_SC (\"|~~subtype mark required\");\n-         end if;\n-\n          if Expr_Form = EF_Range_Attr then\n             Append (Expr_Node, Constr_List);\n "}, {"sha": "4c25c3ca649dbdb9fb51815f37e4af621def8f2b", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -209,21 +209,8 @@ package body Ch4 is\n          --  designator.\n \n          if Token not in Token_Class_Desig then\n-\n-            --  Selector name cannot be a character literal in SPARK\n-\n-            if SPARK_Mode and then Token = Tok_Char_Literal then\n-               Error_Msg_SC (\"|~~character literal cannot be prefixed\");\n-            end if;\n-\n             goto Scan_Name_Extension_Dot;\n          else\n-            --  Selector name cannot be an operator symbol in SPARK\n-\n-            if SPARK_Mode and then Token = Tok_Operator_Symbol then\n-               Error_Msg_SC (\"|~~operator symbol cannot be prefixed\");\n-            end if;\n-\n             Prefix_Node := Name_Node;\n             Name_Node := New_Node (N_Selected_Component, Prev_Token_Ptr);\n             Set_Prefix (Name_Node, Prefix_Node);\n@@ -682,11 +669,6 @@ package body Ch4 is\n             --  Test for => (allow := as error substitute)\n \n             if Token = Tok_Arrow or else Token = Tok_Colon_Equal then\n-               if SPARK_Mode then\n-                  Error_Msg_SP (\"|~~no mixing of positional and named \"\n-                                & \"parameter association\");\n-               end if;\n-\n                Restore_Scan_State (Scan_State); -- to Id\n                goto LP_State_Call;\n "}, {"sha": "373da1ff6d632380c01da1fae80e0a0cc6414571", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 2, "deletions": 51, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -2049,9 +2049,7 @@ package body Ch5 is\n \n    procedure Parse_Decls_Begin_End (Parent : Node_Id) is\n       Body_Decl    : Node_Id;\n-      Body_Sloc    : Source_Ptr;\n       Decls        : List_Id;\n-      Decl         : Node_Id;\n       Parent_Nkind : Node_Kind;\n       Spec_Node    : Node_Id;\n       HSS          : Node_Id;\n@@ -2110,55 +2108,8 @@ package body Ch5 is\n    begin\n       Decls := P_Declarative_Part;\n \n-      --  Check for misplacement of later vs basic declarations in Ada 83.\n-      --  The same is true for the SPARK mode: although SPARK 95 removes\n-      --  the distinction between initial and later declarative items,\n-      --  the distinction remains in the Examiner. (JB01-005)\n-      --  Note that the Examiner does not count package declarations in later\n-      --  declarative items.\n-\n-      if Ada_Version = Ada_83 or else SPARK_Mode then\n-         Decl := First (Decls);\n-\n-         --  Loop through sequence of basic declarative items\n-\n-         Outer : while Present (Decl) loop\n-            if Nkind (Decl) /= N_Subprogram_Body\n-              and then Nkind (Decl) /= N_Package_Body\n-              and then Nkind (Decl) /= N_Task_Body\n-              and then Nkind (Decl) not in  N_Body_Stub\n-            then\n-               Next (Decl);\n-\n-            --  Once a body is encountered, we only allow later declarative\n-            --  items. The inner loop checks the rest of the list.\n-\n-            else\n-               Body_Sloc := Sloc (Decl);\n-\n-               Inner : while Present (Decl) loop\n-                  if (Nkind (Decl) not in N_Later_Decl_Item\n-                       or else (SPARK_Mode\n-                                 and then\n-                                   Nkind (Decl) = N_Package_Declaration))\n-                    and then Nkind (Decl) /= N_Pragma\n-                  then\n-                     if Ada_Version = Ada_83 then\n-                        Error_Msg_Sloc := Body_Sloc;\n-                        Error_Msg_N\n-                          (\"(Ada 83) decl cannot appear after body#\", Decl);\n-                     else\n-                        pragma Assert (SPARK_Mode);\n-                        Error_Msg_Sloc := Body_Sloc;\n-                        Error_Msg_F\n-                          (\"|~~decl cannot appear after body#\", Decl);\n-                     end if;\n-                  end if;\n-\n-                  Next (Decl);\n-               end loop Inner;\n-            end if;\n-         end loop Outer;\n+      if Ada_Version = Ada_83 then\n+         Check_Later_Vs_Basic_Declarations (Decls, During_Parsing => True);\n       end if;\n \n       --  Here is where we deal with the case of IS used instead of semicolon."}, {"sha": "84833cd8dd3e1e8633a84ce1ca181804a951caa7", "filename": "gcc/ada/par-endh.adb", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-endh.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-endh.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-endh.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -374,17 +374,6 @@ package body Endh is\n                   Set_Comes_From_Source (End_Labl, False);\n                   End_Labl_Present := False;\n \n-                  --  In SPARK mode, no missing label is allowed\n-\n-                  if SPARK_Mode\n-                    and then End_Type = E_Name\n-                    and then Explicit_Start_Label (Scope.Last)\n-                  then\n-                     Error_Msg_Node_1 := Scope.Table (Scope.Last).Labl;\n-                     Error_Msg_SP -- CODEFIX\n-                       (\"|~~`END &` required\");\n-                  end if;\n-\n                   --  Do style check for missing label\n \n                   if Style_Check"}, {"sha": "b3dab608a32a277559c3b664036819ac2b1c7874", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -89,11 +89,11 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n \n    procedure Process_Restrictions_Or_Restriction_Warnings;\n    --  Common processing for Restrictions and Restriction_Warnings pragmas.\n-   --  This routine only processes the cases of No_Obsolescent_Features and\n-   --  SPARK, which are the only restrictions that have syntactic effects. No\n-   --  general error checking is done, since this will be done in Sem_Prag. The\n-   --  other case processed is pragma Restrictions No_Dependence, since\n-   --  otherwise this is done too late.\n+   --  This routine only processes the case of No_Obsolescent_Features, which\n+   --  is the only restriction that has syntactic effects. No general error\n+   --  checking is done, since this will be done in Sem_Prag. The other case\n+   --  processed is pragma Restrictions No_Dependence, since otherwise this is\n+   --  done too late.\n \n    ----------\n    -- Arg1 --\n@@ -230,10 +230,6 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n                   Set_Restriction (No_Obsolescent_Features, Pragma_Node);\n                   Restriction_Warnings (No_Obsolescent_Features) :=\n                     Prag_Id = Pragma_Restriction_Warnings;\n-               when SPARK =>\n-                  SPARK_Mode := True;\n-                  Set_Error_Msg_Lang (\"spark\");\n-                  Formal_Verification_Mode := True;\n                when others =>\n                   null;\n             end case;"}, {"sha": "1f5eb5797bd7132d98436b102a2ec334c378af3d", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -41,6 +41,7 @@ with Par_SCO;  use Par_SCO;\n with Restrict; use Restrict;\n with Scans;    use Scans;\n with Scn;      use Scn;\n+with Sem_Util; use Sem_Util;\n with Sinput;   use Sinput;\n with Sinput.L; use Sinput.L;\n with Sinfo;    use Sinfo;"}, {"sha": "f007a718948ef3663fbab5e8164891686e9a0e0b", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -2694,7 +2694,6 @@ package body Prj.Proc is\n                          Virtual_Prefix\n             then\n                Project.Virtual := True;\n-\n             end if;\n \n             Project.Path.Display_Name :="}, {"sha": "1190f690b215dea2ecc718f69e8f2da234a84016", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -109,24 +109,59 @@ package body Restrict is\n    -- Check_Formal_Restriction --\n    ------------------------------\n \n-   procedure Check_Formal_Restriction (Msg : String; N : Node_Id) is\n+   procedure Check_Formal_Restriction\n+     (Msg   : String;\n+      N     : Node_Id;\n+      Force : Boolean := False)\n+   is\n+      Msg_Issued          : Boolean;\n+      Save_Error_Msg_Sloc : Source_Ptr;\n    begin\n-      if Formal_Verification_Mode\n-        and then Comes_From_Source (Original_Node (N))\n-      then\n-         Error_Msg_F (\"|~~\" & Msg, N);\n+      if Force or else Comes_From_Source (Original_Node (N)) then\n+\n+         --  Since the call to Restriction_Msg from Check_Restriction may set\n+         --  Error_Msg_Sloc to the location of the pragma restriction, save and\n+         --  restore the previous value of the global variable around the call.\n+\n+         --  ??? N in call to Check_Restriction should be First_Node (N), but\n+         --  this causes an exception to be raised when analyzing osint.adb.\n+         --  To be modified.\n+\n+         Save_Error_Msg_Sloc := Error_Msg_Sloc;\n+         Check_Restriction (Msg_Issued, SPARK, N);  --  N -> First_Node (N)\n+         Error_Msg_Sloc := Save_Error_Msg_Sloc;\n+\n+         if Msg_Issued then\n+            Error_Msg_F (\"\\\\| \" & Msg, N);\n+         elsif SPARK_Mode then\n+            Error_Msg_F (\"|~~\" & Msg, N);\n+         end if;\n       end if;\n    end Check_Formal_Restriction;\n \n    procedure Check_Formal_Restriction (Msg1, Msg2 : String; N : Node_Id) is\n+      Msg_Issued          : Boolean;\n+      Save_Error_Msg_Sloc : Source_Ptr;\n    begin\n       pragma Assert (Msg2'Length /= 0 and then Msg2 (Msg2'First) = '\\');\n \n-      if Formal_Verification_Mode\n-        and then Comes_From_Source (Original_Node (N))\n-      then\n-         Error_Msg_F (\"|~~\" & Msg1, N);\n-         Error_Msg_F (Msg2, N);\n+      if Comes_From_Source (Original_Node (N)) then\n+\n+         --  Since the call to Restriction_Msg from Check_Restriction may set\n+         --  Error_Msg_Sloc to the location of the pragma restriction, save and\n+         --  restore the previous value of the global variable around the call.\n+\n+         Save_Error_Msg_Sloc := Error_Msg_Sloc;\n+         Check_Restriction (Msg_Issued, SPARK, First_Node (N));\n+         Error_Msg_Sloc := Save_Error_Msg_Sloc;\n+\n+         if Msg_Issued then\n+            Error_Msg_F (\"\\\\| \" & Msg1, N);\n+            Error_Msg_F (Msg2, N);\n+         elsif SPARK_Mode then\n+            Error_Msg_F (\"|~~\" & Msg1, N);\n+            Error_Msg_F (Msg2, N);\n+         end if;\n       end if;\n    end Check_Formal_Restriction;\n \n@@ -255,6 +290,18 @@ package body Restrict is\n      (R : Restriction_Id;\n       N : Node_Id;\n       V : Uint := Uint_Minus_1)\n+   is\n+      Msg_Issued : Boolean;\n+      pragma Unreferenced (Msg_Issued);\n+   begin\n+      Check_Restriction (Msg_Issued, R, N, V);\n+   end Check_Restriction;\n+\n+   procedure Check_Restriction\n+     (Msg_Issued : out Boolean;\n+      R          : Restriction_Id;\n+      N          : Node_Id;\n+      V          : Uint := Uint_Minus_1)\n    is\n       VV : Integer;\n       --  V converted to integer form. If V is greater than Integer'Last,\n@@ -323,6 +370,8 @@ package body Restrict is\n    --  Start of processing for Check_Restriction\n \n    begin\n+      Msg_Issued := False;\n+\n       --  In CodePeer mode, we do not want to check for any restriction, or set\n       --  additional restrictions other than those already set in gnat1drv.adb\n       --  so that we have consistency between each compilation.\n@@ -386,6 +435,7 @@ package body Restrict is\n                    and then Restrictions.Value (R) = 0)\n         or else Restrictions.Count (R) > Restrictions.Value (R)\n       then\n+         Msg_Issued := True;\n          Restriction_Msg (R, N);\n       end if;\n    end Check_Restriction;"}, {"sha": "f0dcb31f2755fb6741f6e6f3d8179f93226622b6", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -195,11 +195,13 @@ package Restrict is\n    --  If a restriction exists post error message at the given node.\n \n    procedure Check_Restriction\n-     (R : Restriction_Id;\n-      N : Node_Id;\n-      V : Uint := Uint_Minus_1);\n+     (Msg_Issued : out Boolean;\n+      R          : Restriction_Id;\n+      N          : Node_Id;\n+      V          : Uint := Uint_Minus_1);\n    --  Checks that the given restriction is not set, and if it is set, an\n-   --  appropriate message is posted on the given node. Also records the\n+   --  appropriate message is posted on the given node, in which case\n+   --  Msg_Issued is set to True (and False otherwise). Also records the\n    --  violation in the appropriate internal arrays. Note that it is mandatory\n    --  to always use this routine to check if a restriction is violated. Such\n    --  checks must never be done directly by the caller, since otherwise\n@@ -208,6 +210,13 @@ package Restrict is\n    --  indicates the exact count for the violation. If the exact count is not\n    --  known, V is left at its default of -1 which indicates an unknown count.\n \n+   procedure Check_Restriction\n+     (R          : Restriction_Id;\n+      N          : Node_Id;\n+      V          : Uint := Uint_Minus_1);\n+   --  Wrapper on Check_Restriction with Msg_Issued, with the out-parameter\n+   --  being ignored here.\n+\n    procedure Check_Restriction_No_Dependence (U : Node_Id; Err : Node_Id);\n    --  Called when a dependence on a unit is created (either implicitly, or by\n    --  an explicit WITH clause). U is a node for the unit involved, and Err\n@@ -219,11 +228,14 @@ package Restrict is\n    --  an elaboration routine. If elaboration code is not allowed, an error\n    --  message is posted on the node given as argument.\n \n-   procedure Check_Formal_Restriction (Msg : String; N : Node_Id);\n+   procedure Check_Formal_Restriction\n+     (Msg   : String;\n+      N     : Node_Id;\n+      Force : Boolean := False);\n    --  Node N represents a construct not allowed in formal mode. If this is a\n-   --  source node, then an error is issued on N (using Err_Msg_F), prepending\n-   --  \"|~~\" (error not serious, language prepended). Call has no effect if\n-   --  not in formal mode, or if N does not come originally from source.\n+   --  source node, or if the restriction is forced (Force = True), and the\n+   --  SPARK restriction is set, then an error is issued on N. Msg is appended\n+   --  to the restriction failure message.\n \n    procedure Check_Formal_Restriction (Msg1, Msg2 : String; N : Node_Id);\n    --  Same as Check_Formal_Restriction except there is a continuation message"}, {"sha": "d76c35f7d58e271683737446a082d9d0c13d061e", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -3173,7 +3173,7 @@ package body Sem_Aggr is\n \n          if Present (Expressions (N)) then\n             Check_Formal_Restriction\n-              (\"named association cannot follow positional association\",\n+              (\"named association cannot follow positional one\",\n                First (Choices (First (Component_Associations (N)))));\n          end if;\n "}, {"sha": "4ff4ff4e68c02db6dcde48c76196bfa3381f20ec", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -2071,16 +2071,15 @@ package body Sem_Attr is\n       --  In SPARK or ALFA, attributes of private types are only allowed if\n       --  the full type declaration is visible.\n \n-      if Formal_Verification_Mode\n-        and then Comes_From_Source (Original_Node (N))\n-        and then Is_Entity_Name (P)\n+      if Is_Entity_Name (P)\n+        and then Present (Entity (P))  --  needed in some cases\n         and then Is_Type (Entity (P))\n         and then Is_Private_Type (P_Type)\n         and then not In_Open_Scopes (Scope (P_Type))\n         and then not In_Spec_Expression\n       then\n-         Error_Msg_FE\n-           (\"|~~invisible attribute of}\", N, First_Subtype (P_Type));\n+         Error_Msg_Node_1 := First_Subtype (P_Type);\n+         Check_Formal_Restriction (\"invisible attribute of}\", N);\n       end if;\n \n       --  Remaining processing depends on attribute"}, {"sha": "901b9e033dc77292217589231dde6cfbfd628b55", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -2843,7 +2843,7 @@ package body Sem_Ch13 is\n       --  Pointer to node for literal providing max value\n \n    begin\n-      if Ignore_Rep_Clauses then\n+      if Ignore_Rep_Clauses or else CodePeer_Mode then\n          return;\n       end if;\n "}, {"sha": "16a6b7dc77f872b4d0f95232863906d1f87660f6", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 45, "deletions": 28, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -1782,7 +1782,7 @@ package body Sem_Ch3 is\n       Enter_Name (Id);\n \n       if Present (Typ) then\n-         if Nkind (Typ) /= N_Identifier then\n+         if not Nkind_In (Typ, N_Identifier, N_Expanded_Name) then\n             Check_Formal_Restriction (\"subtype mark required\", Typ);\n          end if;\n \n@@ -2038,6 +2038,10 @@ package body Sem_Ch3 is\n    --  Start of processing for Analyze_Declarations\n \n    begin\n+      if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n+         Check_Later_Vs_Basic_Declarations (L, During_Parsing => False);\n+      end if;\n+\n       D := First (L);\n       while Present (D) loop\n \n@@ -3032,11 +3036,11 @@ package body Sem_Ch3 is\n       --  mark and shall not be unconstrained. (The only exception to this\n       --  is the admission of declarations of constants of type String.)\n \n-      if not Nkind_In (Object_Definition (N), N_Identifier,\n-                                              N_Expanded_Name)\n+      if not\n+        Nkind_In (Object_Definition (N), N_Identifier, N_Expanded_Name)\n       then\n          Check_Formal_Restriction\n-           (\"subtype mark expected\", Object_Definition (N));\n+           (\"subtype mark required\", Object_Definition (N));\n \n       elsif Is_Array_Type (T)\n         and then not Is_Constrained (T)\n@@ -3171,7 +3175,9 @@ package body Sem_Ch3 is\n \n          if Nkind (Original_Node (N)) = N_Object_Declaration\n            and then Comes_From_Source (Original_Node (N))\n-           and then Formal_Verification_Mode  --  only call test if needed\n+           --  only call test if needed\n+           and then (Formal_Verification_Mode\n+                      or else Restriction_Check_Required (SPARK))\n            and then not Is_SPARK_Initialization_Expr (E)\n          then\n             Check_Formal_Restriction\n@@ -4015,34 +4021,45 @@ package body Sem_Ch3 is\n            (\"subtype of Boolean cannot have constraint\", N);\n       end if;\n \n-      --  String subtype must have a lower bound of 1 in SPARK/ALFA. Note that\n-      --  we do not need to test for the non-static case here, since that was\n-      --  already taken care of in Process_Range_Expr_In_Decl.\n-\n-      if Base_Type (T) = Standard_String\n-        and then Nkind (Subtype_Indication (N)) = N_Subtype_Indication\n-      then\n+      if Nkind (Subtype_Indication (N)) = N_Subtype_Indication then\n          declare\n-            Cstr   : constant Node_Id := Constraint (Subtype_Indication (N));\n-            Drange : Node_Id;\n-            Low    : Node_Id;\n+            Cstr     : constant Node_Id := Constraint (Subtype_Indication (N));\n+            One_Cstr : Node_Id;\n+            Low      : Node_Id;\n+            High     : Node_Id;\n \n          begin\n-            if Nkind (Cstr) = N_Index_Or_Discriminant_Constraint\n-              and then List_Length (Constraints (Cstr)) = 1\n-            then\n-               Drange := First (Constraints (Cstr));\n+            if Nkind (Cstr) = N_Index_Or_Discriminant_Constraint then\n+               One_Cstr := First (Constraints (Cstr));\n+               while Present (One_Cstr) loop\n \n-               if Nkind (Drange) = N_Range then\n-                  Low := Low_Bound (Drange);\n+                  --  Index or discriminant constraint in SPARK or ALFA must be\n+                  --  a subtype mark.\n \n-                  if Is_OK_Static_Expression (Low)\n-                    and then Expr_Value (Low) /= 1\n+                  if not\n+                    Nkind_In (One_Cstr, N_Identifier, N_Expanded_Name)\n                   then\n                      Check_Formal_Restriction\n-                       (\"String subtype must have lower bound of 1\", N);\n+                       (\"subtype mark required\", One_Cstr);\n+\n+                  --  String subtype must have a lower bound of 1 in SPARK.\n+                  --  Note that we do not need to test for the non-static case\n+                  --  here, since that was already taken care of in\n+                  --  Process_Range_Expr_In_Decl.\n+\n+                  elsif Base_Type (T) = Standard_String then\n+                     Get_Index_Bounds (One_Cstr, Low, High);\n+\n+                     if Is_OK_Static_Expression (Low)\n+                       and then Expr_Value (Low) /= 1\n+                     then\n+                        Check_Formal_Restriction\n+                          (\"String subtype must have lower bound of 1\", N);\n+                     end if;\n                   end if;\n-               end if;\n+\n+                  Next (One_Cstr);\n+               end loop;\n             end if;\n          end;\n       end if;\n@@ -4573,14 +4590,14 @@ package body Sem_Ch3 is\n       --  as prefix.\n \n       if No (T) then\n-         Related_Id :=  Defining_Identifier (P);\n+         Related_Id := Defining_Identifier (P);\n       else\n          Related_Id := T;\n       end if;\n \n       Nb_Index := 1;\n       while Present (Index) loop\n-         if Nkind (Index) /= N_Identifier then\n+         if not Nkind_In (Index, N_Identifier, N_Expanded_Name) then\n             Check_Formal_Restriction (\"subtype mark required\", Index);\n          end if;\n \n@@ -4655,7 +4672,7 @@ package body Sem_Ch3 is\n       --  Process subtype indication if one is present\n \n       if Present (Component_Typ) then\n-         if Nkind (Component_Typ) /= N_Identifier then\n+         if not Nkind_In (Component_Typ, N_Identifier, N_Expanded_Name) then\n             Check_Formal_Restriction (\"subtype mark required\", Component_Typ);\n          end if;\n "}, {"sha": "f0b5dd600b0a1e00dbea055e39c0db9379f176cd", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -788,6 +788,10 @@ package body Sem_Ch4 is\n       --  Flag indicates whether an interpretation of the prefix is a\n       --  parameterless call that returns an access_to_subprogram.\n \n+      procedure Check_Mixed_Parameter_And_Named_Associations;\n+      --  Check that parameter and named associations are not mixed. This is\n+      --  a restriction in SPARK mode.\n+\n       function Name_Denotes_Function return Boolean;\n       --  If the type of the name is an access to subprogram, this may be the\n       --  type of a name, or the return type of the function being called. If\n@@ -798,6 +802,33 @@ package body Sem_Ch4 is\n       procedure No_Interpretation;\n       --  Output error message when no valid interpretation exists\n \n+      --------------------------------------------------\n+      -- Check_Mixed_Parameter_And_Named_Associations --\n+      --------------------------------------------------\n+\n+      procedure Check_Mixed_Parameter_And_Named_Associations is\n+         Actual     : Node_Id;\n+         Named_Seen : Boolean;\n+      begin\n+         Actual := First (Actuals);\n+         Named_Seen := False;\n+         while Present (Actual) loop\n+            case Nkind (Actual) is\n+               when N_Parameter_Association =>\n+                  if Named_Seen then\n+                     Check_Formal_Restriction\n+                       (\"named association cannot follow positional one\",\n+                        Actual);\n+                     exit;\n+                  end if;\n+               when others =>\n+                  Named_Seen := True;\n+            end case;\n+\n+            Next (Actual);\n+         end loop;\n+      end Check_Mixed_Parameter_And_Named_Associations;\n+\n       ---------------------------\n       -- Name_Denotes_Function --\n       ---------------------------\n@@ -855,6 +886,10 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Call\n \n    begin\n+      if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n+         Check_Mixed_Parameter_And_Named_Associations;\n+      end if;\n+\n       --  Initialize the type of the result of the call to the error type,\n       --  which will be reset if the type is successfully resolved.\n \n@@ -1887,8 +1922,7 @@ package body Sem_Ch4 is\n       ---------------------------\n \n       procedure Process_Function_Call is\n-         Actual : Node_Id;\n-\n+         Actual     : Node_Id;\n       begin\n          Change_Node (N, N_Function_Call);\n          Set_Name (N, P);"}, {"sha": "4c92b6ed0b9c63eb7136a6015b948bd35c985ed4", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -37,6 +37,7 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Restrict; use Restrict;\n+with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n@@ -2501,8 +2502,8 @@ package body Sem_Ch5 is\n    ----------------------------\n \n    procedure Check_Unreachable_Code (N : Node_Id) is\n-      Error_Loc : Source_Ptr;\n-      P         : Node_Id;\n+      Error_Node : Node_Id;\n+      P          : Node_Id;\n \n    begin\n       if Is_List_Member (N)\n@@ -2518,7 +2519,10 @@ package body Sem_Ch5 is\n             --  someone could branch to the label, so we just ignore it, unless\n             --  we are in formal mode where goto statements are not allowed.\n \n-            if Nkind (Nxt) = N_Label and then not Formal_Verification_Mode then\n+            if Nkind (Nxt) = N_Label\n+              and then not (Formal_Verification_Mode\n+                             or else Restriction_Check_Required (SPARK))\n+            then\n                return;\n \n             --  Otherwise see if we have a real statement following us\n@@ -2539,7 +2543,7 @@ package body Sem_Ch5 is\n                   --  at removing warnings in deleted code, and this is one\n                   --  warning we would prefer NOT to have removed.\n \n-                  Error_Loc := Sloc (Nxt);\n+                  Error_Node := Nxt;\n \n                   --  If we have unreachable code, analyze and remove the\n                   --  unreachable code, since it is useless and we don't\n@@ -2574,11 +2578,11 @@ package body Sem_Ch5 is\n \n                   --  Now issue the warning (or error in formal mode)\n \n-                  if Formal_Verification_Mode then\n-                     Error_Msg\n-                       (\"|~~unreachable code is not allowed\", Error_Loc);\n+                  if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n+                     Check_Formal_Restriction\n+                       (\"unreachable code is not allowed\", Error_Node);\n                   else\n-                     Error_Msg (\"?unreachable code!\", Error_Loc);\n+                     Error_Msg (\"?unreachable code!\", Sloc (Error_Node));\n                   end if;\n                end if;\n "}, {"sha": "a07449c009736b1c1768e38c8a1102f9f0da708f", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -5345,13 +5345,26 @@ package body Sem_Ch8 is\n \n       if Nkind (P) = N_Error then\n          return;\n+      end if;\n+\n+      --  Selector name cannot be a character literal or an operator symbol in\n+      --  SPARK.\n+\n+      if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n+         if Nkind (Selector_Name (N)) = N_Character_Literal then\n+            Check_Formal_Restriction\n+              (\"character literal cannot be prefixed\", N);\n+         elsif Nkind (Selector_Name (N)) = N_Operator_Symbol then\n+            Check_Formal_Restriction (\"operator symbol cannot be prefixed\", N);\n+         end if;\n+      end if;\n \n       --  If the selector already has an entity, the node has been constructed\n       --  in the course of expansion, and is known to be valid. Do not verify\n       --  that it is defined for the type (it may be a private component used\n       --  in the expansion of record equality).\n \n-      elsif Present (Entity (Selector_Name (N))) then\n+      if Present (Entity (Selector_Name (N))) then\n          if No (Etype (N))\n            or else Etype (N) = Any_Type\n          then\n@@ -5474,13 +5487,13 @@ package body Sem_Ch8 is\n \n          --  Selector name is restricted in SPARK\n \n-         if SPARK_Mode then\n+         if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n             if Is_Subprogram (P_Name) then\n-               Error_Msg_F\n-                 (\"|~~prefix of expanded name cannot be a subprogram\", P);\n+               Check_Formal_Restriction\n+                 (\"prefix of expanded name cannot be a subprogram\", P);\n             elsif Ekind (P_Name) = E_Loop then\n-               Error_Msg_F\n-                 (\"|~~prefix of expanded name cannot be a loop statement\", P);\n+               Check_Formal_Restriction\n+                 (\"prefix of expanded name cannot be a loop statement\", P);\n             end if;\n          end if;\n "}, {"sha": "a16c06a7113db97f6af6b3f625272b7fbdbdd0bf", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 69, "deletions": 1, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -41,6 +41,7 @@ with Nlists;   use Nlists;\n with Output;   use Output;\n with Opt;      use Opt;\n with Restrict; use Restrict;\n+with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n@@ -1100,6 +1101,61 @@ package body Sem_Util is\n       end if;\n    end Cannot_Raise_Constraint_Error;\n \n+   ---------------------------------------\n+   -- Check_Later_Vs_Basic_Declarations --\n+   ---------------------------------------\n+\n+   procedure Check_Later_Vs_Basic_Declarations\n+     (Decls          : List_Id;\n+      During_Parsing : Boolean)\n+   is\n+      Body_Sloc : Source_Ptr;\n+      Decl      : Node_Id;\n+   begin\n+      Decl := First (Decls);\n+\n+      --  Loop through sequence of basic declarative items\n+\n+      Outer : while Present (Decl) loop\n+         if Nkind (Decl) /= N_Subprogram_Body\n+           and then Nkind (Decl) /= N_Package_Body\n+           and then Nkind (Decl) /= N_Task_Body\n+           and then Nkind (Decl) not in N_Body_Stub\n+         then\n+            Next (Decl);\n+\n+            --  Once a body is encountered, we only allow later declarative\n+            --  items. The inner loop checks the rest of the list.\n+\n+         else\n+            Body_Sloc := Sloc (Decl);\n+\n+            Inner : while Present (Decl) loop\n+               if (Nkind (Decl) not in N_Later_Decl_Item\n+                    or else (not During_Parsing\n+                              and then\n+                                Nkind (Decl) = N_Package_Declaration))\n+                 and then Nkind (Decl) /= N_Pragma\n+               then\n+                  if During_Parsing then\n+                     if Ada_Version = Ada_83 then\n+                        Error_Msg_Sloc := Body_Sloc;\n+                        Error_Msg_N\n+                          (\"(Ada 83) decl cannot appear after body#\", Decl);\n+                     end if;\n+                  else\n+                     Error_Msg_Sloc := Body_Sloc;\n+                     Check_Formal_Restriction\n+                       (\"decl cannot appear after body#\", Decl);\n+                  end if;\n+               end if;\n+\n+               Next (Decl);\n+            end loop Inner;\n+         end if;\n+      end loop Outer;\n+   end Check_Later_Vs_Basic_Declarations;\n+\n    -----------------------------------------\n    -- Check_Dynamically_Tagged_Expression --\n    -----------------------------------------\n@@ -10478,7 +10534,7 @@ package body Sem_Util is\n    procedure Process_End_Label\n      (N   : Node_Id;\n       Typ : Character;\n-      Ent  : Entity_Id)\n+      Ent : Entity_Id)\n    is\n       Loc  : Source_Ptr;\n       Nam  : Node_Id;\n@@ -10629,6 +10685,18 @@ package body Sem_Util is\n \n          Get_Decoded_Name_String (Chars (Endl));\n          Set_Sloc (Endl, Sloc (Endl) + Source_Ptr (Name_Len));\n+\n+      else\n+         --  In SPARK mode, no missing label is allowed for packages and\n+         --  subprogram bodies. Detect those cases by testing whether\n+         --  Process_End_Label was called for a body (Typ = 't') or a package.\n+\n+         if (SPARK_Mode or else Restriction_Check_Required (SPARK))\n+           and then (Typ = 't' or else Ekind (Ent) = E_Package)\n+         then\n+            Error_Msg_Node_1 := Endl;\n+            Check_Formal_Restriction (\"`END &` required\", Endl, Force => True);\n+         end if;\n       end if;\n \n       --  Now generate the e/t reference"}, {"sha": "c52b68a507e3c4a61cf0cfe22443371c066c3c0d", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23685ae6ecac53a9365195feaf56c986d7c2eae0/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=23685ae6ecac53a9365195feaf56c986d7c2eae0", "patch": "@@ -146,6 +146,16 @@ package Sem_Util is\n    --  not necessarily mean that CE could be raised, but a response of True\n    --  means that for sure CE cannot be raised.\n \n+   procedure Check_Later_Vs_Basic_Declarations\n+     (Decls          : List_Id;\n+      During_Parsing : Boolean);\n+   --  If During_Parsing is True, check for misplacement of later vs basic\n+   --  declarations in Ada 83. If During_Parsing is False, and the SPARK\n+   --  restriction is set, do the same: although SPARK 95 removes the\n+   --  distinction between initial and later declarative items, the distinction\n+   --  remains in the Examiner (JB01-005). Note that the Examiner does not\n+   --  count package declarations in later declarative items.\n+\n    procedure Check_Dynamically_Tagged_Expression\n      (Expr        : Node_Id;\n       Typ         : Entity_Id;"}]}