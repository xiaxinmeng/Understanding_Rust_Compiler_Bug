{"sha": "b14454ba1a4d273021e354ff30f02f754fedb121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE0NDU0YmExYTRkMjczMDIxZTM1NGZmMzBmMDJmNzU0ZmVkYjEyMQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-08-18T00:58:52Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-08-18T00:58:52Z"}, "message": "re PR c++/16215 (Bad error message when requesting member of non-aggregate type)\n\n\tPR c++/16215\n\t* parser.c (cp_parser_name_lookup_error): If parser->object_scope\n\tis set use it for diagnostic purposes.\n\t(cp_parser_pseudo_destructor_name): Remove special-case error\n\tmessage.\n\nFrom-SVN: r86165", "tree": {"sha": "0862611a0d7c0e5c5d262db48bfcabfa622dc7e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0862611a0d7c0e5c5d262db48bfcabfa622dc7e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b14454ba1a4d273021e354ff30f02f754fedb121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b14454ba1a4d273021e354ff30f02f754fedb121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b14454ba1a4d273021e354ff30f02f754fedb121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b14454ba1a4d273021e354ff30f02f754fedb121/comments", "author": null, "committer": null, "parents": [{"sha": "f2d16e4add400632f577c96c9ff59e58075d88a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d16e4add400632f577c96c9ff59e58075d88a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d16e4add400632f577c96c9ff59e58075d88a5"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "c7ff194f0d7912ba764a69ef39a5e9014da93b72", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b14454ba1a4d273021e354ff30f02f754fedb121/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b14454ba1a4d273021e354ff30f02f754fedb121/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b14454ba1a4d273021e354ff30f02f754fedb121", "patch": "@@ -1,5 +1,11 @@\n 2004-08-17  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/16215\n+\t* parser.c (cp_parser_name_lookup_error): If parser->object_scope\n+\tis set use it for diagnostic purposes.\n+\t(cp_parser_pseudo_destructor_name): Remove special-case error\n+\tmessage.\n+\n \tPR c++/15871\n \t* semantics.c (expand_or_defer_fn): Honor -fkeep-inline-functions.\n "}, {"sha": "999c528f638d2867a61f6827949441ac3e10635e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b14454ba1a4d273021e354ff30f02f754fedb121/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b14454ba1a4d273021e354ff30f02f754fedb121/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=b14454ba1a4d273021e354ff30f02f754fedb121", "patch": "@@ -2018,6 +2018,13 @@ cp_parser_name_lookup_error (cp_parser* parser,\n \t       parser->scope, name);\n       else if (parser->scope == global_namespace)\n \terror (\"`::%D' has not been declared\", name);\n+      else if (parser->object_scope \n+\t       && !CLASS_TYPE_P (parser->object_scope))\n+\terror (\"request for member `%D' in non-class type `%T'\",\n+\t       name, parser->object_scope);\n+      else if (parser->object_scope)\n+\terror (\"`%T::%D' has not been declared\", \n+\t       parser->object_scope, name);\n       else\n \terror (\"`%D' has not been declared\", name);\n     }\n@@ -4488,6 +4495,9 @@ cp_parser_pseudo_destructor_name (cp_parser* parser,\n {\n   bool nested_name_specifier_p;\n \n+  /* Assume that things will not work out.  */\n+  *type = error_mark_node;\n+\n   /* Look for the optional `::' operator.  */\n   cp_parser_global_scope_opt (parser, /*current_scope_valid_p=*/true);\n   /* Look for the optional nested-name-specifier.  */\n@@ -4520,17 +4530,18 @@ cp_parser_pseudo_destructor_name (cp_parser* parser,\n       /* Look for the type-name.  */\n       *scope = TREE_TYPE (cp_parser_type_name (parser));\n \n-      /* If we didn't get an aggregate type, or we don't have ::~,\n-\t then something has gone wrong.  Since the only caller of this\n-\t function is looking for something after `.' or `->' after a\n-\t scalar type, most likely the program is trying to get a\n-\t member of a non-aggregate type.  */\n-      if (*scope == error_mark_node\n-\t  || cp_lexer_next_token_is_not (parser->lexer, CPP_SCOPE)\n+      if (*scope == error_mark_node)\n+\treturn;\n+\n+      /* If we don't have ::~, then something has gone wrong.  Since\n+\t the only caller of this function is looking for something\n+\t after `.' or `->' after a scalar type, most likely the\n+\t program is trying to get a member of a non-aggregate\n+\t type.  */\n+      if (cp_lexer_next_token_is_not (parser->lexer, CPP_SCOPE)\n \t  || cp_lexer_peek_nth_token (parser->lexer, 2)->type != CPP_COMPL)\n \t{\n \t  cp_parser_error (parser, \"request for member of non-aggregate type\");\n-\t  *type = error_mark_node;\n \t  return;\n \t}\n "}]}