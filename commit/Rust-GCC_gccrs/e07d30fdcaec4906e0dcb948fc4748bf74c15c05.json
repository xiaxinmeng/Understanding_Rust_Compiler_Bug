{"sha": "e07d30fdcaec4906e0dcb948fc4748bf74c15c05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA3ZDMwZmRjYWVjNDkwNmUwZGNiOTQ4ZmM0NzQ4YmY3NGMxNWMwNQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-20T19:08:39Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-20T19:10:11Z"}, "message": "Handle all UBSAN built-ins in -Wuninitialized [PR101300].\n\nResolves:\nPR middle-end/101300 - -fsanitize=undefined suppresses -Wuninitialized for a VLA read at -O0\n\ngcc/ChangeLog:\n\tPR middle-end/101300\n\t* tree-ssa-uninit.c (check_defs): Handle UBSAN built-ins.\n\ngcc/testsuite/ChangeLog:\n\tPR middle-end/101300\n\t* gcc.dg/uninit-pr101300.c: New test.", "tree": {"sha": "37a8b2ec1c97700e2e63b2af4e278332715eb49a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37a8b2ec1c97700e2e63b2af4e278332715eb49a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e07d30fdcaec4906e0dcb948fc4748bf74c15c05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07d30fdcaec4906e0dcb948fc4748bf74c15c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e07d30fdcaec4906e0dcb948fc4748bf74c15c05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07d30fdcaec4906e0dcb948fc4748bf74c15c05/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "818203714e8640ce29c886b5060c91b12ad3a7c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818203714e8640ce29c886b5060c91b12ad3a7c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/818203714e8640ce29c886b5060c91b12ad3a7c4"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "4392e8bae4fe93d5b3b6764c7ebd3bc9d2fd3d5d", "filename": "gcc/testsuite/gcc.dg/uninit-pr101300.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07d30fdcaec4906e0dcb948fc4748bf74c15c05/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr101300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07d30fdcaec4906e0dcb948fc4748bf74c15c05/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr101300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr101300.c?ref=e07d30fdcaec4906e0dcb948fc4748bf74c15c05", "patch": "@@ -0,0 +1,53 @@\n+/* PR middle-end/101300 - -fsanitize=undefined suppresses -Wuninitialized\n+   for a VLA read at -O0\n+   { dg-do compile }\n+   { dg-options \"-O0 -Wall -fsanitize=undefined\" } */\n+\n+int warn_vla_rd0 (int n)\n+{\n+  char a[n];\n+  return a[0];      // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+}\n+\n+int warn_vla_rd1 (int n)\n+{\n+  char a[n];\n+  return a[1];      // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+}\n+\n+int warn_vla_rdi (int n, int i)\n+{\n+  char a[n];\n+  return a[i];      // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+}\n+\n+\n+int warn_vla_wr0_rd2_1_0 (int n)\n+{\n+  char a[n];\n+  a[0] = __LINE__;\n+  int x = a[2];     // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+  int y = a[1];     // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+  int z = a[0];\n+  return x + y + z;\n+}\n+\n+int warn_vla_wr1_rd2_1_0 (int n)\n+{\n+  char a[n];\n+  a[1] = __LINE__;\n+  int x = a[2];     // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+  int y = a[1];\n+  int z = a[0];     // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+  return x + y + z;\n+}\n+\n+int warn_vla_wr2_rd2_1_0 (int n)\n+{\n+  char a[n];\n+  a[2] = __LINE__;\n+  int x = a[2];\n+  int y = a[1];     // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+  int z = a[0];     // { dg-warning \"\\\\\\[-Wuninitialized]\" }\n+  return x + y + z;\n+}"}, {"sha": "148f3c2b31dda9a310298d762215f39e29854e34", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07d30fdcaec4906e0dcb948fc4748bf74c15c05/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07d30fdcaec4906e0dcb948fc4748bf74c15c05/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=e07d30fdcaec4906e0dcb948fc4748bf74c15c05", "patch": "@@ -228,9 +228,26 @@ check_defs (ao_ref *ref, tree vdef, void *data_)\n   gimple *def_stmt = SSA_NAME_DEF_STMT (vdef);\n \n   /* The ASAN_MARK intrinsic doesn't modify the variable.  */\n-  if (is_gimple_call (def_stmt)\n-      && gimple_call_internal_p (def_stmt, IFN_ASAN_MARK))\n-    return false;\n+  if (is_gimple_call (def_stmt))\n+    {\n+      if (gimple_call_internal_p (def_stmt)\n+\t  && gimple_call_internal_fn (def_stmt) == IFN_ASAN_MARK)\n+       return false;\n+\n+      if (tree fndecl = gimple_call_fndecl (def_stmt))\n+       {\n+\t /* Some sanitizer calls pass integer arguments to built-ins\n+\t    that expect pointers.  Avoid using gimple_call_builtin_p()\n+\t    which fails for such calls.  */\n+\t if (DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL)\n+\t   {\n+\t     built_in_function fncode = DECL_FUNCTION_CODE (fndecl);\n+\t     if (fncode > BEGIN_SANITIZER_BUILTINS\n+\t\t && fncode < END_SANITIZER_BUILTINS)\n+\t       return false;\n+\t   }\n+       }\n+    }\n \n   /* End of VLA scope is not a kill.  */\n   if (gimple_call_builtin_p (def_stmt, BUILT_IN_STACK_RESTORE))"}]}