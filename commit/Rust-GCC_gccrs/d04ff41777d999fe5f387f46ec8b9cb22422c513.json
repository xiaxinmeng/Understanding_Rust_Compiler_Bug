{"sha": "d04ff41777d999fe5f387f46ec8b9cb22422c513", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA0ZmY0MTc3N2Q5OTlmZTVmMzg3ZjQ2ZWM4YjljYjIyNDIyYzUxMw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-09-02T21:00:38Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-09-02T21:00:38Z"}, "message": "re PR c/67432 (Improve error message on empty enum)\n\n\tPR c/67432\n\t* c-parser.c (c_parser_enum_specifier): Give a better error for\n\tan empty enum.\n\n\t* gcc.dg/pr67432.c: New test.\n\nFrom-SVN: r227421", "tree": {"sha": "3901f7d42cdbd8c3a98a30c77f0966011f7cd54d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3901f7d42cdbd8c3a98a30c77f0966011f7cd54d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d04ff41777d999fe5f387f46ec8b9cb22422c513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04ff41777d999fe5f387f46ec8b9cb22422c513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d04ff41777d999fe5f387f46ec8b9cb22422c513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d04ff41777d999fe5f387f46ec8b9cb22422c513/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db3015e9e3b5bd8bae0cf6c629f4f8333a01f855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3015e9e3b5bd8bae0cf6c629f4f8333a01f855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db3015e9e3b5bd8bae0cf6c629f4f8333a01f855"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "47461d18578695716d03e5f91c19f230a2b77f74", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04ff41777d999fe5f387f46ec8b9cb22422c513/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04ff41777d999fe5f387f46ec8b9cb22422c513/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d04ff41777d999fe5f387f46ec8b9cb22422c513", "patch": "@@ -1,3 +1,9 @@\n+2015-09-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67432\n+\t* c-parser.c (c_parser_enum_specifier): Give a better error for\n+\tan empty enum.\n+\n 2015-08-18  Trevor Saunders  <tbsaunde@tbsaunde.org>\n \n \t* c-aux-info.c, c-parser.c, c-tree.h: Remove useless typedefs."}, {"sha": "11a2b0f9731c186032f5fc7e06c1a2f7b27b4be7", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04ff41777d999fe5f387f46ec8b9cb22422c513/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04ff41777d999fe5f387f46ec8b9cb22422c513/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=d04ff41777d999fe5f387f46ec8b9cb22422c513", "patch": "@@ -2555,7 +2555,16 @@ c_parser_enum_specifier (c_parser *parser)\n \t  location_t decl_loc, value_loc;\n \t  if (c_parser_next_token_is_not (parser, CPP_NAME))\n \t    {\n-\t      c_parser_error (parser, \"expected identifier\");\n+\t      /* Give a nicer error for \"enum {}\".  */\n+\t      if (c_parser_next_token_is (parser, CPP_CLOSE_BRACE)\n+\t\t  && !parser->error)\n+\t\t{\n+\t\t  error_at (c_parser_peek_token (parser)->location,\n+\t\t\t    \"empty enum is invalid\");\n+\t\t  parser->error = true;\n+\t\t}\n+\t      else\n+\t\tc_parser_error (parser, \"expected identifier\");\n \t      c_parser_skip_until_found (parser, CPP_CLOSE_BRACE, NULL);\n \t      values = error_mark_node;\n \t      break;"}, {"sha": "04328535a034abf749fa9603bca264e3fb38cd6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04ff41777d999fe5f387f46ec8b9cb22422c513/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04ff41777d999fe5f387f46ec8b9cb22422c513/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d04ff41777d999fe5f387f46ec8b9cb22422c513", "patch": "@@ -1,3 +1,8 @@\n+2015-09-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67432\n+\t* gcc.dg/pr67432.c: New test.\n+\n 2015-09-02  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* lib/target-supports.exp (clear_effective_target_cache): New."}, {"sha": "74367a97251e297da1fb6c7c7217f6432ff74f18", "filename": "gcc/testsuite/gcc.dg/pr67432.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d04ff41777d999fe5f387f46ec8b9cb22422c513/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67432.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d04ff41777d999fe5f387f46ec8b9cb22422c513/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67432.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67432.c?ref=d04ff41777d999fe5f387f46ec8b9cb22422c513", "patch": "@@ -0,0 +1,6 @@\n+/* PR c/67432 */\n+/* { dg-do compile } */\n+\n+enum {}; /* { dg-error \"empty enum is invalid\" } */\n+enum E {}; /* { dg-error \"empty enum is invalid\" } */\n+enum F {} e; /* { dg-error \"empty enum is invalid\" } */"}]}