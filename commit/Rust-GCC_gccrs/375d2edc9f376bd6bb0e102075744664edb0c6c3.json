{"sha": "375d2edc9f376bd6bb0e102075744664edb0c6c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1ZDJlZGM5ZjM3NmJkNmJiMGUxMDIwNzU3NDQ2NjRlZGIwYzZjMw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-09-10T19:03:13Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-09-10T19:03:13Z"}, "message": "dbxout.c (dbxout_block): Update for current_function_func_begin_label a string.\n\n\t* dbxout.c (dbxout_block): Update for\n\tcurrent_function_func_begin_label a string.\n\t* dwarf2out.c (dwarf2out_begin_prologue): Likewise.\n\t* except.c (dw2_output_call_site_table): Likewise.\n\t* toplev.c (current_function_func_begin_label): Likewise.\n\t* tree.h (current_function_func_begin_label): Likewise.\n\t* config/rs6000/linux64.h (DBX_OUTPUT_BRAC): Likewise.\n\nFrom-SVN: r87317", "tree": {"sha": "1e94e6ae42e1b69753445c8709d3b5658b924507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e94e6ae42e1b69753445c8709d3b5658b924507"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375d2edc9f376bd6bb0e102075744664edb0c6c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375d2edc9f376bd6bb0e102075744664edb0c6c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375d2edc9f376bd6bb0e102075744664edb0c6c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375d2edc9f376bd6bb0e102075744664edb0c6c3/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c383c15f2961771877e363073e38ef371405f0dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c383c15f2961771877e363073e38ef371405f0dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c383c15f2961771877e363073e38ef371405f0dc"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "ca41511f1c835c2d3461c5a014242d56b66baf51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=375d2edc9f376bd6bb0e102075744664edb0c6c3", "patch": "@@ -1,5 +1,13 @@\n 2004-09-10  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* dbxout.c (dbxout_block): Update for\n+\tcurrent_function_func_begin_label a string.\n+\t* dwarf2out.c (dwarf2out_begin_prologue): Likewise.\n+\t* except.c (dw2_output_call_site_table): Likewise.\n+\t* toplev.c (current_function_func_begin_label): Likewise.\n+\t* tree.h (current_function_func_begin_label): Likewise.\n+\t* config/rs6000/linux64.h (DBX_OUTPUT_BRAC): Likewise.\n+\n \t* final.c (output_asm_insn): Use strtoul instead of atoi, save a\n \tloop.\n "}, {"sha": "bdd0b98babfb41ba706d8485404256a1de18bfaf", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=375d2edc9f376bd6bb0e102075744664edb0c6c3", "patch": "@@ -499,10 +499,9 @@ while (0)\n       fprintf (FILE, \"%s%d,0,0,\", ASM_STABN_OP, BRAC);\t\t\t\\\n       assemble_name (FILE, NAME);\t\t\t\t\t\\\n       putc ('-', FILE);\t\t\t\t\t\t\t\\\n-      if (current_function_func_begin_label != NULL_TREE)\t\t\\\n+      if (current_function_func_begin_label != NULL)\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n-\t  s = IDENTIFIER_POINTER (current_function_func_begin_label);\t\\\n-\t  assemble_name (FILE, s);\t\t\t\t\t\\\n+\t  assemble_name (FILE, current_function_func_begin_label);\t\\\n \t}\t\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\"}, {"sha": "9527c1de26dfc4a72f61bfb639bc5a4ac98f7401", "filename": "gcc/dbxout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=375d2edc9f376bd6bb0e102075744664edb0c6c3", "patch": "@@ -3174,8 +3174,8 @@ static void\n dbxout_block (tree block, int depth, tree args)\n {\n   const char *begin_label;\n-  if (current_function_func_begin_label != NULL_TREE)\n-    begin_label = IDENTIFIER_POINTER (current_function_func_begin_label);\n+  if (current_function_func_begin_label != NULL)\n+    begin_label = current_function_func_begin_label;\n   else\n     begin_label = XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0);\n "}, {"sha": "25f4b2523da01a1962f03b54f8aa803ecc3b7034", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=375d2edc9f376bd6bb0e102075744664edb0c6c3", "patch": "@@ -2334,9 +2334,10 @@ dwarf2out_begin_prologue (unsigned int line ATTRIBUTE_UNUSED,\n \t\t\t  const char *file ATTRIBUTE_UNUSED)\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n+  char * dup_label;\n   dw_fde_ref fde;\n \n-  current_function_func_begin_label = 0;\n+  current_function_func_begin_label = NULL;\n \n #ifdef TARGET_UNWIND_INFO\n   /* ??? current_function_func_begin_label is also used by except.c\n@@ -2355,7 +2356,8 @@ dwarf2out_begin_prologue (unsigned int line ATTRIBUTE_UNUSED,\n \t\t\t       current_function_funcdef_no);\n   ASM_OUTPUT_DEBUG_LABEL (asm_out_file, FUNC_BEGIN_LABEL,\n \t\t\t  current_function_funcdef_no);\n-  current_function_func_begin_label = get_identifier (label);\n+  dup_label = xstrdup (label);\n+  current_function_func_begin_label = dup_label;\n \n #ifdef TARGET_UNWIND_INFO\n   /* We can elide the fde allocation if we're not emitting debug info.  */\n@@ -2379,7 +2381,7 @@ dwarf2out_begin_prologue (unsigned int line ATTRIBUTE_UNUSED,\n   /* Add the new FDE at the end of the fde_table.  */\n   fde = &fde_table[fde_table_in_use++];\n   fde->decl = current_function_decl;\n-  fde->dw_fde_begin = xstrdup (label);\n+  fde->dw_fde_begin = dup_label;\n   fde->dw_fde_current_label = NULL;\n   fde->dw_fde_end = NULL;\n   fde->dw_fde_cfi = NULL;"}, {"sha": "9e3c06df18a80461b3e206cc02d5c40f2690f1d9", "filename": "gcc/except.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=375d2edc9f376bd6bb0e102075744664edb0c6c3", "patch": "@@ -3476,8 +3476,6 @@ sjlj_size_of_call_site_table (void)\n static void\n dw2_output_call_site_table (void)\n {\n-  const char *const function_start_lab\n-    = IDENTIFIER_POINTER (current_function_func_begin_label);\n   int n = cfun->eh->call_site_data_used;\n   int i;\n \n@@ -3500,21 +3498,25 @@ dw2_output_call_site_table (void)\n       /* ??? Perhaps use attr_length to choose data1 or data2 instead of\n \t data4 if the function is small enough.  */\n #ifdef HAVE_AS_LEB128\n-      dw2_asm_output_delta_uleb128 (reg_start_lab, function_start_lab,\n+      dw2_asm_output_delta_uleb128 (reg_start_lab,\n+\t\t\t\t    current_function_func_begin_label,\n \t\t\t\t    \"region %d start\", i);\n       dw2_asm_output_delta_uleb128 (reg_end_lab, reg_start_lab,\n \t\t\t\t    \"length\");\n       if (cs->landing_pad)\n-\tdw2_asm_output_delta_uleb128 (landing_pad_lab, function_start_lab,\n+\tdw2_asm_output_delta_uleb128 (landing_pad_lab,\n+\t\t\t\t      current_function_func_begin_label,\n \t\t\t\t      \"landing pad\");\n       else\n \tdw2_asm_output_data_uleb128 (0, \"landing pad\");\n #else\n-      dw2_asm_output_delta (4, reg_start_lab, function_start_lab,\n+      dw2_asm_output_delta (4, reg_start_lab,\n+\t\t\t    current_function_func_begin_label,\n \t\t\t    \"region %d start\", i);\n       dw2_asm_output_delta (4, reg_end_lab, reg_start_lab, \"length\");\n       if (cs->landing_pad)\n-\tdw2_asm_output_delta (4, landing_pad_lab, function_start_lab,\n+\tdw2_asm_output_delta (4, landing_pad_lab,\n+\t\t\t      current_function_func_begin_label,\n \t\t\t      \"landing pad\");\n       else\n \tdw2_asm_output_data (4, 0, \"landing pad\");"}, {"sha": "bf7ae20b0d93062f23745582b4b4a657bef3e516", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=375d2edc9f376bd6bb0e102075744664edb0c6c3", "patch": "@@ -220,9 +220,9 @@ int optimize_size = 0;\n    or 0 if between functions.  */\n tree current_function_decl;\n \n-/* Set to the FUNC_BEGIN label of the current function, or NULL_TREE\n+/* Set to the FUNC_BEGIN label of the current function, or NULL\n    if none.  */\n-tree current_function_func_begin_label;\n+const char * current_function_func_begin_label;\n \n /* Temporarily suppress certain warnings.\n    This is set while reading code from a system header file.  */"}, {"sha": "461b86769785332bc715a96c844a6ff4b01e70d9", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375d2edc9f376bd6bb0e102075744664edb0c6c3/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=375d2edc9f376bd6bb0e102075744664edb0c6c3", "patch": "@@ -3350,7 +3350,7 @@ extern int pedantic_lvalues;\n extern GTY(()) tree current_function_decl;\n \n /* Nonzero means a FUNC_BEGIN label was emitted.  */\n-extern GTY(()) tree current_function_func_begin_label;\n+extern GTY(()) const char * current_function_func_begin_label;\n \f\n /* In tree.c */\n extern unsigned crc32_string (unsigned, const char *);"}]}