{"sha": "a53a893b4fe04ec966a4ec178ee8f394426a5dad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUzYTg5M2I0ZmUwNGVjOTY2YTRlYzE3OGVlOGYzOTQ0MjZhNWRhZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-02-01T19:58:44Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-02-01T19:58:44Z"}, "message": "PR c++/88325 - ICE with invalid out-of-line template member definition.\n\n\t* parser.c (cp_parser_class_name): Don't call make_typename_type\n\tfor overloads.\n\n\t* g++.dg/cpp2a/typename14.C: New test.\n\nFrom-SVN: r268455", "tree": {"sha": "c7b2750b3f0cc06cf5e61cbc27076d19f5ed4c01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7b2750b3f0cc06cf5e61cbc27076d19f5ed4c01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a53a893b4fe04ec966a4ec178ee8f394426a5dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53a893b4fe04ec966a4ec178ee8f394426a5dad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a53a893b4fe04ec966a4ec178ee8f394426a5dad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53a893b4fe04ec966a4ec178ee8f394426a5dad/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e71ac163553c47c516d2d5e77ba5fedce6ceec47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71ac163553c47c516d2d5e77ba5fedce6ceec47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e71ac163553c47c516d2d5e77ba5fedce6ceec47"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "f0545aee116804286201f1189ae3352f54015a55", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53a893b4fe04ec966a4ec178ee8f394426a5dad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53a893b4fe04ec966a4ec178ee8f394426a5dad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a53a893b4fe04ec966a4ec178ee8f394426a5dad", "patch": "@@ -1,3 +1,9 @@\n+2019-02-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88325 - ICE with invalid out-of-line template member definition.\n+\t* parser.c (cp_parser_class_name): Don't call make_typename_type\n+\tfor overloads.\n+\n 2019-02-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/87175"}, {"sha": "ffecce4e29b2e17aae6e8cd39ff11e72dcc9a1c8", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53a893b4fe04ec966a4ec178ee8f394426a5dad/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53a893b4fe04ec966a4ec178ee8f394426a5dad/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=a53a893b4fe04ec966a4ec178ee8f394426a5dad", "patch": "@@ -23167,7 +23167,9 @@ cp_parser_class_name (cp_parser *parser,\n   decl = cp_parser_maybe_treat_template_as_class (decl, class_head_p);\n \n   /* If this is a typename, create a TYPENAME_TYPE.  */\n-  if (typename_p && decl != error_mark_node)\n+  if (typename_p\n+      && decl != error_mark_node\n+      && !is_overloaded_fn (decl))\n     {\n       decl = make_typename_type (scope, decl, typename_type,\n \t\t\t\t /*complain=*/tf_error);"}, {"sha": "1df9ba2674d62c4b336afdb88925e4e424d8b8c4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53a893b4fe04ec966a4ec178ee8f394426a5dad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53a893b4fe04ec966a4ec178ee8f394426a5dad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a53a893b4fe04ec966a4ec178ee8f394426a5dad", "patch": "@@ -1,3 +1,8 @@\n+2019-02-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88325 - ICE with invalid out-of-line template member definition.\n+\t* g++.dg/cpp2a/typename14.C: New test.\n+\n 2019-02-01  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/88597"}, {"sha": "4750db35cd84702639fb9585bcc896322c8f3b7d", "filename": "gcc/testsuite/g++.dg/cpp2a/typename14.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53a893b4fe04ec966a4ec178ee8f394426a5dad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ftypename14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53a893b4fe04ec966a4ec178ee8f394426a5dad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ftypename14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ftypename14.C?ref=a53a893b4fe04ec966a4ec178ee8f394426a5dad", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/88325\n+// { dg-do compile { target c++2a } }\n+\n+template<typename> struct A\n+{\n+  template<typename> A ();\n+};\n+\n+template<typename T>\n+template<typename U>\n+A<T>::A<U> () // { dg-error \"partial specialization\" }\n+{\n+}\n+\n+template<typename> struct B\n+{\n+  template<typename> int foo (int);\n+};\n+\n+template<typename T>\n+template<typename U>\n+B<T>::foo<int>(int) // { dg-error \"partial specialization|declaration\" }\n+{\n+  return 1;\n+}"}]}