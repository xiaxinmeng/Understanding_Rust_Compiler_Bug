{"sha": "afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZlOGQ3MDFiYThmNWQwNGU1YWMzN2EwMGMxMWE1YjdhODk3NjAzMA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2005-06-30T18:05:10Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2005-06-30T18:05:10Z"}, "message": "JdwpPacket.java (write): New method.\n\n        * gnu/classpath/jdwp/transport/JdwpPacket.java (write): New method.\n        (myWrite): New abstract method.\n        (toBytes): Remove.\n        (myToBytes): Remove.\n        * gnu/classpath/jdwp/transport/JdwpReplyPacket.java (myWrite): New\n        method.\n        * gnu/classpath/jdwp/transport/JdwpCommandPacket.java (myWrite): New\n        method.\n        * gnu/classpath/jdwp/transport/JdwpConnection.java (sendPacket): Use\n        JdwpPacket.write instead of JdwpPacket.toBytes.\n\nFrom-SVN: r101472", "tree": {"sha": "7f2fd1aa54ab3a56979ca29988cc9656e8cb9cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f2fd1aa54ab3a56979ca29988cc9656e8cb9cd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b0618bfe6193985baadba89c5eedfbb7730eda3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0618bfe6193985baadba89c5eedfbb7730eda3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0618bfe6193985baadba89c5eedfbb7730eda3"}], "stats": {"total": 103, "additions": 53, "deletions": 50}, "files": [{"sha": "3fec4a04a5ebdaf0077adab097d7fa3d589bffcd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "patch": "@@ -1,3 +1,16 @@\n+2005-06-30  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/transport/JdwpPacket.java (write): New method.\n+\t(myWrite): New abstract method.\n+\t(toBytes): Remove.\n+\t(myToBytes): Remove.\n+\t* gnu/classpath/jdwp/transport/JdwpReplyPacket.java (myWrite): New\n+\tmethod.\n+\t* gnu/classpath/jdwp/transport/JdwpCommandPacket.java (myWrite): New\n+\tmethod.\n+\t* gnu/classpath/jdwp/transport/JdwpConnection.java (sendPacket): Use\n+\tJdwpPacket.write instead of JdwpPacket.toBytes.\n+\n 2005-06-30  Keith Seitz  <keiths@redhat.com>\n \n \t* gnu/classpath/jdwp/transport/JdwpConnection.java (sendEvent): New"}, {"sha": "e99159aad9b469b3e94e5e021c6aec90d19f7aeb", "filename": "libjava/gnu/classpath/jdwp/transport/JdwpCommandPacket.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpCommandPacket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpCommandPacket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpCommandPacket.java?ref=afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "patch": "@@ -39,6 +39,9 @@\n \n package gnu.classpath.jdwp.transport;\n \n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n /**\n  * A class representing a JDWP command packet.\n  * This class adds command set and command to the packet header\n@@ -137,13 +140,10 @@ protected int myFromBytes (byte[] bytes, int index)\n   }\n \n   // Writes the command packet data into the given buffer\n-  protected int myToBytes (byte[] bytes, int index)\n+  protected void myWrite (DataOutputStream dos)\n+    throws IOException\n   {\n-    // Need to add command set & command\n-    int i = 0;\n-    bytes[index + i++] = getCommandSet ();\n-    bytes[index + i++] = getCommand ();\n-\n-    return i;\n+    dos.writeByte (getCommandSet ());\n+    dos.writeByte (getCommand ());\n   }\n }"}, {"sha": "18250d3209b7e4dff96c06c64fa2441a35557ad5", "filename": "libjava/gnu/classpath/jdwp/transport/JdwpConnection.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java?ref=afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "patch": "@@ -258,8 +258,7 @@ public JdwpPacket getPacket ()\n   public void sendPacket (JdwpPacket pkt)\n     throws IOException\n   {\n-    byte[] data = pkt.toBytes ();\n-    _outStream.write (data, 0, data.length);\n+    pkt.write (_outStream);\n   }\n \n   /**"}, {"sha": "7fa93e2de1b3ad8256aff3a7d27025a7b97c73c5", "filename": "libjava/gnu/classpath/jdwp/transport/JdwpPacket.java", "status": "modified", "additions": 25, "deletions": 33, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpPacket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpPacket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpPacket.java?ref=afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "patch": "@@ -39,6 +39,9 @@\n \n package gnu.classpath.jdwp.transport;\n \n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n /**\n  * All command and reply packets in JDWP share\n  * common header type information:\n@@ -238,49 +241,38 @@ else if ((flags & JDWP_FLAG_REPLY) != 0)\n     return null;\n   }\n \n-  // Put subclass information into bytes\n-  protected abstract int myToBytes (byte[] bytes, int index);\n+  /**\n+   * Put subclass information onto the stream\n+   *\n+   * @param dos the output stream to which to write\n+   */\n+  protected abstract void myWrite (DataOutputStream dos)\n+    throws IOException;\n \n-  // Convert this packet to it byte representation (ready to send on the wire)\n-  // NOTE: All integers should be big-endian.\n-  public byte[] toBytes ()\n+  /**\n+   * Writes the packet to the output stream\n+   *\n+   * @param dos  the output stream to which to write the packet\n+   */\n+  public void write (DataOutputStream dos)\n+    throws IOException\n   {\n-    // Allocate a new array to hold contents of packet\n-    int length = getLength ();\n-    byte[] bytes = new byte[length];\n-\t\n-    int i = 0;\n-\n-    //\n-    // Packet layout: length, id, flags, packet-specific, data (optional)\n-    //\n-\n     // length\n-    bytes[i++] = (byte) (length >>> 24);\n-    bytes[i++] = (byte) (length >>> 16);\n-    bytes[i++] = (byte) (length >>> 8);\n-    bytes[i++] = (byte) length;\n+    int length = getLength ();\n+    dos.writeInt (length);\n \n-    // id\n-    bytes[i++] = (byte) (getId () >>> 24);\n-    bytes[i++] = (byte) (getId () >>> 16);\n-    bytes[i++] = (byte) (getId () >>> 8);\n-    bytes[i++] = (byte) getId ();\n+    // ID\n+    dos.writeInt (getId ());\n \n     // flag\n-    bytes[i++] = getFlags ();\n+    dos.writeByte (getFlags ());\n \n     // packet-specific stuff\n-    i += myToBytes (bytes, i);\n+    myWrite (dos);\n \n     // data (if any)\n     byte[] data = getData ();\n-    if (data.length > 0 && i < length)\n-      {\n-\t// Would it pay to be over cautious?\n-\tSystem.arraycopy (data, 0, bytes, i, data.length);\n-      }\n-\n-    return bytes;\n+    if (data != null && data.length > 0)\n+      dos.write (data, 0, data.length);\n   }\n }"}, {"sha": "06d1aff7a74efe704c69e859ff0c420463d513ed", "filename": "libjava/gnu/classpath/jdwp/transport/JdwpReplyPacket.java", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpReplyPacket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe8d701ba8f5d04e5ac37a00c11a5b7a8976030/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpReplyPacket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpReplyPacket.java?ref=afe8d701ba8f5d04e5ac37a00c11a5b7a8976030", "patch": "@@ -39,6 +39,9 @@\n \n package gnu.classpath.jdwp.transport;\n \n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+\n /**\n  * A class represents a JDWP reply packet.\n  * This class adds an error code to the packet header information\n@@ -115,13 +118,9 @@ protected int myFromBytes (byte[] bytes, int index)\n   }\n \n   // Writes the command packet data into the given buffer\n-  protected int myToBytes (byte[] bytes, int index)\n-  {\n-    // Need to add error code\n-    int i = 0;\n-    bytes[index + i++] = (byte) (getErrorCode () >>> 8);\n-    bytes[index + i++] = (byte) getErrorCode ();\n-    \n-    return i;\n+  protected void myWrite (DataOutputStream dos)\n+    throws IOException\n+ {\n+    dos.writeShort (getErrorCode ());\n   }\n }"}]}