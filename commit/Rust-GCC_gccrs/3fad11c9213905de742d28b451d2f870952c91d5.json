{"sha": "3fad11c9213905de742d28b451d2f870952c91d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZhZDExYzkyMTM5MDVkZTc0MmQyOGI0NTFkMmY4NzA5NTJjOTFkNQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-12T12:37:26Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-12T12:37:26Z"}, "message": "(convert_modes): Declared.\n\nFrom-SVN: r5308", "tree": {"sha": "edfe356c6b3403eac205f96398a2084ab4fa0373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edfe356c6b3403eac205f96398a2084ab4fa0373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fad11c9213905de742d28b451d2f870952c91d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fad11c9213905de742d28b451d2f870952c91d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fad11c9213905de742d28b451d2f870952c91d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fad11c9213905de742d28b451d2f870952c91d5/comments", "author": null, "committer": null, "parents": [{"sha": "588e387f1465b58cb05f1b0f34ed2094e7dc2aac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/588e387f1465b58cb05f1b0f34ed2094e7dc2aac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/588e387f1465b58cb05f1b0f34ed2094e7dc2aac"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "0ba407693aa47f12c9b34bfb144745f5756abb18", "filename": "gcc/expr.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fad11c9213905de742d28b451d2f870952c91d5/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fad11c9213905de742d28b451d2f870952c91d5/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=3fad11c9213905de742d28b451d2f870952c91d5", "patch": "@@ -584,6 +584,9 @@ extern void convert_move PROTO((rtx, rtx, int));\n /* Convert an rtx to specified machine mode and return the result.  */\n extern rtx convert_to_mode PROTO((enum machine_mode, rtx, int));\n \n+/* Convert an rtx to MODE from OLDMODE and return the result.  */\n+extern rtx convert_modes PROTO((enum machine_mode, enum machine_mode, rtx, int));\n+\n /* Emit code to move a block Y to a block X.  */\n extern void emit_block_move PROTO((rtx, rtx, rtx, int));\n "}]}