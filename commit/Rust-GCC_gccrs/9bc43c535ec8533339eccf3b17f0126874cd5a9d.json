{"sha": "9bc43c535ec8533339eccf3b17f0126874cd5a9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJjNDNjNTM1ZWM4NTMzMzM5ZWNjZjNiMTdmMDEyNjg3NGNkNWE5ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-01-13T11:51:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-01-13T11:51:34Z"}, "message": "[multiple changes]\n\n2004-01-13  Ed Schonberg  <schonberg@gnat.com>\n\n\t* exp_ch3.adb (Build_Assignment): Fix bug in handling of controlled\n\tcomponents that are initialized with aggregates.\n\n2004-01-13  Vincent Celier  <celier@gnat.com>\n\n\t* gnatlink.adb (Process_Binder_File): To find directory of shared\n\tlibgcc, if \"gcc-lib\" is not a subdirectory, look for the last\n\tsubdirectory \"lib\" in the path of the shared libgnat or libgnarl.\n\n\t* make.adb (Gnatmake): If GCC version is at least 3, link with\n\t-shared-libgcc, when there is at least one shared library project.\n\n\t* opt.ads (GCC_Version): New integer constant.\n\n\t* adaint.c (get_gcc_version): New function.\n\n2004-01-13  Robert Dewar  <dewar@gnat.com>\n\n\t* sem_dist.adb, sem_res.adb, sem_util.adb,\n\tsprint.adb, 3zsocthi.adb, einfo.adb, cstand.adb,\n\texp_ch4.adb, exp_ch9.adb, exp_dist.adb: Minor reformatting\n\n2004-01-13  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* s-interr.adb, s-stache.adb, s-taenca.adb, g-regpat.adb,\n\tg-spitbo.adb, 5itaprop.adb: Add missing 'constant' keywords in object\n\tdeclarations.\n\nFrom-SVN: r75802", "tree": {"sha": "6815f7bd6ae4c52b808b0e67e421256c4df38f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6815f7bd6ae4c52b808b0e67e421256c4df38f67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bc43c535ec8533339eccf3b17f0126874cd5a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc43c535ec8533339eccf3b17f0126874cd5a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bc43c535ec8533339eccf3b17f0126874cd5a9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc43c535ec8533339eccf3b17f0126874cd5a9d/comments", "author": null, "committer": null, "parents": [{"sha": "0115e4700b7956d1a125fe88114989cc173e293e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0115e4700b7956d1a125fe88114989cc173e293e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0115e4700b7956d1a125fe88114989cc173e293e"}], "stats": {"total": 191, "additions": 150, "deletions": 41}, "files": [{"sha": "28e22418847ce5db9f1839c682e99754dc55a877", "filename": "gcc/ada/3zsocthi.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2F3zsocthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2F3zsocthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3zsocthi.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -64,7 +64,7 @@ package body GNAT.Sockets.Thin is\n    Thread_Blocking_IO : Boolean := True;\n \n    Unknown_System_Error : constant C.Strings.chars_ptr :=\n-     C.Strings.New_String (\"Unknown system error\");\n+                            C.Strings.New_String (\"Unknown system error\");\n \n    --  The following types and variables are required to create a Hostent\n    --  record \"by hand\"."}, {"sha": "54a6b488939e1b5b7f40475005f1d12e0047e17d", "filename": "gcc/ada/5itaprop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2F5itaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2F5itaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5itaprop.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -201,7 +201,7 @@ package body System.Task_Primitives.Operations is\n    procedure Abort_Handler (signo : Signal) is\n       pragma Unreferenced (signo);\n \n-      Self_Id : Task_ID := Self;\n+      Self_Id : constant Task_ID := Self;\n       Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n "}, {"sha": "4d8f668c94a3e8931c2f22db7d3f3ae8d654db9e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -1,3 +1,33 @@\n+2004-01-13  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_ch3.adb (Build_Assignment): Fix bug in handling of controlled\n+\tcomponents that are initialized with aggregates.\n+\n+2004-01-13  Vincent Celier  <celier@gnat.com>\n+\n+\t* gnatlink.adb (Process_Binder_File): To find directory of shared\n+\tlibgcc, if \"gcc-lib\" is not a subdirectory, look for the last\n+\tsubdirectory \"lib\" in the path of the shared libgnat or libgnarl.\n+\n+\t* make.adb (Gnatmake): If GCC version is at least 3, link with\n+\t-shared-libgcc, when there is at least one shared library project.\n+\n+\t* opt.ads (GCC_Version): New integer constant.\n+\n+\t* adaint.c (get_gcc_version): New function.\n+\n+2004-01-13  Robert Dewar  <dewar@gnat.com>\n+\n+\t* sem_dist.adb, sem_res.adb, sem_util.adb,\n+\tsprint.adb, 3zsocthi.adb, einfo.adb, cstand.adb,\n+\texp_ch4.adb, exp_ch9.adb, exp_dist.adb: Minor reformatting\n+\n+2004-01-13  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* s-interr.adb, s-stache.adb, s-taenca.adb, g-regpat.adb,\n+\tg-spitbo.adb, 5itaprop.adb: Add missing 'constant' keywords in object\n+\tdeclarations.\n+\n 2004-01-12  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* misc.c: Remove trailing spaces."}, {"sha": "6c3f71a6dfc5692a3f22a1dd42538fc9c792ee46", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2003, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2004, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -2487,3 +2487,11 @@ __gnat_lseek (int fd, long offset, int whence)\n {\n   return (int) lseek (fd, offset, whence);\n }\n+\n+/* This function returns the version of GCC being used.  Here it's GCC 3.  */\n+int\n+get_gcc_version (void)\n+{\n+  return 3;\n+}\n+"}, {"sha": "5d812e732ab502983a8fe93f6ca5858e1dc6ab00", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -559,6 +559,7 @@ package body CStand is\n       --  Create type definition node for type String\n \n       Tdef_Node := New_Node (N_Unconstrained_Array_Definition, Stloc);\n+\n       declare\n          CompDef_Node : Node_Id;\n       begin\n@@ -567,6 +568,7 @@ package body CStand is\n          Set_Subtype_Indication (CompDef_Node, Identifier_For (S_Character));\n          Set_Component_Definition (Tdef_Node, CompDef_Node);\n       end;\n+\n       Set_Subtype_Marks      (Tdef_Node, New_List);\n       Append (Identifier_For (S_Positive), Subtype_Marks (Tdef_Node));\n       Set_Type_Definition (Parent (Standard_String), Tdef_Node);"}, {"sha": "e9a0ddce3a5083915d2b70a37758645b9b35647a", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -6,14 +6,14 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A CPARTICULAR PURPOSE.  See the GNU General Public License --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n -- for  more details.  You should have  received  a copy of the GNU General --\n -- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n -- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --"}, {"sha": "42d158624433a5a6a0a11d1473972158c4fb7334", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -1527,7 +1527,7 @@ package body Exp_Ch3 is\n          --  aggregate that will be expanded inline\n \n          if Kind = N_Qualified_Expression then\n-            Kind := Nkind (Parent (N));\n+            Kind := Nkind (Expression (N));\n          end if;\n \n          if Controlled_Type (Typ)"}, {"sha": "1f2640d2206a7d30b4de0acd4d084762d38d7b90", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -654,7 +654,8 @@ package body Exp_Ch4 is\n \n       Comp : RE_Id;\n \n-      Stg_Unit_Is_Byte : constant Boolean := System_Storage_Unit = Byte'Size;\n+      Byte_Addressable : constant Boolean := System_Storage_Unit = Byte'Size;\n+      --  True for byte addressable target\n \n       function Length_Less_Than_4 (Opnd : Node_Id) return Boolean;\n       --  Returns True if the length of the given operand is known to be\n@@ -707,7 +708,7 @@ package body Exp_Ch4 is\n       --  addressing of array components.\n \n       if not Is_Bit_Packed_Array (Typ1)\n-        and then Stg_Unit_Is_Byte\n+        and then Byte_Addressable\n         and then not Java_VM\n       then\n          --  The call we generate is:"}, {"sha": "9f02d518a977f460f6a4d909cc070049638fea3d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -2612,10 +2612,10 @@ package body Exp_Ch9 is\n                            (Parent (Efam)))), Loc))),\n \n                     Component_Definition =>\n-                       Make_Component_Definition (Loc,\n-                          Aliased_Present    => False,\n-                          Subtype_Indication =>\n-                             New_Reference_To (Standard_Character, Loc))));\n+                      Make_Component_Definition (Loc,\n+                        Aliased_Present    => False,\n+                        Subtype_Indication =>\n+                          New_Reference_To (Standard_Character, Loc))));\n \n             Insert_After (Current_Node, Efam_Decl);\n             Current_Node := Efam_Decl;\n@@ -2629,10 +2629,12 @@ package body Exp_Ch9 is\n                 Component_Definition =>\n                   Make_Component_Definition (Loc,\n                     Aliased_Present    => False,\n+\n                     Subtype_Indication =>\n                       Make_Subtype_Indication (Loc,\n                         Subtype_Mark =>\n                           New_Occurrence_Of (Efam_Type, Loc),\n+\n                         Constraint  =>\n                           Make_Index_Or_Discriminant_Constraint (Loc,\n                             Constraints => New_List (\n@@ -7283,11 +7285,13 @@ package body Exp_Ch9 is\n            Make_Component_Declaration (Loc,\n              Defining_Identifier =>\n                Make_Defining_Identifier (Loc, Name_uTask_Info),\n+\n              Component_Definition =>\n                Make_Component_Definition (Loc,\n                  Aliased_Present    => False,\n                  Subtype_Indication =>\n                    New_Reference_To (RTE (RE_Task_Info_Type), Loc)),\n+\n              Expression => New_Copy (\n                Expression (First (\n                  Pragma_Argument_Associations ("}, {"sha": "4204cac71f9461b68a9f5b7aa9d2a57bf3ea968f", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -55,17 +55,19 @@ package body Exp_Dist is\n    --  The following model has been used to implement distributed objects:\n    --  given a designated type D and a RACW type R, then a record of the\n    --  form:\n+\n    --    type Stub is tagged record\n    --       [...declaration similar to s-parint.ads RACW_Stub_Type...]\n    --    end record;\n+\n    --  is built. This type has two properties:\n-   --\n+\n    --    1) Since it has the same structure than RACW_Stub_Type, it can be\n    --       converted to and from this type to make it suitable for\n    --       System.Partition_Interface.Get_Unique_Remote_Pointer in order\n    --       to avoid memory leaks when the same remote object arrive on the\n    --       same partition by following different pathes\n-   --\n+\n    --    2) It also has the same dispatching table as the designated type D,\n    --       and thus can be used as an object designated by a value of type\n    --       R on any partition other than the one on which the object has"}, {"sha": "8857edccbfcd30f668fe5d01bd9e04787f60de32", "filename": "gcc/ada/g-regpat.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fg-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fg-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -2997,9 +2997,9 @@ package body GNAT.Regpat is\n       function Match_Whilem (IP : Pointer) return Boolean is\n          pragma Unreferenced (IP);\n \n-         Cc : Current_Curly_Access := Current_Curly;\n-         N  : constant Natural     := Cc.Cur + 1;\n-         Ln : Natural              := 0;\n+         Cc : constant Current_Curly_Access := Current_Curly;\n+         N  : constant Natural              := Cc.Cur + 1;\n+         Ln : Natural                       := 0;\n \n          Lastloc : constant Natural := Cc.Lastloc;\n          --  Detection of 0-len."}, {"sha": "64613e12687826d71f34461a0beb7a26c5e9be0a", "filename": "gcc/ada/g-spitbo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fg-spitbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fg-spitbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spitbo.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -169,7 +169,7 @@ package body GNAT.Spitbol is\n \n    procedure Reverse_String (Str : in out VString) is\n       Len    : constant Natural := Length (Str);\n-      Chars  : String_Access := Get_String (Str);\n+      Chars  : constant String_Access := Get_String (Str);\n       Temp   : Character;\n \n    begin"}, {"sha": "08ad0d8da08b67980212004c49a56bff42b7de76", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 41, "deletions": 5, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -678,7 +678,7 @@ procedure Gnatlink is\n       --  terminator.\n \n       function Index (S, Pattern : String) return Natural;\n-      --  Return the first occurrence of Pattern in S, or 0 if none.\n+      --  Return the last occurrence of Pattern in S, or 0 if none.\n \n       function Is_Option_Present (Opt : in String) return Boolean;\n       --  Return true if the option Opt is already present in\n@@ -727,8 +727,9 @@ procedure Gnatlink is\n \n       function Index (S, Pattern : String) return Natural is\n          Len : constant Natural := Pattern'Length;\n+\n       begin\n-         for J in S'First .. S'Last - Len + 1 loop\n+         for J in reverse S'First .. S'Last - Len + 1 loop\n             if Pattern = S (J .. J + Len - 1) then\n                return J;\n             end if;\n@@ -1061,7 +1062,42 @@ procedure Gnatlink is\n                                  --  Also add path to find libgcc_s.so, if\n                                  --  relevant.\n \n-                                 GCC_Index := Index (File_Path.all, \"gcc-lib\");\n+                                 --  To find the location of the shared version\n+                                 --  of libgcc, we look for \"gcc-lib\" in the\n+                                 --  path of the library. However, this\n+                                 --  subdirectory is no longer present in\n+                                 --  in recent version of GCC. So, we look for\n+                                 --  the last subdirectory \"lib\" in the path.\n+\n+                                 GCC_Index :=\n+                                   Index (File_Path.all, \"gcc-lib\");\n+\n+                                 if GCC_Index /= 0 then\n+                                    --  The shared version of libgcc is\n+                                    --  located in the parent directory.\n+\n+                                    GCC_Index := GCC_Index - 1;\n+\n+                                 else\n+                                    GCC_Index :=\n+                                      Index (File_Path.all, \"/lib/\");\n+\n+                                    if GCC_Index = 0 then\n+                                       GCC_Index :=\n+                                         Index (File_Path.all,\n+                                                Directory_Separator &\n+                                                \"lib\" &\n+                                                Directory_Separator);\n+                                    end if;\n+\n+                                    --  We have found a subdirectory \"lib\",\n+                                    --  this is where the shared version of\n+                                    --  libgcc should be located.\n+\n+                                    if GCC_Index /= 0 then\n+                                       GCC_Index := GCC_Index + 3;\n+                                    end if;\n+                                 end if;\n \n                                  --  Look for an eventual run_path_option in\n                                  --  the linker switches.\n@@ -1124,7 +1160,7 @@ procedure Gnatlink is\n                                                  (1 .. File_Path'Length\n                                                        - File_Name'Length)\n                                              & Path_Separator\n-                                             & File_Path (1 .. GCC_Index - 1));\n+                                             & File_Path (1 .. GCC_Index));\n \n                                     else\n                                        Linker_Options.Table\n@@ -1137,7 +1173,7 @@ procedure Gnatlink is\n                                                  (1 .. File_Path'Length\n                                                        - File_Name'Length)\n                                              & Path_Separator\n-                                             & File_Path (1 .. GCC_Index - 1));\n+                                             & File_Path (1 .. GCC_Index));\n                                     end if;\n                                  end if;\n                               end if;"}, {"sha": "f716fe74b900cb0216d84c066027e1780a31e3bf", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -393,6 +393,14 @@ package body Make is\n    Bind_Shared_Known : Boolean := False;\n    --  Set to True after the first time Bind_Shared is computed\n \n+   Shared_Libgcc : aliased String := \"-shared-libgcc\";\n+\n+   No_Shared_Libgcc_Switch : aliased Argument_List := (1 .. 0 => null);\n+   Shared_Libgcc_Switch    : aliased Argument_List :=\n+                               (1 => Shared_Libgcc'Access);\n+   Link_With_Shared_Libgcc : Argument_List_Access :=\n+                               No_Shared_Libgcc_Switch'Access;\n+\n    procedure Make_Failed (S1 : String; S2 : String := \"\"; S3 : String := \"\");\n    --  Delete all temp files created by Gnatmake and call Osint.Fail,\n    --  with the parameter S1, S2 and S3 (see osint.ads).\n@@ -3383,6 +3391,7 @@ package body Make is\n       Make.Initialize;\n \n       Bind_Shared := No_Shared_Switch'Access;\n+      Link_With_Shared_Libgcc := No_Shared_Libgcc_Switch'Access;\n       Bind_Shared_Known := False;\n \n       Failed_Links.Set_Last (0);\n@@ -4769,6 +4778,12 @@ package body Make is\n                           Projects.Table (Proj).Library_Kind /= Static\n                         then\n                            Bind_Shared := Shared_Switch'Access;\n+\n+                           if GCC_Version >= 3 then\n+                              Link_With_Shared_Libgcc :=\n+                                Shared_Libgcc_Switch'Access;\n+                           end if;\n+\n                            exit;\n                         end if;\n                      end loop;\n@@ -5276,7 +5291,9 @@ package body Make is\n                   --  And invoke the linker\n \n                   begin\n-                     Link (Main_ALI_File, Args (Args'First .. Last_Arg));\n+                     Link (Main_ALI_File,\n+                           Link_With_Shared_Libgcc.all &\n+                           Args (Args'First .. Last_Arg));\n                      Successful_Links.Increment_Last;\n                      Successful_Links.Table (Successful_Links.Last) :=\n                        Main_ALI_File;"}, {"sha": "4dc56be381d3e6eb858fd780c7569fd8c24637c6", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -444,6 +444,15 @@ package Opt is\n    --  GNAT\n    --  Set True to generate full source listing with embedded errors\n \n+   function get_gcc_version return Int;\n+   pragma Import (C, get_gcc_version, \"get_gcc_version\");\n+\n+   GCC_Version : constant Nat := get_gcc_version;\n+   --  GNATMAKE\n+   --  Indicates which version of gcc is in use (2 = 2.8.1, 3 = 3.x).\n+   --  Used in particular to decide if gcc switch -shared-libgcc should be\n+   --  used (it cannot be used for 2.8.1).\n+\n    Global_Discard_Names : Boolean := False;\n    --  GNAT, GNATBIND\n    --  Set true if a pragma Discard_Names applies to the current unit"}, {"sha": "41c98ccfb1617baa7e2e676fad3b9976f25ae5ef", "filename": "gcc/ada/s-interr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -1249,7 +1249,7 @@ package body System.Interrupts is\n    task body Server_Task is\n       Intwait_Mask    : aliased IMNG.Interrupt_Mask;\n       Ret_Interrupt   : Interrupt_ID;\n-      Self_ID         : Task_ID := Self;\n+      Self_ID         : constant Task_ID := Self;\n       Tmp_Handler     : Parameterless_Handler;\n       Tmp_ID          : Task_ID;\n       Tmp_Entry_Index : Task_Entry_Index;"}, {"sha": "a784ed154cb363671ab26ca1a937291eeefc765d", "filename": "gcc/ada/s-stache.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fs-stache.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fs-stache.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stache.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -214,7 +214,7 @@ package body System.Stack_Checking is\n \n       Full_Check :\n       declare\n-         My_Stack : Stack_Access := Set_Stack_Info (Cache'Access);\n+         My_Stack : constant Stack_Access := Set_Stack_Info (Cache'Access);\n          --  At this point Stack.all might already be invalid, so\n          --  it is essential to use our local copy of Stack!\n "}, {"sha": "db99abcbe3ecb7b4092d37f4e9f4e9a729110440", "filename": "gcc/ada/s-taenca.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fs-taenca.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fs-taenca.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taenca.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -262,7 +262,7 @@ package body System.Tasking.Entry_Calls is\n \n                if Ceiling_Violation then\n                   declare\n-                     Current_Task      : Task_ID := STPO.Self;\n+                     Current_Task      : constant Task_ID := STPO.Self;\n                      Old_Base_Priority : System.Any_Priority;\n \n                   begin"}, {"sha": "efaf5a1924105644050690872a8c57f079879c73", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -441,8 +441,7 @@ package body Sem_Dist is\n                         Make_Component_Definition (Loc,\n                           Aliased_Present    => False,\n                           Subtype_Indication =>\n-                            New_Reference_To\n-                              (Standard_Integer, Loc))),\n+                            New_Reference_To (Standard_Integer, Loc))),\n \n                     Make_Component_Declaration (Loc,\n                       Defining_Identifier =>\n@@ -452,8 +451,7 @@ package body Sem_Dist is\n                         Make_Component_Definition (Loc,\n                           Aliased_Present    => False,\n                           Subtype_Indication =>\n-                            New_Reference_To\n-                              (RTE (RE_Unsigned_64), Loc))),\n+                            New_Reference_To (RTE (RE_Unsigned_64), Loc))),\n \n                     Make_Component_Declaration (Loc,\n                       Defining_Identifier =>\n@@ -463,8 +461,7 @@ package body Sem_Dist is\n                         Make_Component_Definition (Loc,\n                           Aliased_Present    => False,\n                           Subtype_Indication =>\n-                            New_Reference_To\n-                              (Standard_Natural, Loc))),\n+                            New_Reference_To (Standard_Natural, Loc))),\n \n                     Make_Component_Declaration (Loc,\n                       Defining_Identifier =>\n@@ -474,8 +471,7 @@ package body Sem_Dist is\n                         Make_Component_Definition (Loc,\n                           Aliased_Present    => False,\n                           Subtype_Indication =>\n-                            New_Reference_To\n-                              (Standard_Boolean, Loc)))))));\n+                            New_Reference_To (Standard_Boolean, Loc)))))));\n \n       Insert_After (N, New_Type_Decl);\n       Set_Equivalent_Type (User_Type, Fat_Type);"}, {"sha": "5960a4d0cf83c213befcdc9fb9290b1ba0d1affb", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -408,9 +408,10 @@ package body Sem_Res is\n               and then Scope (Disc) = Current_Scope\n               and then not\n                 (Nkind (Parent (P)) = N_Subtype_Indication\n-                 and then\n-                  (Nkind (Parent (Parent (P))) = N_Component_Definition\n-                   or else Nkind (Parent (Parent (P))) = N_Subtype_Declaration)\n+                   and then\n+                    (Nkind (Parent (Parent (P))) = N_Component_Definition\n+                       or else\n+                     Nkind (Parent (Parent (P))) = N_Subtype_Declaration)\n                   and then Paren_Count (N) = 0)\n             then\n                Error_Msg_N\n@@ -419,8 +420,9 @@ package body Sem_Res is\n             end if;\n \n             --   Detect a common beginner error:\n+\n             --   type R (D : Positive := 100) is record\n-            --     Name: String (1 .. D);\n+            --     Name : String (1 .. D);\n             --   end record;\n \n             --  The default value causes an object of type R to be"}, {"sha": "687d5a5816dc851cb9e68e6a16aca28cf39872e0", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -3221,7 +3221,7 @@ package body Sem_Util is\n       function Has_Dependent_Constraint (Comp : Entity_Id) return Boolean is\n          Comp_Decl  : constant Node_Id := Parent (Comp);\n          Subt_Indic : constant Node_Id :=\n-           Subtype_Indication (Component_Definition (Comp_Decl));\n+                        Subtype_Indication (Component_Definition (Comp_Decl));\n          Constr     : Node_Id;\n          Assn       : Node_Id;\n "}, {"sha": "10cad35ed78fe4e303c9af86a02810b68251b04b", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc43c535ec8533339eccf3b17f0126874cd5a9d/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=9bc43c535ec8533339eccf3b17f0126874cd5a9d", "patch": "@@ -951,9 +951,11 @@ package body Sprint is\n \n          when N_Component_Definition =>\n             Set_Debug_Sloc;\n+\n             if Aliased_Present (Node) then\n                Write_Str_With_Col_Check (\"aliased \");\n             end if;\n+\n             Sprint_Node (Subtype_Indication (Node));\n \n          when N_Component_Declaration =>"}]}