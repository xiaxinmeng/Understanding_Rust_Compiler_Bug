{"sha": "34ab4a5b70675e801d0cd5a68b50e770d1fe864e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRhYjRhNWI3MDY3NWU4MDFkMGNkNWE2OGI1MGU3NzBkMWZlODY0ZQ==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2013-04-10T09:12:30Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2013-04-10T09:12:30Z"}, "message": "combine.c (simplify_compare_const): Use GET_MODE_MASK to filter out unnecessary bits in the constant power of two case.\n\n2013-04-10  Chung-Ju Wu  <jasonwucj@gmail.com>\n\n\t* combine.c (simplify_compare_const): Use GET_MODE_MASK to filter out\n\tunnecessary bits in the constant power of two case.\n\nFrom-SVN: r197666", "tree": {"sha": "74c6d194cd2df933596856be52c93e6ba5e63003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74c6d194cd2df933596856be52c93e6ba5e63003"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34ab4a5b70675e801d0cd5a68b50e770d1fe864e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ab4a5b70675e801d0cd5a68b50e770d1fe864e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ab4a5b70675e801d0cd5a68b50e770d1fe864e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ab4a5b70675e801d0cd5a68b50e770d1fe864e/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "abf9bfbc31e7d9d8f0b189dd17b59f5e96006456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf9bfbc31e7d9d8f0b189dd17b59f5e96006456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf9bfbc31e7d9d8f0b189dd17b59f5e96006456"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "3e3e3b7243f7f061550ed39857e1f2111a31053c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ab4a5b70675e801d0cd5a68b50e770d1fe864e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ab4a5b70675e801d0cd5a68b50e770d1fe864e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34ab4a5b70675e801d0cd5a68b50e770d1fe864e", "patch": "@@ -1,3 +1,8 @@\n+2013-04-10  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* combine.c (simplify_compare_const): Use GET_MODE_MASK to filter out\n+\tunnecessary bits in the constant power of two case.\n+\n 2013-04-10  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-slp.c (vect_get_and_check_slp_defs): Remove"}, {"sha": "667b7b43c70ba1c7a53eb7f251f5a721cfaec582", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ab4a5b70675e801d0cd5a68b50e770d1fe864e/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ab4a5b70675e801d0cd5a68b50e770d1fe864e/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=34ab4a5b70675e801d0cd5a68b50e770d1fe864e", "patch": "@@ -10759,8 +10759,9 @@ simplify_compare_const (enum rtx_code code, rtx op0, rtx *pop1)\n       && (code == EQ || code == NE || code == GE || code == GEU\n \t  || code == LT || code == LTU)\n       && mode_width <= HOST_BITS_PER_WIDE_INT\n-      && exact_log2 (const_op) >= 0\n-      && nonzero_bits (op0, mode) == (unsigned HOST_WIDE_INT) const_op)\n+      && exact_log2 (const_op & GET_MODE_MASK (mode)) >= 0\n+      && (nonzero_bits (op0, mode)\n+\t  == (unsigned HOST_WIDE_INT) (const_op & GET_MODE_MASK (mode))))\n     {\n       code = (code == EQ || code == GE || code == GEU ? NE : EQ);\n       const_op = 0;"}]}