{"sha": "a2aa807ef9537ab75e81dd0470e90f5a54d75031", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhYTgwN2VmOTUzN2FiNzVlODFkZDA0NzBlOTBmNWE1NGQ3NTAzMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-08-29T18:59:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-08-29T18:59:04Z"}, "message": "runtime: fix lfstack for 64-bit AIX\n    \n    Reviewed-on: https://go-review.googlesource.com/57550\n\nFrom-SVN: r251420", "tree": {"sha": "1a6c55e2682a3c977bbf937160cdb3fec6dd3ec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a6c55e2682a3c977bbf937160cdb3fec6dd3ec9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2aa807ef9537ab75e81dd0470e90f5a54d75031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2aa807ef9537ab75e81dd0470e90f5a54d75031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2aa807ef9537ab75e81dd0470e90f5a54d75031", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2aa807ef9537ab75e81dd0470e90f5a54d75031/comments", "author": null, "committer": null, "parents": [{"sha": "4e395d91ad396f1f03b28a97cb9d25bd6b85e755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e395d91ad396f1f03b28a97cb9d25bd6b85e755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e395d91ad396f1f03b28a97cb9d25bd6b85e755"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "3d20e7152cbb694ad44ee92b88563dbd78ba504d", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2aa807ef9537ab75e81dd0470e90f5a54d75031/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2aa807ef9537ab75e81dd0470e90f5a54d75031/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=a2aa807ef9537ab75e81dd0470e90f5a54d75031", "patch": "@@ -1,4 +1,4 @@\n-2c4a2bd826e58c8c8c51b9196c8d2c67abc4037e\n+db8e3801bf8508656606d6e465c76cdc6e9a9eb7\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "44cbf74cae0c8141d9385912ae46cb4312cad533", "filename": "libgo/go/runtime/lfstack_64bit.go", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2aa807ef9537ab75e81dd0470e90f5a54d75031/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2aa807ef9537ab75e81dd0470e90f5a54d75031/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go?ref=a2aa807ef9537ab75e81dd0470e90f5a54d75031", "patch": "@@ -43,6 +43,14 @@ const (\n \t// 52 address bits each (with 64k page size).\n \tia64AddrBits = 55\n \tia64CntBits  = 64 - ia64AddrBits + 3\n+\n+\t// On AIX, 64-bit addresses are split into 36-bit segment number and 28-bit\n+\t// offset in segment.  Segment numbers in the range 0x070000000-0x07FFFFFFF\n+\t// and 0x0A0000000-0x0AFFFFFFF(LSA) are available for mmap.\n+\t// We assume all lfnode addresses are from memory allocated with mmap.\n+\t// We use one bit to distinguish between the two ranges.\n+\taixAddrBits = 57\n+\taixCntBits  = 64 - aixAddrBits + 3\n )\n \n func lfstackPack(node *lfnode, cnt uintptr) uint64 {\n@@ -54,6 +62,9 @@ func lfstackPack(node *lfnode, cnt uintptr) uint64 {\n \t\tval := uint64(uintptr(unsafe.Pointer(node)))\n \t\treturn (val<<(64-ia64AddrBits))&(1<<(64-3)-1) | val&^(1<<(64-3)-1) | uint64(cnt&(1<<ia64CntBits-1))\n \t}\n+\tif GOARCH == \"ppc64\" && GOOS == \"aix\" {\n+\t\treturn uint64(uintptr(unsafe.Pointer(node)))<<(64-aixAddrBits) | uint64(cnt&(1<<aixCntBits-1))\n+\t}\n \treturn uint64(uintptr(unsafe.Pointer(node)))<<(64-addrBits) | uint64(cnt&(1<<cntBits-1))\n }\n \n@@ -69,5 +80,12 @@ func lfstackUnpack(val uint64) *lfnode {\n \tif GOARCH == \"ia64\" {\n \t\treturn (*lfnode)(unsafe.Pointer(uintptr((val>>ia64CntBits<<3)&(1<<(64-3)-1) | val&^(1<<(64-3)-1))))\n \t}\n+\tif GOARCH == \"ppc64\" && GOOS == \"aix\" {\n+\t\tif val&(1<<63) != 0 {\n+\t\t\treturn (*lfnode)(unsafe.Pointer(uintptr((val >> aixCntBits << 3) | 0x7<<56)))\n+\t\t} else {\n+\t\t\treturn (*lfnode)(unsafe.Pointer(uintptr((val >> aixCntBits << 3) | 0xa<<56)))\n+\t\t}\n+\t}\n \treturn (*lfnode)(unsafe.Pointer(uintptr(val >> cntBits << 3)))\n }"}]}