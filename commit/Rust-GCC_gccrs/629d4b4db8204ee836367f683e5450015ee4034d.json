{"sha": "629d4b4db8204ee836367f683e5450015ee4034d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI5ZDRiNGRiODIwNGVlODM2MzY3ZjY4M2U1NDUwMDE1ZWU0MDM0ZA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-07-08T03:35:20Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-07-08T03:35:20Z"}, "message": "jcf-write.c (generate_classfile): Properly install the ConstantValue attribute and the initial value constant...\n\n2000-07-07  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * jcf-write.c (generate_classfile): Properly install the\n        ConstantValue attribute and the initial value constant pool index\n        on string constants.\n        * parse.y (java_complete_lhs): Keep DECL_INITIAL when emitting\n        class files.\n\n(http://gcc.gnu.org/ml/gcc-patches/2000-07/msg00233.html)\n\nFrom-SVN: r34921", "tree": {"sha": "5f831f1a2e5f374c3ad4969dc34df75ec8eab2fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f831f1a2e5f374c3ad4969dc34df75ec8eab2fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/629d4b4db8204ee836367f683e5450015ee4034d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/629d4b4db8204ee836367f683e5450015ee4034d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/629d4b4db8204ee836367f683e5450015ee4034d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/629d4b4db8204ee836367f683e5450015ee4034d/comments", "author": null, "committer": null, "parents": [{"sha": "cf00a885103d939b2175adc8918908a3b6f211d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf00a885103d939b2175adc8918908a3b6f211d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf00a885103d939b2175adc8918908a3b6f211d2"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "42368c0ab992224f5a456ff590106edee71f69dc", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/629d4b4db8204ee836367f683e5450015ee4034d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/629d4b4db8204ee836367f683e5450015ee4034d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=629d4b4db8204ee836367f683e5450015ee4034d", "patch": "@@ -1,3 +1,11 @@\n+2000-07-07  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* jcf-write.c (generate_classfile): Properly install the\n+\tConstantValue attribute and the initial value constant pool index\n+\ton string constants.\n+\t* parse.y (java_complete_lhs): Keep DECL_INITIAL when emitting\n+\tclass files.\n+\n 2000-07-06  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.h (BUILD_PTR_FROM_NAME): Surround with a do/while"}, {"sha": "0d2a0388784f709c0954b8ba8d17b7261eebfc0d", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/629d4b4db8204ee836367f683e5450015ee4034d/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/629d4b4db8204ee836367f683e5450015ee4034d/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=629d4b4db8204ee836367f683e5450015ee4034d", "patch": "@@ -2874,8 +2874,11 @@ generate_classfile (clas, state)\n       i = find_utf8_constant (&state->cpool, \n \t\t\t      build_java_signature (TREE_TYPE (part)));\n       PUT2(i);\n-      have_value = DECL_INITIAL (part) != NULL_TREE && FIELD_STATIC (part)\n-\t&& TREE_CODE (TREE_TYPE (part)) != POINTER_TYPE;\n+      have_value = DECL_INITIAL (part) != NULL_TREE \n+\t&& FIELD_STATIC (part)\n+\t&& (TREE_CODE (DECL_INITIAL (part)) == STRING_CST\n+\t    || TREE_CODE (DECL_INITIAL (part)) == INTEGER_CST\n+\t    || TREE_CODE (DECL_INITIAL (part)) == REAL_CST);\n       if (have_value)\n \tattr_count++;\n "}, {"sha": "5133edfc0d7062366f3e28cba59fe88fbab6b6c7", "filename": "gcc/java/parse.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/629d4b4db8204ee836367f683e5450015ee4034d/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/629d4b4db8204ee836367f683e5450015ee4034d/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=629d4b4db8204ee836367f683e5450015ee4034d", "patch": "@@ -13802,7 +13802,6 @@ java_complete_lhs (node)\n     case NEW_CLASS_EXPR:\n     case CALL_EXPR:\n       /* Complete function's argument(s) first */\n-\n       if (complete_function_arguments (node))\n \treturn error_mark_node;\n       else\n@@ -13847,7 +13846,8 @@ java_complete_lhs (node)\n \t\t  (type == string_ptr_type_node && ! flag_emit_class_files))\n \t\treturn empty_stmt_node;\n \t    }\n-\t  DECL_INITIAL (nn) = NULL_TREE;\n+\t  if (! flag_emit_class_files)\n+\t    DECL_INITIAL (nn) = NULL_TREE;\n \t}\n       wfl_op2 = TREE_OPERAND (node, 1);\n "}, {"sha": "f062016ee6b02df0a2baa2b052dc0648b2256b75", "filename": "gcc/java/parse.y", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/629d4b4db8204ee836367f683e5450015ee4034d/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/629d4b4db8204ee836367f683e5450015ee4034d/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=629d4b4db8204ee836367f683e5450015ee4034d", "patch": "@@ -11148,7 +11148,8 @@ java_complete_lhs (node)\n \t\t  (type == string_ptr_type_node && ! flag_emit_class_files))\n \t\treturn empty_stmt_node;\n \t    }\n-\t  DECL_INITIAL (nn) = NULL_TREE;\n+\t  if (! flag_emit_class_files)\n+\t    DECL_INITIAL (nn) = NULL_TREE;\n \t}\n       wfl_op2 = TREE_OPERAND (node, 1);\n "}]}