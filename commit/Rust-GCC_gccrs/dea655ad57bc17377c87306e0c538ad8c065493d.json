{"sha": "dea655ad57bc17377c87306e0c538ad8c065493d", "node_id": "C_kwDOANBUbNoAKGRlYTY1NWFkNTdiYzE3Mzc3Yzg3MzA2ZTBjNTM4YWQ4YzA2NTQ5M2Q", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2022-04-03T08:08:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-18T08:41:03Z"}, "message": "[Ada] Secondary stack and a-tags\n\nThe simple use of Ada.Tags triggers a dependency on the secondary stack\nmechanism, which is unwanted on small embedded targets. To avoid this\ndependency, we special case a-tags.ali in ALI.Scan_ALI to not set\nSec_Stack_Used. If some other code calls one of the functions returning\na string, this code will also be marked as requiring the secondary\nstack. We also remove the need to import and set __gnat_binder_ss_count\nin this case by ensuring this variable defaults to 0.\n\ngcc/ada/\n\n\t* ali.adb (Scan_ALI): Special case a-tags.ali when setting\n\tSec_Stack_Used.\n\t* bindgen.adb (Gen_Adainit): Simplify handling of secondary\n\tstack related code, and only import __gnat_binder_ss_count when\n\tneeded.\n\t* libgnat/s-secsta.adb (Binder_SS_Count): Default initialize to\n\t0.", "tree": {"sha": "3577de0ce62bc2aa44a68389b22a3ed8bab8ff99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3577de0ce62bc2aa44a68389b22a3ed8bab8ff99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dea655ad57bc17377c87306e0c538ad8c065493d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea655ad57bc17377c87306e0c538ad8c065493d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dea655ad57bc17377c87306e0c538ad8c065493d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea655ad57bc17377c87306e0c538ad8c065493d/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c77ec1199c3a3d1ac48c9d963b8389c10a2a5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c77ec1199c3a3d1ac48c9d963b8389c10a2a5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c77ec1199c3a3d1ac48c9d963b8389c10a2a5bf"}], "stats": {"total": 112, "additions": 46, "deletions": 66}, "files": [{"sha": "bcc8822940ebe3aa936730f090e3d3d978e113bd", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea655ad57bc17377c87306e0c538ad8c065493d/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea655ad57bc17377c87306e0c538ad8c065493d/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=dea655ad57bc17377c87306e0c538ad8c065493d", "patch": "@@ -2079,7 +2079,15 @@ package body ALI is\n                --  Processing for SS\n \n                elsif C = 'S' then\n-                  Opt.Sec_Stack_Used := True;\n+                  --  Special case: a-tags.ali by itself should not set\n+                  --  Sec_Stack_Used, only if other code uses the secondary\n+                  --  stack should we set this flag. This ensures that we do\n+                  --  not bring the secondary stack unnecessarily when using\n+                  --  Ada.Tags and not actually using the secondary stack.\n+\n+                  if Get_Name_String (F) /= \"a-tags.ali\" then\n+                     Opt.Sec_Stack_Used := True;\n+                  end if;\n \n                --  Invalid switch starting with S\n "}, {"sha": "3b55cc9634a523500d3a19d511dbd509163e25c9", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 36, "deletions": 64, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea655ad57bc17377c87306e0c538ad8c065493d/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea655ad57bc17377c87306e0c538ad8c065493d/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=dea655ad57bc17377c87306e0c538ad8c065493d", "patch": "@@ -80,12 +80,6 @@ package body Bindgen is\n    --  domains just before calling the main procedure from the environment\n    --  task.\n \n-   System_Secondary_Stack_Package_In_Closure : Boolean := False;\n-   --  Flag indicating whether the unit System.Secondary_Stack is in the\n-   --  closure of the partition. This is set by Resolve_Binder_Options, and\n-   --  is used to initialize the package in cases where the run-time brings\n-   --  in package but the secondary stack is not used.\n-\n    System_Tasking_Restricted_Stages_Used : Boolean := False;\n    --  Flag indicating whether the unit System.Tasking.Restricted.Stages is in\n    --  the closure of the partition. This is set by Resolve_Binder_Options,\n@@ -612,33 +606,27 @@ package body Bindgen is\n                  \"\"\"__gnat_initialize_stack_limit\"\");\");\n          end if;\n \n-         if System_Secondary_Stack_Package_In_Closure then\n-            --  System.Secondary_Stack is in the closure of the program\n-            --  because the program uses the secondary stack or the restricted\n-            --  run-time is unconditionally calling SS_Init. In both cases,\n-            --  SS_Init needs to know the number of secondary stacks created by\n-            --  the binder.\n-\n+         if Num_Sec_Stacks > 0 then\n             WBI (\"      Binder_Sec_Stacks_Count : Natural;\");\n             WBI (\"      pragma Import (Ada, Binder_Sec_Stacks_Count, \" &\n                  \"\"\"__gnat_binder_ss_count\"\");\");\n             WBI (\"\");\n+         end if;\n \n-            --  Import secondary stack pool variables if the secondary stack\n-            --  used. They are not referenced otherwise.\n+         --  Import secondary stack pool variables if the secondary stack is\n+         --  used. They are not referenced otherwise.\n \n-            if Sec_Stack_Used then\n-               WBI (\"      Default_Secondary_Stack_Size : \" &\n-                    \"System.Parameters.Size_Type;\");\n-               WBI (\"      pragma Import (C, Default_Secondary_Stack_Size, \" &\n-                    \"\"\"__gnat_default_ss_size\"\");\");\n+         if Sec_Stack_Used then\n+            WBI (\"      Default_Secondary_Stack_Size : \" &\n+                 \"System.Parameters.Size_Type;\");\n+            WBI (\"      pragma Import (C, Default_Secondary_Stack_Size, \" &\n+                 \"\"\"__gnat_default_ss_size\"\");\");\n \n-               WBI (\"      Default_Sized_SS_Pool : System.Address;\");\n-               WBI (\"      pragma Import (Ada, Default_Sized_SS_Pool, \" &\n-                    \"\"\"__gnat_default_ss_pool\"\");\");\n+            WBI (\"      Default_Sized_SS_Pool : System.Address;\");\n+            WBI (\"      pragma Import (Ada, Default_Sized_SS_Pool, \" &\n+                 \"\"\"__gnat_default_ss_pool\"\");\");\n \n-               WBI (\"\");\n-            end if;\n+            WBI (\"\");\n          end if;\n \n          WBI (\"   begin\");\n@@ -686,46 +674,36 @@ package body Bindgen is\n          --  Generate the default-sized secondary stack pool if the secondary\n          --  stack is used by the program.\n \n-         if System_Secondary_Stack_Package_In_Closure then\n-            if Sec_Stack_Used then\n-               --  Elaborate the body of the binder to initialize the default-\n-               --  sized secondary stack pool.\n-\n-               WBI (\"\");\n-               WBI (\"      \" & Get_Ada_Main_Name & \"'Elab_Body;\");\n-\n-               --  Generate the default-sized secondary stack pool and set the\n-               --  related secondary stack globals.\n+         if Sec_Stack_Used then\n+            --  Elaborate the body of the binder to initialize the default-\n+            --  sized secondary stack pool.\n \n-               Set_String (\"      Default_Secondary_Stack_Size := \");\n+            WBI (\"\");\n+            WBI (\"      \" & Get_Ada_Main_Name & \"'Elab_Body;\");\n \n-               if Opt.Default_Sec_Stack_Size /= Opt.No_Stack_Size then\n-                  Set_Int (Opt.Default_Sec_Stack_Size);\n-               else\n-                  Set_String\n-                    (\"System.Parameters.Runtime_Default_Sec_Stack_Size\");\n-               end if;\n+            --  Generate the default-sized secondary stack pool and set the\n+            --  related secondary stack globals.\n \n-               Set_Char (';');\n-               Write_Statement_Buffer;\n+            Set_String (\"      Default_Secondary_Stack_Size := \");\n \n-               Set_String (\"      Binder_Sec_Stacks_Count := \");\n-               Set_Int (Num_Sec_Stacks);\n-               Set_Char (';');\n-               Write_Statement_Buffer;\n+            if Opt.Default_Sec_Stack_Size /= Opt.No_Stack_Size then\n+               Set_Int (Opt.Default_Sec_Stack_Size);\n+            else\n+               Set_String\n+                 (\"System.Parameters.Runtime_Default_Sec_Stack_Size\");\n+            end if;\n \n-               WBI (\"      Default_Sized_SS_Pool := \" &\n-                      \"Sec_Default_Sized_Stacks'Address;\");\n-               WBI (\"\");\n+            Set_Char (';');\n+            Write_Statement_Buffer;\n \n-            else\n-               --  The presence of System.Secondary_Stack in the closure of the\n-               --  program implies the restricted run-time is unconditionally\n-               --  calling SS_Init. Let SS_Init know that no stacks were\n-               --  created.\n+            Set_String (\"      Binder_Sec_Stacks_Count := \");\n+            Set_Int (Num_Sec_Stacks);\n+            Set_Char (';');\n+            Write_Statement_Buffer;\n \n-               WBI (\"      Binder_Sec_Stacks_Count := 0;\");\n-            end if;\n+            WBI (\"      Default_Sized_SS_Pool := \" &\n+                   \"Sec_Default_Sized_Stacks'Address;\");\n+            WBI (\"\");\n          end if;\n \n       --  Normal case (standard library not suppressed). Set all global values\n@@ -3276,12 +3254,6 @@ package body Bindgen is\n \n          Check_Package (System_Restrictions_Used, \"system.restrictions%s\");\n \n-         --  Ditto for the use of System.Secondary_Stack\n-\n-         Check_Package\n-           (System_Secondary_Stack_Package_In_Closure,\n-            \"system.secondary_stack%s\");\n-\n          --  Ditto for use of an SMP bareboard runtime\n \n          Check_Package (System_BB_CPU_Primitives_Multiprocessors_Used,"}, {"sha": "ac929c07b3eabbeb4a59ab9463900da331a691c3", "filename": "gcc/ada/libgnat/s-secsta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea655ad57bc17377c87306e0c538ad8c065493d/gcc%2Fada%2Flibgnat%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea655ad57bc17377c87306e0c538ad8c065493d/gcc%2Fada%2Flibgnat%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-secsta.adb?ref=dea655ad57bc17377c87306e0c538ad8c065493d", "patch": "@@ -53,7 +53,7 @@ package body System.Secondary_Stack is\n    --  in order to avoid depending on the binder. Their values are set by the\n    --  binder.\n \n-   Binder_SS_Count : Natural;\n+   Binder_SS_Count : Natural := 0;\n    pragma Export (Ada, Binder_SS_Count, \"__gnat_binder_ss_count\");\n    --  The number of secondary stacks in the pool created by the binder\n "}]}