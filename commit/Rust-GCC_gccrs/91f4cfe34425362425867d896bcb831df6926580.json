{"sha": "91f4cfe34425362425867d896bcb831df6926580", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFmNGNmZTM0NDI1MzYyNDI1ODY3ZDg5NmJjYjgzMWRmNjkyNjU4MA==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "rakdver@atrey.karlin.mff.cuni.cz", "date": "2003-05-11T22:54:33Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2003-05-11T22:54:33Z"}, "message": "cfgloopanal.c (num_loop_insns, [...]): Count only real insns.\n\n\t* cfgloopanal.c (num_loop_insns, average_num_loop_insns): Count only\n\treal insns.\n\t* loop-unroll.c (unroll_loop_runtime_iterations): Remove superfluous\n\tcondition.\n\nFrom-SVN: r66700", "tree": {"sha": "cada37c3708d1388d2a80d6f7cbd1591975d8a65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cada37c3708d1388d2a80d6f7cbd1591975d8a65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91f4cfe34425362425867d896bcb831df6926580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f4cfe34425362425867d896bcb831df6926580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f4cfe34425362425867d896bcb831df6926580", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f4cfe34425362425867d896bcb831df6926580/comments", "author": null, "committer": null, "parents": [{"sha": "ac38d8da36c73f77adf130019fa0c247fdca64a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac38d8da36c73f77adf130019fa0c247fdca64a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac38d8da36c73f77adf130019fa0c247fdca64a1"}], "stats": {"total": 68, "additions": 37, "deletions": 31}, "files": [{"sha": "da8a280c1004234810b2327639df8c2fbbcd20c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f4cfe34425362425867d896bcb831df6926580/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f4cfe34425362425867d896bcb831df6926580/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91f4cfe34425362425867d896bcb831df6926580", "patch": "@@ -1,3 +1,10 @@\n+2003-05-12  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* cfgloopanal.c (num_loop_insns, average_num_loop_insns): Count only\n+\treal insns.\n+\t* loop-unroll.c (unroll_loop_runtime_iterations): Remove superfluous\n+\tcondition.\n+\n 2003-05-11  Neil Booth  <neil@cat.daikokuya.co.uk>\n \n \t* doc/cpp.texi: Fix typos."}, {"sha": "c3ef5a30739a5301fe7c64ab7572bf28ad529bf3", "filename": "gcc/cfgloopanal.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f4cfe34425362425867d896bcb831df6926580/gcc%2Fcfgloopanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f4cfe34425362425867d896bcb831df6926580/gcc%2Fcfgloopanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.c?ref=91f4cfe34425362425867d896bcb831df6926580", "patch": "@@ -1033,7 +1033,8 @@ num_loop_insns (loop)\n       bb = bbs[i];\n       ninsns++;\n       for (insn = bb->head; insn != bb->end; insn = NEXT_INSN (insn))\n-\tninsns++;\n+\tif (INSN_P (insn))\n+\t  ninsns++;\n     }\n   free(bbs);\n   \n@@ -1057,7 +1058,8 @@ average_num_loop_insns (loop)\n \n       binsns = 1;\n       for (insn = bb->head; insn != bb->end; insn = NEXT_INSN (insn))\n-\tbinsns++;\n+\tif (INSN_P (insn))\n+\t  binsns++;\n \n       ratio = loop->header->frequency == 0\n \t      ? BB_FREQ_MAX"}, {"sha": "e8509de774ffd4a8f54cb10e8073947cff897004", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 26, "deletions": 29, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f4cfe34425362425867d896bcb831df6926580/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f4cfe34425362425867d896bcb831df6926580/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=91f4cfe34425362425867d896bcb831df6926580", "patch": "@@ -878,36 +878,33 @@ unroll_loop_runtime_iterations (loops, loop)\n \t\tDLTHE_FLAG_UPDATE_FREQ))\n     \tabort ();\n \n-      if (i != n_peel)\n-\t{\n-\t  /* Create item for switch.  */\n-\t  j = n_peel - i - (extra_zero_check ? 0 : 1);\n-\t  p = REG_BR_PROB_BASE / (i + 2);\n-\n-\t  preheader = loop_split_edge_with (loop_preheader_edge (loop),\n-\t\t\t\t\t    NULL_RTX, loops);\n-\t  label = block_label (preheader);\n-\t  start_sequence ();\n-\t  do_compare_rtx_and_jump (copy_rtx (niter), GEN_INT (j), EQ, 0,\n-\t\t    \t\t   GET_MODE (desc->var), NULL_RTX, NULL_RTX,\n-\t\t\t\t   label);\n-\t  jump = get_last_insn ();\n-\t  JUMP_LABEL (jump) = label;\n-\t  REG_NOTES (jump)\n-\t\t  = gen_rtx_EXPR_LIST (REG_BR_PROB,\n-\t\t\t    \t       GEN_INT (p), REG_NOTES (jump));\n+      /* Create item for switch.  */\n+      j = n_peel - i - (extra_zero_check ? 0 : 1);\n+      p = REG_BR_PROB_BASE / (i + 2);\n+\n+      preheader = loop_split_edge_with (loop_preheader_edge (loop),\n+\t\t\t\t\tNULL_RTX, loops);\n+      label = block_label (preheader);\n+      start_sequence ();\n+      do_compare_rtx_and_jump (copy_rtx (niter), GEN_INT (j), EQ, 0,\n+\t\t\t       GET_MODE (desc->var), NULL_RTX, NULL_RTX,\n+\t\t\t       label);\n+      jump = get_last_insn ();\n+      JUMP_LABEL (jump) = label;\n+      REG_NOTES (jump)\n+\t      = gen_rtx_EXPR_LIST (REG_BR_PROB,\n+\t\t\t\t   GEN_INT (p), REG_NOTES (jump));\n \t\n-\t  LABEL_NUSES (label)++;\n-\t  branch_code = get_insns ();\n-\t  end_sequence ();\n-\n-\t  swtch = loop_split_edge_with (swtch->pred, branch_code, loops);\n-\t  set_immediate_dominator (loops->cfg.dom, preheader, swtch);\n-\t  swtch->succ->probability = REG_BR_PROB_BASE - p;\n-\t  e = make_edge (swtch, preheader,\n-\t\t\t swtch->succ->flags & EDGE_IRREDUCIBLE_LOOP);\n-\t  e->probability = p;\n-\t}\n+      LABEL_NUSES (label)++;\n+      branch_code = get_insns ();\n+      end_sequence ();\n+\n+      swtch = loop_split_edge_with (swtch->pred, branch_code, loops);\n+      set_immediate_dominator (loops->cfg.dom, preheader, swtch);\n+      swtch->succ->probability = REG_BR_PROB_BASE - p;\n+      e = make_edge (swtch, preheader,\n+\t\t     swtch->succ->flags & EDGE_IRREDUCIBLE_LOOP);\n+      e->probability = p;\n     }\n \n   if (extra_zero_check)"}]}