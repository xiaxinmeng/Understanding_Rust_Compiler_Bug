{"sha": "47403a0eefac52636db768dc46c3c88a2cd4b28e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc0MDNhMGVlZmFjNTI2MzZkYjc2OGRjNDZjM2M4OGEyY2Q0YjI4ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-03-10T11:05:53Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-03-10T11:32:03Z"}, "message": "Do not assume that __float128 exists\n\nThe code in build_round_expr implicitly assumes that __float128 exists,\nwhich is *not* the common case among 64-bit architectures since the\n\"long double\" type is generally already 128-bit for them.\n\ngcc/fortran/\n\tPR fortran/96983\n\t* trans-intrinsic.c (build_round_expr): Do not implicitly assume\n\tthat __float128 is the 128-bit floating-point type.", "tree": {"sha": "f62bd3755834754cb76701ea6c10dd5c4accfce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f62bd3755834754cb76701ea6c10dd5c4accfce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47403a0eefac52636db768dc46c3c88a2cd4b28e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47403a0eefac52636db768dc46c3c88a2cd4b28e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47403a0eefac52636db768dc46c3c88a2cd4b28e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47403a0eefac52636db768dc46c3c88a2cd4b28e/comments", "author": null, "committer": null, "parents": [{"sha": "1c3c12b0a6fdffce0eca0b21518cbb53b20abff1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3c12b0a6fdffce0eca0b21518cbb53b20abff1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3c12b0a6fdffce0eca0b21518cbb53b20abff1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9cf3642f694db9a269880ee6f01ae47253ed6798", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47403a0eefac52636db768dc46c3c88a2cd4b28e/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47403a0eefac52636db768dc46c3c88a2cd4b28e/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=47403a0eefac52636db768dc46c3c88a2cd4b28e", "patch": "@@ -407,7 +407,7 @@ build_round_expr (tree arg, tree restype)\n       if (kind < 0)\n \tgfc_internal_error (\"Could not find real kind with at least %d bits\",\n \t\t\t    resprec);\n-      arg = fold_convert (gfc_float128_type_node, arg);\n+      arg = fold_convert (gfc_get_real_type (kind), arg);\n       fn = gfc_builtin_decl_for_float_kind (BUILT_IN_ROUND, kind);\n     }\n   else"}]}