{"sha": "ef874db611879d5004e1d834543e55d31f2bfe1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY4NzRkYjYxMTg3OWQ1MDA0ZTFkODM0NTQzZTU1ZDMxZjJiZmUxYw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-27T11:22:36Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-27T11:22:36Z"}, "message": "Fix various issues seen with clang-static-analyzer.\n\n2019-06-27  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/90974\n\tPR rtl-optimization/90975\n\tPR rtl-optimization/90976\n\tPR target/91016\n\tPR tree-optimization/91017\n\t* config/i386/i386-expand.c (ix86_expand_rounddf_32): Remove\n\tunused tmp.\n\t* lra.c (lra_set_insn_recog_data): Remove a leftover from\n\tinitial commit of IRA.\n\t* optabs.c (expand_twoval_binop): Use xop0 and xop1 instead\n\tof op0 and op1.\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction):\n\tRemove unused mode1.\n\t* tree-vect-stmts.c (vectorizable_call): Remove dead assignment\n\tto new_stmt_info.\n\nFrom-SVN: r272746", "tree": {"sha": "5acb8e41e88dfb0425ffef3d4f96e0dbaf9601eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5acb8e41e88dfb0425ffef3d4f96e0dbaf9601eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef874db611879d5004e1d834543e55d31f2bfe1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef874db611879d5004e1d834543e55d31f2bfe1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef874db611879d5004e1d834543e55d31f2bfe1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef874db611879d5004e1d834543e55d31f2bfe1c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2d604d83edb86ce3f492d03900fb29dea97725d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d604d83edb86ce3f492d03900fb29dea97725d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d604d83edb86ce3f492d03900fb29dea97725d"}], "stats": {"total": 42, "additions": 26, "deletions": 16}, "files": [{"sha": "f536afb5ee3b8bba494de3ff394bba72d3a80646", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef874db611879d5004e1d834543e55d31f2bfe1c", "patch": "@@ -1,3 +1,21 @@\n+2019-06-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/90974\n+\tPR rtl-optimization/90975\n+\tPR rtl-optimization/90976\n+\tPR target/91016\n+\tPR tree-optimization/91017\n+\t* config/i386/i386-expand.c (ix86_expand_rounddf_32): Remove\n+\tunused tmp.\n+\t* lra.c (lra_set_insn_recog_data): Remove a leftover from\n+\tinitial commit of IRA.\n+\t* optabs.c (expand_twoval_binop): Use xop0 and xop1 instead\n+\tof op0 and op1.\n+\t* tree-vect-loop.c (vect_create_epilog_for_reduction):\n+\tRemove unused mode1.\n+\t* tree-vect-stmts.c (vectorizable_call): Remove dead assignment\n+\tto new_stmt_info.\n+\n 2019-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/90991"}, {"sha": "8a4955f87d2f2094549c196b3b2f3df9d9e9551c", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=ef874db611879d5004e1d834543e55d31f2bfe1c", "patch": "@@ -16052,14 +16052,13 @@ ix86_expand_rounddf_32 (rtx operand0, rtx operand1)\n \t\t\t       0, OPTAB_DIRECT);\n \n   /* Compensate.  */\n-  tmp = gen_reg_rtx (mode);\n   /* xa2 = xa2 - (dxa > 0.5 ? 1 : 0) */\n   tmp = ix86_expand_sse_compare_mask (UNGT, dxa, half, false);\n-  emit_insn (gen_rtx_SET (tmp, gen_rtx_AND (mode, one, tmp)));\n+  emit_insn (gen_rtx_SET (tmp, gen_rtx_AND (mode, tmp, one)));\n   xa2 = expand_simple_binop (mode, MINUS, xa2, tmp, NULL_RTX, 0, OPTAB_DIRECT);\n   /* xa2 = xa2 + (dxa <= -0.5 ? 1 : 0) */\n   tmp = ix86_expand_sse_compare_mask (UNGE, mhalf, dxa, false);\n-  emit_insn (gen_rtx_SET (tmp, gen_rtx_AND (mode, one, tmp)));\n+  emit_insn (gen_rtx_SET (tmp, gen_rtx_AND (mode, tmp, one)));\n   xa2 = expand_simple_binop (mode, PLUS, xa2, tmp, NULL_RTX, 0, OPTAB_DIRECT);\n \n   /* res = copysign (xa2, operand1) */"}, {"sha": "982a3cc630ba7e6f77ffe108cce5375f2f6f4209", "filename": "gcc/lra.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=ef874db611879d5004e1d834543e55d31f2bfe1c", "patch": "@@ -1029,12 +1029,8 @@ lra_set_insn_recog_data (rtx_insn *insn)\n \t\t\t       data->operand_loc,\n \t\t\t       constraints, operand_mode, NULL);\n \t  if (nop > 0)\n-\t    {\n-\t      const char *p =  recog_data.constraints[0];\n-\n-\t      for (p =\tconstraints[0]; *p; p++)\n-\t\tnalt += *p == ',';\n-\t    }\n+\t    for (const char *p =constraints[0]; *p; p++)\n+\t      nalt += *p == ',';\n \t  data->insn_static_data = insn_static_data\n \t    = get_static_insn_data (-1, nop, 0, nalt);\n \t  for (i = 0; i < nop; i++)"}, {"sha": "18ca73709173579e3f2e01a7cfb474abf719fcef", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=ef874db611879d5004e1d834543e55d31f2bfe1c", "patch": "@@ -2095,8 +2095,8 @@ expand_twoval_binop (optab binoptab, rtx op0, rtx op1, rtx targ0, rtx targ1,\n       xop1 = avoid_expensive_constant (mode1, binoptab, 1, xop1, unsignedp);\n \n       create_fixed_operand (&ops[0], targ0);\n-      create_convert_operand_from (&ops[1], op0, mode, unsignedp);\n-      create_convert_operand_from (&ops[2], op1, mode, unsignedp);\n+      create_convert_operand_from (&ops[1], xop0, mode, unsignedp);\n+      create_convert_operand_from (&ops[2], xop1, mode, unsignedp);\n       create_fixed_operand (&ops[3], targ1);\n       if (maybe_expand_insn (icode, 4, ops))\n \treturn 1;"}, {"sha": "5176474694bd828c1dd45447967b69067fdcb35d", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=ef874db611879d5004e1d834543e55d31f2bfe1c", "patch": "@@ -5427,7 +5427,6 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs,\n             dump_printf_loc (MSG_NOTE, vect_location,\n \t\t\t     \"Reduce using vector shifts\\n\");\n \n-\t  mode1 = TYPE_MODE (vectype1);\n           vec_dest = vect_create_destination_var (scalar_dest, vectype1);\n           for (elt_offset = nelements / 2;\n                elt_offset >= 1;"}, {"sha": "415ac0c8679a259520d8be50b20fe9ac07dc3af1", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef874db611879d5004e1d834543e55d31f2bfe1c/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=ef874db611879d5004e1d834543e55d31f2bfe1c", "patch": "@@ -3483,8 +3483,7 @@ vectorizable_call (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \t\t\t= gimple_build_call_internal_vec (ifn, vargs);\n \t\t      gimple_call_set_lhs (call, half_res);\n \t\t      gimple_call_set_nothrow (call, true);\n-\t\t      new_stmt_info\n-\t\t\t= vect_finish_stmt_generation (stmt_info, call, gsi);\n+\t\t      vect_finish_stmt_generation (stmt_info, call, gsi);\n \t\t      if ((i & 1) == 0)\n \t\t\t{\n \t\t\t  prev_res = half_res;\n@@ -3583,8 +3582,7 @@ vectorizable_call (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \t      gcall *call = gimple_build_call_internal_vec (ifn, vargs);\n \t      gimple_call_set_lhs (call, half_res);\n \t      gimple_call_set_nothrow (call, true);\n-\t      new_stmt_info\n-\t\t= vect_finish_stmt_generation (stmt_info, call, gsi);\n+\t      vect_finish_stmt_generation (stmt_info, call, gsi);\n \t      if ((j & 1) == 0)\n \t\t{\n \t\t  prev_res = half_res;"}]}