{"sha": "12d52ac02131c13dee26f709550f2d5fe9fe2ca1", "node_id": "C_kwDOANBUbNoAKDEyZDUyYWMwMjEzMWMxM2RlZTI2ZjcwOTU1MGYyZDVmZTlmZTJjYTE", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-05-05T12:40:20Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-05-11T07:38:22Z"}, "message": "converter: Fix suffix condition\n\nThe suffix condition was wrong, the code was assigning a suffix to\nunsuffixed literals. The literals length equals the end of digit\nparsing position  means there is no suffix.\n\ngcc/rust/ChangeLog:\n\n\t* util/rust-token-converter.cc (dispatch_float_literals): Invert\n\tsuffix condition.\n\t(dispatch_integer_literals): Likewise.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "8491807ec924b7b33a934fd14c33f7ad60725a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8491807ec924b7b33a934fd14c33f7ad60725a34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12d52ac02131c13dee26f709550f2d5fe9fe2ca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d52ac02131c13dee26f709550f2d5fe9fe2ca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d52ac02131c13dee26f709550f2d5fe9fe2ca1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d52ac02131c13dee26f709550f2d5fe9fe2ca1/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39817cc6c962e4cbeb5782415b7194e9906ac18b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39817cc6c962e4cbeb5782415b7194e9906ac18b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39817cc6c962e4cbeb5782415b7194e9906ac18b"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "2047ea729678c50a67a3b92c5db8972e38ec4754", "filename": "gcc/rust/util/rust-token-converter.cc", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d52ac02131c13dee26f709550f2d5fe9fe2ca1/gcc%2Frust%2Futil%2Frust-token-converter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d52ac02131c13dee26f709550f2d5fe9fe2ca1/gcc%2Frust%2Futil%2Frust-token-converter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-token-converter.cc?ref=12d52ac02131c13dee26f709550f2d5fe9fe2ca1", "patch": "@@ -42,13 +42,13 @@ dispatch_float_literals (ProcMacro::TokenStream &ts,\n       case CORETYPE_F32: {\n \tauto value = std::stof (str, &sz);\n \tts.push (ProcMacro::TokenTree::make_tokentree (\n-\t  ProcMacro::Literal::make_f32 (value, sz == str.length ())));\n+\t  ProcMacro::Literal::make_f32 (value, sz != str.length ())));\n       }\n       break;\n       case CORETYPE_F64: {\n \tauto value = std::stod (str, &sz);\n \tts.push (ProcMacro::TokenTree::make_tokentree (\n-\t  ProcMacro::Literal::make_f64 (value, sz == str.length ())));\n+\t  ProcMacro::Literal::make_f64 (value, sz != str.length ())));\n       }\n       break;\n     default:\n@@ -70,52 +70,52 @@ dispatch_integer_literals (ProcMacro::TokenStream &ts,\n     case CORETYPE_U8:\n       uvalue = std::stoull (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_u8 (uvalue, sz == str.length ())));\n+\tProcMacro::Literal::make_u8 (uvalue, sz != str.length ())));\n       break;\n     case CORETYPE_U16:\n       uvalue = std::stoull (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_u16 (uvalue, sz == str.length ())));\n+\tProcMacro::Literal::make_u16 (uvalue, sz != str.length ())));\n       break;\n     case CORETYPE_U32:\n       uvalue = std::stoull (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_u32 (uvalue, sz == str.length ())));\n+\tProcMacro::Literal::make_u32 (uvalue, sz != str.length ())));\n       break;\n     case CORETYPE_U64:\n       uvalue = std::stoull (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_u32 (uvalue, sz == str.length ())));\n+\tProcMacro::Literal::make_u32 (uvalue, sz != str.length ())));\n       break;\n     case CORETYPE_I8:\n       svalue = std::stoll (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_i8 (svalue, sz == str.length ())));\n+\tProcMacro::Literal::make_i8 (svalue, sz != str.length ())));\n       break;\n     case CORETYPE_I16:\n       svalue = std::stoll (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_i16 (svalue, sz == str.length ())));\n+\tProcMacro::Literal::make_i16 (svalue, sz != str.length ())));\n       break;\n     case CORETYPE_I32:\n       svalue = std::stoll (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_i32 (svalue, sz == str.length ())));\n+\tProcMacro::Literal::make_i32 (svalue, sz != str.length ())));\n       break;\n     case CORETYPE_I64:\n       svalue = std::stoll (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_i32 (svalue, sz == str.length ())));\n+\tProcMacro::Literal::make_i32 (svalue, sz != str.length ())));\n       break;\n     case CORETYPE_INT:\n       svalue = std::stoll (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_isize (svalue, sz == str.length ())));\n+\tProcMacro::Literal::make_isize (svalue, sz != str.length ())));\n       break;\n     case CORETYPE_UINT:\n       uvalue = std::stoull (str, &sz);\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_usize (uvalue, sz == str.length ())));\n+\tProcMacro::Literal::make_usize (uvalue, sz != str.length ())));\n       break;\n     case CORETYPE_UNKNOWN:\n     default:"}]}