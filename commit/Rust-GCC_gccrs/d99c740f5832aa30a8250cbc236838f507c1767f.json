{"sha": "d99c740f5832aa30a8250cbc236838f507c1767f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5Yzc0MGY1ODMyYWEzMGE4MjUwY2JjMjM2ODM4ZjUwN2MxNzY3Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-01-20T06:42:58Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-01-20T06:42:58Z"}, "message": "h8300.c (notice_update_cc): Don't assume that recog_data.operands[0] is always associated with cc0.\n\n\t* config/h8300/h8300.c (notice_update_cc): Don't assume that\n\trecog_data.operands[0] is always associated with cc0.\n\n\t* gcc.c-torture/execute/20030120-1.c: New.\n\nFrom-SVN: r61498", "tree": {"sha": "994e603809a734f6410e7b55b59c41d430eb4b01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/994e603809a734f6410e7b55b59c41d430eb4b01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99c740f5832aa30a8250cbc236838f507c1767f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99c740f5832aa30a8250cbc236838f507c1767f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99c740f5832aa30a8250cbc236838f507c1767f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99c740f5832aa30a8250cbc236838f507c1767f/comments", "author": null, "committer": null, "parents": [{"sha": "3fdd055a2b38027829a3f5c22678c962d80147d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fdd055a2b38027829a3f5c22678c962d80147d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fdd055a2b38027829a3f5c22678c962d80147d4"}], "stats": {"total": 73, "additions": 69, "deletions": 4}, "files": [{"sha": "5e795cee8fae99659791030fd922327526b443bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99c740f5832aa30a8250cbc236838f507c1767f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99c740f5832aa30a8250cbc236838f507c1767f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d99c740f5832aa30a8250cbc236838f507c1767f", "patch": "@@ -1,3 +1,8 @@\n+2003-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (notice_update_cc): Don't assume that\n+\trecog_data.operands[0] is always associated with cc0.\n+\n 2003-01-19  David Edelsohn  <edelsohn@gnu.org>\n \n \t* collect2.c (ldgetname): Expand declaration to prototype."}, {"sha": "faa924816ed72c56e9ae92fda02e7165553fd70c", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99c740f5832aa30a8250cbc236838f507c1767f/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99c740f5832aa30a8250cbc236838f507c1767f/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=d99c740f5832aa30a8250cbc236838f507c1767f", "patch": "@@ -1710,6 +1710,8 @@ notice_update_cc (body, insn)\n      rtx body;\n      rtx insn;\n {\n+  rtx set;\n+\n   switch (get_attr_cc (insn))\n     {\n     case CC_NONE:\n@@ -1732,7 +1734,10 @@ notice_update_cc (body, insn)\n \t that's ok because alter_cond will change tests to use EQ/NE.  */\n       CC_STATUS_INIT;\n       cc_status.flags |= CC_OVERFLOW_UNUSABLE | CC_NO_CARRY;\n-      cc_status.value1 = recog_data.operand[0];\n+      set = single_set (insn);\n+      cc_status.value1 = SET_SRC (set);\n+      if (SET_DEST (set) != cc0_rtx)\n+\tcc_status.value2 = SET_DEST (set);\n       break;\n \n     case CC_SET_ZNV:\n@@ -1741,9 +1746,10 @@ notice_update_cc (body, insn)\n \t alter_cond will change tests to use EQ/NE.  */\n       CC_STATUS_INIT;\n       cc_status.flags |= CC_NO_CARRY;\n-      cc_status.value1 = recog_data.operand[0];\n-      if (GET_CODE (body) == SET && REG_P (SET_SRC (body)))\n-\tcc_status.value2 = SET_SRC (body);\n+      set = single_set (insn);\n+      cc_status.value1 = SET_SRC (set);\n+      if (SET_DEST (set) != cc0_rtx)\n+\tcc_status.value2 = SET_DEST (set);\n       break;\n \n     case CC_COMPARE:"}, {"sha": "79e76c02697b43b6cb9d79326702a2f6cda1ae80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99c740f5832aa30a8250cbc236838f507c1767f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99c740f5832aa30a8250cbc236838f507c1767f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d99c740f5832aa30a8250cbc236838f507c1767f", "patch": "@@ -1,3 +1,7 @@\n+2003-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* gcc.c-torture/execute/20030120-1.c: New.\n+\n 2003-01-19  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* g++.old-deja/g++.pt/typename13.C: Remove XFAIL."}, {"sha": "0ac0ecf7025879e1f8bbcf856e204499c89c2d86", "filename": "gcc/testsuite/gcc.c-torture/execute/20030120-1.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99c740f5832aa30a8250cbc236838f507c1767f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030120-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99c740f5832aa30a8250cbc236838f507c1767f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030120-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030120-1.c?ref=d99c740f5832aa30a8250cbc236838f507c1767f", "patch": "@@ -0,0 +1,50 @@\n+/* On H8/300 port, NOTICE_UPDATE_CC had a bug that causes the final\n+   pass to remove test insns that should be kept.  */\n+\n+unsigned short\n+test1 (unsigned short w)\n+{\n+  if ((w & 0xff00) == 0)\n+    {\n+      if (w == 0)\n+\tw = 2;\n+    }\n+  return w;\n+}\n+\n+unsigned long\n+test2 (unsigned long w)\n+{\n+  if ((w & 0xffff0000) == 0)\n+    {\n+      if (w == 0)\n+\tw = 2;\n+    }\n+  return w;\n+}\n+\n+int\n+test3 (unsigned short a)\n+{\n+  if (a & 1)\n+    return 1;\n+  else if (a)\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n+int\n+main ()\n+{\n+  if (test1 (1) != 1)\n+    abort ();\n+\n+  if (test2 (1) != 1)\n+    abort ();\n+\n+  if (test3 (2) != 1)\n+    abort ();\n+\n+  exit (0);\n+}"}]}