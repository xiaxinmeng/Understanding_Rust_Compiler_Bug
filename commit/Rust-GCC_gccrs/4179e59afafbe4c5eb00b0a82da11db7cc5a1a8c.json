{"sha": "4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE3OWU1OWFmYWZiZTRjNWViMDBiMGE4MmRhMTFkYjdjYzVhMWE4Yw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-05-23T08:34:06Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-05-23T08:34:06Z"}, "message": "re PR libfortran/53444 (Accommodate non-compliant strerror_r() on VxWorks.)\n\n2012-05-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR libfortran/53444\n        * acinclude.m4 (LIBGFOR_CHECK_STRERROR_R): Add configure checks\n        * for\n        two- and three-argument versions of strerror_r.\n        * configure.ac (LIBGFOR_CHECK_STRERROR_R): Use it.\n        * runtime/error.c (gf_strerror): Handle two-argument version\n        of strerror_r.\n        * config.h.in: Regenerate.\n        * configure: Regenerate.\n\nFrom-SVN: r187796", "tree": {"sha": "d08f712df5fe7cd79a42d70f17fd6a12386816f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d08f712df5fe7cd79a42d70f17fd6a12386816f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f883872b10c06e67e59d3e0f192b804dc5ec3121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f883872b10c06e67e59d3e0f192b804dc5ec3121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f883872b10c06e67e59d3e0f192b804dc5ec3121"}], "stats": {"total": 103, "additions": 98, "deletions": 5}, "files": [{"sha": "12cf5f14d802ff6bbca8b1e349ac4d15e211ddef", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "patch": "@@ -1,3 +1,14 @@\n+2012-05-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/53444\n+\t* acinclude.m4 (LIBGFOR_CHECK_STRERROR_R): Add configure checks for\n+\ttwo- and three-argument versions of strerror_r.\n+\t* configure.ac (LIBGFOR_CHECK_STRERROR_R): Use it.\n+\t* runtime/error.c (gf_strerror): Handle two-argument version\n+\tof strerror_r.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2012-05-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure: Regenerated."}, {"sha": "d10126150eab6418fb6ffbc6e2eb0219bacab742", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "patch": "@@ -362,3 +362,29 @@ AC_DEFUN([LIBGFOR_CHECK_FLOAT128], [\n   dnl We need a conditional for the Makefile\n   AM_CONDITIONAL(LIBGFOR_BUILD_QUAD, [test \"x$libgfor_cv_have_float128\" = xyes])\n ])\n+\n+\n+dnl Check whether we have strerror_r\n+AC_DEFUN([LIBGFOR_CHECK_STRERROR_R], [\n+  dnl Check for three-argument POSIX version of strerror_r\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"-Wimplicit-function-declaration -Werror\"\n+  AC_TRY_COMPILE([#define _GNU_SOURCE 1\n+\t     \t  #include <string.h>\n+\t\t  #include <locale.h>],\n+\t\t  [char s[128]; strerror_r(5, s, 128);],\n+\t\t  AC_DEFINE(HAVE_STRERROR_R, 1,\n+\t\t  [Define if strerror_r is available in <string.h>.]),)\n+  CFLAGS=\"$ac_save_CFLAGS\"\n+\n+  dnl Check for two-argument version of strerror_r (e.g. for VxWorks)\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"-Wimplicit-function-declaration -Werror\"\n+  AC_TRY_COMPILE([#define _GNU_SOURCE 1\n+\t     \t  #include <string.h>\n+\t\t  #include <locale.h>],\n+\t\t  [char s[128]; strerror_r(5, s);],\n+\t\t  AC_DEFINE(HAVE_STRERROR_R_2ARGS, 1,\n+\t\t  [Define if strerror_r takes two arguments and is available in <string.h>.]),)\n+  CFLAGS=\"$ac_save_CFLAGS\"\n+])"}, {"sha": "43ba0259862f70f34d5aeafebc1c841a81a9e4af", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "patch": "@@ -696,9 +696,12 @@\n /* Define to 1 if you have the `strcasestr' function. */\n #undef HAVE_STRCASESTR\n \n-/* Define to 1 if you have the `strerror_r' function. */\n+/* Define if strerror_r is available in <string.h>. */\n #undef HAVE_STRERROR_R\n \n+/* Define if strerror_r takes two arguments and is available in <string.h>. */\n+#undef HAVE_STRERROR_R_2ARGS\n+\n /* Define to 1 if you have the <strings.h> header file. */\n #undef HAVE_STRINGS_H\n "}, {"sha": "ca33870e9f630f3435b6c281df999258c439b859", "filename": "libgfortran/configure", "status": "modified", "additions": 49, "deletions": 3, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "patch": "@@ -2581,7 +2581,6 @@ as_fn_append ac_func_list \" dup\"\n as_fn_append ac_func_list \" getcwd\"\n as_fn_append ac_func_list \" localtime_r\"\n as_fn_append ac_func_list \" gmtime_r\"\n-as_fn_append ac_func_list \" strerror_r\"\n as_fn_append ac_func_list \" getpwuid_r\"\n as_fn_append ac_func_list \" ttyname_r\"\n as_fn_append ac_func_list \" clock_gettime\"\n@@ -12328,7 +12327,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12331 \"configure\"\n+#line 12330 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12434,7 +12433,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12437 \"configure\"\n+#line 12436 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16547,6 +16546,53 @@ done\n \n \n \n+# Check strerror_r, cannot be above as versions with two and three arguments exist\n+\n+    ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"-Wimplicit-function-declaration -Werror\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#define _GNU_SOURCE 1\n+\t     \t  #include <string.h>\n+\t\t  #include <locale.h>\n+int\n+main ()\n+{\n+char s[128]; strerror_r(5, s, 128);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+$as_echo \"#define HAVE_STRERROR_R 1\" >>confdefs.h\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  CFLAGS=\"$ac_save_CFLAGS\"\n+\n+    ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"-Wimplicit-function-declaration -Werror\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#define _GNU_SOURCE 1\n+\t     \t  #include <string.h>\n+\t\t  #include <locale.h>\n+int\n+main ()\n+{\n+char s[128]; strerror_r(5, s);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+$as_echo \"#define HAVE_STRERROR_R_2ARGS 1\" >>confdefs.h\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  CFLAGS=\"$ac_save_CFLAGS\"\n \n \n # Check for C99 (and other IEEE) math functions"}, {"sha": "fc58a5c24b95232825fe8561d8031264900ab793", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "patch": "@@ -265,9 +265,12 @@ AC_CHECK_FUNCS_ONCE(getrusage times mkstemp strtof strtold snprintf \\\n ftruncate chsize chdir getlogin gethostname kill link symlink sleep ttyname \\\n alarm access fork execl wait setmode execve pipe dup2 close \\\n strcasestr getrlimit gettimeofday stat fstat lstat getpwuid vsnprintf dup \\\n-getcwd localtime_r gmtime_r strerror_r getpwuid_r ttyname_r clock_gettime \\\n+getcwd localtime_r gmtime_r getpwuid_r ttyname_r clock_gettime \\\n readlink getgid getpid getppid getuid geteuid umask getegid __secure_getenv)\n \n+# Check strerror_r, cannot be above as versions with two and three arguments exist\n+LIBGFOR_CHECK_STRERROR_R\n+\n # Check for C99 (and other IEEE) math functions\n GCC_CHECK_MATH_FUNC([acosf])\n GCC_CHECK_MATH_FUNC([acos])"}, {"sha": "3955e44cea068d8fd0c22d8087f14a0f5e3c8447", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=4179e59afafbe4c5eb00b0a82da11db7cc5a1a8c", "patch": "@@ -212,13 +212,17 @@ gf_strerror (int errnum,\n \t     size_t buflen __attribute__((unused)))\n {\n #ifdef HAVE_STRERROR_R\n+  /* POSIX returns an \"int\", GNU a \"char*\".  */\n   return\n     __builtin_choose_expr (__builtin_classify_type (strerror_r (0, buf, 0))\n \t\t\t   == 5,\n \t\t\t   /* GNU strerror_r()  */\n \t\t\t   strerror_r (errnum, buf, buflen),\n \t\t\t   /* POSIX strerror_r ()  */\n \t\t\t   (strerror_r (errnum, buf, buflen), buf));\n+#elif defined(HAVE_STRERROR_R_2ARGS)\n+  strerror_r (errnum, buf);\n+  return buf;\n #else\n   /* strerror () is not necessarily thread-safe, but should at least\n      be available everywhere.  */"}]}