{"sha": "732910b9c53b72ae93ef74e22cb9b35c9f69ed83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMyOTEwYjljNTNiNzJhZTkzZWY3NGUyMmNiOWIzNWM5ZjY5ZWQ4Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-07-26T23:47:15Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-26T23:47:15Z"}, "message": "simplify-rtx.c (avoid_constant_pool_reference): Export.\n\n        * simplify-rtx.c (avoid_constant_pool_reference): Export.\n        * rtl.h (avoid_constant_pool_reference): Declare it.\n        * dwarf2out.c (add_location_or_const_value_attribute): Use it.\n        (add_const_value_attribute): Use add_AT_unsigned for unsigned values.\n\nFrom-SVN: r44411", "tree": {"sha": "8034b92545d1aa23faec2e0ccf18de8061813335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8034b92545d1aa23faec2e0ccf18de8061813335"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/732910b9c53b72ae93ef74e22cb9b35c9f69ed83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732910b9c53b72ae93ef74e22cb9b35c9f69ed83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/732910b9c53b72ae93ef74e22cb9b35c9f69ed83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/comments", "author": null, "committer": null, "parents": [{"sha": "62ba5f39b2c80f527974e4d58eb09a8d2a35bb7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ba5f39b2c80f527974e4d58eb09a8d2a35bb7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62ba5f39b2c80f527974e4d58eb09a8d2a35bb7c"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "08f8c66de13c977ac1f8ce7bb64d4de232f5a6fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=732910b9c53b72ae93ef74e22cb9b35c9f69ed83", "patch": "@@ -1,3 +1,10 @@\n+2001-07-26  Richard Henderson  <rth@redhat.com>\n+\n+\t* simplify-rtx.c (avoid_constant_pool_reference): Export.\n+\t* rtl.h (avoid_constant_pool_reference): Declare it.\n+\t* dwarf2out.c (add_location_or_const_value_attribute): Use it.\n+\t(add_const_value_attribute): Use add_AT_unsigned for unsigned values.\n+\n Thu Jul 26 22:30:22 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* rtl.h (cleanup_barriers): Declare."}, {"sha": "b31eaa82a9f7b1f94b6f00ef5411e8049f42ba37", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=732910b9c53b72ae93ef74e22cb9b35c9f69ed83", "patch": "@@ -8215,7 +8215,7 @@ add_const_value_attribute (die, rtl)\n \t  {\n \t    if ((unsigned long) val != (unsigned HOST_WIDE_INT) val)\n \t      abort ();\n-\t    add_AT_int (die, DW_AT_const_value, (unsigned long) val);\n+\t    add_AT_unsigned (die, DW_AT_const_value, (unsigned long) val);\n \t  }\n       }\n       break;\n@@ -8474,6 +8474,11 @@ add_location_or_const_value_attribute (die, decl)\n   if (rtl == NULL_RTX)\n     return;\n \n+  /* If we don't look past the constant pool, we risk emitting a\n+     reference to a constant pool entry that isn't referenced from\n+     code, and thus is not emitted.  */\n+  rtl = avoid_constant_pool_reference (rtl);\n+\n   switch (GET_CODE (rtl))\n     {\n     case ADDRESSOF:"}, {"sha": "e7fdc98a71557bfee276ba5f7131e18806ffeb32", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=732910b9c53b72ae93ef74e22cb9b35c9f69ed83", "patch": "@@ -1345,6 +1345,7 @@ extern rtx simplify_gen_subreg\t\tPARAMS ((enum machine_mode,\n \t\t\t\t\t\t unsigned int));\n extern rtx simplify_replace_rtx\t\tPARAMS ((rtx, rtx, rtx));\n extern rtx simplify_rtx\t\t\tPARAMS ((rtx));\n+extern rtx avoid_constant_pool_reference PARAMS ((rtx));\n \n /* In function.c  */\n extern rtx gen_mem_addressof\t\tPARAMS ((rtx, union tree_node *));"}, {"sha": "1a6f30696d59d7afec0d114ed08d0b84e0d6a988", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732910b9c53b72ae93ef74e22cb9b35c9f69ed83/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=732910b9c53b72ae93ef74e22cb9b35c9f69ed83", "patch": "@@ -99,7 +99,6 @@ Boston, MA 02111-1307, USA.  */\n static rtx simplify_plus_minus\t\tPARAMS ((enum rtx_code,\n \t\t\t\t\t\t enum machine_mode, rtx, rtx));\n static void check_fold_consts\t\tPARAMS ((PTR));\n-static rtx avoid_constant_pool_reference PARAMS ((rtx));\n \f\n /* Make a binary operation by properly ordering the operands and \n    seeing if the expression folds.  */\n@@ -138,7 +137,7 @@ simplify_gen_binary (code, mode, op0, op1)\n \f\n /* If X is a MEM referencing the constant pool, return the real value.\n    Otherwise return X.  */\n-static rtx\n+rtx\n avoid_constant_pool_reference (x)\n      rtx x;\n {"}]}