{"sha": "c5f7c4459e69cd56f51d92ad842a9652c94466e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVmN2M0NDU5ZTY5Y2Q1NmY1MWQ5MmFkODQyYTk2NTJjOTQ0NjZlMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-11-02T07:24:47Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-11-02T07:24:47Z"}, "message": "pexecute.c: Check HAVE_CONFIG_H, not IN_GCC, when determining whether to include config.h.\n\n        * pexecute.c: Check HAVE_CONFIG_H, not IN_GCC, when determining\n        whether to include config.h.  Possibly include unistd.h in the\n        !IN_GCC case.  Define VFORK_STRING as a printable function call\n        for error messages (either \"vfork\" or \"fork\".)  If HAVE_VFORK_H is\n        defined, include vfork.h.  If VMS is defined, define vfork()\n        appropriately.  Remove vfork check on USG, we're using autoconf.\n        (pexecute): Set `errmsg_fmt' to VFORK_STRING instead of checking\n        locally what string to use.\n\nFrom-SVN: r23499", "tree": {"sha": "ebeeac360aa9e74086435dd1b4b79b026f8ef459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebeeac360aa9e74086435dd1b4b79b026f8ef459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5f7c4459e69cd56f51d92ad842a9652c94466e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5f7c4459e69cd56f51d92ad842a9652c94466e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5f7c4459e69cd56f51d92ad842a9652c94466e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5f7c4459e69cd56f51d92ad842a9652c94466e0/comments", "author": null, "committer": null, "parents": [{"sha": "c375c43b73df248b6c1b7c87608ba491600c3e0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c375c43b73df248b6c1b7c87608ba491600c3e0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c375c43b73df248b6c1b7c87608ba491600c3e0a"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "f2b5105788d7237752e59b40990855793ff94869", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f7c4459e69cd56f51d92ad842a9652c94466e0/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f7c4459e69cd56f51d92ad842a9652c94466e0/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=c5f7c4459e69cd56f51d92ad842a9652c94466e0", "patch": "@@ -1,3 +1,14 @@\n+Mon Nov  2 10:22:01 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* pexecute.c: Check HAVE_CONFIG_H, not IN_GCC, when determining\n+ \twhether to include config.h.  Possibly include unistd.h in the\n+ \t!IN_GCC case.  Define VFORK_STRING as a printable function call\n+ \tfor error messages (either \"vfork\" or \"fork\".)  If HAVE_VFORK_H is\n+ \tdefined, include vfork.h.  If VMS is defined, define vfork()\n+ \tappropriately.  Remove vfork check on USG, we're using autoconf.\n+  \t(pexecute): Set `errmsg_fmt' to VFORK_STRING instead of checking\n+ \tlocally what string to use.\n+\n 1998-10-26  Mark Mitchell  <mark@markmitchell.com>\n \n \t* splay-tree.c: Tweak include directives to make sure declarations of"}, {"sha": "b82f987f2e7a36414304db565782fd094a20e87b", "filename": "libiberty/pexecute.c", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5f7c4459e69cd56f51d92ad842a9652c94466e0/libiberty%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5f7c4459e69cd56f51d92ad842a9652c94466e0/libiberty%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpexecute.c?ref=c5f7c4459e69cd56f51d92ad842a9652c94466e0", "patch": "@@ -23,15 +23,33 @@ Boston, MA 02111-1307, USA.  */\n /* This file lives in at least two places: libiberty and gcc.\n    Don't change one without the other.  */\n \n-#ifdef IN_GCC\n+#ifdef HAVE_CONFIG_H\n #include \"config.h\"\n+#endif\n+#ifdef IN_GCC\n #include \"system.h\"\n #else\n #include <stdio.h>\n #include <errno.h>\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif\n #define ISSPACE (x) isspace(x)\n #endif\n \n+#ifdef vfork /* Autoconf may define this to fork for us. */\n+# define VFORK_STRING \"fork\"\n+#else\n+# define VFORK_STRING \"vfork\"\n+#endif\n+#ifdef HAVE_VFORK_H\n+#include <vfork.h>\n+#endif\n+#ifdef VMS\n+#define vfork() (decc$$alloc_vfork_blocks() >= 0 ? \\\n+               lib$get_current_invo_context(decc$$get_vfork_jmpbuf()) : -1)\n+#endif /* VMS */\n+\n #ifdef IN_GCC\n #include \"gansidecl.h\"\n /* ??? Need to find a suitable header file.  */\n@@ -628,15 +646,6 @@ pfinish ()\n #if ! defined (__MSDOS__) && ! defined (OS2) && ! defined (MPW) \\\n     && ! defined (_WIN32)\n \n-#ifdef VMS\n-#define vfork() (decc$$alloc_vfork_blocks() >= 0 ? \\\n-               lib$get_current_invo_context(decc$$get_vfork_jmpbuf()) : -1)\n-#else\n-#ifdef USG\n-#define vfork fork\n-#endif\n-#endif\n-\n extern int execv ();\n extern int execvp ();\n #ifdef IN_GCC\n@@ -703,11 +712,7 @@ pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n     {\n     case -1:\n       {\n-#ifdef vfork\n-\t*errmsg_fmt = \"fork\";\n-#else\n-\t*errmsg_fmt = \"vfork\";\n-#endif\n+\t*errmsg_fmt = VFORK_STRING;\n \t*errmsg_arg = NULL;\n \treturn -1;\n       }"}]}