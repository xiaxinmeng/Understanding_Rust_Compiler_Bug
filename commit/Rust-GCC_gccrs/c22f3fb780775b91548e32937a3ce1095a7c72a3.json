{"sha": "c22f3fb780775b91548e32937a3ce1095a7c72a3", "node_id": "C_kwDOANBUbNoAKGMyMmYzZmI3ODA3NzViOTE1NDhlMzI5MzdhM2NlMTA5NWE3YzcyYTM", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-02-10T17:57:37Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-02-10T18:03:42Z"}, "message": "OpenMP/C++: Permit mapping classes with virtual members [PR102204]\n\n\tPR c++/102204\ngcc/cp/ChangeLog:\n\n\t* decl2.cc (cp_omp_mappable_type_1): Remove check for virtual\n\tmembers as those are permitted since OpenMP 5.0.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.c++/target-virtual-1.C: New test.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/gomp/unmappable-1.C: Remove previously expected dg-message.", "tree": {"sha": "35d9aa0240500ef3e7509ce482f793e7fbd17788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35d9aa0240500ef3e7509ce482f793e7fbd17788"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c22f3fb780775b91548e32937a3ce1095a7c72a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22f3fb780775b91548e32937a3ce1095a7c72a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c22f3fb780775b91548e32937a3ce1095a7c72a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22f3fb780775b91548e32937a3ce1095a7c72a3/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ac7b19f1e9219f46ccf55f25d8acb3e02e9a2d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac7b19f1e9219f46ccf55f25d8acb3e02e9a2d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac7b19f1e9219f46ccf55f25d8acb3e02e9a2d4"}], "stats": {"total": 60, "additions": 51, "deletions": 9}, "files": [{"sha": "c6bfcfe631a6431fa31be05bff221e3945d27ebb", "filename": "gcc/cp/decl2.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22f3fb780775b91548e32937a3ce1095a7c72a3/gcc%2Fcp%2Fdecl2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22f3fb780775b91548e32937a3ce1095a7c72a3/gcc%2Fcp%2Fdecl2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.cc?ref=c22f3fb780775b91548e32937a3ce1095a7c72a3", "patch": "@@ -1540,14 +1540,6 @@ cp_omp_mappable_type_1 (tree type, bool notes)\n   /* Arrays have mappable type if the elements have mappable type.  */\n   while (TREE_CODE (type) == ARRAY_TYPE)\n     type = TREE_TYPE (type);\n-  /* A mappable type cannot contain virtual members.  */\n-  if (CLASS_TYPE_P (type) && CLASSTYPE_VTABLES (type))\n-    {\n-      if (notes)\n-\tinform (DECL_SOURCE_LOCATION (TYPE_MAIN_DECL (type)),\n-\t\t\"type %qT with virtual members is not mappable\", type);\n-      result = false;\n-    }\n   /* All data members must be non-static.  */\n   if (CLASS_TYPE_P (type))\n     {"}, {"sha": "364f884500c61834f885a34a641f452ba25615b6", "filename": "gcc/testsuite/g++.dg/gomp/unmappable-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22f3fb780775b91548e32937a3ce1095a7c72a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Funmappable-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22f3fb780775b91548e32937a3ce1095a7c72a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Funmappable-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Funmappable-1.C?ref=c22f3fb780775b91548e32937a3ce1095a7c72a3", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fopenmp\" } */\n \n-class C /* { dg-message \"type .C. with virtual members is not mappable\" } */\n+class C\n {\n public:\n   static int static_member; /* { dg-message \"static field .C::static_member. is not mappable\" } */"}, {"sha": "a6ac30e7cf0a63c1d6d50c935da3835a0739bf1d", "filename": "libgomp/testsuite/libgomp.c++/target-virtual-1.C", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22f3fb780775b91548e32937a3ce1095a7c72a3/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-virtual-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22f3fb780775b91548e32937a3ce1095a7c72a3/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-virtual-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-virtual-1.C?ref=c22f3fb780775b91548e32937a3ce1095a7c72a3", "patch": "@@ -0,0 +1,50 @@\n+/* { dg-do run } */\n+/* Check that classes with virtual member functions works,\n+   when using it as declared type. */\n+struct base {\n+    float data [100];\n+\n+    base() = default;\n+    virtual ~base() = default;\n+};\n+\n+struct derived : public base {\n+    int scalar, array[5];\n+\n+    derived() = default;\n+    void do_work ()\n+    {\n+      int error = 0;\n+      #pragma omp target map (tofrom: this[:1], error)\n+      {\n+\tif (scalar != 42 || this->array[0] != 123 || array[4] != 555)\n+\t  error = 1;\n+\tif (data[0] != 333 || data[99] != -3)\n+\t  error = 1;\n+\tthis->scalar = 99;\n+\tarray[0] = 5;\n+\tarray[4] = -4;\n+\tthis->data[0] = 11;\n+\tthis->data[99] = 99;\n+      }\n+      if (error)\n+\t__builtin_abort ();\n+      if (data[0] != 11 || data[99] != 99)\n+\t__builtin_abort ();\n+      if (scalar != 99 || array[0] != 5 || array[4] != -4)\n+\t__builtin_abort ();\n+    }   \n+};\n+\n+int\n+main ()\n+{\n+  struct derived x;\n+  x.data[0] = 333;\n+  x.data[99] = -3;\n+  x.scalar = 42;\n+  x.array[0] = 123;\n+  x.array[4] = 555;\n+  x.do_work ();\n+  return 0;\n+}"}]}