{"sha": "92961bdf2dfc63965a05302aac6c907065bd2c27", "node_id": "C_kwDOANBUbNoAKDkyOTYxYmRmMmRmYzYzOTY1YTA1MzAyYWFjNmM5MDcwNjViZDJjMjc", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-09-27T20:44:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-11T13:38:13Z"}, "message": "[Ada] Fix incorrect size for pathological pass-by-copy parameters\n\ngcc/ada/\n\n\t* gcc-interface/decl.c (gnat_to_gnu_param): Strip padding types\n\tonly if the size does not change in the process.  Rename local\n\tvariable and add bypass for initialization procedures.", "tree": {"sha": "593eaa3c7ec79eb171dead891b8731c91e86e2c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/593eaa3c7ec79eb171dead891b8731c91e86e2c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92961bdf2dfc63965a05302aac6c907065bd2c27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92961bdf2dfc63965a05302aac6c907065bd2c27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92961bdf2dfc63965a05302aac6c907065bd2c27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92961bdf2dfc63965a05302aac6c907065bd2c27/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547513eeab951fddeb53baaa577de32dc8b779de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/547513eeab951fddeb53baaa577de32dc8b779de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/547513eeab951fddeb53baaa577de32dc8b779de"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "5e42dd92dc79cf383913800623ebadd32153bf72", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92961bdf2dfc63965a05302aac6c907065bd2c27/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92961bdf2dfc63965a05302aac6c907065bd2c27/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=92961bdf2dfc63965a05302aac6c907065bd2c27", "patch": "@@ -5403,19 +5403,21 @@ gnat_to_gnu_param (Entity_Id gnat_param, tree gnu_param_type, bool first,\n       mech = Default;\n     }\n \n-  /* If this is either a foreign function or if the underlying type won't\n-     be passed by reference and is as aligned as the original type, strip\n-     off possible padding type.  */\n+  /* Either for foreign conventions, or if the underlying type is not passed\n+     by reference and is as large and aligned as the original type, strip off\n+     a possible padding type.  */\n   if (TYPE_IS_PADDING_P (gnu_param_type))\n     {\n-      tree unpadded_type = TREE_TYPE (TYPE_FIELDS (gnu_param_type));\n+      tree inner_type = TREE_TYPE (TYPE_FIELDS (gnu_param_type));\n \n       if (foreign\n \t  || (mech != By_Reference\n-\t      && !must_pass_by_ref (unpadded_type)\n-\t      && (mech == By_Copy || !default_pass_by_ref (unpadded_type))\n-\t      && TYPE_ALIGN (unpadded_type) >= TYPE_ALIGN (gnu_param_type)))\n-\tgnu_param_type = unpadded_type;\n+\t      && !must_pass_by_ref (inner_type)\n+\t      && (mech == By_Copy || !default_pass_by_ref (inner_type))\n+\t      && ((TYPE_SIZE (inner_type) == TYPE_SIZE (gnu_param_type)\n+\t\t   && TYPE_ALIGN (inner_type) >= TYPE_ALIGN (gnu_param_type))\n+\t\t  || Is_Init_Proc (gnat_subprog))))\n+\tgnu_param_type = inner_type;\n     }\n \n   /* For foreign conventions, pass arrays as pointers to the element type."}]}