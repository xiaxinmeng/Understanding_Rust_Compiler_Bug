{"sha": "4c6d912f7f9e9263fad575bafd110d9a55836c66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2ZDkxMmY3ZjllOTI2M2ZhZDU3NWJhZmQxMTBkOWE1NTgzNmM2Ng==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-05-12T15:51:55Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-12T15:51:55Z"}, "message": "enhance the format style c_fix & remove unneeded wrapper funcs\n\nFrom-SVN: r33872", "tree": {"sha": "d456b0812a55656cb66a6ea2ce983f539bd98de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d456b0812a55656cb66a6ea2ce983f539bd98de1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c6d912f7f9e9263fad575bafd110d9a55836c66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6d912f7f9e9263fad575bafd110d9a55836c66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c6d912f7f9e9263fad575bafd110d9a55836c66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6d912f7f9e9263fad575bafd110d9a55836c66/comments", "author": null, "committer": null, "parents": [{"sha": "d30a91f5bf7e2d80d51b5a017e1a58fb9b5786ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30a91f5bf7e2d80d51b5a017e1a58fb9b5786ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30a91f5bf7e2d80d51b5a017e1a58fb9b5786ac"}], "stats": {"total": 190, "additions": 101, "deletions": 89}, "files": [{"sha": "456338e8ae254ee53abef68056019d5c8efef297", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c6d912f7f9e9263fad575bafd110d9a55836c66", "patch": "@@ -1,3 +1,23 @@\n+2000-05-12  Zack Weinberg <zack@wolery.cumb.org>\n+\n+        * fixinc/fixfixes.c (IO_use_fix, IO_defn_fix, CTRL_use_fix,\n+        CTRL_defn_fix): Delete.\n+        (fix_char_macro_defines, fix_char_macro_uses): Rename to\n+        char_macro_def_fix and char_macro_use_fix, respectively.  Put\n+        them into the FIXUP_TABLE.  Get the string to search for from\n+        a c_fix_arg.\n+\n+        (format_write): New function.\n+        (format_fix): Use it.\n+\n+        (FIX_PROC_HEAD): Constify text parameter.\n+        (machine_name_fix): Constify all char *s.\n+        * fixtests.c (skip_quote): Remove double static.\n+\n+        * inclhack.def (io_def_quotes, io_use_quotes, ctrl_def_quotes,\n+        ctrl_use_quotes): Update for new scheme.\n+        * fixincl.x: Regenerate.\n+\n 2000-05-12  Alexandre Oliva  <aoliva@cygnus.com>\n \n \t* config/mn10300/mn10300.h (PREFERRED_DEBUGGING_TYPE): Redefine as"}, {"sha": "11a559dd5ebb9f33cfaf9cf1f87a7b9c777ab040", "filename": "gcc/fixinc/fixfixes.c", "status": "modified", "additions": 55, "deletions": 71, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2Ffixinc%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2Ffixinc%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixfixes.c?ref=4c6d912f7f9e9263fad575bafd110d9a55836c66", "patch": "@@ -123,6 +123,37 @@ print_quote( q, text )\n   return text;\n }\n \n+static void\n+format_write (format, text, av)\n+     tCC* format;\n+     tCC* text;\n+     regmatch_t av[];\n+{\n+    tCC *p, *str;\n+    int c;\n+    size_t len;\n+\n+    for (p = 0; *p; p++) {\n+       c = *p;\n+       if (c != '%') {\n+           putchar(c);\n+           continue;\n+       }\n+\n+       c = *++p;\n+       if (c == '%') {\n+           putchar(c);\n+           continue;\n+       } else if (c < '0' || c > '9') {\n+           abort();\n+       }\n+\n+       c -= '0';\n+       str = text + av[c].rm_so;\n+       len = av[c].rm_eo - av[c].rm_so;\n+       fwrite(str, len, 1, stdout);\n+    }\n+}\n \n FIX_PROC_HEAD( format_fix )\n {\n@@ -172,46 +203,8 @@ FIX_PROC_HEAD( format_fix )\n         char* apz[10];\n         int   i;\n \n-        /*\n-         *  Write the text up to the match\n-         */\n         fwrite( text, rm[0].rm_so, 1, stdout );\n-\n-        /*\n-         *  Copy all the submatches into separate strings\n-         */\n-        for (i=0; i<10; i++) {\n-            if (rm[i].rm_so == -1) {\n-                apz[i] = (char*)NULL;\n-                break;\n-            }\n-            {\n-                int len = rm[i].rm_eo - rm[i].rm_so;\n-                apz[i] = (char*)malloc( len + 1 );\n-                memcpy( (void*)apz[i], text+rm[i].rm_so, len );\n-                apz[i][len] = NUL;\n-            }\n-        }\n-\n-        /*\n-         *  IF there are any submatches,\n-         *  THEN only use the submatches in the formatting\n-         */\n-        if (apz[1] != (char*)NULL)\n-            printf( pz_fmt, apz[1], apz[2], apz[3], apz[4],\n-                    apz[5], apz[6], apz[7], apz[8], apz[9] );\n-        else\n-            printf( pz_fmt, apz[0] );\n-\n-        /*\n-         *  Free our submatch strings\n-         */\n-        for (i=0; i<10; i++) {\n-            if (apz[i] == (char*)NULL)\n-                break;\n-            free( (void*)apz[i] );\n-        }\n-\n+       format_write( pz_fmt, text, rm );\n         text += rm[0].rm_eo;\n     }\n \n@@ -232,10 +225,8 @@ FIX_PROC_HEAD( format_fix )\n    which is the required syntax per the C standard.  (The definition of\n    _IO also has to be tweaked - see below.)  'IO' is actually whatever you\n    provide in the STR argument.  */\n-static void\n-fix_char_macro_uses (text, str)\n-     const char *text;\n-     const char *str;\n+\n+FIX_PROC_HEAD( char_macro_use_fix )\n {\n   /* This regexp looks for a traditional-syntax #define (# in column 1)\n      of an object-like macro.  */\n@@ -245,8 +236,17 @@ fix_char_macro_uses (text, str)\n \n   regmatch_t rm[1];\n   const char *p, *limit;\n-  size_t len = strlen (str);\n+  const char *str = p_fixd->patch_args[0];\n+  size_t len;\n \n+  if (str == NULL)\n+    {\n+      fprintf (stderr, \"%s needs macro-name-string argument\",\n+              p_fixd->fix_name);\n+      exit(3);\n+    }\n+\n+  len = strlen (str);\n   compile_re (pat, &re, 1, \"macro pattern\", \"fix_char_macro_uses\");\n \n   for (p = text;\n@@ -310,10 +310,7 @@ fix_char_macro_uses (text, str)\n    which is the required syntax per the C standard.  (The uses of _IO\n    also have to be tweaked - see above.)  'IO' is actually whatever\n    you provide in the STR argument.  */\n-static void\n-fix_char_macro_defines (text, str)\n-     const char *text;\n-     const char *str;\n+FIX_PROC_HEAD( char_macro_def_fix )\n {\n   /* This regexp looks for any traditional-syntax #define (# in column 1).  */\n   static const char pat[] =\n@@ -322,9 +319,17 @@ fix_char_macro_defines (text, str)\n \n   regmatch_t rm[1];\n   const char *p, *limit;\n-  size_t len = strlen (str);\n+  const char *str = p_fixd->patch_args[0];\n+  size_t len;\n   char arg;\n \n+  if (str == NULL)\n+    {\n+      fprintf (stderr, \"%s needs macro-name-string argument\",\n+              p_fixd->fix_name);\n+      exit(3);\n+    }\n+\n   compile_re (pat, &re, 1, \"macro pattern\", \"fix_char_macro_defines\");\n \n   for (p = text;\n@@ -391,27 +396,6 @@ fix_char_macro_defines (text, str)\n   fputs (text, stdout);\n }\n \n-/* The various prefixes on these macros are handled automatically\n-   because the fixers don't care where they start matching.  */\n-FIX_PROC_HEAD( IO_use_fix )\n-{\n-  fix_char_macro_uses (text, \"IO\");\n-}\n-FIX_PROC_HEAD( CTRL_use_fix )\n-{\n-  fix_char_macro_uses (text, \"CTRL\");\n-}\n-\n-FIX_PROC_HEAD( IO_defn_fix )\n-{\n-  fix_char_macro_defines (text, \"IO\");\n-}\n-FIX_PROC_HEAD( CTRL_defn_fix )\n-{\n-  fix_char_macro_defines (text, \"CTRL\");\n-}\n-\n-\n /* Fix for machine name #ifdefs that are not in the namespace reserved\n    by the C standard.  They won't be defined if compiling with -ansi,\n    and the headers will break.  We go to some trouble to only change\n@@ -426,7 +410,7 @@ FIX_PROC_HEAD( machine_name_fix )\n   fputs( \"The target machine has no needed machine name fixes\\n\", stderr );\n #else\n   regmatch_t match[2];\n-  char *line, *base, *limit, *p, *q;\n+  const char *line, *base, *limit, *p, *q;\n   regex_t *label_re, *name_re;\n   char scratch[SCRATCHSZ];\n   size_t len;"}, {"sha": "184d7d2475318ee4736199a98c362aafed0e3005", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=4c6d912f7f9e9263fad575bafd110d9a55836c66", "patch": "@@ -1686,7 +1686,8 @@ tTestDesc aIo_Use_QuotesTests[] = {\n  *  Fix Command Arguments for Io_Use_Quotes\n  */\n const char* apzIo_Use_QuotesPatch[] = {\n-    \"IO_use\",\n+    \"char_macro_use\",\n+    \"IO\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1720,7 +1721,8 @@ tTestDesc aIo_Def_QuotesTests[] = {\n  *  Fix Command Arguments for Io_Def_Quotes\n  */\n const char* apzIo_Def_QuotesPatch[] = {\n-    \"IO_defn\",\n+    \"char_macro_def\",\n+    \"IO\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1754,7 +1756,8 @@ tTestDesc aCtrl_Use_QuotesTests[] = {\n  *  Fix Command Arguments for Ctrl_Use_Quotes\n  */\n const char* apzCtrl_Use_QuotesPatch[] = {\n-    \"CTRL_use\",\n+    \"char_macro_use\",\n+    \"CTRL\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1788,7 +1791,8 @@ tTestDesc aCtrl_Def_QuotesTests[] = {\n  *  Fix Command Arguments for Ctrl_Def_Quotes\n  */\n const char* apzCtrl_Def_QuotesPatch[] = {\n-    \"CTRL_defn\",\n+    \"char_macro_def\",\n+    \"CTRL\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *"}, {"sha": "bf16fba21c62e14dab1fe8d3d7b045de271a5c0a", "filename": "gcc/fixinc/fixtests.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2Ffixinc%2Ffixtests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2Ffixinc%2Ffixtests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixtests.c?ref=4c6d912f7f9e9263fad575bafd110d9a55836c66", "patch": "@@ -72,7 +72,7 @@ static apply_fix_p_t test ( fname, text ) \\\n  *  a backslash.  Especially a backslash followed by octal digits.\n  *  We are not doing a correctness syntax check here.\n  */\n-static tSCC*\n+static tCC*\n skip_quote( q, text )\n   char  q;\n   char* text;"}, {"sha": "fd282c851f3b03633cae2cc1fe04577cf66d03ae", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c6d912f7f9e9263fad575bafd110d9a55836c66/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=4c6d912f7f9e9263fad575bafd110d9a55836c66", "patch": "@@ -978,15 +978,17 @@ fix = {\n  *  _IO might be: _IO DESIO BSD43__IO with W, R, WR, C, ... suffixes.\n  */\n fix = {\n-    hackname = io_use_quotes;\n-    select = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\\\\( *[^,']\";\n-    c_fix = IO_use;\n+    hackname  = io_use_quotes;\n+    select  = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\\\\( *[^,']\";\n+    c_fix     = char_macro_use;\n+    c_fix_arg = \"IO\";\n };\n \n fix = {\n-    hackname = io_def_quotes;\n-    select = \"define[ \\t]+[A-Z0-9_]+IO[A-Z]*\\\\(([a-zA-Z]).*'\\\\1'\";\n-    c_fix = IO_defn;\n+    hackname  = io_def_quotes;\n+    select    = \"define[ \\t]+[A-Z0-9_]+IO[A-Z]*\\\\(([a-zA-Z]).*'\\\\1'\";\n+    c_fix     = char_macro_def;\n+    c_fix_arg = \"IO\";\n };\n  \n  \n@@ -995,15 +997,17 @@ fix = {\n  *  CTRL might be: CTRL _CTRL ISCTRL BSD43_CTRL ...\n  */\n fix = {\n-    hackname = ctrl_use_quotes;\n-    select = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n-    c_fix = CTRL_use;\n+    hackname  = ctrl_use_quotes;\n+    select    = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n+    c_fix     = char_macro_use;\n+    c_fix_arg = \"CTRL\";\n };\n- \n+  \n fix = {\n-    hackname = ctrl_def_quotes;\n-    select = \"define[ \\t]+[A-Z0-9_]+CTRL\\\\(([a-zA-Z]).*'\\\\1'\";\n-    c_fix = CTRL_defn;\n+    hackname  = ctrl_def_quotes;\n+    select    = \"define[ \\t]+[A-Z0-9_]+CTRL\\\\(([a-zA-Z]).*'\\\\1'\";\n+    c_fix     = char_macro_def;\n+    c_fix_arg = \"CTRL\";\n };\n \n "}]}