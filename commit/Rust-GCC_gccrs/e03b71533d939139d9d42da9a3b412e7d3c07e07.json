{"sha": "e03b71533d939139d9d42da9a3b412e7d3c07e07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAzYjcxNTMzZDkzOTEzOWQ5ZDQyZGE5YTNiNDEyZTdkM2MwN2UwNw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2002-10-20T19:18:30Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2002-10-20T19:18:30Z"}, "message": "re PR c/761 (Undocumented options, part 1)\n\n\n\tPR c/761\n\t* toplev.c (flag_unsafe_profile_arcs): Remove.\n\t(flag_bounded_pointers): Remove.\n\t(flag_bounds_check): Correct comments.\n\t(lang_independent_options): Remove -funsafe-profile-arcs and\n\t-fbounded-pointers.  Correct -fbounds-check comments.\n\n\t* flags.h: Correct flag_schedule_interblock comments.\n\t(flag_bounded_pointers): Remove prototype.\n\t(flag_bounds_check): Correct comments.\n\n\t* c-opts.c (c_common_init_options): No need to mark\n\tflag_bounds_check as unspecified.\n\t(c_common_post_options): And no need to set it from\n\tflag_bounded_pointers if its still unspecified.\n\n\t* doc/invoke.texi: Fix some overfull hboxes in \"make dvi\".\n\tDocument --version, -feliminate-dwarf-2-dups, -fno-sched-interblock,\n\t-fno-sched-spec, -fsched-spec-load, -fsched-spec-load-dangerous,\n\t-fsched-verbose=n, -fno-branch-count-reg and -fbounds-check.\n\nFrom-SVN: r58334", "tree": {"sha": "153a8167658fb941d4f223b05ede95b2d6163df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/153a8167658fb941d4f223b05ede95b2d6163df6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e03b71533d939139d9d42da9a3b412e7d3c07e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03b71533d939139d9d42da9a3b412e7d3c07e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e03b71533d939139d9d42da9a3b412e7d3c07e07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03b71533d939139d9d42da9a3b412e7d3c07e07/comments", "author": null, "committer": null, "parents": [{"sha": "eb0424da9d7f2680ba02986028842b920a429803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0424da9d7f2680ba02986028842b920a429803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb0424da9d7f2680ba02986028842b920a429803"}], "stats": {"total": 160, "additions": 111, "deletions": 49}, "files": [{"sha": "6f70514b1e0ebb14dc4352c8bd2a4e3973914041", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e03b71533d939139d9d42da9a3b412e7d3c07e07", "patch": "@@ -1,3 +1,26 @@\n+2002-10-20  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR c/761\n+\t* toplev.c (flag_unsafe_profile_arcs): Remove.\n+\t(flag_bounded_pointers): Remove.\n+\t(flag_bounds_check): Correct comments.\n+\t(lang_independent_options): Remove -funsafe-profile-arcs and\n+\t-fbounded-pointers.  Correct -fbounds-check comments.\n+\n+\t* flags.h: Correct flag_schedule_interblock comments.\n+\t(flag_bounded_pointers): Remove prototype.\n+\t(flag_bounds_check): Correct comments.\n+\n+\t* c-opts.c (c_common_init_options): No need to mark\n+\tflag_bounds_check as unspecified.\n+\t(c_common_post_options): And no need to set it from\n+\tflag_bounded_pointers if its still unspecified.\n+\n+\t* doc/invoke.texi: Fix some overfull hboxes in \"make dvi\".\n+\tDocument --version, -feliminate-dwarf-2-dups, -fno-sched-interblock,\n+\t-fno-sched-spec, -fsched-spec-load, -fsched-spec-load-dangerous,\n+\t-fsched-verbose=n, -fno-branch-count-reg and -fbounds-check.\n+\n 2002-10-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n             Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "2de8faad4ef44de884675c225821ffd28f2d0e67", "filename": "gcc/c-opts.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=e03b71533d939139d9d42da9a3b412e7d3c07e07", "patch": "@@ -515,9 +515,6 @@ c_common_init_options (lang)\n   warn_pointer_arith = (lang == clk_cplusplus);\n   if (lang == clk_c)\n     warn_sign_compare = -1;\n-\n-  /* Mark as \"unspecified\" (see c_common_post_options).  */\n-  flag_bounds_check = -1;\n }\n \n /* Handle one command-line option in (argc, argv).\n@@ -1374,10 +1371,6 @@ c_common_post_options ()\n \t}\n     }\n \n-  /* If still \"unspecified\", make it match -fbounded-pointers.  */\n-  if (flag_bounds_check == -1)\n-    flag_bounds_check = flag_bounded_pointers;\n-\n   /* Special format checking options don't work without -Wformat; warn if\n      they are used.  */\n   if (warn_format_y2k && !warn_format)"}, {"sha": "43acaace119c9b7a303805b95567857db9f4516c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 82, "deletions": 9, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e03b71533d939139d9d42da9a3b412e7d3c07e07", "patch": "@@ -157,7 +157,7 @@ in the following sections.\n @xref{Overall Options,,Options Controlling the Kind of Output}.\n @gccoptlist{\n -c  -S  -E  -o @var{file}  -pipe  -pass-exit-codes  -x @var{language} @gol\n--v  -###  --target-help  --help}\n+-v  -###  --help  --target-help  --version}\n \n @item C Language Options\n @xref{C Dialect Options,,Options Controlling C Dialect}.\n@@ -228,16 +228,18 @@ in the following sections.\n -Wno-import  -Wnonnull  -Wpacked  -Wpadded @gol\n -Wparentheses  -Wpointer-arith  -Wredundant-decls @gol\n -Wreturn-type  -Wsequence-point  -Wshadow @gol\n--Wsign-compare  -Wstrict-aliasing -Wswitch  -Wswitch-default -Wswitch-enum @gol\n+-Wsign-compare  -Wstrict-aliasing @gol\n+-Wswitch  -Wswitch-default -Wswitch-enum @gol\n -Wsystem-headers -Wtrigraphs  -Wundef  -Wuninitialized @gol\n -Wunknown-pragmas  -Wunreachable-code @gol\n -Wunused  -Wunused-function  -Wunused-label  -Wunused-parameter @gol\n -Wunused-value  -Wunused-variable  -Wwrite-strings}\n \n @item C-only Warning Options\n @gccoptlist{\n--Wbad-function-cast  -Wmissing-declarations  -Wmissing-prototypes @gol\n--Wnested-externs  -Wstrict-prototypes  -Wtraditional}\n+-Wbad-function-cast  -Wmissing-declarations @gol\n+-Wmissing-prototypes  -Wnested-externs @gol\n+-Wstrict-prototypes  -Wtraditional}\n \n @item Debugging Options\n @xref{Debugging Options,,Options for Debugging Your Program or GCC}.\n@@ -247,8 +249,9 @@ in the following sections.\n -fdump-class-hierarchy@r{[}-@var{n}@r{]} @gol\n -fdump-tree-original@r{[}-@var{n}@r{]} -fdump-tree-optimized@r{[}-@var{n}@r{]} @gol\n -fdump-tree-inlined@r{[}-@var{n}@r{]} @gol\n--fmem-report @gol\n--fprofile-arcs  -ftest-coverage  -ftime-report @gol\n+-feliminate-dwarf2-dups  -fmem-report @gol\n+-fprofile-arcs  -fsched-verbose=@var{n} @gol\n+-ftest-coverage  -ftime-report @gol\n -g  -g@var{level}  -gcoff  -gdwarf  -gdwarf-1  -gdwarf-1+  -gdwarf-2 @gol\n -ggdb  -gstabs  -gstabs+  -gvms  -gxcoff  -gxcoff+ @gol\n -p  -pg  -print-file-name=@var{library}  -print-libgcc-file-name @gol\n@@ -261,6 +264,7 @@ in the following sections.\n @gccoptlist{\n -falign-functions=@var{n}  -falign-jumps=@var{n} @gol\n -falign-labels=@var{n}  -falign-loops=@var{n}  @gol\n+-fbounds-check @gol\n -fbranch-probabilities  -fcaller-saves -fcprop-registers @gol\n -fcse-follow-jumps  -fcse-skip-blocks  -fdata-sections @gol\n -fdelayed-branch  -fdelete-null-pointer-checks @gol\n@@ -270,8 +274,8 @@ in the following sections.\n -fif-conversion -fif-conversion2 @gol\n -finline-functions  -finline-limit=@var{n}  -fkeep-inline-functions @gol\n -fkeep-static-consts  -fmerge-constants  -fmerge-all-constants @gol\n--fmove-all-movables  -fnew-ra  -fno-default-inline @gol\n--fno-defer-pop @gol\n+-fmove-all-movables  -fnew-ra  -fno-branch-count-reg @gol\n+-fno-default-inline  -fno-defer-pop @gol\n -fno-function-cse  -fno-guess-branch-probability @gol\n -fno-inline  -fno-math-errno  -fno-peephole  -fno-peephole2 @gol\n -funsafe-math-optimizations -ffinite-math-only @gol\n@@ -281,7 +285,9 @@ in the following sections.\n -freduce-all-givs -fregmove  -frename-registers @gol\n -freorder-blocks -freorder-functions @gol\n -frerun-cse-after-loop  -frerun-loop-opt @gol\n--fschedule-insns  -fschedule-insns2 -fsignaling-nans @gol\n+-fschedule-insns  -fschedule-insns2 @gol\n+-fno-sched-interblock  -fno-sched-spec  -fsched-spec-load @gol\n+-fsched-spec-load-dangerous  -fsignaling-nans @gol\n -fsingle-precision-constant  -fssa -fssa-ccp -fssa-dce @gol\n -fstrength-reduce  -fstrict-aliasing  -ftracer -fthread-jumps @gol\n -ftrapv -funroll-all-loops  -funroll-loops  @gol\n@@ -929,6 +935,10 @@ be displayed.\n @opindex target-help\n Print (on the standard output) a description of target specific command\n line options for each tool.\n+\n+@item --version\n+@opindex version\n+Display the version number and copyrights of the invoked GCC.\n @end table\n \n @node Invoking G++\n@@ -2923,6 +2933,12 @@ and DWARF2, neither @option{-gdwarf} nor @option{-gdwarf-2} accept\n a concatenated debug level.  Instead use an additional @option{-g@var{level}}\n option to change the debug level for DWARF1 or DWARF2.\n \n+@item -feliminate-dwarf2-dups\n+@opindex feliminate-dwarf2-dups\n+Compress DWARF2 debugging information by eliminating duplicated\n+information about each symbol.  This option only makes sense when\n+generating DWARF2 debugging information with @option{-gdwarf-2}.\n+\n @cindex @code{prof}\n @item -p\n @opindex p\n@@ -3224,6 +3240,23 @@ Dump after all tree based optimization, to @file{@var{file}.optimized}.\n Dump after function inlining, to @file{@var{file}.inlined}.\n @end table\n \n+@item -fsched-verbose=@var{n}\n+@opindex fsched-verbose\n+On targets that use instruction scheduling, this option controls the\n+amount of debugging output the scheduler prints.  This information is\n+written to standard error, unless @option{-dS} or @option{-dR} is\n+specified, in which case it is output to the usual dump\n+listing file, @file{.sched} or @file{.sched2} respectively.  However\n+for @var{n} greater than nine, the output is always printed to standard\n+error.\n+\n+For @var{n} greater than zero, @option{-fsched-verbose} outputs the\n+same information as @option{-dRS}.  For @var{n} greater than one, it\n+also output basic block probabilities, detailed ready list information\n+and unit/insn info.  For @var{n} greater than two, it includes RTL\n+at abort point, control-flow and regions info.  And for @var{n} over\n+four, @option{-fsched-verbose} also includes dependence info.\n+\n @item -save-temps\n @opindex save-temps\n Store the usual ``temporary'' intermediate files permanently; place them\n@@ -3527,6 +3560,14 @@ Use a graph coloring register allocator.  Currently this option is meant\n for testing, so we are interested to hear about miscompilations with\n @option{-fnew-ra}.\n \n+@item -fno-branch-count-reg\n+@opindex fno-branch-count-reg\n+Do not use ``decrement and branch'' instructions on a count register,\n+but instead generate a sequence of instructions that decrement a\n+register, compare it against zero, then branch based upon the result.\n+This option is only meaningful on architectures that support such\n+instructions, which include x86, PowerPC, IA-64 and S/390.\n+\n @item -fno-function-cse\n @opindex fno-function-cse\n Do not put function addresses in registers; make each instruction that\n@@ -3631,6 +3672,14 @@ resulting executable can find the beginning of that section and/or make\n assumptions based on that.\n \n The default is @option{-fzero-initialized-in-bss}.\n+\n+@item -fbounds-check\n+@opindex fbounds-check\n+For front-ends that support it, generate additional code to check that\n+indices used to access arrays are within the declared range.  This is\n+currenly only supported by the Java and Fortran 77 front-ends, where\n+this option defaults to true and false respectively.\n+\n @end table\n \n The following options control specific optimizations.  The @option{-O2}\n@@ -3781,6 +3830,30 @@ instruction scheduling after register allocation has been done.  This is\n especially useful on machines with a relatively small number of\n registers and where memory load instructions take more than one cycle.\n \n+@item -fno-sched-interblock\n+@opindex fno-sched-interblock\n+Don't schedule instructions across basic blocks.  This is normally\n+enabled by default when scheduling before register allocation, i.e.@:\n+with @option{-fschedule-insns} or at @option{-O2} or higher.\n+\n+@item -fno-sched-spec\n+@opindex fno-sched-spec\n+Don't allow speculative motion of non-load instructions.  This is normally\n+enabled by default when scheduling before register allocation, i.e.@:\n+with @option{-fschedule-insns} or at @option{-O2} or higher.\n+\n+@item -fsched-spec-load\n+@opindex fsched-spec-load\n+Allow speculative motion of some load instructions.  This only makes\n+sense when scheduling before register allocation, i.e.@: with\n+@option{-fschedule-insns} or at @option{-O2} or higher.\n+\n+@item -fsched-spec-load-dangerous\n+@opindex fsched-spec-load-dangerous\n+Allow speculative motion of more load instructions.  This only makes\n+sense when scheduling before register allocation, i.e.@: with\n+@option{-fschedule-insns} or at @option{-O2} or higher.\n+\n @item -ffunction-sections\n @itemx -fdata-sections\n @opindex ffunction-sections"}, {"sha": "39ca5ea936e51187c02229592b818cbdc01df50f", "filename": "gcc/flags.h", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=e03b71533d939139d9d42da9a3b412e7d3c07e07", "patch": "@@ -431,7 +431,7 @@ extern int flag_schedule_insns_after_reload;\n /* The following flags have effect only for scheduling before register\n    allocation:\n \n-   flag_schedule_interblock means schedule insns accross basic blocks.\n+   flag_schedule_interblock means schedule insns across basic blocks.\n    flag_schedule_speculative means allow speculative motion of non-load insns.\n    flag_schedule_speculative_load means allow speculative motion of some\n    load insns.\n@@ -563,19 +563,10 @@ extern int flag_peephole2;\n /* Try to guess branch probablities.  */\n extern int flag_guess_branch_prob;\n \n-/* -fbounded-pointers causes gcc to compile pointers as composite\n-   objects occupying three words: the pointer value, the base address\n-   of the referent object, and the address immediately beyond the end\n-   of the referent object.  The base and extent allow us to perform\n-   runtime bounds checking.  -fbounded-pointers implies -fcheck-bounds.  */\n-extern int flag_bounded_pointers;\n-\n /* -fcheck-bounds causes gcc to generate array bounds checks.\n-   For C, C++: defaults to value of flag_bounded_pointers.\n-   For ObjC: defaults to off.\n+   For C, C++ and ObjC: defaults off.\n    For Java: defaults to on.\n-   For Fortran: defaults to off.\n-   For CHILL: defaults to off.  */\n+   For Fortran: defaults to off.  */\n extern int flag_bounds_check;\n \n /* This will attempt to merge constant section constants, if 1 only"}, {"sha": "815450e00456f4ec4777de46944f1c175a791ad5", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03b71533d939139d9d42da9a3b412e7d3c07e07/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e03b71533d939139d9d42da9a3b412e7d3c07e07", "patch": "@@ -375,11 +375,6 @@ int profile_flag = 0;\n \n int profile_arc_flag = 0;\n \n-/* Nonzero if we should not attempt to generate thread-safe\n-   code to profile program flow graph arcs.  */\n-\n-int flag_unsafe_profile_arcs = 0;\n-\n /* Nonzero if generating info for gcov to calculate line test coverage.  */\n \n int flag_test_coverage = 0;\n@@ -863,19 +858,10 @@ int flag_peephole2 = 0;\n /* This will try to guess branch probabilities.  */\n int flag_guess_branch_prob = 0;\n \n-/* -fbounded-pointers causes gcc to compile pointers as composite\n-   objects occupying three words: the pointer value, the base address\n-   of the referent object, and the address immediately beyond the end\n-   of the referent object.  The base and extent allow us to perform\n-   runtime bounds checking.  -fbounded-pointers implies -fcheck-bounds.  */\n-int flag_bounded_pointers = 0;\n-\n /* -fcheck-bounds causes gcc to generate array bounds checks.\n-   For C, C++: defaults to value of flag_bounded_pointers.\n-   For ObjC: defaults to off.\n+   For C, C++, ObjC: defaults to off.\n    For Java: defaults to on.\n-   For Fortran: defaults to off.\n-   For CHILL: defaults to off.  */\n+   For Fortran: defaults to off.  */\n int flag_bounds_check = 0;\n \n /* This will attempt to merge constant section constants, if 1 only\n@@ -1104,8 +1090,6 @@ static const lang_independent_options f_options[] =\n    N_(\"Support synchronous non-call exceptions\") },\n   {\"profile-arcs\", &profile_arc_flag, 1,\n    N_(\"Insert arc based program profiling code\") },\n-  {\"unsafe-profile-arcs\", &flag_unsafe_profile_arcs, 1,\n-   N_(\"Avoid thread safety profiling overhead\") },\n   {\"test-coverage\", &flag_test_coverage, 1,\n    N_(\"Create data files needed by gcov\") },\n   {\"branch-probabilities\", &flag_branch_probabilities, 1,\n@@ -1190,10 +1174,8 @@ static const lang_independent_options f_options[] =\n    N_(\"Allow math optimizations that may violate IEEE or ANSI standards\") },\n   {\"signaling-nans\", &flag_signaling_nans, 1,\n    N_(\"Disable optimizations observable by IEEE signaling NaNs\") },\n-  {\"bounded-pointers\", &flag_bounded_pointers, 1,\n-   N_(\"Compile pointers as triples: value, base & end\") },\n   {\"bounds-check\", &flag_bounds_check, 1,\n-   N_(\"Generate code to check bounds before dereferencing pointers and arrays\") },\n+   N_(\"Generate code to check bounds before indexing arrays\") },\n   {\"single-precision-constant\", &flag_single_precision_constant, 1,\n    N_(\"Convert floating point constant to single precision constant\") },\n   {\"time-report\", &time_report, 1,"}]}