{"sha": "4fc1d2629ab373945a30031c1b49bdfa4e9f5f12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZjMWQyNjI5YWIzNzM5NDVhMzAwMzFjMWI0OWJkZmE0ZTlmNWYxMg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-09-26T18:50:55Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-09-26T18:50:55Z"}, "message": "[Darwin, PPC, Mode Iterators 2/n] Eliminate picbase expanders.\n\nWe can use the mode iterators directly with an @pattern to avoid the\nneed for an expander that was only there to pass the mode through.\n\ngcc/ChangeLog:\n\n2019-09-26  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/rs6000/darwin.md: Replace the expanders for\n\tload_macho_picbase and reload_macho_picbase with use of '@'\n\tin their respective define_insns.\n\t(nonlocal_goto_receiver): Pass Pmode to gen_reload_macho_picbase.\n\t* config/rs6000/rs6000-logue.c (rs6000_emit_prologue): Pass\n\tPmode to gen_load_macho_picbase.\n\t* config/rs6000/rs6000.md: Likewise.\n\nFrom-SVN: r276159", "tree": {"sha": "7c9f5f9ca8bfdbb62f3d85e4239c181a5e26c35f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c9f5f9ca8bfdbb62f3d85e4239c181a5e26c35f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bfc204142439b8167bf3447d7d12b65d1da82f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfc204142439b8167bf3447d7d12b65d1da82f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bfc204142439b8167bf3447d7d12b65d1da82f8"}], "stats": {"total": 48, "additions": 15, "deletions": 33}, "files": [{"sha": "9bbae7af2e2c59c91eaf83c0fdcbae8af34a2447", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fc1d2629ab373945a30031c1b49bdfa4e9f5f12", "patch": "@@ -1,3 +1,13 @@\n+2019-09-26  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/rs6000/darwin.md: Replace the expanders for\n+\tload_macho_picbase and reload_macho_picbase with use of '@'\n+\tand <mode> in their respective define_insns.\n+\t(nonlocal_goto_receiver): Pass Pmode to gen_reload_macho_picbase.\n+\t* config/rs6000/rs6000-logue.c (rs6000_emit_prologue): Pass\n+\tPmode to gen_load_macho_picbase.\n+\t* config/rs6000/rs6000.md: Likewise.\n+\n 2019-09-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91896"}, {"sha": "a5c5a3af39e6fe3a208183c567ddfe8489af42df", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 3, "deletions": 31, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=4fc1d2629ab373945a30031c1b49bdfa4e9f5f12", "patch": "@@ -216,21 +216,7 @@ You should have received a copy of the GNU General Public License\n \t(match_dup 2))]\n   \"\")\n \n-(define_expand \"load_macho_picbase\"\n-  [(set (reg LR_REGNO)\n-        (unspec [(match_operand 0 \"\")]\n-                   UNSPEC_LD_MPIC))]\n-  \"(DEFAULT_ABI == ABI_DARWIN) && flag_pic\"\n-{\n-  if (TARGET_32BIT)\n-    emit_insn (gen_load_macho_picbase_si (operands[0]));\n-  else\n-    emit_insn (gen_load_macho_picbase_di (operands[0]));\n-\n-  DONE;\n-})\n-\n-(define_insn \"load_macho_picbase_<mode>\"\n+(define_insn \"@load_macho_picbase_<mode>\"\n   [(set (reg:P LR_REGNO)\n \t(unspec:P [(match_operand:P 0 \"immediate_operand\" \"s\")\n \t\t    (pc)] UNSPEC_LD_MPIC))]\n@@ -284,21 +270,7 @@ You should have received a copy of the GNU General Public License\n   \"addis %0,%1,ha16(%2-%3)\\n\\taddi %0,%0,lo16(%2-%3)\"\n   [(set_attr \"length\" \"8\")])\n \n-(define_expand \"reload_macho_picbase\"\n-  [(set (reg LR_REGNO)\n-        (unspec [(match_operand 0 \"\")]\n-                   UNSPEC_RELD_MPIC))]\n-  \"(DEFAULT_ABI == ABI_DARWIN) && flag_pic\"\n-{\n-  if (TARGET_32BIT)\n-    emit_insn (gen_reload_macho_picbase_si (operands[0]));\n-  else\n-    emit_insn (gen_reload_macho_picbase_di (operands[0]));\n-\n-  DONE;\n-})\n-\n-(define_insn \"reload_macho_picbase_<mode>\"\n+(define_insn \"@reload_macho_picbase_<mode>\"\n   [(set (reg:P LR_REGNO)\n         (unspec:P [(match_operand:P 0 \"immediate_operand\" \"s\")\n \t\t    (pc)] UNSPEC_RELD_MPIC))]\n@@ -342,7 +314,7 @@ You should have received a copy of the GNU General Public License\n       ASM_GENERATE_INTERNAL_LABEL(tmplab, \"Lnlgr\", ++n);\n       tmplrtx = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (tmplab));\n \n-      emit_insn (gen_reload_macho_picbase (tmplrtx));\n+      emit_insn (gen_reload_macho_picbase (Pmode, tmplrtx));\n       emit_move_insn (picreg, gen_rtx_REG (Pmode, LR_REGNO));\n       emit_insn (gen_macho_correct_pic (picreg, picreg, picrtx, tmplrtx));\n     }"}, {"sha": "e98893a440c6c58faba501d7c09ca6b83d637ce3", "filename": "gcc/config/rs6000/rs6000-logue.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c?ref=4fc1d2629ab373945a30031c1b49bdfa4e9f5f12", "patch": "@@ -3809,7 +3809,7 @@ rs6000_emit_prologue (void)\n       if (!info->lr_save_p)\n \temit_move_insn (gen_rtx_REG (Pmode, 0), lr);\n \n-      emit_insn (gen_load_macho_picbase (src));\n+      emit_insn (gen_load_macho_picbase (Pmode, src));\n \n       emit_move_insn (gen_rtx_REG (Pmode,\n \t\t\t\t   RS6000_PIC_OFFSET_TABLE_REGNUM),"}, {"sha": "c5443bab9e80741c05b81eda61b40e844f4a9236", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc1d2629ab373945a30031c1b49bdfa4e9f5f12/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4fc1d2629ab373945a30031c1b49bdfa4e9f5f12", "patch": "@@ -10053,7 +10053,7 @@\n \t\t\t\t  CODE_LABEL_NUMBER (operands[0]));\n       tmplabrtx = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (tmplab));\n \n-      emit_insn (gen_load_macho_picbase (tmplabrtx));\n+      emit_insn (gen_load_macho_picbase (Pmode, tmplabrtx));\n       emit_move_insn (picreg, gen_rtx_REG (Pmode, LR_REGNO));\n       emit_insn (gen_macho_correct_pic (picreg, picreg, picrtx, tmplabrtx));\n     }"}]}