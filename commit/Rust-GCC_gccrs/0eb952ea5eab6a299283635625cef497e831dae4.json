{"sha": "0eb952ea5eab6a299283635625cef497e831dae4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGViOTUyZWE1ZWFiNmEyOTkyODM2MzU2MjVjZWY0OTdlODMxZGFlNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-09T11:43:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-09T11:43:31Z"}, "message": "re PR lto/83338 (SPEC CPU2017 510.parest_r ICE)\n\n\tPR tree-optimization/83338\n\t* tree-vect-stmts.c (vectorizable_operation): Handle POINTER_DIFF_EXPR\n\tvectorization as MINUS_EXPR with a subsequent VIEW_CONVERT_EXPR from\n\tvector of unsigned integers to vector of signed integers.\n\n\t* gcc.dg/vect/pr83338.c: New test.\n\nFrom-SVN: r255523", "tree": {"sha": "4a24789b1000c8bab737a5073f07109f84111303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a24789b1000c8bab737a5073f07109f84111303"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eb952ea5eab6a299283635625cef497e831dae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb952ea5eab6a299283635625cef497e831dae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb952ea5eab6a299283635625cef497e831dae4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb952ea5eab6a299283635625cef497e831dae4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b01fff4882f0c5d35a52e7001832e31c708fffd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01fff4882f0c5d35a52e7001832e31c708fffd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b01fff4882f0c5d35a52e7001832e31c708fffd9"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "5d9bf779c8cdb3732af1930a6ee248963bf438db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb952ea5eab6a299283635625cef497e831dae4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb952ea5eab6a299283635625cef497e831dae4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0eb952ea5eab6a299283635625cef497e831dae4", "patch": "@@ -1,3 +1,10 @@\n+2017-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/83338\n+\t* tree-vect-stmts.c (vectorizable_operation): Handle POINTER_DIFF_EXPR\n+\tvectorization as MINUS_EXPR with a subsequent VIEW_CONVERT_EXPR from\n+\tvector of unsigned integers to vector of signed integers.\n+\n 2017-12-08  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/83317"}, {"sha": "1653d6b57099a5725d4facd10ea41b55c07cd3b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb952ea5eab6a299283635625cef497e831dae4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb952ea5eab6a299283635625cef497e831dae4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0eb952ea5eab6a299283635625cef497e831dae4", "patch": "@@ -1,3 +1,8 @@\n+2017-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/83338\n+\t* gcc.dg/vect/pr83338.c: New test.\n+\n 2017-12-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/83316"}, {"sha": "e266063041195383f1fc686557da8de4a2dc1706", "filename": "gcc/testsuite/gcc.dg/vect/pr83338.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb952ea5eab6a299283635625cef497e831dae4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr83338.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb952ea5eab6a299283635625cef497e831dae4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr83338.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr83338.c?ref=0eb952ea5eab6a299283635625cef497e831dae4", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/83338 */\n+/* { dg-do compile } */\n+\n+void\n+foo (char **p, char **q, __PTRDIFF_TYPE__ *r)\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    r[i] = p[i] - q[i];\n+}"}, {"sha": "0c343d4e7d9ba3758416e3761c31230e31ff9284", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb952ea5eab6a299283635625cef497e831dae4/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb952ea5eab6a299283635625cef497e831dae4/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=0eb952ea5eab6a299283635625cef497e831dae4", "patch": "@@ -5226,7 +5226,7 @@ vectorizable_operation (gimple *stmt, gimple_stmt_iterator *gsi,\n   stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n   tree vectype;\n   loop_vec_info loop_vinfo = STMT_VINFO_LOOP_VINFO (stmt_info);\n-  enum tree_code code;\n+  enum tree_code code, orig_code;\n   machine_mode vec_mode;\n   tree new_temp;\n   int op_type;\n@@ -5264,7 +5264,7 @@ vectorizable_operation (gimple *stmt, gimple_stmt_iterator *gsi,\n   if (TREE_CODE (gimple_assign_lhs (stmt)) != SSA_NAME)\n     return false;\n \n-  code = gimple_assign_rhs_code (stmt);\n+  orig_code = code = gimple_assign_rhs_code (stmt);\n \n   /* For pointer addition and subtraction, we should use the normal\n      plus and minus for the vector operation.  */\n@@ -5455,6 +5455,14 @@ vectorizable_operation (gimple *stmt, gimple_stmt_iterator *gsi,\n   /* Handle def.  */\n   vec_dest = vect_create_destination_var (scalar_dest, vectype);\n \n+  /* POINTER_DIFF_EXPR has pointer arguments which are vectorized as\n+     vectors with unsigned elements, but the result is signed.  So, we\n+     need to compute the MINUS_EXPR into vectype temporary and\n+     VIEW_CONVERT_EXPR it into the final vectype_out result.  */\n+  tree vec_cvt_dest = NULL_TREE;\n+  if (orig_code == POINTER_DIFF_EXPR)\n+    vec_cvt_dest = vect_create_destination_var (scalar_dest, vectype_out);\n+\n   /* In case the vectorization factor (VF) is bigger than the number\n      of elements that we can fit in a vectype (nunits), we have to generate\n      more than one vector stmt - i.e - we need to \"unroll\" the\n@@ -5546,6 +5554,15 @@ vectorizable_operation (gimple *stmt, gimple_stmt_iterator *gsi,\n \t  new_temp = make_ssa_name (vec_dest, new_stmt);\n \t  gimple_assign_set_lhs (new_stmt, new_temp);\n \t  vect_finish_stmt_generation (stmt, new_stmt, gsi);\n+\t  if (vec_cvt_dest)\n+\t    {\n+\t      new_temp = build1 (VIEW_CONVERT_EXPR, vectype_out, new_temp);\n+\t      new_stmt = gimple_build_assign (vec_cvt_dest, VIEW_CONVERT_EXPR,\n+\t\t\t\t\t      new_temp);\n+\t      new_temp = make_ssa_name (vec_cvt_dest, new_stmt);\n+\t      gimple_assign_set_lhs (new_stmt, new_temp);\n+\t      vect_finish_stmt_generation (stmt, new_stmt, gsi);\n+\t    }\n           if (slp_node)\n \t    SLP_TREE_VEC_STMTS (slp_node).quick_push (new_stmt);\n         }"}]}