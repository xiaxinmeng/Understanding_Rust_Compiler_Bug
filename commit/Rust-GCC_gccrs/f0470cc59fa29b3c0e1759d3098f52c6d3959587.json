{"sha": "f0470cc59fa29b3c0e1759d3098f52c6d3959587", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA0NzBjYzU5ZmEyOWIzYzBlMTc1OWQzMDk4ZjUyYzZkMzk1OTU4Nw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-05-05T14:04:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-05-05T14:04:07Z"}, "message": "resolve.c (conformable_arrays): Avoid segfault when ar.start[i] == NULL.\n\n2013-05-05  Tobias Burnus  <burnus@net-b.de>\n\n        * resolve.c (conformable_arrays): Avoid segfault\n        when ar.start[i] == NULL.\n\n2013-05-05  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/allocate_with_source_3.f90: New.\n\nFrom-SVN: r198610", "tree": {"sha": "dbd309f6cce0d3d3fc224b8fbc8b7492968942ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbd309f6cce0d3d3fc224b8fbc8b7492968942ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0470cc59fa29b3c0e1759d3098f52c6d3959587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0470cc59fa29b3c0e1759d3098f52c6d3959587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0470cc59fa29b3c0e1759d3098f52c6d3959587", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0470cc59fa29b3c0e1759d3098f52c6d3959587/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07416986eccd280f847845c33215ecb3add7b195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07416986eccd280f847845c33215ecb3add7b195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07416986eccd280f847845c33215ecb3add7b195"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "66b20c0457ce94517fc13e1e3420bf9cdfd49412", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0470cc59fa29b3c0e1759d3098f52c6d3959587/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0470cc59fa29b3c0e1759d3098f52c6d3959587/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f0470cc59fa29b3c0e1759d3098f52c6d3959587", "patch": "@@ -1,3 +1,8 @@\n+2013-05-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (conformable_arrays): Avoid segfault\n+\twhen ar.start[i] == NULL.\n+\n 2013-05-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57141"}, {"sha": "e27b23b2a5436e493890283d9da24c9651bd18ef", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0470cc59fa29b3c0e1759d3098f52c6d3959587/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0470cc59fa29b3c0e1759d3098f52c6d3959587/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f0470cc59fa29b3c0e1759d3098f52c6d3959587", "patch": "@@ -6508,6 +6508,9 @@ conformable_arrays (gfc_expr *e1, gfc_expr *e2)\n \n       for (i = 0; i < e1->rank; i++)\n \t{\n+\t  if (tail->u.ar.start[i] == NULL)\n+\t    break;\n+\n \t  if (tail->u.ar.end[i])\n \t    {\n \t      mpz_set (s, tail->u.ar.end[i]->value.integer);"}, {"sha": "e383f089e72873c8fe255ee4ff4399ace643850e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0470cc59fa29b3c0e1759d3098f52c6d3959587/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0470cc59fa29b3c0e1759d3098f52c6d3959587/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0470cc59fa29b3c0e1759d3098f52c6d3959587", "patch": "@@ -1,3 +1,7 @@\n+2013-05-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/allocate_with_source_3.f90: New.\n+\n 2013-05-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57141"}, {"sha": "f7e010948acf61b720dc6859972b0ff510f4b37a", "filename": "gcc/testsuite/gfortran.dg/allocate_with_source_3.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0470cc59fa29b3c0e1759d3098f52c6d3959587/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0470cc59fa29b3c0e1759d3098f52c6d3959587/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_3.f90?ref=f0470cc59fa29b3c0e1759d3098f52c6d3959587", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+!\n+! Contributed by Reinhold Bader\n+!\n+program assumed_shape_01\n+  use, intrinsic :: iso_c_binding\n+  implicit none\n+  type, bind(c) :: cstruct\n+     integer(c_int) :: i\n+     real(c_float) :: r(2)\n+  end type cstruct\n+  interface\n+     subroutine psub(this, that) bind(c, name='Psub')\n+       import :: c_float, cstruct\n+       real(c_float) :: this(:,:)\n+       type(cstruct) :: that(:)\n+     end subroutine psub\n+  end interface\n+\n+  real(c_float) :: t(3,7)\n+  type(cstruct), pointer :: u(:)\n+\n+! The following is VALID Fortran 2008 but NOT YET supported \n+  allocate(u, source=[cstruct( 4, [1.1,2.2] ) ]) ! { dg-error \"Array specification required in ALLOCATE statement\" }\n+  call psub(t, u)\n+  deallocate (u)\n+\n+end program assumed_shape_01"}]}