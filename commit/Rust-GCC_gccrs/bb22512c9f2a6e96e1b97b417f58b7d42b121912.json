{"sha": "bb22512c9f2a6e96e1b97b417f58b7d42b121912", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIyMjUxMmM5ZjJhNmU5NmUxYjk3YjQxN2Y1OGI3ZDQyYjEyMTkxMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-07T14:43:55Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-07T14:43:55Z"}, "message": "tree-ssa-loop-ivcanon.c, [...]: Fix comment typos.\n\n\t* tree-ssa-loop-ivcanon.c, config/i386/i386.c,\n\tconfig/rs6000/rs6000.h: Fix comment typos.\n\nFrom-SVN: r99350", "tree": {"sha": "bd4c862bb90c9abd4e4d1302f27cafd6ae1f99bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd4c862bb90c9abd4e4d1302f27cafd6ae1f99bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb22512c9f2a6e96e1b97b417f58b7d42b121912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb22512c9f2a6e96e1b97b417f58b7d42b121912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb22512c9f2a6e96e1b97b417f58b7d42b121912", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb22512c9f2a6e96e1b97b417f58b7d42b121912/comments", "author": null, "committer": null, "parents": [{"sha": "497fbaa064239dd1b7499450db81aa468bb17115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/497fbaa064239dd1b7499450db81aa468bb17115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/497fbaa064239dd1b7499450db81aa468bb17115"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "40e97478c7b6346a22fe6cfcd01cd127084e4f52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb22512c9f2a6e96e1b97b417f58b7d42b121912/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb22512c9f2a6e96e1b97b417f58b7d42b121912/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb22512c9f2a6e96e1b97b417f58b7d42b121912", "patch": "@@ -1,3 +1,8 @@\n+2005-05-07  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-ssa-loop-ivcanon.c, config/i386/i386.c,\n+\tconfig/rs6000/rs6000.h: Fix comment typos.\n+\n 2005-05-07  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* doc/invoke.texi: Remove documentation for MIPS' -mint64 option."}, {"sha": "2ed8edf77538872ee326351db17cd6952e0b8631", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb22512c9f2a6e96e1b97b417f58b7d42b121912/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb22512c9f2a6e96e1b97b417f58b7d42b121912/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bb22512c9f2a6e96e1b97b417f58b7d42b121912", "patch": "@@ -11291,7 +11291,7 @@ ix86_expand_movmem (rtx dst, rtx src, rtx count_exp, rtx align_exp)\n      count / 4 + (count & 3), the other sequence is either 4 or 7 bytes,\n      but we don't know whether upper 24 (resp. 56) bits of %ecx will be\n      known to be zero or not.  The rep; movsb sequence causes higher\n-     register preasure though, so take that into account.  */\n+     register pressure though, so take that into account.  */\n \n   if ((!optimize || optimize_size)\n       && (count == 0"}, {"sha": "a670deb1115a2dbe00034f8529c86965e056748a", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb22512c9f2a6e96e1b97b417f58b7d42b121912/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb22512c9f2a6e96e1b97b417f58b7d42b121912/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=bb22512c9f2a6e96e1b97b417f58b7d42b121912", "patch": "@@ -128,7 +128,7 @@\n \n /* Architecture type.  */\n \n-/* Define TARGET_MFCRF if the target assembler does not suppport the\n+/* Define TARGET_MFCRF if the target assembler does not support the\n    optional field operand for mfcr.  */\n \n #ifndef HAVE_AS_MFCRF"}, {"sha": "80aecdc2c3a1cc799d939450e0dd0e523e77c5e3", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb22512c9f2a6e96e1b97b417f58b7d42b121912/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb22512c9f2a6e96e1b97b417f58b7d42b121912/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=bb22512c9f2a6e96e1b97b417f58b7d42b121912", "patch": "@@ -59,7 +59,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n enum unroll_level\n {\n-  UL_SINGLE_ITER,\t/* Only loops that exit immediatelly in the first\n+  UL_SINGLE_ITER,\t/* Only loops that exit immediately in the first\n \t\t\t   iteration.  */\n   UL_NO_GROWTH,\t\t/* Only loops whose unrolling will not cause increase\n \t\t\t   of code size.  */"}]}