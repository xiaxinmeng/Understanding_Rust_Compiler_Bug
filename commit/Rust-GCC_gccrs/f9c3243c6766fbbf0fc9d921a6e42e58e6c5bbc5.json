{"sha": "f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjljMzI0M2M2NzY2ZmJiZjBmYzlkOTIxYTZlNDJlNThlNmM1YmJjNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-05-21T20:57:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-21T20:57:52Z"}, "message": "pt.c (tsubst_friend_class): Don't call redeclare_class_template if the template we looked up is the same as...\n\n\t* pt.c (tsubst_friend_class): Don't call redeclare_class_template\n\tif the template we looked up is the same as the one we already\n\thave.\n\nFrom-SVN: r19935", "tree": {"sha": "2621204d5c71cb63c82deccb6ef4e4067e18789d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2621204d5c71cb63c82deccb6ef4e4067e18789d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5/comments", "author": null, "committer": null, "parents": [{"sha": "12b195d93665f8aa23b04ac6d8d0d17e93653e07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b195d93665f8aa23b04ac6d8d0d17e93653e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12b195d93665f8aa23b04ac6d8d0d17e93653e07"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "fe748e48556e29ce0352e224442e56db0b7afd56", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5", "patch": "@@ -1,3 +1,9 @@\n+1998-05-21  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (tsubst_friend_class): Don't call redeclare_class_template\n+\tif the template we looked up is the same as the one we already\n+\thave.\n+\n Thu May 21 11:54:44 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* lex.c: (handle_sysv_pragma): FILE* parameter not used."}, {"sha": "8763df3ad1fdf813983cff6697810ca3c74b1a10", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f9c3243c6766fbbf0fc9d921a6e42e58e6c5bbc5", "patch": "@@ -3510,26 +3510,26 @@ tsubst_friend_class (friend_type, args)\n      tree friend_type;\n      tree args;\n {\n-  tree tmpl = \n-    lookup_name (DECL_NAME (CLASSTYPE_TI_TEMPLATE (friend_type)), 1); \n+  tree friend_tmpl = CLASSTYPE_TI_TEMPLATE (friend_type);\n+  tree tmpl = lookup_name (DECL_NAME (friend_tmpl), 1); \n \n   tmpl = maybe_get_template_decl_from_type_decl (tmpl);\n \n   if (tmpl != NULL_TREE && DECL_CLASS_TEMPLATE_P (tmpl))\n     {\n       /* The friend template has already been declared.  Just\n \t check to see that the declarations match.  */\n-      redeclare_class_template (TREE_TYPE (tmpl),\n-\t\t\t\tDECL_TEMPLATE_PARMS (CLASSTYPE_TI_TEMPLATE \n-\t\t\t\t\t\t     (friend_type)));\n+      if (tmpl != friend_tmpl)\n+\tredeclare_class_template (TREE_TYPE (tmpl),\n+\t\t\t\t  DECL_TEMPLATE_PARMS (friend_tmpl));\n       friend_type = TREE_TYPE (tmpl);\n     }\n   else\n     {\n       /* The friend template has not already been declared.  In this\n \t case, the instantiation of the template class will cause the\n \t injection of this template into the global scope.  */\n-      tmpl = tsubst (CLASSTYPE_TI_TEMPLATE (friend_type), args, NULL_TREE);\n+      tmpl = tsubst (friend_tmpl, args, NULL_TREE);\n \n       /* The new TMPL is not an instantiation of anything, so we\n  \t forget its origins.  We don't reset CLASSTYPE_TI_TEMPLATE for"}]}