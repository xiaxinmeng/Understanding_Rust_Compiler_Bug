{"sha": "b027470f4234f042f2a736ee5e830f3b20acadca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAyNzQ3MGY0MjM0ZjA0MmYyYTczNmVlNWU4MzBmM2IyMGFjYWRjYQ==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2000-02-06T10:36:26Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-02-06T10:36:26Z"}, "message": "c4x.md (*ldi_on_overflow): New pattern.\n\n2000-02-06  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n\n\t* config/c4x/c4x.md (*ldi_on_overflow): New pattern.\n\t(fixuns_truncqfqi2): Use it.\n\nFrom-SVN: r31823", "tree": {"sha": "b3cc866a0134ea06d1c0f7472df57441aa14721f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3cc866a0134ea06d1c0f7472df57441aa14721f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b027470f4234f042f2a736ee5e830f3b20acadca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b027470f4234f042f2a736ee5e830f3b20acadca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b027470f4234f042f2a736ee5e830f3b20acadca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b027470f4234f042f2a736ee5e830f3b20acadca/comments", "author": null, "committer": null, "parents": [{"sha": "d9f0b9607d1d0d0887438e439d6838f56cf2790e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f0b9607d1d0d0887438e439d6838f56cf2790e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9f0b9607d1d0d0887438e439d6838f56cf2790e"}], "stats": {"total": 52, "additions": 31, "deletions": 21}, "files": [{"sha": "85ddc65e356b6282d29c8b84106c0c3412be8806", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b027470f4234f042f2a736ee5e830f3b20acadca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b027470f4234f042f2a736ee5e830f3b20acadca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b027470f4234f042f2a736ee5e830f3b20acadca", "patch": "@@ -1,3 +1,8 @@\n+2000-02-06  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md (*ldi_on_overflow): New pattern.\n+\t(fixuns_truncqfqi2): Use it.\n+\n 2000-02-06  Richard Henderson  <rth@cygnus.com>\n \n \t* i386.c (ix86_agi_dependant): Handle pro_epilogue_adjust_stack"}, {"sha": "27173c38a663ecf8301008ae219d22ab9204e8b8", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b027470f4234f042f2a736ee5e830f3b20acadca/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b027470f4234f042f2a736ee5e830f3b20acadca/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=b027470f4234f042f2a736ee5e830f3b20acadca", "patch": "@@ -453,6 +453,7 @@\n ; 10 RSQRF\n ; 11 loadqf_int\n ; 12 storeqf_int\n+; 13 Conditional load on overflow\n ; 22 rptb_init\n \n ;\n@@ -3752,32 +3753,27 @@\n    DONE;\")\n \n (define_expand \"fixuns_truncqfqi2\"\n- [(set (match_dup 2) (match_dup 5))\n-  (set (reg:CC 21)\n-       (compare:CC (match_operand:QF 1 \"src_operand\" \"fHm\")\n-                   (match_dup 2)))\n-  (set (match_dup 2)\n-       (if_then_else:QF (lt (reg:CC 21) (const_int 0))\n-                        (match_dup 4)\n-                        (match_dup 2)))\n-  (parallel [(set (match_dup 2)\n-\t\t  (plus:QF (match_dup 2) (match_dup 2)))\n-\t     (clobber (reg:CC_NOOV 21))])\n-  (parallel [(set (match_dup 2)\n-\t          (minus:QF (match_dup 1) (match_dup 2)))\n+ [(parallel [(set (match_dup 2)\n+\t\t  (fix:QI (match_operand:QF 1 \"src_operand\" \"fHm\")))\n+\t     (clobber (reg:CC 21))])\n+  (parallel [(set (match_dup 3)\n+\t          (minus:QF (match_dup 1) (match_dup 5)))\n \t     (clobber (reg:CC_NOOV 21))])\n-  (parallel [(set (match_operand:QI 0 \"reg_operand\" \"=r\")\n-\t\t  (fix:QI (match_dup 2)))\n-\t     (clobber (reg:CC 21))])]\n+  (parallel [(set (reg:CC 21)\n+\t\t  (compare:CC (fix:QI (match_dup 3))\n+\t\t              (const_int 0)))\n+\t     (set (match_dup 4)\n+\t\t  (fix:QI (match_dup 3)))])\n+  (parallel [(set (match_dup 4) (unspec:QI [(match_dup 2)] 13))\n+             (use (reg:CC 21))])\n+  (set (match_operand:QI 0 \"reg_operand\" \"=r\") (match_dup 4))]\n  \"\"\n- \"operands[2] = gen_reg_rtx (QFmode);\n+ \"operands[2] = gen_reg_rtx (QImode);\n   operands[3] = gen_reg_rtx (QFmode);\n-  operands[4] = gen_reg_rtx (QFmode);\n+  operands[4] = gen_reg_rtx (QImode);\n   operands[5] = gen_reg_rtx (QFmode);\n-  emit_move_insn (operands[4],\n-   immed_real_const_1 (REAL_VALUE_ATOF (\\\"0.0\\\", QFmode), QFmode));\n   emit_move_insn (operands[5],\n-   immed_real_const_1 (REAL_VALUE_ATOF (\\\"2147483648.0\\\", QFmode), QFmode));\")\n+   immed_real_const_1 (REAL_VALUE_ATOF (\\\"4294967296.0\\\", QFmode), QFmode));\")\n \n (define_expand \"fixuns_truncqfhi2\"\n   [(parallel [(set (match_operand:HI 0 \"reg_operand\" \"\")\n@@ -4141,6 +4137,15 @@\n   ldi%I1\\\\t%3,%0\"\n  [(set_attr \"type\" \"binary\")])\n \n+(define_insn \"*ldi_on_overflow\"\n+  [(set (match_operand:QI 0 \"reg_operand\" \"=r\")\n+\t(unspec:QI [(match_operand:QI 1 \"src_operand\" \"rIm\")] 13))\n+   (use (reg:CC 21))]\n+  \"\"\n+  \"@\n+   ldiv\\\\t%1,%0\"\n+  [(set_attr \"type\" \"binary\")])\n+\n ; Move operand 2 to operand 0 if condition (operand 1) is true\n ; else move operand 3 to operand 0.\n ; The temporary register is required below because some of the operands"}]}