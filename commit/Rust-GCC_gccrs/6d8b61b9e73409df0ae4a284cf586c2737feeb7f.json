{"sha": "6d8b61b9e73409df0ae4a284cf586c2737feeb7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ4YjYxYjllNzM0MDlkZjBhZTRhMjg0Y2Y1ODZjMjczN2ZlZWI3Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-20T22:21:49Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-20T22:21:49Z"}, "message": "(expand_call): In last change, preserve the temp slot.\n\nFrom-SVN: r4705", "tree": {"sha": "d2567090689953eba015b6680e44bc3c4cc392ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2567090689953eba015b6680e44bc3c4cc392ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d8b61b9e73409df0ae4a284cf586c2737feeb7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d8b61b9e73409df0ae4a284cf586c2737feeb7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d8b61b9e73409df0ae4a284cf586c2737feeb7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d8b61b9e73409df0ae4a284cf586c2737feeb7f/comments", "author": null, "committer": null, "parents": [{"sha": "69d6b01d68502863c670be61b797313515f81d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d6b01d68502863c670be61b797313515f81d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d6b01d68502863c670be61b797313515f81d58"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "dc867aec10948b99c96598c5e604adc03132ade2", "filename": "gcc/calls.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d8b61b9e73409df0ae4a284cf586c2737feeb7f/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d8b61b9e73409df0ae4a284cf586c2737feeb7f/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=6d8b61b9e73409df0ae4a284cf586c2737feeb7f", "patch": "@@ -1845,9 +1845,14 @@ expand_call (exp, target, ignore)\n \t     not specified.  This calling sequence is only used on\n \t     a few machines and TARGET is usually nonzero.  */\n \t  if (TYPE_MODE (TREE_TYPE (exp)) == BLKmode)\n-\t    target = assign_stack_temp (BLKmode,\n-\t\t\t\t\tint_size_in_bytes (TREE_TYPE (exp)),\n-\t\t\t\t\t1);\n+\t    {\n+\t      target = assign_stack_temp (BLKmode,\n+\t\t\t\t\t  int_size_in_bytes (TREE_TYPE (exp)),\n+\t\t\t\t\t  0);\n+\n+\t      /* Save this temp slot around the pop below.  */\n+\t      preserve_temp_slots (target);\n+\t    }\n \t  else\n \t    target = gen_reg_rtx (TYPE_MODE (TREE_TYPE (exp)));\n \t}"}]}