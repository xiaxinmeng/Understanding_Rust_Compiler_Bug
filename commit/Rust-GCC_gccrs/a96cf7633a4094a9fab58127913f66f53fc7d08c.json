{"sha": "a96cf7633a4094a9fab58127913f66f53fc7d08c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2Y2Y3NjMzYTQwOTRhOWZhYjU4MTI3OTEzZjY2ZjUzZmM3ZDA4Yw==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2005-03-11T21:33:56Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2005-03-11T21:33:56Z"}, "message": "libjava.exp (libjava_init): Use the same target check for Darwin.\n\n2005-03-11  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/lib/libjava.exp (libjava_init): Use the same target\n\tcheck for Darwin.\n\t(libjava_arguments): Likewise.\n\n\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Likewise.\n\t(gcj_jni_test_one): Likewise.\n\t(gcj_jni_invocation_compile_c_to_binary): Likewise.\n\tAdd flags to keep the Darwin linker quiet.\n\t(gcj_jni_invocation_test_one): Use the same target check for Darwin.\n\tAdd -liconv for Darwin.\n\nFrom-SVN: r96311", "tree": {"sha": "780a14a295471df853c13dd65f76c5b566bb9ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/780a14a295471df853c13dd65f76c5b566bb9ac1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a96cf7633a4094a9fab58127913f66f53fc7d08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96cf7633a4094a9fab58127913f66f53fc7d08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96cf7633a4094a9fab58127913f66f53fc7d08c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96cf7633a4094a9fab58127913f66f53fc7d08c/comments", "author": null, "committer": null, "parents": [{"sha": "f817d5d47008f94b9ea1a20daf8707ac7e7a9058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f817d5d47008f94b9ea1a20daf8707ac7e7a9058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f817d5d47008f94b9ea1a20daf8707ac7e7a9058"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "8d10cf139c45013fcc133400670d8fd1e7065f3c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96cf7633a4094a9fab58127913f66f53fc7d08c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96cf7633a4094a9fab58127913f66f53fc7d08c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a96cf7633a4094a9fab58127913f66f53fc7d08c", "patch": "@@ -1,3 +1,16 @@\n+2005-03-11  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* testsuite/lib/libjava.exp (libjava_init): Use the same target\n+\tcheck for Darwin.\n+\t(libjava_arguments): Likewise.\n+\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Likewise.\n+\t(gcj_jni_test_one): Likewise.\n+\t(gcj_jni_invocation_compile_c_to_binary): Likewise.\n+\tAdd flags to keep the Darwin linker quiet.\n+\t(gcj_jni_invocation_test_one): Use the same target check for Darwin.\n+\tAdd -liconv for Darwin.\n+\n 2005-03-11  Tom Tromey  <tromey@redhat.com>\n \n \t* gnu/gcj/tools/gcj_dbtool/Main.java (main): Handle '-p'."}, {"sha": "b3a16f67169e1bedefe1c5ef83090dc4133cb427", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96cf7633a4094a9fab58127913f66f53fc7d08c/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96cf7633a4094a9fab58127913f66f53fc7d08c/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=a96cf7633a4094a9fab58127913f66f53fc7d08c", "patch": "@@ -197,8 +197,8 @@ proc libjava_init { args } {\n     # Finally, add the gcc build directory so that we can find the\n     # shared libgcc.  This, like much of dejagnu, is hideous.\n     set libjava_libgcc_s_path {}\n-    \n-    if { [string match \"powerpc-*-darwin*\" $target_triplet] } {\n+\n+    if { [istarget \"*-*-darwin*\"] } {\n \tset so_extension \"dylib\"\n     } else {\n \tset so_extension \"so\""}, {"sha": "989a16448a5ff6c5200dde7876796adf390fcf4b", "filename": "libjava/testsuite/libjava.jni/jni.exp", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96cf7633a4094a9fab58127913f66f53fc7d08c/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96cf7633a4094a9fab58127913f66f53fc7d08c/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp?ref=a96cf7633a4094a9fab58127913f66f53fc7d08c", "patch": "@@ -14,7 +14,7 @@ proc gcj_jni_compile_c_to_so {file {options {}}} {\n # so we check against powerpc-apple-darwin and set them to\n # dylib, else we assume it's .so\n \n-  if { [ regexp {powerpc-apple-darwin} $host_triplet] } {\n+  if { [istarget \"*-*-darwin*\"] } {\n       set so_extension \"dylib\"\n       set so_flag \"-dynamiclib\"\n   } else {\n@@ -77,10 +77,10 @@ proc gcj_jni_test_one {file} {\n   global INTERPRETER\n \n # apple uses a different extension for shared/dynamic libraries\n-# so we check against powerpc-apple-darwin and set them to \n+# so we check against powerpc-apple-darwin and set them to\n # dylib, else we assume it's .so\n \n-  if { [ regexp {powerpc-apple-darwin} $host_triplet] } {\n+  if { [istarget \"*-*-darwin*\"] } {\n       set so_extension \"dylib\"\n   } else {\n       set so_extension \"so\"\n@@ -134,12 +134,12 @@ proc gcj_jni_test_one {file} {\n     # Darwin does not yet have a libgcc_s.dylib library.\n     # So we add it here. If the libgcc_s is installed, the libstdc++\n     # would pick it up.\n-    if { [ regexp {powerpc-apple-darwin} $host_triplet] } {\n+    if { [istarget \"*-*-darwin*\"] } {\n \tlappend cxxflaglist \"-lgcc_s -lstdc++\"\n     } else {\n \tlappend cxxflaglist \"-lstdc++\"\n     }\n-  \n+\n     set cxxflags [join $cxxflaglist]\n   }\n \n@@ -194,6 +194,10 @@ proc gcj_jni_invocation_compile_c_to_binary {file {options {}}} {\n   set filename [file tail $file]\n   set name [file rootname $filename]\n \n+  # Set some darwin specific options\n+  if { [istarget \"*-*-darwin*\"] } {\n+      lappend options \"additional_flags=-multiply_defined suppress\"\n+  }\n   # Find the generated header.\n   lappend options \"additional_flags=-I. -I..\"\n \n@@ -238,7 +242,12 @@ proc gcj_jni_invocation_test_one {file} {\n   pass \"bytecompile $file\"\n \n   set cfile [file rootname $file].c\n-  set cxxflags \"-L../.libs -lgcj\"\n+  # Darwin needs -liconv linked, otherwise we get some unresolved.\n+  if { [istarget \"*-*-darwin*\"] } {\n+      set cxxflags \"-L../.libs -lgcj -liconv\"\n+  } else {\n+      set cxxflags \"-L../.libs -lgcj\"\n+  }\n \n   if {! [gcj_jni_invocation_compile_c_to_binary $cfile $cxxflags]} {\n     # FIXME"}]}