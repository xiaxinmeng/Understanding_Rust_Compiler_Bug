{"sha": "77278891d14e6ff888fee7dcb9ae47a9ec33422b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcyNzg4OTFkMTRlNmZmODg4ZmVlN2RjYjlhZTQ3YTllYzMzNDIyYg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-04-24T01:03:11Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-04-24T01:03:11Z"}, "message": "expmed.c (expand_mult_highpart_adjust): Do not assume OP1 is a CONST_INT.\n\n\t* expmed.c (expand_mult_highpart_adjust): Do not assume OP1\n\tis a CONST_INT.\n\t(expand_mult_highpart_optab): Call expand_mult_highpart_adjust\n\twith NARROW_OP1 instead of OP1.\n\nFrom-SVN: r81127", "tree": {"sha": "e0716fe203d124b5daa0367dcfc4619c8a2ee56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0716fe203d124b5daa0367dcfc4619c8a2ee56f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77278891d14e6ff888fee7dcb9ae47a9ec33422b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77278891d14e6ff888fee7dcb9ae47a9ec33422b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77278891d14e6ff888fee7dcb9ae47a9ec33422b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77278891d14e6ff888fee7dcb9ae47a9ec33422b/comments", "author": null, "committer": null, "parents": [{"sha": "a3ef788f9d39f457e472b93b4c20e7d658f37c80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3ef788f9d39f457e472b93b4c20e7d658f37c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3ef788f9d39f457e472b93b4c20e7d658f37c80"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "2b717ebb5264017d7a0137f9f39caad955fd8eab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77278891d14e6ff888fee7dcb9ae47a9ec33422b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77278891d14e6ff888fee7dcb9ae47a9ec33422b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77278891d14e6ff888fee7dcb9ae47a9ec33422b", "patch": "@@ -1,3 +1,10 @@\n+2004-04-24  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* expmed.c (expand_mult_highpart_adjust): Do not assume OP1\n+\tis a CONST_INT.\n+\t(expand_mult_highpart_optab): Call expand_mult_highpart_adjust\n+\twith NARROW_OP1 instead of OP1.\n+\n 2004-04-24  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/host-linux.c (TRY_EMPTY_VM_SPACE): Define for __s390__"}, {"sha": "54959799411c3f2966365d9334cb0adfdc8e372d", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77278891d14e6ff888fee7dcb9ae47a9ec33422b/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77278891d14e6ff888fee7dcb9ae47a9ec33422b/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=77278891d14e6ff888fee7dcb9ae47a9ec33422b", "patch": "@@ -2841,7 +2841,6 @@ expand_mult_highpart_adjust (enum machine_mode mode, rtx adj_operand, rtx op0,\n   rtx tem;\n   enum rtx_code adj_code = unsignedp ? PLUS : MINUS;\n \n-  op1 = gen_int_mode (INTVAL (op1), mode);\n   tem = expand_shift (RSHIFT_EXPR, mode, op0,\n \t\t      build_int_2 (GET_MODE_BITSIZE (mode) - 1, 0),\n \t\t      NULL_RTX, 0);\n@@ -2914,7 +2913,7 @@ expand_mult_highpart_optab (enum machine_mode mode, rtx op0, rtx op1,\n \t\t\t  unsignedp, OPTAB_DIRECT);\n       if (tem)\n \t/* We used the wrong signedness.  Adjust the result.  */\n-\treturn expand_mult_highpart_adjust (mode, tem, op0, op1,\n+\treturn expand_mult_highpart_adjust (mode, tem, op0, narrow_op1,\n \t\t\t\t\t    tem, unsignedp);\n     }\n \n@@ -2954,7 +2953,7 @@ expand_mult_highpart_optab (enum machine_mode mode, rtx op0, rtx op1,\n \t{\n \t  tem = extract_high_half (mode, tem);\n \t  /* We used the wrong signedness.  Adjust the result.  */\n-\t  return expand_mult_highpart_adjust (mode, tem, op0, op1,\n+\t  return expand_mult_highpart_adjust (mode, tem, op0, narrow_op1,\n \t\t\t\t\t      target, unsignedp);\n \t}\n     }"}]}