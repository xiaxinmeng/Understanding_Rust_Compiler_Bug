{"sha": "c15677b61c637e7dca61eda426c2d7163695dc1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1Njc3YjYxYzYzN2U3ZGNhNjFlZGE0MjZjMmQ3MTYzNjk1ZGMxZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-08T10:01:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-08T10:01:29Z"}, "message": "re PR rtl-optimization/59649 (BImode miscompiled)\n\n\tPR rtl-optimization/59649\n\t* stor-layout.c (get_mode_bounds): For BImode return\n\t0 and STORE_FLAG_VALUE.\n\nFrom-SVN: r206422", "tree": {"sha": "4437bef406b9703aca6c75765d2c2574dfb038fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4437bef406b9703aca6c75765d2c2574dfb038fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c15677b61c637e7dca61eda426c2d7163695dc1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15677b61c637e7dca61eda426c2d7163695dc1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c15677b61c637e7dca61eda426c2d7163695dc1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15677b61c637e7dca61eda426c2d7163695dc1d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c944c6cb8a54f29a394493e48429345f2f8f08d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c944c6cb8a54f29a394493e48429345f2f8f08d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c944c6cb8a54f29a394493e48429345f2f8f08d"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "8888a79ae5b8c8a695f2ba23c043c42d7cf6e00c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15677b61c637e7dca61eda426c2d7163695dc1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15677b61c637e7dca61eda426c2d7163695dc1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c15677b61c637e7dca61eda426c2d7163695dc1d", "patch": "@@ -1,3 +1,9 @@\n+2014-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/59649\n+\t* stor-layout.c (get_mode_bounds): For BImode return\n+\t0 and STORE_FLAG_VALUE.\n+\n 2014-01-08  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/59630"}, {"sha": "084d195cd488ea2cb6e9694bdd18ebbd40952b44", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15677b61c637e7dca61eda426c2d7163695dc1d/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15677b61c637e7dca61eda426c2d7163695dc1d/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=c15677b61c637e7dca61eda426c2d7163695dc1d", "patch": "@@ -2821,7 +2821,21 @@ get_mode_bounds (enum machine_mode mode, int sign,\n \n   gcc_assert (size <= HOST_BITS_PER_WIDE_INT);\n \n-  if (sign)\n+  /* Special case BImode, which has values 0 and STORE_FLAG_VALUE.  */\n+  if (mode == BImode)\n+    {\n+      if (STORE_FLAG_VALUE < 0)\n+\t{\n+\t  min_val = STORE_FLAG_VALUE;\n+\t  max_val = 0;\n+\t}\n+      else\n+\t{\n+\t  min_val = 0;\n+\t  max_val = STORE_FLAG_VALUE;\n+\t}\n+    }\n+  else if (sign)\n     {\n       min_val = -((unsigned HOST_WIDE_INT) 1 << (size - 1));\n       max_val = ((unsigned HOST_WIDE_INT) 1 << (size - 1)) - 1;"}]}