{"sha": "76ffb3a0be0adcb96cfddc7cbd5bc1576386ee3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmZmIzYTBiZTBhZGNiOTZjZmRkYzdjYmQ1YmMxNTc2Mzg2ZWUzZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-11T17:59:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-11T17:59:56Z"}, "message": "(variable_size): Do nothing if SIZE is constant.\n\nFrom-SVN: r9925", "tree": {"sha": "a999095aa85cb302d2638cc3776ee6d757984714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a999095aa85cb302d2638cc3776ee6d757984714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76ffb3a0be0adcb96cfddc7cbd5bc1576386ee3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ffb3a0be0adcb96cfddc7cbd5bc1576386ee3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ffb3a0be0adcb96cfddc7cbd5bc1576386ee3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ffb3a0be0adcb96cfddc7cbd5bc1576386ee3d/comments", "author": null, "committer": null, "parents": [{"sha": "ee3ac81d77130be7d1a9edd39507fe16d1a5514d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee3ac81d77130be7d1a9edd39507fe16d1a5514d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee3ac81d77130be7d1a9edd39507fe16d1a5514d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "782ac07a7b9d3772b4c07ec353f244380581443b", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ffb3a0be0adcb96cfddc7cbd5bc1576386ee3d/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ffb3a0be0adcb96cfddc7cbd5bc1576386ee3d/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=76ffb3a0be0adcb96cfddc7cbd5bc1576386ee3d", "patch": "@@ -80,7 +80,7 @@ get_pending_sizes ()\n   return chain;\n }\n \n-/* Given a size SIZE that isn't constant, return a SAVE_EXPR\n+/* Given a size SIZE that may not be a constant, return a SAVE_EXPR\n    to serve as the actual size-expression for a type or decl.  */\n \n tree\n@@ -90,7 +90,8 @@ variable_size (size)\n   /* If the language-processor is to take responsibility for variable-sized\n      items (e.g., languages which have elaboration procedures like Ada),\n      just return SIZE unchanged.  Likewise for self-referential sizes.  */\n-  if (global_bindings_p () < 0 || contains_placeholder_p (size))\n+  if (TREE_CONSTANT (size)\n+      || global_bindings_p () < 0 || contains_placeholder_p (size))\n     return size;\n \n   size = save_expr (size);"}]}