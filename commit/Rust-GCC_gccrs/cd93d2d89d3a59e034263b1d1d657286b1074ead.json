{"sha": "cd93d2d89d3a59e034263b1d1d657286b1074ead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5M2QyZDg5ZDNhNTllMDM0MjYzYjFkMWQ2NTcyODZiMTA3NGVhZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2019-07-04T08:05:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-04T08:05:17Z"}, "message": "[Ada] Reduce emitted code size in CCG for aggregate assignment\n\n2019-07-04  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb (Check_Component): Take into account type\n\tconversions.\n\nFrom-SVN: r273046", "tree": {"sha": "100da437f262aeb542ce0631a118f7d5546e47bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/100da437f262aeb542ce0631a118f7d5546e47bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd93d2d89d3a59e034263b1d1d657286b1074ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd93d2d89d3a59e034263b1d1d657286b1074ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd93d2d89d3a59e034263b1d1d657286b1074ead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd93d2d89d3a59e034263b1d1d657286b1074ead/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7d5159ec9fcc229e47392dc0dfec191d361b398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d5159ec9fcc229e47392dc0dfec191d361b398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d5159ec9fcc229e47392dc0dfec191d361b398"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "4de9db792a9d8320dfd970c8cb8c93003b976e23", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd93d2d89d3a59e034263b1d1d657286b1074ead/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd93d2d89d3a59e034263b1d1d657286b1074ead/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cd93d2d89d3a59e034263b1d1d657286b1074ead", "patch": "@@ -1,3 +1,8 @@\n+2019-07-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_aggr.adb (Check_Component): Take into account type\n+\tconversions.\n+\n 2019-07-04  Dmitriy Anisimkov  <anisimko@adacore.com>\n \n \t* doc/gnat_ugn/platform_specific_information.rst: Document"}, {"sha": "80523e999d30894259cb682bd2d66c41fb7d4b39", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd93d2d89d3a59e034263b1d1d657286b1074ead/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd93d2d89d3a59e034263b1d1d657286b1074ead/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=cd93d2d89d3a59e034263b1d1d657286b1074ead", "patch": "@@ -5549,7 +5549,8 @@ package body Exp_Aggr is\n                  or else (Nkind (Comp) = N_Selected_Component\n                            and then Check_Component (Prefix (Comp)))\n \n-                 or else (Nkind (Comp) = N_Unchecked_Type_Conversion\n+                 or else (Nkind_In (Comp, N_Unchecked_Type_Conversion,\n+                                    N_Type_Conversion)\n                            and then Check_Component (Expression (Comp)));\n             end Check_Component;\n "}]}