{"sha": "f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA3YTZiMjFmNmIwYzJhNTRhOTRiNmQ5OGJiZGRjMjU2MGJlMGVlNA==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@wasabisystems.com", "date": "2004-02-13T21:49:26Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2004-02-13T21:49:26Z"}, "message": "Two minor fixes.\n\n\t* config/arm/mmintrin.h (_mm_setwcx): Reverse arguments in call to\n\t__builtin_arm_setwcx ().\n\t* config/arm/arm.c (arm_expand_builtin): Generate operands\n\tcorrectly and reverse their order in call to gen_iwmmxt_tmcr ().\nand:\n\t* config/arm/arm.c (bdesc_2arg): Correct builtin names \"wmulsh\"\n\tand \"wmuluh\" to \"wmulsm\" and \"wmulum\", respectively.\n\t* config/arm/arm.h (enum arm_builtins): Rename enumerators to\n\tARM_BUILTIN_WMULSM and ARM_BUILTIN_WMULUM.\n\t* config/arm/mmintrin.h (_mm_mulhi_pi16): Update intrinsic call.\n\t(_mm_mulhi_pu16): Likewise.\n\nFrom-SVN: r77774", "tree": {"sha": "9277bc43edbb9e20719242e6633ab7714ee72b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9277bc43edbb9e20719242e6633ab7714ee72b3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/comments", "author": null, "committer": null, "parents": [{"sha": "972760b77189ea08f46287752e15a1f7699a7322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972760b77189ea08f46287752e15a1f7699a7322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/972760b77189ea08f46287752e15a1f7699a7322"}], "stats": {"total": 52, "additions": 34, "deletions": 18}, "files": [{"sha": "36d4f3350ff1aef71f7dccb927a3a5207d939945", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4", "patch": "@@ -1,3 +1,19 @@\n+2004-02-14  Ben Elliston  <bje@wasabisystems.com>\n+\n+\t* config/arm/mmintrin.h (_mm_setwcx): Reverse arguments in call to\n+\t__builtin_arm_setwcx ().\n+\t* config/arm/arm.c (arm_expand_builtin): Generate operands\n+\tcorrectly and reverse their order in call to gen_iwmmxt_tmcr ().\n+\n+2004-02-14  Ben Elliston  <bje@wasabisystems.com>\n+\n+\t* config/arm/arm.c (bdesc_2arg): Correct builtin names \"wmulsh\"\n+\tand \"wmuluh\" to \"wmulsm\" and \"wmulum\", respectively.\n+\t* config/arm/arm.h (enum arm_builtins): Rename enumerators to\n+\tARM_BUILTIN_WMULSM and ARM_BUILTIN_WMULUM.\n+\t* config/arm/mmintrin.h (_mm_mulhi_pi16): Update intrinsic call.\n+\t(_mm_mulhi_pu16): Likewise.\n+\n 2004-02-13  Zack Weinberg  <zack@codesourcery.com>\n \n \t* xcoffout.c (xcoff_assign_fundamental_type_number): Check"}, {"sha": "2ec011e90321fb106f2f5764eadab545b90d4f64", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4", "patch": "@@ -11360,8 +11360,8 @@ static const struct builtin_description bdesc_2arg[] =\n   IWMMXT_BUILTIN (ussubv4hi3, \"wsubhus\", WSUBUSH)\n   IWMMXT_BUILTIN (ussubv2si3, \"wsubwus\", WSUBUSW)\n   IWMMXT_BUILTIN (mulv4hi3, \"wmulul\", WMULUL)\n-  IWMMXT_BUILTIN (smulv4hi3_highpart, \"wmulsh\", WMULSH)\n-  IWMMXT_BUILTIN (umulv4hi3_highpart, \"wmuluh\", WMULUH)\n+  IWMMXT_BUILTIN (smulv4hi3_highpart, \"wmulsm\", WMULSM)\n+  IWMMXT_BUILTIN (umulv4hi3_highpart, \"wmulum\", WMULUM)\n   IWMMXT_BUILTIN (eqv8qi3, \"wcmpeqb\", WCMPEQB)\n   IWMMXT_BUILTIN (eqv4hi3, \"wcmpeqh\", WCMPEQH)\n   IWMMXT_BUILTIN (eqv2si3, \"wcmpeqw\", WCMPEQW)\n@@ -11991,9 +11991,9 @@ arm_expand_builtin (tree exp,\n     case ARM_BUILTIN_SETWCX:\n       arg0 = TREE_VALUE (arglist);\n       arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n-      op0 = expand_expr (arg0, NULL_RTX, VOIDmode, 0);\n-      op1 = force_reg (SImode, expand_expr (arg1, NULL_RTX, VOIDmode, 0));\n-      emit_insn (gen_iwmmxt_tmcr (op0, op1));\n+      op0 = force_reg (SImode, expand_expr (arg0, NULL_RTX, VOIDmode, 0));\n+      op1 = expand_expr (arg1, NULL_RTX, VOIDmode, 0);\n+      emit_insn (gen_iwmmxt_tmcr (op1, op0));\n       return 0;\n \n     case ARM_BUILTIN_GETWCX:"}, {"sha": "3f082eabef0c8e57e360507959c104ca7b2773a4", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4", "patch": "@@ -2971,8 +2971,8 @@ enum arm_builtins\n   ARM_BUILTIN_WMINUH,\n   ARM_BUILTIN_WMINUB,\n \n-  ARM_BUILTIN_WMULUH,\n-  ARM_BUILTIN_WMULSH,\n+  ARM_BUILTIN_WMULUM,\n+  ARM_BUILTIN_WMULSM,\n   ARM_BUILTIN_WMULUL,\n \n   ARM_BUILTIN_PSADBH,"}, {"sha": "131c434d37f667da658ef11efbf5282d8052a852", "filename": "gcc/config/arm/mmintrin.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/gcc%2Fconfig%2Farm%2Fmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4/gcc%2Fconfig%2Farm%2Fmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmmintrin.h?ref=f07a6b21f6b0c2a54a94b6d98bbddc2560be0ee4", "patch": "@@ -419,15 +419,15 @@ _mm_madd_pu16 (__m64 __m1, __m64 __m2)\n static __inline __m64\n _mm_mulhi_pi16 (__m64 __m1, __m64 __m2)\n {\n-  return (__m64) __builtin_arm_wmulsh ((__v4hi)__m1, (__v4hi)__m2);\n+  return (__m64) __builtin_arm_wmulsm ((__v4hi)__m1, (__v4hi)__m2);\n }\n \n /* Multiply four signed 16-bit values in M1 by four signed 16-bit values in\n    M2 and produce the high 16 bits of the 32-bit results.  */\n static __inline __m64\n _mm_mulhi_pu16 (__m64 __m1, __m64 __m2)\n {\n-  return (__m64) __builtin_arm_wmuluh ((__v4hi)__m1, (__v4hi)__m2);\n+  return (__m64) __builtin_arm_wmulum ((__v4hi)__m1, (__v4hi)__m2);\n }\n \n /* Multiply four 16-bit values in M1 by four 16-bit values in M2 and produce\n@@ -986,18 +986,18 @@ _mm_setzero_si64 (void)\n    the rest are reserved.  */\n \n static __inline void\n-_mm_setwcx (const int __regno, const int __value)\n+_mm_setwcx (const int __value, const int __regno)\n {\n   switch (__regno)\n     {\n-    case 0:  __builtin_arm_setwcx (0, __value); break;\n-    case 1:  __builtin_arm_setwcx (1, __value); break;\n-    case 2:  __builtin_arm_setwcx (2, __value); break;\n-    case 3:  __builtin_arm_setwcx (3, __value); break;\n-    case 8:  __builtin_arm_setwcx (8, __value); break;\n-    case 9:  __builtin_arm_setwcx (9, __value); break;\n-    case 10: __builtin_arm_setwcx (10, __value); break;\n-    case 11: __builtin_arm_setwcx (11, __value); break;\n+    case 0:  __builtin_arm_setwcx (__value, 0); break;\n+    case 1:  __builtin_arm_setwcx (__value, 1); break;\n+    case 2:  __builtin_arm_setwcx (__value, 2); break;\n+    case 3:  __builtin_arm_setwcx (__value, 3); break;\n+    case 8:  __builtin_arm_setwcx (__value, 8); break;\n+    case 9:  __builtin_arm_setwcx (__value, 9); break;\n+    case 10: __builtin_arm_setwcx (__value, 10); break;\n+    case 11: __builtin_arm_setwcx (__value, 11); break;\n     default: break;\n     }\n }"}]}