{"sha": "b16084d244418d5421505f09851b5adf5abc35ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE2MDg0ZDI0NDQxOGQ1NDIxNTA1ZjA5ODUxYjVhZGY1YWJjMzVlYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-09-25T14:16:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-09-25T14:16:32Z"}, "message": "cmd/go: pass down testing gccgo in TestScript\n    \n    This permits TestScript to work when gccgo is not installed.\n    Previous testing was using a previously installed gccgo, not the newly\n    built one.\n    \n    This revealed that the testing of whether an internal package is\n    permitted was incorrect for standard library packages, since the\n    uninstalled gccgo can see internal packages in the uninstalled libgo.\n    Fix the internal package tests.\n    \n    This permitted removing a couple of gccgo-specific changes in the\n    testsuite.\n    \n    Reviewed-on: https://go-review.googlesource.com/137255\n\nFrom-SVN: r264570", "tree": {"sha": "872f530a1669ad0f37d72c8b952ee5fe88d9e334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/872f530a1669ad0f37d72c8b952ee5fe88d9e334"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b16084d244418d5421505f09851b5adf5abc35ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16084d244418d5421505f09851b5adf5abc35ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16084d244418d5421505f09851b5adf5abc35ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16084d244418d5421505f09851b5adf5abc35ec/comments", "author": null, "committer": null, "parents": [{"sha": "97b8f8679d0db4b9159e1640ff34460aaccace74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b8f8679d0db4b9159e1640ff34460aaccace74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b8f8679d0db4b9159e1640ff34460aaccace74"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "65693ffebbc88c90764114e6732ec0302d22eb69", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16084d244418d5421505f09851b5adf5abc35ec/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16084d244418d5421505f09851b5adf5abc35ec/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=b16084d244418d5421505f09851b5adf5abc35ec", "patch": "@@ -1,4 +1,4 @@\n-7b25b4dff4778fc4d6b5d6e10594814146b3e5dd\n+1dbc5b805a1665079008d1ce341991c3554c1eeb\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "b6c903788814e8ee5deb0723d276e971cfab4cb3", "filename": "libgo/go/cmd/go/internal/load/pkg.go", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16084d244418d5421505f09851b5adf5abc35ec/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fload%2Fpkg.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16084d244418d5421505f09851b5adf5abc35ec/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fload%2Fpkg.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fload%2Fpkg.go?ref=b16084d244418d5421505f09851b5adf5abc35ec", "patch": "@@ -953,8 +953,14 @@ func disallowInternal(srcDir string, importer *Package, importerPath string, p *\n \t}\n \n \t// We can't check standard packages with gccgo.\n-\tif cfg.BuildContext.Compiler == \"gccgo\" && p.Standard {\n-\t\treturn p\n+\tif cfg.BuildContext.Compiler == \"gccgo\" {\n+\t\tif importer == nil {\n+\t\t\tif p.Standard {\n+\t\t\t\treturn p\n+\t\t\t}\n+\t\t} else if importer.Standard || strings.HasPrefix(importerPath, \"cmd/\") {\n+\t\t\treturn p\n+\t\t}\n \t}\n \n \t// The stack includes p.ImportPath."}, {"sha": "9e958e0c6358ae934ff6067493d3879276a75aa0", "filename": "libgo/go/cmd/go/script_test.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16084d244418d5421505f09851b5adf5abc35ec/libgo%2Fgo%2Fcmd%2Fgo%2Fscript_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16084d244418d5421505f09851b5adf5abc35ec/libgo%2Fgo%2Fcmd%2Fgo%2Fscript_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Fscript_test.go?ref=b16084d244418d5421505f09851b5adf5abc35ec", "patch": "@@ -78,6 +78,7 @@ var extraEnvKeys = []string{\n \n \t// For gccgo testing.\n \t\"GO_TESTING_GOTOOLS\",\n+\t\"GCCGO\",\n \t\"GCCGOTOOLDIR\",\n }\n "}, {"sha": "72706fdc7b4496f9fce28d27ed188abf1746b378", "filename": "libgo/go/cmd/go/testdata/script/mod_internal.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16084d244418d5421505f09851b5adf5abc35ec/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fscript%2Fmod_internal.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16084d244418d5421505f09851b5adf5abc35ec/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fscript%2Fmod_internal.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fscript%2Fmod_internal.txt?ref=b16084d244418d5421505f09851b5adf5abc35ec", "patch": "@@ -16,11 +16,11 @@ stderr 'use of internal package golang.org/x/.* not allowed'\n \n # Internal packages in the standard library should not leak into modules.\n ! go build ./fromstd\n-[!gccgo] stderr 'use of internal package internal/testenv not allowed'\n+stderr 'use of internal package internal/testenv not allowed'\n \n # Packages found via standard-library vendoring should not leak.\n ! go build ./fromstdvendor\n-[!gccgo] stderr 'use of vendored package golang_org/x/net/http/httpguts not allowed'\n+stderr 'use of vendored package golang_org/x/net/http/httpguts not allowed'\n \n env GO111MODULE=off\n ! go build ./fromstdvendor"}]}