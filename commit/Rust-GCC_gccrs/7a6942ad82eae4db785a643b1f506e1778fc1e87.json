{"sha": "7a6942ad82eae4db785a643b1f506e1778fc1e87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E2OTQyYWQ4MmVhZTRkYjc4NWE2NDNiMWY1MDZlMTc3OGZjMWU4Nw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2008-07-02T06:43:45Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2008-07-02T06:43:45Z"}, "message": "alpha.c (alpha_need_linkage, [...]): Fix -Wc++-compat and/or -Wcast-qual warnings.\n\n\t* config/alpha/alpha.c (alpha_need_linkage, alpha_use_linkage):\n\tFix -Wc++-compat and/or -Wcast-qual warnings.\n\t* config/i386/netware.c (gen_stdcall_or_fastcall_decoration,\n\tgen_regparm_prefix): Likewise.\n\t* vmsdbgout.c (write_modbeg, lookup_filename,\n\tvmsdbgout_source_line, vmsdbgout_init): Likewise.\n\nFrom-SVN: r137341", "tree": {"sha": "d967daea018cf9a7a9cd62c3634c9712caa7a10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d967daea018cf9a7a9cd62c3634c9712caa7a10d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a6942ad82eae4db785a643b1f506e1778fc1e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6942ad82eae4db785a643b1f506e1778fc1e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a6942ad82eae4db785a643b1f506e1778fc1e87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6942ad82eae4db785a643b1f506e1778fc1e87/comments", "author": null, "committer": null, "parents": [{"sha": "20384976824e3dd82f2906cc8a72e9649fca8e7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20384976824e3dd82f2906cc8a72e9649fca8e7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20384976824e3dd82f2906cc8a72e9649fca8e7a"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "fe4267560fd1b23f37f4ebc4cdb5f54bf1b6a4c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a6942ad82eae4db785a643b1f506e1778fc1e87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a6942ad82eae4db785a643b1f506e1778fc1e87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a6942ad82eae4db785a643b1f506e1778fc1e87", "patch": "@@ -1,3 +1,12 @@\n+2008-07-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* config/alpha/alpha.c (alpha_need_linkage, alpha_use_linkage):\n+\tFix -Wc++-compat and/or -Wcast-qual warnings.\n+\t* config/i386/netware.c (gen_stdcall_or_fastcall_decoration,\n+\tgen_regparm_prefix): Likewise.\n+\t* vmsdbgout.c (write_modbeg, lookup_filename,\n+\tvmsdbgout_source_line, vmsdbgout_init): Likewise.\n+\n 2008-07-02  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/i386/mingw32.h (TARGET_USE_JCR_SECTION): Undef to let"}, {"sha": "350994234cd766fc32e95df73e0ba13a987e8802", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a6942ad82eae4db785a643b1f506e1778fc1e87/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a6942ad82eae4db785a643b1f506e1778fc1e87/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=7a6942ad82eae4db785a643b1f506e1778fc1e87", "patch": "@@ -9489,7 +9489,7 @@ alpha_need_linkage (const char *name, int is_local)\n   /* Construct a SYMBOL_REF for us to call.  */\n   {\n     size_t name_len = strlen (name);\n-    char *linksym = alloca (name_len + 6);\n+    char *linksym = XALLOCAVEC (char, name_len + 6);\n     linksym[0] = '$';\n     memcpy (linksym + 1, name, name_len);\n     memcpy (linksym + 1 + name_len, \"..lk\", 5);\n@@ -9556,7 +9556,7 @@ alpha_use_linkage (rtx linkage, tree cfundecl, int lflag, int rflag)\n \n       sprintf (buf, \"$%d..%s..lk\", cfaf->num, name);\n       buflen = strlen (buf);\n-      linksym = alloca (buflen + 1);\n+      linksym = XALLOCAVEC (char, buflen + 1);\n       memcpy (linksym, buf, buflen + 1);\n \n       al->linkage = gen_rtx_SYMBOL_REF"}, {"sha": "7f040d4b0e05ed765b379f2a947973a3c2671c68", "filename": "gcc/config/i386/netware.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a6942ad82eae4db785a643b1f506e1778fc1e87/gcc%2Fconfig%2Fi386%2Fnetware.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a6942ad82eae4db785a643b1f506e1778fc1e87/gcc%2Fconfig%2Fi386%2Fnetware.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetware.c?ref=7a6942ad82eae4db785a643b1f506e1778fc1e87", "patch": "@@ -77,7 +77,7 @@ gen_stdcall_or_fastcall_decoration (tree decl, tree id, char prefix)\n \t}\n     }\n \n-  new_str = alloca (1 + strlen (old_str) + 1 + 10 + 1);\n+  new_str = XALLOCAVEC (char, 1 + strlen (old_str) + 1 + 10 + 1);\n   sprintf (new_str, \"%c%s@\" HOST_WIDE_INT_PRINT_UNSIGNED,\n \t   prefix, old_str, total);\n \n@@ -132,7 +132,7 @@ gen_regparm_prefix (tree decl, tree id, unsigned int nregs)\n   if (nregs > total / UNITS_PER_WORD)\n     nregs = total / UNITS_PER_WORD;\n   gcc_assert (nregs <= 9);\n-  new_str = alloca (3 + strlen (old_str) + 1);\n+  new_str = XALLOCAVEC (char, 3 + strlen (old_str) + 1);\n   sprintf (new_str, \"_%u@%s\", nregs, old_str);\n \n   return get_identifier (new_str);"}, {"sha": "6699f52e91cd1e524bcf22716c68823317036cba", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a6942ad82eae4db785a643b1f506e1778fc1e87/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a6942ad82eae4db785a643b1f506e1778fc1e87/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=7a6942ad82eae4db785a643b1f506e1778fc1e87", "patch": "@@ -715,7 +715,7 @@ write_modbeg (int dosizeonly)\n   int totsize = 0;\n \n   /* Assumes primary filename has Unix syntax file spec.  */\n-  module_name = xstrdup (basename ((char *) primary_filename));\n+  module_name = xstrdup (lbasename (primary_filename));\n \n   m = strrchr (module_name, '.');\n   if (m)\n@@ -1510,9 +1510,8 @@ lookup_filename (const char *file_name)\n     {\n \n       file_info_table_allocated += FILE_TABLE_INCREMENT;\n-      file_info_table = xrealloc (file_info_table,\n-\t\t\t\t  (file_info_table_allocated\n-\t\t\t\t   * sizeof (dst_file_info_entry)));\n+      file_info_table = XRESIZEVEC (dst_file_info_entry, file_info_table,\n+\t\t\t\t    file_info_table_allocated);\n     }\n \n   /* Add the new entry to the end of the filename table.  */\n@@ -1549,9 +1548,8 @@ vmsdbgout_source_line (register unsigned line, register const char *filename)\n       if (line_info_table_in_use == line_info_table_allocated)\n \t{\n \t  line_info_table_allocated += LINE_INFO_TABLE_INCREMENT;\n-\t  line_info_table = xrealloc (line_info_table,\n-\t\t\t\t      (line_info_table_allocated\n-\t\t\t\t       * sizeof (dst_line_info_entry)));\n+\t  line_info_table = XRESIZEVEC (dst_line_info_entry, line_info_table,\n+\t\t\t\t\tline_info_table_allocated);\n \t}\n \n       /* Add the new entry at the end of the line_info_table.  */\n@@ -1600,8 +1598,7 @@ vmsdbgout_init (const char *main_input_filename)\n   primary_filename = main_input_filename;\n \n   /* Allocate the initial hunk of the file_info_table.  */\n-  file_info_table\n-    = xcalloc (FILE_TABLE_INCREMENT, sizeof (dst_file_info_entry));\n+  file_info_table = XCNEWVEC (dst_file_info_entry, FILE_TABLE_INCREMENT);\n   file_info_table_allocated = FILE_TABLE_INCREMENT;\n \n   /* Skip the first entry - file numbers begin at 1 */\n@@ -1612,8 +1609,7 @@ vmsdbgout_init (const char *main_input_filename)\n   func_table_in_use = 1;\n \n   /* Allocate the initial hunk of the line_info_table.  */\n-  line_info_table\n-    = xcalloc (LINE_INFO_TABLE_INCREMENT, sizeof (dst_line_info_entry));\n+  line_info_table = XCNEWVEC (dst_line_info_entry, LINE_INFO_TABLE_INCREMENT);\n   line_info_table_allocated = LINE_INFO_TABLE_INCREMENT;\n   /* zero-th entry is allocated, but unused */\n   line_info_table_in_use = 1;"}]}