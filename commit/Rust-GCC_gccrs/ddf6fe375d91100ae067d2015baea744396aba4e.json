{"sha": "ddf6fe375d91100ae067d2015baea744396aba4e", "node_id": "C_kwDOANBUbNoAKGRkZjZmZTM3NWQ5MTEwMGFlMDY3ZDIwMTViYWVhNzQ0Mzk2YWJhNGU", "commit": {"author": {"name": "Arsen Arsenovi\u0107", "email": "arsen@aarsen.me", "date": "2023-02-23T01:06:49Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@pfeifer.com", "date": "2023-02-23T01:08:10Z"}, "message": "docs: Reorder @opindex before corresponding options\n\ngcc/d/ChangeLog:\n\n\t* gdc.texi: Reorder @opindex commands to precede @items they\n\trelate to.\n\ngcc/ChangeLog:\n\n\t* doc/cppdiropts.texi: Reorder @opindex commands to precede\n\t@items they relate to.\n\t* doc/cppopts.texi: Ditto.\n\t* doc/cppwarnopts.texi: Ditto.\n\t* doc/invoke.texi: Ditto.\n\t* doc/lto.texi: Ditto.\n\ngcc/fortran/ChangeLog:\n\n\t* invoke.texi: Reorder @opindex commands to precede @items they\n\trelate to.", "tree": {"sha": "997c73acfdc6c11ba6463ea2f4b78343d8b1e3f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/997c73acfdc6c11ba6463ea2f4b78343d8b1e3f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddf6fe375d91100ae067d2015baea744396aba4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf6fe375d91100ae067d2015baea744396aba4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddf6fe375d91100ae067d2015baea744396aba4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf6fe375d91100ae067d2015baea744396aba4e/comments", "author": {"login": "ArsenArsen", "id": 7805050, "node_id": "MDQ6VXNlcjc4MDUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7805050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArsenArsen", "html_url": "https://github.com/ArsenArsen", "followers_url": "https://api.github.com/users/ArsenArsen/followers", "following_url": "https://api.github.com/users/ArsenArsen/following{/other_user}", "gists_url": "https://api.github.com/users/ArsenArsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArsenArsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArsenArsen/subscriptions", "organizations_url": "https://api.github.com/users/ArsenArsen/orgs", "repos_url": "https://api.github.com/users/ArsenArsen/repos", "events_url": "https://api.github.com/users/ArsenArsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ArsenArsen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GeraldPfeifer", "id": 4573532, "node_id": "MDQ6VXNlcjQ1NzM1MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4573532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeraldPfeifer", "html_url": "https://github.com/GeraldPfeifer", "followers_url": "https://api.github.com/users/GeraldPfeifer/followers", "following_url": "https://api.github.com/users/GeraldPfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/GeraldPfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeraldPfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeraldPfeifer/subscriptions", "organizations_url": "https://api.github.com/users/GeraldPfeifer/orgs", "repos_url": "https://api.github.com/users/GeraldPfeifer/repos", "events_url": "https://api.github.com/users/GeraldPfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/GeraldPfeifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6f98991b147726e8bd883ab66d188e90cfb12c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f98991b147726e8bd883ab66d188e90cfb12c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6f98991b147726e8bd883ab66d188e90cfb12c3"}], "stats": {"total": 6206, "additions": 3103, "deletions": 3103}, "files": [{"sha": "24b6ee00478943fde0849b1b4c8733a4bf54827b", "filename": "gcc/d/gdc.texi", "status": "modified", "additions": 72, "deletions": 72, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fd%2Fgdc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fd%2Fgdc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fgdc.texi?ref=ddf6fe375d91100ae067d2015baea744396aba4e", "patch": "@@ -171,30 +171,30 @@ These options affect the runtime behavior of programs compiled with\n \n @table @gcctabopt\n \n-@item -fall-instantiations\n @opindex fall-instantiations\n @opindex fno-all-instantiations\n+@item -fall-instantiations\n Generate code for all template instantiations.  The default template emission\n strategy is to not generate code for declarations that were either\n instantiated speculatively, such as from @code{__traits(compiles, ...)}, or\n that come from an imported module not being compiled.\n \n-@item -fno-assert\n @opindex fassert\n @opindex fno-assert\n+@item -fno-assert\n Turn off code generation for @code{assert} contracts.\n \n-@item -fno-bounds-check\n @opindex fbounds-check\n @opindex fno-bounds-check\n+@item -fno-bounds-check\n Turns off array bounds checking for all functions, which can improve\n performance for code that uses arrays extensively.  Note that this\n can result in unpredictable behavior if the code in question actually\n does violate array bounds constraints.  It is safe to use this option\n if you are sure that your code never throws a @code{RangeError}.\n \n-@item -fbounds-check=@var{value}\n @opindex fbounds-check=\n+@item -fbounds-check=@var{value}\n An alternative to @option{-fbounds-check} that allows more control\n as to where bounds checking is turned on or off.  The following values\n are supported:\n@@ -208,15 +208,15 @@ Turns on array bounds checking only for @code{@@safe} functions.\n Turns off array bounds checking completely.\n @end table\n \n-@item -fno-builtin\n @opindex fbuiltin\n @opindex fno-builtin\n+@item -fno-builtin\n Don't recognize built-in functions unless they begin with the prefix\n @samp{__builtin_}.  By default, the compiler will recognize when a\n function in the @code{core.stdc} package is a built-in function.\n \n-@item -fcheckaction=@var{value}\n @opindex fcheckaction\n+@item -fcheckaction=@var{value}\n This option controls what code is generated on an assertion, bounds check, or\n final switch failure.  The following values are supported:\n \n@@ -229,10 +229,10 @@ Halt the program execution.\n Throw an @code{AssertError} (the default).\n @end table\n \n-@item -fdebug\n-@item -fdebug=@var{value}\n @opindex fdebug\n @opindex fno-debug\n+@item -fdebug\n+@item -fdebug=@var{value}\n Turn on compilation of conditional @code{debug} code into the program.\n The @option{-fdebug} option itself sets the debug level to @code{1},\n while @option{-fdebug=} enables @code{debug} code that are identified\n@@ -243,9 +243,9 @@ by any of the following values:\n Turns on compilation of any @code{debug} code identified by @var{ident}.\n @end table\n \n-@item -fno-druntime\n @opindex fdruntime\n @opindex fno-druntime\n+@item -fno-druntime\n Implements @uref{https://dlang.org/spec/betterc.html}.  Assumes that\n compilation targets an environment without a D runtime library.\n \n@@ -255,8 +255,8 @@ This is equivalent to compiling with the following options:\n gdc -nophoboslib -fno-exceptions -fno-moduleinfo -fno-rtti\n @end example\n \n-@item -fextern-std=@var{standard}\n @opindex fextern-std\n+@item -fextern-std=@var{standard}\n Sets the C++ name mangling compatibility to the version identified by\n @var{standard}.  The following values are supported:\n \n@@ -275,46 +275,46 @@ This is the default.\n Sets @code{__traits(getTargetInfo, \"cppStd\")} to @code{202002}.\n @end table\n \n-@item -fno-invariants\n @opindex finvariants\n @opindex fno-invariants\n+@item -fno-invariants\n Turns off code generation for class @code{invariant} contracts.\n \n-@item -fmain\n @opindex fmain\n+@item -fmain\n Generates a default @code{main()} function when compiling.  This is useful when\n unittesting a library, as it enables running the unittests in a library without\n having to manually define an entry-point function.  This option does nothing\n when @code{main} is already defined in user code.\n \n-@item -fno-moduleinfo\n @opindex fmoduleinfo\n @opindex fno-moduleinfo\n+@item -fno-moduleinfo\n Turns off generation of the @code{ModuleInfo} and related functions\n that would become unreferenced without it, which may allow linking\n to programs not written in D.  Functions that are not be generated\n include module constructors and destructors (@code{static this} and\n @code{static ~this}), @code{unittest} code, and @code{DSO} registry\n functions for dynamically linked code.\n \n-@item -fonly=@var{filename}\n @opindex fonly\n+@item -fonly=@var{filename}\n Tells the compiler to parse and run semantic analysis on all modules\n on the command line, but only generate code for the module specified\n by @var{filename}.\n \n-@item -fno-postconditions\n @opindex fpostconditions\n @opindex fno-postconditions\n+@item -fno-postconditions\n Turns off code generation for postcondition @code{out} contracts.\n \n-@item -fno-preconditions\n @opindex fpreconditions\n @opindex fno-preconditions\n+@item -fno-preconditions\n Turns off code generation for precondition @code{in} contracts.\n \n-@item -fpreview=@var{id}\n @opindex fpreview\n+@item -fpreview=@var{id}\n Turns on an upcoming D language change identified by @var{id}.  The following\n values are supported:\n \n@@ -359,9 +359,9 @@ Implements rvalue arguments to @code{ref} parameters.\n Disables access to variables marked @code{@@system} from @code{@@safe} code.\n @end table\n \n-@item -frelease\n @opindex frelease\n @opindex fno-release\n+@item -frelease\n Turns on compiling in release mode, which means not emitting runtime\n checks for contracts and asserts.  Array bounds checking is not done\n for @code{@@system} and @code{@@trusted} functions, and assertion\n@@ -374,8 +374,8 @@ gdc -fno-assert -fbounds-check=safe -fno-invariants \\\n     -fno-postconditions -fno-preconditions -fno-switch-errors\n @end example\n \n-@item -frevert=\n @opindex frevert\n+@item -frevert=\n Turns off a D language feature identified by @var{id}.  The following values\n are supported:\n \n@@ -395,29 +395,29 @@ Turns off C-style integral promotion for unary @code{+}, @code{-} and @code{~}\n expressions.\n @end table\n \n-@item -fno-rtti\n @opindex frtti\n @opindex fno-rtti\n+@item -fno-rtti\n Turns off generation of run-time type information for all user defined types.\n Any code that uses features of the language that require access to this\n information will result in an error.\n \n-@item -fno-switch-errors\n @opindex fswitch-errors\n @opindex fno-switch-errors\n+@item -fno-switch-errors\n This option controls what code is generated when no case is matched\n in a @code{final switch} statement.  The default run time behavior\n is to throw a @code{SwitchError}.  Turning off @option{-fswitch-errors}\n means that instead the execution of the program is immediately halted.\n \n-@item -funittest\n @opindex funittest\n @opindex fno-unittest\n+@item -funittest\n Turns on compilation of @code{unittest} code, and turns on the\n @code{version(unittest)} identifier.  This implies @option{-fassert}.\n \n-@item -fversion=@var{value}\n @opindex fversion\n+@item -fversion=@var{value}\n Turns on compilation of conditional @code{version} code into the program\n identified by any of the following values:\n \n@@ -426,9 +426,9 @@ identified by any of the following values:\n Turns on compilation of @code{version} code identified by @var{ident}.\n @end table\n \n-@item -fno-weak-templates\n @opindex fweak-templates\n @opindex fno-weak-templates\n+@item -fno-weak-templates\n Turns off emission of declarations that can be defined in multiple objects as\n weak symbols.  The default is to emit all public symbols as weak, unless the\n target lacks support for weak symbols.  Disabling this option means that common\n@@ -447,30 +447,30 @@ other parts of the compiler:\n \n @table @gcctabopt\n \n-@item -I@var{dir}\n @opindex I\n+@item -I@var{dir}\n Specify a directory to use when searching for imported modules at\n compile time.  Multiple @option{-I} options can be used, and the\n paths are searched in the same order.\n \n-@item -J@var{dir}\n @opindex J\n+@item -J@var{dir}\n Specify a directory to use when searching for files in string imports\n at compile time.  This switch is required in order to use\n @code{import(file)} expressions.  Multiple @option{-J} options can be\n used, and the paths are searched in the same order.\n \n-@item -L@var{dir}\n @opindex L\n+@item -L@var{dir}\n When linking, specify a library search directory, as with @command{gcc}.\n \n-@item -B@var{dir}\n @opindex B\n+@item -B@var{dir}\n This option specifies where to find the executables, libraries,\n source files, and data files of the compiler itself, as with @command{gcc}.\n \n-@item -fmodule-file=@var{module}=@var{spec}\n @opindex fmodule-file\n+@item -fmodule-file=@var{module}=@var{spec}\n This option manipulates file paths of imported modules, such that if an\n imported module matches all or the leftmost part of @var{module}, the file\n path in @var{spec} is used as the location to search for D sources.\n@@ -492,19 +492,19 @@ import C.D.E;   // Matches C, searches for bar/D/E.d\n import A.B.C;   // No match, searches for A/B/C.d\n @end example\n \n-@item -imultilib @var{dir}\n @opindex imultilib\n+@item -imultilib @var{dir}\n Use @var{dir} as a subdirectory of the gcc directory containing\n target-specific D sources and interfaces.\n \n-@item -iprefix @var{prefix}\n @opindex iprefix\n+@item -iprefix @var{prefix}\n Specify @var{prefix} as the prefix for the gcc directory containing\n target-specific D sources and interfaces.  If the @var{prefix} represents\n a directory, you should include the final @code{'/'}.\n \n-@item -nostdinc\n @opindex nostdinc\n+@item -nostdinc\n Do not search the standard system directories for D source and interface\n files.  Only the directories that have been specified with @option{-I} options\n (and the directory of the current file, if appropriate) are searched.\n@@ -520,107 +520,107 @@ In addition to the many @command{gcc} options controlling code generation,\n \n @table @gcctabopt\n \n-@item -H\n @opindex H\n+@item -H\n Generates D interface files for all modules being compiled.  The compiler\n determines the output file based on the name of the input file, removes\n any directory components and suffix, and applies the @file{.di} suffix.\n \n-@item -Hd @var{dir}\n @opindex Hd\n+@item -Hd @var{dir}\n Same as @option{-H}, but writes interface files to directory @var{dir}.\n This option can be used with @option{-Hf @var{file}} to independently set the\n output file and directory path.\n \n-@item -Hf @var{file}\n @opindex Hf\n+@item -Hf @var{file}\n Same as @option{-H} but writes interface files to @var{file}.  This option can\n be used with @option{-Hd @var{dir}} to independently set the output file and\n directory path.\n \n-@item -M\n @opindex M\n+@item -M\n Output the module dependencies of all source files being compiled in a\n format suitable for @command{make}.  The compiler outputs one\n @command{make} rule containing the object file name for that source file,\n a colon, and the names of all imported files.\n \n-@item -MM\n @opindex MM\n+@item -MM\n Like @option{-M} but does not mention imported modules from the D standard\n library package directories.\n \n-@item -MF @var{file}\n @opindex MF\n+@item -MF @var{file}\n When used with @option{-M} or @option{-MM}, specifies a @var{file} to write\n the dependencies to.  When used with the driver options @option{-MD} or\n @option{-MMD}, @option{-MF} overrides the default dependency output file.\n \n-@item -MG\n @opindex MG\n+@item -MG\n This option is for compatibility with @command{gcc}, and is ignored by the\n compiler.\n \n-@item -MP\n @opindex MP\n+@item -MP\n Outputs a phony target for each dependency other than the modules being\n compiled, causing each to depend on nothing.\n \n-@item -MT @var{target}\n @opindex MT\n+@item -MT @var{target}\n Change the @var{target} of the rule emitted by dependency generation\n to be exactly the string you specify.  If you want multiple targets,\n you can specify them as a single argument to @option{-MT}, or use\n multiple @option{-MT} options.\n \n-@item -MQ @var{target}\n @opindex MQ\n+@item -MQ @var{target}\n Same as @option{-MT}, but it quotes any characters which are special to\n @command{make}.\n \n-@item -MD\n @opindex MD\n+@item -MD\n This option is equivalent to @option{-M -MF @var{file}}.  The driver\n determines @var{file} by removing any directory components and suffix\n from the input file, and then adding a @file{.deps} suffix.\n \n-@item -MMD\n @opindex MMD\n+@item -MMD\n Like @option{-MD} but does not mention imported modules from the D standard\n library package directories.\n \n-@item -X\n @opindex X\n+@item -X\n Output information describing the contents of all source files being\n compiled in JSON format to a file.  The driver determines @var{file} by\n removing any directory components and suffix from the input file, and then\n adding a @file{.json} suffix.\n \n-@item -Xf @var{file}\n @opindex Xf\n+@item -Xf @var{file}\n Same as @option{-X}, but writes all JSON contents to the specified\n @var{file}.\n \n-@item -fdoc\n @opindex fdoc\n+@item -fdoc\n Generates @code{Ddoc} documentation and writes it to a file.  The compiler\n determines @var{file} by removing any directory components and suffix\n from the input file, and then adding a @file{.html} suffix.\n \n-@item -fdoc-dir=@var{dir}\n @opindex fdoc-dir\n+@item -fdoc-dir=@var{dir}\n Same as @option{-fdoc}, but writes documentation to directory @var{dir}.\n This option can be used with @option{-fdoc-file=@var{file}} to\n independently set the output file and directory path.\n \n-@item -fdoc-file=@var{file}\n @opindex fdoc-file\n+@item -fdoc-file=@var{file}\n Same as @option{-fdoc}, but writes documentation to @var{file}.  This\n option can be used with @option{-fdoc-dir=@var{dir}} to independently\n set the output file and directory path.\n \n-@item -fdoc-inc=@var{file}\n @opindex fdoc-inc\n+@item -fdoc-inc=@var{file}\n Specify @var{file} as a @var{Ddoc} macro file to be read.  Multiple\n @option{-fdoc-inc} options can be used, and files are read and processed\n in the same order.\n@@ -632,8 +632,8 @@ For D source files, generate corresponding C++ declarations in @var{file}.\n In conjunction with @option{-fdump-c++-spec=} above, add comments for ignored\n declarations in the generated C++ header.\n \n-@item -fsave-mixins=@var{file}\n @opindex fsave-mixins\n+@item -fsave-mixins=@var{file}\n Generates code expanded from D @code{mixin} statements and writes the\n processed sources to @var{file}.  This is useful to debug errors in compilation\n and provides source for debuggers to show when requested.\n@@ -656,93 +656,93 @@ specified, they do not prevent compilation of the program.\n \n @table @gcctabopt\n \n-@item -Wall\n @opindex Wall\n @opindex Wno-all\n+@item -Wall\n Turns on all warnings messages.  Warnings are not a defined part of\n the D language, and all constructs for which this may generate a\n warning message are valid code.\n \n-@item -Walloca\n @opindex Walloca\n+@item -Walloca\n This option warns on all uses of \"alloca\" in the source.\n \n-@item -Walloca-larger-than=@var{n}\n @opindex Walloca-larger-than\n @opindex Wno-alloca-larger-than\n+@item -Walloca-larger-than=@var{n}\n Warn on unbounded uses of alloca, and on bounded uses of alloca\n whose bound can be larger than @var{n} bytes.\n @option{-Wno-alloca-larger-than} disables\n @option{-Walloca-larger-than} warning and is equivalent to\n @option{-Walloca-larger-than=@var{SIZE_MAX}} or larger.\n \n-@item -Wno-builtin-declaration-mismatch\n @opindex Wno-builtin-declaration-mismatch\n @opindex Wbuiltin-declaration-mismatch\n+@item -Wno-builtin-declaration-mismatch\n Warn if a built-in function is declared with an incompatible signature.\n \n-@item -Wcast-result\n @opindex Wcast-result\n @opindex Wno-cast-result\n+@item -Wcast-result\n Warn about casts that will produce a null or zero result.  Currently\n this is only done for casting between an imaginary and non-imaginary\n data type, or casting between a D and C++ class.\n \n-@item -Wno-deprecated\n @opindex Wdeprecated\n @opindex Wno-deprecated\n+@item -Wno-deprecated\n Do not warn about usage of deprecated features and symbols with\n @code{deprecated} attributes.\n \n-@item -Werror\n @opindex Werror\n @opindex Wno-error\n+@item -Werror\n Turns all warnings into errors.\n \n-@item -Wspeculative\n @opindex Wspeculative\n @opindex Wno-speculative\n+@item -Wspeculative\n List all error messages from speculative compiles, such as\n @code{__traits(compiles, ...)}.  This option does not report\n messages as warnings, and these messages therefore never become\n errors when the @option{-Werror} option is also used.\n \n-@item -Wunknown-pragmas\n @opindex Wunknown-pragmas\n @opindex Wno-unknown-pragmas\n+@item -Wunknown-pragmas\n Warn when a @code{pragma()} is encountered that is not understood by\n @command{gdc}.  This differs from @option{-fignore-unknown-pragmas}\n where a pragma that is part of the D language, but not implemented by\n the compiler, won't get reported.\n \n-@item -Wno-varargs\n @opindex Wvarargs\n @opindex Wno-varargs\n+@item -Wno-varargs\n Do not warn upon questionable usage of the macros used to handle variable\n arguments like @code{va_start}.\n \n-@item -fignore-unknown-pragmas\n @opindex fignore-unknown-pragmas\n @opindex fno-ignore-unknown-pragmas\n+@item -fignore-unknown-pragmas\n Turns off errors for unsupported pragmas.\n \n-@item -fmax-errors=@var{n}\n @opindex fmax-errors\n+@item -fmax-errors=@var{n}\n Limits the maximum number of error messages to @var{n}, at which point\n @command{gdc} bails out rather than attempting to continue processing the\n source code.  If @var{n} is 0 (the default), there is no limit on the\n number of error messages produced.\n \n-@item -fsyntax-only\n @opindex fsyntax-only\n @opindex fno-syntax-only\n+@item -fsyntax-only\n Check the code for syntax errors, but do not actually compile it.  This\n can be used in conjunction with @option{-fdoc} or @option{-H} to generate\n files for each module present on the command-line, but no other output\n file.\n \n-@item -ftransition=@var{id}\n @opindex ftransition\n+@item -ftransition=@var{id}\n Report additional information about D language changes identified by\n @var{id}.  The following values are supported:\n \n@@ -776,35 +776,35 @@ a link step.\n \n @table @gcctabopt\n \n-@item -defaultlib=@var{libname}\n @opindex defaultlib=\n+@item -defaultlib=@var{libname}\n Specify the library to use instead of libphobos when linking.  Options\n specifying the linkage of libphobos, such as @option{-static-libphobos}\n or @option{-shared-libphobos}, are ignored.\n \n-@item -debuglib=@var{libname}\n @opindex debuglib=\n+@item -debuglib=@var{libname}\n Specify the debug library to use instead of libphobos when linking.\n This option has no effect unless the @option{-g} option was also given\n on the command line.  Options specifying the linkage of libphobos, such\n as @option{-static-libphobos} or @option{-shared-libphobos}, are ignored.\n \n-@item -nophoboslib\n @opindex nophoboslib\n+@item -nophoboslib\n Do not use the Phobos or D runtime library when linking.  Options specifying\n the linkage of libphobos, such as @option{-static-libphobos} or\n @option{-shared-libphobos}, are ignored.  The standard system libraries are\n used normally, unless @option{-nostdlib} or @option{-nodefaultlibs} is used.\n \n-@item -shared-libphobos\n @opindex shared-libphobos\n+@item -shared-libphobos\n On systems that provide @file{libgphobos} and @file{libgdruntime} as a\n shared and a static library, this option forces the use of the shared\n version.  If no shared version was built when the compiler was configured,\n this option has no effect.\n \n-@item -static-libphobos\n @opindex static-libphobos\n+@item -static-libphobos\n On systems that provide @file{libgphobos} and @file{libgdruntime} as a\n shared and a static library, this option forces the use of the static\n version.  If no static version was built when the compiler was configured,\n@@ -823,13 +823,13 @@ interest to developers or language tooling.\n \n @table @gcctabopt\n \n-@item -fdump-d-original\n @opindex fdump-d-original\n+@item -fdump-d-original\n Output the internal front-end AST after the @code{semantic3} stage.\n This option is only useful for debugging the GNU D compiler itself.\n \n-@item -v\n @opindex v\n+@item -v\n Dump information about the compiler language processing stages as the source\n program is being compiled.  This includes listing all modules that are\n processed through the @code{parse}, @code{semantic}, @code{semantic2}, and"}, {"sha": "76e7d694d4d190a5bf4d27f69e6158ae00648185", "filename": "gcc/doc/cppdiropts.texi", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Fcppdiropts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Fcppdiropts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppdiropts.texi?ref=ddf6fe375d91100ae067d2015baea744396aba4e", "patch": "@@ -9,14 +9,14 @@\n @c If this file is included with the flag ``cppmanual'' set, it is\n @c formatted for inclusion in the CPP manual; otherwise the main GCC manual.\n \n-@item -I @var{dir}\n-@itemx -iquote @var{dir}\n-@itemx -isystem @var{dir}\n-@itemx -idirafter @var{dir}\n @opindex I\n @opindex iquote\n @opindex isystem\n @opindex idirafter\n+@item -I @var{dir}\n+@itemx -iquote @var{dir}\n+@itemx -isystem @var{dir}\n+@itemx -idirafter @var{dir}\n Add the directory @var{dir} to the list of directories to be searched\n for header files during preprocessing.\n @ifset cppmanual\n@@ -90,8 +90,8 @@ use the @option{-nostdinc} and/or @option{-isystem} options.\n @xref{System Headers}.\n @end ifset\n \n-@item -I-\n @opindex I-\n+@item -I-\n Split the include path.\n This option has been deprecated.  Please use @option{-iquote} instead for\n @option{-I} directories before the @option{-I-} and remove the @option{-I-}\n@@ -111,43 +111,43 @@ file directory as the first search directory for @code{@w{#include\n @xref{Search Path}.\n @end ifset\n \n-@item -iprefix @var{prefix}\n @opindex iprefix\n+@item -iprefix @var{prefix}\n Specify @var{prefix} as the prefix for subsequent @option{-iwithprefix}\n options.  If the prefix represents a directory, you should include the\n final @samp{/}.\n \n-@item -iwithprefix @var{dir}\n-@itemx -iwithprefixbefore @var{dir}\n @opindex iwithprefix\n @opindex iwithprefixbefore\n+@item -iwithprefix @var{dir}\n+@itemx -iwithprefixbefore @var{dir}\n Append @var{dir} to the prefix specified previously with\n @option{-iprefix}, and add the resulting directory to the include search\n path.  @option{-iwithprefixbefore} puts it in the same place @option{-I}\n would; @option{-iwithprefix} puts it where @option{-idirafter} would.\n \n-@item -isysroot @var{dir}\n @opindex isysroot\n+@item -isysroot @var{dir}\n This option is like the @option{--sysroot} option, but applies only to\n header files (except for Darwin targets, where it applies to both header\n files and libraries).  See the @option{--sysroot} option for more\n information.\n \n-@item -imultilib @var{dir}\n @opindex imultilib\n+@item -imultilib @var{dir}\n Use @var{dir} as a subdirectory of the directory containing\n target-specific C++ headers.\n \n-@item -nostdinc\n @opindex nostdinc\n+@item -nostdinc\n Do not search the standard system directories for header files.\n Only the directories explicitly specified with @option{-I},\n @option{-iquote}, @option{-isystem}, and/or @option{-idirafter}\n options (and the directory of the current file, if appropriate) \n are searched.\n \n-@item -nostdinc++\n @opindex nostdinc++\n+@item -nostdinc++\n Do not search for header files in the C++-specific standard directories,\n but do still search the other standard directories.  (This option is\n used when building the C++ library.)"}, {"sha": "647d25239ed7ecbe5c741917188883f64022ce90", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=ddf6fe375d91100ae067d2015baea744396aba4e", "patch": "@@ -9,8 +9,8 @@\n @c If this file is included with the flag ``cppmanual'' set, it is\n @c formatted for inclusion in the CPP manual; otherwise the main GCC manual.\n \n-@item -D @var{name}\n @opindex D\n+@item -D @var{name}\n Predefine @var{name} as a macro, with definition @code{1}.\n \n @item -D @var{name}=@var{definition}\n@@ -34,13 +34,13 @@ are given on the command line.  All @option{-imacros @var{file}} and\n @option{-include @var{file}} options are processed after all\n @option{-D} and @option{-U} options.\n \n-@item -U @var{name}\n @opindex U\n+@item -U @var{name}\n Cancel any previous definition of @var{name}, either built in or\n provided with a @option{-D} option.\n \n-@item -include @var{file}\n @opindex include\n+@item -include @var{file}\n Process @var{file} as if @code{#include \"file\"} appeared as the first\n line of the primary source file.  However, the first directory searched\n for @var{file} is the preprocessor's working directory @emph{instead of}\n@@ -51,8 +51,8 @@ chain as normal.\n If multiple @option{-include} options are given, the files are included\n in the order they appear on the command line.\n \n-@item -imacros @var{file}\n @opindex imacros\n+@item -imacros @var{file}\n Exactly like @option{-include}, except that any output produced by\n scanning @var{file} is thrown away.  Macros it defines remain defined.\n This allows you to acquire all the macros from a header without also\n@@ -61,23 +61,23 @@ processing its declarations.\n All files specified by @option{-imacros} are processed before all files\n specified by @option{-include}.\n \n-@item -undef\n @opindex undef\n+@item -undef\n Do not predefine any system-specific or GCC-specific macros.  The\n standard predefined macros remain defined.\n @ifset cppmanual\n @xref{Standard Predefined Macros}.\n @end ifset\n \n-@item -pthread\n @opindex pthread\n+@item -pthread\n Define additional macros required for using the POSIX threads library.\n You should use this option consistently for both compilation and linking.\n This option is supported on GNU/Linux targets, most other Unix derivatives,\n and also on x86 Cygwin and MinGW targets.\n \n-@item -M\n @opindex M\n+@item -M\n @cindex @command{make}\n @cindex dependencies, @command{make}\n Instead of outputting the result of preprocessing, output a rule\n@@ -104,8 +104,8 @@ is still sent to the regular output stream as normal.\n Passing @option{-M} to the driver implies @option{-E}, and suppresses\n warnings with an implicit @option{-w}.\n \n-@item -MM\n @opindex MM\n+@item -MM\n Like @option{-M} but do not mention header files that are found in\n system header directories, nor header files that are included,\n directly or indirectly, from such a header.\n@@ -115,8 +115,8 @@ This implies that the choice of angle brackets or double quotes in an\n header appears in @option{-MM} dependency output.\n \n @anchor{dashMF}\n-@item -MF @var{file}\n @opindex MF\n+@item -MF @var{file}\n When used with @option{-M} or @option{-MM}, specifies a\n file to write the dependencies to.  If no @option{-MF} switch is given\n the preprocessor sends the rules to the same place it would send\n@@ -127,8 +127,8 @@ When used with the driver options @option{-MD} or @option{-MMD},\n \n If @var{file} is @file{-}, then the dependencies are written to @file{stdout}.\n \n-@item -MG\n @opindex MG\n+@item -MG\n In conjunction with an option such as @option{-M} requesting\n dependency generation, @option{-MG} assumes missing header files are\n generated files and adds them to the dependency list without raising\n@@ -139,12 +139,12 @@ this useless.\n \n This feature is used in automatic updating of makefiles.\n \n-@item -Mno-modules\n @opindex Mno-modules\n+@item -Mno-modules\n Disable dependency generation for compiled module interfaces.\n \n-@item -MP\n @opindex MP\n+@item -MP\n This option instructs CPP to add a phony target for each dependency\n other than the main file, causing each to depend on nothing.  These\n dummy rules work around errors @command{make} gives if you remove header\n@@ -158,8 +158,8 @@ test.o: test.c test.h\n test.h:\n @end smallexample\n \n-@item -MT @var{target}\n @opindex MT\n+@item -MT @var{target}\n \n Change the target of the rule emitted by dependency generation.  By\n default CPP takes the name of the main input file, deletes any\n@@ -176,8 +176,8 @@ For example, @option{@w{-MT '$(objpfx)foo.o'}} might give\n $(objpfx)foo.o: foo.c\n @end smallexample\n \n-@item -MQ @var{target}\n @opindex MQ\n+@item -MQ @var{target}\n \n Same as @option{-MT}, but it quotes any characters which are special to\n Make.  @option{@w{-MQ '$(objpfx)foo.o'}} gives\n@@ -189,8 +189,8 @@ $$(objpfx)foo.o: foo.c\n The default target is automatically quoted, as if it were given with\n @option{-MQ}.\n \n-@item -MD\n @opindex MD\n+@item -MD\n @option{-MD} is equivalent to @option{-M -MF @var{file}}, except that\n @option{-E} is not implied.  The driver determines @var{file} based on\n whether an @option{-o} option is given.  If it is, the driver uses its\n@@ -206,13 +206,13 @@ is understood to specify a target object file.\n Since @option{-E} is not implied, @option{-MD} can be used to generate\n a dependency output file as a side effect of the compilation process.\n \n-@item -MMD\n @opindex MMD\n+@item -MMD\n Like @option{-MD} except mention only user header files, not system\n header files.\n \n-@item -fpreprocessed\n @opindex fpreprocessed\n+@item -fpreprocessed\n Indicate to the preprocessor that the input file has already been\n preprocessed.  This suppresses things like macro expansion, trigraph\n conversion, escaped newline splicing, and processing of most directives.\n@@ -226,8 +226,8 @@ extensions @samp{.i}, @samp{.ii} or @samp{.mi}.  These are the\n extensions that GCC uses for preprocessed files created by\n @option{-save-temps}.\n \n-@item -fdirectives-only\n @opindex fdirectives-only\n+@item -fdirectives-only\n When preprocessing, handle directives, but do not expand macros.\n \n The option's behavior depends on the @option{-E} and @option{-fpreprocessed}\n@@ -248,37 +248,37 @@ With both @option{-E} and @option{-fpreprocessed}, the rules for\n @option{-fpreprocessed} take precedence.  This enables full preprocessing of\n files previously preprocessed with @code{-E -fdirectives-only}.\n \n-@item -fdollars-in-identifiers\n @opindex fdollars-in-identifiers\n+@item -fdollars-in-identifiers\n @anchor{fdollars-in-identifiers}\n Accept @samp{$} in identifiers.\n @ifset cppmanual\n @xref{Identifier characters}.\n @end ifset\n \n-@item -fextended-identifiers\n @opindex fextended-identifiers\n+@item -fextended-identifiers\n Accept universal character names and extended characters in\n identifiers.  This option is enabled by default for C99 (and later C\n standard versions) and C++.\n \n-@item -fno-canonical-system-headers\n @opindex fno-canonical-system-headers\n+@item -fno-canonical-system-headers\n When preprocessing, do not shorten system header paths with canonicalization.\n \n-@item -fmax-include-depth=@var{depth}\n @opindex fmax-include-depth\n+@item -fmax-include-depth=@var{depth}\n Set the maximum depth of the nested #include. The default is 200. \n \n-@item -ftabstop=@var{width}\n @opindex ftabstop\n+@item -ftabstop=@var{width}\n Set the distance between tab stops.  This helps the preprocessor report\n correct column numbers in warnings or errors, even if tabs appear on the\n line.  If the value is less than 1 or greater than 100, the option is\n ignored.  The default is 8.\n \n-@item -ftrack-macro-expansion@r{[}=@var{level}@r{]}\n @opindex ftrack-macro-expansion\n+@item -ftrack-macro-expansion@r{[}=@var{level}@r{]}\n Track locations of tokens across macro expansions. This allows the\n compiler to emit diagnostic about the current macro expansion stack\n when a compilation error occurs in a macro expansion. Using this\n@@ -296,8 +296,8 @@ When this option is given no argument, the default parameter value is\n \n Note that @code{-ftrack-macro-expansion=2} is activated by default.\n \n-@item -fmacro-prefix-map=@var{old}=@var{new}\n @opindex fmacro-prefix-map\n+@item -fmacro-prefix-map=@var{old}=@var{new}\n When preprocessing files residing in directory @file{@var{old}},\n expand the @code{__FILE__} and @code{__BASE_FILE__} macros as if the\n files resided in directory @file{@var{new}} instead.  This can be used\n@@ -307,15 +307,15 @@ location independent.  This option also affects\n @code{__builtin_FILE()} during compilation.  See also\n @option{-ffile-prefix-map}.\n \n-@item -fexec-charset=@var{charset}\n @opindex fexec-charset\n+@item -fexec-charset=@var{charset}\n @cindex character set, execution\n Set the execution character set, used for string and character\n constants.  The default is UTF-8.  @var{charset} can be any encoding\n supported by the system's @code{iconv} library routine.\n \n-@item -fwide-exec-charset=@var{charset}\n @opindex fwide-exec-charset\n+@item -fwide-exec-charset=@var{charset}\n @cindex character set, wide execution\n Set the wide execution character set, used for wide string and\n character constants.  The default is one of UTF-32BE, UTF-32LE, UTF-16BE,\n@@ -325,8 +325,8 @@ with @option{-fexec-charset}, @var{charset} can be any encoding supported\n by the system's @code{iconv} library routine; however, you will have\n problems with encodings that do not fit exactly in @code{wchar_t}.\n \n-@item -finput-charset=@var{charset}\n @opindex finput-charset\n+@item -finput-charset=@var{charset}\n @cindex character set, input\n Set the input character set, used for translation from the character\n set of the input file to the source character set used by GCC@.  If the\n@@ -337,17 +337,17 @@ precedence if there's a conflict.  @var{charset} can be any encoding\n supported by the system's @code{iconv} library routine.\n \n @ifclear cppmanual\n-@item -fpch-deps\n @opindex fpch-deps\n+@item -fpch-deps\n When using precompiled headers (@pxref{Precompiled Headers}), this flag\n causes the dependency-output flags to also list the files from the\n precompiled header's dependencies.  If not specified, only the\n precompiled header are listed and not the files that were used to\n create it, because those files are not consulted when a precompiled\n header is used.\n \n-@item -fpch-preprocess\n @opindex fpch-preprocess\n+@item -fpch-preprocess\n This option allows use of a precompiled header (@pxref{Precompiled\n Headers}) together with @option{-E}.  It inserts a special @code{#pragma},\n @code{#pragma GCC pch_preprocess \"@var{filename}\"} in the output to mark\n@@ -365,9 +365,9 @@ location.  The filename may be absolute or it may be relative to GCC's\n current directory.\n @end ifclear\n \n-@item -fworking-directory\n @opindex fworking-directory\n @opindex fno-working-directory\n+@item -fworking-directory\n Enable generation of linemarkers in the preprocessor output that\n let the compiler know the current working directory at the time of\n preprocessing.  When this option is enabled, the preprocessor\n@@ -381,8 +381,8 @@ form @option{-fno-working-directory}.  If the @option{-P} flag is\n present in the command line, this option has no effect, since no\n @code{#line} directives are emitted whatsoever.\n \n-@item -A @var{predicate}=@var{answer}\n @opindex A\n+@item -A @var{predicate}=@var{answer}\n Make an assertion with the predicate @var{predicate} and answer\n @var{answer}.  This form is preferred to the older form @option{-A\n @var{predicate}(@var{answer})}, which is still supported, because\n@@ -395,8 +395,8 @@ it does not use shell special characters.\n Cancel an assertion with the predicate @var{predicate} and answer\n @var{answer}.\n \n-@item -C\n @opindex C\n+@item -C\n Do not discard comments.  All comments are passed through to the output\n file, except for comments in processed directives, which are deleted\n along with the directive.\n@@ -407,8 +407,8 @@ For example, comments appearing at the start of what would be a\n directive line have the effect of turning that line into an ordinary\n source line, since the first token on the line is no longer a @samp{#}.\n \n-@item -CC\n @opindex CC\n+@item -CC\n Do not discard comments, including during macro expansion.  This is\n like @option{-C}, except that comments contained within macros are\n also passed through to the output file where the macro is expanded.\n@@ -421,8 +421,8 @@ the source line.\n \n The @option{-CC} option is generally used to support lint comments.\n \n-@item -P\n @opindex P\n+@item -P\n Inhibit generation of linemarkers in the output from the preprocessor.\n This might be useful when running the preprocessor on something that is\n not C code, and will be sent to a program which might be confused by the\n@@ -433,10 +433,10 @@ linemarkers.\n \n @cindex traditional C language\n @cindex C language, traditional\n-@item -traditional\n-@itemx -traditional-cpp\n @opindex traditional-cpp\n @opindex traditional\n+@item -traditional\n+@itemx -traditional-cpp\n \n Try to imitate the behavior of pre-standard C preprocessors, as\n opposed to ISO C preprocessors.\n@@ -451,8 +451,8 @@ Note that GCC does not otherwise attempt to emulate a pre-standard\n C compiler, and these options are only supported with the @option{-E} \n switch, or when invoking CPP explicitly.\n \n-@item -trigraphs\n @opindex trigraphs\n+@item -trigraphs\n Support ISO C trigraphs.\n These are three-character sequences, all starting with @samp{??}, that\n are defined by ISO C to stand for single characters.  For example,\n@@ -475,21 +475,21 @@ By default, GCC ignores trigraphs, but in\n standard-conforming modes it converts them.  See the @option{-std} and\n @option{-ansi} options.\n \n-@item -remap\n @opindex remap\n+@item -remap\n Enable special code to work around file systems which only permit very\n short file names, such as MS-DOS@.\n \n-@item -H\n @opindex H\n+@item -H\n Print the name of each header file used, in addition to other normal\n activities.  Each name is indented to show how deep in the\n @samp{#include} stack it is.  Precompiled header files are also\n printed, even if they are found to be invalid; an invalid precompiled\n header file is printed with @samp{...x} and a valid one with @samp{...!} .\n \n-@item -d@var{letters}\n @opindex d\n+@item -d@var{letters}\n Says to make debugging dumps during compilation as specified by\n @var{letters}.  The flags documented here are those relevant to the\n preprocessor.  Other @var{letters} are interpreted\n@@ -501,8 +501,8 @@ conflicts, the result is undefined.\n @end ifclear\n \n @table @gcctabopt\n-@item -dM\n @opindex dM\n+@item -dM\n Instead of the normal output, generate a list of @samp{#define}\n directives for all the macros defined during the execution of the\n preprocessor, including predefined macros.  This gives you a way of\n@@ -522,33 +522,33 @@ interpreted as a synonym for @option{-fdump-rtl-mach}.\n @xref{Developer Options, , ,gcc}.\n @end ifclear\n \n-@item -dD\n @opindex dD\n+@item -dD\n Like @option{-dM} except in two respects: it does @emph{not} include the\n predefined macros, and it outputs @emph{both} the @samp{#define}\n directives and the result of preprocessing.  Both kinds of output go to\n the standard output file.\n \n-@item -dN\n @opindex dN\n+@item -dN\n Like @option{-dD}, but emit only the macro names, not their expansions.\n \n-@item -dI\n @opindex dI\n+@item -dI\n Output @samp{#include} directives in addition to the result of\n preprocessing.\n \n-@item -dU\n @opindex dU\n+@item -dU\n Like @option{-dD} except that only macros that are expanded, or whose\n definedness is tested in preprocessor directives, are output; the\n output is delayed until the use or test of the macro; and\n @samp{#undef} directives are also output for macros tested but\n undefined at the time.\n @end table\n \n-@item -fdebug-cpp\n @opindex fdebug-cpp\n+@item -fdebug-cpp\n This option is only useful for debugging GCC.  When used from CPP or with\n @option{-E}, it dumps debugging information about location maps.  Every\n token in the output is preceded by the dump of the map its location"}, {"sha": "ab17ecba60e52b2a03be09963f57868ad3c62a0f", "filename": "gcc/doc/cppwarnopts.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Fcppwarnopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Fcppwarnopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppwarnopts.texi?ref=ddf6fe375d91100ae067d2015baea744396aba4e", "patch": "@@ -9,16 +9,16 @@\n @c If this file is included with the flag ``cppmanual'' set, it is\n @c formatted for inclusion in the CPP manual; otherwise the main GCC manual.\n \n-@item -Wcomment\n-@itemx -Wcomments\n @opindex Wcomment\n @opindex Wcomments\n+@item -Wcomment\n+@itemx -Wcomments\n Warn whenever a comment-start sequence @samp{/*} appears in a @samp{/*}\n comment, or whenever a backslash-newline appears in a @samp{//} comment.\n This warning is enabled by @option{-Wall}.\n \n-@item -Wtrigraphs\n @opindex Wtrigraphs\n+@item -Wtrigraphs\n @anchor{Wtrigraphs}\n Warn if any trigraphs are encountered that might change the meaning of\n the program.  Trigraphs within comments are not warned about,\n@@ -29,21 +29,21 @@ given, this option is still enabled unless trigraphs are enabled.  To\n get trigraph conversion without warnings, but get the other\n @option{-Wall} warnings, use @samp{-trigraphs -Wall -Wno-trigraphs}.\n \n-@item -Wundef\n @opindex Wundef\n @opindex Wno-undef\n+@item -Wundef\n Warn if an undefined identifier is evaluated in an @code{#if} directive.\n Such identifiers are replaced with zero.\n \n-@item -Wexpansion-to-defined\n @opindex Wexpansion-to-defined\n+@item -Wexpansion-to-defined\n Warn whenever @samp{defined} is encountered in the expansion of a macro\n (including the case where the macro is expanded by an @samp{#if} directive).\n Such usage is not portable.\n This warning is also enabled by @option{-Wpedantic} and @option{-Wextra}.\n \n-@item -Wunused-macros\n @opindex Wunused-macros\n+@item -Wunused-macros\n Warn about macros defined in the main file that are unused.  A macro\n is @dfn{used} if it is expanded or tested for existence at least once.\n The preprocessor also warns if the macro has not been used at the\n@@ -63,9 +63,9 @@ Alternatively, you could provide a dummy use with something like:\n #endif\n @end smallexample\n \n-@item -Wno-endif-labels\n @opindex Wno-endif-labels\n @opindex Wendif-labels\n+@item -Wno-endif-labels\n Do not warn whenever an @code{#else} or an @code{#endif} are followed by text.\n This sometimes happens in older programs with code of the form\n "}, {"sha": "04ca9d9b02b65cea75bba0d8393dcced01ca8499", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2804, "deletions": 2804, "changes": 5608, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ddf6fe375d91100ae067d2015baea744396aba4e"}, {"sha": "2571797348194946db65ddb775d1e67938249c35", "filename": "gcc/doc/lto.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Flto.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Fdoc%2Flto.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Flto.texi?ref=ddf6fe375d91100ae067d2015baea744396aba4e", "patch": "@@ -557,8 +557,8 @@ The following flags are passed into @command{lto1} and are not\n meant to be used directly from the command line.\n \n @itemize\n-@item -fwpa\n @opindex fwpa\n+@item -fwpa\n This option runs the serial part of the link-time optimizer\n performing the inter-procedural propagation (WPA mode).  The\n compiler reads in summary information from all inputs and\n@@ -568,21 +568,21 @@ optimizer where individual object files are optimized using both\n summary information from the WPA mode and the actual function\n bodies.  It then drives the LTRANS phase.\n \n-@item -fltrans\n @opindex fltrans\n+@item -fltrans\n This option runs the link-time optimizer in the\n local-transformation (LTRANS) mode, which reads in output from a\n previous run of the LTO in WPA mode.  In the LTRANS mode, LTO\n optimizes an object and produces the final assembly.\n \n-@item -fltrans-output-list=@var{file}\n @opindex fltrans-output-list\n+@item -fltrans-output-list=@var{file}\n This option specifies a file to which the names of LTRANS output\n files are written.  This option is only meaningful in conjunction\n with @option{-fwpa}.\n \n-@item -fresolution=@var{file}\n @opindex fresolution\n+@item -fresolution=@var{file}\n This option specifies the linker resolution file.  This option is\n only meaningful in conjunction with @option{-fwpa} and as option\n to pass through to the LTO linker plugin."}, {"sha": "86d3f33cb405b7d07d0fe3f265225b45b2f3364c", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 157, "deletions": 157, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf6fe375d91100ae067d2015baea744396aba4e/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=ddf6fe375d91100ae067d2015baea744396aba4e", "patch": "@@ -212,10 +212,10 @@ The following options control the details of the Fortran dialect\n accepted by the compiler:\n \n @table @gcctabopt\n-@item -ffree-form\n-@itemx -ffixed-form\n @opindex @code{ffree-form}\n @opindex @code{ffixed-form}\n+@item -ffree-form\n+@itemx -ffixed-form\n @cindex options, Fortran dialect\n @cindex file format, free\n @cindex file format, fixed\n@@ -224,17 +224,17 @@ was introduced in Fortran 90.  Fixed form was traditionally used in\n older Fortran programs.  When neither option is specified, the source\n form is determined by the file extension.\n \n-@item -fall-intrinsics\n @opindex @code{fall-intrinsics}\n+@item -fall-intrinsics\n This option causes all intrinsic procedures (including the GNU-specific\n extensions) to be accepted.  This can be useful with @option{-std=} to\n force standard-compliance but get access to the full range of intrinsics\n available with @command{gfortran}.  As a consequence, @option{-Wintrinsics-std}\n will be ignored and no user-defined procedure with the same name as any\n intrinsic will be called except when it is explicitly declared @code{EXTERNAL}.\n \n-@item -fallow-argument-mismatch\n @opindex @code{fallow-argument-mismatch}\n+@item -fallow-argument-mismatch\n Some code contains calls to external procedures with mismatches\n between the calls and the procedure definition, or with mismatches\n between different calls. Such code is non-conforming, and will usually\n@@ -248,25 +248,25 @@ Using this option is @emph{strongly} discouraged.  It is possible to\n provide standard-conforming code which allows different types of\n arguments by using an explicit interface and @code{TYPE(*)}.\n \n-@item -fallow-invalid-boz\n @opindex @code{allow-invalid-boz}\n+@item -fallow-invalid-boz\n A BOZ literal constant can occur in a limited number of contexts in\n standard conforming Fortran.  This option degrades an error condition\n to a warning, and allows a BOZ literal constant to appear where the\n Fortran standard would otherwise prohibit its use.\n \n-@item -fd-lines-as-code\n-@itemx -fd-lines-as-comments\n @opindex @code{fd-lines-as-code}\n @opindex @code{fd-lines-as-comments}\n+@item -fd-lines-as-code\n+@itemx -fd-lines-as-comments\n Enable special treatment for lines beginning with @code{d} or @code{D}\n in fixed form sources.  If the @option{-fd-lines-as-code} option is\n given they are treated as if the first column contained a blank.  If the\n @option{-fd-lines-as-comments} option is given, they are treated as\n comment lines.\n \n-@item -fdec\n @opindex @code{fdec}\n+@item -fdec\n DEC compatibility mode. Enables extensions and other features that mimic\n the default behavior of older compilers (such as DEC).\n These features are non-standard and should be avoided at all costs.\n@@ -282,51 +282,51 @@ Other flags enabled by this switch are:\n If @option{-fd-lines-as-code}/@option{-fd-lines-as-comments} are unset, then\n @option{-fdec} also sets @option{-fd-lines-as-comments}.\n \n-@item -fdec-char-conversions\n @opindex @code{fdec-char-conversions}\n+@item -fdec-char-conversions\n Enable the use of character literals in assignments and @code{DATA} statements\n for non-character variables.\n \n-@item -fdec-structure\n @opindex @code{fdec-structure}\n+@item -fdec-structure\n Enable DEC @code{STRUCTURE} and @code{RECORD} as well as @code{UNION},\n @code{MAP}, and dot ('.') as a member separator (in addition to '%'). This is\n provided for compatibility only; Fortran 90 derived types should be used\n instead where possible.\n \n-@item -fdec-intrinsic-ints\n @opindex @code{fdec-intrinsic-ints}\n+@item -fdec-intrinsic-ints\n Enable B/I/J/K kind variants of existing integer functions (e.g. BIAND, IIAND,\n JIAND, etc...). For a complete list of intrinsics see the full documentation.\n \n-@item -fdec-math\n @opindex @code{fdec-math}\n+@item -fdec-math\n Enable legacy math intrinsics such as COTAN and degree-valued trigonometric\n functions (e.g. TAND, ATAND, etc...) for compatability with older code.\n \n-@item -fdec-static\n @opindex @code{fdec-static}\n+@item -fdec-static\n Enable DEC-style STATIC and AUTOMATIC attributes to explicitly specify\n the storage of variables and other objects.\n \n-@item -fdec-include\n @opindex @code{fdec-include}\n+@item -fdec-include\n Enable parsing of INCLUDE as a statement in addition to parsing it as\n INCLUDE line.  When parsed as INCLUDE statement, INCLUDE does not have to\n be on a single line and can use line continuations.\n \n-@item -fdec-format-defaults\n @opindex @code{fdec-format-defaults}\n+@item -fdec-format-defaults\n Enable format specifiers F, G and I to be used without width specifiers,\n default widths will be used instead.\n \n-@item -fdec-blank-format-item\n @opindex @code{fdec-blank-format-item}\n+@item -fdec-blank-format-item\n Enable a blank format item at the end of a format specification i.e. nothing\n following the final comma.\n \n-@item -fdollar-ok\n @opindex @code{fdollar-ok}\n+@item -fdollar-ok\n @cindex @code{$}\n @cindex symbol names\n @cindex character set\n@@ -335,8 +335,8 @@ that start with @samp{$} are rejected since it is unclear which rules to\n apply to implicit typing as different vendors implement different rules.\n Using @samp{$} in @code{IMPLICIT} statements is also rejected.\n \n-@item -fbackslash\n @opindex @code{backslash}\n+@item -fbackslash\n @cindex backslash\n @cindex escape characters\n Change the interpretation of backslashes in string literals from a single\n@@ -351,16 +351,16 @@ translated into the Unicode characters corresponding to the specified code\n points. All other combinations of a character preceded by \\ are\n unexpanded.\n \n-@item -fmodule-private\n @opindex @code{fmodule-private}\n+@item -fmodule-private\n @cindex module entities\n @cindex private\n Set the default accessibility of module entities to @code{PRIVATE}.\n Use-associated entities will not be accessible unless they are explicitly\n declared as @code{PUBLIC}.\n \n-@item -ffixed-line-length-@var{n}\n @opindex @code{ffixed-line-length-}@var{n}\n+@item -ffixed-line-length-@var{n}\n @cindex file format, fixed\n Set column after which characters are ignored in typical fixed-form\n lines in the source file, and, unless @code{-fno-pad-source}, through which\n@@ -376,42 +376,42 @@ to them to fill out the line.\n @option{-ffixed-line-length-0} means the same thing as\n @option{-ffixed-line-length-none}.\n \n-@item -fno-pad-source\n @opindex @code{fpad-source}\n+@item -fno-pad-source\n By default fixed-form lines have spaces assumed (as if padded to that length)\n after the ends of short fixed-form lines.  This is not done either if\n @option{-ffixed-line-length-0}, @option{-ffixed-line-length-none} or\n if @option{-fno-pad-source} option is used.  With any of those options\n continued character constants never have implicit spaces appended\n to them to fill out the line.\n \n-@item -ffree-line-length-@var{n}\n @opindex @code{ffree-line-length-}@var{n}\n+@item -ffree-line-length-@var{n}\n @cindex file format, free\n Set column after which characters are ignored in typical free-form\n lines in the source file. The default value is 132.\n @var{n} may be @samp{none}, meaning that the entire line is meaningful.\n @option{-ffree-line-length-0} means the same thing as\n @option{-ffree-line-length-none}.\n \n-@item -fmax-identifier-length=@var{n}\n @opindex @code{fmax-identifier-length=}@var{n}\n+@item -fmax-identifier-length=@var{n}\n Specify the maximum allowed identifier length. Typical values are\n 31 (Fortran 95) and 63 (Fortran 2003 and later).\n \n-@item -fimplicit-none\n @opindex @code{fimplicit-none}\n+@item -fimplicit-none\n Specify that no implicit typing is allowed, unless overridden by explicit\n @code{IMPLICIT} statements.  This is the equivalent of adding\n @code{implicit none} to the start of every procedure.\n \n-@item -fcray-pointer\n @opindex @code{fcray-pointer}\n+@item -fcray-pointer\n Enable the Cray pointer extension, which provides C-like pointer\n functionality.\n \n-@item -fopenacc\n @opindex @code{fopenacc}\n+@item -fopenacc\n @cindex OpenACC\n Enable the OpenACC extensions.  This includes OpenACC @code{!$acc}\n directives in free form and @code{c$acc}, @code{*$acc} and\n@@ -420,8 +420,8 @@ compilation sentinels in free form and @code{c$}, @code{*$} and\n @code{!$} sentinels in fixed form, and when linking arranges for the\n OpenACC runtime library to be linked in.\n \n-@item -fopenmp\n @opindex @code{fopenmp}\n+@item -fopenmp\n @cindex OpenMP\n Enable the OpenMP extensions.  This includes OpenMP @code{!$omp} directives\n in free form\n@@ -431,8 +431,8 @@ and @code{c$}, @code{*$} and @code{!$} sentinels in fixed form,\n and when linking arranges for the OpenMP runtime library to be linked\n in.  The option @option{-fopenmp} implies @option{-frecursive}.\n \n-@item -fno-range-check\n @opindex @code{frange-check}\n+@item -fno-range-check\n Disable range checking on results of simplification of constant\n expressions during compilation.  For example, GNU Fortran will give\n an error at compile time when simplifying @code{a = 1. / 0}.\n@@ -445,15 +445,15 @@ Similarly, @code{DATA i/Z'FFFFFFFF'/} will result in an integer overflow\n on most systems, but with @option{-fno-range-check} the value will\n ``wrap around'' and @code{i} will be initialized to @math{-1} instead.\n \n-@item -fdefault-integer-8\n @opindex @code{fdefault-integer-8}\n+@item -fdefault-integer-8\n Set the default integer and logical types to an 8 byte wide type.  This option\n also affects the kind of integer constants like @code{42}. Unlike\n @option{-finteger-4-integer-8}, it does not promote variables with explicit\n kind declaration.\n \n-@item -fdefault-real-8\n @opindex @code{fdefault-real-8}\n+@item -fdefault-real-8\n Set the default real type to an 8 byte wide type.  This option also affects\n the kind of non-double real constants like @code{1.0}.  This option promotes\n the default width of @code{DOUBLE PRECISION} and double real constants\n@@ -463,8 +463,8 @@ and double real constants are not promoted.  Unlike @option{-freal-4-real-8},\n @code{fdefault-real-8} does not promote variables with explicit kind\n declarations.\n \n-@item -fdefault-real-10\n @opindex @code{fdefault-real-10}\n+@item -fdefault-real-10\n Set the default real type to an 10 byte wide type.  This option also affects\n the kind of non-double real constants like @code{1.0}.  This option promotes\n the default width of @code{DOUBLE PRECISION} and double real constants\n@@ -474,8 +474,8 @@ and double real constants are not promoted.  Unlike @option{-freal-4-real-10},\n @code{fdefault-real-10} does not promote variables with explicit kind\n declarations.\n \n-@item -fdefault-real-16\n @opindex @code{fdefault-real-16}\n+@item -fdefault-real-16\n Set the default real type to an 16 byte wide type.  This option also affects\n the kind of non-double real constants like @code{1.0}.  This option promotes\n the default width of @code{DOUBLE PRECISION} and double real constants\n@@ -485,17 +485,17 @@ and double real constants are not promoted.  Unlike @option{-freal-4-real-16},\n @code{fdefault-real-16} does not promote variables with explicit kind\n declarations.\n \n-@item -fdefault-double-8\n @opindex @code{fdefault-double-8}\n+@item -fdefault-double-8\n Set the @code{DOUBLE PRECISION} type and double real constants\n like @code{1.d0} to an 8 byte wide type.  Do nothing if this\n is already the default.  This option prevents @option{-fdefault-real-8},\n @option{-fdefault-real-10}, and @option{-fdefault-real-16},\n from promoting @code{DOUBLE PRECISION} and double real constants like\n @code{1.d0} to 16 bytes.\n \n-@item -finteger-4-integer-8\n @opindex @code{finteger-4-integer-8}\n+@item -finteger-4-integer-8\n Promote all @code{INTEGER(KIND=4)} entities to an @code{INTEGER(KIND=8)}\n entities.  If @code{KIND=8} is unavailable, then an error will be issued.\n This option should be used with care and may not be suitable for your codes.\n@@ -505,18 +505,18 @@ BOZ literal constant conversion, and I/O.  Inspection of the intermediate\n representation of the translated Fortran code, produced by\n @option{-fdump-tree-original}, is suggested.\n \n-@item  -freal-4-real-8\n-@itemx -freal-4-real-10\n-@itemx -freal-4-real-16\n-@itemx -freal-8-real-4\n-@itemx -freal-8-real-10\n-@itemx -freal-8-real-16\n @opindex @code{freal-4-real-8}\n @opindex @code{freal-4-real-10}\n @opindex @code{freal-4-real-16}\n @opindex @code{freal-8-real-4}\n @opindex @code{freal-8-real-10}\n @opindex @code{freal-8-real-16}\n+@item  -freal-4-real-8\n+@itemx -freal-4-real-10\n+@itemx -freal-4-real-16\n+@itemx -freal-8-real-4\n+@itemx -freal-8-real-10\n+@itemx -freal-8-real-16\n @cindex options, real kind type promotion\n Promote all @code{REAL(KIND=M)} entities to @code{REAL(KIND=N)} entities.\n If @code{REAL(KIND=N)} is unavailable, then an error will be issued.\n@@ -539,8 +539,8 @@ when passing a value to the @code{kind=} dummy argument.  Inspection of the\n intermediate representation of the translated Fortran code, produced by\n @option{-fdump-fortran-original} or @option{-fdump-tree-original}, is suggested.\n \n-@item -std=@var{std}\n @opindex @code{std=}@var{std} option\n+@item -std=@var{std}\n Specify the standard to which the program is expected to conform,\n which may be one of @samp{f95}, @samp{f2003}, @samp{f2008},\n @samp{f2018}, @samp{gnu}, or @samp{legacy}.  The default value for\n@@ -559,8 +559,8 @@ standards. The deprecated option @samp{-std=f2008ts} acts as an alias for\n @samp{-std=f2018}. It is only present for backwards compatibility with\n earlier gfortran versions and should not be used any more.\n \n-@item -ftest-forall-temp\n @opindex @code{ftest-forall-temp}\n+@item -ftest-forall-temp\n Enhance test coverage by forcing most forall assignments to use temporary.\n \n @end table\n@@ -612,10 +612,10 @@ to preprocess such files (@uref{http://www.daniellnagle.com/coco.html}).\n The following options control preprocessing of Fortran code:\n \n @table @gcctabopt\n-@item -cpp\n-@itemx -nocpp\n @opindex @code{cpp}\n @opindex @code{fpp}\n+@item -cpp\n+@itemx -nocpp\n @cindex preprocessor, enable\n @cindex preprocessor, disable\n Enable preprocessing. The preprocessor is automatically invoked if\n@@ -632,8 +632,8 @@ preprocessed output as well, so it might be advisable to use the\n @option{-ffree-line-length-none} or @option{-ffixed-line-length-none}\n options.\n \n-@item -dM\n @opindex @code{dM}\n+@item -dM\n @cindex preprocessor, debugging\n @cindex debugging, preprocessor\n Instead of the normal output, generate a list of @code{'#define'}\n@@ -646,39 +646,39 @@ Assuming you have no file @file{foo.f90}, the command\n @end smallexample\n will show all the predefined macros.\n \n-@item -dD\n @opindex @code{dD}\n+@item -dD\n @cindex preprocessor, debugging\n @cindex debugging, preprocessor\n Like @option{-dM} except in two respects: it does not include the\n predefined macros, and it outputs both the @code{#define} directives\n and the result of preprocessing. Both kinds of output go to the\n standard output file.\n \n-@item -dN\n @opindex @code{dN}\n+@item -dN\n @cindex preprocessor, debugging\n @cindex debugging, preprocessor\n Like @option{-dD}, but emit only the macro names, not their expansions.\n \n-@item -dU\n @opindex @code{dU}\n+@item -dU\n @cindex preprocessor, debugging\n @cindex debugging, preprocessor\n Like @option{dD} except that only macros that are expanded, or whose\n definedness is tested in preprocessor directives, are output; the \n output is delayed until the use or test of the macro; and @code{'#undef'}\n directives are also output for macros tested but undefined at the time.\n \n-@item -dI\n @opindex @code{dI}\n+@item -dI\n @cindex preprocessor, debugging\n @cindex debugging, preprocessor\n Output @code{'#include'} directives in addition to the result\n of preprocessing.\n \n-@item -fworking-directory\n @opindex @code{fworking-directory}\n+@item -fworking-directory\n @cindex preprocessor, working directory\n Enable generation of linemarkers in the preprocessor output that will\n let the compiler know the current working directory at the time of\n@@ -693,45 +693,45 @@ but this can be inhibited with the negated form\n in the command line, this option has no effect, since no @code{#line}\n directives are emitted whatsoever.\n \n-@item -idirafter @var{dir}\n @opindex @code{idirafter @var{dir}}\n+@item -idirafter @var{dir}\n @cindex preprocessing, include path\n Search @var{dir} for include files, but do it after all directories\n specified with @option{-I} and the standard system directories have\n been exhausted. @var{dir} is treated as a system include directory.\n If dir begins with @code{=}, then the @code{=} will be replaced by\n the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n \n-@item -imultilib @var{dir}\n @opindex @code{imultilib @var{dir}}\n+@item -imultilib @var{dir}\n @cindex preprocessing, include path\n Use @var{dir} as a subdirectory of the directory containing target-specific\n C++ headers.\n \n-@item -iprefix @var{prefix}\n @opindex @code{iprefix @var{prefix}}\n+@item -iprefix @var{prefix}\n @cindex preprocessing, include path\n Specify @var{prefix} as the prefix for subsequent @option{-iwithprefix}\n options. If the @var{prefix} represents a directory, you should include\n the final @code{'/'}.\n \n-@item -isysroot @var{dir}\n @opindex @code{isysroot @var{dir}}\n+@item -isysroot @var{dir}\n @cindex preprocessing, include path\n This option is like the @option{--sysroot} option, but applies only to\n header files. See the @option{--sysroot} option for more information.\n \n-@item -iquote @var{dir}\n @opindex @code{iquote @var{dir}}\n+@item -iquote @var{dir}\n @cindex preprocessing, include path\n Search @var{dir} only for header files requested with @code{#include \"file\"};\n they are not searched for @code{#include <file>}, before all directories\n specified by @option{-I} and before the standard system directories. If\n @var{dir} begins with @code{=}, then the @code{=} will be replaced by the\n sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n \n-@item -isystem @var{dir}\n @opindex @code{isystem @var{dir}}\n+@item -isystem @var{dir}\n @cindex preprocessing, include path\n Search @var{dir} for header files, after all directories specified by\n @option{-I} but before the standard system directories. Mark it as a\n@@ -740,31 +740,31 @@ applied to the standard system directories. If @var{dir} begins with\n @code{=}, then the @code{=} will be replaced by the sysroot prefix;\n see @option{--sysroot} and @option{-isysroot}.\n \n-@item -nostdinc\n @opindex @code{nostdinc}\n+@item -nostdinc\n Do not search the standard system directories for header files. Only\n the directories you have specified with @option{-I} options (and the\n directory of the current file, if appropriate) are searched.\n \n-@item -undef\n @opindex @code{undef}\n+@item -undef\n Do not predefine any system-specific or GCC-specific macros.\n The standard predefined macros remain defined.\n \n-@item -A@var{predicate}=@var{answer}\n @opindex @code{A@var{predicate}=@var{answer}}\n+@item -A@var{predicate}=@var{answer}\n @cindex preprocessing, assertion\n Make an assertion with the predicate @var{predicate} and answer @var{answer}.\n This form is preferred to the older form -A predicate(answer), which is still\n supported, because it does not use shell special characters.\n \n-@item -A-@var{predicate}=@var{answer}\n @opindex @code{A-@var{predicate}=@var{answer}}\n+@item -A-@var{predicate}=@var{answer}\n @cindex preprocessing, assertion\n Cancel an assertion with the predicate @var{predicate} and answer @var{answer}.\n \n-@item -C\n @opindex @code{C}\n+@item -C\n @cindex preprocessing, keep comments\n Do not discard comments. All comments are passed through to the output\n file, except for comments in processed directives, which are deleted\n@@ -779,8 +779,8 @@ token on the line is no longer a @code{'#'}.\n Warning: this currently handles C-Style comments only. The preprocessor\n does not yet recognize Fortran-style comments.\n \n-@item -CC\n @opindex @code{CC}\n+@item -CC\n @cindex preprocessing, keep comments\n Do not discard comments, including during macro expansion. This is like\n @option{-C}, except that comments contained within macros are also passed\n@@ -795,13 +795,13 @@ is generally used to support lint comments.\n Warning: this currently handles C- and C++-Style comments only. The\n preprocessor does not yet recognize Fortran-style comments.\n \n-@item -D@var{name}\n @opindex @code{D@var{name}}\n+@item -D@var{name}\n @cindex preprocessing, define macros\n Predefine name as a macro, with definition @code{1}.\n \n-@item -D@var{name}=@var{definition}\n @opindex @code{D@var{name}=@var{definition}}\n+@item -D@var{name}=@var{definition}\n @cindex preprocessing, define macros\n The contents of @var{definition} are tokenized and processed as if they\n appeared during translation phase three in a @code{'#define'} directive.\n@@ -822,22 +822,22 @@ works.\n given on the command line. All -imacros file and -include file options\n are processed after all -D and -U options.\n \n-@item -H\n @opindex @code{H}\n+@item -H\n Print the name of each header file used, in addition to other normal\n activities. Each name is indented to show how deep in the @code{'#include'}\n stack it is.\n \n-@item -P\n @opindex @code{P}\n+@item -P\n @cindex preprocessing, no linemarkers\n Inhibit generation of linemarkers in the output from the preprocessor.\n This might be useful when running the preprocessor on something that\n is not C code, and will be sent to a program which might be confused\n by the linemarkers.\n \n-@item -U@var{name}\n @opindex @code{U@var{name}}\n+@item -U@var{name}\n @cindex preprocessing, undefine macros\n Cancel any previous definition of @var{name}, either built in or provided\n with a @option{-D} option.\n@@ -874,25 +874,25 @@ These options control the amount and kinds of errors and warnings produced\n by GNU Fortran:\n \n @table @gcctabopt\n-@item -fmax-errors=@var{n}\n @opindex @code{fmax-errors=}@var{n}\n+@item -fmax-errors=@var{n}\n @cindex errors, limiting\n Limits the maximum number of error messages to @var{n}, at which point\n GNU Fortran bails out rather than attempting to continue processing the\n source code.  If @var{n} is 0, there is no limit on the number of error\n messages produced.\n \n-@item -fsyntax-only\n @opindex @code{fsyntax-only}\n+@item -fsyntax-only\n @cindex syntax checking\n Check the code for syntax errors, but do not actually compile it.  This\n will generate module files for each module present in the code, but no\n other output file.\n \n-@item -Wpedantic\n-@itemx -pedantic\n @opindex @code{pedantic}\n @opindex @code{Wpedantic}\n+@item -Wpedantic\n+@itemx -pedantic\n Issue warnings for uses of extensions to Fortran.\n @option{-pedantic} also applies to C-language constructs where they\n occur in GNU Fortran source files, such as use of @samp{\\e} in a\n@@ -912,13 +912,13 @@ However, improvements to GNU Fortran in this area are welcome.\n This should be used in conjunction with @option{-std=f95},\n @option{-std=f2003}, @option{-std=f2008} or @option{-std=f2018}.\n \n-@item -pedantic-errors\n @opindex @code{pedantic-errors}\n+@item -pedantic-errors\n Like @option{-pedantic}, except that errors are produced rather than\n warnings.\n \n-@item -Wall\n @opindex @code{Wall}\n+@item -Wall\n @cindex all warnings\n @cindex warnings, all\n Enables commonly used warning options pertaining to usage that\n@@ -930,8 +930,8 @@ This currently includes @option{-Waliasing}, @option{-Wampersand},\n @option{-Winteger-division}, @option{-Wreal-q-constant}, @option{-Wunused}\n and @option{-Wundefined-do-loop}.\n \n-@item -Waliasing\n @opindex @code{Waliasing}\n+@item -Waliasing\n @cindex aliasing\n @cindex warnings, aliasing\n Warn about possible aliasing of dummy arguments. Specifically, it warns\n@@ -952,8 +952,8 @@ The following example will trigger the warning.\n   call bar(a,a)\n @end smallexample\n \n-@item -Wampersand\n @opindex @code{Wampersand}\n+@item -Wampersand\n @cindex warnings, ampersand\n @cindex @code{&}\n Warn about missing ampersand in continued character constants. The\n@@ -964,86 +964,86 @@ character constant, GNU Fortran assumes continuation at the first\n non-comment, non-whitespace character after the ampersand that\n initiated the continuation.\n \n-@item -Warray-temporaries\n @opindex @code{Warray-temporaries}\n+@item -Warray-temporaries\n @cindex warnings, array temporaries\n Warn about array temporaries generated by the compiler.  The information\n generated by this warning is sometimes useful in optimization, in order to\n avoid such temporaries.\n \n-@item -Wc-binding-type\n @opindex @code{Wc-binding-type}\n+@item -Wc-binding-type\n @cindex warning, C binding type\n Warn if the a variable might not be C interoperable.  In particular, warn if \n the variable has been declared using an intrinsic type with default kind\n instead of using a kind parameter defined for C interoperability in the\n intrinsic @code{ISO_C_Binding} module.  This option is implied by\n @option{-Wall}.\n \n-@item -Wcharacter-truncation\n @opindex @code{Wcharacter-truncation}\n+@item -Wcharacter-truncation\n @cindex warnings, character truncation\n Warn when a character assignment will truncate the assigned string.\n \n-@item -Wline-truncation\n @opindex @code{Wline-truncation}\n+@item -Wline-truncation\n @cindex warnings, line truncation\n Warn when a source code line will be truncated.  This option is\n implied by @option{-Wall}.  For free-form source code, the default is\n @option{-Werror=line-truncation} such that truncations are reported as\n error.\n \n-@item -Wconversion\n @opindex @code{Wconversion}\n+@item -Wconversion\n @cindex warnings, conversion\n @cindex conversion\n Warn about implicit conversions that are likely to change the value of \n the expression after conversion. Implied by @option{-Wall}.\n \n-@item -Wconversion-extra\n @opindex @code{Wconversion-extra}\n+@item -Wconversion-extra\n @cindex warnings, conversion\n @cindex conversion\n Warn about implicit conversions between different types and kinds. This\n option does @emph{not} imply @option{-Wconversion}.\n \n-@item -Wextra\n @opindex @code{Wextra}\n+@item -Wextra\n @cindex extra warnings\n @cindex warnings, extra\n Enables some warning options for usages of language features which\n may be problematic. This currently includes @option{-Wcompare-reals},\n @option{-Wunused-parameter} and @option{-Wdo-subscript}.\n \n-@item -Wfrontend-loop-interchange\n @opindex @code{Wfrontend-loop-interchange}\n+@item -Wfrontend-loop-interchange\n @cindex warnings, loop interchange\n @cindex loop interchange, warning\n Warn when using @option{-ffrontend-loop-interchange} for performing loop\n interchanges.\n \n-@item -Wimplicit-interface\n @opindex @code{Wimplicit-interface}\n+@item -Wimplicit-interface\n @cindex warnings, implicit interface\n Warn if a procedure is called without an explicit interface.\n Note this only checks that an explicit interface is present.  It does not\n check that the declared interfaces are consistent across program units.\n \n-@item -Wimplicit-procedure\n @opindex @code{Wimplicit-procedure}\n+@item -Wimplicit-procedure\n @cindex warnings, implicit procedure\n Warn if a procedure is called that has neither an explicit interface\n nor has been declared as @code{EXTERNAL}.\n \n-@item -Winteger-division\n @opindex @code{Winteger-division}\n+@item -Winteger-division\n @cindex warnings, integer division\n @cindex warnings, division of integers\n Warn if a constant integer division truncates its result.\n As an example, 3/5 evaluates to 0.\n \n-@item -Wintrinsics-std\n @opindex @code{Wintrinsics-std}\n+@item -Wintrinsics-std\n @cindex warnings, non-standard intrinsics\n @cindex warnings, intrinsics of other standards\n Warn if @command{gfortran} finds a procedure named like an intrinsic not\n@@ -1052,23 +1052,23 @@ it as @code{EXTERNAL} procedure because of this.  @option{-fall-intrinsics} can\n be used to never trigger this behavior and always link to the intrinsic\n regardless of the selected standard.\n \n-@item -Wno-overwrite-recursive\n @opindex @code{Woverwrite-recursive}\n+@item -Wno-overwrite-recursive\n @cindex  warnings, overwrite recursive\n Do not warn when @option{-fno-automatic} is used with @option{-frecursive}. Recursion\n will be broken if the relevant local variables do not have the attribute\n @code{AUTOMATIC} explicitly declared. This option can be used to suppress the warning\n when it is known that recursion is not broken. Useful for build environments that use\n @option{-Werror}.\n \n-@item -Wreal-q-constant\n @opindex @code{Wreal-q-constant}\n+@item -Wreal-q-constant\n @cindex warnings, @code{q} exponent-letter\n Produce a warning if a real-literal-constant contains a @code{q}\n exponent-letter.\n \n-@item -Wsurprising\n @opindex @code{Wsurprising}\n+@item -Wsurprising\n @cindex warnings, suspicious code\n Produce a warning when ``suspicious'' code constructs are encountered.\n While technically legal these usually indicate that an error has been made.\n@@ -1099,8 +1099,8 @@ vendor-extension sentinel is encountered. (The equivalent @code{ompx},\n used in free-form source code, is diagnosed by default.)\n @end itemize\n \n-@item -Wtabs\n @opindex @code{Wtabs}\n+@item -Wtabs\n @cindex warnings, tabs\n @cindex tabulators\n By default, tabs are accepted as whitespace, but tabs are not members\n@@ -1111,45 +1111,45 @@ active for @option{-pedantic}, @option{-std=f95}, @option{-std=f2003},\n @option{-std=f2008}, @option{-std=f2018} and\n @option{-Wall}.\n \n-@item -Wundefined-do-loop\n @opindex @code{Wundefined-do-loop}\n+@item -Wundefined-do-loop\n @cindex warnings, undefined do loop\n Warn if a DO loop with step either 1 or -1 yields an underflow or an overflow\n during iteration of an induction variable of the loop.\n This option is implied by @option{-Wall}.\n \n-@item -Wunderflow\n @opindex @code{Wunderflow}\n+@item -Wunderflow\n @cindex warnings, underflow\n @cindex underflow\n Produce a warning when numerical constant expressions are\n encountered, which yield an UNDERFLOW during compilation. Enabled by default.\n \n-@item -Wintrinsic-shadow\n @opindex @code{Wintrinsic-shadow}\n+@item -Wintrinsic-shadow\n @cindex warnings, intrinsic\n @cindex intrinsic\n Warn if a user-defined procedure or module procedure has the same name as an\n intrinsic; in this case, an explicit interface or @code{EXTERNAL} or\n @code{INTRINSIC} declaration might be needed to get calls later resolved to\n the desired intrinsic/procedure.  This option is implied by @option{-Wall}.\n \n-@item -Wuse-without-only\n @opindex @code{Wuse-without-only}\n+@item -Wuse-without-only\n @cindex warnings, use statements\n @cindex intrinsic\n Warn if a @code{USE} statement has no @code{ONLY} qualifier and \n thus implicitly imports all public entities of the used module.\n \n-@item -Wunused-dummy-argument\n @opindex @code{Wunused-dummy-argument}\n+@item -Wunused-dummy-argument\n @cindex warnings, unused dummy argument\n @cindex unused dummy argument\n @cindex dummy argument, unused\n Warn about unused dummy arguments. This option is implied by @option{-Wall}.\n \n-@item -Wunused-parameter\n @opindex @code{Wunused-parameter}\n+@item -Wunused-parameter\n @cindex warnings, unused parameter\n @cindex unused parameter\n Contrary to @command{gcc}'s meaning of @option{-Wunused-parameter},\n@@ -1159,24 +1159,24 @@ but about unused @code{PARAMETER} values. @option{-Wunused-parameter}\n is implied by @option{-Wextra} if also @option{-Wunused} or\n @option{-Wall} is used.\n \n-@item -Walign-commons\n @opindex @code{Walign-commons}\n+@item -Walign-commons\n @cindex warnings, alignment of @code{COMMON} blocks\n @cindex alignment of @code{COMMON} blocks\n By default, @command{gfortran} warns about any occasion of variables being\n padded for proper alignment inside a @code{COMMON} block. This warning can be turned\n off via @option{-Wno-align-commons}. See also @option{-falign-commons}.\n \n-@item -Wfunction-elimination\n @opindex @code{Wfunction-elimination}\n+@item -Wfunction-elimination\n @cindex function elimination\n @cindex warnings, function elimination\n Warn if any calls to impure functions are eliminated by the optimizations\n enabled by the @option{-ffrontend-optimize} option.\n This option is implied by @option{-Wextra}.\n \n-@item -Wrealloc-lhs\n @opindex @code{Wrealloc-lhs}\n+@item -Wrealloc-lhs\n @cindex Reallocate the LHS in assignments, notification\n Warn when the compiler might insert code to for allocation or reallocation of\n an allocatable array variable of intrinsic type in intrinsic assignments.  In\n@@ -1188,28 +1188,28 @@ is shown, even if the compiler will optimize reallocation checks away.  For\n instance, when the right-hand side contains the same variable multiplied by\n a scalar.  See also @option{-frealloc-lhs}.\n \n-@item -Wrealloc-lhs-all\n @opindex @code{Wrealloc-lhs-all}\n+@item -Wrealloc-lhs-all\n Warn when the compiler inserts code to for allocation or reallocation of an\n allocatable variable; this includes scalars and derived types.\n \n-@item -Wcompare-reals\n @opindex @code{Wcompare-reals}\n+@item -Wcompare-reals\n Warn when comparing real or complex types for equality or inequality.\n This option is implied by @option{-Wextra}.\n \n-@item -Wtarget-lifetime\n @opindex @code{Wtargt-lifetime}\n+@item -Wtarget-lifetime\n Warn if the pointer in a pointer assignment might be longer than the its\n target. This option is implied by @option{-Wall}.\n \n-@item -Wzerotrip\n @opindex @code{Wzerotrip}\n+@item -Wzerotrip\n Warn if a @code{DO} loop is known to execute zero times at compile\n time.  This option is implied by @option{-Wall}.\n \n-@item -Wdo-subscript\n @opindex @code{Wdo-subscript}\n+@item -Wdo-subscript\n Warn if an array subscript inside a DO loop could lead to an\n out-of-bounds access even if the compiler cannot prove that the\n statement is actually executed, in cases like\n@@ -1223,8 +1223,8 @@ statement is actually executed, in cases like\n @end smallexample\n This option is implied by @option{-Wextra}.\n \n-@item -Werror\n @opindex @code{Werror}\n+@item -Werror\n @cindex warnings, to errors\n Turns all warnings into errors.\n @end table\n@@ -1245,51 +1245,51 @@ GNU Fortran has various special options that are used for debugging\n either your program or the GNU Fortran compiler.\n \n @table @gcctabopt\n-@item -fdump-fortran-original\n @opindex @code{fdump-fortran-original}\n+@item -fdump-fortran-original\n Output the internal parse tree after translating the source program\n into internal representation.  This option is mostly useful for\n debugging the GNU Fortran compiler itself. The output generated by\n this option might change between releases. This option may also\n generate internal compiler errors for features which have only\n recently been added.\n \n-@item -fdump-fortran-optimized\n @opindex @code{fdump-fortran-optimized}\n+@item -fdump-fortran-optimized\n Output the parse tree after front-end optimization.  Mostly useful for\n debugging the GNU Fortran compiler itself. The output generated by\n this option might change between releases.  This option may also\n generate internal compiler errors for features which have only\n recently been added.\n \n-@item -fdump-parse-tree\n @opindex @code{fdump-parse-tree}\n+@item -fdump-parse-tree\n Output the internal parse tree after translating the source program\n into internal representation.  Mostly useful for debugging the GNU\n Fortran compiler itself. The output generated by this option might\n change between releases. This option may also generate internal\n compiler errors for features which have only recently been added. This\n option is deprecated; use @code{-fdump-fortran-original} instead.\n \n-@item -fdebug-aux-vars\n @opindex @code{fdebug-aux-vars}\n+@item -fdebug-aux-vars\n Renames internal variables created by the gfortran front end and makes\n them accessible to a debugger.  The name of the internal variables then\n start with upper-case letters followed by an underscore.  This option is\n useful for debugging the compiler's code generation together with\n @code{-fdump-tree-original} and enabling debugging of the executable\n program by using @code{-g} or @code{-ggdb3}.\n \n-@item -fdump-fortran-global\n @opindex @code{fdump-fortran-global}\n+@item -fdump-fortran-global\n Output a list of the global identifiers after translating into\n middle-end representation. Mostly useful for debugging the GNU Fortran\n compiler itself. The output generated by this option might change\n between releases.  This option may also generate internal compiler\n errors for features which have only recently been added.\n \n-@item -ffpe-trap=@var{list}\n @opindex @code{ffpe-trap=}@var{list}\n+@item -ffpe-trap=@var{list}\n Specify a list of floating point exception traps to enable.  On most\n systems, if a floating point exception occurs and the trap for that\n exception is enabled, a SIGFPE signal will be sent and the program\n@@ -1322,8 +1322,8 @@ be uninteresting in practice.\n \n By default no exception traps are enabled.\n \n-@item -ffpe-summary=@var{list}\n @opindex @code{ffpe-summary=}@var{list}\n+@item -ffpe-summary=@var{list}\n Specify a list of floating-point exceptions, whose flag status is printed\n to @code{ERROR_UNIT} when invoking @code{STOP} and @code{ERROR STOP}.\n @var{list} can be either @samp{none}, @samp{all} or a comma-separated list\n@@ -1336,8 +1336,8 @@ last one will be used.\n \n By default, a summary for all exceptions but @samp{inexact} is shown.\n \n-@item -fno-backtrace\n @opindex @code{fno-backtrace}\n+@item -fno-backtrace\n @cindex backtrace\n @cindex trace\n When a serious runtime error is encountered or a deadly signal is\n@@ -1369,8 +1369,8 @@ It also affects the search paths used by @command{cpp} when used to preprocess\n Fortran source.\n \n @table @gcctabopt\n-@item -I@var{dir}\n @opindex @code{I}@var{dir}\n+@item -I@var{dir}\n @cindex directory, search paths for inclusion\n @cindex inclusion, directory search paths for\n @cindex search paths, for included files\n@@ -1392,9 +1392,9 @@ compiled modules are required by a @code{USE} statement.\n gcc,Using the GNU Compiler Collection (GCC)}, for information on the\n @option{-I} option.\n \n-@item -J@var{dir}\n @opindex @code{J}@var{dir}\n @opindex @code{M}@var{dir}\n+@item -J@var{dir}\n @cindex paths, search\n @cindex module search path\n This option specifies where to put @file{.mod} files for compiled modules.\n@@ -1403,8 +1403,8 @@ statement.\n \n The default is the current directory.\n \n-@item -fintrinsic-modules-path @var{dir}\n @opindex @code{fintrinsic-modules-path} @var{dir}\n+@item -fintrinsic-modules-path @var{dir}\n @cindex paths, search\n @cindex module search path\n This option specifies the location of pre-compiled intrinsic modules, if\n@@ -1421,8 +1421,8 @@ executable output file. They are meaningless if the compiler is not doing\n a link step.\n \n @table @gcctabopt\n-@item -static-libgfortran\n @opindex @code{static-libgfortran}\n+@item -static-libgfortran\n On systems that provide @file{libgfortran} as a shared and a static\n library, this option forces the use of the static version. If no\n shared version of @file{libgfortran} was built when the compiler was\n@@ -1431,8 +1431,8 @@ configured, this option has no effect.\n \n \n @table @gcctabopt\n-@item -static-libquadmath\n @opindex @code{static-libquadmath}\n+@item -static-libquadmath\n On systems that provide @file{libquadmath} as a shared and a static\n library, this option forces the use of the static version. If no\n shared version of @file{libquadmath} was built when the compiler was\n@@ -1451,8 +1451,8 @@ requirements when redistributing the resulting binaries.\n These options affect the runtime behavior of programs compiled with GNU Fortran.\n \n @table @gcctabopt\n-@item -fconvert=@var{conversion}\n @opindex @code{fconvert=}@var{conversion}\n+@item -fconvert=@var{conversion}\n Specify the representation of data for unformatted files.  Valid\n values for conversion on most systems are: @samp{native}, the default;\n @samp{swap}, swap between big- and little-endian; @samp{big-endian}, use\n@@ -1473,23 +1473,23 @@ commas.  Those are\n The @code{CONVERT} specifier and the GFORTRAN_CONVERT_UNIT environment\n variable override the default specified by @option{-fconvert}.}\n \n-@item -frecord-marker=@var{length}\n @opindex @code{frecord-marker=}@var{length}\n+@item -frecord-marker=@var{length}\n Specify the length of record markers for unformatted files.\n Valid values for @var{length} are 4 and 8.  Default is 4.\n @emph{This is different from previous versions of @command{gfortran}},\n which specified a default record marker length of 8 on most\n systems.  If you want to read or write files compatible\n with earlier versions of @command{gfortran}, use @option{-frecord-marker=8}.\n \n-@item -fmax-subrecord-length=@var{length}\n @opindex @code{fmax-subrecord-length=}@var{length}\n+@item -fmax-subrecord-length=@var{length}\n Specify the maximum length for a subrecord.  The maximum permitted\n value for length is 2147483639, which is also the default.  Only\n really useful for use by the gfortran testsuite.\n \n-@item -fsign-zero\n @opindex @code{fsign-zero}\n+@item -fsign-zero\n When enabled, floating point numbers of value zero with the sign bit set\n are written as negative number in formatted output and treated as\n negative in the @code{SIGN} intrinsic.  @option{-fno-sign-zero} does not\n@@ -1514,8 +1514,8 @@ can figure out the other form by either removing @option{no-} or adding\n it.\n \n @table @gcctabopt\n-@item -fno-automatic\n @opindex @code{fno-automatic}\n+@item -fno-automatic\n @cindex @code{SAVE} statement\n @cindex statement, @code{SAVE}\n Treat each program unit (except those marked as RECURSIVE) as if the\n@@ -1529,8 +1529,8 @@ Use the option @option{-frecursive} to use no static memory.\n Local variables or arrays having an explicit @code{SAVE} attribute are\n silently ignored unless the @option{-pedantic} option is added.\n \n-@item -ff2c\n @opindex ff2c\n+@item -ff2c\n @cindex calling convention\n @cindex @command{f2c} calling convention\n @cindex @command{g77} calling convention\n@@ -1563,8 +1563,8 @@ calling conventions will break at execution time.\n of type default @code{REAL} or @code{COMPLEX} as actual arguments, as\n the library implementations use the @option{-fno-f2c} calling conventions.\n \n-@item -fno-underscoring\n @opindex @code{fno-underscoring}\n+@item -fno-underscoring\n @cindex underscore\n @cindex symbol names, underscores\n @cindex transforming symbol names\n@@ -1632,8 +1632,8 @@ in the source, even if the names as seen by the linker are mangled to\n prevent accidental linking between procedures with incompatible\n interfaces.\n \n-@item -fsecond-underscore\n @opindex @code{fsecond-underscore}\n+@item -fsecond-underscore\n @cindex underscore\n @cindex symbol names, underscores\n @cindex transforming symbol names\n@@ -1657,8 +1657,8 @@ is implemented as a reference to the link-time external symbol\n for compatibility with @command{g77} and @command{f2c}, and is implied\n by use of the @option{-ff2c} option.\n \n-@item -fcoarray=@var{<keyword>}\n @opindex @code{fcoarray}\n+@item -fcoarray=@var{<keyword>}\n @cindex coarrays\n \n @table @asis\n@@ -1675,8 +1675,8 @@ library needs to be linked.\n @end table\n \n \n-@item -fcheck=@var{<keyword>}\n @opindex @code{fcheck}\n+@item -fcheck=@var{<keyword>}\n @cindex array, bounds checking\n @cindex bit intrinsics checking\n @cindex bounds checking\n@@ -1748,14 +1748,14 @@ will compile the file with all checks enabled as specified above except\n warnings for generated array temporaries.\n \n \n-@item -fbounds-check\n @opindex @code{fbounds-check}\n+@item -fbounds-check\n @c Note: This option is also referred in gcc's manpage\n Deprecated alias for @option{-fcheck=bounds}.\n \n+@opindex @code{tail-call-workaround}\n @item -ftail-call-workaround\n @itemx -ftail-call-workaround=@var{n}\n-@opindex @code{tail-call-workaround}\n Some C interfaces to Fortran codes violate the gfortran ABI by\n omitting the hidden character length arguments as described in\n @xref{Argument passing conventions}.  This can lead to crashes\n@@ -1786,12 +1786,12 @@ The negative form, @option{-fno-tail-call-workaround} or equivalent\n Default is currently @option{-ftail-call-workaround}, this will change\n in future releases.\n \n-@item -fcheck-array-temporaries\n @opindex @code{fcheck-array-temporaries}\n+@item -fcheck-array-temporaries\n Deprecated alias for @option{-fcheck=array-temps}.\n \n-@item -fmax-array-constructor=@var{n}\n @opindex @code{fmax-array-constructor}\n+@item -fmax-array-constructor=@var{n}\n This option can be used to increase the upper limit permitted in \n array constructors.  The code below requires this option to expand\n the array at compile time.\n@@ -1812,8 +1812,8 @@ large object files.}\n The default value for @var{n} is 65535.\n \n \n-@item -fmax-stack-var-size=@var{n}\n @opindex @code{fmax-stack-var-size}\n+@item -fmax-stack-var-size=@var{n}\n This option specifies the size in bytes of the largest array that will be put\n on the stack; if the size is exceeded static memory is used (except in\n procedures marked as RECURSIVE). Use the option @option{-frecursive} to\n@@ -1826,24 +1826,24 @@ Future versions of GNU Fortran may improve this behavior.\n \n The default value for @var{n} is 65536.\n \n-@item -fstack-arrays\n @opindex @code{fstack-arrays}\n+@item -fstack-arrays\n Adding this option will make the Fortran compiler put all arrays of\n unknown size and array temporaries onto stack memory.  If your program uses very\n large local arrays it is possible that you will have to extend your runtime\n limits for stack memory on some operating systems. This flag is enabled\n by default at optimization level @option{-Ofast} unless\n @option{-fmax-stack-var-size} is specified.\n \n-@item -fpack-derived\n @opindex @code{fpack-derived}\n+@item -fpack-derived\n @cindex structure packing\n This option tells GNU Fortran to pack derived type members as closely as\n possible.  Code compiled with this option is likely to be incompatible\n with code compiled without this option, and may execute slower.\n \n-@item -frepack-arrays\n @opindex @code{frepack-arrays}\n+@item -frepack-arrays\n @cindex repacking arrays\n In some circumstances GNU Fortran may pass assumed shape array\n sections via a descriptor describing a noncontiguous area of memory.\n@@ -1854,15 +1854,15 @@ This should result in faster accesses to the array.  However it can introduce\n significant overhead to the function call, especially  when the passed data\n is noncontiguous.\n \n-@item -fshort-enums\n @opindex @code{fshort-enums}\n+@item -fshort-enums\n This option is provided for interoperability with C code that was\n compiled with the @option{-fshort-enums} option.  It will make\n GNU Fortran choose the smallest @code{INTEGER} kind a given\n enumerator set will fit in, and give all its enumerators this kind.\n \n-@item -finline-arg-packing\n @opindex @code{finline-arg-packing}\n+@item -finline-arg-packing\n When passing an assumed-shape argument of a procedure as actual\n argument to an assumed-size or explicit size or as argument to a\n procedure that does not have an explicit interface, the argument may\n@@ -1889,17 +1889,17 @@ size and also compilation time may become excessive.  If that is the\n case, it may be better to disable this option.  Instances of packing\n can be found by using @option{-Warray-temporaries}.\n \n-@item -fexternal-blas\n @opindex @code{fexternal-blas}\n+@item -fexternal-blas\n This option will make @command{gfortran} generate calls to BLAS functions\n for some matrix operations like @code{MATMUL}, instead of using our own\n algorithms, if the size of the matrices involved is larger than a given\n limit (see @option{-fblas-matmul-limit}).  This may be profitable if an\n optimized vendor BLAS library is available.  The BLAS library will have\n to be specified at link time.\n \n-@item -fblas-matmul-limit=@var{n}\n @opindex @code{fblas-matmul-limit}\n+@item -fblas-matmul-limit=@var{n}\n Only significant when @option{-fexternal-blas} is in effect.\n Matrix multiplication of matrices with size larger than (or equal to) @var{n}\n will be performed by calls to BLAS functions, while others will be\n@@ -1909,8 +1909,8 @@ geometric mean of the dimensions of the argument and result matrices.\n \n The default value for @var{n} is 30.\n \n-@item -finline-matmul-limit=@var{n}\n @opindex @code{finline-matmul-limit}\n+@item -finline-matmul-limit=@var{n}\n When front-end optimization is active, some calls to the @code{MATMUL}\n intrinsic function will be inlined.  This may result in code size\n increase if the size of the matrix cannot be determined at compile\n@@ -1924,24 +1924,24 @@ the dimensions of the argument and result matrices.\n The default value for @var{n} is 30.  The @code{-fblas-matmul-limit}\n can be used to change this value.\n \n-@item -frecursive\n @opindex @code{frecursive}\n+@item -frecursive\n Allow indirect recursion by forcing all local arrays to be allocated\n on the stack. This flag cannot be used together with\n @option{-fmax-stack-var-size=} or @option{-fno-automatic}.\n \n-@item -finit-local-zero\n-@itemx -finit-derived\n-@itemx -finit-integer=@var{n}\n-@itemx -finit-real=@var{<zero|inf|-inf|nan|snan>}\n-@itemx -finit-logical=@var{<true|false>}\n-@itemx -finit-character=@var{n}\n @opindex @code{finit-local-zero}\n @opindex @code{finit-derived}\n @opindex @code{finit-integer}\n @opindex @code{finit-real}\n @opindex @code{finit-logical}\n @opindex @code{finit-character}\n+@item -finit-local-zero\n+@itemx -finit-derived\n+@itemx -finit-integer=@var{n}\n+@itemx -finit-real=@var{<zero|inf|-inf|nan|snan>}\n+@itemx -finit-logical=@var{<true|false>}\n+@itemx -finit-character=@var{n}\n The @option{-finit-local-zero} option instructs the compiler to\n initialize local @code{INTEGER}, @code{REAL}, and @code{COMPLEX}\n variables to zero, @code{LOGICAL} variables to false, and\n@@ -1985,8 +1985,8 @@ Finally, note that enabling any of the @option{-finit-*} options will\n silence warnings that would have been emitted by @option{-Wuninitialized}\n for the affected local variables.\n \n-@item -falign-commons\n @opindex @code{falign-commons}\n+@item -falign-commons\n @cindex alignment of @code{COMMON} blocks\n By default, @command{gfortran} enforces proper alignment of all variables in a\n @code{COMMON} block by padding them as needed. On certain platforms this is mandatory,\n@@ -1997,8 +1997,8 @@ same form of this option should be used for all files that share a @code{COMMON}\n To avoid potential alignment issues in @code{COMMON} blocks, it is recommended to order\n objects from largest to smallest.\n \n-@item -fno-protect-parens\n @opindex @code{fno-protect-parens}\n+@item -fno-protect-parens\n @cindex re-association of parenthesized expressions\n By default the parentheses in expression are honored for all optimization\n levels such that the compiler does not do any re-association. Using\n@@ -2008,16 +2008,16 @@ optimization @option{-fno-signed-zeros} and @option{-fno-trapping-math}\n need to be in effect. The parentheses protection is enabled by default, unless\n @option{-Ofast} is given.\n \n-@item -frealloc-lhs\n @opindex @code{frealloc-lhs}\n+@item -frealloc-lhs\n @cindex Reallocate the LHS in assignments\n An allocatable left-hand side of an intrinsic assignment is automatically\n (re)allocated if it is either unallocated or has a different shape. The\n option is enabled by default except when @option{-std=f95} is given. See\n also @option{-Wrealloc-lhs}.\n \n-@item -faggressive-function-elimination\n @opindex @code{faggressive-function-elimination}\n+@item -faggressive-function-elimination\n @cindex Elimination of functions with identical argument lists\n Functions with identical argument lists are eliminated within\n statements, regardless of whether these functions are marked\n@@ -2028,8 +2028,8 @@ statements, regardless of whether these functions are marked\n there will only be a single call to @code{f}.  This option only works\n if @option{-ffrontend-optimize} is in effect.\n \n-@item -ffrontend-optimize\n @opindex @code{frontend-optimize}\n+@item -ffrontend-optimize\n @cindex Front-end optimization\n This option performs front-end optimization, based on manipulating\n parts the Fortran parse tree.  Enabled by default by any @option{-O} option\n@@ -2044,8 +2044,8 @@ include:\n @end itemize\n It can be deselected by specifying @option{-fno-frontend-optimize}.\n \n-@item -ffrontend-loop-interchange\n @opindex @code{frontend-loop-interchange}\n+@item -ffrontend-loop-interchange\n @cindex loop interchange, Fortran\n Attempt to interchange loops in the Fortran front end where\n profitable.  Enabled by default by any @option{-O} option.\n@@ -2065,8 +2065,8 @@ shared by @command{gfortran}, @command{gcc}, and other GNU compilers.\n \n @table @asis\n \n-@item -fc-prototypes\n @opindex @code{c-prototypes}\n+@item -fc-prototypes\n @cindex Generating C prototypes from Fortran BIND(C) enteties\n This option will generate C prototypes from @code{BIND(C)} variable\n declarations, types and procedure interfaces and writes them to\n@@ -2087,8 +2087,8 @@ $ gfortran -fc-prototypes -fsyntax-only foo.f90 > foo.h\n where the C code intended for interoperating with the Fortran code\n then  uses @code{#include \"foo.h\"}.\n \n-@item -fc-prototypes-external\n @opindex @code{c-prototypes-external}\n+@item -fc-prototypes-external\n @cindex Generating C prototypes from external procedures\n This option will generate C prototypes from external functions and\n subroutines and write them to standard output.  This may be useful for"}]}