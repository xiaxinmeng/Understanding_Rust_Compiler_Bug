{"sha": "8d8256c19709b2ec4a2231f2e1b320966b503b3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ4MjU2YzE5NzA5YjJlYzRhMjIzMWYyZTFiMzIwOTY2YjUwM2IzZA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2009-04-24T10:27:06Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2009-04-24T10:27:06Z"}, "message": "frv.c (frv_frame_access): Do not use reg+reg addressing for DImode accesses.\n\n        * config/frv/frv.c (frv_frame_access): Do not use reg+reg\n        addressing for DImode accesses.\n        (frv_print_operand_address): Handle PLUS case.\n        * config/frv/frv.h (FIXED_REGISTERS): Mark link register as\n        fixed.\n\nFrom-SVN: r146694", "tree": {"sha": "7d49c640adc0ea18bb60e199db6d5e7d3f1db3f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d49c640adc0ea18bb60e199db6d5e7d3f1db3f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d8256c19709b2ec4a2231f2e1b320966b503b3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8256c19709b2ec4a2231f2e1b320966b503b3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d8256c19709b2ec4a2231f2e1b320966b503b3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8256c19709b2ec4a2231f2e1b320966b503b3d/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c54ab0b5d10f8a81041e9403b3a3ae0d4587d499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54ab0b5d10f8a81041e9403b3a3ae0d4587d499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54ab0b5d10f8a81041e9403b3a3ae0d4587d499"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "7ab7374a04ef4e8330dd14ac763a9791ee20d998", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d8256c19709b2ec4a2231f2e1b320966b503b3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d8256c19709b2ec4a2231f2e1b320966b503b3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d8256c19709b2ec4a2231f2e1b320966b503b3d", "patch": "@@ -1,3 +1,11 @@\n+2009-04-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/frv/frv.c (frv_frame_access): Do not use reg+reg\n+\taddressing for DImode accesses.\n+\t(frv_print_operand_address): Handle PLUS case.\n+\t* config/frv/frv.h (FIXED_REGISTERS): Mark link register as\n+\tfixed.\n+\n 2009-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/39794"}, {"sha": "56c99ae7c9f8a23b21532fc3181a90367380757e", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d8256c19709b2ec4a2231f2e1b320966b503b3d/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d8256c19709b2ec4a2231f2e1b320966b503b3d/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=8d8256c19709b2ec4a2231f2e1b320966b503b3d", "patch": "@@ -1687,7 +1687,21 @@ frv_frame_access (frv_frame_accessor_t *accessor, rtx reg, int stack_offset)\n \t  emit_insn (gen_rtx_SET (VOIDmode, reg, temp));\n \t}\n       else\n-\temit_insn (gen_rtx_SET (VOIDmode, reg, mem));\n+\t{\n+\t  /* We cannot use reg+reg addressing for DImode access.  */\n+\t  if (mode == DImode\n+\t      && GET_CODE (XEXP (mem, 0)) == PLUS\n+\t      && GET_CODE (XEXP (XEXP (mem, 0), 0)) == REG\n+\t      && GET_CODE (XEXP (XEXP (mem, 0), 1)) == REG)\n+\t    {\n+\t      rtx temp = gen_rtx_REG (SImode, TEMP_REGNO);\n+\t      rtx insn = emit_move_insn (temp,\n+\t\t\t\t\t gen_rtx_PLUS (SImode, XEXP (XEXP (mem, 0), 0),\n+\t\t\t\t\t\t       XEXP (XEXP (mem, 0), 1)));\n+\t      mem = gen_rtx_MEM (DImode, temp);\n+\t    }\n+\t  emit_insn (gen_rtx_SET (VOIDmode, reg, mem));\n+\t}\n       emit_use (reg);\n     }\n   else\n@@ -1699,14 +1713,27 @@ frv_frame_access (frv_frame_accessor_t *accessor, rtx reg, int stack_offset)\n \t  frv_frame_insn (gen_rtx_SET (Pmode, mem, temp),\n \t\t\t  frv_dwarf_store (reg, stack_offset));\n \t}\n-      else if (GET_MODE (reg) == DImode)\n+      else if (mode == DImode)\n \t{\n \t  /* For DImode saves, the dwarf2 version needs to be a SEQUENCE\n \t     with a separate save for each register.  */\n \t  rtx reg1 = gen_rtx_REG (SImode, REGNO (reg));\n \t  rtx reg2 = gen_rtx_REG (SImode, REGNO (reg) + 1);\n \t  rtx set1 = frv_dwarf_store (reg1, stack_offset);\n \t  rtx set2 = frv_dwarf_store (reg2, stack_offset + 4);\n+\n+\t  /* Also we cannot use reg+reg addressing.  */\n+\t  if (GET_CODE (XEXP (mem, 0)) == PLUS\n+\t      && GET_CODE (XEXP (XEXP (mem, 0), 0)) == REG\n+\t      && GET_CODE (XEXP (XEXP (mem, 0), 1)) == REG)\n+\t    {\n+\t      rtx temp = gen_rtx_REG (SImode, TEMP_REGNO);\n+\t      rtx insn = emit_move_insn (temp,\n+\t\t\t\t\t gen_rtx_PLUS (SImode, XEXP (XEXP (mem, 0), 0),\n+\t\t\t\t\t\t       XEXP (XEXP (mem, 0), 1)));\n+\t      mem = gen_rtx_MEM (DImode, temp);\n+\t    }\n+\n \t  frv_frame_insn (gen_rtx_SET (Pmode, mem, reg),\n \t\t\t  gen_rtx_PARALLEL (VOIDmode,\n \t\t\t\t\t    gen_rtvec (2, set1, set2)));\n@@ -2545,6 +2572,12 @@ frv_print_operand_address (FILE * stream, rtx x)\n       output_addr_const (stream, x);\n       return;\n \n+    case PLUS:\n+      /* Poorly constructed asm statements can trigger this alternative.\n+\t See gcc/testsuite/gcc.dg/asm-4.c for an example.  */\n+      frv_print_operand_memory_reference (stream, x, 0);\n+      return;\n+      \n     default:\n       break;\n     }"}, {"sha": "abe275f444b9f00f724f244fe19d49ae3cc306ac", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d8256c19709b2ec4a2231f2e1b320966b503b3d/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d8256c19709b2ec4a2231f2e1b320966b503b3d/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=8d8256c19709b2ec4a2231f2e1b320966b503b3d", "patch": "@@ -799,7 +799,7 @@\n \t1, 1, 1, 1,\t\t\t/* 164-167, accg8 - accg11 */\t\\\n \t/* Other registers */\t\t\t\t\t\t\\\n \t1,\t\t\t\t/* 168, AP   - fake arg ptr */\t\\\n-\t0,\t\t\t\t/* 169, LR   - Link register*/\t\\\n+\t1,\t\t\t\t/* 169, LR   - Link register*/\t\\\n \t0,\t\t\t\t/* 170, LCR  - Loop count reg*/\t\\\n \t1, 1\t\t\t\t/* 171-172, iacc0 */\t\t\\\n }"}]}