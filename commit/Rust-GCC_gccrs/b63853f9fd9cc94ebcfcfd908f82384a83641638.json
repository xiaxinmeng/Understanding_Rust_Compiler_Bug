{"sha": "b63853f9fd9cc94ebcfcfd908f82384a83641638", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYzODUzZjlmZDljYzk0ZWJjZmNmZDkwOGY4MjM4NGE4MzY0MTYzOA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@mckinlay.net.nz", "date": "2003-08-10T02:53:17Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2003-08-10T02:53:17Z"}, "message": "re PR libgcj/11778 (System.out PrintStream does too much buffering)\n\n\t* java/io/PrintStream.java (print): Always flush if auto_flush is\n\tset. Don't check for newline characters.\n\t(write (int)): Implement without using a temporary array.\n\t(write (byte[], int, int): Always flush if auto_flush is set. Don't\n\tcheck for newline characters.\n\tFixes PR libgcj/11778.\n\nFrom-SVN: r70284", "tree": {"sha": "fa9364795f38b5bc6f0e8a62faa6651caa3aa516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa9364795f38b5bc6f0e8a62faa6651caa3aa516"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b63853f9fd9cc94ebcfcfd908f82384a83641638", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b63853f9fd9cc94ebcfcfd908f82384a83641638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b63853f9fd9cc94ebcfcfd908f82384a83641638", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b63853f9fd9cc94ebcfcfd908f82384a83641638/comments", "author": null, "committer": null, "parents": [{"sha": "62515d696d9318ffa6528e61de850ea443e91d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62515d696d9318ffa6528e61de850ea443e91d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62515d696d9318ffa6528e61de850ea443e91d81"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "d790e60fbd955596d0bfd28641c93227f8ad52b9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63853f9fd9cc94ebcfcfd908f82384a83641638/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63853f9fd9cc94ebcfcfd908f82384a83641638/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b63853f9fd9cc94ebcfcfd908f82384a83641638", "patch": "@@ -1,3 +1,12 @@\n+2003-08-10  Bryce McKinlay  <bryce@mckinlay.net.nz>\n+\n+\t* java/io/PrintStream.java (print): Always flush if auto_flush is\n+\tset. Don't check for newline characters.\n+\t(write (int)): Implement without using a temporary array.\n+\t(write (byte[], int, int): Always flush if auto_flush is set. Don't\n+\tcheck for newline characters.\n+\tFixes PR libgcj/11778.\n+\n 2003-08-08  Andrew Haley  <aph@redhat.com>\n \n \t* Makefile.am (AM_CXXFLAGS): Define BOOT_CLASS_PATH."}, {"sha": "d2a211744e2f0eea110b04f3c4e861d2135636d7", "filename": "libjava/java/io/PrintStream.java", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63853f9fd9cc94ebcfcfd908f82384a83641638/libjava%2Fjava%2Fio%2FPrintStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63853f9fd9cc94ebcfcfd908f82384a83641638/libjava%2Fjava%2Fio%2FPrintStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintStream.java?ref=b63853f9fd9cc94ebcfcfd908f82384a83641638", "patch": "@@ -95,7 +95,9 @@ public PrintStream (OutputStream out)\n    * This method intializes a new <code>PrintStream</code> object to write\n    * to the specified output sink.  This constructor also allows \"auto-flush\"\n    * functionality to be specified where the stream will be flushed after\n-   * every line is terminated or newline character is written.\n+   * every <code>print</code> or <code>println</code> call, when the \n+   * <code>write</code> methods with array arguments are called, or when a \n+   * single new-line character is written.\n    * <p>\n    *\n    * @param out The <code>OutputStream</code> to write to.\n@@ -114,7 +116,9 @@ public PrintStream (OutputStream out, boolean auto_flush)\n    * This method intializes a new <code>PrintStream</code> object to write\n    * to the specified output sink.  This constructor also allows \"auto-flush\"\n    * functionality to be specified where the stream will be flushed after\n-   * every line is terminated or newline character is written.\n+   * every <code>print</code> or <code>println</code> call, when the \n+   * <code>write</code> methods with array arguments are called, or when a \n+   * single new-line character is written.\n    * <p>\n    *\n    * @param out The <code>OutputStream</code> to write to.\n@@ -256,10 +260,8 @@ public void print (String str)\n   {\n     pw.print (str);\n \n-    if (str != null && auto_flush)\n-      if ((str.indexOf ('\\r') != -1)\n-          || (str.indexOf ('\\n') != -1))\n-        flush ();\n+    if (auto_flush)\n+      flush ();\n   }\n \n   /**\n@@ -422,9 +424,21 @@ public void println (char[] charArray)\n    */\n   public void write (int oneByte)\n   {\n-    byte[] data = new byte [1];\n-    data [0] = (byte) (oneByte & 0xff);\n-    write (data, 0, 1);\n+    // We actually have to implement this method. Flush first so that\n+    // things get written in the right order.\n+    flush();\n+\n+    try\n+      {\n+        out.write (oneByte & 0xff);\n+        \n+        if (auto_flush && (oneByte == '\\n'))\n+          flush ();\n+      }\n+    catch (IOException e)\n+      {\n+        setError ();\n+      }\n   }\n \n   /**\n@@ -446,19 +460,12 @@ public void write (byte[] buffer, int offset, int len)\n         out.write (buffer, offset, len);\n         \n         if (auto_flush)\n-          for (int i = offset; i < len; i++)\n-            if ((buffer [i] == '\\r')\n-                || (buffer [i] == '\\n'))\n-              {\n-                flush ();\n-                break;\n-              }\n+          flush ();\n       }\n     catch (IOException e)\n       {\n         setError ();\n       }\n   }\n-\n } // class PrintStream\n "}]}