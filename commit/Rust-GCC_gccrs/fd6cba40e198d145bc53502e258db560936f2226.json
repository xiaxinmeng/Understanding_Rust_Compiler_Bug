{"sha": "fd6cba40e198d145bc53502e258db560936f2226", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ2Y2JhNDBlMTk4ZDE0NWJjNTM1MDJlMjU4ZGI1NjA5MzZmMjIyNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-22T18:46:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-22T18:46:54Z"}, "message": "re PR sanitizer/78158 (Strange data race detection with thread sanitizer)\n\n\tPR sanitizer/78158\n\t* tsan/tsan_interface_atomic.cc: Cherry-pick upstream r298378.\n\nFrom-SVN: r246402", "tree": {"sha": "c91dc8243a475c9d537229a81e5ccddb8e307c6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c91dc8243a475c9d537229a81e5ccddb8e307c6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd6cba40e198d145bc53502e258db560936f2226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6cba40e198d145bc53502e258db560936f2226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd6cba40e198d145bc53502e258db560936f2226", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd6cba40e198d145bc53502e258db560936f2226/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68ed2ba0a7d60275ac044a4cb50b33eb33fbb813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ed2ba0a7d60275ac044a4cb50b33eb33fbb813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ed2ba0a7d60275ac044a4cb50b33eb33fbb813"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "1beb8d583210646c286f55e0880faf5236a6fbd3", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6cba40e198d145bc53502e258db560936f2226/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6cba40e198d145bc53502e258db560936f2226/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=fd6cba40e198d145bc53502e258db560936f2226", "patch": "@@ -1,3 +1,8 @@\n+2017-03-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/78158\n+\t* tsan/tsan_interface_atomic.cc: Cherry-pick upstream r298378.\n+\n 2017-02-16  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \tPR sanitizer/79562"}, {"sha": "deb4206a624a6820d1d412237919c67e59dfee8b", "filename": "libsanitizer/tsan/tsan_interface_atomic.cc", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd6cba40e198d145bc53502e258db560936f2226/libsanitizer%2Ftsan%2Ftsan_interface_atomic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd6cba40e198d145bc53502e258db560936f2226/libsanitizer%2Ftsan%2Ftsan_interface_atomic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2Ftsan_interface_atomic.cc?ref=fd6cba40e198d145bc53502e258db560936f2226", "patch": "@@ -448,10 +448,27 @@ static void AtomicFence(ThreadState *thr, uptr pc, morder mo) {\n \n // C/C++\n \n+static morder covert_morder(morder mo) {\n+  if (flags()->force_seq_cst_atomics)\n+    return (morder)mo_seq_cst;\n+\n+  // Filter out additional memory order flags:\n+  // MEMMODEL_SYNC        = 1 << 15\n+  // __ATOMIC_HLE_ACQUIRE = 1 << 16\n+  // __ATOMIC_HLE_RELEASE = 1 << 17\n+  //\n+  // HLE is an optimization, and we pretend that elision always fails.\n+  // MEMMODEL_SYNC is used when lowering __sync_ atomics,\n+  // since we use __sync_ atomics for actual atomic operations,\n+  // we can safely ignore it as well. It also subtly affects semantics,\n+  // but we don't model the difference.\n+  return (morder)(mo & 0x7fff);\n+}\n+\n #define SCOPED_ATOMIC(func, ...) \\\n     const uptr callpc = (uptr)__builtin_return_address(0); \\\n     uptr pc = StackTrace::GetCurrentPc(); \\\n-    mo = flags()->force_seq_cst_atomics ? (morder)mo_seq_cst : mo; \\\n+    mo = covert_morder(mo); \\\n     ThreadState *const thr = cur_thread(); \\\n     if (thr->ignore_interceptors) \\\n       return NoTsanAtomic##func(__VA_ARGS__); \\"}]}