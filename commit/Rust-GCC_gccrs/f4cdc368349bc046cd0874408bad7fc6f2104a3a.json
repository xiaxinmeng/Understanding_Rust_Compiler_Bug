{"sha": "f4cdc368349bc046cd0874408bad7fc6f2104a3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRjZGMzNjgzNDliYzA0NmNkMDg3NDQwOGJhZDdmYzZmMjEwNGEzYQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.stanford.edu", "date": "2001-01-05T23:41:00Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-01-05T23:41:00Z"}, "message": "cpplib.h (struct cpp_reader): Add help_only field.\n\n\t* cpplib.h (struct cpp_reader): Add help_only field.\n\t* cppinit.c (COMMAND_LINE_OPTIONS): Add OPT_version.\n\t(cpp_handle_option): Set pfile->help_only if we see -h,\n\t--help, -target-help, or --version.  Print version string but\n\tdo not set help_only if we see -v or -version.  Make text\n\tprinted by -v match that printed by (-)-version.\n\n\t* cppmain.c (main): Exit after option parsing if\n\tpfile->help_only is true.\n\n\t* toplev.c (independent_decode_option): Call print_version,\n\tthen exit, if we see --version (but not -version).\n\t(print_version): Split lengthy message into two lines.\n\nFrom-SVN: r38733", "tree": {"sha": "d4a4a93914e1c41a8f3f7e9b66d5a2e9ca0a0bac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4a4a93914e1c41a8f3f7e9b66d5a2e9ca0a0bac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4cdc368349bc046cd0874408bad7fc6f2104a3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4cdc368349bc046cd0874408bad7fc6f2104a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4cdc368349bc046cd0874408bad7fc6f2104a3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4cdc368349bc046cd0874408bad7fc6f2104a3a/comments", "author": null, "committer": null, "parents": [{"sha": "3326b760b32854ee0f513b44d0be770fad8f49e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3326b760b32854ee0f513b44d0be770fad8f49e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3326b760b32854ee0f513b44d0be770fad8f49e6"}], "stats": {"total": 73, "additions": 58, "deletions": 15}, "files": [{"sha": "580133ce0bbbad6af9717080c54af1249fee0300", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4cdc368349bc046cd0874408bad7fc6f2104a3a", "patch": "@@ -1,3 +1,19 @@\n+2001-01-05  Zack Weinberg  <zack@wolery.stanford.edu>\n+\n+\t* cpplib.h (struct cpp_reader): Add help_only field.\n+\t* cppinit.c (COMMAND_LINE_OPTIONS): Add OPT_version.\n+\t(cpp_handle_option): Set pfile->help_only if we see -h,\n+\t--help, -target-help, or --version.  Print version string but\n+\tdo not set help_only if we see -v or -version.  Make text\n+\tprinted by -v match that printed by (-)-version.\n+\n+\t* cppmain.c (main): Exit after option parsing if\n+\tpfile->help_only is true.\n+\n+\t* toplev.c (independent_decode_option): Call print_version,\n+\tthen exit, if we see --version (but not -version).\n+\t(print_version): Split lengthy message into two lines.\n+\n 2001-01-05  Nick Clifton  <nickc@redhat.com>\n \n \t* config/v850/v850.c (v850_encode_data_area): Use alloca to create"}, {"sha": "7454b6f67337ef48a27dd6059c1079f6a632ebc8", "filename": "gcc/cppinit.c", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=f4cdc368349bc046cd0874408bad7fc6f2104a3a", "patch": "@@ -1130,6 +1130,7 @@ new_pending_directive (pend, text, handler)\n   DEF_OPT(\"std=iso9899:199x\",         0,      OPT_std_iso9899_199x)           \\\n   DEF_OPT(\"trigraphs\",                0,      OPT_trigraphs)                  \\\n   DEF_OPT(\"v\",                        0,      OPT_v)                          \\\n+  DEF_OPT(\"version\",                  0,      OPT_version)                    \\\n   DEF_OPT(\"w\",                        0,      OPT_w)\n \n #define DEF_OPT(text, msg, code) code,\n@@ -1322,16 +1323,32 @@ cpp_handle_option (pfile, argc, argv)\n \tcase OPT_h:\n \tcase OPT__help:\n \t  print_help ();\n-\t  exit (0);  /* XXX */\n+\t  pfile->help_only = 1;\n \t  break;\n \tcase OPT_target__help:\n-          /* Print if any target specific options. */\n-          exit (0);\n+          /* Print if any target specific options. cpplib has none, but\n+\t     make sure help_only gets set.  */\n+\t  pfile->help_only = 1;\n           break;\n+\n+\t  /* --version inhibits compilation, -version doesn't. -v means\n+\t     verbose and -version.  Historical reasons, don't ask.  */\n \tcase OPT__version:\n-\t  fprintf (stderr, _(\"GNU CPP version %s (cpplib)\\n\"), version_string);\n-\t  exit (0);  /* XXX */\n+\t  pfile->help_only = 1;\n+\t  goto version;\n+\tcase OPT_v:\n+\t  CPP_OPTION (pfile, verbose) = 1;\n+\t  goto version;\n+\n+\tcase OPT_version:\n+\tversion:\n+\t  fprintf (stderr, _(\"GNU CPP version %s (cpplib)\"), version_string);\n+#ifdef TARGET_VERSION\n+\t  TARGET_VERSION;\n+#endif\n+\t  fputc ('\\n', stderr);\n \t  break;\n+\n \tcase OPT_C:\n \t  CPP_OPTION (pfile, discard_comments) = 0;\n \t  break;\n@@ -1425,14 +1442,6 @@ cpp_handle_option (pfile, argc, argv)\n \t  if (!strcmp (CPP_OPTION (pfile, out_fname), \"-\"))\n \t    CPP_OPTION (pfile, out_fname) = \"\";\n \t  break;\n-\tcase OPT_v:\n-\t  fprintf (stderr, _(\"GNU CPP version %s (cpplib)\"), version_string);\n-#ifdef TARGET_VERSION\n-\t  TARGET_VERSION;\n-#endif\n-\t  fputc ('\\n', stderr);\n-\t  CPP_OPTION (pfile, verbose) = 1;\n-\t  break;\n \tcase OPT_stdin_stdout:\n \t  /* JF handle '-' as file name meaning stdin or stdout.  */\n \t  if (CPP_OPTION (pfile, in_fname) == NULL)"}, {"sha": "7b53d0959c7aa97ff472c1e825bca332cac322e6", "filename": "gcc/cpplib.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=f4cdc368349bc046cd0874408bad7fc6f2104a3a", "patch": "@@ -616,6 +616,10 @@ struct cpp_reader\n \n   /* True if we are skipping a failed conditional group.  */\n   unsigned char skipping;\n+\n+  /* True if --help appeared in the options.  Caller should then bail\n+     out after option parsing and printing its own help.  See cppmain.c.  */\n+  unsigned char help_only;\n };\n \n #define CPP_FATAL_LIMIT 1000"}, {"sha": "6fa158d284d5ae6a69ddfc87fc8499e8e95e4069", "filename": "gcc/cppmain.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=f4cdc368349bc046cd0874408bad7fc6f2104a3a", "patch": "@@ -82,6 +82,13 @@ main (argc, argv)\n   if (CPP_FATAL_ERRORS (pfile))\n     return (FATAL_EXIT_CODE);\n \n+  /* If cpp_handle_options saw --help or --version on the command\n+     line, it will have set pfile->help_only to indicate this.  Exit\n+     successfully.  [The library does not exit itself, because\n+     e.g. cc1 needs to print its own --help message at this point.]  */\n+  if (pfile->help_only)\n+    return (SUCCESS_EXIT_CODE);\n+\n   /* Open the output now.  We must do so even if no_output is on,\n      because there may be other output than from the actual\n      preprocessing (e.g. from -dM).  */"}, {"sha": "671ce2cd5d666a3304aa61027a1f751e750d2820", "filename": "gcc/toplev.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cdc368349bc046cd0874408bad7fc6f2104a3a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=f4cdc368349bc046cd0874408bad7fc6f2104a3a", "patch": "@@ -4340,6 +4340,12 @@ independent_decode_option (argc, argv)\n       exit (0);\n     }\n \n+  if (!strcmp (arg, \"-version\"))\n+    {\n+      print_version (stderr, \"\");\n+      exit (0);\n+    }\n+\n   if (*arg == 'Y')\n     arg++;\n \n@@ -4934,12 +4940,13 @@ print_version (file, indent)\n #endif\n   fnotice (file,\n #ifdef __GNUC__\n-\t   \"%s%s%s version %s (%s) compiled by GNU C version %s.\\n\"\n+\t   \"%s%s%s version %s (%s)\\n%s\\tcompiled by GNU C version %s.\\n\"\n #else\n \t   \"%s%s%s version %s (%s) compiled by CC.\\n\"\n #endif\n \t   , indent, *indent != 0 ? \" \" : \"\",\n-\t   language_string, version_string, TARGET_NAME, __VERSION__);\n+\t   language_string, version_string, TARGET_NAME,\n+\t   indent, __VERSION__);\n }\n \n /* Print an option value and return the adjusted position in the line."}]}