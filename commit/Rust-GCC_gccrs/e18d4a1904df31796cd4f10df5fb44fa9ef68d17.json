{"sha": "e18d4a1904df31796cd4f10df5fb44fa9ef68d17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE4ZDRhMTkwNGRmMzE3OTZjZDRmMTBkZjVmYjQ0ZmE5ZWY2OGQxNw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-04-02T17:02:15Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-04-02T17:02:15Z"}, "message": "re PR tree-optimization/20640 (ICE on NULL PHI_ARG_DEF)\n\ngcc/ChangeLog:\nPR tree-optimization/20640\n* tree-ssa-dce.c (remove_dead_stmt): Don't redirect edge to\npost-dominator if it has phi nodes.\n(eliminate_unnecessary_stmts): Remove dead phis in all blocks\nbefore dead statements.\ngcc/testsuite/ChangeLog:\nPR tree-optimization/20640\n* gcc.dg/torture/tree-loop-1.c: New.\n\nFrom-SVN: r97446", "tree": {"sha": "11878561a726f557b6264d3b578b755ffe510bb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11878561a726f557b6264d3b578b755ffe510bb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e18d4a1904df31796cd4f10df5fb44fa9ef68d17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e18d4a1904df31796cd4f10df5fb44fa9ef68d17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e18d4a1904df31796cd4f10df5fb44fa9ef68d17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/comments", "author": null, "committer": null, "parents": [{"sha": "bbe3791247584e9b520a0a7afdc14acea321678a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe3791247584e9b520a0a7afdc14acea321678a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe3791247584e9b520a0a7afdc14acea321678a"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "3cb960effd831faa5e95b48f85417f02486587d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e18d4a1904df31796cd4f10df5fb44fa9ef68d17", "patch": "@@ -1,3 +1,11 @@\n+2005-04-02  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR tree-optimization/20640\n+\t* tree-ssa-dce.c (remove_dead_stmt): Don't redirect edge to\n+\tpost-dominator if it has phi nodes.\n+\t(eliminate_unnecessary_stmts): Remove dead phis in all blocks\n+\tbefore dead statements.\n+\n 2005-04-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR middle-end/20491"}, {"sha": "1264cf7879bc60e1ee8d8d8ded0447d19416d1e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e18d4a1904df31796cd4f10df5fb44fa9ef68d17", "patch": "@@ -1,3 +1,8 @@\n+2005-04-02  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR tree-optimization/20640\n+\t* gcc.dg/torture/tree-loop-1.c: New.\n+\n 2005-04-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/20290"}, {"sha": "1d38691780a56f6d0a77b8d48bbfd6c206e06869", "filename": "gcc/testsuite/gcc.dg/torture/tree-loop-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftree-loop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftree-loop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftree-loop-1.c?ref=e18d4a1904df31796cd4f10df5fb44fa9ef68d17", "patch": "@@ -0,0 +1,21 @@\n+/* PR tree-optimization/20640 */\n+\n+/* After unrolling the loop, we'd turn some conditional branches into\n+   unconditional ones, but branch redirection would fail to compute\n+   the PHI args for the PHI nodes in the replacement edge\n+   destination, so they'd remain NULL causing crashes later on.  */\n+\n+/* { dg-do compile } */\n+\n+static int a = 0;\n+extern int foo (void);\n+extern int *bar (void) __attribute__ ((__const__));\n+\n+void\n+test (int x)\n+{\n+  int b = 10;\n+  while (foo () == -1 && *bar () == 4 && b > 0)\n+    --b;\n+  a = x;\n+}"}, {"sha": "dc388ee7a8776b0b63c471b112821ab23d3af39d", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e18d4a1904df31796cd4f10df5fb44fa9ef68d17/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=e18d4a1904df31796cd4f10df5fb44fa9ef68d17", "patch": "@@ -637,7 +637,10 @@ eliminate_unnecessary_stmts (void)\n     {\n       /* Remove dead PHI nodes.  */\n       remove_dead_phis (bb);\n+    }\n \n+  FOR_EACH_BB (bb)\n+    {\n       /* Remove dead statements.  */\n       for (i = bsi_start (bb); ! bsi_end_p (i) ; )\n \t{\n@@ -724,6 +727,7 @@ remove_dead_stmt (block_stmt_iterator *i, basic_block bb)\n   if (is_ctrl_stmt (t))\n     {\n       basic_block post_dom_bb;\n+\n       /* The post dominance info has to be up-to-date.  */\n       gcc_assert (dom_computed[CDI_POST_DOMINATORS] == DOM_OK);\n       /* Get the immediate post dominator of bb.  */\n@@ -737,9 +741,20 @@ remove_dead_stmt (block_stmt_iterator *i, basic_block bb)\n \t  return;\n \t}\n \n-      /* Redirect the first edge out of BB to reach POST_DOM_BB.  */\n-      redirect_edge_and_branch (EDGE_SUCC (bb, 0), post_dom_bb);\n-      PENDING_STMT (EDGE_SUCC (bb, 0)) = NULL;\n+      /* If the post dominator block has PHI nodes, we might be unable\n+\t to compute the right PHI args for them.  Since the control\n+\t statement is unnecessary, all edges can be regarded as\n+\t equivalent, but we have to get rid of the condition, since it\n+\t might reference a variable that was determined to be\n+\t unnecessary and thus removed.  */\n+      if (phi_nodes (post_dom_bb))\n+\tpost_dom_bb = EDGE_SUCC (bb, 0)->dest;\n+      else\n+\t{\n+\t  /* Redirect the first edge out of BB to reach POST_DOM_BB.  */\n+\t  redirect_edge_and_branch (EDGE_SUCC (bb, 0), post_dom_bb);\n+\t  PENDING_STMT (EDGE_SUCC (bb, 0)) = NULL;\n+\t}\n       EDGE_SUCC (bb, 0)->probability = REG_BR_PROB_BASE;\n       EDGE_SUCC (bb, 0)->count = bb->count;\n "}]}