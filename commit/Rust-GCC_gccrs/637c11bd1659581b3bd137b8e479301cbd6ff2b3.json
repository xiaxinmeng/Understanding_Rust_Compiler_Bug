{"sha": "637c11bd1659581b3bd137b8e479301cbd6ff2b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3YzExYmQxNjU5NTgxYjNiZDEzN2I4ZTQ3OTMwMWNiZDZmZjJiMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-06-22T06:22:40Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-06-22T06:22:40Z"}, "message": "ChangeLog: Fix formatting.\n\n\t* ChangeLog: Fix formatting.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r175285", "tree": {"sha": "c69a7fd84720021c1fcc7f2af7cc96d72ec6f760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c69a7fd84720021c1fcc7f2af7cc96d72ec6f760"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/637c11bd1659581b3bd137b8e479301cbd6ff2b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637c11bd1659581b3bd137b8e479301cbd6ff2b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637c11bd1659581b3bd137b8e479301cbd6ff2b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637c11bd1659581b3bd137b8e479301cbd6ff2b3/comments", "author": null, "committer": null, "parents": [{"sha": "da7d921819a3e2ba17fd01d93fedf1cd4e2a5819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7d921819a3e2ba17fd01d93fedf1cd4e2a5819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7d921819a3e2ba17fd01d93fedf1cd4e2a5819"}], "stats": {"total": 148, "additions": 64, "deletions": 84}, "files": [{"sha": "1dff45a1437eaa22317d57a48294f962f38a20e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 59, "deletions": 78, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637c11bd1659581b3bd137b8e479301cbd6ff2b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637c11bd1659581b3bd137b8e479301cbd6ff2b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=637c11bd1659581b3bd137b8e479301cbd6ff2b3", "patch": "@@ -5,7 +5,7 @@\n \t* omp-low.c: Add sync_ or SYNC__ to builtin names.\n \n 2011-06-21  Georg-Johann Lay  <avr@gjlay.de>\n-\t\n+\n \tPR target/33049\n \t* config/avr/avr.md (extzv): New expander.\n \t(*extzv): New insn.\n@@ -23,8 +23,7 @@\n \t(fold_builtin_1): Call fold_builtin_binop for BUILT_IN_CLRSB*.\n \t* optabs.c (widen_leading): Call widen_operand and expand_unop\n \twith 0 as unsignedp argument instead of 1 for clrsb_optab.\n-\t(expand_unop): Subtract difference of mode sizes also for\n-\tclrsb_optab.\n+\t(expand_unop): Subtract difference of mode sizes also for clrsb_optab.\n \n 2011-06-21  Georg-Johann Lay  <avr@gjlay.de>\n \n@@ -68,8 +67,7 @@\n \n 2011-06-21  Richard Guenther  <rguenther@suse.de>\n \n-\t* ipa-inline-transform.c (inline_transform): Fix previous\n-\tchange.\n+\t* ipa-inline-transform.c (inline_transform): Fix previous change.\n \n 2011-06-21  Ira Rosen  <ira.rosen@linaro.org>\n \n@@ -80,7 +78,7 @@\n 2011-06-21  Richard Guenther  <rguenther@suse.de>\n \n \t* ipa-inline-transform.c (inline_transform): Fix typo.\n- \n+\n 2011-06-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/49483\n@@ -97,8 +95,7 @@\n \t* config/avr/avr.c (avr_help, TARGET_HELP): Remove.\n \t(avr_option_override): Don't process -mmcu= argument here.  Set\n \tavr_current_device using avr_mcu_index.\n-\t(avr_file_start): Use avr_current_device->name instead of\n-\tavr_mcu_name.\n+\t(avr_file_start): Use avr_current_device->name instead of avr_mcu_name.\n \t* config/avr/avr.opt (mmcu=): Use Enum.\n \t* config/avr/t-avr (avr-devices.o): Update dependencies.\n \t($(srcdir)/config/avr/avr-tables.opt): New.\n@@ -115,11 +112,11 @@\n \t* config/usegld.h: New file.\n \t* config/sol2.h (PREFERRED_DEBUGGING_TYPE): Remove.\n \t(CPP_SUBTARGET_SPEC): Remove -compat-bsd support.\n-\t(LIB_SPEC): Likewise.\n-\tSearch /lib.\n+\t(LIB_SPEC): Likewise.  Search /lib.\n \t(LINK_ARCH32_SPEC_BASE): Remove -compat-bsd support.\n \t(RDYNAMIC_SPEC): Handle GNU ld.\n-\t[HAVE_LD_EH_FRAME_HDR && TARGET_DL_ITERATE_PHDR] (LINK_EH_SPEC): Define.\n+\t[HAVE_LD_EH_FRAME_HDR && TARGET_DL_ITERATE_PHDR] (LINK_EH_SPEC):\n+\tDefine.\n \t(SUPPORTS_INIT_PRIORITY): Only disable for Sun ld.\n \t(SUBTARGET_INSERT_ATTRIBUTES, SUBTARGET_ATTRIBUTE_TABLE): Define.\n \t[!USE_GAS] (NO_DBX_BNSYM_ENSYM): Redefine.\n@@ -188,19 +185,22 @@\n \t(*-*-solaris2*): ... here.\n \n 2011-06-21  Christian Bruel  <christian.bruel@st.com>\n-\t\n+\n \tPR other/43564\n-\t* ipa-inline.c (can_inline_edge_p): Check !DECL_DISREGARD_INLINE_LIMITS.\n-\t\n+\t* ipa-inline.c (can_inline_edge_p): Check\n+\t!DECL_DISREGARD_INLINE_LIMITS.\n+\n 2011-06-21  Christian Bruel  <christian.bruel@st.com>\n-\t\n+\n \tPR middle-end/49139\n \t* cgraphunit.c (process_function_and_variable_attributes): warn when\n \talways_inline functions that are not inline.\n-\t* ipa-inline-transform.c (inline_transform): Always call optimize_inline.\n-\t* tree-inline.c (tree_inlinable_function_p): Use error instead of sorry.\n+\t* ipa-inline-transform.c (inline_transform): Always call\n+\toptimize_inline.\n+\t* tree-inline.c (tree_inlinable_function_p): Use error instead\n+\tof sorry.\n \t(expand_call_inline): Likewise.\n-\t\n+\n 2011-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* Makefile.in (dg_target_exps): Set.\n@@ -247,9 +247,8 @@\n \n 2011-06-20  Kai Tietz  <ktietz@redhat.com>\n \n-\t* fold-const.c (fold_binary_loc): Add missing\n-\tfolding for truth-not operations in combination\n-\twith binary and.\n+\t* fold-const.c (fold_binary_loc): Add missing folding for truth-not\n+\toperations in combination with binary and.\n \n 2011-06-20  Bernd Schmidt  <bernds@codesourcery.com>\n \n@@ -269,8 +268,7 @@\n \n 2011-06-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* longlong.h (count_leading_zeros): Use long long builtin for\n-\tx86-64.\n+\t* longlong.h (count_leading_zeros): Use long long builtin for x86-64.\n \t(count_trailing_zeros): Likewise.\n \n 2011-06-18  H.J. Lu  <hongjiu.lu@intel.com>\n@@ -351,8 +349,7 @@\n \t* tree-ssa-threadupdate.c (struct redirection_data): New field\n \tintermediate_edge.\n \t(THREAD_TARGET2): Define.\n-\t(redirection_data_eq): Also check that the intermediate edge is\n-\tequal.\n+\t(redirection_data_eq): Also check that the intermediate edge is equal.\n \t(lookup_redirection_data): Drop useless argument.  Extract the\n \toutgoing_edge and intermediate edge from E.  Callers updated.\n \t(copy_phi_args, update_destination_phis): New functions.\n@@ -365,14 +362,13 @@\n \tedge to the duplicate of the joiner block.\n \t(thread_block): Don't muck up loops when threading through a joiner\n \tblock.\n-\t(thread_through_loop_header): Handle threading through a joiner\n-\tblock.\n+\t(thread_through_loop_header): Handle threading through a joiner block.\n \t(mark_threaded_blocks, register_jump_thread): Likewise.\n \t* tree-flow.h (register_jump_thread): Add new argument.  Callers\n \tupdated.\n \t* tree-ssa-threadedge.c (phi_args_equal_on_edges): New function.\n \t(thread_across_edge): Handle threading through a joiner block.\n-\t\n+\n 2011-06-16  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/49343\n@@ -387,8 +383,8 @@\n 2011-06-16  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/45098\n-\t* tree-ssa-loop-niter.c (infer_loop_bounds_from_pointer_arith): Disallow\n-\tNULL pointer for pointer arithmetic.\n+\t* tree-ssa-loop-niter.c (infer_loop_bounds_from_pointer_arith):\n+\tDisallow NULL pointer for pointer arithmetic.\n \n 2011-06-16  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n@@ -497,7 +493,8 @@\n \t* config/xtensa/xtensa.c (xtensa_function_arg_advance): Likewise.\n \t(xtensa_function_arg, xtensa_function_incoming_arg): Likewise.\n \t(xtensa_function_arg_1): Likewise.\n-\t* config/stormy16/stormy16.c (xstormy16_function_arg_advance): Likewise.\n+\t* config/stormy16/stormy16.c (xstormy16_function_arg_advance):\n+\tLikewise.\n \t(xstormy16_function_arg): Likewise.\n \t* config/fr30/fr30.c (fr30_setup_incoming_varargs): Likewise.\n \t(fr30_arg_partial_bytes, fr30_function_arg): Likewise.\n@@ -578,27 +575,26 @@\n \t* config/mips/mips.c (mips_output_args_xfer): Likewise.\n \t* config/s390/s390.c (s390_call_saved_register_used): Likewise.\n \t* config/sh/sh.c (sh_output_mi_thunk): Likewise.\n-\t* config/microblaze/microblaze.c (microblaze_expand_prologue): Likewise.\n+\t* config/microblaze/microblaze.c (microblaze_expand_prologue):\n+\tLikewise.\n \t* config/m32r/m32r.c (m32r_return_in_memory): Adjust for changed\n \tm32r_pass_by_reference.\n \n 2011-06-16  Ira Rosen  <ira.rosen@linaro.org>\n \n \t* tree-vectorizer.h (vect_recog_func_ptr): Change the first\n \targument to be a VEC of statements.\n-\t* tree-vect-loop.c (vect_determine_vectorization_factor):\n-\tRemove the assert that pattern statements have to have their\n-\tvector type set.\n+\t* tree-vect-loop.c (vect_determine_vectorization_factor): Remove the\n+\tassert that pattern statements have to have their vector type set.\n \t* tree-vect-patterns.c (vect_recog_widen_sum_pattern):\n \tChange the first argument to be a VEC of statements.  Update\n \tdocumentation.\n \t(vect_recog_dot_prod_pattern, vect_recog_pow_pattern): Likewise.\n \t(vect_handle_widen_mult_by_const): New function.\n-\t(vect_recog_widen_mult_pattern):  Change the first argument to\n-\tbe a VEC of statements.  Update documentation.  Check that the\n-\tconstant is INTEGER_CST.  Support multiplication by a constant\n-\tthat fits an intermediate type - call\n-\tvect_handle_widen_mult_by_const.\n+\t(vect_recog_widen_mult_pattern):  Change the first argument to be a\n+\tVEC of statements.  Update documentation.  Check that the constant is\n+\tINTEGER_CST.  Support multiplication by a constant that fits an\n+\tintermediate type - call vect_handle_widen_mult_by_const.\n \t(vect_pattern_recog_1): Update vect_recog_func_ptr and its\n \tcall.  Handle additional pattern statements if necessary.\n \n@@ -623,13 +619,10 @@\n \t(count_leading_zeros): New macro.\n \t(count_trailing_zeros): New macro.\n \t(COUNT_LEADING_ZEROS_0): New macro.\n-\t* config/avr/t-avr (LIB1ASMFUNCS): Add\n-\t_ffssi2, _ffshi2, _loop_ffsqi2,\n-\t_ctzsi2, _ctzhi2, _clzdi2, _clzsi2, _clzhi2,\n-\t_paritydi2, _paritysi2, _parityhi2,\n-\t_popcounthi2,_popcountsi2, _popcountdi2, _popcountqi2,\n-\t_bswapsi2, _bswapdi2,\n-\t_ashldi3, _ashrdi3, _lshrdi3\n+\t* config/avr/t-avr (LIB1ASMFUNCS): Add _ffssi2, _ffshi2, _loop_ffsqi2,\n+\t_ctzsi2, _ctzhi2, _clzdi2, _clzsi2, _clzhi2, _paritydi2, _paritysi2,\n+\t_parityhi2, _popcounthi2,_popcountsi2, _popcountdi2, _popcountqi2,\n+\t_bswapsi2, _bswapdi2, _ashldi3, _ashrdi3, _lshrdi3.\n \t(LIB2FUNCS_EXCLUDE): Add _clz.\n \t* config/avr/libgcc.S (XCALL): Move up in file.\n \t(XJMP): New C Macro.\n@@ -662,8 +655,8 @@\n \n \t* gimple.c (canonicalize_cond_expr_cond): (bool)x is not\n \tthe same as x != 0.\n-\t* fold-const.c (fold_binary_loc): Do not fold X & 1 != 0 to\n-\t(bool) X & 1.\n+\t* fold-const.c (fold_binary_loc): Do not fold X & 1 != 0\n+\tto (bool) X & 1.\n \t* ipa-prop.c (ipa_analyze_indirect_call_uses): Also allow\n \tequality compares against zero for the lower bit.\n \n@@ -725,12 +718,10 @@\n \n \tPR debug/49382\n \t* dwarf2out.c (dw_loc_list_node): Add force field.\n-\t(add_var_loc_to_decl): For PARM_DECL, attempt to keep\n-\tthe incoming location in the list, even if it is modified\n-\tbefore first real insn.\n+\t(add_var_loc_to_decl): For PARM_DECL, attempt to keep the incoming\n+\tlocation in the list, even if it is modified before first real insn.\n \t(output_loc_list): Emit empty ranges with force flag set.\n-\t(dw_loc_list): If first range of a PARM_DECL is empty,\n-\tset force flag.\n+\t(dw_loc_list): If first range of a PARM_DECL is empty, set force flag.\n \n 2011-06-15  Alexander Monakov  <amonakov@ispras.ru>\n \n@@ -814,8 +805,7 @@\n \tcfglayout.o, $(out_object_file), $(common_out_object_file)):\n \tUpdate dependencies.\n \t(common/common-targhooks.o): New.\n-\t* common/config/default-common.c: Include tm.h.  Add FIXME\n-\tcomment.\n+\t* common/config/default-common.c: Include tm.h.  Add FIXME comment.\n \t* common/config/pa/pa-common.c: Include more headers.  Take\n \tcopyright dates from pa.c.\n \t(pa_option_optimization_table, pa_handle_option,\n@@ -1009,8 +999,7 @@\n \tv850_option_optimization_table, TARGET_DEFAULT_TARGET_FLAGS,\n \tTARGET_HANDLE_OPTION, TARGET_OPTION_OPTIMIZATION_TABLE): Move to\n \tv850-common.c.\n-\t* config/vax/vax.c (TARGET_DEFAULT_TARGET_FLAGS): Move to\n-\tvax-common.c.\n+\t* config/vax/vax.c (TARGET_DEFAULT_TARGET_FLAGS): Move to vax-common.c.\n \t* config/xtensa/xtensa.c (xtensa_option_optimization_table,\n \tTARGET_DEFAULT_TARGET_FLAGS, TARGET_OPTION_OPTIMIZATION_TABLE):\n \tMove to xtensa-common.c.\n@@ -1032,17 +1021,14 @@\n \t(init_eh, finish_eh_generation,\n \toutput_one_function_exception_table): Use\n \ttargetm_common.except_unwind_info.\n-\t(switch_to_exception_section): Use\n-\ttargetm_common.have_named_sections.\n+\t(switch_to_exception_section): Use targetm_common.have_named_sections.\n \t* explow.c: Include common/common-target.h.\n \t* expr.c: Include common/common-target.h.\n-\t(build_personality_function): Use\n-\ttargetm_common.except_unwind_info.\n+\t(build_personality_function): Use targetm_common.except_unwind_info.\n \t* function.c: Include common/common-target.h.\n \t(expand_function_end): Use targetm_common.except_unwind_info.\n \t* haifa-sched.c: Include common/common-target.h.\n-\t(sched_create_recovery_edges): Use\n-\ttargetm_common.have_named_sections.\n+\t(sched_create_recovery_edges): Use targetm_common.have_named_sections.\n \t* lto-opts.c: Include common/common-target.h instead of target.h.\n \t(lto_reissue_options): Use targetm_common.handle_option.\n \t* opts.c: Include common/common-target.h.\n@@ -1061,11 +1047,9 @@\n \t* toplev.c: Include common/common-target.h.\n \t(process_options): Use targetm_common.have_named_sections.\n \t* tree-tailcall.c: Include common/common-target.h.\n-\t(suitable_for_tail_call_opt_p): Use\n-\ttargetm_common.except_unwind_info.\n+\t(suitable_for_tail_call_opt_p): Use targetm_common.except_unwind_info.\n \t* tree.c: Include common/common-target.h.\n-\t(build_common_builtin_nodes): Use\n-\ttargetm_common.except_unwind_info.\n+\t(build_common_builtin_nodes): Use targetm_common.except_unwind_info.\n \t* varasm.c: Include common/common-target.h.\n \t(resolve_unique_section, hot_function_section,\n \tdefault_function_section): Use targetm_common.have_named_sections.\n@@ -1082,21 +1066,18 @@\n \t(can_escape): New function.\n \t(set_usage_bits): Add additional parameter; record information\n \tabout escaped locations.\n-\t(record_store): Pass EXPR corresponding to MEM to\n-\tset_usage_bits.\n+\t(record_store): Pass EXPR corresponding to MEM to set_usage_bits.\n \t(dse_step2_nospill): Set kill_on_calls based on\n \tgroup->escaped_n and group->escaped_n.\n \t(add_wild_read): Refactor into...\n \t(reset_active_stores): ... New function, and\n \t(free_read_records): ... New function.\n \t(add_non_frame_wild_read): New function.\n \t(scan_insn): Call add_non_frame_wild_read on non-const calls.\n-\t(scan_reads_nospill): Handle instructions with\n-\tnon_frame_wild_read.\n+\t(scan_reads_nospill): Handle instructions with non_frame_wild_read.\n \t(dse_step5_nospill): Call scan_reads_nospill for instructions\n \tmarked as non_frame_wild_read.\n-\t(dse_step7): Free escaped_n, escaped_p and kill_on_calls\n-\tbitmaps.\n+\t(dse_step7): Free escaped_n, escaped_p and kill_on_calls bitmaps.\n \n 2011-06-14  Joseph Myers  <joseph@codesourcery.com>\n \n@@ -1441,13 +1422,13 @@\n \n 2011-06-11  Jan Hubicka  <jh@suse.cz>\n \n-\t* lto-streamer-out.c (produce_symtab): Stream out the newly represented\n-\taliases.\n+\t* lto-streamer-out.c (produce_symtab): Stream out the newly\n+\trepresented aliases.\n \n 2011-06-11  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa-prop.c (ipa_make_edge_direct_to_target): Fix code setting varying\n-\targs.\n+\t* ipa-prop.c (ipa_make_edge_direct_to_target): Fix code setting\n+\tvarying args.\n \t(ipa_update_after_lto_read): Likewise.\n \t(ipa_write_node_info): Do not sream call_with_var_arguments.\n \t(ipa_read_node_info): Likewise."}, {"sha": "413548e4774abf38eb73668dc89e57e21c2c9112", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637c11bd1659581b3bd137b8e479301cbd6ff2b3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637c11bd1659581b3bd137b8e479301cbd6ff2b3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=637c11bd1659581b3bd137b8e479301cbd6ff2b3", "patch": "@@ -39,8 +39,7 @@\n 2011-06-21  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR testsuite/49443\n-\t* gcc.dg/vect/vect-peel-3.c: Expect to fail on vect_no_align\n-\ttargets.\n+\t* gcc.dg/vect/vect-peel-3.c: Expect to fail on vect_no_align targets.\n \t* gcc.dg/vect/vect-peel-4.c: Likewise.\n \n 2011-06-22  Christian Bruel  <christian.bruel@st.com>\n@@ -234,7 +233,7 @@\n \n 2011-06-16  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n-\tRevert \n+\tRevert:\n \t2011-06-10  Wei Guozhi  <carrot@google.com>\n \n \tPR target/45335\n@@ -280,7 +279,8 @@\n \n 2011-06-14  Janis Johnson  <janisjo@codesourcery.com>\n \n-\t* gcc.target/arm/pr45701-1.c: Ignore warnings about conflicting switches.\n+\t* gcc.target/arm/pr45701-1.c: Ignore warnings about conflicting\n+\tswitches.\n \t* gcc.target/arm/pr45701-2.c: Likewise.\n \t* gcc.target/arm/thumb-branch1.c: Likewise.\n \n@@ -1285,8 +1285,7 @@\n 2011-06-03  Richard Henderson  <rth@redhat.com>\n \t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n-\t* lib/target-supports.exp (check_sse_os_support_available): Use\n-\tmovaps.\n+\t* lib/target-supports.exp (check_sse_os_support_available): Use movaps.\n \n 2011-06-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n "}]}