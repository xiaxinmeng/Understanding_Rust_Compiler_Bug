{"sha": "804a780f854e646dcf2ec4687f597da7c738aecf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0YTc4MGY4NTRlNjQ2ZGNmMmVjNDY4N2Y1OTdkYTdjNzM4YWVjZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-01-07T23:29:27Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-01-07T23:29:27Z"}, "message": "Get builtins tests ready for linker plugin.\n\n\t* gcc.c-torture/execute/builtins/memcpy-chk.c (s2,s3,l1): Mark volatile.\n\t* gcc.c-torture/execute/builtins/memops-asm-lib.c (my_memcpy, my_bcopy, my_memset,\n\tmy_bzero): Mark used.\n\t* gcc.c-torture/execute/builtins/memset-chk.c (l1, l3): Mark volatile.\n\t* gcc.c-torture/execute/builtins/memmove-chk.c (s1,s2,s3,l1): Mark volatile.\n\t* gcc.c-torture/execute/builtins/mempcpy-chk.c (s2,s3,l1): Mark volatile\n\nFrom-SVN: r168588", "tree": {"sha": "b709a90ad2e15f6ba376cca3533ac5ff20192a40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b709a90ad2e15f6ba376cca3533ac5ff20192a40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/804a780f854e646dcf2ec4687f597da7c738aecf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804a780f854e646dcf2ec4687f597da7c738aecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/804a780f854e646dcf2ec4687f597da7c738aecf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804a780f854e646dcf2ec4687f597da7c738aecf/comments", "author": null, "committer": null, "parents": [{"sha": "17afc0fe9c02a8fa207c2d0d8519fb5f5c339929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17afc0fe9c02a8fa207c2d0d8519fb5f5c339929", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17afc0fe9c02a8fa207c2d0d8519fb5f5c339929"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "def943376257dbf964036515a33c8f13e6f1818e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=804a780f854e646dcf2ec4687f597da7c738aecf", "patch": "@@ -1,3 +1,13 @@\n+2011-01-07  Jan Hubicka  <jh@suse.cz>\n+\n+\tGet builtins tests ready for linker plugin.\n+\t* gcc.c-torture/execute/builtins/memcpy-chk.c (s2,s3,l1): Mark volatile.\n+\t* gcc.c-torture/execute/builtins/memops-asm-lib.c (my_memcpy, my_bcopy, my_memset,\n+\tmy_bzero): Mark used.\n+\t* gcc.c-torture/execute/builtins/memset-chk.c (l1, l3): Mark volatile.\n+\t* gcc.c-torture/execute/builtins/memmove-chk.c (s1,s2,s3,l1): Mark volatile.\n+\t* gcc.c-torture/execute/builtins/mempcpy-chk.c (s2,s3,l1): Mark volatile\n+\n 2011-01-07  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/46367"}, {"sha": "5b245e58e22b697f7050d5d2474ab14db6ff621c", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memcpy-chk.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.c?ref=804a780f854e646dcf2ec4687f597da7c738aecf", "patch": "@@ -12,9 +12,9 @@ extern int memcmp (const void *, const void *, size_t);\n \n const char s1[] = \"123\";\n char p[32] = \"\";\n-char *s2 = \"defg\";\n-char *s3 = \"FGH\";\n-size_t l1 = 1;\n+volatile char *s2 = \"defg\"; /* prevent constant propagation to happen when whole program assumptions are made.  */\n+volatile char *s3 = \"FGH\"; /* prevent constant propagation to happen when whole program assumptions are made.  */\n+volatile size_t l1 = 1; /* prevent constant propagation to happen when whole program assumptions are made.  */\n \n void\n __attribute__((noinline))"}, {"sha": "73b35883ed1f88583de9a62a2ffa71ac8b01166d", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memmove-chk.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.c?ref=804a780f854e646dcf2ec4687f597da7c738aecf", "patch": "@@ -11,11 +11,11 @@ extern int memcmp (const void *, const void *, size_t);\n \n #include \"chk.h\"\n \n-const char s1[] = \"123\";\n+const char s1[] = \"123\"; \n char p[32] = \"\";\n-char *s2 = \"defg\";\n-char *s3 = \"FGH\";\n-size_t l1 = 1;\n+volatile char *s2 = \"defg\"; /* prevent constant propagation to happen when whole program assumptions are made.  */\n+volatile char *s3 = \"FGH\"; /* prevent constant propagation to happen when whole program assumptions are made.  */\n+volatile size_t l1 = 1; /* prevent constant propagation to happen when whole program assumptions are made.  */\n \n void\n __attribute__((noinline))"}, {"sha": "00005298d10575c8209a5a49dd9c5eb91591b25a", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memops-asm-lib.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c?ref=804a780f854e646dcf2ec4687f597da7c738aecf", "patch": "@@ -4,6 +4,9 @@ typedef __SIZE_TYPE__ size_t;\n \n #define TEST_ABORT if (inside_main) abort()\n \n+/* LTO code is at the present to able to track that asm alias my_bcopy on builtin\n+   actually refers to this function.  See PR47181. */\n+__attribute__ ((used))\n void *\n my_memcpy (void *d, const void *s, size_t n)\n {\n@@ -14,6 +17,9 @@ my_memcpy (void *d, const void *s, size_t n)\n   return (char *) d;\n }\n \n+/* LTO code is at the present to able to track that asm alias my_bcopy on builtin\n+   actually refers to this function.  See PR47181. */\n+__attribute__ ((used))\n void\n my_bcopy (const void *s, void *d, size_t n)\n {\n@@ -31,6 +37,9 @@ my_bcopy (const void *s, void *d, size_t n)\n     }\n }\n \n+/* LTO code is at the present to able to track that asm alias my_bcopy on builtin\n+   actually refers to this function.  See PR47181. */\n+__attribute__ ((used))\n void *\n my_memset (void *d, int c, size_t n)\n {\n@@ -40,6 +49,9 @@ my_memset (void *d, int c, size_t n)\n   return (char *) d;\n }\n \n+/* LTO code is at the present to able to track that asm alias my_bcopy on builtin\n+   actually refers to this function.  See PR47181. */\n+__attribute__ ((used))\n void\n my_bzero (void *d, size_t n)\n {"}, {"sha": "7a1737c4a8f611cd19383203aeff65db24b7ba76", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/mempcpy-chk.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.c?ref=804a780f854e646dcf2ec4687f597da7c738aecf", "patch": "@@ -13,9 +13,9 @@ extern int memcmp (const void *, const void *, size_t);\n \n const char s1[] = \"123\";\n char p[32] = \"\";\n-char *s2 = \"defg\";\n-char *s3 = \"FGH\";\n-size_t l1 = 1;\n+volatile char *s2 = \"defg\"; /* prevent constant propagation to happen when whole program assumptions are made.  */\n+volatile char *s3 = \"FGH\"; /* prevent constant propagation to happen when whole program assumptions are made.  */\n+volatile size_t l1 = 1; /* prevent constant propagation to happen when whole program assumptions are made.  */\n \n void\n __attribute__((noinline))"}, {"sha": "902a8850382fe4fe471d672397b5de788fc14495", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memset-chk.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804a780f854e646dcf2ec4687f597da7c738aecf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.c?ref=804a780f854e646dcf2ec4687f597da7c738aecf", "patch": "@@ -13,8 +13,8 @@ extern int memcmp (const void *, const void *, size_t);\n \n char buffer[32];\n int argc = 1;\n-size_t l1 = 1;\n-char *s3 = \"FGH\";\n+volatile size_t l1 = 1;  /* prevent constant propagation to happen when whole program assumptions are made.  */\n+volatile char *s3 = \"FGH\"; /* prevent constant propagation to happen when whole program assumptions are made.  */\n char *s4;\n \n void"}]}