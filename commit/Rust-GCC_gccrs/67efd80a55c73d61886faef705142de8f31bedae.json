{"sha": "67efd80a55c73d61886faef705142de8f31bedae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlZmQ4MGE1NWM3M2Q2MTg4NmZhZWY3MDUxNDJkZThmMzFiZWRhZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-17T10:54:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-17T10:54:32Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r151797", "tree": {"sha": "33b4fb23d2533e99951dededbbb44ca1c239f714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33b4fb23d2533e99951dededbbb44ca1c239f714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67efd80a55c73d61886faef705142de8f31bedae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67efd80a55c73d61886faef705142de8f31bedae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67efd80a55c73d61886faef705142de8f31bedae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67efd80a55c73d61886faef705142de8f31bedae/comments", "author": null, "committer": null, "parents": [{"sha": "3fc5d116bc25e32ce6f8d3a11483c10dc0522d87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc5d116bc25e32ce6f8d3a11483c10dc0522d87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fc5d116bc25e32ce6f8d3a11483c10dc0522d87"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "c171f5940f11cd0c9d8ad6072a1143a7b98c97e7", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=67efd80a55c73d61886faef705142de8f31bedae", "patch": "@@ -61,9 +61,11 @@ package Prj.Ext is\n    -------------------------\n    -- External References --\n    -------------------------\n+\n    --  External references influence the way a project tree is processed (in\n    --  particular they provide the values for the typed string variables that\n    --  are then used in case constructions).\n+\n    --  External references are project-tree specific, so that when multiple\n    --  trees are loaded in parallel we can have different scenarios (or even\n    --  load the same tree twice and see different views of it)."}, {"sha": "7ab7ea047c67bdc877cbc71cfe9c282624d98e8b", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=67efd80a55c73d61886faef705142de8f31bedae", "patch": "@@ -48,13 +48,14 @@ package body Prj.Pars is\n       Reset_Tree        : Boolean := True;\n       In_Node_Tree      : Prj.Tree.Project_Node_Tree_Ref := null)\n    is\n-      Project_Node      : Project_Node_Id := Empty_Node;\n-      The_Project       : Project_Id      := No_Project;\n-      Success           : Boolean         := True;\n-      Current_Dir       : constant String := Get_Current_Dir;\n-      Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref := In_Node_Tree;\n+      Project_Node            : Project_Node_Id := Empty_Node;\n+      The_Project             : Project_Id      := No_Project;\n+      Success                 : Boolean         := True;\n+      Current_Dir             : constant String := Get_Current_Dir;\n+      Project_Node_Tree       : Prj.Tree.Project_Node_Tree_Ref := In_Node_Tree;\n       Automatically_Generated : Boolean;\n       Config_File_Path        : String_Access;\n+\n    begin\n       if Project_Node_Tree = null then\n          Project_Node_Tree := new Project_Node_Tree_Data;"}, {"sha": "1ed78ab227be934fd39c024e403270927139f842", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=67efd80a55c73d61886faef705142de8f31bedae", "patch": "@@ -1341,8 +1341,10 @@ package body Prj.Part is\n          --  Read the original casing of the project name\n \n          declare\n-            Loc : Source_Ptr := Location_Of (Project, In_Tree);\n+            Loc : Source_Ptr;\n+\n          begin\n+            Loc := Location_Of (Project, In_Tree);\n             for J in 1 .. Name_Len loop\n                Name_Buffer (J) := Sinput.Source (Loc);\n                Loc := Loc + 1;"}, {"sha": "0cd20c8f19def63f93c66083532f7f5694b1d77c", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=67efd80a55c73d61886faef705142de8f31bedae", "patch": "@@ -1041,8 +1041,8 @@ package body Prj.Proc is\n                      end if;\n                   end if;\n \n-                  Value := Prj.Ext.Value_Of\n-                    (From_Project_Node_Tree, Name, Default);\n+                  Value :=\n+                    Prj.Ext.Value_Of (From_Project_Node_Tree, Name, Default);\n \n                   if Value = No_Name then\n                      if not Quiet_Output then\n@@ -2256,9 +2256,8 @@ package body Prj.Proc is\n          Check (In_Tree, Project, Flags);\n       end if;\n \n-      --  If main project is an extending all project, set the object\n-      --  directory of all virtual extending projects to the object\n-      --  directory of the main project.\n+      --  If main project is an extending all project, set object directory of\n+      --  all virtual extending projects to object directory of main project.\n \n       if Project /= No_Project\n         and then\n@@ -2425,12 +2424,13 @@ package body Prj.Proc is\n          declare\n             Imported         : Project_List;\n             Declaration_Node : Project_Node_Id  := Empty_Node;\n-            Name             : constant Name_Id :=\n-                                 Name_Of\n-                                   (From_Project_Node, From_Project_Node_Tree);\n-            Name_Node     : constant Tree_Private_Part.Project_Name_And_Node :=\n-              Tree_Private_Part.Projects_Htable.Get\n-                (From_Project_Node_Tree.Projects_HT, Name);\n+\n+            Name : constant Name_Id :=\n+                     Name_Of (From_Project_Node, From_Project_Node_Tree);\n+\n+            Name_Node : constant Tree_Private_Part.Project_Name_And_Node :=\n+                          Tree_Private_Part.Projects_Htable.Get\n+                            (From_Project_Node_Tree.Projects_HT, Name);\n \n          begin\n             Project := Processed_Projects.Get (Name);"}, {"sha": "53f2eefc8b8dcbf4be444542fc11e18847414c41", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67efd80a55c73d61886faef705142de8f31bedae/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=67efd80a55c73d61886faef705142de8f31bedae", "patch": "@@ -1000,8 +1000,8 @@ package Prj.Tree is\n \n    package Tree_Private_Part is\n \n-      --  This is conceptually in the private part\n-      --  However, for efficiency, some packages are accessing it directly\n+      --  This is conceptually in the private part. However, for efficiency,\n+      --  some packages are accessing it directly.\n \n       type Project_Node_Record is record\n \n@@ -1377,6 +1377,7 @@ package Prj.Tree is\n       Key        => Name_Id,\n       Hash       => Hash,\n       Equal      => \"=\");\n+   --  Comment required describing what this table is used for ???\n \n    type Project_Node_Tree_Data is record\n       Project_Nodes : Tree_Private_Part.Project_Node_Table.Instance;\n@@ -1399,7 +1400,6 @@ package Prj.Tree is\n       --  particular when using different compilers with different default\n       --  search directories.\n    end record;\n-   --  The data for a project node tree\n \n    procedure Free (Proj : in out Project_Node_Tree_Ref);\n    --  Free memory used by Prj"}]}