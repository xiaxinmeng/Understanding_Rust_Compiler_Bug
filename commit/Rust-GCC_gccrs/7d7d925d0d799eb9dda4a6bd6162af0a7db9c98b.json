{"sha": "7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q3ZDkyNWQwZDc5OWViOWRkYTRhNmJkNjE2MmFmMGE3ZGI5Yzk4Yg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-22T14:27:19Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-12T09:48:35Z"}, "message": "Print warning diagnostics for -flto issues.\n\ngcc/ChangeLog:\n\n\t* lto-wrapper.c (print_lto_docs_link): New function.\n\t(run_gcc): Print warning about missing job server detection\n\tafter we know NR of partitions. Do the same for -flto{,=1}.\n\t* opts.c (get_option_html_page): Support -flto option.", "tree": {"sha": "edfa09340001ff615c6af55c16446c7a89b2f5b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edfa09340001ff615c6af55c16446c7a89b2f5b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "227a2ecf663d69972b851f51f1934d18927b62cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/227a2ecf663d69972b851f51f1934d18927b62cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/227a2ecf663d69972b851f51f1934d18927b62cd"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "7931ae3fadab4e912790a443c8af4e03539ba8f5", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 37, "deletions": 2, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b", "patch": "@@ -48,6 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"simple-object.h\"\n #include \"lto-section-names.h\"\n #include \"collect-utils.h\"\n+#include \"opts-diagnostic.h\"\n \n /* Environment variable, used for passing the names of offload targets from GCC\n    driver to lto-wrapper.  */\n@@ -1322,6 +1323,23 @@ jobserver_active_p (void)\n     return JS_PREFIX \"cannot access %<\" JS_NEEDLE \"%> file descriptors\";\n }\n \n+/* Print link to -flto documentation with a hint message.  */\n+\n+void\n+print_lto_docs_link ()\n+{\n+  const char *url = get_option_url (NULL, OPT_flto);\n+\n+  pretty_printer pp;\n+  pp.url_format = URL_FORMAT_DEFAULT;\n+  pp_string (&pp, \"see the \");\n+  pp_begin_url (&pp, url);\n+  pp_string (&pp, \"%<-flto%> option documentation\");\n+  pp_end_url (&pp);\n+  pp_string (&pp, \" for more information\");\n+  inform (UNKNOWN_LOCATION, pp_formatted_text (&pp));\n+}\n+\n /* Test that a make command is present and working, return true if so.  */\n \n static bool\n@@ -1356,8 +1374,10 @@ run_gcc (unsigned argc, char *argv[])\n   char *collect_gcc_options;\n   int parallel = 0;\n   int jobserver = 0;\n+  bool jobserver_requested = false;\n   int auto_parallel = 0;\n   bool no_partition = false;\n+  const char *jobserver_error = NULL;\n   vec<cl_decoded_option> fdecoded_options;\n   fdecoded_options.create (16);\n   vec<cl_decoded_option> offload_fdecoded_options = vNULL;\n@@ -1502,6 +1522,7 @@ run_gcc (unsigned argc, char *argv[])\n \t    {\n \t      parallel = 1;\n \t      jobserver = 1;\n+\t      jobserver_requested = true;\n \t    }\n \t  else if (strcmp (option->arg, \"auto\") == 0)\n \t    {\n@@ -1556,15 +1577,15 @@ run_gcc (unsigned argc, char *argv[])\n     {\n       lto_mode = LTO_MODE_LTO;\n       jobserver = 0;\n+      jobserver_requested = false;\n       auto_parallel = 0;\n       parallel = 0;\n     }\n   else\n     {\n-      const char *jobserver_error = jobserver_active_p ();\n+      jobserver_error = jobserver_active_p ();\n       if (jobserver && jobserver_error != NULL)\n \t{\n-\t  warning (0, jobserver_error);\n \t  /* Fall back to auto parallelism.  */\n \t  jobserver = 0;\n \t  auto_parallel = 1;\n@@ -1879,6 +1900,20 @@ run_gcc (unsigned argc, char *argv[])\n       maybe_unlink (ltrans_output_file);\n       ltrans_output_file = NULL;\n \n+      if (nr > 1)\n+\t{\n+\t  if (jobserver_requested && jobserver_error != NULL)\n+\t    {\n+\t      warning (0, jobserver_error);\n+\t      print_lto_docs_link ();\n+\t    }\n+\t  else if (parallel == 0)\n+\t    {\n+\t      warning (0, \"using serial compilation of %d LTRANS jobs\", nr);\n+\t      print_lto_docs_link ();\n+\t    }\n+\t}\n+\n       if (parallel)\n \t{\n \t  makefile = make_temp_file (\".mk\");"}, {"sha": "fe6fddbf095d27e340b96195692c4dbd3360525a", "filename": "gcc/opts.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=7d7d925d0d799eb9dda4a6bd6162af0a7db9c98b", "patch": "@@ -3243,9 +3243,13 @@ get_option_html_page (int option_index)\n   const cl_option *cl_opt = &cl_options[option_index];\n \n   /* Analyzer options are on their own page.  */\n-  if (strstr(cl_opt->opt_text, \"analyzer-\"))\n+  if (strstr (cl_opt->opt_text, \"analyzer-\"))\n     return \"gcc/Static-Analyzer-Options.html\";\n \n+  /* Handle -flto= option.  */\n+  if (strstr (cl_opt->opt_text, \"flto\"))\n+    return \"gcc/Optimize-Options.html\";\n+\n #ifdef CL_Fortran\n   if ((cl_opt->flags & CL_Fortran) != 0\n       /* If it is option common to both C/C++ and Fortran, it is documented"}]}