{"sha": "4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY0ZmQ4YWUyY2U4YWQ3Y2NhZjk5NmQyMWVhN2U4MjM4OGJiMGUyMw==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-04-23T09:26:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:33Z"}, "message": "[Ada] Update output of verbose error summary\n\n2020-06-18  Ghjuvan Lacambre  <lacambre@adacore.com>\n\ngcc/ada/\n\n\t* errout.adb (Write_Error_Summary): Display number of warnings\n\ttreated as errors.\n\t* errutil.ads: Update comment.", "tree": {"sha": "54f3d2a7dc01986c25d8e9a5c69343866068ecab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54f3d2a7dc01986c25d8e9a5c69343866068ecab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3874e79d94ef6b8adb99373f2780847633021d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3874e79d94ef6b8adb99373f2780847633021d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3874e79d94ef6b8adb99373f2780847633021d16"}], "stats": {"total": 82, "additions": 64, "deletions": 18}, "files": [{"sha": "8c60a3f93596816499ee9fa2abd3ceebfae36fa9", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 63, "deletions": 16, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23", "patch": "@@ -1870,30 +1870,77 @@ package body Errout is\n             Write_Str (\" errors\");\n          end if;\n \n-         if Warnings_Detected - Warning_Info_Messages /= 0 then\n-            Write_Str (\", \");\n-            Write_Int (Warnings_Detected);\n-            Write_Str (\" warning\");\n+         --  We now need to output warnings. When using -gnatwe, all warnings\n+         --  should be treated as errors, except for warnings originating from\n+         --  the use of the Compile_Time_Warning pragma. Another situation\n+         --  where a warning might be treated as an error is when the source\n+         --  code contains a Warning_As_Error pragma.\n+         --  When warnings are treated as errors, we still log them as\n+         --  warnings, but we add a message denoting how many of these warnings\n+         --  are also errors.\n \n-            if Warnings_Detected - Warning_Info_Messages /= 1 then\n-               Write_Char ('s');\n-            end if;\n+         declare\n+            Warnings_Count : constant Int :=\n+               Warnings_Detected - Warning_Info_Messages;\n+\n+            Compile_Time_Warnings : Int;\n+            --  Number of warnings that come from a Compile_Time_Warning\n+            --  pragma.\n+\n+            Non_Compile_Time_Warnings : Int;\n+            --  Number of warnings that do not come from a Compile_Time_Warning\n+            --  pragmas.\n \n-            if Warning_Mode = Treat_As_Error then\n-               Write_Str (\" (treated as error\");\n+         begin\n+            if Warnings_Count > 0 then\n+               Write_Str (\", \");\n+               Write_Int (Warnings_Count);\n+               Write_Str (\" warning\");\n \n-               if Warnings_Detected /= 1 then\n+               if Warnings_Count > 1 then\n                   Write_Char ('s');\n                end if;\n \n-               Write_Char (')');\n+               Compile_Time_Warnings := Count_Compile_Time_Pragma_Warnings;\n+               Non_Compile_Time_Warnings :=\n+                  Warnings_Count - Compile_Time_Warnings;\n+\n+               if Warning_Mode = Treat_As_Error\n+                 and then Non_Compile_Time_Warnings > 0\n+               then\n+                  Write_Str (\" (\");\n+\n+                  if Compile_Time_Warnings > 0 then\n+                     Write_Int (Non_Compile_Time_Warnings);\n+                     Write_Str (\" \");\n+                  end if;\n+\n+                  Write_Str (\"treated as error\");\n \n-            elsif Warnings_Treated_As_Errors /= 0 then\n-               Write_Str (\" (\");\n-               Write_Int (Warnings_Treated_As_Errors);\n-               Write_Str (\" treated as errors)\");\n+                  if Non_Compile_Time_Warnings > 1 then\n+                     Write_Char ('s');\n+                  end if;\n+\n+                  Write_Char (')');\n+\n+               elsif Warnings_Treated_As_Errors > 0 then\n+                  Write_Str (\" (\");\n+\n+                  if Warnings_Treated_As_Errors /= Warnings_Count then\n+                     Write_Int (Warnings_Treated_As_Errors);\n+                     Write_Str (\" \");\n+                  end if;\n+\n+                  Write_Str (\"treated as error\");\n+\n+                  if Warnings_Treated_As_Errors > 1 then\n+                     Write_Str (\"s\");\n+                  end if;\n+\n+                  Write_Str (\")\");\n+               end if;\n             end if;\n-         end if;\n+         end;\n \n          if Warning_Info_Messages + Report_Info_Messages /= 0 then\n             Write_Str (\", \");"}, {"sha": "56bd242eaff04f74e3feb4002cbe5aa974f922b3", "filename": "gcc/ada/errutil.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23/gcc%2Fada%2Ferrutil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23/gcc%2Fada%2Ferrutil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.ads?ref=4f4fd8ae2ce8ad7ccaf996d21ea7e82388bb0e23", "patch": "@@ -30,8 +30,7 @@\n --  Err_Vars. Like Errout, it also uses the common variables and routines\n --  in package Erroutc.\n \n---  This package is used by the preprocessor (gprep.adb) and the project\n---  manager (prj-err.ads).\n+--  This package is used by the preprocessor (gprep.adb).\n \n with Styleg;\n with Types; use Types;"}]}