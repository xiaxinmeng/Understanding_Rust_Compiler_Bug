{"sha": "bed7dc7a9f5ed1ad3f65fd3e5438e69a9fcd251d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkN2RjN2E5ZjVlZDFhZDNmNjVmZDNlNTQzOGU2OWE5ZmNkMjUxZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-27T04:09:09Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-27T04:09:09Z"}, "message": "(dbxout_symbol): Distinguish implicit C++ typedefs\nfrom explicit C typedefs for structs, using DECL_SOURCE_LINE.\n\nFrom-SVN: r1690", "tree": {"sha": "43bde2381af6463852ea46d2102a11902f0a9b07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43bde2381af6463852ea46d2102a11902f0a9b07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bed7dc7a9f5ed1ad3f65fd3e5438e69a9fcd251d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed7dc7a9f5ed1ad3f65fd3e5438e69a9fcd251d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed7dc7a9f5ed1ad3f65fd3e5438e69a9fcd251d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed7dc7a9f5ed1ad3f65fd3e5438e69a9fcd251d/comments", "author": null, "committer": null, "parents": [{"sha": "65e15c1b208edf5addad113bad65fffd3269fcb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e15c1b208edf5addad113bad65fffd3269fcb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e15c1b208edf5addad113bad65fffd3269fcb0"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "5f9e4b5d2b54282ac0e475c426ae58579cb69911", "filename": "gcc/dbxout.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed7dc7a9f5ed1ad3f65fd3e5438e69a9fcd251d/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed7dc7a9f5ed1ad3f65fd3e5438e69a9fcd251d/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=bed7dc7a9f5ed1ad3f65fd3e5438e69a9fcd251d", "patch": "@@ -1413,14 +1413,15 @@ dbxout_symbol (decl, local)\n \t    /* Handle the case of a C++ structure or union\n \t       where the TYPE_NAME is a TYPE_DECL\n \t       which gives both a typedef name and a tag.  */\n-\t    /* dbx requires the tag first and the typedef second.\n-\t       ??? there is a bug here.  It generates spurious tags\n-\t       for C code.  */\n+\t    /* dbx requires the tag first and the typedef second.  */\n \t    if ((TREE_CODE (type) == RECORD_TYPE\n \t\t || TREE_CODE (type) == UNION_TYPE)\n \t\t&& TYPE_NAME (type) == decl\n \t\t&& !(use_gnu_debug_info_extensions && have_used_extensions)\n-\t\t&& !TREE_ASM_WRITTEN (TYPE_NAME (type)))\n+\t\t&& !TREE_ASM_WRITTEN (TYPE_NAME (type))\n+\t\t/* Distinguish the implicit typedefs of C++\n+\t\t   from explicit ones that might be found in C.  */\n+\t\t&& DECL_SOURCE_LINE (decl) == 0)\n \t      {\n \t\ttree name = TYPE_NAME (type);\n \t\tif (TREE_CODE (name) == TYPE_DECL)"}]}