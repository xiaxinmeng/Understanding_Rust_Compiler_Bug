{"sha": "1649d92fb3790548b583dbc6a93e0383a90b9fea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY0OWQ5MmZiMzc5MDU0OGI1ODNkYmM2YTkzZTAzODNhOTBiOWZlYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-01-25T20:10:37Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-01-25T20:10:37Z"}, "message": "re PR rtl-optimization/8492 (GCC spins forever compiling loop)\n\n\tPR opt/8492\n\t* gcse.c (one_cprop_pass): Delete unreachable blocks.\n\nCo-Authored-By: Eric Botcazou <ebotcazou@libertysurf.fr>\n\nFrom-SVN: r61798", "tree": {"sha": "c5e3692b8273c08f9bd23aee25159170edc35911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5e3692b8273c08f9bd23aee25159170edc35911"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1649d92fb3790548b583dbc6a93e0383a90b9fea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1649d92fb3790548b583dbc6a93e0383a90b9fea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1649d92fb3790548b583dbc6a93e0383a90b9fea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1649d92fb3790548b583dbc6a93e0383a90b9fea/comments", "author": null, "committer": null, "parents": [{"sha": "6ca86a1a1e15bb16d112991c130acee8e13686ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca86a1a1e15bb16d112991c130acee8e13686ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ca86a1a1e15bb16d112991c130acee8e13686ab"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "b6e21f7ff0641fe7ebf496270a0cc16f302d95fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1649d92fb3790548b583dbc6a93e0383a90b9fea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1649d92fb3790548b583dbc6a93e0383a90b9fea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1649d92fb3790548b583dbc6a93e0383a90b9fea", "patch": "@@ -1,3 +1,8 @@\n+Sat Jan 25 21:04:33 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\t\t\t      Eric Botcazou <ebotcazou@libertysurf.fr>\n+\tPR opt/8492\n+\t* gcse.c (one_cprop_pass): Delete unreachable blocks.\n+\n 2003-01-25  Richard Henderson  <rth@redhat.com>\n \n \t* config/ia64/ia64.c (ia64_rwreloc_select_rtx_section): Rename"}, {"sha": "272e39a915b9014fedbacd768b3b71b446cd8dbf", "filename": "gcc/gcse.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1649d92fb3790548b583dbc6a93e0383a90b9fea/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1649d92fb3790548b583dbc6a93e0383a90b9fea/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=1649d92fb3790548b583dbc6a93e0383a90b9fea", "patch": "@@ -4378,6 +4378,7 @@ local_cprop_pass (alter_jumps)\n   rtx insn;\n   struct reg_use *reg_used;\n   rtx libcall_stack[MAX_NESTED_LIBCALLS + 1], *libcall_sp;\n+  bool changed = false;\n \n   cselib_init ();\n   libcall_sp = &libcall_stack[MAX_NESTED_LIBCALLS];\n@@ -4409,13 +4410,19 @@ local_cprop_pass (alter_jumps)\n \t\t   reg_used++, reg_use_count--)\n \t\tif (do_local_cprop (reg_used->reg_rtx, insn, alter_jumps,\n \t\t    libcall_sp))\n-\t\t  break;\n+\t\t  {\n+\t\t    changed = true;\n+\t\t    break;\n+\t\t  }\n \t    }\n \t  while (reg_use_count);\n \t}\n       cselib_process_insn (insn);\n     }\n   cselib_finish ();\n+  /* Global analysis may get into infinite loops for unreachable blocks.  */\n+  if (changed && alter_jumps)\n+    delete_unreachable_blocks ();\n }\n \n /* Forward propagate copies.  This includes copies and constants.  Return\n@@ -4506,6 +4513,9 @@ one_cprop_pass (pass, cprop_jumps, bypass_jumps)\n       fprintf (gcse_file, \"%d const props, %d copy props\\n\\n\",\n \t       const_prop_count, copy_prop_count);\n     }\n+  /* Global analysis may get into infinite loops for unreachable blocks.  */\n+  if (changed && cprop_jumps)\n+    delete_unreachable_blocks ();\n \n   return changed;\n }"}, {"sha": "d26eb165e2cef2ccb2bd4ad9b30a726b513efda6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1649d92fb3790548b583dbc6a93e0383a90b9fea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1649d92fb3790548b583dbc6a93e0383a90b9fea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1649d92fb3790548b583dbc6a93e0383a90b9fea", "patch": "@@ -1,3 +1,8 @@\n+Sat Jan 25 21:06:49 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR opt/8492\n+\t* gcc.c-torture/compile/20030125-1.c\n+\n 2003-01-25  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/9403\n@@ -19,7 +24,7 @@\n \n \t* gcc.c-torture/execute/switch-1.c: New test case.\n \n-Sat Jan 25 12:32:55 CET 2003  Jan HUbicka  <jh@suse.cz>\n+Sat Jan 25 12:32:55 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.c-torture/execute/20030125-1.[cx]: New test.\n "}, {"sha": "656304e2d67b10c0354013dd6de027bf6c6ce850", "filename": "gcc/testsuite/gcc.c-torture/compile/20030125-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1649d92fb3790548b583dbc6a93e0383a90b9fea/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030125-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1649d92fb3790548b583dbc6a93e0383a90b9fea/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030125-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030125-1.c?ref=1649d92fb3790548b583dbc6a93e0383a90b9fea", "patch": "@@ -0,0 +1,24 @@\n+ int count;\n+\n+ int func(int *valp) {\n+   int val, locked = 0;\n+\n+   while ((val = *valp) != 0) {\n+     if (count) {\n+       if (count)\n+         locked = 1;\n+       else\n+         locked = 1;\n+\n+     if (!locked)\n+       continue;\n+     }\n+\n+     if (!count)\n+       count--;\n+\n+     break;\n+   }\n+\n+   return val;\n+ }"}]}