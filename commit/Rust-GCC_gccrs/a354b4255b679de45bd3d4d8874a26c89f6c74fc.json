{"sha": "a354b4255b679de45bd3d4d8874a26c89f6c74fc", "node_id": "C_kwDOANBUbNoAKGEzNTRiNDI1NWI2NzlkZTQ1YmQzZDRkODg3NGEyNmM4OWY2Yzc0ZmM", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-11-08T14:34:03Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-11-08T14:49:45Z"}, "message": "rs6000: Miscellaneous uses of rs6000_builtins_decl_x\n\nThere are a few leftover places where we use the old rs6000_builtins_decl\narray, but we need to use rs6000_builtins_decl_x instead when the new\nbuiltins infrastructure is in play.\n\n2021-11-08  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000.c (rs6000_builtin_reciprocal): Use\n\trs6000_builtin_decls_x when appropriate.\n\t(add_condition_to_bb): Likewise.\n\t(rs6000_atomic_assign_expand_fenv): Likewise.", "tree": {"sha": "d790d7e898b6755dd28321032693eeec3043d14a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d790d7e898b6755dd28321032693eeec3043d14a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a354b4255b679de45bd3d4d8874a26c89f6c74fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a354b4255b679de45bd3d4d8874a26c89f6c74fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a354b4255b679de45bd3d4d8874a26c89f6c74fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a354b4255b679de45bd3d4d8874a26c89f6c74fc/comments", "author": null, "committer": null, "parents": [{"sha": "71cf7c0a0e929550f82b4ac70ac1fd068253039e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71cf7c0a0e929550f82b4ac70ac1fd068253039e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71cf7c0a0e929550f82b4ac70ac1fd068253039e"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "1f2aa60348b642073543ac4fdc9ae29306d0cc31", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a354b4255b679de45bd3d4d8874a26c89f6c74fc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a354b4255b679de45bd3d4d8874a26c89f6c74fc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a354b4255b679de45bd3d4d8874a26c89f6c74fc", "patch": "@@ -22743,12 +22743,16 @@ rs6000_builtin_reciprocal (tree fndecl)\n       if (!RS6000_RECIP_AUTO_RSQRTE_P (V2DFmode))\n \treturn NULL_TREE;\n \n+      if (new_builtins_are_live)\n+\treturn rs6000_builtin_decls_x[RS6000_BIF_RSQRT_2DF];\n       return rs6000_builtin_decls[VSX_BUILTIN_RSQRT_2DF];\n \n     case VSX_BUILTIN_XVSQRTSP:\n       if (!RS6000_RECIP_AUTO_RSQRTE_P (V4SFmode))\n \treturn NULL_TREE;\n \n+      if (new_builtins_are_live)\n+\treturn rs6000_builtin_decls_x[RS6000_BIF_RSQRT_4SF];\n       return rs6000_builtin_decls[VSX_BUILTIN_RSQRT_4SF];\n \n     default:\n@@ -25371,7 +25375,10 @@ add_condition_to_bb (tree function_decl, tree version_decl,\n \n   tree bool_zero = build_int_cst (bool_int_type_node, 0);\n   tree cond_var = create_tmp_var (bool_int_type_node);\n-  tree predicate_decl = rs6000_builtin_decls [(int) RS6000_BUILTIN_CPU_SUPPORTS];\n+  tree predicate_decl\n+    = new_builtins_are_live\n+\t? rs6000_builtin_decls_x[(int) RS6000_BIF_CPU_SUPPORTS]\n+\t: rs6000_builtin_decls [(int) RS6000_BUILTIN_CPU_SUPPORTS];\n   const char *arg_str = rs6000_clone_map[clone_isa].name;\n   tree predicate_arg = build_string_literal (strlen (arg_str) + 1, arg_str);\n   gimple *call_cond_stmt = gimple_build_call (predicate_decl, 1, predicate_arg);\n@@ -28011,8 +28018,12 @@ rs6000_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n       return;\n     }\n \n-  tree mffs = rs6000_builtin_decls[RS6000_BUILTIN_MFFS];\n-  tree mtfsf = rs6000_builtin_decls[RS6000_BUILTIN_MTFSF];\n+  tree mffs\n+    = new_builtins_are_live ? rs6000_builtin_decls_x[RS6000_BIF_MFFS]\n+\t\t\t    : rs6000_builtin_decls[RS6000_BUILTIN_MFFS];\n+  tree mtfsf\n+    = new_builtins_are_live ? rs6000_builtin_decls_x[RS6000_BIF_MTFSF]\n+\t\t\t    : rs6000_builtin_decls[RS6000_BUILTIN_MTFSF];\n   tree call_mffs = build_call_expr (mffs, 0);\n \n   /* Generates the equivalent of feholdexcept (&fenv_var)"}]}