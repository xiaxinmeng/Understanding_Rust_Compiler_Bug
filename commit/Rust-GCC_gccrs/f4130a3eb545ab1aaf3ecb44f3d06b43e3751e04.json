{"sha": "f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "node_id": "C_kwDOANBUbNoAKGY0MTMwYTNlYjU0NWFiMWFhZjNlY2I0NGYzZDA2YjQzZTM3NTFlMDQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-29T20:18:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-04T20:53:29Z"}, "message": "libstdc++: Deprecate std::unexpected and handler functions\n\nThese functions have been deprecated since C++11, and were removed in\nC++17. The proposal P0323 wants to reuse the name std::unexpected for a\nclass template, so we will need to stop defining the current function\nfor C++23 anyway.\n\nThis marks them as deprecated for C++11 and up, to warn users they won't\ncontinue to be available. It disables them for C++17 and up, unless the\n_GLIBCXX_USE_DEPRECATED macro is defined.\n\nThe <unwind-cxx.h> header uses std::unexpected_handler in the public\nAPI, but since that type is the same as std::terminate_handler we can\njust use that instead, to avoid warnings about it being deprecated.\n\nlibstdc++-v3/ChangeLog:\n\n\t* doc/xml/manual/evolution.xml: Document deprecations.\n\t* doc/html/*: Regenerate.\n\t* libsupc++/exception (unexpected_handler, unexpected)\n\t(get_unexpected, set_unexpected): Add deprecated attribute.\n\tDo not define without _GLIBCXX_USE_DEPRECATED for C++17 and up.\n\t* libsupc++/eh_personality.cc (PERSONALITY_FUNCTION): Disable\n\tdeprecated warnings.\n\t* libsupc++/eh_ptr.cc (std::rethrow_exception): Likewise.\n\t* libsupc++/eh_terminate.cc: Likewise.\n\t* libsupc++/eh_throw.cc (__cxa_init_primary_exception):\n\tLikewise.\n\t* libsupc++/unwind-cxx.h (struct __cxa_exception): Use\n\tterminate_handler instead of unexpected_handler.\n\t(struct __cxa_dependent_exception): Likewise.\n\t(__unexpected): Likewise.\n\t* testsuite/18_support/headers/exception/synopsis.cc: Add\n\tdg-warning for deprecated warning.\n\t* testsuite/18_support/exception_ptr/60612-unexpected.cc:\n\tDisable deprecated warnings.\n\t* testsuite/18_support/set_unexpected.cc: Likewise.\n\t* testsuite/18_support/unexpected_handler.cc: Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/lambda/lambda-eh2.C: Add dg-warning for new\n\tdeprecation warnings.\n\t* g++.dg/cpp0x/noexcept06.C: Likewise.\n\t* g++.dg/cpp0x/noexcept07.C: Likewise.\n\t* g++.dg/eh/forced3.C: Likewise.\n\t* g++.dg/eh/unexpected1.C: Likewise.\n\t* g++.old-deja/g++.eh/spec1.C: Likewise.\n\t* g++.old-deja/g++.eh/spec2.C: Likewise.\n\t* g++.old-deja/g++.eh/spec3.C: Likewise.\n\t* g++.old-deja/g++.eh/spec4.C: Likewise.\n\t* g++.old-deja/g++.mike/eh33.C: Likewise.\n\t* g++.old-deja/g++.mike/eh34.C: Likewise.\n\t* g++.old-deja/g++.mike/eh50.C: Likewise.\n\t* g++.old-deja/g++.mike/eh51.C: Likewise.", "tree": {"sha": "9216f737dfea5c6ac5d76f21b1232c8878e16aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9216f737dfea5c6ac5d76f21b1232c8878e16aa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79fe28d2c4b78562de095c1843d8d3b1a1e7d2d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79fe28d2c4b78562de095c1843d8d3b1a1e7d2d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79fe28d2c4b78562de095c1843d8d3b1a1e7d2d7"}], "stats": {"total": 93, "additions": 65, "deletions": 28}, "files": [{"sha": "eddd3c9dcc5e1e5ab4070659ec4444783a1afb62", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-eh2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-eh2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-eh2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-eh2.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -7,7 +7,7 @@\n \n int main( void )\n {\n-  std::set_unexpected( []{ throw 0; } );\n+  std::set_unexpected( []{ throw 0; } ); // { dg-warning \"deprecated\" }\n   try\n     {\n       []() throw( int ) { throw nullptr; }();\t// { dg-warning \"deprecated\" }"}, {"sha": "ea152237d5450a95e96a6c4ac8c7c1765afa12ba", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept06.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept06.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept06.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept06.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -23,7 +23,7 @@ void f() noexcept\n \n int main()\n {\n-  std::set_unexpected (my_unexpected);\n+  std::set_unexpected (my_unexpected); // { dg-warning \"deprecated\" }\n   std::set_terminate (my_terminate);\n   f();\n   return 1;"}, {"sha": "dbcc23e9610fd1b3f5c4d6f63c53c50ece507a8b", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept07.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept07.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept07.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept07.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -18,7 +18,7 @@ void f() throw()\n \n int main()\n {\n-  std::set_unexpected (my_unexpected);\n+  std::set_unexpected (my_unexpected); // { dg-warning \"deprecated\" }\n   f();\n   return 1;\n }"}, {"sha": "51cbc8de8ba13e06c76aa2fdd8719db6028aaee9", "filename": "gcc/testsuite/g++.dg/eh/forced3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fforced3.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -53,7 +53,7 @@ doit () throw()\n \n int main()\n { \n-  std::set_unexpected (handle_unexpected);\n+  std::set_unexpected (handle_unexpected); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n   doit ();\n   abort ();\n }"}, {"sha": "973ebeacd033e11457ce88d97f95e46f74f937e2", "filename": "gcc/testsuite/g++.dg/eh/unexpected1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funexpected1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funexpected1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Funexpected1.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -30,7 +30,7 @@ doit () throw (Two)\t\t\t// { dg-warning \"deprecated\" \"\" { target { c++11 } } }\n \n int main ()\n {\n-  std::set_unexpected (handle_unexpected);\n+  std::set_unexpected (handle_unexpected); // { dg-warning \"deprecated\" \"\" { target { c++11 } } }\n \n   try\n   {"}, {"sha": "3c832fd2105123b350e9933e5ed486a514a3cb82", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec1.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -17,7 +17,7 @@ f () throw (char, int, std::bad_exception)\t// { dg-warning \"deprecated\" \"\" { tar\n int main ()\n {\n   std::set_terminate (my_term);\n-  std::set_unexpected (my_unexp);\n+  std::set_unexpected (my_unexp); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n \n   try\n     {"}, {"sha": "2f7556be44dd3bc71d3309caf01dbd8f130c4d33", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec2.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -17,7 +17,7 @@ f () throw (int, std::bad_exception)\t// { dg-warning \"deprecated\" \"\" { target c+\n int main ()\n {\n   std::set_terminate (my_term);\n-  std::set_unexpected (my_unexp);\n+  std::set_unexpected (my_unexp); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n \n   try\n     {"}, {"sha": "278de2ef9f4aff3f5abe08553723199e8d5d590e", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec3.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -17,7 +17,7 @@ f () throw (std::bad_exception)\t\t// { dg-warning \"deprecated\" \"\" { target c++11\n int main ()\n {\n   std::set_terminate (my_term);\n-  std::set_unexpected (my_unexp);\n+  std::set_unexpected (my_unexp); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n \n   try\n     {"}, {"sha": "d5d48968ff9fbf505d40403f41ec6551798f2830", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec4.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -17,7 +17,7 @@ f () throw (short)\t\t// { dg-warning \"deprecated\" \"\" { target c++11 } }\n int main ()\n {\n   std::set_terminate (my_term);\n-  std::set_unexpected (my_unexp);\n+  std::set_unexpected (my_unexp); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n \n   try\n     {"}, {"sha": "8d50f73a47584bea2b31fe361295aa2fe819ff4f", "filename": "gcc/testsuite/g++.old-deja/g++.mike/eh33.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh33.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -11,7 +11,7 @@ void my_unexpected() {\n void foo() throw (int) { throw \"Hi\"; }\t// { dg-warning \"deprecated\" \"\" { target c++11 } }\n \n int main() {\n-  std::set_unexpected (my_unexpected);\n+  std::set_unexpected (my_unexpected); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n   try {\n     foo();\n   } catch (int i) {"}, {"sha": "36512ae6ab24c9e89f0dc54dcb82ed36b308be03", "filename": "gcc/testsuite/g++.old-deja/g++.mike/eh34.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh34.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -11,7 +11,7 @@ void my_unexpected() {\n void foo() throw () { throw \"Hi\"; }\n \n int main() {\n-  std::set_unexpected (my_unexpected);\n+  std::set_unexpected (my_unexpected); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n   foo();\n   return 1;\n }"}, {"sha": "2507cf2e48cf2d663b1265f51bd6046bed8e9161", "filename": "gcc/testsuite/g++.old-deja/g++.mike/eh50.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh50.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -12,7 +12,7 @@ template <class T> void foo(T) throw (int) { throw \"Hi\"; }\t// { dg-warning \"depr\n \n int\n main() {\n-  std::set_unexpected (my_unexpected);\n+  std::set_unexpected (my_unexpected); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n   try {\n     foo(1);\n   } catch (int i) {"}, {"sha": "d1902f08106bd1fe6047e0a7a8308c262d89a966", "filename": "gcc/testsuite/g++.old-deja/g++.mike/eh51.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh51.C?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -12,7 +12,7 @@ template <class T> void foo(T) throw (T) { throw \"Hi\"; }\t// { dg-warning \"deprec\n \n int\n main() {\n-  std::set_unexpected (my_unexpected);\n+  std::set_unexpected (my_unexpected); // { dg-warning \"deprecated\" \"\" { target c++11 } }\n   try {\n     foo(1);\n   } catch (int i) {"}, {"sha": "32810788bf22012b25a1f1e057e88cb74972b199", "filename": "libstdc++-v3/doc/html/manual/api.html", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fapi.html?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -440,4 +440,8 @@\n The <code class=\"function\">std::random_shuffle</code> algorithms are deprecated\n for C++14 and later. The C++11 <code class=\"function\">std::shuffle</code> algorithm\n can be used instead.\n+</p><p>\n+The <code class=\"function\">std::unexpected</code> function and related typedef and\n+accessors for the unexpected handler are deprecated for C++11 and later.\n+Dynamic exception specifications should be replaced with <code class=\"code\">noexcept</code>.\n </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"abi.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_porting.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"backwards.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">ABI Policy and Guidelines\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Backwards Compatibility</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "9aef84a09334a1812bcdff562531ac1be043fcf8", "filename": "libstdc++-v3/doc/xml/manual/evolution.xml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fevolution.xml?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -1027,6 +1027,12 @@ for C++14 and later. The C++11 <function>std::shuffle</function> algorithm\n can be used instead.\n </para>\n \n+<para>\n+The <function>std::unexpected</function> function and related typedef and\n+accessors for the unexpected handler are deprecated for C++11 and later.\n+Dynamic exception specifications should be replaced with <code>noexcept</code>.\n+</para>\n+\n </section>\n \n </section>"}, {"sha": "edd5f6a1a775cff6047bf8dd6cf83fd3f8bb6b3e", "filename": "libstdc++-v3/libsupc++/eh_personality.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -673,10 +673,13 @@ PERSONALITY_FUNCTION (int version,\n \tstd::terminate ();\n       else if (handler_switch_value < 0)\n \t{\n-\t  __try \n-\t    { std::unexpected (); } \n-\t  __catch(...) \n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n+\t  __try\n+\t    { std::unexpected (); }\n+\t  __catch(...)\n \t    { std::terminate (); }\n+#pragma GCC diagnostic pop\n \t}\n     }\n   else"}, {"sha": "9f47b66634156cc28e2e2799af79550ab09101a8", "filename": "libstdc++-v3/libsupc++/eh_ptr.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_ptr.cc?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -198,7 +198,10 @@ std::rethrow_exception(std::exception_ptr ep)\n   dep->primaryException = obj;\n   __gnu_cxx::__eh_atomic_inc (&eh->referenceCount);\n \n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n   dep->unexpectedHandler = get_unexpected ();\n+#pragma GCC diagnostic pop\n   dep->terminateHandler = get_terminate ();\n   __GXX_INIT_DEPENDENT_EXCEPTION_CLASS(dep->unwindHeader.exception_class);\n   dep->unwindHeader.exception_cleanup = __gxx_dependent_exception_cleanup;"}, {"sha": "a94f173bb2e4fbdaaaebd9b4031be4b7c1ae2698", "filename": "libstdc++-v3/libsupc++/eh_terminate.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_terminate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_terminate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_terminate.cc?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -58,6 +58,7 @@ std::terminate () throw()\n   __cxxabiv1::__terminate (get_terminate ());\n }\n \n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n void\n __cxxabiv1::__unexpected (std::unexpected_handler handler)\n {"}, {"sha": "51cbbc902c2ed69c58fb12d0494cc326681f1d3f", "filename": "libstdc++-v3/libsupc++/eh_throw.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -63,7 +63,10 @@ _GLIBCXX_NOTHROW\n   header->referenceCount = 0;\n   header->exc.exceptionType = tinfo;\n   header->exc.exceptionDestructor = dest;\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n   header->exc.unexpectedHandler = std::get_unexpected ();\n+#pragma GCC diagnostic pop\n   header->exc.terminateHandler = std::get_terminate ();\n   __GXX_INIT_PRIMARY_EXCEPTION_CLASS(header->exc.unwindHeader.exception_class);\n   header->exc.unwindHeader.exception_cleanup = __gxx_exception_cleanup;"}, {"sha": "5088681e1eb2a038a89b2529a07f41c64aff9cc3", "filename": "libstdc++-v3/libsupc++/exception", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fexception?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -67,9 +67,6 @@ namespace std\n   /// If you write a replacement %terminate handler, it must be of this type.\n   typedef void (*terminate_handler) ();\n \n-  /// If you write a replacement %unexpected handler, it must be of this type.\n-  typedef void (*unexpected_handler) ();\n-\n   /// Takes a new handler function as an argument, returns the old function.\n   terminate_handler set_terminate(terminate_handler) _GLIBCXX_USE_NOEXCEPT;\n \n@@ -82,17 +79,35 @@ namespace std\n    *  abandoned for any reason.  It can also be called by the user.  */\n   void terminate() _GLIBCXX_USE_NOEXCEPT __attribute__ ((__noreturn__));\n \n-  /// Takes a new handler function as an argument, returns the old function.\n+#if __cplusplus < 201703L || _GLIBCXX_USE_DEPRECATED\n+  /// If you write a replacement %unexpected handler, it must be of this type.\n+  typedef void (*_GLIBCXX11_DEPRECATED unexpected_handler) ();\n+\n+  /** Takes a new handler function as an argument, returns the old function.\n+   *\n+   * @deprecated Removed from the C++ standard in C++17\n+   */\n+  _GLIBCXX11_DEPRECATED\n   unexpected_handler set_unexpected(unexpected_handler) _GLIBCXX_USE_NOEXCEPT;\n \n #if __cplusplus >= 201103L\n-  /// Return the current unexpected handler.\n+  /** Return the current unexpected handler.\n+   *\n+   * @since C++11\n+   * @deprecated Removed from the C++ standard in C++17\n+   */\n+  _GLIBCXX11_DEPRECATED\n   unexpected_handler get_unexpected() noexcept;\n #endif\n \n   /** The runtime will call this function if an %exception is thrown which\n-   *  violates the function's %exception specification.  */\n+   *  violates the function's %exception specification.\n+   *\n+   * @deprecated Removed from the C++ standard in C++17\n+   */\n+  _GLIBCXX11_DEPRECATED\n   void unexpected() __attribute__ ((__noreturn__));\n+#endif\n \n   /** [18.6.4]/1:  'Returns true after completing evaluation of a\n    *  throw-expression until either completing initialization of the"}, {"sha": "96d50eae412227233709ecb9d6c4da1c8fefdb5f", "filename": "libstdc++-v3/libsupc++/unwind-cxx.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -67,7 +67,7 @@ struct __cxa_exception\n \n   // The C++ standard has entertaining rules wrt calling set_terminate\n   // and set_unexpected in the middle of the exception cleanup process.\n-  std::unexpected_handler unexpectedHandler;\n+  std::terminate_handler unexpectedHandler;\n   std::terminate_handler terminateHandler;\n \n   // The caught exception stack threads through here.\n@@ -121,7 +121,7 @@ struct __cxa_dependent_exception\n \n   // The C++ standard has entertaining rules wrt calling set_terminate\n   // and set_unexpected in the middle of the exception cleanup process.\n-  std::unexpected_handler unexpectedHandler;\n+  std::terminate_handler unexpectedHandler;\n   std::terminate_handler terminateHandler;\n \n   // The caught exception stack threads through here.\n@@ -191,12 +191,12 @@ extern \"C\" void __cxa_tm_cleanup (void *, void *, unsigned int) throw();\n // so inconsiderate as to return.\n extern void __terminate(std::terminate_handler) throw () \n   __attribute__((__noreturn__));\n-extern void __unexpected(std::unexpected_handler)\n+extern void __unexpected(std::terminate_handler)\n   __attribute__((__noreturn__));\n \n // The current installed user handlers.\n extern std::terminate_handler __terminate_handler;\n-extern std::unexpected_handler __unexpected_handler;\n+extern std::terminate_handler __unexpected_handler;\n \n // These are explicitly GNU C++ specific.\n "}, {"sha": "18bd1fe4f0dc8b5dac4ff10ec7fd6123d743c404", "filename": "libstdc++-v3/testsuite/18_support/exception_ptr/60612-unexpected.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F60612-unexpected.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F60612-unexpected.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception_ptr%2F60612-unexpected.cc?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-Wno-deprecated-declarations\" }\n // { dg-do run { target { c++11_only || c++14_only } } }\n \n // Copyright (C) 2014-2021 Free Software Foundation, Inc."}, {"sha": "de35ec4c0e09a9b15c153169e89c1cdf7a74c94f", "filename": "libstdc++-v3/testsuite/18_support/headers/exception/synopsis.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fexception%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fexception%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fexception%2Fsynopsis.cc?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -24,7 +24,7 @@ namespace std {\n   class bad_exception;\n \n   typedef void (*unexpected_handler)();\n-  unexpected_handler set_unexpected(unexpected_handler  f ) throw();\n+  unexpected_handler set_unexpected(unexpected_handler  f ) throw(); // { dg-warning \"deprecated\" { target c++11 } }\n   unexpected_handler get_unexpected() noexcept;\n   void unexpected();\n "}, {"sha": "6cedc7d6cd142e4c72ab0c35adaa5c713cb124fa", "filename": "libstdc++-v3/testsuite/18_support/set_unexpected.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fset_unexpected.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fset_unexpected.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fset_unexpected.cc?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-options \"-std=gnu++11\" }\n+// { dg-options \"-std=gnu++11 -Wno-deprecated-declarations\" }\n // { dg-do run { target { c++11_only || c++14_only } } }\n \n #include <exception>"}, {"sha": "551b0e7f371a11ad7dc7698c1c94e47550e44ec5", "filename": "libstdc++-v3/testsuite/18_support/unexpected_handler.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Funexpected_handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Funexpected_handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Funexpected_handler.cc?ref=f4130a3eb545ab1aaf3ecb44f3d06b43e3751e04", "patch": "@@ -15,6 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// { dg-options \"-Wno-deprecated-declarations\" }\n // { dg-do run { target c++11 } }\n \n // D.11 Violating exception-specifications"}]}