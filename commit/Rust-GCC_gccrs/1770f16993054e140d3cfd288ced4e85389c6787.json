{"sha": "1770f16993054e140d3cfd288ced4e85389c6787", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc3MGYxNjk5MzA1NGUxNDBkM2NmZDI4OGNlZDRlODUzODljNjc4Nw==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2019-05-02T16:38:08Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-05-02T16:38:08Z"}, "message": "libphobos: RISC-V: Fix soft-float build errors with IEEE exception flags\n\nFix assembly errors:\n\n.../libphobos/src/std/math.d: Assembler messages:.../libphobos/src/std/math.d:4773: Error: unrecognized opcode `frflags a0'.../libphobos/src/std/math.d:4856: Error: unrecognized opcode `fsflags a5'.../libphobos/src/std/math.d:4856: Error: unrecognized opcode `fsflags a5'.../libphobos/src/std/math.d:4773: Error: unrecognized opcode `frflags a0'.../libphobos/src/std/math.d:5549: Error: unrecognized opcode `fscsr a5'.../libphobos/src/std/math.d:5456: Error: unrecognized opcode `frcsr a5'.../libphobos/src/std/math.d:5456: Error: unrecognized opcode `frcsr a5'.../libphobos/src/std/math.d:5549: Error: unrecognized opcode `fscsr a5'.../libphobos/src/std/math.d:5456: Error: unrecognized opcode `frcsr a5'.../libphobos/src/std/math.d:5549: Error: unrecognized opcode `fscsr a0'.../libphobos/src/std/math.d:5456: Error: unrecognized opcode `frcsr a0'.../libphobos/src/std/math.d:5456: Error: unrecognized opcode `frcsr a0'.../libphobos/src/std/math.d:5549: Error: unrecognized opcode `fscsr s2'make[8]: *** [Makefile:1119: std/math.lo] Error 1\n\ntriggered with the RISC-V lp64 multilib in a GCC build configured with \n`--enable-multilib --enable-languages=all --target=riscv64-linux-gnu'. \nThis is due to unconditional explicit use of F extension instructions \nwithin inline assembly, to access IEEE exception flags.  The use of \nthese instructions is not allowed when building for a soft-float ABI.\n\nCorrect the problem by wrapping said inline assembly into a conditional \nsuch that if `D_SoftFloat' is true, then reads from IEEE exception flags \nreturn 0 and writes are ignored instead, complementing r270522 \n(\"libphobos: Add D support for RISC-V Linux\"), which is an updated \nversion of <https://gcc.gnu.org/ml/gcc-patches/2019-04/msg00325.html>, \nwhere the problematic code has originated from.\n\nlibphobos/ChangeLog:\n\n2019-05-02  Maciej W. Rozycki  <macro@wdc.com>\n\n\t* std/math.d (IeeeFlags.getIeeeFlags): Handle RISC-V soft-float ABI.\n\t(IeeeFlags.resetIeeeFlags): Likewise.\n\t(FloatingPointControl.getControlState): Likewise.\n\t(FloatingPointControl.setControlState): Likewise.\n\nFrom-SVN: r270815", "tree": {"sha": "ad3554c8c101c9965b77469b15946d2e3efcbe7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad3554c8c101c9965b77469b15946d2e3efcbe7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1770f16993054e140d3cfd288ced4e85389c6787", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1770f16993054e140d3cfd288ced4e85389c6787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1770f16993054e140d3cfd288ced4e85389c6787", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1770f16993054e140d3cfd288ced4e85389c6787/comments", "author": null, "committer": null, "parents": [{"sha": "8c6a71e47c11d22503a87ef1f118668b043df9de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6a71e47c11d22503a87ef1f118668b043df9de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6a71e47c11d22503a87ef1f118668b043df9de"}], "stats": {"total": 53, "additions": 40, "deletions": 13}, "files": [{"sha": "780e30430ba78ea042e374a9484140aab1dc6394", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1770f16993054e140d3cfd288ced4e85389c6787/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1770f16993054e140d3cfd288ced4e85389c6787/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=1770f16993054e140d3cfd288ced4e85389c6787", "patch": "@@ -1,3 +1,10 @@\n+2019-05-02  Maciej Rozycki  <macro@wdc.com>\n+\n+\t* std/math.d (IeeeFlags.getIeeeFlags): Handle RISC-V soft-float ABI.\n+\t(IeeeFlags.resetIeeeFlags): Likewise.\n+\t(FloatingPointControl.getControlState): Likewise.\n+\t(FloatingPointControl.setControlState): Likewise.\n+\n 2019-04-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/90250"}, {"sha": "ff1633abf77c1700e89c10e006c2512498f53241", "filename": "libphobos/src/std/math.d", "status": "modified", "additions": 33, "deletions": 13, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1770f16993054e140d3cfd288ced4e85389c6787/libphobos%2Fsrc%2Fstd%2Fmath.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1770f16993054e140d3cfd288ced4e85389c6787/libphobos%2Fsrc%2Fstd%2Fmath.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fmath.d?ref=1770f16993054e140d3cfd288ced4e85389c6787", "patch": "@@ -4767,12 +4767,17 @@ private:\n             }\n             else version (RISCV_Any)\n             {\n-                uint result = void;\n-                asm pure nothrow @nogc\n+                version (D_SoftFloat)\n+                    return 0;\n+                else\n                 {\n-                    \"frflags %0\" : \"=r\" result;\n+                    uint result = void;\n+                    asm pure nothrow @nogc\n+                    {\n+                        \"frflags %0\" : \"=r\" result;\n+                    }\n+                    return result;\n                 }\n-                return result;\n             }\n             else\n                 assert(0, \"Not yet supported\");\n@@ -4850,10 +4855,15 @@ private:\n             }\n             else version (RISCV_Any)\n             {\n-                uint newValues = 0x0;\n-                asm pure nothrow @nogc\n+                version (D_SoftFloat)\n+                    return;\n+                else\n                 {\n-                    \"fsflags %0\" : : \"r\" newValues;\n+                    uint newValues = 0x0;\n+                    asm pure nothrow @nogc\n+                    {\n+                        \"fsflags %0\" : : \"r\" newValues;\n+                    }\n                 }\n             }\n             else\n@@ -5450,12 +5460,17 @@ private:\n             }\n             else version (RISCV_Any)\n             {\n-                ControlState cont;\n-                asm pure nothrow @nogc\n+                version (D_SoftFloat)\n+                    return 0;\n+                else\n                 {\n-                    \"frcsr %0\" : \"=r\" cont;\n+                    ControlState cont;\n+                    asm pure nothrow @nogc\n+                    {\n+                        \"frcsr %0\" : \"=r\" cont;\n+                    }\n+                    return cont;\n                 }\n-                return cont;\n             }\n             else\n                 assert(0, \"Not yet supported\");\n@@ -5544,9 +5559,14 @@ private:\n             }\n             else version (RISCV_Any)\n             {\n-                asm pure nothrow @nogc\n+                version (D_SoftFloat)\n+                    return;\n+                else\n                 {\n-                    \"fscsr %0\" : : \"r\" (newState);\n+                    asm pure nothrow @nogc\n+                    {\n+                        \"fscsr %0\" : : \"r\" (newState);\n+                    }\n                 }\n             }\n             else"}]}