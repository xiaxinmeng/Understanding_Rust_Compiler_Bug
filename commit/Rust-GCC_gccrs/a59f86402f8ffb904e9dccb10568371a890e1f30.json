{"sha": "a59f86402f8ffb904e9dccb10568371a890e1f30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU5Zjg2NDAyZjhmZmI5MDRlOWRjY2IxMDU2ODM3MWE4OTBlMWYzMA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-10-14T02:18:10Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-10-14T02:18:10Z"}, "message": "gcc toplevel:\n\n\t* expr.c (store_constructor): Clear union if constructor is empty.\ncp:\n\t* typeck2.c (process_init_constructor): Handle empty constructors.\ntestsuite:\n\t* g++.old-deja/g++.other/union2.C: New test.\n\nFrom-SVN: r29956", "tree": {"sha": "4156840afb1607ce49dc0ece52f2b961fbaa942f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4156840afb1607ce49dc0ece52f2b961fbaa942f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a59f86402f8ffb904e9dccb10568371a890e1f30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59f86402f8ffb904e9dccb10568371a890e1f30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a59f86402f8ffb904e9dccb10568371a890e1f30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59f86402f8ffb904e9dccb10568371a890e1f30/comments", "author": null, "committer": null, "parents": [{"sha": "5cf531a862a201c899afabde00e1cdc8b04cd9c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf531a862a201c899afabde00e1cdc8b04cd9c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cf531a862a201c899afabde00e1cdc8b04cd9c9"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "1bdfbce58fe3cebb20064e6dc563be10df7c0a35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a59f86402f8ffb904e9dccb10568371a890e1f30", "patch": "@@ -1,3 +1,7 @@\n+Wed Oct 13 22:01:35 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* expr.c (store_constructor): Clear union if constructor is empty.\n+\n Wed Oct 13 15:19:04 1999  Jim Wilson  <wilson@cygnus.com>\n \n \t* config/rs6000/sysv4.h (CC1_SPEC): Fix errors from Jan 19 change."}, {"sha": "3593ce4bc0b48c5cd9d0b4ea5036e0301552929b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a59f86402f8ffb904e9dccb10568371a890e1f30", "patch": "@@ -1,3 +1,7 @@\n+Wed Oct 13 22:01:35 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* typeck2.c (process_init_constructor): Handle empty constructors.\n+\n 1999-10-13  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (lang_mark_tree): Mark NAMESPACE_LEVEL."}, {"sha": "cb089d41ec16c5870fd3079d0efa008a56149e03", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=a59f86402f8ffb904e9dccb10568371a890e1f30", "patch": "@@ -921,7 +921,9 @@ process_init_constructor (type, init, elts)\n \t  members = expr_tree_cons (field, next1, members);\n \t}\n     }\n-  else if (TREE_CODE (type) == UNION_TYPE)\n+  else if (TREE_CODE (type) == UNION_TYPE\n+\t   /* If the initializer was empty, use default zero initialization.  */\n+\t   && tail)\n     {\n       register tree field = TYPE_FIELDS (type);\n "}, {"sha": "e246020304529c59972f0802b78743260b5705d8", "filename": "gcc/expr.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a59f86402f8ffb904e9dccb10568371a890e1f30", "patch": "@@ -4073,7 +4073,14 @@ store_constructor (exp, target, align, cleared)\n       /* Inform later passes that the whole union value is dead.  */\n       if (TREE_CODE (type) == UNION_TYPE\n \t  || TREE_CODE (type) == QUAL_UNION_TYPE)\n-\temit_insn (gen_rtx_CLOBBER (VOIDmode, target));\n+\t{\n+\t  emit_insn (gen_rtx_CLOBBER (VOIDmode, target));\n+\n+\t  /* If the constructor is empty, clear the union.  */\n+\t  if (! CONSTRUCTOR_ELTS (exp)  && ! cleared)\n+\t    clear_storage (target, expr_size (exp),\n+\t\t\t   TYPE_ALIGN (type) / BITS_PER_UNIT);\n+\t}\n \n       /* If we are building a static constructor into a register,\n \t set the initial value as zero so we can fold the value into"}, {"sha": "e6db32ab03fc36b6d0eedd6cc02ca506b94b635b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a59f86402f8ffb904e9dccb10568371a890e1f30", "patch": "@@ -1,3 +1,7 @@\n+Wed Oct 13 22:01:35 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* g++.old-deja/g++.other/union2.C: New test.\n+\n 1999-10-13  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.old-deja/g++.other/vaarg2.C: New test."}, {"sha": "32dd26c97a52db879dfce0b80d84a3a74c5454fc", "filename": "gcc/testsuite/g++.old-deja/g++.other/union2.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funion2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f86402f8ffb904e9dccb10568371a890e1f30/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funion2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funion2.C?ref=a59f86402f8ffb904e9dccb10568371a890e1f30", "patch": "@@ -0,0 +1,36 @@\n+// Bug: g++ crashed on empty intializers for unions.\n+// Bug: gcc and g++ didn't zero unions with empty initializers.\n+// Submitted by J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+typedef union u\n+{\n+  union u *up;\n+  void *vp;\n+} u;\n+\n+static u v = {};\n+\n+void bar (u);\n+void baz (u);\n+\n+void foo()\n+{\n+       u w = {};\n+       u x = { &v };\n+       baz (x);\n+       bar (w);\n+}\n+\n+void baz (u w) { }\n+\n+void bar (u w)\n+{\n+  if (w.up)\n+    exit (1);\n+}\n+\n+int main ()\n+{\n+  foo ();\n+  return 0;\n+}"}]}