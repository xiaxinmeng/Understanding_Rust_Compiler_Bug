{"sha": "e05cb56a297562b90df55df77f8d427ae69efac0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA1Y2I1NmEyOTc1NjJiOTBkZjU1ZGY3N2Y4ZDQyN2FlNjllZmFjMA==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-04-02T10:50:42Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-04-02T10:50:42Z"}, "message": "UNTESTED support for interix\n\nFrom-SVN: r26118", "tree": {"sha": "94c23c1f466bf3987f65f2af759969711cb20525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94c23c1f466bf3987f65f2af759969711cb20525"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e05cb56a297562b90df55df77f8d427ae69efac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05cb56a297562b90df55df77f8d427ae69efac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e05cb56a297562b90df55df77f8d427ae69efac0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05cb56a297562b90df55df77f8d427ae69efac0/comments", "author": null, "committer": null, "parents": [{"sha": "91e3ded8bd827faca7dc5382c2ff20f4f5bed34e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91e3ded8bd827faca7dc5382c2ff20f4f5bed34e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91e3ded8bd827faca7dc5382c2ff20f4f5bed34e"}], "stats": {"total": 175, "additions": 175, "deletions": 0}, "files": [{"sha": "26457c6df92bbe1d6f79fc29429f00ac3aae4476", "filename": "gcc/fixinc/fixinc.interix", "status": "added", "additions": 171, "deletions": 0, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05cb56a297562b90df55df77f8d427ae69efac0/gcc%2Ffixinc%2Ffixinc.interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05cb56a297562b90df55df77f8d427ae69efac0/gcc%2Ffixinc%2Ffixinc.interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.interix?ref=e05cb56a297562b90df55df77f8d427ae69efac0", "patch": "@@ -0,0 +1,171 @@\n+#!/bin/sh\n+#\n+#   fixinc.interix  --  Install modified versions of Interix system include\n+#   files.\n+#\n+#   Based on fixinc.sco script by Ian Lance Taylor (ian@airs.com)).\n+#   With modifications by Douglas Rupp (drupp@cs.washington.edu)\n+#\n+# Copyright (C) 1999 Free Software Foundation, Inc.\n+#\n+# This file is part of GNU CC.\n+# \n+# GNU CC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+# \n+# GNU CC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GNU CC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+#\n+#  ??????  fixup comment\n+#\tThis script munges the native include files provided with Windows NT\n+#\t3.5 SDK systems so as to provide a reasonable namespace when\n+#\tcompiling with gcc.  The header files by default do not\n+#\tprovide many essential definitions and declarations if\n+#\t__STDC__ is 1.  This script modifies the header files to check\n+#\tfor __STRICT_ANSI__ being defined instead.  Once munged, the\n+#\tresulting new system include files are placed in a directory\n+#\tthat GNU C will search *before* searching the Include\n+#\tdirectory.\n+#\n+#\tSee README-fixinc for more information.\n+\n+# Fail if no arg to specify a directory for the output.\n+if [ x$1 = x ]\n+then echo fixincludes: no output directory specified\n+exit 1\n+fi\n+\n+# Directory in which to store the results.\n+LIB=${1}\n+\n+# Make sure it exists.\n+if [ ! -d $LIB ]; then\n+  mkdir $LIB || exit 1\n+fi\n+\n+ORIG_DIR=`${PWDCMD-pwd}`\n+\n+# Make LIB absolute if it is relative.\n+# Don't do this if not necessary, since may screw up automounters.\n+case $LIB in\n+/*)\n+\t;;\n+*)\n+\tcd $LIB; LIB=`${PWDCMD-pwd}`\n+\t;;\n+esac\n+\n+echo 'Building fixincludes in ' ${LIB}\n+\n+# Determine whether this filesystem has symbolic links.\n+if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n+  rm -f $LIB/ShouldNotExist\n+  LINKS=true\n+else\n+  LINKS=false\n+fi\n+\n+echo 'Making directories:'\n+# Directory containing the original header files.\n+shift\n+if [ $# -eq 0 ] ; then\n+  set /usr/include\n+fi\n+\n+INLIST=\"$@\"\n+\n+for INPUT in ${INLIST} ; do\n+cd ${ORIG_DIR}\n+cd ${INPUT}\n+\n+if $LINKS; then\n+  files=`ls -LR | sed -n s/:$//p`\n+else\n+  files=`find . -type d -print | sed '/^\\.$/d'`\n+fi\n+\n+if [ \"x$files\" = x ]; then\n+  echo No files found in $INPUT\\; skipped\n+  continue\n+fi\n+\n+for file in $files; do\n+  rm -rf $LIB/$file\n+  if [ ! -d $LIB/$file ]\n+  then mkdir $LIB/$file\n+  fi\n+done\n+\n+# treetops gets an alternating list\n+# of old directories to copy\n+# and the new directories to copy to.\n+treetops=\"${INPUT} ${LIB}\"\n+\n+set - $treetops\n+while [ $# != 0 ]; do\n+  # $1 is an old directory to copy, and $2 is the new directory to copy to.\n+  echo \"Finding header files in $1:\"\n+  cd ${INPUT}\n+  cd $1\n+  files=`find . -name '*.[hH]' -type f -print`\n+  echo \"Checking header files in $1; transforming into directory $2:\"\n+  for file in $files; do\n+    echo \"   \" $file\n+    if [ -r $file ]; then\n+      cp $file $2/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+      chmod +w,a+r $2/$file\n+\n+# The following have been removed from the sed command below\n+# because it is more useful to leave these things in.\n+# The only reason to remove them was for -pedantic,\n+# which isn't much of a reason. -- rms.\n+# ??? above/below\n+#\t  /^[ \t]*#[ \t]*ident/d\n+#\t  s/!__STDC__/!defined (__STRICT_ANSI__)/g\n+\n+      sed -e '/#[ \t]*include.*[<\"][A-Za-z]:\\\\/ s,\\\\,/,g' \\\n+\t  -e '/#[ \t]*include.*[<\"][A-Za-z]:\\// s,\\([A-Za-z]\\):/,//\\1/,' \\\n+\t  -e '\\,#[ \t]*include.*[<\"]//[A-Za-z]/, y,abcdefghijklmnopqrstuvwxyz,ABCDEFGHIJKLMNOPQRSTUVWXYZ,' \\\n+\t  -e '\\,#[ \t]*INCLUDE.*[<\"]//[A-Za-z]/, s,INCLUDE,include,' \\\n+\t  $2/$file > $2/$file.sed\n+\n+      mv $2/$file.sed $2/$file\n+      if cmp $file $2/$file >/dev/null 2>&1; then\n+\t rm $2/$file\n+      else\n+\t echo Fixed $file\n+         flip -u $2/$file\n+      fi\n+    fi\n+  done\n+  shift; shift\n+done\n+\n+echo 'Removing unneeded directories:'\n+# (Rmdir leaf to root, and if the rmdir fails, who cares....)\n+cd $LIB\n+files=`find . -type d -print | sort -r`\n+for file in $files; do\n+  rmdir $LIB/$file > /dev/null 2>&1\n+done\n+\n+done # for include directory list\n+\n+if [ x${INSTALL_ASSERT_H} != x ]\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h\n+  cp ${srcdir}/assert.h include/assert.h || exit 1\n+  chmod a+r include/assert.h\n+fi\n+\n+exit 0"}, {"sha": "3f0b4ff0187e4dcc0961b68c1947f698d0ccf228", "filename": "gcc/fixinc/mkfixinc.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05cb56a297562b90df55df77f8d427ae69efac0/gcc%2Ffixinc%2Fmkfixinc.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05cb56a297562b90df55df77f8d427ae69efac0/gcc%2Ffixinc%2Fmkfixinc.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fmkfixinc.sh?ref=e05cb56a297562b90df55df77f8d427ae69efac0", "patch": "@@ -33,6 +33,10 @@ case $machine in\n \t\tfixincludes=fixinc.svr4\n \t\t;;\n \n+\ti[34567]86-*-interix*)\n+\t\tfixincludes=fixinc.interix\n+\t\t;;\n+\n \t*-*-netbsd* | \\\n \talpha*-*-linux-gnulibc1* | \\\n \ti[34567]86-*-freebsd* | \\"}]}