{"sha": "c1e1a688fb50bffe2ab21e4cce7374ac65e89205", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFlMWE2ODhmYjUwYmZmZTJhYjIxZTRjY2U3Mzc0YWM2NWU4OTIwNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-07-25T10:56:08Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-07-25T10:56:08Z"}, "message": "Handle loops with loop->latch == NULL (PR gcov-profile/71868)\n\n\tPR gcov-profile/71868\n\t* cfgloopanal.c (expected_loop_iterations_unbounded): When we\n\thave a function with multiple latches, count them all.\n\nFrom-SVN: r238706", "tree": {"sha": "0f82732086e16bd62553ae60fc855f592b627baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f82732086e16bd62553ae60fc855f592b627baa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1e1a688fb50bffe2ab21e4cce7374ac65e89205", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e1a688fb50bffe2ab21e4cce7374ac65e89205", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e1a688fb50bffe2ab21e4cce7374ac65e89205", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e1a688fb50bffe2ab21e4cce7374ac65e89205/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ccae0c8546a8b9e6fe00f180ae097a3f83b1e113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccae0c8546a8b9e6fe00f180ae097a3f83b1e113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccae0c8546a8b9e6fe00f180ae097a3f83b1e113"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "7a8a69c5a453d9f1e18cebf9f1b70f0fa7be7d48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e1a688fb50bffe2ab21e4cce7374ac65e89205/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e1a688fb50bffe2ab21e4cce7374ac65e89205/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1e1a688fb50bffe2ab21e4cce7374ac65e89205", "patch": "@@ -1,3 +1,9 @@\n+2016-07-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/71868\n+\t* cfgloopanal.c (expected_loop_iterations_unbounded): When we\n+\thave a function with multiple latches, count them all.\n+\n 2016-07-25  Martin Liska  <mliska@suse.cz>\n \n \t* tree-ssa-loop-niter.c (loop_only_exit_p): Release body array."}, {"sha": "001cf45ee9c975bfd9cc3dd33867756e0fcb6403", "filename": "gcc/cfgloopanal.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e1a688fb50bffe2ab21e4cce7374ac65e89205/gcc%2Fcfgloopanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e1a688fb50bffe2ab21e4cce7374ac65e89205/gcc%2Fcfgloopanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.c?ref=c1e1a688fb50bffe2ab21e4cce7374ac65e89205", "patch": "@@ -244,7 +244,7 @@ expected_loop_iterations_unbounded (const struct loop *loop,\n   /* If we have no profile at all, use AVG_LOOP_NITER.  */\n   if (profile_status_for_fn (cfun) == PROFILE_ABSENT)\n     expected = PARAM_VALUE (PARAM_AVG_LOOP_NITER);\n-  else if (loop->latch->count || loop->header->count)\n+  else if (loop->latch && (loop->latch->count || loop->header->count))\n     {\n       gcov_type count_in, count_latch;\n \n@@ -274,8 +274,8 @@ expected_loop_iterations_unbounded (const struct loop *loop,\n       freq_latch = 0;\n \n       FOR_EACH_EDGE (e, ei, loop->header->preds)\n-\tif (e->src == loop->latch)\n-\t  freq_latch = EDGE_FREQUENCY (e);\n+\tif (flow_bb_inside_loop_p (loop, e->src))\n+\t  freq_latch += EDGE_FREQUENCY (e);\n \telse\n \t  freq_in += EDGE_FREQUENCY (e);\n "}]}