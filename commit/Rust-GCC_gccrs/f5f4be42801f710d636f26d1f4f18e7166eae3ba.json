{"sha": "f5f4be42801f710d636f26d1f4f18e7166eae3ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVmNGJlNDI4MDFmNzEwZDYzNmYyNmQxZjRmMThlNzE2NmVhZTNiYQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-07-03T05:56:32Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-07-03T05:56:32Z"}, "message": "cygwin.h (VALID_MACHINE_DECL_ATTRIBUTE, [...]): Remove.\n\nconfig:\n\t* i386/cygwin.h (VALID_MACHINE_DECL_ATTRIBUTE,\n\tVALID_MACHINE_TYPE_ATTRIBUTE): Remove.\n\t* i386/i386-protos.h (i386_pe_valid_decl_attribute_p,\n\ti386_pe_valid_type_attribute_p): Add.\n\t* i386/i386.c (TARGET_INITIALIZER): Override for cygwin targets.\n\t* i386/winnt.c (i386_valid_decl_attribute_p): Return directly.\n\nFrom-SVN: r43721", "tree": {"sha": "434524619e90fcb525f618e11f45f1446bce75ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/434524619e90fcb525f618e11f45f1446bce75ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5f4be42801f710d636f26d1f4f18e7166eae3ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5f4be42801f710d636f26d1f4f18e7166eae3ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5f4be42801f710d636f26d1f4f18e7166eae3ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5f4be42801f710d636f26d1f4f18e7166eae3ba/comments", "author": null, "committer": null, "parents": [{"sha": "ed8908e739ba82f3903d5f3e9ff80ed6865cf978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed8908e739ba82f3903d5f3e9ff80ed6865cf978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed8908e739ba82f3903d5f3e9ff80ed6865cf978"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "c4e3f6f939d90ff6fa758f26835cddc98f712f8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5f4be42801f710d636f26d1f4f18e7166eae3ba", "patch": "@@ -1,3 +1,13 @@\n+2001-07-03  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+config:\n+\t* i386/cygwin.h (VALID_MACHINE_DECL_ATTRIBUTE,\n+\tVALID_MACHINE_TYPE_ATTRIBUTE): Remove.\n+\t* i386/i386-protos.h (i386_pe_valid_decl_attribute_p,\n+\ti386_pe_valid_type_attribute_p): Add.\n+\t* i386/i386.c (TARGET_INITIALIZER): Override for cygwin targets.\n+\t* i386/winnt.c (i386_valid_decl_attribute_p): Return directly.\n+\n Mon Jul  2 21:52:19 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* explow.c (plus_constant_wide, case LO_SUM): New case."}, {"sha": "6e76f1c7bec6d4aa5c0744989522d8caaad4b8f9", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=f5f4be42801f710d636f26d1f4f18e7166eae3ba", "patch": "@@ -182,27 +182,9 @@ Boston, MA 02111-1307, USA. */\n /* Enable parsing of #pragma pack(push,<n>) and #pragma pack(pop).  */\n #define HANDLE_PRAGMA_PACK_PUSH_POP 1\n \n-/* A C expression whose value is nonzero if IDENTIFIER with arguments ARGS\n-   is a valid machine specific attribute for DECL.\n-   The attributes in ATTRIBUTES have previously been assigned to DECL.  */\n-\n union tree_node;\n #define TREE union tree_node *\n \n-#undef VALID_MACHINE_DECL_ATTRIBUTE\n-#define VALID_MACHINE_DECL_ATTRIBUTE(DECL, ATTRIBUTES, IDENTIFIER, ARGS) \\\n-  i386_pe_valid_decl_attribute_p (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n-extern int i386_pe_valid_decl_attribute_p PARAMS ((TREE, TREE, TREE, TREE));\n-\n-/* A C expression whose value is nonzero if IDENTIFIER with arguments ARGS\n-   is a valid machine specific attribute for TYPE.\n-   The attributes in ATTRIBUTES have previously been assigned to TYPE.  */\n-\n-#undef VALID_MACHINE_TYPE_ATTRIBUTE\n-#define VALID_MACHINE_TYPE_ATTRIBUTE(TYPE, ATTRIBUTES, IDENTIFIER, ARGS) \\\n-  i386_pe_valid_type_attribute_p (TYPE, ATTRIBUTES, IDENTIFIER, ARGS)\n-extern int i386_pe_valid_type_attribute_p PARAMS ((TREE, TREE, TREE, TREE));\n-\n /* Used to implement dllexport overriding dllimport semantics.  It's also used\n    to handle vtables - the first pass won't do anything because\n    DECL_CONTEXT (DECL) will be 0 so i386_pe_dll{ex,im}port_p will return 0."}, {"sha": "78fcf3b3a70df2b6fcb3c0ffd1f3c996921fb4e1", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=f5f4be42801f710d636f26d1f4f18e7166eae3ba", "patch": "@@ -175,4 +175,6 @@ extern int ix86_data_alignment PARAMS ((tree, int));\n extern int ix86_local_alignment PARAMS ((tree, int));\n extern int ix86_constant_alignment PARAMS ((tree, int));\n extern int ix86_valid_type_attribute_p PARAMS ((tree, tree, tree, tree));\n+extern int i386_pe_valid_decl_attribute_p PARAMS ((tree, tree, tree, tree));\n+extern int i386_pe_valid_type_attribute_p PARAMS ((tree, tree, tree, tree));\n #endif"}, {"sha": "cdd35b2bf41136891c3ca356f8f1474a3bc465ab", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f5f4be42801f710d636f26d1f4f18e7166eae3ba", "patch": "@@ -610,14 +610,17 @@ static void ix86_compute_frame_layout PARAMS ((struct ix86_frame *));\n static int ix86_comp_type_attributes PARAMS ((tree, tree));\n \f\n /* Initialize the GCC target structure.  */\n+#undef TARGET_VALID_TYPE_ATTRIBUTE\n #ifdef TARGET_DLLIMPORT_DECL_ATTRIBUTES\n-#undef TARGET_MERGE_DECL_ATTRIBUTES\n-#define TARGET_MERGE_DECL_ATTRIBUTES merge_dllimport_decl_attributes\n+#  define TARGET_VALID_TYPE_ATTRIBUTE i386_pe_valid_type_attribute_p\n+#  undef TARGET_VALID_DECL_ATTRIBUTE\n+#  define TARGET_VALID_DECL_ATTRIBUTE i386_pe_valid_decl_attribute_p\n+#  undef TARGET_MERGE_DECL_ATTRIBUTES\n+#  define TARGET_MERGE_DECL_ATTRIBUTES merge_dllimport_decl_attributes\n+#else\n+#  define TARGET_VALID_TYPE_ATTRIBUTE ix86_valid_type_attribute_p\n #endif\n \n-#undef TARGET_VALID_TYPE_ATTRIBUTE\n-#define TARGET_VALID_TYPE_ATTRIBUTE ix86_valid_type_attribute_p\n-\n #undef TARGET_COMP_TYPE_ATTRIBUTES\n #define TARGET_COMP_TYPE_ATTRIBUTES ix86_comp_type_attributes\n "}, {"sha": "2d85b66930eb1b03a38c549e73062c46f9131d91", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f4be42801f710d636f26d1f4f18e7166eae3ba/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=f5f4be42801f710d636f26d1f4f18e7166eae3ba", "patch": "@@ -69,7 +69,7 @@ i386_pe_valid_decl_attribute_p (decl, attributes, attr, args)\n \treturn TREE_CODE (decl) == VAR_DECL;\n     }\n \n-  return ix86_valid_decl_attribute_p (decl, attributes, attr, args);\n+  return 0;\n }\n \n /* Return nonzero if ATTR is a valid attribute for TYPE.\n@@ -94,7 +94,6 @@ i386_pe_valid_type_attribute_p (type, attributes, attr, args)\n \n   return ix86_valid_type_attribute_p (type, attributes, attr, args);\n }\n-\n \f\n /* Return the type that we should use to determine if DECL is\n    imported or exported.  */"}]}