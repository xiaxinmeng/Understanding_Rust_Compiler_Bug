{"sha": "902c755930326cb4405672aa3ea13c35c653cbff", "node_id": "C_kwDOANBUbNoAKDkwMmM3NTU5MzAzMjZjYjQ0MDU2NzJhYTNlYTEzYzM1YzY1M2NiZmY", "commit": {"author": {"name": "LIU Hao", "email": "lh_mouse@126.com", "date": "2023-01-06T15:18:15Z"}, "committer": {"name": "Jonathan Yong", "email": "10walls@gmail.com", "date": "2023-01-07T06:51:06Z"}, "message": "Always define `WIN32_LEAN_AND_MEAN` before <windows.h>\n\nRecently, mingw-w64 has got updated <msxml.h> from Wine which is included\nindirectly by <windows.h> if `WIN32_LEAN_AND_MEAN` is not defined. The\n`IXMLDOMDocument` class has a member function named `abort()`, which gets\naffected by our `abort()` macro in \"system.h\".\n\n`WIN32_LEAN_AND_MEAN` should, nevertheless, always be defined. This\ncan exclude 'APIs such as Cryptography, DDE, RPC, Shell, and Windows\nSockets' [1], and speed up compilation of these files a bit.\n\n[1] https://learn.microsoft.com/en-us/windows/win32/winprog/using-the-windows-headers\n\ngcc/\n\n\tPR middle-end/108300\n\t* config/xtensa/xtensa-dynconfig.c: Define `WIN32_LEAN_AND_MEAN`\n\tbefore <windows.h>.\n\t* diagnostic-color.cc: Likewise.\n\t* plugin.cc: Likewise.\n\t* prefix.cc: Likewise.\n\ngcc/ada/\n\n\tPR middle-end/108300\n\t* adaint.c: Define `WIN32_LEAN_AND_MEAN` before `#include\n\t<windows.h>`.\n\t* cio.c: Likewise.\n\t* ctrl_c.c: Likewise.\n\t* expect.c: Likewise.\n\t* gsocket.h: Likewise.\n\t* mingw32.h: Likewise.\n\t* mkdir.c: Likewise.\n\t* rtfinal.c: Likewise.\n\t* rtinit.c: Likewise.\n\t* seh_init.c: Likewise.\n\t* sysdep.c: Likewise.\n\t* terminals.c: Likewise.\n\t* tracebak.c: Likewise.\n\ngcc/jit/\n\n\tPR middle-end/108300\n\t* jit-w32.h: Define `WIN32_LEAN_AND_MEAN` before <windows.h>.\n\nlibatomic/\n\n\tPR middle-end/108300\n\t* config/mingw/lock.c: Define `WIN32_LEAN_AND_MEAN` before\n\t<windows.h>.\n\nlibffi/\n\n\tPR middle-end/108300\n\t* src/aarch64/ffi.c: Define `WIN32_LEAN_AND_MEAN` before\n\t<windows.h>.\n\nlibgcc/\n\n\tPR middle-end/108300\n\t* config/i386/enable-execute-stack-mingw32.c: Define\n\t`WIN32_LEAN_AND_MEAN` before <windows.h>.\n\t* libgcc2.c: Likewise.\n\t* unwind-generic.h: Likewise.\n\nlibgfortran/\n\n\tPR middle-end/108300\n\t* intrinsics/sleep.c: Define `WIN32_LEAN_AND_MEAN` before\n\t<windows.h>.\n\nlibgomp/\n\n\tPR middle-end/108300\n\t* config/mingw32/proc.c: Define `WIN32_LEAN_AND_MEAN` before\n\t<windows.h>.\n\nlibiberty/\n\n\tPR middle-end/108300\n\t* make-temp-file.c: Define `WIN32_LEAN_AND_MEAN` before <windows.h>.\n\t* pex-win32.c: Likewise.\n\nlibssp/\n\n\tPR middle-end/108300\n\t* ssp.c: Define `WIN32_LEAN_AND_MEAN` before <windows.h>.\n\nlibstdc++-v3/\n\n\tPR middle-end/108300\n\t* src/c++11/system_error.cc: Define `WIN32_LEAN_AND_MEAN` before\n\t<windows.h>.\n\t* src/c++11/thread.cc: Likewise.\n\t* src/c++17/fs_ops.cc: Likewise.\n\t* src/filesystem/ops.cc: Likewise.\n\nlibvtv/\n\n\tPR middle-end/108300\n\t* vtv_malloc.cc: Define `WIN32_LEAN_AND_MEAN` before <windows.h>.\n\t* vtv_rts.cc: Likewise.\n\t* vtv_utils.cc: Likewise.", "tree": {"sha": "85bf90bbe6b8030c78b94e14cc3f0bce4abf28aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85bf90bbe6b8030c78b94e14cc3f0bce4abf28aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/902c755930326cb4405672aa3ea13c35c653cbff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902c755930326cb4405672aa3ea13c35c653cbff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/902c755930326cb4405672aa3ea13c35c653cbff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902c755930326cb4405672aa3ea13c35c653cbff/comments", "author": {"login": "lhmouse", "id": 5071344, "node_id": "MDQ6VXNlcjUwNzEzNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5071344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhmouse", "html_url": "https://github.com/lhmouse", "followers_url": "https://api.github.com/users/lhmouse/followers", "following_url": "https://api.github.com/users/lhmouse/following{/other_user}", "gists_url": "https://api.github.com/users/lhmouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhmouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhmouse/subscriptions", "organizations_url": "https://api.github.com/users/lhmouse/orgs", "repos_url": "https://api.github.com/users/lhmouse/repos", "events_url": "https://api.github.com/users/lhmouse/events{/privacy}", "received_events_url": "https://api.github.com/users/lhmouse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jon-y", "id": 4688224, "node_id": "MDQ6VXNlcjQ2ODgyMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4688224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-y", "html_url": "https://github.com/jon-y", "followers_url": "https://api.github.com/users/jon-y/followers", "following_url": "https://api.github.com/users/jon-y/following{/other_user}", "gists_url": "https://api.github.com/users/jon-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-y/subscriptions", "organizations_url": "https://api.github.com/users/jon-y/orgs", "repos_url": "https://api.github.com/users/jon-y/repos", "events_url": "https://api.github.com/users/jon-y/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-y/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "2cbad88e901aa7902f55fb6795abe5f2c373a44d", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -227,6 +227,7 @@ UINT __gnat_current_ccs_encoding;\n \n #elif defined (_WIN32)\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <accctrl.h>\n #include <aclapi.h>"}, {"sha": "f004b4bf732d9df3ee6b08afb04b92cd5b4ab994", "filename": "gcc/ada/cio.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fcio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fcio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcio.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -67,6 +67,7 @@ extern \"C\" {\n #endif\n \n #ifdef RTX\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <Rtapi.h>\n #endif"}, {"sha": "6b9fc85ac436ef12cbcadb4070fdbfa22b3e664f", "filename": "gcc/ada/ctrl_c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fctrl_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fctrl_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fctrl_c.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -126,6 +126,7 @@ __gnat_uninstall_int_handler (void)\n \n #elif defined (__MINGW32__)\n \n+#define WIN32_LEAN_AND_MEAN\n #include \"mingw32.h\"\n #include <windows.h>\n "}, {"sha": "87dc16825bec2be1e31959d0462fc8147cca6fe2", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -71,6 +71,7 @@\n \n #ifdef _WIN32\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <process.h>\n #include <signal.h>"}, {"sha": "804994e412677de4ed24b4e2dc283361cbc79205", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -167,6 +167,7 @@\n \n #endif\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n #elif defined(VMS)"}, {"sha": "7f6622ad8a8ec1d35df1ef42bb69308f8356461c", "filename": "gcc/ada/mingw32.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmingw32.h?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -53,6 +53,7 @@\n #define _X86INTRIN_H_INCLUDED\n #define _EMMINTRIN_H_INCLUDED\n #endif\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n /* After including this file it is possible to use the character t as prefix"}, {"sha": "1da321c551f5e1c0ba8320ef695276beec948f93", "filename": "gcc/ada/mkdir.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fmkdir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fmkdir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmkdir.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -43,6 +43,7 @@\n #endif\n \n #ifdef __MINGW32__\n+#define WIN32_LEAN_AND_MEAN\n #include \"mingw32.h\"\n #include <windows.h>\n #ifdef MAXPATHLEN"}, {"sha": "bd73e2cbd2c7daf894013180dd71d73cf26e9651", "filename": "gcc/ada/rtfinal.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Frtfinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Frtfinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtfinal.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -46,6 +46,7 @@ extern int __gnat_rt_init_count;\n /*  see initialize.c  */\n \n #if defined (__MINGW32__)\n+#define WIN32_LEAN_AND_MEAN\n #include \"mingw32.h\"\n #include <windows.h>\n "}, {"sha": "cd3471685067f929ca8aa41bd212169360eaf8f1", "filename": "gcc/ada/rtinit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Frtinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Frtinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtinit.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -70,6 +70,7 @@ int __gnat_rt_init_count = 0;\n    and finalize properly the run-time. */\n \n #if defined (__MINGW32__)\n+#define WIN32_LEAN_AND_MEAN\n #include \"mingw32.h\"\n #include <windows.h>\n "}, {"sha": "85895b64b7c9ed9c08d1c97a5b24461eadacb411", "filename": "gcc/ada/seh_init.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fseh_init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fseh_init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fseh_init.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -34,6 +34,7 @@\n \n #if defined (_WIN32) || (defined (__CYGWIN__) && defined (__SEH__))\n /* Include system headers, before system.h poisons malloc.  */\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <excpt.h>\n #endif"}, {"sha": "edf3b78bc5fe2135c22dd8d829c3f9aa4672cf46", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -217,6 +217,7 @@ __gnat_ttyname (int filedes)\n #endif /* __CYGWIN__ */\n \n #if defined (__CYGWIN__) || defined (__MINGW32__)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n int __gnat_is_windows_xp (void);\n@@ -589,6 +590,7 @@ getc_immediate_common (FILE *stream,\n    Ada programs.  */\n \n #ifdef WINNT\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n /* Provide functions to echo the values passed to WinMain (windows bindings"}, {"sha": "9e7c2de13dc6190da2db7e0c6d93e5f93fe15155", "filename": "gcc/ada/terminals.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fterminals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Fterminals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fterminals.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -151,6 +151,7 @@ __gnat_setup_winsize (void *desc ATTRIBUTE_UNUSED,\n #include <stdio.h>\n #include <stdlib.h>\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <winternl.h>\n #include <io.h>"}, {"sha": "c43aadeafa414c40f41345f84587f6fd193045f4", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -93,6 +93,7 @@ extern void (*Unlock_Task) (void);\n \n #if defined (_WIN64) && defined (__SEH__)\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n #define IS_BAD_PTR(ptr) (IsBadCodePtr((FARPROC)ptr))\n@@ -455,6 +456,7 @@ struct layout\n #elif defined (__i386__) || defined (__x86_64__)\n \n #if defined (__WIN32)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #define IS_BAD_PTR(ptr) (IsBadCodePtr((FARPROC)ptr))\n #elif defined (__sun__)"}, {"sha": "91d02ef720f1eb0fa65ec5ec8344a7f41af7a302", "filename": "gcc/config/xtensa/xtensa-dynconfig.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-dynconfig.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -29,6 +29,7 @@\n #if defined (HAVE_DLFCN_H)\n #include <dlfcn.h>\n #elif defined (_WIN32)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #define ENABLE_PLUGIN\n #endif"}, {"sha": "5f2856d18e48a642ef8646baa41a130926d8f387", "filename": "gcc/diagnostic-color.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fdiagnostic-color.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fdiagnostic-color.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-color.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -22,6 +22,7 @@\n #include \"diagnostic-url.h\"\n \n #ifdef __MINGW32__\n+#  define WIN32_LEAN_AND_MEAN\n #  include <windows.h>\n #endif\n "}, {"sha": "3c65ff1f53032591e4face6c2098e4f395f913ea", "filename": "gcc/jit/jit-w32.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fjit%2Fjit-w32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fjit%2Fjit-w32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-w32.h?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -20,6 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n namespace gcc {"}, {"sha": "142f3fa4131fc0bf1f9bbc17e8b695e4660b74c5", "filename": "gcc/plugin.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fplugin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fplugin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -41,6 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef NOMINMAX\n #define NOMINMAX\n #endif\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #endif\n "}, {"sha": "c2a37bde5eaa423627ffa3fe7ba1aea2b3399af9", "filename": "gcc/prefix.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fprefix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/gcc%2Fprefix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprefix.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -67,6 +67,7 @@ License along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #if defined(_WIN32) && defined(ENABLE_WIN32_REGISTRY)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #endif\n #include \"prefix.h\""}, {"sha": "0dcf07031e66278f013ed74d959c9859eec2c0b4", "filename": "libatomic/config/mingw/lock.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libatomic%2Fconfig%2Fmingw%2Flock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libatomic%2Fconfig%2Fmingw%2Flock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfig%2Fmingw%2Flock.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -23,6 +23,7 @@\n    <http://www.gnu.org/licenses/>.  */\n \n #define UWORD __shadow_UWORD\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #undef UWORD\n #include \"libatomic_i.h\""}, {"sha": "b394c18fc56778ea63761ca4c8264ec970a81a52", "filename": "libffi/src/aarch64/ffi.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libffi%2Fsrc%2Faarch64%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libffi%2Fsrc%2Faarch64%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Faarch64%2Fffi.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -28,6 +28,7 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  */\n #include <ffi_common.h>\n #include \"internal.h\"\n #ifdef _WIN32\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h> /* FlushInstructionCache */\n #endif\n #include <tramp.h>"}, {"sha": "17e068cd8e48b988d12a6e5478963b2ac0ba4313", "filename": "libgcc/config/i386/enable-execute-stack-mingw32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libgcc%2Fconfig%2Fi386%2Fenable-execute-stack-mingw32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libgcc%2Fconfig%2Fi386%2Fenable-execute-stack-mingw32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fenable-execute-stack-mingw32.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -22,6 +22,7 @@\n    see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    <http://www.gnu.org/licenses/>.  */\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n extern void __enable_execute_stack (void *);"}, {"sha": "1f7f19b68a78f691d3d95caa3e42b9afa0f4ca91", "filename": "libgcc/libgcc2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libgcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libgcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcc2.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -2273,6 +2273,7 @@ __clear_cache (void *beg __attribute__((__unused__)),\n /* Jump to a trampoline, loading the static chain address.  */\n \n #if defined(WINNT) && ! defined(__CYGWIN__)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n int getpagesize (void);\n int mprotect (char *,int, int);"}, {"sha": "37fff9a81110cb1aaad02640e953feb4d3b3202d", "filename": "libgcc/unwind-generic.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libgcc%2Funwind-generic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libgcc%2Funwind-generic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Funwind-generic.h?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -30,6 +30,7 @@\n \n #if defined (__SEH__) && !defined (__USING_SJLJ_EXCEPTIONS__)\n /* Only for _GCC_specific_handler.  */\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #endif\n "}, {"sha": "b15ebfeb235de5a4812b0d195522926ed36981b2", "filename": "libgfortran/intrinsics/sleep.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libgfortran%2Fintrinsics%2Fsleep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libgfortran%2Fintrinsics%2Fsleep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fsleep.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -30,6 +30,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #endif\n \n #ifdef __MINGW32__\n+# define WIN32_LEAN_AND_MEAN\n # include <windows.h>\n # undef sleep\n # define sleep(x) Sleep(1000*(x))"}, {"sha": "ee9397cb49647d453ba1b8f5de21f616f4bc79cb", "filename": "libgo/misc/cgo/test/callback_c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libgo%2Fmisc%2Fcgo%2Ftest%2Fcallback_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libgo%2Fmisc%2Fcgo%2Ftest%2Fcallback_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmisc%2Fcgo%2Ftest%2Fcallback_c.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -32,6 +32,7 @@ IntoC(void)\n }\n \n #ifdef WIN32\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n long long\n mysleep(int seconds) {"}, {"sha": "120c988832acbae6b8a04f2d18be61bb9efaa1cf", "filename": "libgomp/config/mingw32/proc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libgomp%2Fconfig%2Fmingw32%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libgomp%2Fconfig%2Fmingw32%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fmingw32%2Fproc.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -30,6 +30,7 @@\n    The following implementation uses win32 API routines.  */\n \n #include \"libgomp.h\"\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n /* Count the CPU's currently available to this process.  */"}, {"sha": "b54c87d24fe8aa5d36d2806648b62b15679735b5", "filename": "libiberty/make-temp-file.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libiberty%2Fmake-temp-file.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libiberty%2Fmake-temp-file.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmake-temp-file.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -37,6 +37,7 @@ Boston, MA 02110-1301, USA.  */\n #include <sys/file.h>   /* May get R_OK, etc. on some systems.  */\n #endif\n #if defined(_WIN32) && !defined(__CYGWIN__)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #endif\n #if HAVE_SYS_STAT_H"}, {"sha": "67a9f97fd9a2f854b399033140a1b311b6c83163", "filename": "libiberty/pex-win32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libiberty%2Fpex-win32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libiberty%2Fpex-win32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-win32.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -20,6 +20,7 @@ Boston, MA 02110-1301, USA.  */\n \n #include \"pex-common.h\"\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n #ifdef HAVE_STDLIB_H"}, {"sha": "5ef8643cbb1053724025e72da153d5318b2395e4", "filename": "libssp/ssp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libssp%2Fssp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libssp%2Fssp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fssp.c?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -55,6 +55,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* Native win32 apps don't know about /dev/tty but can print directly\n    to the console using  \"CONOUT$\"   */\n #if defined (_WIN32) && !defined (__CYGWIN__)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <wincrypt.h>\n # define _PATH_TTY \"CONOUT$\""}, {"sha": "5c7642700615bb3c33cd38aaa4ca6c2f5f06763c", "filename": "libstdc++-v3/src/c++11/system_error.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -33,6 +33,7 @@\n #undef __sso_string\n \n #if defined(_WIN32) && !defined(__CYGWIN__)\n+#define WIN32_LEAN_AND_MEAN\n #include <memory>\n #include <windows.h>\n #endif"}, {"sha": "4936f629c5a57b54b3fb0f55cc37dfedcf60ff4c", "filename": "libstdc++-v3/src/c++11/thread.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -35,6 +35,7 @@\n # ifdef _GLIBCXX_HAVE_SLEEP\n #  include <unistd.h>\n # elif defined(_GLIBCXX_USE_WIN32_SLEEP)\n+#  define WIN32_LEAN_AND_MEAN\n #  include <windows.h>\n # elif defined _GLIBCXX_NO_SLEEP && defined _GLIBCXX_HAS_GTHREADS\n // We expect to be able to sleep for targets that support multiple threads:\n@@ -63,7 +64,7 @@ static inline int get_nprocs()\n }\n # define _GLIBCXX_NPROCS get_nprocs()\n #elif defined(_GLIBCXX_USE_GET_NPROCS_WIN32)\n-#define WIN32_LEAN_AND_MEAN\n+# define WIN32_LEAN_AND_MEAN\n # include <windows.h>\n static inline int get_nprocs()\n {\n@@ -79,6 +80,7 @@ static inline int get_nprocs()\n # include <unistd.h>\n # define _GLIBCXX_NPROCS sysconf(_SC_NPROC_ONLN)\n #elif defined(_WIN32)\n+# define WIN32_LEAN_AND_MEAN\n # include <windows.h>\n static inline int get_nprocs()\n {"}, {"sha": "b540f848313c256af7ff5f3f91fbdd26b5091200", "filename": "libstdc++-v3/src/c++17/fs_ops.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -54,6 +54,7 @@\n # include <utime.h> // utime\n #endif\n #ifdef _GLIBCXX_FILESYSTEM_IS_WINDOWS\n+# define WIN32_LEAN_AND_MEAN\n # include <windows.h>\n #endif\n "}, {"sha": "c18cf0205070600e35d8b6c8645280eca6e1dd4e", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -55,6 +55,7 @@\n # include <utime.h> // utime\n #endif\n #ifdef _GLIBCXX_FILESYSTEM_IS_WINDOWS\n+# define WIN32_LEAN_AND_MEAN\n # include <windows.h>\n #endif\n "}, {"sha": "31b334fa7a2e1df87cc891c782eb7d0870585046", "filename": "libvtv/vtv_malloc.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libvtv%2Fvtv_malloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libvtv%2Fvtv_malloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fvtv_malloc.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -33,6 +33,7 @@\n #include <stdlib.h>\n #include <unistd.h>\n #if defined (__CYGWIN__) || defined (__MINGW32__)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #else\n #include <sys/mman.h>"}, {"sha": "6954b0417b6d245e7b0f4a375d164d560021b032", "filename": "libvtv/vtv_rts.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libvtv%2Fvtv_rts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libvtv%2Fvtv_rts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fvtv_rts.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -121,6 +121,7 @@\n #include <stdio.h>\n #include <string.h>\n #if defined (__CYGWIN__) || defined (__MINGW32__)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <winternl.h>\n #include <psapi.h>"}, {"sha": "21c3466afb9525e4e05399efb6aa2050e2b206a3", "filename": "libvtv/vtv_utils.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902c755930326cb4405672aa3ea13c35c653cbff/libvtv%2Fvtv_utils.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902c755930326cb4405672aa3ea13c35c653cbff/libvtv%2Fvtv_utils.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fvtv_utils.cc?ref=902c755930326cb4405672aa3ea13c35c653cbff", "patch": "@@ -33,6 +33,7 @@\n #include <stdlib.h>\n #include <string.h>\n #if defined (__CYGWIN__) || defined (__MINGW32__)\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #else\n #include <execinfo.h>"}]}