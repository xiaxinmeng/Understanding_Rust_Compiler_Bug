{"sha": "4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNkN2IxYTllMDcyZDJiZjRkNDdiZDk5ZmZlOGFjNDgyZjM1MzIxYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2017-01-24T09:50:33Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2017-01-24T09:50:33Z"}, "message": "re PR middle-end/79123 (incorrect -Walloca-larger-than: alloca may be too large due to conversion from long int to long unsigned int)\n\n\tPR middle-end/79123\n\t* gimple-ssa-warn-alloca.c (alloca_call_type): Make sure\n\tcasts from signed to unsigned really don't have a range.\n\nFrom-SVN: r244859", "tree": {"sha": "614d8e6c368054981229a5d1d26c4713f237c1fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/614d8e6c368054981229a5d1d26c4713f237c1fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf8e20bfd8c8fd29869544452e31557a15d3e388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf8e20bfd8c8fd29869544452e31557a15d3e388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf8e20bfd8c8fd29869544452e31557a15d3e388"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "e66fb836d68da4d4266411e64eae147f0bf95c1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a", "patch": "@@ -1,3 +1,9 @@\n+2017-01-24  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR middle-end/79123\n+\t* gimple-ssa-warn-alloca.c (alloca_call_type): Make sure\n+\tcasts from signed to unsigned really don't have a range.\n+\n 2017-01-24  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \t* gimple-ssa-sprintf.c (format_floating): Change MPFR_RNDx to"}, {"sha": "d553a346bfee379dfe43d16e8a789111a9b21ad1", "filename": "gcc/gimple-ssa-warn-alloca.c", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a/gcc%2Fgimple-ssa-warn-alloca.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a/gcc%2Fgimple-ssa-warn-alloca.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-alloca.c?ref=4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a", "patch": "@@ -272,6 +272,7 @@ static struct alloca_type_and_limit\n alloca_call_type (gimple *stmt, bool is_vla, tree *invalid_casted_type)\n {\n   gcc_assert (gimple_alloca_call_p (stmt));\n+  bool tentative_cast_from_signed = false;\n   tree len = gimple_call_arg (stmt, 0);\n   tree len_casted = NULL;\n   wide_int min, max;\n@@ -352,8 +353,26 @@ alloca_call_type (gimple *stmt, bool is_vla, tree *invalid_casted_type)\n \t  // with this heuristic.  Hopefully, this VR_ANTI_RANGE\n \t  // nonsense will go away, and we won't have to catch the\n \t  // sign conversion problems with this crap.\n+\t  //\n+\t  // This is here to catch things like:\n+\t  // void foo(signed int n) {\n+\t  //   if (n < 100)\n+\t  //     alloca(n);\n+\t  //   ...\n+\t  // }\n \t  if (cast_from_signed_p (len, invalid_casted_type))\n-\t    return alloca_type_and_limit (ALLOCA_CAST_FROM_SIGNED);\n+\t    {\n+\t      // Unfortunately this also triggers:\n+\t      //\n+\t      // __SIZE_TYPE__ n = (__SIZE_TYPE__)blah;\n+\t      // if (n < 100)\n+\t      //   alloca(n);\n+\t      //\n+\t      // ...which is clearly bounded.  So, double check that\n+\t      // the paths leading up to the size definitely don't\n+\t      // have a bound.\n+\t      tentative_cast_from_signed = true;\n+\t    }\n \t}\n       // No easily determined range and try other things.\n     }\n@@ -371,10 +390,12 @@ alloca_call_type (gimple *stmt, bool is_vla, tree *invalid_casted_type)\n \t  ret = alloca_call_type_by_arg (len, len_casted,\n \t\t\t\t\t EDGE_PRED (bb, ix), max_size);\n \t  if (ret.type != ALLOCA_OK)\n-\t    return ret;\n+\t    break;\n \t}\n     }\n \n+  if (tentative_cast_from_signed && ret.type != ALLOCA_OK)\n+    return alloca_type_and_limit (ALLOCA_CAST_FROM_SIGNED);\n   return ret;\n }\n "}, {"sha": "f9bdcefa9d3a9581d87232126b1b9695fbf17a75", "filename": "gcc/testsuite/gcc.dg/Walloca-13.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-13.c?ref=4cd7b1a9e072d2bf4d47bd99ffe8ac482f35321a", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Walloca-larger-than=100 -O2\" } */\n+\n+void f (void*);\n+\n+void g (int *p, int *q)\n+{\n+  __SIZE_TYPE__ n = (__SIZE_TYPE__)(p - q);\n+  if (n < 100)\n+    f (__builtin_alloca (n));\n+}"}]}