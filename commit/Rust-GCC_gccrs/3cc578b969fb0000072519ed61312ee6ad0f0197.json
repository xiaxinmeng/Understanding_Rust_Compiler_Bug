{"sha": "3cc578b969fb0000072519ed61312ee6ad0f0197", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NjNTc4Yjk2OWZiMDAwMDA3MjUxOWVkNjEzMTJlZTZhZDBmMDE5Nw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-07-13T02:43:23Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-07-13T02:43:23Z"}, "message": "genextract.c: add [cd]tors to accum_extract\n\ngcc/ChangeLog:\n\n2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* genextract.c (struct accum_extract): Add constructor and make\n\tmembers auto_vec.\n\t(gen_insn): Adjust.\n\nFrom-SVN: r238280", "tree": {"sha": "ac246cd95517f860dbf269eebe369d3217bd7bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac246cd95517f860dbf269eebe369d3217bd7bf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cc578b969fb0000072519ed61312ee6ad0f0197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cc578b969fb0000072519ed61312ee6ad0f0197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cc578b969fb0000072519ed61312ee6ad0f0197", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cc578b969fb0000072519ed61312ee6ad0f0197/comments", "author": null, "committer": null, "parents": [{"sha": "bf4fa671812c5e616c3cea5702d4ddcdf7a47d18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "16198c1bca3beac268c30a0bd086cb56233c0bc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc578b969fb0000072519ed61312ee6ad0f0197/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc578b969fb0000072519ed61312ee6ad0f0197/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cc578b969fb0000072519ed61312ee6ad0f0197", "patch": "@@ -1,3 +1,9 @@\n+2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* genextract.c (struct accum_extract): Add constructor and make\n+\tmembers auto_vec.\n+\t(gen_insn): Adjust.\n+\n 2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* tree.c (struct free_lang_data_d): Add constructor and change"}, {"sha": "e6d53379e34282e3e35a993f53dc35597efeac6d", "filename": "gcc/genextract.c", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cc578b969fb0000072519ed61312ee6ad0f0197/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cc578b969fb0000072519ed61312ee6ad0f0197/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=3cc578b969fb0000072519ed61312ee6ad0f0197", "patch": "@@ -69,10 +69,12 @@ static struct code_ptr *peepholes;\n \n struct accum_extract\n {\n-  vec<locstr> oplocs;\n-  vec<locstr> duplocs;\n-  vec<int> dupnums;\n-  vec<char> pathstr;\n+  accum_extract () : oplocs (10), duplocs (10), dupnums (10), pathstr (20) {}\n+\n+  auto_vec<locstr> oplocs;\n+  auto_vec<locstr> duplocs;\n+  auto_vec<int> dupnums;\n+  auto_vec<char> pathstr;\n };\n \n /* Forward declarations.  */\n@@ -87,11 +89,6 @@ gen_insn (md_rtx_info *info)\n   struct code_ptr *link;\n   struct accum_extract acc;\n \n-  acc.oplocs.create (10);\n-  acc.duplocs.create (10);\n-  acc.dupnums.create (10);\n-  acc.pathstr.create (20);\n-\n   /* Walk the insn's pattern, remembering at all times the path\n      down to the walking point.  */\n \n@@ -142,7 +139,7 @@ gen_insn (md_rtx_info *info)\n       /* This extraction is the same as ours.  Just link us in.  */\n       link->next = p->insns;\n       p->insns = link;\n-      goto done;\n+      return;\n     }\n \n   /* Otherwise, make a new extraction method.  We stash the arrays\n@@ -166,12 +163,6 @@ gen_insn (md_rtx_info *info)\n   memcpy (p->oplocs, acc.oplocs.address (), op_count * sizeof (locstr));\n   memcpy (p->duplocs, acc.duplocs.address (), dup_count * sizeof (locstr));\n   memcpy (p->dupnums, acc.dupnums.address (), dup_count * sizeof (int));\n-\n- done:\n-  acc.oplocs.release ();\n-  acc.duplocs.release ();\n-  acc.dupnums.release ();\n-  acc.pathstr.release ();\n }\n \f\n /* Helper subroutine of walk_rtx: given a vec<locstr>, an index, and a"}]}