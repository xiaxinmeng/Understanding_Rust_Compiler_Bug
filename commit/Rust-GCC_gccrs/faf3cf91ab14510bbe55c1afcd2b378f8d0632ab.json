{"sha": "faf3cf91ab14510bbe55c1afcd2b378f8d0632ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFmM2NmOTFhYjE0NTEwYmJlNTVjMWFmY2QyYjM3OGY4ZDA2MzJhYg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonber@gnat.com", "date": "2004-10-27T13:01:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T13:01:55Z"}, "message": "exp_ch6.adb (Expand_Actuals): If the actual for an in-out parameter is aliased and is a by_reference type...\n\n2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n\t    Eric Botcazou  <ebotcazou@act-europe.fr>\n\n\t* exp_ch6.adb (Expand_Actuals): If the actual for an in-out parameter\n\tis aliased and is a by_reference type, do not pass by copy.\n\t(Expand_N_Function_Call) <Rhs_Of_Assign_Or_Decl>: New function to\n\tdetect whether the call is in the right side of an assignment or\n\tthe expression of an object declaration.  Recurse on component\n\tassociation within aggregates.\n\tCall it in the condition that determines whether the temporary is\n\tnecessary for correct stack-checking.\n\nFrom-SVN: r89651", "tree": {"sha": "97532d0450cf7bf431269a4f4a0b9d1c84f351b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97532d0450cf7bf431269a4f4a0b9d1c84f351b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faf3cf91ab14510bbe55c1afcd2b378f8d0632ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf3cf91ab14510bbe55c1afcd2b378f8d0632ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf3cf91ab14510bbe55c1afcd2b378f8d0632ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf3cf91ab14510bbe55c1afcd2b378f8d0632ab/comments", "author": null, "committer": null, "parents": [{"sha": "5e1c00fac7db1ff2c586a8664dec5745bbf50fa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e1c00fac7db1ff2c586a8664dec5745bbf50fa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e1c00fac7db1ff2c586a8664dec5745bbf50fa6"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "be9463ba1a201b25c2f7be9edbadacefca4f3659", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 38, "deletions": 7, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faf3cf91ab14510bbe55c1afcd2b378f8d0632ab/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faf3cf91ab14510bbe55c1afcd2b378f8d0632ab/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=faf3cf91ab14510bbe55c1afcd2b378f8d0632ab", "patch": "@@ -955,8 +955,13 @@ package body Exp_Ch6 is\n             then\n                Add_Call_By_Copy_Code;\n \n+            --  If the actual is not a scalar and is marked for volatile\n+            --  treatment, whereas the formal is not volatile, then pass\n+            --  by copy unless it is a by-reference type.\n+\n             elsif Is_Entity_Name (Actual)\n               and then Treat_As_Volatile (Entity (Actual))\n+              and then not Is_By_Reference_Type (Etype (Actual))\n               and then not Is_Scalar_Type (Etype (Entity (Actual)))\n               and then not Treat_As_Volatile (E_Formal)\n             then\n@@ -2896,6 +2901,11 @@ package body Exp_Ch6 is\n       --  by reference, we don't want to create a temp to force stack checking.\n       --  Shouldn't this function be moved to exp_util???\n \n+      function Rhs_Of_Assign_Or_Decl (N : Node_Id) return Boolean;\n+      --  If the call is the right side of an assignment or the expression in\n+      --  an object declaration, we don't need to create a temp as the left\n+      --  side will already trigger stack checking if necessary.\n+\n       ---------------------------\n       -- Returned_By_Reference --\n       ---------------------------\n@@ -2925,6 +2935,33 @@ package body Exp_Ch6 is\n          end if;\n       end Returned_By_Reference;\n \n+      ---------------------------\n+      -- Rhs_Of_Assign_Or_Decl --\n+      ---------------------------\n+\n+      function Rhs_Of_Assign_Or_Decl (N : Node_Id) return Boolean is\n+      begin\n+         if (Nkind (Parent (N)) = N_Assignment_Statement\n+               and then Expression (Parent (N)) = N)\n+           or else\n+             (Nkind (Parent (N)) = N_Qualified_Expression\n+                and then Nkind (Parent (Parent (N))) = N_Assignment_Statement\n+                  and then Expression (Parent (Parent (N))) = Parent (N))\n+           or else\n+             (Nkind (Parent (N)) = N_Object_Declaration\n+                and then Expression (Parent (N)) = N)\n+           or else\n+             (Nkind (Parent (N)) = N_Component_Association\n+                and then Expression (Parent (N)) = N\n+                  and then Nkind (Parent (Parent (N))) = N_Aggregate\n+                    and then Rhs_Of_Assign_Or_Decl (Parent (Parent (N))))\n+         then\n+            return True;\n+         else\n+            return False;\n+         end if;\n+      end Rhs_Of_Assign_Or_Decl;\n+\n    --  Start of processing for Expand_N_Function_Call\n \n    begin\n@@ -2941,13 +2978,7 @@ package body Exp_Ch6 is\n       --  the instance itself is installed.\n \n       if May_Generate_Large_Temp (Typ)\n-        and then Nkind (Parent (N)) /= N_Assignment_Statement\n-        and then\n-          (Nkind (Parent (N)) /= N_Qualified_Expression\n-             or else Nkind (Parent (Parent (N))) /= N_Assignment_Statement)\n-        and then\n-          (Nkind (Parent (N)) /= N_Object_Declaration\n-             or else Expression (Parent (N)) /= N)\n+        and then not Rhs_Of_Assign_Or_Decl (N)\n         and then not Returned_By_Reference\n         and then Current_Scope /= Standard_Standard\n       then"}]}