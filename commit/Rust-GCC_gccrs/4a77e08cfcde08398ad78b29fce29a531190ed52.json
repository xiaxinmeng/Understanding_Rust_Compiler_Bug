{"sha": "4a77e08cfcde08398ad78b29fce29a531190ed52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE3N2UwOGNmY2RlMDgzOThhZDc4YjI5ZmNlMjlhNTMxMTkwZWQ1Mg==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2004-04-08T22:31:23Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2004-04-08T22:31:23Z"}, "message": "re PR c++/14808 ([win32] Undefined results with virtual base classes)\n\n\tPR c++/14808\n\t* defaults.h (TARGET_USE_LOCAL_THUNK_ALIAS_P): New macro. Default\n\tto 1 if ASM_OUTPUT_DEF is defined.\n\t* doc/tm.texi (TARGET_USE_LOCAL_THUNK_ALIAS_P): Document.\n\t* config/i386/cygming.h (TARGET_USE_LOCAL_THUNK_ALIAS_P): Define.\n\tSet to non-zero iff not a one_only decl.\n\n\t* cp/method.c (use_thunk): Test TARGET_USE_LOCAL_THUNK_ALIAS_P rather\n\tthan ASM_OUTPUT_DEF.\n\nFrom-SVN: r80525", "tree": {"sha": "ce3b9965aa669725a68d26a5e2a93e944f64f5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce3b9965aa669725a68d26a5e2a93e944f64f5bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a77e08cfcde08398ad78b29fce29a531190ed52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a77e08cfcde08398ad78b29fce29a531190ed52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a77e08cfcde08398ad78b29fce29a531190ed52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a77e08cfcde08398ad78b29fce29a531190ed52/comments", "author": null, "committer": null, "parents": [{"sha": "cc81dde821dd144faa36924fe5c5febd54c64649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc81dde821dd144faa36924fe5c5febd54c64649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc81dde821dd144faa36924fe5c5febd54c64649"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "aafeafa41aadc8b1cda66c3d1dc8de5c2d798192", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a77e08cfcde08398ad78b29fce29a531190ed52", "patch": "@@ -1,3 +1,12 @@\n+2004-04-08  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR c++/14808\n+\t* defaults.h (TARGET_USE_LOCAL_THUNK_ALIAS_P): New macro. Default\n+\tto 1 if ASM_OUTPUT_DEF is defined.\n+\t* doc/tm.texi (TARGET_USE_LOCAL_THUNK_ALIAS_P): Document.\n+\t* config/i386/cygming.h (TARGET_USE_LOCAL_THUNK_ALIAS_P): Define.\n+\tSet to non-zero iff not a one_only decl.\n+\n 2004-04-08  Paul Brook  <paul@codesourcery.com>\n \n \t* arm.h (CLASS_LIKELY_SPILLED_P): Define."}, {"sha": "85027925ec17b84e6a2cf33155b7473114481246", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=4a77e08cfcde08398ad78b29fce29a531190ed52", "patch": "@@ -382,6 +382,11 @@ extern int i386_pe_dllimport_name_p (const char *);\n       ASM_OUTPUT_DEF (STREAM, alias, IDENTIFIER_POINTER (TARGET));\t\\\n     } while (0)\n \n+/* Decide whether it is safe to use a local alias for a virtual function\n+   when constructing thunks.  */\n+#undef TARGET_USE_LOCAL_THUNK_ALIAS_P\n+#define TARGET_USE_LOCAL_THUNK_ALIAS_P(DECL) (!DECL_ONE_ONLY (DECL))\n+\n #undef TREE\n \n #ifndef BUFSIZ"}, {"sha": "bfb3191e53472ef73b15a9b35b6831b4f7ceefc7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4a77e08cfcde08398ad78b29fce29a531190ed52", "patch": "@@ -1,3 +1,9 @@\n+2004-04-08  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR c++/14808\n+\t* method.c (use_thunk): Test TARGET_USE_LOCAL_THUNK_ALIAS_P rather\n+\tthan ASM_OUTPUT_DEF.\n+\n 2004-04-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* decl2.c (mark_used): Don't segfault if cfun != NULL but"}, {"sha": "49ba9834d990a55188cebe789cc115bc9e2a016c", "filename": "gcc/cp/method.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=4a77e08cfcde08398ad78b29fce29a531190ed52", "patch": "@@ -363,11 +363,10 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n   if (!emit_p)\n     return;\n \n-#ifdef ASM_OUTPUT_DEF\n-  alias = make_alias_for_thunk (function);\n-#else\n-  alias = function;\n-#endif\n+  if (TARGET_USE_LOCAL_THUNK_ALIAS_P (function))\n+   alias = make_alias_for_thunk (function);\n+  else\n+   alias = function;\n \n   fixed_offset = THUNK_FIXED_OFFSET (thunk_fndecl);\n   virtual_offset = THUNK_VIRTUAL_OFFSET (thunk_fndecl);\n@@ -401,8 +400,8 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n \n   push_to_top_level ();\n \n-#ifdef ASM_OUTPUT_DEF\n-  if (targetm.have_named_sections)\n+  if (TARGET_USE_LOCAL_THUNK_ALIAS_P (function)\n+      && targetm.have_named_sections)\n     {\n       resolve_unique_section (function, 0, flag_function_sections);\n \n@@ -414,7 +413,6 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n \t  DECL_SECTION_NAME (thunk_fndecl) = DECL_SECTION_NAME (function);\n \t}\n     }\n-#endif\n \n   /* The back-end expects DECL_INITIAL to contain a BLOCK, so we\n      create one.  */"}, {"sha": "9f261d0e0debe224e6518973b71fdb369c9efc50", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=4a77e08cfcde08398ad78b29fce29a531190ed52", "patch": "@@ -484,6 +484,16 @@ do { fputs (integer_asm_op (POINTER_SIZE / BITS_PER_UNIT, TRUE), FILE); \\\n #define TARGET_VTABLE_DATA_ENTRY_DISTANCE 1\n #endif\n \n+/* Decide whether it is safe to use a local alias for a virtual function\n+   when constructing thunks.  */\n+#ifndef TARGET_USE_LOCAL_THUNK_ALIAS_P\n+#ifdef ASM_OUTPUT_DEF\n+#define TARGET_USE_LOCAL_THUNK_ALIAS_P(DECL) 1\n+#else\n+#define TARGET_USE_LOCAL_THUNK_ALIAS_P(DECL) 0\n+#endif\n+#endif\n+\n /* Select a format to encode pointers in exception handling data.  We\n    prefer those that result in fewer dynamic relocations.  Assume no\n    special support here and encode direct references.  */"}, {"sha": "230ee5246431daa46e8314954693a28e05946167", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a77e08cfcde08398ad78b29fce29a531190ed52/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=4a77e08cfcde08398ad78b29fce29a531190ed52", "patch": "@@ -9209,3 +9209,11 @@ The parameter @var{path} is the include to register.  On Darwin\n systems, this is used for Framework includes, which have semantics\n that are different from @option{-I}.\n @end deftypefn\n+\n+@deftypefn {Target Hook} bool TARGET_USE_LOCAL_THUNK_ALIAS_P (tree @var{fndecl})\n+This target hook returns @code{true} if it is safe to use a local alias\n+for a virtual function @var{fndecl} when constructing thunks,\n+@code{false} otherwise. By default, the hook returns @code{true} for all\n+functions, if a target supports aliases (ie. defines\n+@code{ASM_OUTPUT_DEF}), @code{false} otherwise,\n+@end deftypefn"}]}