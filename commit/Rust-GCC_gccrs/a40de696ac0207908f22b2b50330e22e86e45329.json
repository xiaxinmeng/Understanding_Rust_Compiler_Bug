{"sha": "a40de696ac0207908f22b2b50330e22e86e45329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwZGU2OTZhYzAyMDc5MDhmMjJiMmI1MDMzMGUyMmU4NmU0NTMyOQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-06-13T22:15:51Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-06-13T22:15:51Z"}, "message": "fold-const.c (fold_checksum_tree <case 't'>): Only look at TREE_VALUES if the EXPR is an ENUMERAL_TYPE.\n\n2004-06-13  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * fold-const.c (fold_checksum_tree <case 't'>): Only\n        look at TREE_VALUES if the EXPR is an ENUMERAL_TYPE.\n        Only look at TYPE_MIN_VALUE and TYPE_MAX_VALUE if\n        EXPR is an INTEGERAL_TYPE or a scalar float type.\n\nFrom-SVN: r83068", "tree": {"sha": "fb674db0c88cd83c47b51eb697f13cb87d395920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb674db0c88cd83c47b51eb697f13cb87d395920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a40de696ac0207908f22b2b50330e22e86e45329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40de696ac0207908f22b2b50330e22e86e45329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40de696ac0207908f22b2b50330e22e86e45329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40de696ac0207908f22b2b50330e22e86e45329/comments", "author": null, "committer": null, "parents": [{"sha": "d29647a46cd2396c11366309a3e3c19b85f3d499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29647a46cd2396c11366309a3e3c19b85f3d499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d29647a46cd2396c11366309a3e3c19b85f3d499"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "8ec2db59619b632d710757b2f650b5ea78a4fd0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40de696ac0207908f22b2b50330e22e86e45329/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40de696ac0207908f22b2b50330e22e86e45329/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a40de696ac0207908f22b2b50330e22e86e45329", "patch": "@@ -1,3 +1,10 @@\n+2004-06-13  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* fold-const.c (fold_checksum_tree <case 't'>): Only\n+\tlook at TREE_VALUES if the EXPR is an ENUMERAL_TYPE.\n+\tOnly look at TYPE_MIN_VALUE and TYPE_MAX_VALUE if\n+\tEXPR is an INTEGERAL_TYPE or a scalar float type.\n+\n 2004-06-13  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-sra.c (tree_sra): Update documentation."}, {"sha": "1cc2b8189c880954d4eab18a940df201cf51b2f3", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40de696ac0207908f22b2b50330e22e86e45329/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40de696ac0207908f22b2b50330e22e86e45329/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=a40de696ac0207908f22b2b50330e22e86e45329", "patch": "@@ -8731,13 +8731,18 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n       fold_checksum_tree (DECL_VINDEX (expr), ctx, ht);\n       break;\n     case 't':\n-      fold_checksum_tree (TYPE_VALUES (expr), ctx, ht);\n+      if (TREE_CODE (expr) == ENUMERAL_TYPE)\n+        fold_checksum_tree (TYPE_VALUES (expr), ctx, ht);\n       fold_checksum_tree (TYPE_SIZE (expr), ctx, ht);\n       fold_checksum_tree (TYPE_SIZE_UNIT (expr), ctx, ht);\n       fold_checksum_tree (TYPE_ATTRIBUTES (expr), ctx, ht);\n       fold_checksum_tree (TYPE_NAME (expr), ctx, ht);\n-      fold_checksum_tree (TYPE_MIN_VALUE (expr), ctx, ht);\n-      fold_checksum_tree (TYPE_MAX_VALUE (expr), ctx, ht);\n+      if (INTEGRAL_TYPE_P (expr)\n+          || SCALAR_FLOAT_TYPE_P (expr))\n+\t{\n+\t  fold_checksum_tree (TYPE_MIN_VALUE (expr), ctx, ht);\n+\t  fold_checksum_tree (TYPE_MAX_VALUE (expr), ctx, ht);\n+\t}\n       fold_checksum_tree (TYPE_MAIN_VARIANT (expr), ctx, ht);\n       fold_checksum_tree (TYPE_BINFO (expr), ctx, ht);\n       fold_checksum_tree (TYPE_CONTEXT (expr), ctx, ht);"}]}