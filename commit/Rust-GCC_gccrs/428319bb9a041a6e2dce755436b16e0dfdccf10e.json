{"sha": "428319bb9a041a6e2dce755436b16e0dfdccf10e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4MzE5YmI5YTA0MWE2ZTJkY2U3NTU0MzZiMTZlMGRmZGNjZjEwZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-06-05T20:28:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-06-05T20:28:38Z"}, "message": "ptr_traits.h (pointer_traits): Fix typos.\n\n2011-06-05  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* include/bits/ptr_traits.h (pointer_traits): Fix typos.\n\t* include/ext/pointer.h (pointer_traits): Add partial specialization\n\tfor _Pointer_adapter.\n\nFrom-SVN: r174661", "tree": {"sha": "419f7baaabe7c5964b7af4ecfda23880d0e4ab02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/419f7baaabe7c5964b7af4ecfda23880d0e4ab02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/428319bb9a041a6e2dce755436b16e0dfdccf10e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428319bb9a041a6e2dce755436b16e0dfdccf10e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428319bb9a041a6e2dce755436b16e0dfdccf10e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428319bb9a041a6e2dce755436b16e0dfdccf10e/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "142f5e4acdce0a04f2619784ddf54ff924082bbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/142f5e4acdce0a04f2619784ddf54ff924082bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/142f5e4acdce0a04f2619784ddf54ff924082bbc"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "2f485b1423d8ef83a7d65e72bd20de210ca92f88", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428319bb9a041a6e2dce755436b16e0dfdccf10e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428319bb9a041a6e2dce755436b16e0dfdccf10e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=428319bb9a041a6e2dce755436b16e0dfdccf10e", "patch": "@@ -1,3 +1,9 @@\n+2011-06-05  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/bits/ptr_traits.h (pointer_traits): Fix typos.\n+\t* include/ext/pointer.h (pointer_traits): Add partial specialization\n+\tfor _Pointer_adapter.\n+\n 2011-06-04  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* testsuite/util/testsuite_allocator.h (tracker_allocator::construct):"}, {"sha": "c83beadb149527dcbd490c576ae8304165b155dc", "filename": "libstdc++-v3/include/bits/ptr_traits.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428319bb9a041a6e2dce755436b16e0dfdccf10e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428319bb9a041a6e2dce755436b16e0dfdccf10e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h?ref=428319bb9a041a6e2dce755436b16e0dfdccf10e", "patch": "@@ -106,8 +106,8 @@ _GLIBCXX_HAS_NESTED_TYPE(difference_type)\n \n   /* TODO: remove second bool when alias templates are supported */\n   template<typename _Tp, typename _Up,\n-           bool = __ptrtr_rebind_helper<_Tp, _Up>::value,\n-           bool = __ptrtr_rebind_helper2<_Tp, _Up>::value>\n+           bool = __ptrtr_rebind_helper<_Tp, _Up>::__value,\n+           bool = __ptrtr_rebind_helper2<_Tp, _Up>::__value>\n     struct __ptrtr_rebind;\n \n   template<typename _Tp, typename _Up, bool _B2>\n@@ -178,8 +178,9 @@ _GLIBCXX_HAS_NESTED_TYPE(difference_type)\n         { typedef typename __ptrtr_rebind<_Ptr, _Up>::__type __type; };\n \n       // allocator_traits needs to use __rebind\n-      template<typename> struct allocator_traits;\n-      template<typename, typename> class __ptrtr_rebind_helper2;\n+      template<typename> friend struct allocator_traits;\n+      template<typename> friend struct pointer_traits;\n+      template<typename, typename> friend class __ptrtr_rebind_helper2;\n     };\n \n   /**"}, {"sha": "2dc1c398d1cf9b702ccf17e20f1956751eab7200", "filename": "libstdc++-v3/include/ext/pointer.h", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428319bb9a041a6e2dce755436b16e0dfdccf10e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpointer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428319bb9a041a6e2dce755436b16e0dfdccf10e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpointer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpointer.h?ref=428319bb9a041a6e2dce755436b16e0dfdccf10e", "patch": "@@ -42,6 +42,9 @@\n #include <bits/stl_iterator_base_types.h>\n #include <ext/cast.h>\n #include <ext/type_traits.h>\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+# include <bits/ptr_traits.h>\n+#endif\n \n namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n {\n@@ -567,4 +570,40 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  template<typename _Storage_policy>\n+    struct pointer_traits<__gnu_cxx::_Pointer_adapter<_Storage_policy>>\n+    {\n+      /// The pointer type\n+      typedef __gnu_cxx::_Pointer_adapter<_Storage_policy>         pointer;\n+      /// The type pointed to\n+      typedef typename pointer::element_type            element_type;\n+      /// Type used to represent the difference between two pointers\n+      typedef typename pointer::difference_type         difference_type;\n+\n+      /* TODO: replace __rebind<U> with alias template rebind<U> */\n+      /*\n+      template<typename _Up>\n+        using rebind<_Up> = typename __gnu_cxx::_Pointer_adapter<\n+          typename pointer_traits<_Storage_policy>::rebind<_Up>>\n+      */\n+      template<typename _Up>\n+        class __rebind\n+        {\n+          typedef pointer_traits<_Storage_policy> _Policy_traits;\n+          typedef typename _Policy_traits::template __rebind<_Up>::__type\n+            _Rebound_policy;\n+        public:\n+          typedef typename __gnu_cxx::_Pointer_adapter<_Rebound_policy> __type;\n+        };\n+    };\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace\n+#endif\n+\n #endif // _POINTER_H"}]}