{"sha": "df1a69f6a85e6c82e206388daa459f06d2e92876", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYxYTY5ZjZhODVlNmM4MmUyMDYzODhkYWE0NTlmMDZkMmU5Mjg3Ng==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael.morin@sfr.fr", "date": "2011-08-18T22:42:38Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-08-18T22:42:38Z"}, "message": "re PR fortran/50071 (gfortran does not distinguish labels in different type scoping units)\n\n2011-08-19  Mikael Morin  <mikael.morin@sfr.fr>\n\n\tPR fortran/50071\n\t* gfortran.h (gfc_exec_op): New constant EXEC_END_NESTED_BLOCK.\n\t* parse.c (check_statement_label): Accept ST_END_BLOCK and\n\tST_END_ASSOCIATE as valid branch target.\n\t(accept_statement): Change EXEC_END_BLOCK to EXEC_END_NESTED_BLOCK.\n\tAdd EXEC_END_BLOCK code in the ST_END_BLOCK and ST_END_ASSOCIATE cases.\n\t* resolve.c (find_reachable_labels): Change EXEC_END_BLOCK to\n\tEXEC_END_NESTED_BLOCK.\n\t(resolve_branch): Ditto.\n\t(resolve_code): Add EXEC_END_NESTED_BLOCK case.\n\t* st.c (gfc_free_statement): Ditto.\n\t* trans.c (trans_code): Ditto.\n\n2011-08-19  Mikael Morin  <mikael.morin@sfr.fr>\n\n\tPR fortran/50071\n\t* gfortran.dg/end_block_label_1.f90: New test.\n\t* gfortran.dg/end_associate_label_1.f90: New test.\n\nFrom-SVN: r177885", "tree": {"sha": "cd909034298135072ec57ac3e175166acb6dba01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd909034298135072ec57ac3e175166acb6dba01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df1a69f6a85e6c82e206388daa459f06d2e92876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1a69f6a85e6c82e206388daa459f06d2e92876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df1a69f6a85e6c82e206388daa459f06d2e92876", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1a69f6a85e6c82e206388daa459f06d2e92876/comments", "author": null, "committer": null, "parents": [{"sha": "a7ad08aef73fd2c4219a31a419e41ce2e5408a09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ad08aef73fd2c4219a31a419e41ce2e5408a09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ad08aef73fd2c4219a31a419e41ce2e5408a09"}], "stats": {"total": 74, "additions": 70, "deletions": 4}, "files": [{"sha": "b2f92622901e14bd8b2198e9a22d570e49b9242c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -1,3 +1,18 @@\n+2011-08-19  Mikael Morin  <mikael.morin@sfr.fr>\n+\n+\tPR fortran/50071\n+\t* gfortran.h (gfc_exec_op): New constant EXEC_END_NESTED_BLOCK.\n+\t* parse.c (check_statement_label): Accept ST_END_BLOCK and\n+\tST_END_ASSOCIATE as valid branch target.\n+\t(accept_statement): Change EXEC_END_BLOCK to EXEC_END_NESTED_BLOCK.\n+\tAdd EXEC_END_BLOCK code in the ST_END_BLOCK and ST_END_ASSOCIATE cases.\n+\t* resolve.c (find_reachable_labels): Change EXEC_END_BLOCK to\n+\tEXEC_END_NESTED_BLOCK.\n+\t(resolve_branch): Ditto.\n+\t(resolve_code): Add EXEC_END_NESTED_BLOCK case.\n+\t* st.c (gfc_free_statement): Ditto.\n+\t* trans.c (trans_code): Ditto.\n+\n 2011-08-18  Mikael Morin  <mikael.morin@sfr.fr>\n \n \tPR fortran/50071"}, {"sha": "ae0a138e7bdaae9db6bea316c15a495784b2a3cd", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -2048,8 +2048,8 @@ gfc_association_list;\n /* Executable statements that fill gfc_code structures.  */\n typedef enum\n {\n-  EXEC_NOP = 1, EXEC_END_BLOCK, EXEC_ASSIGN, EXEC_LABEL_ASSIGN,\n-  EXEC_POINTER_ASSIGN, EXEC_CRITICAL, EXEC_ERROR_STOP,\n+  EXEC_NOP = 1, EXEC_END_NESTED_BLOCK, EXEC_END_BLOCK, EXEC_ASSIGN,\n+  EXEC_LABEL_ASSIGN, EXEC_POINTER_ASSIGN, EXEC_CRITICAL, EXEC_ERROR_STOP,\n   EXEC_GOTO, EXEC_CALL, EXEC_COMPCALL, EXEC_ASSIGN_CALL, EXEC_RETURN,\n   EXEC_ENTRY, EXEC_PAUSE, EXEC_STOP, EXEC_CONTINUE, EXEC_INIT_ASSIGN,\n   EXEC_IF, EXEC_ARITHMETIC_IF, EXEC_DO, EXEC_DO_WHILE, EXEC_SELECT, EXEC_BLOCK,"}, {"sha": "aab711cdaae534a47347e2b2e9199e4ad2977be4", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -1115,6 +1115,8 @@ check_statement_label (gfc_statement st)\n     case ST_ENDIF:\n     case ST_END_SELECT:\n     case ST_END_CRITICAL:\n+    case ST_END_BLOCK:\n+    case ST_END_ASSOCIATE:\n     case_executable:\n     case_exec_markers:\n       type = ST_LABEL_TARGET;\n@@ -1625,6 +1627,18 @@ accept_statement (gfc_statement st)\n     case ST_ENDIF:\n     case ST_END_SELECT:\n     case ST_END_CRITICAL:\n+      if (gfc_statement_label != NULL)\n+\t{\n+\t  new_st.op = EXEC_END_NESTED_BLOCK;\n+\t  add_statement ();\n+\t}\n+      break;\n+\n+      /* In the case of BLOCK and ASSOCIATE blocks, there cannot be more than\n+\t one parallel block.  Thus, we add the special code to the nested block\n+\t itself, instead of the parent one.  */\n+    case ST_END_BLOCK:\n+    case ST_END_ASSOCIATE:\n       if (gfc_statement_label != NULL)\n \t{\n \t  new_st.op = EXEC_END_BLOCK;"}, {"sha": "ea184a23f0db7ccb048324bdd038b6d1e40d1558", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -8202,7 +8202,7 @@ find_reachable_labels (gfc_code *block)\n      up through the code_stack.  */\n   for (c = block; c; c = c->next)\n     {\n-      if (c->here && c->op != EXEC_END_BLOCK)\n+      if (c->here && c->op != EXEC_END_NESTED_BLOCK)\n \tbitmap_set_bit (cs_base->reachable_labels, c->here->value);\n     }\n \n@@ -8381,7 +8381,7 @@ resolve_branch (gfc_st_label *label, gfc_code *code)\n \n   if (stack)\n     {\n-      gcc_assert (stack->current->next->op == EXEC_END_BLOCK);\n+      gcc_assert (stack->current->next->op == EXEC_END_NESTED_BLOCK);\n       return;\n     }\n \n@@ -9117,6 +9117,7 @@ resolve_code (gfc_code *code, gfc_namespace *ns)\n \t{\n \tcase EXEC_NOP:\n \tcase EXEC_END_BLOCK:\n+\tcase EXEC_END_NESTED_BLOCK:\n \tcase EXEC_CYCLE:\n \tcase EXEC_PAUSE:\n \tcase EXEC_STOP:"}, {"sha": "572baafc3e99951cc3cfb71c8d8a627d1c9c87f4", "filename": "gcc/fortran/st.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Fst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Fst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fst.c?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -89,6 +89,7 @@ gfc_free_statement (gfc_code *p)\n     {\n     case EXEC_NOP:\n     case EXEC_END_BLOCK:\n+    case EXEC_END_NESTED_BLOCK:\n     case EXEC_ASSIGN:\n     case EXEC_INIT_ASSIGN:\n     case EXEC_GOTO:"}, {"sha": "4a71c43fdcc57c9f4d26f556d92905dc03ee19fa", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -1188,6 +1188,7 @@ trans_code (gfc_code * code, tree cond)\n \t{\n \tcase EXEC_NOP:\n \tcase EXEC_END_BLOCK:\n+\tcase EXEC_END_NESTED_BLOCK:\n \tcase EXEC_END_PROCEDURE:\n \t  res = NULL_TREE;\n \t  break;"}, {"sha": "931400c42176d36bbc11d57ebf4bdf8960d676e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -1,3 +1,9 @@\n+2011-08-19  Mikael Morin  <mikael.morin@sfr.fr>\n+\n+\tPR fortran/50071\n+\t* gfortran.dg/end_block_label_1.f90: New test.\n+\t* gfortran.dg/end_associate_label_1.f90: New test.\n+\n 2011-08-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c1x-pointer-float-1.c: New test."}, {"sha": "0affc418740383762f0e15646c849722208c64f2", "filename": "gcc/testsuite/gfortran.dg/end_associate_label_1.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ftestsuite%2Fgfortran.dg%2Fend_associate_label_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ftestsuite%2Fgfortran.dg%2Fend_associate_label_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fend_associate_label_1.f90?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+!\n+! PR fortran/50071\n+! A label in an END ASSOCIATE statement was ignored; as a result, a GOTO\n+! to such a label was rejected.\n+!\n+! Contributed by Tobias Burnus <burnus@net-b.de>\n+\n+   integer :: i\n+   associate (j => i)\n+     goto 1\n+     print *, 'Hello'\n+1  end associate\n+end"}, {"sha": "feb12fcf8dbdd2df2c8365ff10d3fa573d5bc9bc", "filename": "gcc/testsuite/gfortran.dg/end_block_label_1.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ftestsuite%2Fgfortran.dg%2Fend_block_label_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df1a69f6a85e6c82e206388daa459f06d2e92876/gcc%2Ftestsuite%2Fgfortran.dg%2Fend_block_label_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fend_block_label_1.f90?ref=df1a69f6a85e6c82e206388daa459f06d2e92876", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+!\n+! PR fortran/50071\n+! A label in an END BLOCK statement was ignored; as a result, a GOTO\n+! to such a label was rejected.\n+!\n+! Contributed by Tobias Burnus <burnus@net-b.de>\n+\n+   block\n+      goto 1\n+      print *, 'Hello'\n+1  end block\n+end\n+"}]}