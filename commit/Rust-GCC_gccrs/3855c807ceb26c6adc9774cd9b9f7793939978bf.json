{"sha": "3855c807ceb26c6adc9774cd9b9f7793939978bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg1NWM4MDdjZWIyNmM2YWRjOTc3NGNkOWI5Zjc3OTM5Mzk5NzhiZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-02-03T23:35:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-02-03T23:35:42Z"}, "message": "re PR gcov-profile/30650 (ICE with -fprofile-use)\n\n\n\tPR gcov-profile/30650\n\t* value-prof.c (stringop_block_profile): Fix handling of size counter;\n\tdo not divide by zero for never executed counters.\n\t(tree_find_values_to_profile): Fix counters.\n\t* gcov-ui.h (GCOV_COUNTER_AVERAGE, GCOV_COUNTER_IOR): Fix comments.\n\nFrom-SVN: r121554", "tree": {"sha": "d998d2832e7420def69a99beb6da3a0cadc8cdf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d998d2832e7420def69a99beb6da3a0cadc8cdf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3855c807ceb26c6adc9774cd9b9f7793939978bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3855c807ceb26c6adc9774cd9b9f7793939978bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3855c807ceb26c6adc9774cd9b9f7793939978bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3855c807ceb26c6adc9774cd9b9f7793939978bf/comments", "author": null, "committer": null, "parents": [{"sha": "2b54c30fb0d5947b296e97191c4758864acfc976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b54c30fb0d5947b296e97191c4758864acfc976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b54c30fb0d5947b296e97191c4758864acfc976"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "d8ee26993cd913f7b5d7ceabf37ebf059572da73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3855c807ceb26c6adc9774cd9b9f7793939978bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3855c807ceb26c6adc9774cd9b9f7793939978bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3855c807ceb26c6adc9774cd9b9f7793939978bf", "patch": "@@ -1,3 +1,11 @@\n+2007-02-03  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR gcov-profile/30650\n+\t* value-prof.c (stringop_block_profile): Fix handling of size counter;\n+\tdo not divide by zero for never executed counters.\n+\t(tree_find_values_to_profile): Fix counters.\n+\t* gcov-ui.h (GCOV_COUNTER_AVERAGE, GCOV_COUNTER_IOR): Fix comments.\n+\n 2007-02-03  Ian Lance Taylor  <iant@google.com>\n \n \t* lower-subreg.c (simple_move_operand): New static function,"}, {"sha": "a874b32dc629d20a2ab3480a4534d49bf6b2ef89", "filename": "gcc/gcov-io.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3855c807ceb26c6adc9774cd9b9f7793939978bf/gcc%2Fgcov-io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3855c807ceb26c6adc9774cd9b9f7793939978bf/gcc%2Fgcov-io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.h?ref=3855c807ceb26c6adc9774cd9b9f7793939978bf", "patch": "@@ -329,10 +329,10 @@ typedef HOST_WIDEST_INT gcov_type;\n \t\t\t\t      consecutive values of expression.  */\n \n #define GCOV_COUNTER_V_INDIR\t5  /* The most common indirect address */\n-#define GCOV_COUNTER_AVERAGE\t6  /* The most common difference between\n-\t\t\t\t      consecutive values of expression.  */\n-#define GCOV_COUNTER_IOR\t7  /* The most common difference between\n-\t\t\t\t      consecutive values of expression.  */\n+#define GCOV_COUNTER_AVERAGE\t6  /* Compute average value passed to the\n+\t\t\t\t      counter.  */\n+#define GCOV_COUNTER_IOR\t7  /* IOR of the all values passed to\n+\t\t\t\t      counter.  */\n #define GCOV_LAST_VALUE_COUNTER 7  /* The last of counters used for value\n \t\t\t\t      profiling.  */\n #define GCOV_COUNTERS\t\t8"}, {"sha": "b03e6777ae8f91b5a271e0937bf9f77deb2a79d5", "filename": "gcc/value-prof.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3855c807ceb26c6adc9774cd9b9f7793939978bf/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3855c807ceb26c6adc9774cd9b9f7793939978bf/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=3855c807ceb26c6adc9774cd9b9f7793939978bf", "patch": "@@ -1434,12 +1434,17 @@ stringop_block_profile (tree stmt, unsigned int *expected_align,\n   histogram = gimple_histogram_value_of_type (cfun, stmt, HIST_TYPE_AVERAGE);\n   if (!histogram)\n     *expected_size = -1;\n+  else if (!histogram->hvalue.counters[1])\n+    {\n+      *expected_size = -1;\n+      gimple_remove_histogram_value (cfun, stmt, histogram);\n+    }\n   else\n     {\n       gcov_type size;\n       size = ((histogram->hvalue.counters[0]\n-\t      + histogram->hvalue.counters[0] / 2)\n-\t       / histogram->hvalue.counters[0]);\n+\t      + histogram->hvalue.counters[1] / 2)\n+\t       / histogram->hvalue.counters[1]);\n       /* Even if we can hold bigger value in SIZE, INT_MAX\n \t is safe \"infinity\" for code generation strategies.  */\n       if (size > INT_MAX)\n@@ -1450,6 +1455,11 @@ stringop_block_profile (tree stmt, unsigned int *expected_align,\n   histogram = gimple_histogram_value_of_type (cfun, stmt, HIST_TYPE_IOR);\n   if (!histogram)\n     *expected_align = 0;\n+  else if (!histogram->hvalue.counters[0])\n+    {\n+      gimple_remove_histogram_value (cfun, stmt, histogram);\n+      *expected_align = 0;\n+    }\n   else\n     {\n       gcov_type count;\n@@ -1661,11 +1671,11 @@ tree_find_values_to_profile (histogram_values *values)\n \t  break;\n \n \tcase HIST_TYPE_AVERAGE:\n-\t  hist->n_counters = 3;\n+\t  hist->n_counters = 2;\n \t  break;\n \n \tcase HIST_TYPE_IOR:\n-\t  hist->n_counters = 3;\n+\t  hist->n_counters = 1;\n \t  break;\n \n \tdefault:"}]}