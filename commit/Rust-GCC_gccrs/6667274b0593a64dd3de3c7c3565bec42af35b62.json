{"sha": "6667274b0593a64dd3de3c7c3565bec42af35b62", "node_id": "C_kwDOANBUbNoAKDY2NjcyNzRiMDU5M2E2NGRkM2RlM2M3YzM1NjViZWM0MmFmMzViNjI", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-21T01:34:21Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-21T01:34:21Z"}, "message": "libstdc++: Implement LWG 3535 changes to ranges::join_view\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (join_view::__iter_cat::_S_iter_cat): Adjust\n\tcriteria for returning bidirectional_iterator_tag as per LWG 3535.\n\t(join_view::_Iterator::_S_iter_concept): Likewise.", "tree": {"sha": "5f317ec7a8c3cceaa904acbe097ee213ce22e998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f317ec7a8c3cceaa904acbe097ee213ce22e998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6667274b0593a64dd3de3c7c3565bec42af35b62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6667274b0593a64dd3de3c7c3565bec42af35b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6667274b0593a64dd3de3c7c3565bec42af35b62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6667274b0593a64dd3de3c7c3565bec42af35b62/comments", "author": null, "committer": null, "parents": [{"sha": "a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "c1519c7dbd5f9ed1152b553881bedba9e9398530", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6667274b0593a64dd3de3c7c3565bec42af35b62/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6667274b0593a64dd3de3c7c3565bec42af35b62/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=6667274b0593a64dd3de3c7c3565bec42af35b62", "patch": "@@ -2523,7 +2523,8 @@ namespace views::__adaptor\n \t    using _OuterCat = typename iterator_traits<_Outer_iter>::iterator_category;\n \t    using _InnerCat = typename iterator_traits<_Inner_iter>::iterator_category;\n \t    if constexpr (derived_from<_OuterCat, bidirectional_iterator_tag>\n-\t\t\t  && derived_from<_InnerCat, bidirectional_iterator_tag>)\n+\t\t\t  && derived_from<_InnerCat, bidirectional_iterator_tag>\n+\t\t\t  && common_range<range_reference_t<_Base<_Const>>>)\n \t      return bidirectional_iterator_tag{};\n \t    else if constexpr (derived_from<_OuterCat, forward_iterator_tag>\n \t\t\t       && derived_from<_InnerCat, forward_iterator_tag>)\n@@ -2575,7 +2576,8 @@ namespace views::__adaptor\n \t  {\n \t    if constexpr (_S_ref_is_glvalue\n \t\t\t  && bidirectional_range<_Base>\n-\t\t\t  && bidirectional_range<range_reference_t<_Base>>)\n+\t\t\t  && bidirectional_range<range_reference_t<_Base>>\n+\t\t\t  && common_range<range_reference_t<_Base>>)\n \t      return bidirectional_iterator_tag{};\n \t    else if constexpr (_S_ref_is_glvalue\n \t\t\t       && forward_range<_Base>"}]}