{"sha": "64106a1a20775c1ceb07cdb553b9e20402c3e6fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQxMDZhMWEyMDc3NWMxY2ViMDdjZGI1NTNiOWUyMDQwMmMzZTZmYw==", "commit": {"author": {"name": "Yuri Rumyantsev", "email": "ysrumyan@gmail.com", "date": "2015-09-14T09:36:29Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-09-14T09:36:29Z"}, "message": "haswell.md: New file describing Haswell pipeline.\n\n\t* config/i386/haswell.md: New file describing Haswell pipeline.\n\t* config/i386/i386.c (processor_alias_table): Use CPU_HASWELL for\n\thaswell-like processors.\n\t(ix86_reassociation_width): Increase reassociation width for 64-bit\n\tHaswell processor family.\n\t* config/i386/i386.md: Introduce haswell cpu and include new md file.\n\nFrom-SVN: r227740", "tree": {"sha": "c9a001c4976f367d195060749b945249db5fab39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9a001c4976f367d195060749b945249db5fab39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64106a1a20775c1ceb07cdb553b9e20402c3e6fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64106a1a20775c1ceb07cdb553b9e20402c3e6fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64106a1a20775c1ceb07cdb553b9e20402c3e6fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/comments", "author": {"login": "ysrumyan", "id": 44425612, "node_id": "MDQ6VXNlcjQ0NDI1NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/44425612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysrumyan", "html_url": "https://github.com/ysrumyan", "followers_url": "https://api.github.com/users/ysrumyan/followers", "following_url": "https://api.github.com/users/ysrumyan/following{/other_user}", "gists_url": "https://api.github.com/users/ysrumyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysrumyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysrumyan/subscriptions", "organizations_url": "https://api.github.com/users/ysrumyan/orgs", "repos_url": "https://api.github.com/users/ysrumyan/repos", "events_url": "https://api.github.com/users/ysrumyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ysrumyan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43f777061e5377597c125620b2749b2ad4bf2023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f777061e5377597c125620b2749b2ad4bf2023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f777061e5377597c125620b2749b2ad4bf2023"}], "stats": {"total": 642, "additions": 635, "deletions": 7}, "files": [{"sha": "7842cfe75dc5a8f00817daf7923f19778b0626b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64106a1a20775c1ceb07cdb553b9e20402c3e6fc", "patch": "@@ -1,3 +1,12 @@\n+2015-09-14  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\t* config/i386/haswell.md: New file describing Haswell pipeline.\n+\t* config/i386/i386.c (processor_alias_table): Use CPU_HASWELL for\n+\thaswell-like processors.\n+\t(ix86_reassociation_width): Increase reassociation width for 64-bit\n+\tHaswell processor family.\n+\t* config/i386/i386.md: Introduce haswell cpu and include new md file.\n+\n 2015-09-14  Richard Biener  <rguenther@suse.de>\n \n \t* doc/match-and-simplify.texi: Fixup some formatting issues"}, {"sha": "2bb0ac9873c07b9771c4365fd436de3002f300f6", "filename": "gcc/config/i386/haswell.md", "status": "added", "additions": 618, "deletions": 0, "changes": 618, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/gcc%2Fconfig%2Fi386%2Fhaswell.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/gcc%2Fconfig%2Fi386%2Fhaswell.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhaswell.md?ref=64106a1a20775c1ceb07cdb553b9e20402c3e6fc", "patch": "@@ -0,0 +1,618 @@\n+;; Scheduling for Haswell and derived processors.\n+;; Copyright (C) 2004-2015 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.  */\n+\n+;; The scheduling description in this file is based on core2.md.\n+;; The major difference from the CORE2 pipeline is that HASWELL has\n+;; two MU for load and one MU for store.\n+(define_automaton \"haswell_decoder,haswell_core,haswell_idiv,haswell_fdiv,haswell_ssediv,haswell_load,haswell_store\")\n+\n+;; The CPU domain, used for HASWELL bypass latencies\n+(define_attr \"hsw_domain\" \"int,float,simd\"\n+  (cond [(eq_attr \"type\" \"fmov,fop,fsgn,fmul,fdiv,fpspc,fcmov,fcmp,fxch,fistp,fisttp,frndint\")\n+\t   (const_string \"float\")\n+\t (eq_attr \"type\" \"sselog,sselog1,sseiadd,sseiadd1,sseishft,sseishft1,sseimul,\n+\t\t\t  sse,ssemov,sseadd,sseadd1,ssemul,ssecmp,ssecomi,ssecvt,\n+\t\t\t  ssecvt1,sseicvt,ssediv,sseins,ssemuladd,sse4arg\")\n+\t   (cond [(eq_attr \"mode\" \"V4DF,V8SF,V2DF,V4SF,SF,DF\")\n+\t\t    (const_string \"float\")\n+\t\t  (eq_attr \"mode\" \"SI\")\n+\t\t    (const_string \"int\")]\n+\t\t  (const_string \"simd\"))\n+\t (eq_attr \"type\" \"mmx,mmxmov,mmxadd,mmxmul,mmxcmp,mmxcvt,mmxshft\")\n+\t   (const_string \"simd\")]\n+\t(const_string \"int\")))\n+\n+(define_cpu_unit \"hsw_decoder0\" \"haswell_decoder\")\n+(define_cpu_unit \"hsw_decoder1\" \"haswell_decoder\")\n+(define_cpu_unit \"hsw_decoder2\" \"haswell_decoder\")\n+(define_cpu_unit \"hsw_decoder3\" \"haswell_decoder\")\n+\n+;; We first wish to find an instruction for hsw_decoder0, so exclude\n+;; other hsw_decoders from being reserved until hsw_decoder0 is\n+;; reserved.\n+(presence_set \"hsw_decoder1\" \"hsw_decoder0\")\n+(presence_set \"hsw_decoder2\" \"hsw_decoder0\")\n+(presence_set \"hsw_decoder3\" \"hsw_decoder0\")\n+\n+;; Most instructions can be decoded on any of the three decoders.\n+(define_reservation \"hsw_decodern\" \"(hsw_decoder0|hsw_decoder1|hsw_decoder2|hsw_decoder3)\")\n+\n+;; The out-of-order core has eight pipelines.  These are similar to the\n+;; Pentium Pro's five pipelines.  Port 2,3 are responsible for memory loads,\n+;; port 7 for store address calculations, port 4 for memory stores, and\n+;; ports 0, 1, 5 and 6 for everything else.\n+\n+(define_cpu_unit \"hsw_p0,hsw_p1,hsw_p5,hsw_p6\" \"haswell_core\")\n+(define_cpu_unit \"hsw_p2,hsw_p3\" \"haswell_load\")\n+(define_cpu_unit \"hsw_p4,hsw_p7\" \"haswell_store\")\n+(define_cpu_unit \"hsw_idiv\" \"haswell_idiv\")\n+(define_cpu_unit \"hsw_fdiv\" \"haswell_fdiv\")\n+(define_cpu_unit \"hsw_ssediv\" \"haswell_ssediv\")\n+\n+(define_reservation \"hsw_p0156\" \"hsw_p0|hsw_p1|hsw_p5|hsw_p6\")\n+(define_reservation \"hsw_p0p1p5p6\" \"hsw_p0+hsw_p1+hsw_p5+hsw_p6\")\n+(define_reservation \"hsw_p23\" \"hsw_p2|hsw_p3\")\n+(define_reservation \"hsw_p4p7\" \"hsw_p4+hsw_p7\")\n+(define_reservation \"hsw_p237\" \"hsw_p2|hsw_p3|hsw_p7\")\n+(define_reservation \"hsw_p015\" \"hsw_p0|hsw_p1|hsw_p5\")\n+(define_reservation \"hsw_p01\" \"hsw_p0|hsw_p1\")\n+\n+(define_insn_reservation \"hsw_complex_insn\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (eq_attr \"type\" \"other,multi,str\"))\n+\t\t\t \"hsw_decoder0\")\n+\n+(define_insn_reservation \"hsw_call\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (eq_attr \"type\" \"call,callv\"))\n+\t\t\t \"hsw_decoder0\")\n+\n+;; imov with memory operands does not use the integer units.\n+;; imovx always decodes to one uop, and also doesn't use the integer\n+;; units if it has memory operands.\n+(define_insn_reservation \"hsw_imov\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"imov,imovx\")))\n+\t\t\t \"hsw_decodern,hsw_p0156\")\n+\n+(define_insn_reservation \"hsw_imov_load\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"imov,imovx\")))\n+\t\t\t \"hsw_decodern,hsw_p23\")\n+\n+(define_insn_reservation \"hsw_imov_store\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"store\")\n+\t\t\t\t   (eq_attr \"type\" \"imov\")))\n+\t\t\t \"hsw_decodern,hsw_p4+(hsw_p2|hsw_p3|hsw_p7)\")\n+\n+(define_insn_reservation \"hsw_icmov\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"icmov\")))\n+\t\t\t \"hsw_decodern,hsw_p0156,hsw_p0156\")\n+\n+(define_insn_reservation \"hsw_icmov_load\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"icmov\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p0156,hsw_p0156\")\n+\n+(define_insn_reservation \"hsw_push_reg\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"store\")\n+\t\t\t\t   (eq_attr \"type\" \"push\")))\n+\t\t\t \"hsw_decodern,hsw_p4+hsw_p237\")\n+\n+(define_insn_reservation \"hsw_push_mem\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"both\")\n+\t\t\t\t   (eq_attr \"type\" \"push\")))\n+\t\t\t \"hsw_decodern,hsw_p4+hsw_p237,hsw_p237\")\n+\n+;; Consider lea latency as having 2 components.\n+(define_insn_reservation \"hsw_lea\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"lea\")))\n+\t\t\t \"hsw_decodern,hsw_p1|hsw_p5\")\n+\n+(define_insn_reservation \"hsw_shift_rotate\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"ishift,ishift1,rotate,rotate1\")))\n+\t\t\t \"hsw_decodern,hsw_p0|hsw_p6\")\n+\n+(define_insn_reservation \"hsw_shift_rotate_mem\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"!none\")\n+\t\t\t\t   (eq_attr \"type\" \"ishift,ishift1,rotate,rotate1\")))\n+\t\t\t \"hsw_decodern,(hsw_p0|hsw_p6)+hsw_p237+hsw_p4\")\n+\n+(define_insn_reservation \"hsw_branch\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"ibr\")))\n+\t\t\t \"hsw_decodern,hsw_p6\")\n+\n+(define_insn_reservation \"hsw_indirect_branch\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"!none\")\n+\t\t\t\t   (eq_attr \"type\" \"ibr\")))\n+\t\t\t \"hsw_decoder0,hsw_p23+hsw_p6\")\n+\n+(define_insn_reservation \"hsw_leave\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (eq_attr \"type\" \"leave\"))\n+\t\t\t \"hsw_decoder0,hsw_p23+hsw_p0156,hsw_p0156\")\n+\n+;; imul and imulx with two/three operands only execute on port 1.\n+(define_insn_reservation \"hsw_imul\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"imul\")))\n+\t\t\t \"hsw_decodern,hsw_p1\")\n+\n+(define_insn_reservation \"hsw_imul_mem\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"!none\")\n+\t\t\t\t   (eq_attr \"type\" \"imul\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p1\")\n+\n+(define_insn_reservation \"hsw_imulx\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"imulx\")))\n+\t\t\t \"hsw_decodern,hsw_p0156,hsw_p0156\")\n+\n+(define_insn_reservation \"hsw_imulx_mem\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"!none\")\n+\t\t\t\t   (eq_attr \"type\" \"imulx\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p0156,(hsw_p0|hsw_p6|hsw_p6)\")\n+\n+\n+;; div and idiv are very similar, so we model them the same.\n+;; Use the same latency for all QI,HI and SI modes.\n+(define_insn_reservation \"hsw_idiv\" 23\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"idiv\")))\n+\t\t\t \"hsw_decoder0,(hsw_p0p1p5p6+hsw_idiv)*9\")\n+\n+(define_insn_reservation \"hsw_idiv_load\" 23\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t\t(eq_attr \"type\" \"idiv\")))\n+\t\t\t \"hsw_decoder0,hsw_p23+hsw_p0+hsw_idiv,(hsw_p0p1p5p6+hsw_idiv)*9\")\n+\n+;; x87 floating point operations.\n+\n+(define_insn_reservation \"hsw_fxch\" 0\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (eq_attr \"type\" \"fxch\"))\n+\t\t\t \"hsw_decodern\")\n+\n+(define_insn_reservation \"hsw_fop\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none,unknown\")\n+\t\t\t\t   (eq_attr \"type\" \"fop\")))\n+\t\t\t \"hsw_decodern,hsw_p1\")\n+\n+(define_insn_reservation \"hsw_fop_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"fop\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p1,hsw_p1\")\n+\n+(define_insn_reservation \"hsw_fop_store\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"store\")\n+\t\t\t\t   (eq_attr \"type\" \"fop\")))\n+\t\t\t \"hsw_decodern,hsw_p0,hsw_p0,hsw_p0+hsw_p4+hsw_p3\")\n+\n+(define_insn_reservation \"hsw_fop_both\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"both\")\n+\t\t\t\t   (eq_attr \"type\" \"fop\")))\n+\t\t\t \"hsw_decodern,hsw_p2+hsw_p0,hsw_p0+hsw_p4+hsw_p3\")\n+\n+(define_insn_reservation \"hsw_fsgn\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (eq_attr \"type\" \"fsgn\"))\n+\t\t\t \"hsw_decodern,hsw_p0\")\n+\n+(define_insn_reservation \"hsw_fistp\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (eq_attr \"type\" \"fistp\"))\n+\t\t\t \"hsw_decoder0,hsw_p1+hsw_p4+hsw_p23\")\n+\n+(define_insn_reservation \"hsw_fcmov\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (eq_attr \"type\" \"fcmov\"))\n+\t\t\t \"hsw_decoder0,hsw_p0+hsw_p5,hsw_p0\")\n+\n+(define_insn_reservation \"hsw_fcmp\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"fcmp\")))\n+\t\t\t \"hsw_decodern,hsw_p1\")\n+\n+(define_insn_reservation \"hsw_fcmp_load\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"fcmp\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p1\")\n+\n+(define_insn_reservation \"hsw_fmov\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"fmov\")))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_fmov_load\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"!XF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fmov\"))))\n+\t\t\t \"hsw_decodern,hsw_p23\")\n+\n+(define_insn_reservation \"hsw_fmov_XF_load\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"XF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fmov\"))))\n+\t\t\t \"hsw_decodern,(hsw_p23+hsw_p0)*2\")\n+\n+(define_insn_reservation \"hsw_fmov_store\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"store\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"!XF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fmov\"))))\n+\t\t\t \"hsw_decodern,hsw_p4p7\")\n+\n+(define_insn_reservation \"hsw_fmov_XF_store\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"store\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"XF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fmov\"))))\n+\t\t\t \"hsw_decodern,hsw_p4p7,hsw_p4p7\")\n+\n+(define_insn_reservation \"hsw_fmul\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"fmul\")))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_fmul_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"fmul\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p01\")\n+\n+;; fdiv latencies depend on the mode of the operands.  XFmode gives\n+;; a latency of 38 cycles, DFmode gives 32, and SFmode gives latency 18.\n+;; Division by a power of 2 takes only 9 cycles, but we cannot model\n+;; that.  Throughput is equal to latency - 1, which we model using the\n+;; hsw_div automaton.\n+(define_insn_reservation \"hsw_fdiv_SF\" 18\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n+\t\t\t \"hsw_decodern,hsw_p0+hsw_fdiv,hsw_fdiv*16\")\n+\n+(define_insn_reservation \"hsw_fdiv_SF_load\" 19\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p0+hsw_fdiv,hsw_fdiv*16\")\n+\n+(define_insn_reservation \"hsw_fdiv_DF\" 32\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n+\t\t\t \"hsw_decodern,hsw_p0+hsw_fdiv,hsw_fdiv*30\")\n+\n+(define_insn_reservation \"hsw_fdiv_DF_load\" 33\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p0+hsw_fdiv,hsw_fdiv*30\")\n+\n+(define_insn_reservation \"hsw_fdiv_XF\" 38\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"XF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n+\t\t\t \"hsw_decodern,hsw_p0+hsw_fdiv,hsw_fdiv*36\")\n+\n+(define_insn_reservation \"hsw_fdiv_XF_load\" 39\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"XF\")\n+\t\t\t\t\t(eq_attr \"type\" \"fdiv,fpspc\"))))\n+\t\t\t \"hsw_decodern,hsw_p2+hsw_p0+hsw_fdiv,hsw_fdiv*36\")\n+\n+;; MMX instructions.\n+\n+(define_insn_reservation \"hsw_mmx_add\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"mmxadd,sseiadd\")))\n+\t\t\t \"hsw_decodern,hsw_p1|hsw_p5\")\n+\n+(define_insn_reservation \"hsw_mmx_add_load\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"mmxadd,sseiadd\")))\n+\t\t\t \"hsw_decodern,hsw_p23+(hsw_p1|hsw_p5)\")\n+\n+(define_insn_reservation \"hsw_mmx_shft\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"mmxshft\")))\n+\t\t\t \"hsw_decodern,hsw_p0\")\n+\n+(define_insn_reservation \"hsw_mmx_shft_load\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"mmxshft\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p0\")\n+\n+(define_insn_reservation \"hsw_mmx_sse_shft\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"type\" \"sseishft\")\n+\t\t\t\t\t(eq_attr \"length_immediate\" \"!0\"))))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_mmx_sse_shft_load\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (and (eq_attr \"type\" \"sseishft\")\n+\t\t\t\t\t(eq_attr \"length_immediate\" \"!0\"))))\n+\t\t\t \"hsw_decodern,hsw_p01+hsw_p23\")\n+\n+(define_insn_reservation \"hsw_mmx_sse_shft1\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"type\" \"sseishft\")\n+\t\t\t\t\t(eq_attr \"length_immediate\" \"0\"))))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_mmx_sse_shft1_load\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (and (eq_attr \"type\" \"sseishft\")\n+\t\t\t\t\t(eq_attr \"length_immediate\" \"0\"))))\n+\t\t\t \"hsw_decodern,hsw_p01+hsw_p23\")\n+\n+(define_insn_reservation \"hsw_mmx_mul\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"mmxmul,sseimul\")))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_mmx_mul_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"mmxmul,sseimul\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p01\")\n+\n+(define_insn_reservation \"hsw_sse_mmxcvt\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"mode\" \"DI\")\n+\t\t\t\t   (eq_attr \"type\" \"mmxcvt\")))\n+\t\t\t \"hsw_decodern,hsw_p1\")\n+\n+;; (define_insn_reservation \"hsw_sse_mmxshft\" 2\n+;;\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+;;\t\t\t      (and (eq_attr \"mode\" \"TI\")\n+;;\t\t\t\t   (eq_attr \"type\" \"mmxshft\")))\n+;;\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+;; The sfence instruction.\n+(define_insn_reservation \"hsw_sse_sfence\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"unknown\")\n+\t\t\t\t   (eq_attr \"type\" \"sse\")))\n+\t\t\t \"hsw_decoder0,hsw_p23+hsw_p4\")\n+\n+(define_insn_reservation \"hsw_sse_SFDF\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t   (eq_attr \"type\" \"sse\")))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_sse_V4SF\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"mode\" \"V4SF\")\n+\t\t\t\t   (eq_attr \"type\" \"sse\")))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_sse_V8SF\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"mode\" \"V8SF,V4DF\")\n+\t\t\t\t   (eq_attr \"type\" \"sse\")))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_sse_addcmp\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"sseadd1,ssecmp,ssecomi\")))\n+\t\t\t \"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_sse_addcmp_load\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"sseadd1,ssecmp,ssecomi\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p01\")\n+\n+(define_insn_reservation \"hsw_sse_logic\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"sselog,sselog1\")))\n+\t\t\t \"hsw_decodern,hsw_p015\")\n+\n+(define_insn_reservation \"hsw_sse_logic_load\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"sselog,sselog1\")))\n+\t\t\t \"hsw_decodern,hsw_p015+hsw_p23\")\n+\n+(define_insn_reservation \"hsw_sse_add\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"sseadd\")))\n+\t\t\t\"hsw_decodern,hsw_p1|hsw_p5\")\n+\n+(define_insn_reservation \"hsw_sse_add_load\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"sseadd\")))\n+\t\t\t\"hsw_decodern,(hsw_p1|hsw_p5)+hsw_p23\")\n+\n+(define_insn_reservation \"hsw_sse_mul\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"ssemul\")))\n+\t\t\t\"hsw_decodern,hsw_p0\")\n+\n+(define_insn_reservation \"hsw_sse_mul_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"ssemul\")))\n+\t\t\t\"hsw_decodern,hsw_p0+hsw_p23\")\n+;; Use skylake pipeline.\n+(define_insn_reservation \"hsw_sse_muladd\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t\t(eq_attr \"type\" \"ssemuladd\")))\n+\t\t\t\"hsw_decodern,hsw_p01\")\n+\n+(define_insn_reservation \"hsw_sse_muladd_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t\t(eq_attr \"type\" \"ssemuladd\")))\n+\t\t\t\"hsw_decodern,hsw_p01+hsw_p23\")\n+\n+(define_insn_reservation \"hsw_sse_div_SF\" 18\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,V4SF,V8SF\")\n+\t\t\t\t\t(eq_attr \"type\" \"ssediv\"))))\n+\t\t\t \"hsw_decodern,hsw_p0,hsw_ssediv*14\")\n+\n+(define_insn_reservation \"hsw_sse_div_SF_load\" 18\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,V4SF,V8SF\")\n+\t\t\t\t\t(eq_attr \"type\" \"ssediv\"))))\n+\t\t\t \"hsw_decodern,(hsw_p23+hsw_p0),hsw_ssediv*14\")\n+\n+(define_insn_reservation \"hsw_sse_div_DF\" 28\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DF,V2DF,V4DF\")\n+\t\t\t\t\t(eq_attr \"type\" \"ssediv\"))))\n+\t\t\t \"hsw_decodern,hsw_p0,hsw_ssediv*20\")\n+\n+(define_insn_reservation \"hsw_sse_div_DF_load\" 28\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DF,V2DF,V4DF\")\n+\t\t\t\t\t(eq_attr \"type\" \"ssediv\"))))\n+\t\t\t \"hsw_decodern,(hsw_p23+hsw_p0),hsw_ssediv*20\")\n+\n+(define_insn_reservation \"hsw_sse_icvt\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"sseicvt\")))\n+\t\t\t \"hsw_decodern,hsw_p1\")\n+\n+(define_insn_reservation \"hsw_sse_icvt_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"!none\")\n+\t\t\t\t   (eq_attr \"type\" \"sseicvt\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p1\")\n+\n+\n+(define_insn_reservation \"hsw_sse_icvt_SI\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SI\")\n+\t\t\t\t\t(eq_attr \"type\" \"sseicvt\"))))\n+\t\t\t \"hsw_decodern,hsw_p1\")\n+\n+(define_insn_reservation \"hsw_sse_icvt_SI_load\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"!none\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SI\")\n+\t\t\t\t\t(eq_attr \"type\" \"sseicvt\"))))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p1\")\n+\n+(define_insn_reservation \"hsw_sse_mov\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t   (eq_attr \"type\" \"ssemov\")))\n+\t\t\t \"hsw_decodern,hsw_p015\")\n+\n+(define_insn_reservation \"hsw_sse_mov_load\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"ssemov\")))\n+\t\t\t \"hsw_decodern,hsw_p23\")\n+\n+(define_insn_reservation \"hsw_sse_mov_store\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"store\")\n+\t\t\t\t   (eq_attr \"type\" \"ssemov\")))\n+\t\t\t \"hsw_decodern,hsw_p4p7\")\n+\n+(define_insn_reservation \"hsw_insn\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"none,unknown\")\n+\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,sseishft1,mmx,mmxcmp\")))\n+\t\t\t \"hsw_decodern,hsw_p0156\")\n+\n+(define_insn_reservation \"hsw_insn_load\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,pop,sseishft1,mmx,mmxcmp\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p0156\")\n+\n+(define_insn_reservation \"hsw_insn_store\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"store\")\n+\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,sseishft1,mmx,mmxcmp\")))\n+\t\t\t \"hsw_decodern,hsw_p0156+hsw_p4p7\")\n+\n+;; read-modify-store instructions produce 4 uops so they have to be\n+;; decoded on hsw_decoder0 as well.\n+(define_insn_reservation \"hsw_insn_both\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"haswell\")\n+\t\t\t      (and (eq_attr \"memory\" \"both\")\n+\t\t\t\t   (eq_attr \"type\" \"alu,alu1,negnot,incdec,icmp,test,setcc,pop,sseishft1,mmx,mmxcmp\")))\n+\t\t\t \"hsw_decodern,hsw_p23+hsw_p0156+hsw_p4p7\")"}, {"sha": "00e7006ec9a838cfb008ca036bedf1565b902c70", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=64106a1a20775c1ceb07cdb553b9e20402c3e6fc", "patch": "@@ -3345,10 +3345,10 @@ ix86_option_override_internal (bool main_args_p,\n \tPTA_IVYBRIDGE},\n       {\"core-avx-i\", PROCESSOR_SANDYBRIDGE, CPU_NEHALEM,\n \tPTA_IVYBRIDGE},\n-      {\"haswell\", PROCESSOR_HASWELL, CPU_NEHALEM, PTA_HASWELL},\n-      {\"core-avx2\", PROCESSOR_HASWELL, CPU_NEHALEM, PTA_HASWELL},\n-      {\"broadwell\", PROCESSOR_HASWELL, CPU_NEHALEM, PTA_BROADWELL},\n-      {\"skylake\", PROCESSOR_HASWELL, CPU_NEHALEM, PTA_SKYLAKE},\n+      {\"haswell\", PROCESSOR_HASWELL, CPU_HASWELL, PTA_HASWELL},\n+      {\"core-avx2\", PROCESSOR_HASWELL, CPU_HASWELL, PTA_HASWELL},\n+      {\"broadwell\", PROCESSOR_HASWELL, CPU_HASWELL, PTA_BROADWELL},\n+      {\"skylake\", PROCESSOR_HASWELL, CPU_HASWELL, PTA_SKYLAKE},\n       {\"bonnell\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL},\n       {\"atom\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL},\n       {\"silvermont\", PROCESSOR_SILVERMONT, CPU_SLM, PTA_SILVERMONT},\n@@ -51732,7 +51732,7 @@ ix86_reassociation_width (unsigned int, machine_mode mode)\n   if (INTEGRAL_MODE_P (mode) && TARGET_REASSOC_INT_TO_PARALLEL)\n     return 2;\n   else if (FLOAT_MODE_P (mode) && TARGET_REASSOC_FP_TO_PARALLEL)\n-    return 2;\n+    return ((TARGET_64BIT && ix86_tune == PROCESSOR_HASWELL)? 4 : 2);\n   else\n     return 1;\n }"}, {"sha": "7808705d49c7ec56238586160b5c22d45c43f7f1", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64106a1a20775c1ceb07cdb553b9e20402c3e6fc/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=64106a1a20775c1ceb07cdb553b9e20402c3e6fc", "patch": "@@ -407,8 +407,8 @@\n \f\n ;; Processor type.\n (define_attr \"cpu\" \"none,pentium,pentiumpro,geode,k6,athlon,k8,core2,nehalem,\n-\t\t    atom,slm,generic,amdfam10,bdver1,bdver2,bdver3,bdver4,\n-\t\t    btver2\"\n+\t\t    atom,slm,haswell,generic,amdfam10,bdver1,bdver2,bdver3,\n+\t\t    bdver4,btver2\"\n   (const (symbol_ref \"ix86_schedule\")))\n \n ;; A basic instruction type.  Refinements due to arguments to be\n@@ -1166,6 +1166,7 @@\n (include \"atom.md\")\n (include \"slm.md\")\n (include \"core2.md\")\n+(include \"haswell.md\")\n \n \f\n ;; Operand and operator predicates and constraints"}]}