{"sha": "4298c66b588698054310f031cb6daae4a9f1ffa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI5OGM2NmI1ODg2OTgwNTQzMTBmMDMxY2I2ZGFhZTRhOWYxZmZhMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-01-08T11:51:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-01-08T11:51:42Z"}, "message": "i386-cadd.c: New test.\n\n\t* gcc.dg/i386-cadd.c: New test.\n\t* gcc.dg/i386-cmov4.c: Likewise.\n\nFrom-SVN: r61039", "tree": {"sha": "95a4aa088c7fd1e1af0af241552f410328f36743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95a4aa088c7fd1e1af0af241552f410328f36743"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4298c66b588698054310f031cb6daae4a9f1ffa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4298c66b588698054310f031cb6daae4a9f1ffa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4298c66b588698054310f031cb6daae4a9f1ffa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4298c66b588698054310f031cb6daae4a9f1ffa1/comments", "author": null, "committer": null, "parents": [{"sha": "7b52eedeedb2247bee0018a2d1a81f00ceb350c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b52eedeedb2247bee0018a2d1a81f00ceb350c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b52eedeedb2247bee0018a2d1a81f00ceb350c0"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "ba32c50072b7f77dab348ae1010dc3ac1d7b36d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4298c66b588698054310f031cb6daae4a9f1ffa1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4298c66b588698054310f031cb6daae4a9f1ffa1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4298c66b588698054310f031cb6daae4a9f1ffa1", "patch": "@@ -1,3 +1,8 @@\n+Wed Jan  8 11:41:47 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/i386-cadd.c: New test.\n+\t* gcc.dg/i386-cmov4.c: Likewise.\n+\n 2003-01-06  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9165"}, {"sha": "46bfd221e076fd7b788f85960e7d0e5472fff8eb", "filename": "gcc/testsuite/gcc.dg/i386-cadd.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4298c66b588698054310f031cb6daae4a9f1ffa1/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4298c66b588698054310f031cb6daae4a9f1ffa1/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c?ref=4298c66b588698054310f031cb6daae4a9f1ffa1", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -march=athlon\" } */\n+/* { dg-final { scan-assembler \"sbb\" } } */\n+\n+/* Conditional increment is best done using sbb $-1, val.  */\n+int t[]={0,0,0,0,1,1,1,1,1,1};\n+q()\n+{\n+  int sum=0;\n+  int i;\n+  for (i=0;i<10;i++)\n+    if (t[i])\n+       sum++;\n+  if (sum != 6)\n+    abort ();\n+}\n+main()\n+{\n+  int i;\n+  for (i=0;i<10000000;i++)\n+    q();\n+}"}, {"sha": "1601f2251b5297746438cf0cec1f16abd79b6f60", "filename": "gcc/testsuite/gcc.dg/i386-cmov4.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4298c66b588698054310f031cb6daae4a9f1ffa1/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4298c66b588698054310f031cb6daae4a9f1ffa1/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov4.c?ref=4298c66b588698054310f031cb6daae4a9f1ffa1", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -march=athlon\" } */\n+/* { dg-final { scan-assembler \"cmov\" } } */\n+\n+/* Verify that if conversion happends for memory references.  */\n+int ARCHnodes;\n+int *nodekind;\n+float *nodekindf;\n+t()\n+{\n+int i;\n+/* Redefine nodekind to be 1 for all surface nodes */\n+\n+  for (i = 0; i < ARCHnodes; i++) {\n+    nodekind[i] = (int) nodekindf[i];\n+    if (nodekind[i] == 3)\n+      nodekind[i] = 1;\n+  }\n+}"}]}