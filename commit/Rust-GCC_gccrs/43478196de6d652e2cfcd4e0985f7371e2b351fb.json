{"sha": "43478196de6d652e2cfcd4e0985f7371e2b351fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM0NzgxOTZkZTZkNjUyZTJjZmNkNGUwOTg1ZjczNzFlMmIzNTFmYg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2014-07-30T10:42:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T10:42:06Z"}, "message": "gnat1drv.adb (Adjust_Global_Switches): Set Ineffective_Inline_Warnings to True in GNATprove mode.\n\n2014-07-30  Yannick Moy  <moy@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Set\n\tIneffective_Inline_Warnings to True in GNATprove mode.\n\t* inline.adb (Cannot_Inline): Prepare new semantics for GNATprove\n\tmode of inlining.\n\t* opt.ads (Ineffective_Inline_Warnings): Add comment that\n\tdescribes use in GNATprove mode.\n\t* sem_prag.adb (Analyze_Pragma|SPARK_Mode): Ignore\n\tpragma when applied to the special body created for inlining.\n\nFrom-SVN: r213245", "tree": {"sha": "6a50dedc7bd7fad840f073126da1e44864d5784a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a50dedc7bd7fad840f073126da1e44864d5784a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43478196de6d652e2cfcd4e0985f7371e2b351fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43478196de6d652e2cfcd4e0985f7371e2b351fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43478196de6d652e2cfcd4e0985f7371e2b351fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43478196de6d652e2cfcd4e0985f7371e2b351fb/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "662c2ad47559312689a4e5f81f2eccdc577be858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662c2ad47559312689a4e5f81f2eccdc577be858", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662c2ad47559312689a4e5f81f2eccdc577be858"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "e9542062c924a85cf814babda7a7c613d537fe43", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=43478196de6d652e2cfcd4e0985f7371e2b351fb", "patch": "@@ -1,3 +1,14 @@\n+2014-07-30  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Set\n+\tIneffective_Inline_Warnings to True in GNATprove mode.\n+\t* inline.adb (Cannot_Inline): Prepare new semantics for GNATprove\n+\tmode of inlining.\n+\t* opt.ads (Ineffective_Inline_Warnings): Add comment that\n+\tdescribes use in GNATprove mode.\n+\t* sem_prag.adb (Analyze_Pragma|SPARK_Mode): Ignore\n+\tpragma when applied to the special body created for inlining.\n+\n 2014-07-30  Robert Dewar  <dewar@adacore.com>\n \n \t* inline.adb, exp_ch4.adb, sinput.adb, sem_ch6.adb, sem_ch13.adb:"}, {"sha": "9a61d484d568da8c0f249c8d6035e9c348862ab2", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=43478196de6d652e2cfcd4e0985f7371e2b351fb", "patch": "@@ -334,6 +334,12 @@ procedure Gnat1drv is\n          Front_End_Inlining := False;\n          Inline_Active      := False;\n \n+         --  Issue warnings for failure to inline subprograms, as otherwise\n+         --  expected in GNATprove mode for the local subprograms without\n+         --  contracts.\n+\n+         Ineffective_Inline_Warnings := True;\n+\n          --  Disable front-end optimizations, to keep the tree as close to the\n          --  source code as possible, and also to avoid inconsistencies between\n          --  trees when using different optimization switches."}, {"sha": "5c43580d44f8695e06cfd7056d223b84d4359f35", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=43478196de6d652e2cfcd4e0985f7371e2b351fb", "patch": "@@ -1339,7 +1339,7 @@ package body Inline is\n          Restore_Env;\n       end if;\n \n-      --  If secondary stk used there is no point in inlining. We have\n+      --  If secondary stack is used, there is no point in inlining. We have\n       --  already issued the warning in this case, so nothing to do.\n \n       if Uses_Secondary_Stack (Body_To_Analyze) then\n@@ -1399,7 +1399,7 @@ package body Inline is\n \n          Error_Msg_NE (Msg (Msg'First .. Msg'Last - 1), N, Subp);\n \n-      elsif Optimization_Level = 0 then\n+      elsif Optimization_Level = 0 or else GNATprove_Mode then\n \n          --  Do not emit warning if this is a predefined unit which is not\n          --  the main unit. This behavior is currently provided for backward\n@@ -1436,7 +1436,7 @@ package body Inline is\n \n             Error_Msg_NE (Msg (Msg'First .. Msg'Last - 1), N, Subp);\n \n-         else pragma Assert (Front_End_Inlining);\n+         else pragma Assert (Front_End_Inlining or GNATprove_Mode);\n             Set_Is_Inlined (Subp, False);\n \n             --  When inlining cannot take place we must issue an error."}, {"sha": "27e50c08ad16d4b6ce8ee73db764e28dd2a74eeb", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=43478196de6d652e2cfcd4e0985f7371e2b351fb", "patch": "@@ -772,10 +772,11 @@ package Opt is\n    --  use of pragma Implicit_Packing.\n \n    Ineffective_Inline_Warnings : Boolean := False;\n-   --  GNAT\n-   --  Set True to activate warnings if front-end inlining (-gnatN) is not\n-   --  able to actually inline a particular call (or all calls). Can be\n-   --  controlled by use of -gnatwp/-gnatwP.\n+   --  GNAT Set True to activate warnings if front-end inlining (-gnatN) is\n+   --  not able to actually inline a particular call (or all calls). Can be\n+   --  controlled by use of -gnatwp/-gnatwP. Also set True to activate warnings\n+   --  if frontend inlining is not able to inline a subprogram expected to be\n+   --  inlined in GNATprove mode.\n \n    Init_Or_Norm_Scalars : Boolean := False;\n    --  GNAT, GANTBIND"}, {"sha": "5c22206e593af4dd10ceca8a501e13ea2c4f98de", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43478196de6d652e2cfcd4e0985f7371e2b351fb/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=43478196de6d652e2cfcd4e0985f7371e2b351fb", "patch": "@@ -19998,6 +19998,14 @@ package body Sem_Prag is\n                   Spec_Id := Corresponding_Spec (Context);\n                   Context := Specification (Context);\n                   Body_Id := Defining_Entity (Context);\n+\n+                  --  Ignore pragma when applied to the special body created\n+                  --  for inlining, recognized by its internal name _Parent.\n+\n+                  if Chars (Body_Id) = Name_uParent then\n+                     return;\n+                  end if;\n+\n                   Check_Library_Level_Entity (Body_Id);\n \n                   if Present (Spec_Id) then"}]}