{"sha": "7a158a5776f5ca95a318fcae0ca2dfefb0789538", "node_id": "C_kwDOANBUbNoAKDdhMTU4YTU3NzZmNWNhOTVhMzE4ZmNhZTBjYTJkZmVmYjA3ODk1Mzg", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2022-01-14T18:05:12Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2022-07-19T14:16:17Z"}, "message": "tree-cfg: check placement of returns_twice calls\n\nWhen a returns_twice call has an associated abnormal edge, the edge\ncorresponds to the \"second return\" from the call. It wouldn't make sense\nif any executable statements appeared between the call and the\ndestination of the edge (they wouldn't be re-executed upon the \"second\nreturn\"), so verify that.\n\ngcc/ChangeLog:\n\n\t* tree-cfg.cc (gimple_verify_flow_info): Check placement of\n\treturns_twice calls.", "tree": {"sha": "33e56c811962726550398a53187fb45b8d54dd12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33e56c811962726550398a53187fb45b8d54dd12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a158a5776f5ca95a318fcae0ca2dfefb0789538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a158a5776f5ca95a318fcae0ca2dfefb0789538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a158a5776f5ca95a318fcae0ca2dfefb0789538", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a158a5776f5ca95a318fcae0ca2dfefb0789538/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26cea5f108e0facdb080e385000bb141b086845f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26cea5f108e0facdb080e385000bb141b086845f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26cea5f108e0facdb080e385000bb141b086845f"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "5bcf78198e78b018669e1c60889e8915d409421e", "filename": "gcc/tree-cfg.cc", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a158a5776f5ca95a318fcae0ca2dfefb0789538/gcc%2Ftree-cfg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a158a5776f5ca95a318fcae0ca2dfefb0789538/gcc%2Ftree-cfg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.cc?ref=7a158a5776f5ca95a318fcae0ca2dfefb0789538", "patch": "@@ -5653,6 +5653,7 @@ gimple_verify_flow_info (void)\n \t}\n \n       /* Verify that body of basic block BB is free of control flow.  */\n+      bool seen_nondebug_stmt = false;\n       for (; !gsi_end_p (gsi); gsi_next (&gsi))\n \t{\n \t  gimple *stmt = gsi_stmt (gsi);\n@@ -5673,6 +5674,38 @@ gimple_verify_flow_info (void)\n \t\t     gimple_label_label (label_stmt), bb->index);\n \t      err = 1;\n \t    }\n+\n+\t  /* Check that no statements appear between a returns_twice call\n+\t     and its associated abnormal edge.  */\n+\t  if (gimple_code (stmt) == GIMPLE_CALL\n+\t      && gimple_call_flags (stmt) & ECF_RETURNS_TWICE)\n+\t    {\n+\t      const char *misplaced = NULL;\n+\t      /* TM is an exception: it points abnormal edges just after the\n+\t\t call that starts a transaction, i.e. it must end the BB.  */\n+\t      if (gimple_call_builtin_p (stmt, BUILT_IN_TM_START))\n+\t\t{\n+\t\t  if (single_succ_p (bb)\n+\t\t      && bb_has_abnormal_pred (single_succ (bb))\n+\t\t      && !gsi_one_nondebug_before_end_p (gsi))\n+\t\t    misplaced = \"not last\";\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  if (seen_nondebug_stmt\n+\t\t      && bb_has_abnormal_pred (bb))\n+\t\t    misplaced = \"not first\";\n+\t\t}\n+\t      if (misplaced)\n+\t\t{\n+\t\t  error (\"returns_twice call is %s in basic block %d\",\n+\t\t\t misplaced, bb->index);\n+\t\t  print_gimple_stmt (stderr, stmt, 0, TDF_SLIM);\n+\t\t  err = 1;\n+\t\t}\n+\t    }\n+\t  if (!is_gimple_debug (stmt))\n+\t    seen_nondebug_stmt = true;\n \t}\n \n       gsi = gsi_last_nondebug_bb (bb);"}]}