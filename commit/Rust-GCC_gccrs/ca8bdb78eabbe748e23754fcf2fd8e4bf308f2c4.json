{"sha": "ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E4YmRiNzhlYWJiZTc0OGUyMzc1NGZjZjJmZDhlNGJmMzA4ZjJjNA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-07-29T02:42:19Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-07-29T02:42:19Z"}, "message": "re PR c/22192 (Rejection of valid array declaration.)\n\n\tPR c/22192\n\t* c-typeck.c (composite_type): Prefer constant size arrays to\n\tVLAs.\n\ntestsuite:\n\t* gcc.dg/c99-vla-2.c: New test.\n\nFrom-SVN: r102540", "tree": {"sha": "e54a0f65a06af8a8ad80ad46289518f14eb6d73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e54a0f65a06af8a8ad80ad46289518f14eb6d73c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b608d27a8e7fe2671c7f39795ede312ce783c94f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b608d27a8e7fe2671c7f39795ede312ce783c94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b608d27a8e7fe2671c7f39795ede312ce783c94f"}], "stats": {"total": 145, "additions": 142, "deletions": 3}, "files": [{"sha": "0617b8f11379ab615c325543cc0f5ad8299b8bca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4", "patch": "@@ -1,3 +1,9 @@\n+2005-07-29  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/22192\n+\t* c-typeck.c (composite_type): Prefer constant size arrays to\n+\tVLAs.\n+\n 2005-07-29  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/21720"}, {"sha": "58694cb5ceba048cb23af08f464d71da75b4a5a1", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4", "patch": "@@ -281,14 +281,30 @@ composite_type (tree t1, tree t2)\n \ttree elt = composite_type (TREE_TYPE (t1), TREE_TYPE (t2));\n \tint quals;\n \ttree unqual_elt;\n+\ttree d1 = TYPE_DOMAIN (t1);\n+\ttree d2 = TYPE_DOMAIN (t2);\n+\tbool d1_variable, d2_variable;\n+\tbool d1_zero, d2_zero;\n \n \t/* We should not have any type quals on arrays at all.  */\n \tgcc_assert (!TYPE_QUALS (t1) && !TYPE_QUALS (t2));\n \t\n+\td1_zero = d1 == 0 || !TYPE_MAX_VALUE (d1);\n+\td2_zero = d2 == 0 || !TYPE_MAX_VALUE (d2);\n+\n+\td1_variable = (!d1_zero\n+\t\t       && (TREE_CODE (TYPE_MIN_VALUE (d1)) != INTEGER_CST\n+\t\t\t   || TREE_CODE (TYPE_MAX_VALUE (d1)) != INTEGER_CST));\n+\td2_variable = (!d2_zero\n+\t\t       && (TREE_CODE (TYPE_MIN_VALUE (d2)) != INTEGER_CST\n+\t\t\t   || TREE_CODE (TYPE_MAX_VALUE (d2)) != INTEGER_CST));\n+\n \t/* Save space: see if the result is identical to one of the args.  */\n-\tif (elt == TREE_TYPE (t1) && TYPE_DOMAIN (t1))\n+\tif (elt == TREE_TYPE (t1) && TYPE_DOMAIN (t1)\n+\t    && (d2_variable || d2_zero || !d1_variable))\n \t  return build_type_attribute_variant (t1, attributes);\n-\tif (elt == TREE_TYPE (t2) && TYPE_DOMAIN (t2))\n+\tif (elt == TREE_TYPE (t2) && TYPE_DOMAIN (t2)\n+\t    && (d1_variable || d1_zero || !d2_variable))\n \t  return build_type_attribute_variant (t2, attributes);\n \t\n \tif (elt == TREE_TYPE (t1) && !TYPE_DOMAIN (t2) && !TYPE_DOMAIN (t1))\n@@ -304,7 +320,12 @@ composite_type (tree t1, tree t2)\n \tquals = TYPE_QUALS (strip_array_types (elt));\n \tunqual_elt = c_build_qualified_type (elt, TYPE_UNQUALIFIED);\n \tt1 = build_array_type (unqual_elt,\n-\t\t\t       TYPE_DOMAIN (TYPE_DOMAIN (t1) ? t1 : t2));\n+\t\t\t       TYPE_DOMAIN ((TYPE_DOMAIN (t1)\n+\t\t\t\t\t     && (d2_variable\n+\t\t\t\t\t\t || d2_zero\n+\t\t\t\t\t\t || !d1_variable))\n+\t\t\t\t\t    ? t1\n+\t\t\t\t\t    : t2));\n \tt1 = c_build_qualified_type (t1, quals);\n \treturn build_type_attribute_variant (t1, attributes);\n       }"}, {"sha": "4da38559704b9a205b2f1bef2a47e49b28fc52ef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4", "patch": "@@ -1,3 +1,8 @@\n+2005-07-29  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/22192\n+\t* gcc.dg/c99-vla-2.c: New test.\n+\n 2005-07-29  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/21720"}, {"sha": "de15c73c8d4ef24da52bfc05c25ffaca042004c5", "filename": "gcc/testsuite/gcc.dg/c99-vla-2.c", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-vla-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-vla-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-vla-2.c?ref=ca8bdb78eabbe748e23754fcf2fd8e4bf308f2c4", "patch": "@@ -0,0 +1,107 @@\n+/* Test composite type of VLA and fixed-size array: should be the\n+   fixed-size type.  Bug 22192.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+/* Test that the given expression (of pointer-to-array type) points to\n+   the right sort of array.  */\n+#define TEST_FIXED_SIZE(a) do { static int x[sizeof(*(a))]; (void)x; } while (0)\n+#define TEST_VLA(a) do { (void)sizeof(*(a)); (void)(1 ? (a) : (__typeof__(**(a)) (*)[1])0); (void)(1 ? (a) : (__typeof__(**(a)) (*)[2])0); } while (0)\n+#define TEST_INCOMPLETE(a) do { __typeof__(*(a)) x = { 0 }; (void)x; (void)(1 ? a : (__typeof__(**(a)) (*)[1])0); (void)(1 ? a : (__typeof__(**(a)) (*)[2])0); } while (0)\n+\n+#define TEST_COMP_FIX(a, b) TEST_FIXED_SIZE(i ? a : b)\n+#define TEST_COMP_VLA(a, b) TEST_VLA(i ? a : b)\n+#define TEST_COMP_INC(a, b) TEST_INCOMPLETE(i ? a : b)\n+\n+void\n+foo (int i, int j)\n+{\n+  typedef int I;\n+  int (*pf)[2];\n+  int (*pv)[i];\n+  int (*pi)[];\n+  I (*pfI)[2];\n+  I (*pvI)[i];\n+  I (*piI)[];\n+  TEST_COMP_FIX(pf, pf);\n+  TEST_COMP_FIX(pf, pv);\n+  TEST_COMP_FIX(pf, pi);\n+  TEST_COMP_FIX(pf, pfI);\n+  TEST_COMP_FIX(pf, pvI);\n+  TEST_COMP_FIX(pf, piI);\n+  TEST_COMP_FIX(pv, pf);\n+  TEST_COMP_VLA(pv, pv);\n+  TEST_COMP_VLA(pv, pi);\n+  TEST_COMP_FIX(pv, pfI);\n+  TEST_COMP_VLA(pv, pvI);\n+  TEST_COMP_VLA(pv, piI);\n+  TEST_COMP_FIX(pi, pf);\n+  TEST_COMP_VLA(pi, pv);\n+  TEST_COMP_INC(pi, pi);\n+  TEST_COMP_FIX(pi, pfI);\n+  TEST_COMP_VLA(pi, pvI);\n+  TEST_COMP_INC(pi, piI);\n+  TEST_COMP_FIX(pfI, pf);\n+  TEST_COMP_FIX(pfI, pv);\n+  TEST_COMP_FIX(pfI, pi);\n+  TEST_COMP_FIX(pfI, pfI);\n+  TEST_COMP_FIX(pfI, pvI);\n+  TEST_COMP_FIX(pfI, piI);\n+  TEST_COMP_FIX(pvI, pf);\n+  TEST_COMP_VLA(pvI, pv);\n+  TEST_COMP_VLA(pvI, pi);\n+  TEST_COMP_FIX(pvI, pfI);\n+  TEST_COMP_VLA(pvI, pvI);\n+  TEST_COMP_VLA(pvI, piI);\n+  TEST_COMP_FIX(piI, pf);\n+  TEST_COMP_VLA(piI, pv);\n+  TEST_COMP_INC(piI, pi);\n+  TEST_COMP_FIX(piI, pfI);\n+  TEST_COMP_VLA(piI, pvI);\n+  TEST_COMP_INC(piI, piI);\n+  typedef int (*Ti)[i];\n+  typedef int (*Tj)[j];\n+  Ti (*qf)[2];\n+  Ti (*qv)[i];\n+  Ti (*qi)[];\n+  Tj (*rf)[2];\n+  Tj (*rv)[j];\n+  Tj (*ri)[];\n+  TEST_COMP_FIX(qf, qf);\n+  TEST_COMP_FIX(qf, qv);\n+  TEST_COMP_FIX(qf, qi);\n+  TEST_COMP_FIX(qf, rf);\n+  TEST_COMP_FIX(qf, rv);\n+  TEST_COMP_FIX(qf, ri);\n+  TEST_COMP_FIX(qv, qf);\n+  TEST_COMP_VLA(qv, qv);\n+  TEST_COMP_VLA(qv, qi);\n+  TEST_COMP_FIX(qv, rf);\n+  TEST_COMP_VLA(qv, rv);\n+  TEST_COMP_VLA(qv, ri);\n+  TEST_COMP_FIX(qi, qf);\n+  TEST_COMP_VLA(qi, qv);\n+  TEST_COMP_INC(qi, qi);\n+  TEST_COMP_FIX(qi, rf);\n+  TEST_COMP_VLA(qi, rv);\n+  TEST_COMP_INC(qi, ri);\n+  TEST_COMP_FIX(rf, qf);\n+  TEST_COMP_FIX(rf, qv);\n+  TEST_COMP_FIX(rf, qi);\n+  TEST_COMP_FIX(rf, rf);\n+  TEST_COMP_FIX(rf, rv);\n+  TEST_COMP_FIX(rf, ri);\n+  TEST_COMP_FIX(rv, qf);\n+  TEST_COMP_VLA(rv, qv);\n+  TEST_COMP_VLA(rv, qi);\n+  TEST_COMP_FIX(rv, rf);\n+  TEST_COMP_VLA(rv, rv);\n+  TEST_COMP_VLA(rv, ri);\n+  TEST_COMP_FIX(ri, qf);\n+  TEST_COMP_VLA(ri, qv);\n+  TEST_COMP_INC(ri, qi);\n+  TEST_COMP_FIX(ri, rf);\n+  TEST_COMP_VLA(ri, rv);\n+  TEST_COMP_INC(ri, ri);\n+}"}]}