{"sha": "1073b500e5d33af8b75567108a8c04fe2598df2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA3M2I1MDBlNWQzM2FmOGI3NTU2NzEwOGE4YzA0ZmUyNTk4ZGYyYg==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-07-07T08:20:53Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-07-09T06:51:00Z"}, "message": "RISC-V: Implement __builtin_thread_pointer\n\nRISC-V has a dedicate register for thread pointer which is specified in psABI\ndoc, so we could support __builtin_thread_pointer in straightforward way.\n\nNote: clang/llvm was supported __builtin_thread_pointer for RISC-V port\nrecently.\n- https://reviews.llvm.org/rGaabc24acf0d5f8677bd22fe9c108581e07c3e180\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv.md (get_thread_pointer<mode>): New.\n\t(TP_REGNUM): Ditto.\n\t* doc/extend.texi (Target Builtins): Add RISC-V built-in section.\n\tDocument __builtin_thread_pointer.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/read-thread-pointer.c: New.", "tree": {"sha": "53722ec431b5e5d16c38b3c81f16cd6fb862d800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53722ec431b5e5d16c38b3c81f16cd6fb862d800"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1073b500e5d33af8b75567108a8c04fe2598df2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1073b500e5d33af8b75567108a8c04fe2598df2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1073b500e5d33af8b75567108a8c04fe2598df2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1073b500e5d33af8b75567108a8c04fe2598df2b/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c0d1322033ce979532425d336530b217f6b5fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c0d1322033ce979532425d336530b217f6b5fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c0d1322033ce979532425d336530b217f6b5fd3"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "95a02ecaa34ba731fc4cdb4c15cace774ad749e8", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1073b500e5d33af8b75567108a8c04fe2598df2b/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1073b500e5d33af8b75567108a8c04fe2598df2b/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=1073b500e5d33af8b75567108a8c04fe2598df2b", "patch": "@@ -70,6 +70,7 @@\n (define_constants\n   [(RETURN_ADDR_REGNUM\t\t1)\n    (GP_REGNUM \t\t\t3)\n+   (TP_REGNUM\t\t\t4)\n    (T0_REGNUM\t\t\t5)\n    (T1_REGNUM\t\t\t6)\n    (S0_REGNUM\t\t\t8)\n@@ -2515,6 +2516,13 @@\n   DONE;\n })\n \n+;; Named pattern for expanding thread pointer reference.\n+(define_expand \"get_thread_pointer<mode>\"\n+  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n+\t(reg:P TP_REGNUM))]\n+  \"\"\n+{})\n+\n (include \"sync.md\")\n (include \"peephole.md\")\n (include \"pic.md\")"}, {"sha": "d1510dd3f367a25212b26d1831b156554a127f29", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1073b500e5d33af8b75567108a8c04fe2598df2b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1073b500e5d33af8b75567108a8c04fe2598df2b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=1073b500e5d33af8b75567108a8c04fe2598df2b", "patch": "@@ -13859,6 +13859,7 @@ instructions, but allow the compiler to schedule those calls.\n * PowerPC Hardware Transactional Memory Built-in Functions::\n * PowerPC Atomic Memory Operation Functions::\n * PowerPC Matrix-Multiply Assist Built-in Functions::\n+* RISC-V Built-in Functions::\n * RX Built-in Functions::\n * S/390 System z Built-in Functions::\n * SH Built-in Functions::\n@@ -21471,6 +21472,16 @@ vec_t __builtin_vsx_xvcvspbf16 (vec_t);\n vec_t __builtin_vsx_xvcvbf16sp (vec_t);\n @end smallexample\n \n+@node RISC-V Built-in Functions\n+@subsection RISC-V Built-in Functions\n+\n+These built-in functions are available for the RISC-V family of\n+processors.\n+\n+@deftypefn {Built-in Function} {void *} __builtin_thread_pointer (void)\n+Returns the value that is currently set in the @samp{tp} register.\n+@end deftypefn\n+\n @node RX Built-in Functions\n @subsection RX Built-in Functions\n GCC supports some of the RX instructions which cannot be expressed in"}, {"sha": "760f8eafb4066d1efbe0f1e5b897586d7f7333e7", "filename": "gcc/testsuite/gcc.target/riscv/read-thread-pointer.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1073b500e5d33af8b75567108a8c04fe2598df2b/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fread-thread-pointer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1073b500e5d33af8b75567108a8c04fe2598df2b/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fread-thread-pointer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fread-thread-pointer.c?ref=1073b500e5d33af8b75567108a8c04fe2598df2b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+\n+void *get_tp()\n+{\n+    return __builtin_thread_pointer ();\n+}\n+/* { dg-final { scan-assembler \"mv\\[ \\t\\]*[at][0-9]+,tp\" } } */"}]}