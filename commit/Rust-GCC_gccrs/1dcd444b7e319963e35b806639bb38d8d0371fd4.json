{"sha": "1dcd444b7e319963e35b806639bb38d8d0371fd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjZDQ0NGI3ZTMxOTk2M2UzNWI4MDY2MzliYjM4ZDhkMDM3MWZkNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-07-30T02:24:17Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-07-30T02:24:17Z"}, "message": "adadecode.c (ada_demangle): Use xstrdup in lieu of xmalloc/strcpy.\n\nada:\n\t* adadecode.c (ada_demangle): Use xstrdup in lieu of\n\txmalloc/strcpy.\n\t* misc.c (gnat_decode_option): Likewise.\n\ngcc:\n\n\t* alpha/vms-cc.c (preprocess_args, main): Use xstrdup and/or\n\tconcat in lieu of xmalloc/strcpy/memcpy/sprintf.\n\t* alpha/vms-ld.c (main): Likewise.\n\t* dsp16xx.c (double_reg_to_memory): Likewise.\n\t* mcore.c (mcore_expand_prolog): Likewise.\n\t* cppfiles.c (read_name_map): Likewise.\n\t* gensupport.c (process_rtx, identify_predicable_attribute,\n\talter_test_for_insn): Likewise.\n\t* vmsdbgout.c (write_rtnbeg, vmsdbgout_init): Likewise.\n\nf:\n\t* com.c (read_name_map): Use concat in lieu of xmalloc/strcpy.\n\nFrom-SVN: r55861", "tree": {"sha": "43e83a07dda5ffa69f8ce439842c421d79dcd252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43e83a07dda5ffa69f8ce439842c421d79dcd252"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dcd444b7e319963e35b806639bb38d8d0371fd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcd444b7e319963e35b806639bb38d8d0371fd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dcd444b7e319963e35b806639bb38d8d0371fd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcd444b7e319963e35b806639bb38d8d0371fd4/comments", "author": null, "committer": null, "parents": [{"sha": "e62f4abc90905f2db2f64f54a18e7c0de08db7df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62f4abc90905f2db2f64f54a18e7c0de08db7df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62f4abc90905f2db2f64f54a18e7c0de08db7df"}], "stats": {"total": 146, "additions": 49, "deletions": 97}, "files": [{"sha": "d3b958af6963a2e29688568050e9d819665ed348", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -1,3 +1,15 @@\n+2002-07-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* alpha/vms-cc.c (preprocess_args, main): Use xstrdup and/or\n+\tconcat in lieu of xmalloc/strcpy/memcpy/sprintf.\n+\t* alpha/vms-ld.c (main): Likewise.\n+\t* dsp16xx.c (double_reg_to_memory): Likewise.\n+\t* mcore.c (mcore_expand_prolog): Likewise.\n+\t* cppfiles.c (read_name_map): Likewise.\n+\t* gensupport.c (process_rtx, identify_predicable_attribute,\n+\talter_test_for_insn): Likewise.\n+\t* vmsdbgout.c (write_rtnbeg, vmsdbgout_init): Likewise.\n+\n 2002-07-29  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtins.c (expand_builtin):  Change the default behavior to"}, {"sha": "e7a47327de8f94e903fbdd41b6cad2a933208877", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -1,3 +1,9 @@\n+2002-07-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* adadecode.c (ada_demangle): Use xstrdup in lieu of\n+\txmalloc/strcpy.\n+\t* misc.c (gnat_decode_option): Likewise.\n+\n 2002-07-15  Florian Weimer  <fw@deneb.enyo.de>\n \n \t* make.adb (Add_Switch): Make Generic_Position a procedure.  The"}, {"sha": "e3ab46d41fc2219d25463db0ff3365aa9211e3a8", "filename": "gcc/ada/adadecode.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fada%2Fadadecode.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fada%2Fadadecode.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -313,12 +313,7 @@ ada_demangle (coded_name)\n      const char *coded_name;\n {\n   char ada_name[2048];\n-  char *result;\n \n   __gnat_decode (coded_name, ada_name, 0);\n-\n-  result = (char *) xmalloc (strlen (ada_name) + 1);\n-  strcpy (result, ada_name);\n-\n-  return result;\n+  return xstrdup (ada_name);\n }"}, {"sha": "60babc41d65a9c9f667644f170ede4e3d99ce0d4", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -227,10 +227,9 @@ gnat_decode_option (argc, argv)\n \n   else if (!strncmp (p, \"-gant\", 5))\n     {\n-      char *q = (char *) xmalloc (strlen (p) + 1);\n+      char *q = xstrdup (p);\n \n       warning (\"`-gnat' misspelled as `-gant'\");\n-      strcpy (q, p);\n       q[2] = 'n', q[3] = 'a';\n       p = q;\n       return 1;"}, {"sha": "26c3ae3b1ffc1a6930dd0395f6c49b31842ec515", "filename": "gcc/config/alpha/vms-cc.c", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fconfig%2Falpha%2Fvms-cc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fconfig%2Falpha%2Fvms-cc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms-cc.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -109,16 +109,11 @@ preprocess_args (p_argc, argv)\n       if (strcmp (argv[i], \"-o\") == 0)\n \t{\n \t  char *buff, *ptr;\n-\t  int out_len;\n \n \t  i++;\n \t  ptr = to_host_file_spec (argv[i]);\n \t  objfilename = xstrdup (ptr);\n-\t  out_len = strlen (ptr);\n-\t  buff = xmalloc (out_len + 6);\n-\n-\t  strcpy (buff, \"/obj=\");\n-\t  strcat (buff, ptr);\n+\t  buff = concat (\"/obj=\", ptr, NULL);\n \t  addarg (buff);\n \t}\n     }\n@@ -202,11 +197,8 @@ main (argc, argv)\n   strncpy (cwdev, cwd, devlen);\n   cwdev [devlen] = '\\0';\n \n-  search_dirs = xmalloc (strlen (system_search_dirs) + 1);\n-  strcpy (search_dirs, system_search_dirs);\n-\n-  defines = xmalloc (strlen (default_defines) + 1);\n-  strcpy (defines, default_defines);\n+  search_dirs = xstrdup (system_search_dirs);\n+  defines = xstrdup (default_defines);\n \n   addarg (\"cc\");\n   preprocess_args (&argc , argv);\n@@ -251,7 +243,6 @@ main (argc, argv)\n \t{\n \t  /* Assume filename arg */\n \t  char buff [256], *ptr;\n-\t  int buff_len;\n \n \t  ptr = to_host_file_spec (argv[i]);\n \t  arg_len = strlen (ptr);\n@@ -263,10 +254,7 @@ main (argc, argv)\n \t  else\n \t    sprintf (buff, \"%s%s\", cwd, ptr);\n \n-\t  buff_len = strlen (buff);\n-\t  ptr = xmalloc (buff_len + 1);\n-\n-\t  strcpy (ptr, buff);\n+\t  ptr = xstrdup (buff);\n \t  addarg (ptr);\n \t}\n     }"}, {"sha": "e5688d89d535b593d7119501d8b51b86a1a9b95d", "filename": "gcc/config/alpha/vms-ld.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fconfig%2Falpha%2Fvms-ld.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fconfig%2Falpha%2Fvms-ld.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms-ld.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -396,8 +396,7 @@ main (argc, argv)\n   strncpy (cwdev, cwd, devlen);\n   cwdev [devlen] = '\\0';\n \n-  search_dirs = xmalloc (strlen (system_search_dirs) + 1);\n-  strcpy (search_dirs, system_search_dirs);\n+  search_dirs = xstrdup (system_search_dirs);\n \n   addarg (\"link\");\n "}, {"sha": "cd4b42d8c456c0c04b76693ec636f94631b60026", "filename": "gcc/config/dsp16xx/dsp16xx.c", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -1691,8 +1691,6 @@ double_reg_to_memory (operands)\n void\n override_options ()\n {\n-  char *tmp;\n-\n   if (chip_name == (char *) 0)\n     chip_name = DEFAULT_CHIP_NAME;\n \n@@ -1710,21 +1708,10 @@ override_options ()\n   \n   save_chip_name = xstrdup (chip_name);\n \n-  rsect_text = tmp = (char *) xmalloc (strlen(\".rsect \") + \n-\t\t\t\t       strlen(text_seg_name) + 3);\n-  sprintf (tmp, \".rsect \\\"%s\\\"\", text_seg_name);\n-\n-  rsect_data = tmp = (char *) xmalloc (strlen(\".rsect \") + \n-\t\t\t\t       strlen(data_seg_name) + 3);\n-  sprintf (tmp, \".rsect \\\"%s\\\"\", data_seg_name);\n-\n-  rsect_bss = tmp = (char *) xmalloc (strlen(\".rsect \") + \n-\t\t\t\t      strlen(bss_seg_name) + 3);\n-  sprintf (tmp,  \".rsect \\\"%s\\\"\", bss_seg_name);\n-\n-  rsect_const = tmp = (char *) xmalloc (strlen(\".rsect \") + \n-\t\t\t\t\tstrlen(const_seg_name) + 3);\n-  sprintf (tmp, \".rsect \\\"%s\\\"\", const_seg_name);\n+  rsect_text = concat (\".rsect \\\"\", text_seg_name, \"\\\"\", NULL);\n+  rsect_data = concat (\".rsect \\\"\", data_seg_name, \"\\\"\", NULL);\n+  rsect_bss = concat (\".rsect \\\"\", bss_seg_name, \"\\\"\", NULL);\n+  rsect_const = concat (\".rsect \\\"\", const_seg_name, \"\\\"\", NULL);\n }\n \n int"}, {"sha": "2b7747e17692b98c7cf9305a9c7587cef2c03772", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -2341,7 +2341,6 @@ mcore_expand_prolog ()\n     {\n       /* Emit a symbol for this routine's frame size.  */\n       rtx x;\n-      int len;\n \n       x = DECL_RTL (current_function_decl);\n       \n@@ -2356,10 +2355,7 @@ mcore_expand_prolog ()\n       if (mcore_current_function_name)\n \tfree (mcore_current_function_name);\n       \n-      len = strlen (XSTR (x, 0)) + 1;\n-      mcore_current_function_name = (char *) xmalloc (len);\n-      \n-      memcpy (mcore_current_function_name, XSTR (x, 0), len);\n+      mcore_current_function_name = xstrdup (XSTR (x, 0));\n       \n       ASM_OUTPUT_CG_NODE (asm_out_file, mcore_current_function_name, space_allocated);\n "}, {"sha": "653b33e283c528107772f673f9b1f45e7464a7c8", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -908,7 +908,6 @@ read_name_map (pfile, dirname)\n   if (f)\n     {\n       int ch;\n-      int dirlen = strlen (dirname);\n \n       while ((ch = getc (f)) != EOF)\n \t{\n@@ -931,10 +930,7 @@ read_name_map (pfile, dirname)\n \t    ptr->map_to = to;\n \t  else\n \t    {\n-\t      ptr->map_to = xmalloc (dirlen + strlen (to) + 2);\n-\t      strcpy (ptr->map_to, dirname);\n-\t      ptr->map_to[dirlen] = '/';\n-\t      strcpy (ptr->map_to + dirlen + 1, to);\n+\t      ptr->map_to = concat (dirname, \"/\", to, NULL);\n \t      free (to);\n \t    }\n "}, {"sha": "7964fa42eb1781d9f5492115b020b7e83c6edb5f", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -1,3 +1,7 @@\n+Mon Jul 29 22:05:35 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* com.c (read_name_map): Use concat in lieu of xmalloc/strcpy.\n+\n 2002-07-25  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* news.texi: Document better handling of (no-)alias"}, {"sha": "4757d7e0c717be055fada38f458750a6fea61e94", "filename": "gcc/f/com.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -15312,10 +15312,10 @@ read_name_map (dirname)\n \n   dirlen = strlen (dirname);\n   separator_needed = dirlen != 0 && dirname[dirlen - 1] != '/';\n-  name = (char *) xmalloc (dirlen + strlen (FILE_NAME_MAP_FILE) + 2);\n-  strcpy (name, dirname);\n-  name[dirlen] = '/';\n-  strcpy (name + dirlen + separator_needed, FILE_NAME_MAP_FILE);\n+  if (separator_needed)\n+    name = concat (dirname, \"/\", FILE_NAME_MAP_FILE, NULL);\n+  else\n+    name = concat (dirname, FILE_NAME_MAP_FILE, NULL);\n   f = fopen (name, \"r\");\n   free (name);\n   if (!f)\n@@ -15345,10 +15345,10 @@ read_name_map (dirname)\n \t    ptr->map_to = to;\n \t  else\n \t    {\n-\t      ptr->map_to = xmalloc (dirlen + strlen (to) + 2);\n-\t      strcpy (ptr->map_to, dirname);\n-\t      ptr->map_to[dirlen] = '/';\n-\t      strcpy (ptr->map_to + dirlen + separator_needed, to);\n+\t      if (separator_needed)\n+\t\tptr->map_to = concat (dirname, \"/\", to, NULL);\n+\t      else\n+\t\tptr->map_to = concat (dirname, to, NULL);\n \t      free (to);\n \t    }\n "}, {"sha": "53172dd55b46e2fd579b407f921d9b2499449ee8", "filename": "gcc/gensupport.c", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -310,18 +310,7 @@ process_rtx (desc, lineno)\n \t   insn condition to create the new split condition.  */\n \tsplit_cond = XSTR (desc, 4);\n \tif (split_cond[0] == '&' && split_cond[1] == '&')\n-\t  {\n-\t    const char *insn_cond = XSTR (desc, 2);\n-\t    size_t insn_cond_len = strlen (insn_cond);\n-\t    size_t split_cond_len = strlen (split_cond);\n-\t    char *combined;\n-\n-\t    combined = (char *) xmalloc (insn_cond_len + split_cond_len + 1);\n-\t    memcpy (combined, insn_cond, insn_cond_len);\n-\t    memcpy (combined + insn_cond_len, split_cond, split_cond_len + 1);\n-\n-\t    split_cond = combined;\n-\t  }\n+\t  split_cond = concat (XSTR (desc, 2), split_cond, NULL);\n \tXSTR (split, 1) = split_cond;\n \tXVEC (split, 2) = XVEC (desc, 5);\n \tXSTR (split, 3) = XSTR (desc, 6);\n@@ -441,7 +430,6 @@ identify_predicable_attribute ()\n   struct queue_elem *elem;\n   char *p_true, *p_false;\n   const char *value;\n-  size_t len;\n \n   /* Look for the DEFINE_ATTR for `predicable', which must exist.  */\n   for (elem = define_attr_queue; elem ; elem = elem->next)\n@@ -455,10 +443,7 @@ identify_predicable_attribute ()\n \n  found:\n   value = XSTR (elem->data, 1);\n-  len = strlen (value);\n-  p_false = (char *) xmalloc (len + 1);\n-  memcpy (p_false, value, len + 1);\n-\n+  p_false = xstrdup (value);\n   p_true = strchr (p_false, ',');\n   if (p_true == NULL || strchr (++p_true, ',') != NULL)\n     {\n@@ -676,8 +661,6 @@ alter_test_for_insn (ce_elem, insn_elem)\n      struct queue_elem *ce_elem, *insn_elem;\n {\n   const char *ce_test, *insn_test;\n-  char *new_test;\n-  size_t len, ce_len, insn_len;\n \n   ce_test = XSTR (ce_elem->data, 1);\n   insn_test = XSTR (insn_elem->data, 2);\n@@ -686,14 +669,7 @@ alter_test_for_insn (ce_elem, insn_elem)\n   if (!insn_test || *insn_test == '\\0')\n     return ce_test;\n \n-  ce_len = strlen (ce_test);\n-  insn_len = strlen (insn_test);\n-  len = 1 + ce_len + 1 + 4 + 1 + insn_len + 1 + 1;\n-  new_test = (char *) xmalloc (len);\n-\n-  sprintf (new_test, \"(%s) && (%s)\", ce_test, insn_test);\n-\n-  return new_test;\n+  return concat (\"(\", ce_test, \") && (\", insn_test, \")\", NULL);\n }\n \n /* Adjust all of the operand numbers in OLD to match the shift they'll"}, {"sha": "c4f2fe67c038453832ec49d379d31a0de22a21e2", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcd444b7e319963e35b806639bb38d8d0371fd4/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=1dcd444b7e319963e35b806639bb38d8d0371fd4", "patch": "@@ -793,7 +793,7 @@ write_rtnbeg (rtnnum, dosizeonly)\n      int dosizeonly;\n {\n   char *rtnname;\n-  int rtnnamelen, rtnentrynamelen;\n+  int rtnnamelen;\n   char *rtnentryname;\n   int totsize = 0;\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n@@ -802,10 +802,7 @@ write_rtnbeg (rtnnum, dosizeonly)\n \n   rtnname = func_table[rtnnum];\n   rtnnamelen = strlen (rtnname);\n-  rtnentrynamelen = rtnnamelen + 4; /* \"..en\" */\n-  rtnentryname = (char *) xmalloc (rtnentrynamelen + 1);\n-  strcpy (rtnentryname, rtnname);\n-  strcat (rtnentryname, \"..en\");\n+  rtnentryname = concat (rtnname, \"..en\", NULL);\n \n   if (!strcmp (rtnname, \"main\"))\n     {\n@@ -1633,10 +1630,7 @@ vmsdbgout_init (main_input_filename)\n   else\n     module_language = DST_K_UNKNOWN;\n \n-  module_producer\n-    = (char *) xmalloc (strlen (language_string) + 1\n-\t\t\t+ strlen (version_string) + 1);\n-  sprintf (module_producer, \"%s %s\", language_string, version_string);\n+  module_producer = concat (language_string, \" \", version_string, NULL);\n \n   ASM_GENERATE_INTERNAL_LABEL (text_end_label, TEXT_END_LABEL, 0);\n "}]}