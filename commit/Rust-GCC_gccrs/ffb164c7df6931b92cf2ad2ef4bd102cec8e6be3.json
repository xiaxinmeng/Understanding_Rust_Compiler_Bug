{"sha": "ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZiMTY0YzdkZjY5MzFiOTJjZjJhZDJlZjRiZDEwMmNlYzhlNmJlMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-07-24T10:24:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-07-24T10:24:00Z"}, "message": "re PR testsuite/86649 (g++.dg/tree-ssa/pr19476-1.C fails starting with r262928)\n\n\tPR testsuite/86649\n\t* g++.dg/tree-ssa-/pr19476-1.C: Check dom2 dump instead of ccp1.\n\t* g++.dg/tree-ssa-/pr19476-5.C: Likewise.\n\t* g++.dg/tree-ssa-/pr19476-6.C: New test.\n\t* g++.dg/tree-ssa-/pr19476-7.C: New test.\n\nFrom-SVN: r262942", "tree": {"sha": "5cd61502602eb6796c546c0ef716c7d8f8fec432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cd61502602eb6796c546c0ef716c7d8f8fec432"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/comments", "author": null, "committer": null, "parents": [{"sha": "9798833467bab8ae1dc765afe659852d3ab31ebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9798833467bab8ae1dc765afe659852d3ab31ebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9798833467bab8ae1dc765afe659852d3ab31ebc"}], "stats": {"total": 160, "additions": 99, "deletions": 61}, "files": [{"sha": "cf93d5f2a06c9bb34d8f8d7be2f2990979386e24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 31, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "patch": "@@ -376,7 +376,7 @@\n \t* config/aarch64/predicates.md (aarch64_mem_pair_lanes_operand): Use\n \tnew enum value 'ADDR_QUERY_LDP_STP_N', don't hardcode mode and use\n \t'true' rather than '1'.\n-\t* gcc/config/aarch64/constraints.md (Uml): Likewise.\n+\t* config/aarch64/constraints.md (Uml): Likewise.\n \t(Uml): Rename to Umn.\n \t(Umq): Remove.\n \n@@ -5072,7 +5072,7 @@\n \n 2018-06-07  Carl Love  <cel@us.ibm.com>\n \n-\t* gcc/config/rs6000/vsx.md (vextract_fp_from_shorth,\n+\t* config/rs6000/vsx.md (vextract_fp_from_shorth,\n \tvextract_fp_from_shortl): Add BE support.\n \n 2018-06-07  Paul Koning  <ni1d@arrl.net>\n@@ -5104,14 +5104,9 @@\n \n 2018-06-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n-\t* gcc/config/msp430/msp430.c (msp430_mcu_name): Set the \"i\" in the\n+\t* config/msp430/msp430.c (msp430_mcu_name): Set the \"i\" in the\n \tsymbol defined for msp430i* devices to be lower case.\n \n-\tgcc/testsuite/gcc.target/msp430/\n-\t* msp430i-device-symbol.c: New test.\n-\t* msp430f-device-symbol.c: New test.\n-\t* msp430.h: New test header file.\n-\n 2018-06-07  Richard Biener  <rguenther@suse.de>\n \n \t* graphite-sese-to-poly.c (extract_affine): Avoid unneded\n@@ -5135,7 +5130,7 @@\n \n 2018-06-04  Carl Love  <cel@us.ibm.com>\n \n-\t* gcc/config/rs6000/vsx.md (first_match_index_<mode>): Calculate index\n+\t* config/rs6000/vsx.md (first_match_index_<mode>): Calculate index\n \tusing natural element order.  Use gen_lshrsi3 instead of gen_ashrsi3\n \tas it is slightly cheaper.\n \t(first_match_or_eos_index_<mode>):\n@@ -5146,9 +5141,9 @@\n \tCalculate index using natural order.\n \t(define_insn vclzlsbb): Change to define_insn vclzlsbb_<mode>.\n \tfor BE and LE modes.\n-\t* gcc/config/rs6000/rs6000-c.c: Rename P9V_BUILTIN_VCLZLSBB,\n+\t* config/rs6000/rs6000-c.c: Rename P9V_BUILTIN_VCLZLSBB,\n \tP9V_BUILTIN_VCLZLSBB_V16QI.\n-\t* gcc/config/rs6000/rs6000-builtin.def: Make VCLZLSBB mode\n+\t* config/rs6000/rs6000-builtin.def: Make VCLZLSBB mode\n \tspecific.\n \n 2018-06-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n@@ -5245,13 +5240,9 @@\n \n 2018-06-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n-\t* gcc/config/msp430/msp430.c (msp430_attr): Allow interrupt handlers\n+\t* config/msp430/msp430.c (msp430_attr): Allow interrupt handlers\n \tto be static and remove check on interrupt attribute name.\n \n-\tgcc/testsuite/gcc.target/msp430/\n-\t* function-attributes-4.c: New test.\n-\t* static-interrupts.c: New test.\n-\n 2018-06-05  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \t* doc/extend.texi (PowerPC AltiVec Built-in Functions): Remove\n@@ -6622,7 +6613,7 @@\n 2018-05-23  Jozef Lawrynowicz  <jozef.l@somniumtech.com>\n \n \tPR target/78849\n-\t* gcc/tree.c (build_common_tree_nodes): Dont set TYPE_SIZE for __intN\n+\t* tree.c (build_common_tree_nodes): Dont set TYPE_SIZE for __intN\n \ttypes.\n \n 2018-05-23  Segher Boessenkool  <segher@kernel.crashing.org>\n@@ -8527,15 +8518,15 @@\n \t* config/rs6000/sysv4.h: Remove Xilinx FP support.\n \t* config/rs6000/t-rs6000: Ditto.\n \t* config/rs6000/t-xilinx: Delete.\n-\t* gcc/config/rs6000/titan.md: Adjust for fp_type removal.\n-\t* gcc/config/rs6000/vsx.md: Remove Xilinx FP support.\n+\t* config/rs6000/titan.md: Adjust for fp_type removal.\n+\t* config/rs6000/vsx.md: Remove Xilinx FP support.\n \t(VStype_simple): Delete.\n \t(VSfptype_simple, VSfptype_mul, VSfptype_div, VSfptype_sqrt): Delete.\n \t* config/rs6000/xfpu.h: Delete.\n \t* config/rs6000/xfpu.md: Delete.\n \t* config/rs6000/xilinx.h: Delete.\n \t* config/rs6000/xilinx.opt: Delete.\n-\t* gcc/doc/invoke.texi (RS/6000 and PowerPC Options): Remove\n+\t* doc/invoke.texi (RS/6000 and PowerPC Options): Remove\n \t-msingle-float, -mdouble-float, -msimple-fpu, -mfpu=, and -mxilinx-fpu.\n \n 2018-05-04  Tom de Vries  <tom@codesourcery.com>\n@@ -8927,7 +8918,7 @@\n \t* config/microblaze/microblaze.opt: add new option -mpic-data-text-rel.\n \t* config/microblaze/microblaze-protos.h (microblaze_constant_address_p):\n \tAdd declaration.\n-\t* gcc/config/microblaze/microblaze.h (microblaze_constant_address_p):\n+\t* config/microblaze/microblaze.h (microblaze_constant_address_p):\n \tCONSTANT_ADDRESS_P definition to microblaze_constant_address_p.\n \t* config/microblaze/microblaze.c (TARGET_PIC_DATA_TEXT_REL):\n \tNew addressing mode for data-text relative position indepenedent code.\n@@ -8948,7 +8939,7 @@\n \t'TARGET_ASM_GENERATE_PIC_ADDR_DIFF_VEC' to disable address diff vector\n \ttable in case of TARGET_PIC_DATA_TEXT_REL.\n \t(expand_pic_symbol_ref): Add handling for 'UNSPEC_TEXT'.\n-\t* gcc/config/microblaze/microblaze.md (TARGET_PIC_DATA_TEXT_REL):\n+\t* config/microblaze/microblaze.md (TARGET_PIC_DATA_TEXT_REL):\n \tAdd new macros 'UNSPEC_TEXT',\n \t'UNSPEC_SET_TEXT' + add rule for setting r20 in function prologue\n \t+ exclude function calls from 'UNSPEC_PLT' in case of data text\n@@ -8962,7 +8953,7 @@\n \tof addr diff vector generation.\n \t* target.def (TARGET_ASM_GENERATE_PIC_ADDR_DIFF_VEC): Add\n \ttarget hook definition.\n-\t* targhooks.h, gcc/targhooks.c (TARGET_ASM_GENERATE_PIC_ADDR_DIFF_VEC):\n+\t* targhooks.h, targhooks.c (TARGET_ASM_GENERATE_PIC_ADDR_DIFF_VEC):\n \tAdd default function for generate_pic_addr_diff_vec -> flag_pic.\n \t* doc/invoke.texi (Add new pic option): Add new microblaze pic\n \toption for data text relative.\n@@ -9797,18 +9788,18 @@\n 2018-04-16  Olga Makhotina  <olga.makhotina@intel.com>\n \n \tPR target/84331\n-\t* gcc/config.gcc: Support \"skylake\".\n-\t* gcc/config/i386/i386-c.c (ix86_target_macros_internal): Handle\n+\t* config.gcc: Support \"skylake\".\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n \tPROCESSOR_SKYLAKE.\n-\t* gcc/config/i386/i386.c (m_SKYLAKE): Define.\n+\t* config/i386/i386.c (m_SKYLAKE): Define.\n \t(processor_target_table): Add \"skylake\".\n \t(ix86_option_override_internal): Add \"skylake\".\n \t(get_builtin_code_for_version): Handle PROCESSOR_SKYLAKE,\n \tPROCESSOR_CANNONLAKE.\n \t(get_builtin_code_for_version): Fix priority for\n \tPROCESSOR_ICELAKE_CLIENT, PROCESSOR_ICELAKE_SERVER,\n \tPROCESSOR_SKYLAKE-AVX512.\n-\t* gcc/config/i386/i386.h (processor_costs): Define TARGET_SKYLAKE.\n+\t* config/i386/i386.h (processor_costs): Define TARGET_SKYLAKE.\n \t(processor_type): Add PROCESSOR_SKYLAKE.\n \n 2018-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n@@ -10088,7 +10079,7 @@\n 2018-04-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/85287\n-\t* gcc/config/rs6000/rs6000.md (allocate_stack): Put the residual size\n+\t* config/rs6000/rs6000.md (allocate_stack): Put the residual size\n \tfor stack clash protection in a register whenever we need it to be in\n \ta register.\n \n@@ -12847,8 +12838,8 @@\n 2018-02-27  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/83871\n-\t* gcc/doc/invoke.texi (-Wmissing-attributes): New option.\n-\t* gcc/print-tree.c (print_node): Handle DECL_UNINLINABLE.\n+\t* doc/invoke.texi (-Wmissing-attributes): New option.\n+\t* print-tree.c (print_node): Handle DECL_UNINLINABLE.\n \n 2018-02-27  Martin Sebor  <msebor@redhat.com>\n \n@@ -14824,7 +14815,7 @@\n \t* config/arc/predicates.md (compact_store_memory_operand): Check\n \tfor uncached memory accesses.\n \t(nonvol_nonimm_operand): Likewise.\n-\t* gcc/doc/extend.texi (ARC Type Attribute): New subsection.\n+\t* doc/extend.texi (ARC Type Attribute): New subsection.\n \n 2018-01-31  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "a723a528ea610b20aeb80c86bb1a2291bb1ebf17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 34, "deletions": 25, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "patch": "@@ -1,3 +1,11 @@\n+2018-07-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR testsuite/86649\n+\t* g++.dg/tree-ssa-/pr19476-1.C: Check dom2 dump instead of ccp1.\n+\t* g++.dg/tree-ssa-/pr19476-5.C: Likewise.\n+\t* g++.dg/tree-ssa-/pr19476-6.C: New test.\n+\t* g++.dg/tree-ssa-/pr19476-7.C: New test.\n+\n 2018-07-23  Carl Love  <cel@us.ibm.com>\n \n \tPR 86591\n@@ -22,10 +30,10 @@\n 2018-07-20  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/82063\n-\t* gcc/testsuite/c-c++-common/pr68657-1.c: Adjust.\n-\t* gcc/testsuite/c-c++-common/pr68657-2.c: Same.\n-\t* gcc/testsuite/c-c++-common/pr68657-3.c: Same.\n-\t* gcc/testsuite/c-c++-common/pr68833-1.c: Same.\n+\t* c-c++-common/pr68657-1.c: Adjust.\n+\t* c-c++-common/pr68657-2.c: Same.\n+\t* c-c++-common/pr68657-3.c: Same.\n+\t* c-c++-common/pr68833-1.c: Same.\n \t* gcc.dg/Walloc-size-larger-than-16.c: Same.\n \t* gcc.dg/Walloca-larger-than.c: New test.\n \t* gcc.dg/Walloca-larger-than-2.c: New test.\n@@ -39,11 +47,11 @@\n \n \tPR tree-optimization/86613\n \tPR tree-optimization/86611\n-\t* gcc/testsuite/c-c++-common/Warray-bounds-2.c: Undefine macros and\n+\t* c-c++-common/Warray-bounds-2.c: Undefine macros and\n \tprune duplicate warnings.\n-\t* gcc/testsuite/gcc.dg/Warray-bounds-31.c: Xfail test cases with\n+\t* gcc.dg/Warray-bounds-31.c: Xfail test cases with\n \tdata-model-dependencies.\n-\t* gcc/testsuite/gcc.dg/Warray-bounds-32.c: Ditto.\n+\t* gcc.dg/Warray-bounds-32.c: Ditto.\n \n 2018-07-20  Richard Biener  <rguenther@suse.de>\n \n@@ -2517,6 +2525,12 @@\n \n \t* gcc.target/i386/funcspec-56.inc: Test arch=tremont.\n \n+2018-06-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/msp430i-device-symbol.c: New test.\n+\t* gcc.target/msp430/msp430f-device-symbol.c: New test.\n+\t* gcc.target/msp430/msp430.h: New test header file.\n+\n 2018-06-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/69615\n@@ -2584,6 +2598,11 @@\n \tPR tree-optimization/86062\n \t* g++.dg/tree-ssa/pr86062.C: New testcase.\n \n+2018-06-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/function-attributes-4.c: New test.\n+\t* gcc.target/msp430/static-interrupts.c: New test.\n+\n 2018-06-05  Steve Ellcey  <sellcey@cavium.com>\n \n \tPR target/79924\n@@ -4152,10 +4171,11 @@\n \n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n-\t* testsuite/brig.dg/test/gimple/smoke_test.hsail: Fix the test\n+\t* brig.dg/test/gimple/smoke_test.hsail: Fix the test\n \tto match the currently produced gimple.\n \n 2018-05-04  Carl Love  <cel@us.ibm.com>\n+\n \t* gcc.target/powerpc/vsx-vector-6.h (foo): Add test for vec_max,\n \tvec_trunc.\n \t* gcc.target/powerpc/vsx-vector-6-le.c (dg-final): Update xvcmpeqdp,\n@@ -4873,7 +4893,7 @@\n 2018-04-16  Olga Makhotina  <olga.makhotina@intel.com>\n \n \tPR target/84331\n-\t* gcc/testsuite/gcc.target/i386/funcspec-56.inc: Test arch=skylake.\n+\t* gcc.target/i386/funcspec-56.inc: Test arch=skylake.\n \n 2018-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Jason Merrill  <jason@redhat.com>\n@@ -4973,23 +4993,12 @@\n \tPR c++/85258\n \t* g++.dg/parse/error61.C: New test.\n \n-2018-04-12  Cesar Philippidis  <cesar@codesourcery.com>\n-\n-\t* testsuite/libgomp.oacc-c-c++-common/pr84955.c: Revert 259346.\n-\t* testsuite/libgomp.oacc-fortran/pr84955.f90: Likewise.\n-\n 2018-04-12  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \tPR target/85347\n \t* gcc.target/powerpc/vec-ldl-1.c: Change dejagnu directives to\n \tspecify -mvsx on gcc command line.\n \n-2018-04-12  Cesar Philippidis  <cesar@codesourcery.com>\n-\n-\tPR middle-end/84955\n-\t* testsuite/libgomp.oacc-c-c++-common/pr84955.c: New test.\n-\t* testsuite/libgomp.oacc-fortran/pr84955.f90: New test.\n-\n 2018-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/85328\n@@ -5675,8 +5684,8 @@\n 2018-03-27  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR target/85056\n-\t* testsuite/gcc.target/nvptx/pr85056.c: New test.\n-\t* testsuite/gcc.target/nvptx/pr85056a.c: New test.\n+\t* gcc.target/nvptx/pr85056.c: New test.\n+\t* gcc.target/nvptx/pr85056a.c: New test.\n \n 2018-03-27  Richard Biener  <rguenther@suse.de>\n \n@@ -5809,7 +5818,7 @@\n 2018-03-23  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR inline-asm/85030\n-\t* testsuite/gcc.target/i386/pr85030.c: New.\n+\t* gcc.target/i386/pr85030.c: New.\n \n 2018-03-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n@@ -7447,9 +7456,9 @@\n 2018-02-22  Steve Ellcey  <sellcey@cavium.com>\n \n \tPR target/83335\n-\t* gcc/testsuite/gcc.target/aarch64/asm-2.c: Add dg-error for\n+\t* gcc.target/aarch64/asm-2.c: Add dg-error for\n \tILP32 mode.\n-\t* gcc/testsuite/gcc.target/aarch64/asm-4.c: New test.\n+\t* gcc.target/aarch64/asm-4.c: New test.\n \n 2018-02-22  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n "}, {"sha": "25867185648e38d76e967cef0a7b2336ac163072", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19476-1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-1.C?ref=ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-ccp1 -fdelete-null-pointer-checks\" } */\n+/* { dg-options \"-O -fdump-tree-dom2 -fdelete-null-pointer-checks\" } */\n /* { dg-skip-if \"\" keeps_null_pointer_checks } */\n \n // See pr19476-5.C for a version without including <new>.\n@@ -12,5 +12,5 @@ int g(){\n   return 42 + (0 == new int[50]);\n }\n \n-/* { dg-final { scan-tree-dump     \"return 42\" \"ccp1\" } } */\n-/* { dg-final { scan-tree-dump-not \"return 33\" \"ccp1\" } } */\n+/* { dg-final { scan-tree-dump     \"return 42\" \"dom2\" } } */\n+/* { dg-final { scan-tree-dump-not \"return 33\" \"dom2\" } } */"}, {"sha": "72c8986ca9e8835634c16ef9ca49dfda40ce7b25", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19476-5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-5.C?ref=ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-ccp1 -fdelete-null-pointer-checks\" } */\n+/* { dg-options \"-O -fdump-tree-dom2 -fdelete-null-pointer-checks\" } */\n /* { dg-skip-if \"\" keeps_null_pointer_checks } */\n \n // See pr19476-1.C for a version that includes <new>.\n@@ -8,4 +8,4 @@ int g(){\n   return 42 + (0 == new int[50]);\n }\n \n-/* { dg-final { scan-tree-dump     \"return 42\" \"ccp1\" } } */\n+/* { dg-final { scan-tree-dump     \"return 42\" \"dom2\" } } */"}, {"sha": "f6b06c93c1428a441ebb2dd020581dd22d35f8e7", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19476-6.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-6.C?ref=ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-evrp -fdelete-null-pointer-checks\" } */\n+/* { dg-skip-if \"\" keeps_null_pointer_checks } */\n+\n+// See pr19476-7.C for a version without including <new>.\n+#include <new>\n+\n+int f(){\n+  return 33 + (0 == new(std::nothrow) int);\n+}\n+int g(){\n+  return 42 + (0 == new int[50]);\n+}\n+\n+/* { dg-final { scan-tree-dump     \"return 42\" \"evrp\" } } */\n+/* { dg-final { scan-tree-dump-not \"return 33\" \"evrp\" } } */"}, {"sha": "38624f2bac37674976ade5f369e33350ea0a8b60", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19476-7.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-7.C?ref=ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-evrp -fdelete-null-pointer-checks\" } */\n+/* { dg-skip-if \"\" keeps_null_pointer_checks } */\n+\n+// See pr19476-6.C for a version that includes <new>.\n+\n+int g(){\n+  return 42 + (0 == new int[50]);\n+}\n+\n+/* { dg-final { scan-tree-dump     \"return 42\" \"evrp\" } } */"}, {"sha": "c285a99ddac81fcdaf3fd9c2ebb4562790d5b8d2", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ffb164c7df6931b92cf2ad2ef4bd102cec8e6be3", "patch": "@@ -619,6 +619,17 @@\n \t* testsuite/libgomp.fortran/do_concurrent_5.f90: Move modified\n \ttest from gfortran.dg to here.\n \n+2018-04-12  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/pr84955.c: Revert 259346.\n+\t* testsuite/libgomp.oacc-fortran/pr84955.f90: Likewise.\n+\n+2018-04-12  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR middle-end/84955\n+\t* testsuite/libgomp.oacc-c-c++-common/pr84955.c: New test.\n+\t* testsuite/libgomp.oacc-fortran/pr84955.f90: New test.\n+\n 2018-04-05  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/85204"}]}