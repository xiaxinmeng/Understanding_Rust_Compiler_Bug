{"sha": "00478a05f6446fad78c803fbe66bede4ddb0f222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA0NzhhMDVmNjQ0NmZhZDc4YzgwM2ZiZTY2YmVkZTRkZGIwZjIyMg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-07-06T18:53:02Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-07-06T18:53:02Z"}, "message": "Makefile.in (final.o): Depend on target.h.\n\n\t* Makefile.in (final.o): Depend on target.h.\n\t* final.c: Include target.h.\n\t(default_function_pro_epilogue): New.\n\t(final_start_function): Use target structure for function prologues.\n\t(final_end_function): Use target structure for function epilogues.\n\t* fold-const.c (real_hex_to_f): Constify s and p.\n\t* output.h (default_function_pro_epilogue): New.\n\t* real.h (real_hex_to_f): Update prototype.\n\t* target-def.h (TARGET_ASM_FUNCTION_PROLOGUE,\n\tTARGET_ASM_FUNCTION_EPILOGUE, TARGET_ASM_OUT): New.\n\t(TARGET_INITIALIZER): Update.\n\t* target.h (gcc_target): Add struct asm_out.\n\t* doc/tm.texi: Update.\n\nconfig:\n\tUpdate each arch to use TARGET_ASM_FUNCTION_PROLOGUE and\n\tTARGET_ASM_FUNCTION_EPILOGUE.  Move macro code to functions\n\tin cpu/cpu.c, or rename old functions consistently.  Take\n\ta HOST_WIDE INT not an int as the SIZE parameter.  Remove now\n\tredundant macros and prototypes.  Make new functions static.\n\n\t* 1750a/1750a.c: Similarly.\n\t* 1750a/1750a.h: Similarly.\n\t* a29k/a29k-protos.h: Similarly.\n\t* a29k/a29k.c: Similarly.\n\t* a29k/a29k.h: Similarly.\n\t* arc/arc-protos.h: Similarly.\n\t* arc/arc.c: Similarly.\n\t* arc/arc.h: Similarly.\n\t* arm/arm-protos.h: Similarly.\n\t* arm/arm.c: Similarly.\n\t* arm/arm.h: Similarly.\n\t* avr/avr-protos.h: Similarly.\n\t* avr/avr.c: Similarly.\n\t* avr/avr.h: Similarly.\n\t* clipper/clipper-protos.h: Similarly.\n\t* clipper/clipper.c: Similarly.\n\t* clipper/clipper.h: Similarly.\n\t* convex/convex.c: Similarly.\n\t* convex/convex.h: Similarly.\n\t* d30v/d30v-protos.h: Similarly.\n\t* d30v/d30v.c: Similarly.\n\t* d30v/d30v.h: Similarly.\n\t* d30v/d30v.md: Similarly.\n\t* dsp16xx/dsp16xx-protos.h: Similarly.\n\t* dsp16xx/dsp16xx.c: Similarly.\n\t* dsp16xx/dsp16xx.h: Similarly.\n\t* elxsi/elxsi.c: Similarly.\n\t* elxsi/elxsi.h: Similarly.\n\t* fr30/fr30.c: Similarly.\n\t* fr30/fr30.md: Similarly.\n\t* h8300/h8300-protos.h: Similarly.\n\t* h8300/h8300.c: Similarly.\n\t* h8300/h8300.h: Similarly.\n\t* i370/i370-protos.h: Similarly.\n\t* i370/i370.c: Similarly.\n\t* i370/i370.h: Similarly.\n\t* i386/i386.c: Similarly.\n\t* i386/osf1elf.h: Similarly.\n\t* i386/osfrose.h: Similarly.\n\t* i860/i860-protos.h: Similarly.\n\t* i860/i860.c: Similarly.\n\t* i860/i860.h: Similarly.\n\t* i960/i960-protos.h: Similarly.\n\t* i960/i960.c: Similarly.\n\t* i960/i960.h: Similarly.\n\t* ia64/ia64-protos.h: Similarly.\n\t* ia64/ia64.c: Similarly.\n\t* ia64/ia64.h: Similarly.\n\t* m32r/m32r-protos.h: Similarly.\n\t* m32r/m32r.c: Similarly.\n\t* m32r/m32r.h: Similarly.\n\t* m68hc11/m68hc11-protos.h: Similarly.\n\t* m68hc11/m68hc11.c: Similarly.\n\t* m68hc11/m68hc11.h: Similarly.\n\t* m68k/crds.h: Similarly.\n\t* m68k/dpx2.h: Similarly.\n\t* m68k/m68k-protos.h: Similarly.\n\t* m68k/m68k.c: Similarly.\n\t* m68k/m68k.h: Similarly.\n\t* m68k/news.h: Similarly.\n\t* m88k/m88k-protos.h: Similarly.\n\t* m88k/m88k.c: Similarly.\n\t* m88k/m88k.h: Similarly.\n\t* mips/mips-protos.h: Similarly.\n\t* mips/mips.c: Similarly.\n\t* mips/mips.h: Similarly.\n\t* ns32k/merlin.h: Similarly.\n\t* ns32k/ns32k.c: Similarly.\n\t* ns32k/ns32k.h: Similarly.\n\t* ns32k/tek6000.h: Similarly.\n\t* pa/pa-protos.h: Similarly.\n\t* pa/pa.c: Similarly.\n\t* pa/pa.h: Similarly.\n\t* pdp11/2bsd.h: Similarly.\n\t* pdp11/pdp11-protos.h: Similarly.\n\t* pdp11/pdp11.c: Similarly.\n\t* pdp11/pdp11.h: Similarly.\n\t* romp/romp-protos.h: Similarly.\n\t* romp/romp.c: Similarly.\n\t* romp/romp.h: Similarly.\n\t* rs6000/rs6000-protos.h: Similarly.\n\t* rs6000/rs6000.c: Similarly.\n\t* rs6000/rs6000.h: Similarly.\n\t* rs6000/sysv4.h: Similarly.\n\t* sh/sh-protos.h: Similarly.\n\t* sh/sh.c: Similarly.\n\t* sh/sh.h: Similarly.\n\t* sparc/sparc-protos.h: Similarly.\n\t* sparc/sparc.c: Similarly.\n\t* sparc/sparc.h: Similarly.\n\t* vax/vax.c: Similarly.\n\t* vax/vax.h: Similarly.\n\t* vax/vms.h: Similarly.\n\t* we32k/we32k.c: Similarly.\n\t* we32k/we32k.h: Similarly.\n\nFrom-SVN: r43818", "tree": {"sha": "be433b895b736423083c61682fe67631889f24b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be433b895b736423083c61682fe67631889f24b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00478a05f6446fad78c803fbe66bede4ddb0f222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00478a05f6446fad78c803fbe66bede4ddb0f222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00478a05f6446fad78c803fbe66bede4ddb0f222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00478a05f6446fad78c803fbe66bede4ddb0f222/comments", "author": null, "committer": null, "parents": [{"sha": "08c148a85ce39064798592a90839497c098fbc93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c148a85ce39064798592a90839497c098fbc93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c148a85ce39064798592a90839497c098fbc93"}], "stats": {"total": 119, "additions": 119, "deletions": 0}, "files": [{"sha": "664a4aa90305014965c174e7c8f0ce0dc22e71b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00478a05f6446fad78c803fbe66bede4ddb0f222/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00478a05f6446fad78c803fbe66bede4ddb0f222/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00478a05f6446fad78c803fbe66bede4ddb0f222", "patch": "@@ -1,3 +1,122 @@\n+2001-07-06  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* Makefile.in (final.o): Depend on target.h.\n+\t* final.c: Include target.h.\n+\t(default_function_pro_epilogue): New.\n+\t(final_start_function): Use target structure for function prologues.\n+\t(final_end_function): Use target structure for function epilogues.\n+\t* fold-const.c (real_hex_to_f): Constify s and p.\n+\t* output.h (default_function_pro_epilogue): New.\n+\t* real.h (real_hex_to_f): Update prototype.\n+\t* target-def.h (TARGET_ASM_FUNCTION_PROLOGUE,\n+\tTARGET_ASM_FUNCTION_EPILOGUE, TARGET_ASM_OUT): New.\n+\t(TARGET_INITIALIZER): Update.\n+\t* target.h (gcc_target): Add struct asm_out.\n+\t* doc/tm.texi: Update.\n+\n+config:\n+\tUpdate each arch to use TARGET_ASM_FUNCTION_PROLOGUE and\n+\tTARGET_ASM_FUNCTION_EPILOGUE.  Move macro code to functions\n+\tin cpu/cpu.c, or rename old functions consistently.  Take\n+\ta HOST_WIDE INT not an int as the SIZE parameter.  Remove now\n+\tredundant macros and prototypes.  Make new functions static.\n+\n+\t* 1750a/1750a.c: Similarly.\n+\t* 1750a/1750a.h: Similarly.\n+\t* a29k/a29k-protos.h: Similarly.\n+\t* a29k/a29k.c: Similarly.\n+\t* a29k/a29k.h: Similarly.\n+\t* arc/arc-protos.h: Similarly.\n+\t* arc/arc.c: Similarly.\n+\t* arc/arc.h: Similarly.\n+\t* arm/arm-protos.h: Similarly.\n+\t* arm/arm.c: Similarly.\n+\t* arm/arm.h: Similarly.\n+\t* avr/avr-protos.h: Similarly.\n+\t* avr/avr.c: Similarly.\n+\t* avr/avr.h: Similarly.\n+\t* clipper/clipper-protos.h: Similarly.\n+\t* clipper/clipper.c: Similarly.\n+\t* clipper/clipper.h: Similarly.\n+\t* convex/convex.c: Similarly.\n+\t* convex/convex.h: Similarly.\n+\t* d30v/d30v-protos.h: Similarly.\n+\t* d30v/d30v.c: Similarly.\n+\t* d30v/d30v.h: Similarly.\n+\t* d30v/d30v.md: Similarly.\n+\t* dsp16xx/dsp16xx-protos.h: Similarly.\n+\t* dsp16xx/dsp16xx.c: Similarly.\n+\t* dsp16xx/dsp16xx.h: Similarly.\n+\t* elxsi/elxsi.c: Similarly.\n+\t* elxsi/elxsi.h: Similarly.\n+\t* fr30/fr30.c: Similarly.\n+\t* fr30/fr30.md: Similarly.\n+\t* h8300/h8300-protos.h: Similarly.\n+\t* h8300/h8300.c: Similarly.\n+\t* h8300/h8300.h: Similarly.\n+\t* i370/i370-protos.h: Similarly.\n+\t* i370/i370.c: Similarly.\n+\t* i370/i370.h: Similarly.\n+\t* i386/i386.c: Similarly.\n+\t* i386/osf1elf.h: Similarly.\n+\t* i386/osfrose.h: Similarly.\n+\t* i860/i860-protos.h: Similarly.\n+\t* i860/i860.c: Similarly.\n+\t* i860/i860.h: Similarly.\n+\t* i960/i960-protos.h: Similarly.\n+\t* i960/i960.c: Similarly.\n+\t* i960/i960.h: Similarly.\n+\t* ia64/ia64-protos.h: Similarly.\n+\t* ia64/ia64.c: Similarly.\n+\t* ia64/ia64.h: Similarly.\n+\t* m32r/m32r-protos.h: Similarly.\n+\t* m32r/m32r.c: Similarly.\n+\t* m32r/m32r.h: Similarly.\n+\t* m68hc11/m68hc11-protos.h: Similarly.\n+\t* m68hc11/m68hc11.c: Similarly.\n+\t* m68hc11/m68hc11.h: Similarly.\n+\t* m68k/crds.h: Similarly.\n+\t* m68k/dpx2.h: Similarly.\n+\t* m68k/m68k-protos.h: Similarly.\n+\t* m68k/m68k.c: Similarly.\n+\t* m68k/m68k.h: Similarly.\n+\t* m68k/news.h: Similarly.\n+\t* m88k/m88k-protos.h: Similarly.\n+\t* m88k/m88k.c: Similarly.\n+\t* m88k/m88k.h: Similarly.\n+\t* mips/mips-protos.h: Similarly.\n+\t* mips/mips.c: Similarly.\n+\t* mips/mips.h: Similarly.\n+\t* ns32k/merlin.h: Similarly.\n+\t* ns32k/ns32k.c: Similarly.\n+\t* ns32k/ns32k.h: Similarly.\n+\t* ns32k/tek6000.h: Similarly.\n+\t* pa/pa-protos.h: Similarly.\n+\t* pa/pa.c: Similarly.\n+\t* pa/pa.h: Similarly.\n+\t* pdp11/2bsd.h: Similarly.\n+\t* pdp11/pdp11-protos.h: Similarly.\n+\t* pdp11/pdp11.c: Similarly.\n+\t* pdp11/pdp11.h: Similarly.\n+\t* romp/romp-protos.h: Similarly.\n+\t* romp/romp.c: Similarly.\n+\t* romp/romp.h: Similarly.\n+\t* rs6000/rs6000-protos.h: Similarly.\n+\t* rs6000/rs6000.c: Similarly.\n+\t* rs6000/rs6000.h: Similarly.\n+\t* rs6000/sysv4.h: Similarly.\n+\t* sh/sh-protos.h: Similarly.\n+\t* sh/sh.c: Similarly.\n+\t* sh/sh.h: Similarly.\n+\t* sparc/sparc-protos.h: Similarly.\n+\t* sparc/sparc.c: Similarly.\n+\t* sparc/sparc.h: Similarly.\n+\t* vax/vax.c: Similarly.\n+\t* vax/vax.h: Similarly.\n+\t* vax/vms.h: Similarly.\n+\t* we32k/we32k.c: Similarly.\n+\t* we32k/we32k.h: Similarly.\n+\n Fri Jul  6 11:47:59 2001  Jeffrey A Law  (law@cygnus.com)\n \n \t* basic-block.h (first_insn_after_basic_block_note): Declare."}]}