{"sha": "62c7a041bba8823e25dff3108de78f4053ec0a36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjN2EwNDFiYmE4ODIzZTI1ZGZmMzEwOGRlNzhmNDA1M2VjMGEzNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-08-09T09:56:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-08-09T09:56:15Z"}, "message": "stl_algobase.h (fill(const _Deque_iterator<>&, const _Deque_iterator<>&, const _Tp&)): Move...\n\n2006-08-09  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_algobase.h (fill(const _Deque_iterator<>&,\n\tconst _Deque_iterator<>&, const _Tp&)): Move...\n\t* include/bits/deque.tcc: ... here.\n\t* include/bits/stl_deque.h: Declare.\n\nFrom-SVN: r116034", "tree": {"sha": "13209238489668821b27c615a249cb90d629f4dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13209238489668821b27c615a249cb90d629f4dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c7a041bba8823e25dff3108de78f4053ec0a36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c7a041bba8823e25dff3108de78f4053ec0a36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c7a041bba8823e25dff3108de78f4053ec0a36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c7a041bba8823e25dff3108de78f4053ec0a36/comments", "author": null, "committer": null, "parents": [{"sha": "fac186e50079e8287ba71ba851937117123a006f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac186e50079e8287ba71ba851937117123a006f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac186e50079e8287ba71ba851937117123a006f"}], "stats": {"total": 60, "additions": 34, "deletions": 26}, "files": [{"sha": "efb06c93b938009d20731fc7f1c736ab580fb525", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c7a041bba8823e25dff3108de78f4053ec0a36/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c7a041bba8823e25dff3108de78f4053ec0a36/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=62c7a041bba8823e25dff3108de78f4053ec0a36", "patch": "@@ -1,3 +1,10 @@\n+2006-08-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_algobase.h (fill(const _Deque_iterator<>&,\n+\tconst _Deque_iterator<>&, const _Tp&)): Move...\n+\t* include/bits/deque.tcc: ... here.\n+\t* include/bits/stl_deque.h: Declare.\n+\n 2006-08-06  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/16611"}, {"sha": "8740101a299389d8b7d6024a3c4aea6c36fa3395", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c7a041bba8823e25dff3108de78f4053ec0a36/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c7a041bba8823e25dff3108de78f4053ec0a36/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=62c7a041bba8823e25dff3108de78f4053ec0a36", "patch": "@@ -744,6 +744,28 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n       this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);\n     }\n \n+  // Overload for deque::iterators, exploiting the \"segmented-iterator\n+  // optimization\".  NB: leave const_iterators alone!\n+  template<typename _Tp>\n+    void\n+    fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>& __first,\n+\t const _Deque_iterator<_Tp, _Tp&, _Tp*>& __last, const _Tp& __value)\n+    {\n+      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n+\n+      for (typename _Self::_Map_pointer __node = __first._M_node + 1;\n+           __node < __last._M_node; ++__node)\n+\tstd::fill(*__node, *__node + _Self::_S_buffer_size(), __value);\n+\n+      if (__first._M_node != __last._M_node)\n+\t{\n+\t  std::fill(__first._M_cur, __first._M_last, __value);\n+\t  std::fill(__last._M_first, __last._M_cur, __value);\n+\t}\n+      else\n+\tstd::fill(__first._M_cur, __last._M_cur, __value);\n+    }\n+\n _GLIBCXX_END_NESTED_NAMESPACE\n \n #endif"}, {"sha": "9507241964a9fa58e9296fcd21db0fc021310da2", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c7a041bba8823e25dff3108de78f4053ec0a36/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c7a041bba8823e25dff3108de78f4053ec0a36/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=62c7a041bba8823e25dff3108de78f4053ec0a36", "patch": "@@ -618,32 +618,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     std::memset(__first, static_cast<unsigned char>(__tmp), __last - __first);\n   }\n \n-  template<typename _Tp, typename _Ref, typename _Ptr>\n-    struct _Deque_iterator;\n-\n-  // Overload for deque::iterators, exploiting the \"segmented-iterator\n-  // optimization\".  NB: leave const_iterators alone!\n-  template<typename _Tp>\n-    void\n-    fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>& __first,\n-\t const _Deque_iterator<_Tp, _Tp&, _Tp*>& __last, const _Tp& __value)\n-    {\n-      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n-\n-      for (typename _Self::_Map_pointer __node = __first._M_node + 1;\n-           __node < __last._M_node; ++__node)\n-\tstd::fill(*__node, *__node + _Self::_S_buffer_size(), __value);\n-\n-      if (__first._M_node != __last._M_node)\n-\t{\n-\t  std::fill(__first._M_cur, __first._M_last, __value);\n-\t  std::fill(__last._M_first, __last._M_cur, __value);\n-\t}\n-      else\n-\tstd::fill(__first._M_cur, __last._M_cur, __value);\n-    }\n-\n-\n   template<bool>\n     struct __fill_n\n     {"}, {"sha": "ffa58744f991f49c182799808d0bf6c83c5c9c4b", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c7a041bba8823e25dff3108de78f4053ec0a36/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c7a041bba8823e25dff3108de78f4053ec0a36/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=62c7a041bba8823e25dff3108de78f4053ec0a36", "patch": "@@ -350,6 +350,11 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)\n     { return __x + __n; }\n \n+  template<typename _Tp>\n+    void\n+    fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>& __first,\n+\t const _Deque_iterator<_Tp, _Tp&, _Tp*>& __last, const _Tp& __value);\n+\n   /**\n    *  @if maint\n    *  Deque base class.  This class provides the unified face for %deque's"}]}