{"sha": "c54796e0c4a857f0c796c50b9c295d75bf7cb600", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU0Nzk2ZTBjNGE4NTdmMGM3OTZjNTBiOWMyOTVkNzViZjdjYjYwMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:17:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:17:49Z"}, "message": "[multiple changes]\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_util.adb, gnat1drv.adb, s-parint.ads: Minor\n\treformatting.\n\n2011-08-29  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-cbhama.ads, a-cbhase.ads (Cursor): Default-initialize all\n\tcomponents of record type.\n\n2011-08-29  Bob Duff  <duff@adacore.com>\n\n\t* s-tassta.adb (Task_Wrapper): Handle and ignore exceptions propagated\n\tby the termination handler.\n\nFrom-SVN: r178241", "tree": {"sha": "7b318b0aa2d40b866a94d8f0cc5cb527c26fafb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b318b0aa2d40b866a94d8f0cc5cb527c26fafb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c54796e0c4a857f0c796c50b9c295d75bf7cb600", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54796e0c4a857f0c796c50b9c295d75bf7cb600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54796e0c4a857f0c796c50b9c295d75bf7cb600", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54796e0c4a857f0c796c50b9c295d75bf7cb600/comments", "author": null, "committer": null, "parents": [{"sha": "9fd9d2beb0212955c62cdfcf7401eaabd45b2462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd9d2beb0212955c62cdfcf7401eaabd45b2462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fd9d2beb0212955c62cdfcf7401eaabd45b2462"}], "stats": {"total": 84, "additions": 48, "deletions": 36}, "files": [{"sha": "944519d4229cf0a394029a0b9c497ea87026c048", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c54796e0c4a857f0c796c50b9c295d75bf7cb600", "patch": "@@ -1,3 +1,18 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_util.adb, gnat1drv.adb, s-parint.ads: Minor\n+\treformatting.\n+\n+2011-08-29  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-cbhama.ads, a-cbhase.ads (Cursor): Default-initialize all\n+\tcomponents of record type.\n+\n+2011-08-29  Bob Duff  <duff@adacore.com>\n+\n+\t* s-tassta.adb (Task_Wrapper): Handle and ignore exceptions propagated\n+\tby the termination handler.\n+\n 2011-08-29  Yannick Moy  <moy@adacore.com>\n \n \t* sem_ch3.adb (Array_Type_Declaration): Create declarations for Itypes"}, {"sha": "0102e0221b15f26da9a892e69474a1876d56c698", "filename": "gcc/ada/a-cbhama.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fa-cbhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fa-cbhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.ads?ref=c54796e0c4a857f0c796c50b9c295d75bf7cb600", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -320,7 +320,7 @@ private\n \n    type Cursor is record\n       Container : Map_Access;\n-      Node      : Count_Type;\n+      Node      : Count_Type := 0;\n    end record;\n \n    procedure Read"}, {"sha": "4f3ea3107f93c8e34786aaf9126bdd113d2705a8", "filename": "gcc/ada/a-cbhase.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.ads?ref=c54796e0c4a857f0c796c50b9c295d75bf7cb600", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -431,7 +431,7 @@ private\n \n    type Cursor is record\n       Container : Set_Access;\n-      Node      : Count_Type;\n+      Node      : Count_Type := 0;\n    end record;\n \n    procedure Write"}, {"sha": "f371afafa45490a8d70c7707cff4485008febe33", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=c54796e0c4a857f0c796c50b9c295d75bf7cb600", "patch": "@@ -479,7 +479,7 @@ procedure Gnat1drv is\n          --  We would prefer to suppress the expansion of tagged types and\n          --  dispatching calls, so that one day GNATprove can handle them\n          --  directly. Unfortunately, this is causing problems in some cases,\n-         --  so keep this expansion for the time being.\n+         --  so keep this expansion for the time being. To be investigated ???\n \n          Tagged_Type_Expansion := True;\n       end if;"}, {"sha": "a6257cc72b36862784b9c9b4b7dd0729cd192873", "filename": "gcc/ada/s-parint.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fs-parint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fs-parint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.ads?ref=c54796e0c4a857f0c796c50b9c295d75bf7cb600", "patch": "@@ -38,21 +38,21 @@ with Interfaces;\n with System.RPC;\n \n package System.Partition_Interface is\n-\n    pragma Elaborate_Body;\n \n    type DSA_Implementation_Name is (No_DSA, GARLIC_DSA, PolyORB_DSA);\n    DSA_Implementation : constant DSA_Implementation_Name := No_DSA;\n    --  Identification of this DSA implementation variant\n \n    PCS_Version : constant := 1;\n-   --  Version of the PCS API (for Exp_Dist consistency check).\n+   --  Version of the PCS API (for Exp_Dist consistency check)\n+   --\n    --  This version number is matched against corresponding element of\n-   --  Exp_Dist.PCS_Version_Number to ensure that the versions of Exp_Dist and\n-   --  the PCS are consistent.\n+   --  Exp_Dist.PCS_Version_Number to ensure that the versions of Exp_Dist\n+   --  and the PCS are consistent.\n \n-   --  RCI receiving stubs contain a table of descriptors for\n-   --  all user subprograms exported by the unit.\n+   --  RCI receiving stubs contain a table of descriptors for all user\n+   --  subprograms exported by the unit.\n \n    type Subprogram_Id is new Natural;\n    First_RCI_Subprogram_Id : constant := 2;"}, {"sha": "88b43ed35ac68cd9b15de239aee29287798020f5", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=c54796e0c4a857f0c796c50b9c295d75bf7cb600", "patch": "@@ -1324,7 +1324,14 @@ package body System.Tasking.Stages is\n       --  Execute the task termination handler if we found it\n \n       if TH /= null then\n-         TH.all (Cause, Self_ID, EO);\n+         begin\n+            TH.all (Cause, Self_ID, EO);\n+\n+         exception\n+            when others =>\n+               --  RM-C.7.3 requires these exceptions to be ignored\n+               null;\n+         end;\n       end if;\n \n       if System.Stack_Usage.Is_Enabled then"}, {"sha": "5a3c57003e96c6793dace39f55493b853d0e4e68", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=c54796e0c4a857f0c796c50b9c295d75bf7cb600", "patch": "@@ -4791,28 +4791,22 @@ package body Sem_Ch3 is\n       --  Process subtype indication if one is present\n \n       if Present (Component_Typ) then\n-\n          Element_Type := Process_Subtype (Component_Typ, P, Related_Id, 'C');\n \n          --  In formal verification mode, create an explicit declaration for\n          --  the Itype created for a component type. Having a declaration for\n          --  all type entities facilitates the task of the formal verification\n-         --  back-end. Notice that this declaration is not attached to the\n-         --  tree.\n+         --  back-end. Note: this declaration is not attached to the tree.\n \n-         if ALFA_Mode\n-           and then Is_Itype (Element_Type)\n-         then\n+         if ALFA_Mode and then Is_Itype (Element_Type) then\n             declare\n                Loc  : constant Source_Ptr := Sloc (Def);\n                Decl : Entity_Id;\n-\n             begin\n                Decl :=\n                  Make_Subtype_Declaration (Loc,\n                    Defining_Identifier => Element_Type,\n                    Subtype_Indication  => Relocate_Node (Component_Typ));\n-\n                Analyze (Decl);\n             end;\n          end if;\n@@ -4906,23 +4900,20 @@ package body Sem_Ch3 is\n          --  In ALFA mode, generate a declaration for Itype T, so that the\n          --  formal verification back-end can use it.\n \n-         if ALFA_Mode\n-           and then Is_Itype (T)\n-         then\n+         if ALFA_Mode and then Is_Itype (T) then\n             declare\n                Loc  : constant Source_Ptr := Sloc (Def);\n                Decl : Node_Id;\n-\n             begin\n-               Decl := Make_Full_Type_Declaration (Loc,\n-                  Defining_Identifier => T,\n-                  Type_Definition     =>\n-                   Make_Constrained_Array_Definition (Loc,\n-                     Discrete_Subtype_Definitions =>\n-                       New_Copy_List (Discrete_Subtype_Definitions (Def)),\n-                     Component_Definition         =>\n-                       Relocate_Node (Component_Definition (Def))));\n-\n+               Decl :=\n+                 Make_Full_Type_Declaration (Loc,\n+                   Defining_Identifier => T,\n+                   Type_Definition     =>\n+                     Make_Constrained_Array_Definition (Loc,\n+                       Discrete_Subtype_Definitions =>\n+                         New_Copy_List (Discrete_Subtype_Definitions (Def)),\n+                       Component_Definition         =>\n+                         Relocate_Node (Component_Definition (Def))));\n                Analyze (Decl);\n             end;\n          end if;"}, {"sha": "b51719d0af2e050e8fc727f5fc90168d2f8fdf18", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54796e0c4a857f0c796c50b9c295d75bf7cb600/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c54796e0c4a857f0c796c50b9c295d75bf7cb600", "patch": "@@ -8515,9 +8515,8 @@ package body Sem_Util is\n    begin\n       pragma Assert (Is_Itype (Id));\n       return Present (Parent (Id))\n-        and then Nkind_In (Parent (Id),\n-                           N_Full_Type_Declaration,\n-                           N_Subtype_Declaration)\n+        and then Nkind_In (Parent (Id), N_Full_Type_Declaration,\n+                                        N_Subtype_Declaration)\n         and then Defining_Entity (Parent (Id)) = Id;\n    end Itype_Has_Declaration;\n "}]}