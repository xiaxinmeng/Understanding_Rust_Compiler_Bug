{"sha": "ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EyYmQ5NDk0OTI3YzBjYWY3YjNmY2U5NmE1YmNkYTQzZjNlMGMzZQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-10T00:16:47Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-10T00:16:47Z"}, "message": "Daily bump.", "tree": {"sha": "86f65639f9a556f69549d3f2ff50614db443cc65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86f65639f9a556f69549d3f2ff50614db443cc65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/comments", "author": null, "committer": null, "parents": [{"sha": "0c2200e4198df9294aba102519f662a907596623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2200e4198df9294aba102519f662a907596623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c2200e4198df9294aba102519f662a907596623"}], "stats": {"total": 251, "additions": 250, "deletions": 1}, "files": [{"sha": "f986deed3d083a89959fd2e6747a5dc8c3472c68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1,3 +1,74 @@\n+2020-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/98188\n+\t* tree-ssa-phiopt.c (two_value_replacement): Don't special case\n+\tBOOLEAN_TYPEs for ranges, instead if get_range_info doesn't return\n+\tVR_RANGE, set min/max to wi::min/max_value.\n+\n+2020-12-09  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* config/aarch64/aarch64-option-extensions.def\n+\t(AARCH64_OPT_EXTENSION): New +pauth option in -march for AArch64.\n+\t* config/aarch64/aarch64.h (AARCH64_FL_PAUTH): New pauth extension bitmask.\n+\t(AARCH64_ISA_PUATH): New ISA bitmask for PAUTH.\n+\t(AARCH64_FL_FOR_ARCH8_3): Add PAUTH to Armv8.3-A.\n+\t(TARGET_PAUTH): New target mask to isolate PAUTH instructions.\n+\t* config/aarch64/aarch64.md (do_return): Condition set to TARGET_PAUTH.\n+\t* doc/invoke.texi: Update docs for +flagm and +pauth.\n+\n+2020-12-09  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (REG_ALLOC_ORDER): Remove\n+\n+2020-12-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98213\n+\t* tree-ssa-loop-im.c (sm_seq_valid_bb): Cache successfully\n+\tprocessed PHIs.\n+\t(hoist_memory_references): Adjust.\n+\n+2020-12-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h (cpu_vector_cost): Move simd\n+\tfields to...\n+\t(simd_vec_cost): ... Here.  Define.\n+\t(advsimd_vec_cost): Define.\n+\t(sve_vec_cost): Define.\n+\t* config/aarch64/aarch64.c (generic_advsimd_vector_cost):\n+\tDefine.\n+\t(generic_sve_vector_cost): Likewise.\n+\t(generic_vector_cost): Update.\n+\t(qdf24xx_advsimd_vector_cost): Define.\n+\t(qdf24xx_vector_cost): Update.\n+\t(thunderx_advsimd_vector_cost): Define.\n+\t(thunderx_vector_cost): Update.\n+\t(tsv110_advsimd_vector_cost): Define.\n+\t(tsv110_vector_cost): Likewise.\n+\t(cortexa57_advsimd_vector_cost): Define.\n+\t(cortexa57_vector_cost): Update.\n+\t(exynosm1_advsimd_vector_cost): Define.\n+\t(exynosm1_vector_cost): Update.\n+\t(xgene1_advsimd_vector_cost): Define.\n+\t(xgene1_vector_cost): Update.\n+\t(thunderx2t99_advsimd_vector_cost): Define.\n+\t(thunderx2t99_vector_cost): Update.\n+\t(thunderx3t110_advsimd_vector_cost): Define.\n+\t(thunderx3t110_vector_cost): Update.\n+\t(aarch64_builtin_vectorization_cost): Handle sve and advsimd\n+\tvector cost fields.\n+\n+2020-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98199\n+\t* fold-const.c (native_encode_initializer): Fix handling bit-fields\n+\twhen off > 0.\n+\n+2020-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98193\n+\t* fold-const.c (native_encode_initializer): Set pos to field's\n+\tbyte position if iterating over a field with missing initializer.\n+\n 2020-12-08  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/98182"}, {"sha": "9320aaa99a8856c917f7a790f069f86e319d5d41", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1 +1 @@\n-20201209\n+20201210"}, {"sha": "d0bfaaebe4de60f67d04e274ed49a2f32c12a32e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1,3 +1,8 @@\n+2020-12-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-pragma.c (omp_pragmas): Add 'allocate'.\n+\t* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_ALLOCATE.\n+\n 2020-12-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/98187"}, {"sha": "bb21d0c76541455f2a9db4434e412e60f8fddc09", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1,3 +1,14 @@\n+2020-12-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_omp_allocate): New.\n+\t(c_parser_omp_construct): Call it.\n+\n+2020-12-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/98200\n+\t* gimple-parser.c (c_parser_gimple_postfix_expression): Return\n+\tearly on error.\n+\n 2020-12-07  Martin Uecker  <muecker@gwdg.de>\n \n \tPR c/97981"}, {"sha": "ce97c8553f99dc20bd234477968c9acb6d313fa9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1,3 +1,78 @@\n+2020-12-09  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* parser.h (struct cp_token): Add main_source_p field.\n+\t* parser.c (cp_lexer_new_main): Pass thought module token filter.\n+\tCheck macros.\n+\t(cp_lexer_get_preprocessor_token): Set main_source_p.\n+\t(enum module_parse): New.\n+\t(cp_parser_diagnose_invalid_type_name): Deal with unrecognized\n+\tmodule-directives.\n+\t(cp_parser_skip_to_closing_parenthesize_1): Skip module-directivres.\n+\t(cp_parser_skip_to_end_of_statement): Likewise.\n+\t(cp_parser_skiup_to_end_of_block_or_statement): Likewise.\n+\t(cp_parser_translation_unit): Add module parsing calls.\n+\t(cp_parser_module_name, cp_parser_module_declaration): New.\n+\t(cp_parser_import_declaration, cp_parser_module_export): New.\n+\t(cp_parser_declaration): Add module export detection.\n+\t(cp_parser_template_declaration): Adjust 'export' error message.\n+\t(cp_parser_function_definition_after_declarator): Add\n+\tmodule-specific logic.\n+\t* module.cc (import_module, declare_module)\n+\t(maybe_check_all_macros): Stubs.\n+\n+2020-12-09  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/97517\n+\t* cxx-pretty-print.c (cxx_pretty_printer::simple_type_specifier): Handle\n+\tNULLPTR_TYPE.\n+\t(pp_cxx_type_specifier_seq): Likewise.\n+\t(cxx_pretty_printer::type_id): Likewise.\n+\n+2020-12-09  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl.c (duplicate_decls): Add module-specific redeclaration\n+\tlogic.\n+\t(cxx_init_decl_processing): Export the global namespace, maybe\n+\tinitialize modules.\n+\t(start_decl): Reject local-extern in a module, adjust linkage of\n+\ttemplate var.\n+\t(xref_tag_1): Add module-specific redeclaration logic.\n+\t(start_enum): Likewise.\n+\t(finish_enum_value_list): Export unscoped members of an exported\n+\tenum.\n+\t(grokmethod): Implement p1779 linkage of in-class defined\n+\tfunctions.\n+\t* decl2.c (no_linkage_error): Imports are ok.\n+\t(c_parse_final_cleanups): Call fini_modules.\n+\t* lex.c (cxx_dup_lang_specific): Clear some module flags in the\n+\tcopy.\n+\t* module.cc (module_kind): Define.\n+\t(module_may_redeclare, set_defining_module): Stubs.\n+\t(init_modules): Error on modules.\n+\t(fini_modules): Stub.\n+\t* rtti.c (push_abi_namespace): Save and reset module_kind.\n+\t(pop_abi_namespace): Restore module kind.\n+\t(build_dynamic_cast_1, tinfo_base_init): Adjust.\n+\t* semantics.c (begin_class_definition): Add module-specific logic.\n+\t(expand_or_defer_fn_1): Keep bodies of more fns when modules_p.\n+\n+2020-12-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* parser.c (cp_parser_omp_allocate): New.\n+\t(cp_parser_omp_construct, cp_parser_pragma): Call it.\n+\n+2020-12-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/98019\n+\t* cvt.c (maybe_warn_nodiscard): Check c_inhibit_evaluation_warnings.\n+\n+2020-12-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/59238\n+\t* init.c (expand_default_init): Pass tf_no_cleanup when building\n+\ta TARGET_EXPR to go on the RHS of an INIT_EXPR.\n+\t* typeck.c (cp_build_modify_expr): Likewise.\n+\n 2020-12-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/98103"}, {"sha": "63abb26fe35f2dbd540705037a89ce10bacc465d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1,3 +1,66 @@\n+2020-12-09  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* go.test/go-test.exp (errchk): Rewrite regexp quoting to use\n+\tcurly braces, making it much simpler.\n+\n+2020-12-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98213\n+\t* g++.dg/pr98213.C: New testcase.\n+\n+2020-12-09  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/97517\n+\t* g++.dg/diagnostic/nullptr.C: New test.\n+\n+2020-12-09  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/98182\n+\t* gcc.dg/tree-ssa/if-to-switch-1.c: Add case-values-threshold in\n+\torder to fix them for aarch64.\n+\t* gcc.dg/tree-ssa/if-to-switch-10.c: Likewise.\n+\n+2020-12-09  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* gcc.target/s390/zvector/autovec-double-signaling-eq.c: Build\n+\twith exceptions.\n+\t* gcc.target/s390/zvector/autovec-float-signaling-eq.c:\n+\tLikewise.\n+\n+2020-12-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-c++-common/gomp/allocate-5.c: New test.\n+\n+2020-12-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/98200\n+\t* gcc.dg/gimplefe-error-8.c: New testcase.\n+\n+2020-12-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/reduction4.f90: Update scan-trees, add\n+\tlost testcase; move test with FE error to ...\n+\t* gfortran.dg/gomp/reduction5.f90: ... here.\n+\n+2020-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98199\n+\t* gcc.c-torture/compile/pr98199.c: New test.\n+\n+2020-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98193\n+\t* g++.dg/cpp2a/bit-cast7.C: New test.\n+\n+2020-12-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp2a/concepts-nodiscard1.C: Remove xfail.\n+\n+2020-12-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/59238\n+\t* g++.dg/cpp0x/new4.C: New test.\n+\n 2020-12-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/98191"}, {"sha": "f49e8cd0a016f9f1cd6642a2bb58278aa9e86785", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1,3 +1,9 @@\n+2020-12-09  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* hsa.h: Replace whole file.\n+\t* hsa_ext_amd.h: New file.\n+\t* hsa_ext_image.h: New file.\n+\n 2020-09-24  Mark Wielaard  <mark@klomp.org>\n \n \t* dwarf2.def: Add DWARF5 Unit type header encoding macros"}, {"sha": "326011fc11c3a749d1fe6148edc9d4bafd82ce00", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1,3 +1,8 @@\n+2020-12-09  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* plugin/plugin-gcn.c: Include hsa_ext_amd.h.\n+\t(HSA_AMD_AGENT_INFO_COMPUTE_UNIT_COUNT): Delete redundant definition.\n+\n 2020-12-08  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/scan-1.f90: New test."}, {"sha": "e494f05490aaec9b194745d6b887eb71f9e53ecc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ca2bd9494927c0caf7b3fce96a5bcda43f3e0c3e", "patch": "@@ -1,3 +1,16 @@\n+2020-12-09  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_LIBSTDCXX_TIME): Define NO_SLEEP\n+\tif none of nanosleep, sleep and Sleep is available.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* include/std/thread [_GLIBCXX_NO_SLEEP] (__sleep_for): Do\n+\tnot declare.\n+\t[_GLIBCXX_NO_SLEEP] (sleep_for, sleep_until): Do not\n+\tdefine.\n+\t* src/c++11/thread.cc [_GLIBCXX_NO_SLEEP] (__sleep_for): Do\n+\tnot define.\n+\n 2020-12-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/96299"}]}