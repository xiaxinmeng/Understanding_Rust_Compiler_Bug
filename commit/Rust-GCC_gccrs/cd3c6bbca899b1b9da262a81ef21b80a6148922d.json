{"sha": "cd3c6bbca899b1b9da262a81ef21b80a6148922d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzYzZiYmNhODk5YjFiOWRhMjYyYTgxZWYyMWI4MGE2MTQ4OTIyZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-11-11T00:17:34Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-11-11T00:17:34Z"}, "message": "re PR c++/38699 (ICE using offsetof with pointer and array accesses)\n\n\n\tPR tree-optimize/38669\n\t* gcc.dg/tree-ssa/pr38699.c\n\nFrom-SVN: r166579", "tree": {"sha": "fe70c81bf139152172a664b7c73223b8cb3ba871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe70c81bf139152172a664b7c73223b8cb3ba871"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd3c6bbca899b1b9da262a81ef21b80a6148922d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3c6bbca899b1b9da262a81ef21b80a6148922d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3c6bbca899b1b9da262a81ef21b80a6148922d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3c6bbca899b1b9da262a81ef21b80a6148922d/comments", "author": null, "committer": null, "parents": [{"sha": "928bcefada039eb29722374a9484023e3a78285f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928bcefada039eb29722374a9484023e3a78285f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/928bcefada039eb29722374a9484023e3a78285f"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "ea2341e4e61b658577d1f55fe5902633c9345d15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3c6bbca899b1b9da262a81ef21b80a6148922d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3c6bbca899b1b9da262a81ef21b80a6148922d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd3c6bbca899b1b9da262a81ef21b80a6148922d", "patch": "@@ -1,3 +1,8 @@\n+2010-11-10  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimize/38669\n+\t* gcc.dg/tree-ssa/pr38699.c\n+\n 2010-11-10  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/tree-prof/inliner-1.c: Fix testcase."}, {"sha": "6845324e41a6d699b3db796d75af3146b1b0a12d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr38699.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3c6bbca899b1b9da262a81ef21b80a6148922d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38699.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3c6bbca899b1b9da262a81ef21b80a6148922d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38699.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr38699.c?ref=cd3c6bbca899b1b9da262a81ef21b80a6148922d", "patch": "@@ -0,0 +1,76 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -fdump-tree-optimized\" } */\n+/*\n+ * License: GPL\n+ * Copyright: (c) 2007 by Till Harbaum <till@harbaum.org>\n+ * Copyright: (c) 2008 Wolfgang Moser, http://d81.de\n+ */\n+\n+/* #include <avr/wdt.h> */\n+/* some declarations from the include above for ATMega8 */\n+#define _SFR_IO8(io_addr) (*(volatile unsigned char *)((io_addr) + 0x20))\n+#define TOV0    0\n+#define TCNT0    _SFR_IO8(0x32)\n+#define TIFR    _SFR_IO8(0x38)\n+#define DDRC    _SFR_IO8(0x14)\n+#define DDRD    _SFR_IO8(0x11)\n+#define PORTC    _SFR_IO8(0x15)\n+#define PORTD    _SFR_IO8(0x12)\n+\n+static void delay_wait_us( unsigned char timeout ) {\n+    __asm__ __volatile__ (\"wdr\");\n+\n+    TCNT0 = timeout;\n+    TIFR |= (1 << (TOV0));\n+\n+    /* wait until counter overflows */\n+    while(!(TIFR & (1 << (TOV0))));\n+}\n+\n+static void delay_wait_us_ms( unsigned char timeout ) {\n+    delay_wait_us( timeout * 1000 );\n+}\n+\n+\n+void makeUseOfTimerWait( unsigned char val ) {\n+    delay_wait_us( 10 );\n+    DDRC |= 0x10;\n+    delay_wait_us( 10 );\n+    DDRD |= 0x20;\n+\n+    delay_wait_us( 20 );\n+    PORTC &= ~0x10;\n+    delay_wait_us( 10 );\n+    PORTD &= ~0x20;\n+\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+    delay_wait_us_ms( 5 );\n+\n+    PORTC |= val & 0x10;\n+    delay_wait_us( 10 );\n+    PORTD |= val & 0x20;\n+\n+    delay_wait_us( 10 );\n+}\n+/* We should not inline the delay loops.  */\n+/* { dg-final { scan-tree-dump \"delay_wait_us\" \"optimized\"} } */\n+/* { dg-final { scan-tree-dump \"delay_wait_us_ms\" \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}