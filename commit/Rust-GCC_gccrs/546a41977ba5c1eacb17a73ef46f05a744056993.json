{"sha": "546a41977ba5c1eacb17a73ef46f05a744056993", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ2YTQxOTc3YmE1YzFlYWNiMTdhNzNlZjQ2ZjA1YTc0NDA1Njk5Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-04-28T18:12:29Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-04-28T18:12:29Z"}, "message": "re PR c++/48798 (CV-qualified base class erroneously forbidden)\n\n/cp\n2011-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/48798\n\t* semantics.c (finish_base_specifier): cv-qualified base class\n\tis fine, per DR 484.\n\n/testsuite\n2011-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/48798\n\t* g++.dg/inherit/pr48798.C: New.\n\t* g++.old-deja/g++.other/base1.C: Adjust.\n\nFrom-SVN: r173124", "tree": {"sha": "c8505ef953cb6a8d3fdd8b8f6e793b0a6885d4d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8505ef953cb6a8d3fdd8b8f6e793b0a6885d4d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/546a41977ba5c1eacb17a73ef46f05a744056993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/546a41977ba5c1eacb17a73ef46f05a744056993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/546a41977ba5c1eacb17a73ef46f05a744056993", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/546a41977ba5c1eacb17a73ef46f05a744056993/comments", "author": null, "committer": null, "parents": [{"sha": "f62cd40949d0219d9c2c6e24afb0377fcde9d0e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62cd40949d0219d9c2c6e24afb0377fcde9d0e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62cd40949d0219d9c2c6e24afb0377fcde9d0e3"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "e34f03f464fefdeea26d50b0e76572b00befb21b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=546a41977ba5c1eacb17a73ef46f05a744056993", "patch": "@@ -1,3 +1,9 @@\n+2011-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/48798\n+\t* semantics.c (finish_base_specifier): cv-qualified base class\n+\tis fine, per DR 484.\n+\n 2011-04-28  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/48656"}, {"sha": "815824a5b7a40f5f3a59bec41e867a01dce386f6", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=546a41977ba5c1eacb17a73ef46f05a744056993", "patch": "@@ -2767,7 +2767,8 @@ finish_base_specifier (tree base, tree access, bool virtual_p)\n     {\n       if (cp_type_quals (base) != 0)\n \t{\n-\t  error (\"base class %qT has cv qualifiers\", base);\n+\t  /* DR 484: Can a base-specifier name a cv-qualified\n+\t     class type?  */\n \t  base = TYPE_MAIN_VARIANT (base);\n \t}\n       result = build_tree_list (access, base);"}, {"sha": "8d0d6a9da5559ac880a64551d3239550a332dd9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=546a41977ba5c1eacb17a73ef46f05a744056993", "patch": "@@ -1,3 +1,9 @@\n+2011-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/48798\n+\t* g++.dg/inherit/pr48798.C: New.\n+\t* g++.old-deja/g++.other/base1.C: Adjust.\n+\n 2011-04-28  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/48656"}, {"sha": "cc9921e69b825ae3a146b61ec590ad037259a767", "filename": "gcc/testsuite/g++.dg/inherit/pr48798.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpr48798.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpr48798.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpr48798.C?ref=546a41977ba5c1eacb17a73ef46f05a744056993", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/48798\n+\n+typedef struct A {} const t;\n+struct B : t {};"}, {"sha": "b38a6546d033956b94c8b65176dd5ee85e94d07d", "filename": "gcc/testsuite/g++.old-deja/g++.other/base1.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbase1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/546a41977ba5c1eacb17a73ef46f05a744056993/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbase1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbase1.C?ref=546a41977ba5c1eacb17a73ef46f05a744056993", "patch": "@@ -3,8 +3,7 @@\n // Copyright (C) 2000 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 25 Nov 2000 <nathan@codesourcery.com>\n \n-// We lost information about which base wasn't an aggregate type, plus we\n-// allowed cv qualifed bases via typedefs.\n+// We lost information about which base wasn't an aggregate type.\n \n typedef int I;\n typedef int cI;\n@@ -16,5 +15,5 @@ typedef A pA;\n \n struct B : I {};  // { dg-error \"\" } not an aggregate\n struct C : cI {}; // { dg-error \"\" } not an aggregate\n-struct D : cA {}; // { dg-error \"\" } cv qualified\n+struct D : cA {}; // cv-qualified is fine per DR 484\n struct E : pA {};"}]}