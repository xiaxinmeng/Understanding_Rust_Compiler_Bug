{"sha": "5c70192c1d006b8ca0f028aea3e88f0964f7b8b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3MDE5MmMxZDAwNmI4Y2EwZjAyOGFlYTNlODhmMDk2NGY3YjhiOA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-10-11T03:22:28Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-10-11T03:22:28Z"}, "message": "dwarf2out.c: Move attribute to subprogram declaration instead of subroutine type.\n\n2004-10-10  Eric Christopher  <echristo@redhat.com>\n\n\t* dwarf2out.c: Move attribute to subprogram declaration\n\tinstead of subroutine type.\n\nFrom-SVN: r88868", "tree": {"sha": "a14d34ffc03fd2ad4549f6240e334a4cc8f34526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a14d34ffc03fd2ad4549f6240e334a4cc8f34526"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c70192c1d006b8ca0f028aea3e88f0964f7b8b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c70192c1d006b8ca0f028aea3e88f0964f7b8b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c70192c1d006b8ca0f028aea3e88f0964f7b8b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c70192c1d006b8ca0f028aea3e88f0964f7b8b8/comments", "author": null, "committer": null, "parents": [{"sha": "b187901efacd685b07dc020ad8c47c73bd0da647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b187901efacd685b07dc020ad8c47c73bd0da647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b187901efacd685b07dc020ad8c47c73bd0da647"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "92e09b793d7b39a69d0aa76877798002b9d11634", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c70192c1d006b8ca0f028aea3e88f0964f7b8b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c70192c1d006b8ca0f028aea3e88f0964f7b8b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c70192c1d006b8ca0f028aea3e88f0964f7b8b8", "patch": "@@ -1,3 +1,8 @@\n+2004-10-10  Eric Christopher  <echristo@redhat.com>\n+\n+\t* dwarf2out.c: Move attribute to subprogram declaration\n+\tinstead of subroutine type.\n+\n 2004-10-10  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* basic-block.h: Remove the prototypes for can_hoist_insn_p,\n@@ -146,7 +151,7 @@\n \n 2004-10-08  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* config/s390/s390.c (s390_register_info): Don't save fprs for \n+\t* config/s390/s390.c (s390_register_info): Don't save fprs for\n \t-msoft-float.\n \t(s390_conditional_register_usage): Make fprs 'fixed' for -msoft-float.\n \n@@ -286,7 +291,7 @@\n \tUNSPEC_VCMPGTUH, UNSPEC_VCMPGTSH, UNSPEC_VCMPGTUW, UNSPEC_VCMPGTSW,\n \tUNSPEC_VCMPGTFP, UNSPEC_VSEL4SI, UNSPEC_VSEL4SF, UNSPEC_VSEL8HI,\n \tUNSPEC_VSEL16QI, UNSPEC_VCOND_V4SI, UNSPEC_VCOND_V4SF, UNSPEC_VCOND_V8HI,\n-\tUNSPEC_VCOND_V16QI, UNSPEC_VCONDU_V4SI, UNSPEC_VCONDU_V8HI, \n+\tUNSPEC_VCOND_V16QI, UNSPEC_VCONDU_V4SI, UNSPEC_VCONDU_V8HI,\n \tUNSPEC_VCONDU_V16QI): New constant defines.\n \t(vcondv4si, vcondv4sf, vcondv8hi, vcondv16qi, vconduv4si, vconduv8hi,\n \tvconduv16qi): New patterns.\n@@ -297,7 +302,7 @@\n \t(rs6000_emit_vector_compare): Same.\n \t(rs6000_emit_vector_select): Same.\n \t(INSN_NOT_AVAILABLE): New.\n-\t\n+\n 2004-10-07  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR tree-optimization/17749"}, {"sha": "500ab40e68605b957bdc34dcb9010c433e40192e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c70192c1d006b8ca0f028aea3e88f0964f7b8b8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c70192c1d006b8ca0f028aea3e88f0964f7b8b8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=5c70192c1d006b8ca0f028aea3e88f0964f7b8b8", "patch": "@@ -11392,6 +11392,9 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t}\n #endif\n     }\n+  /* Add the calling convention attribute if requested.  */\n+  add_calling_convention_attribute (subr_die, TREE_TYPE (decl));\n+\n }\n \n /* Generate a DIE to represent a declared data object.  */\n@@ -11933,7 +11936,6 @@ gen_subroutine_type_die (tree type, dw_die_ref context_die)\n   equate_type_number_to_die (type, subr_die);\n   add_prototyped_attribute (subr_die, type);\n   add_type_attribute (subr_die, return_type, 0, 0, context_die);\n-  add_calling_convention_attribute (subr_die, type);\n   gen_formal_types_die (type, subr_die);\n }\n "}]}