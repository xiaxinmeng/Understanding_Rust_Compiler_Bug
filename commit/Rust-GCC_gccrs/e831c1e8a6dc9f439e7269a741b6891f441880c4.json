{"sha": "e831c1e8a6dc9f439e7269a741b6891f441880c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgzMWMxZThhNmRjOWY0MzllNzI2OWE3NDFiNjg5MWY0NDE4ODBjNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-01-17T14:52:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-01-17T14:52:57Z"}, "message": "re PR middle-end/51782 (-ftree-sra: Missing address-space information leads to wrong)\n\n2012-01-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/51782\n\t* expr.c (expand_assignment): Take address-space information\n\tfrom the address operand of MEM_REF and TARGET_MEM_REF.\n\t(expand_expr_real_1): Likewise.\n\nFrom-SVN: r183249", "tree": {"sha": "df207b909c37336f1bf48d3e70711b0078456b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df207b909c37336f1bf48d3e70711b0078456b11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e831c1e8a6dc9f439e7269a741b6891f441880c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e831c1e8a6dc9f439e7269a741b6891f441880c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e831c1e8a6dc9f439e7269a741b6891f441880c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e831c1e8a6dc9f439e7269a741b6891f441880c4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6d10e80119b8dc77f7e8d791cbd0546a4b0aa22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d10e80119b8dc77f7e8d791cbd0546a4b0aa22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d10e80119b8dc77f7e8d791cbd0546a4b0aa22"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "055cc2e25fb6ec20385538bd97aa30e6c8f7a0e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e831c1e8a6dc9f439e7269a741b6891f441880c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e831c1e8a6dc9f439e7269a741b6891f441880c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e831c1e8a6dc9f439e7269a741b6891f441880c4", "patch": "@@ -1,3 +1,10 @@\n+2012-01-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/51782\n+\t* expr.c (expand_assignment): Take address-space information\n+\tfrom the address operand of MEM_REF and TARGET_MEM_REF.\n+\t(expand_expr_real_1): Likewise.\n+\n 2012-01-17  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* ira.c (do_reload): Make sure ira_dump_file is re-set if no"}, {"sha": "fb93346eb9932a7a3fafb4b62c9931c93ac6e957", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e831c1e8a6dc9f439e7269a741b6891f441880c4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e831c1e8a6dc9f439e7269a741b6891f441880c4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e831c1e8a6dc9f439e7269a741b6891f441880c4", "patch": "@@ -4590,7 +4590,7 @@ expand_assignment (tree to, tree from, bool nontemporal)\n       if (TREE_CODE (to) == MEM_REF)\n \t{\n \t  addr_space_t as\n-\t      = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (to, 1))));\n+\t    = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (to, 0))));\n \t  tree base = TREE_OPERAND (to, 0);\n \t  address_mode = targetm.addr_space.address_mode (as);\n \t  op0 = expand_expr (base, NULL_RTX, VOIDmode, EXPAND_NORMAL);\n@@ -4608,7 +4608,8 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t}\n       else if (TREE_CODE (to) == TARGET_MEM_REF)\n \t{\n-\t  addr_space_t as = TYPE_ADDR_SPACE (TREE_TYPE (to));\n+\t  addr_space_t as\n+\t    = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (to, 0))));\n \t  struct mem_address addr;\n \n \t  get_address_description (to, &addr);\n@@ -9253,7 +9254,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \n     case TARGET_MEM_REF:\n       {\n-\taddr_space_t as = TYPE_ADDR_SPACE (TREE_TYPE (exp));\n+\taddr_space_t as\n+\t  = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (exp, 0))));\n \tstruct mem_address addr;\n \tenum insn_code icode;\n \tunsigned int align;\n@@ -9288,7 +9290,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n     case MEM_REF:\n       {\n \taddr_space_t as\n-\t  = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (exp, 1))));\n+\t  = TYPE_ADDR_SPACE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (exp, 0))));\n \tenum machine_mode address_mode;\n \ttree base = TREE_OPERAND (exp, 0);\n \tgimple def_stmt;"}]}