{"sha": "31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFiZGQwOGE5ZDIxYTJmZDcwMTliYmQ3YjE3OGM4OTExYTdkMmU0MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-09-15T16:53:01Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-09-15T16:53:01Z"}, "message": "Change of location_get_source_line signature\n\ngcc/ChangeLog:\n\t* input.h (location_get_source_line): Drop \"expanded_location\"\n\tparam in favor of a file and line number.\n\t* input.c (location_get_source_line): Likewise.\n\t(dump_location_info): Update for change in signature of\n\tlocation_get_source_line.\n\t* diagnostic.c (diagnostic_print_caret_line): Likewise.\n\ngcc/c-family/ChangeLog:\n\t* c-format.c (location_from_offset): Update for change in\n\tsignature of location_get_source_line.\n\t* c-indentation.c (get_visual_column): Likewise.\n\t(line_contains_hash_if): Likewise.\n\nFrom-SVN: r227800", "tree": {"sha": "b8835d6ddb4631db4e8d4f261d3286ea4d207b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8835d6ddb4631db4e8d4f261d3286ea4d207b80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c55721c0dfee6d4de107cab63bfe0d1ebf5bdfde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55721c0dfee6d4de107cab63bfe0d1ebf5bdfde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c55721c0dfee6d4de107cab63bfe0d1ebf5bdfde"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "455afc330fa8fbd9d341499689a4bc1b36fd02ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "patch": "@@ -1,3 +1,12 @@\n+2015-09-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* input.h (location_get_source_line): Drop \"expanded_location\"\n+\tparam in favor of a file and line number.\n+\t* input.c (location_get_source_line): Likewise.\n+\t(dump_location_info): Update for change in signature of\n+\tlocation_get_source_line.\n+\t* diagnostic.c (diagnostic_print_caret_line): Likewise.\n+\n 2015-09-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* defaults.h (STACK_OLD_CHECK_PROTECT): Adjust for -fno-exceptions."}, {"sha": "140cda5c81cc7aac0476d3cdebf327a43ca5c363", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "patch": "@@ -1,3 +1,10 @@\n+2015-09-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-format.c (location_from_offset): Update for change in\n+\tsignature of location_get_source_line.\n+\t* c-indentation.c (get_visual_column): Likewise.\n+\t(line_contains_hash_if): Likewise.\n+\n 2015-09-14  Marek Polacek  <polacek@redhat.com>\n \n \t* c-opts.c (c_common_post_options): Set C++ standard earlier, before"}, {"sha": "ab5807662eb8e5415d9b3cb5e32ec5af16c02ae7", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "patch": "@@ -132,7 +132,7 @@ location_from_offset (location_t loc, int offset)\n \n   expanded_location s = expand_location_to_spelling_point (loc);\n   int line_width;\n-  const char *line = location_get_source_line (s, &line_width);\n+  const char *line = location_get_source_line (s.file, s.line, &line_width);\n   if (line == NULL)\n     return loc;\n   line += s.column - 1 ;"}, {"sha": "dd3522360b4a5c588a149f4339171eba0ad898fb", "filename": "gcc/c-family/c-indentation.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Fc-family%2Fc-indentation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Fc-family%2Fc-indentation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-indentation.c?ref=31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "patch": "@@ -45,7 +45,8 @@ get_visual_column (expanded_location exploc,\n \t\t   unsigned int *first_nws = NULL)\n {\n   int line_len;\n-  const char *line = location_get_source_line (exploc, &line_len);\n+  const char *line = location_get_source_line (exploc.file, exploc.line,\n+\t\t\t\t\t       &line_len);\n   if (!line)\n     return false;\n   unsigned int vis_column = 0;\n@@ -84,13 +85,8 @@ get_visual_column (expanded_location exploc,\n static bool\n line_contains_hash_if (const char *file, int line_num)\n {\n-  expanded_location exploc;\n-  exploc.file = file;\n-  exploc.line = line_num;\n-  exploc.column = 1;\n-\n   int line_len;\n-  const char *line = location_get_source_line (exploc, &line_len);\n+  const char *line = location_get_source_line (file, line_num, &line_len);\n   if (!line)\n     return false;\n "}, {"sha": "a1ffe72ea95b25d11d38e75227e522261c74eb82", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "patch": "@@ -377,7 +377,8 @@ diagnostic_print_caret_line (diagnostic_context * context,\n   \n   int cmax = MAX (xloc1.column, xloc2.column);\n   int line_width;\n-  const char *line = location_get_source_line (xloc1, &line_width);\n+  const char *line = location_get_source_line (xloc1.file, xloc1.line,\n+\t\t\t\t\t       &line_width);\n   if (line == NULL || cmax > line_width)\n     return;\n "}, {"sha": "e7302a425897369e8d405467ffd9191b6ca9a62b", "filename": "gcc/input.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.c?ref=31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "patch": "@@ -684,27 +684,27 @@ read_line_num (fcache *c, size_t line_num,\n   return read_next_line (c, line, line_len);\n }\n \n-/* Return the physical source line that corresponds to xloc in a\n+/* Return the physical source line that corresponds to FILE_PATH/LINE in a\n    buffer that is statically allocated.  The newline is replaced by\n    the null character.  Note that the line can contain several null\n    characters, so LINE_LEN, if non-null, points to the actual length\n    of the line.  */\n \n const char *\n-location_get_source_line (expanded_location xloc,\n+location_get_source_line (const char *file_path, int line,\n \t\t\t  int *line_len)\n {\n   static char *buffer;\n   static ssize_t len;\n \n-  if (xloc.line == 0)\n+  if (line == 0)\n     return NULL;\n \n-  fcache *c = lookup_or_add_file_to_cache_tab (xloc.file);\n+  fcache *c = lookup_or_add_file_to_cache_tab (file_path);\n   if (c == NULL)\n     return NULL;\n \n-  bool read = read_line_num (c, xloc.line, &buffer, &len);\n+  bool read = read_line_num (c, line, &buffer, &len);\n \n   if (read && line_len)\n     *line_len = len;\n@@ -971,7 +971,9 @@ dump_location_info (FILE *stream)\n \t      /* Beginning of a new source line: draw the line.  */\n \n \t      int line_size;\n-\t      const char *line_text = location_get_source_line (exploc, &line_size);\n+\t      const char *line_text = location_get_source_line (exploc.file,\n+\t\t\t\t\t\t\t\texploc.line,\n+\t\t\t\t\t\t\t\t&line_size);\n \t      if (!line_text)\n \t\tbreak;\n \t      fprintf (stream,"}, {"sha": "07d8544ed6f70fe98947f8152c6138a0f6481a84", "filename": "gcc/input.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Finput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41/gcc%2Finput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.h?ref=31bdd08a9d21a2fd7019bbd7b178c8911a7d2e41", "patch": "@@ -38,7 +38,7 @@ extern char builtins_location_check[(BUILTINS_LOCATION\n \n extern bool is_location_from_builtin_token (source_location);\n extern expanded_location expand_location (source_location);\n-extern const char *location_get_source_line (expanded_location xloc,\n+extern const char *location_get_source_line (const char *file_path, int line,\n \t\t\t\t\t     int *line_size);\n extern expanded_location expand_location_to_spelling_point (source_location);\n extern source_location expansion_point_location_if_in_system_header (source_location);"}]}