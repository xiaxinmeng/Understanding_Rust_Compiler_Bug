{"sha": "1d4fb4935cf2e224a01e6409341fb6ad5eb0462d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ0ZmI0OTM1Y2YyZTIyNGEwMWU2NDA5MzQxZmI2YWQ1ZWIwNDYyZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-02-10T17:44:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-02-10T17:44:31Z"}, "message": "tree-ssa-dce.c (propagate_necessity): Handle GIMPLE_TRANSACTION.\n\n        * tree-ssa-dce.c (propagate_necessity): Handle GIMPLE_TRANSACTION.\n        * tree-ssa-operands.c (parse_ssa_operands): Add virtual operands\n        for GIMPLE_TRANSACTION.  Tidy if's into a switch.\n\nFrom-SVN: r184107", "tree": {"sha": "4dee112990f9f516b3426813bcdbf020af010066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dee112990f9f516b3426813bcdbf020af010066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d/comments", "author": null, "committer": null, "parents": [{"sha": "1e98f62d742e5c5a56f150d5e857dd083d9a10d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e98f62d742e5c5a56f150d5e857dd083d9a10d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e98f62d742e5c5a56f150d5e857dd083d9a10d9"}], "stats": {"total": 62, "additions": 43, "deletions": 19}, "files": [{"sha": "d3ca6b516caffa26848b267958778d2bfe1d77c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d4fb4935cf2e224a01e6409341fb6ad5eb0462d", "patch": "@@ -1,3 +1,9 @@\n+2012-02-10  Richard Henderson  <rth@redhat.com>\n+\n+        * tree-ssa-dce.c (propagate_necessity): Handle GIMPLE_TRANSACTION.\n+        * tree-ssa-operands.c (parse_ssa_operands): Add virtual operands\n+        for GIMPLE_TRANSACTION.  Tidy if's into a switch.\n+\n 2012-02-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \t    Ira Rosen  <irar@il.ibm.com>\n "}, {"sha": "ace9ef9972d40151cac637c937805017a6dba454", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=1d4fb4935cf2e224a01e6409341fb6ad5eb0462d", "patch": "@@ -965,6 +965,13 @@ propagate_necessity (struct edge_list *el)\n \t\t    mark_aliased_reaching_defs_necessary (stmt, op);\n \t\t}\n \t    }\n+\t  else if (gimple_code (stmt) == GIMPLE_TRANSACTION)\n+\t    {\n+\t      /* The beginning of a transaction is a memory barrier.  */\n+\t      /* ??? If we were really cool, we'd only be a barrier\n+\t\t for the memories touched within the transaction.  */\n+\t      mark_all_reaching_defs_necessary (stmt);\n+\t    }\n \t  else\n \t    gcc_unreachable ();\n "}, {"sha": "ed0d34de2df14a8c2fd050836b96f40a1d8cb5be", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d4fb4935cf2e224a01e6409341fb6ad5eb0462d/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=1d4fb4935cf2e224a01e6409341fb6ad5eb0462d", "patch": "@@ -1043,35 +1043,46 @@ static void\n parse_ssa_operands (gimple stmt)\n {\n   enum gimple_code code = gimple_code (stmt);\n+  size_t i, n, start = 0;\n \n-  if (code == GIMPLE_ASM)\n-    get_asm_expr_operands (stmt);\n-  else if (is_gimple_debug (stmt))\n+  switch (code)\n     {\n+    case GIMPLE_ASM:\n+      get_asm_expr_operands (stmt);\n+      break;\n+\n+    case GIMPLE_TRANSACTION:\n+      /* The start of a transaction is a memory barrier.  */\n+      add_virtual_operand (stmt, opf_def | opf_use);\n+      break;\n+\n+    case GIMPLE_DEBUG:\n       if (gimple_debug_bind_p (stmt)\n \t  && gimple_debug_bind_has_value_p (stmt))\n \tget_expr_operands (stmt, gimple_debug_bind_get_value_ptr (stmt),\n \t\t\t   opf_use | opf_no_vops);\n-    }\n-  else\n-    {\n-      size_t i, start = 0;\n+      break;\n \n-      if (code == GIMPLE_ASSIGN || code == GIMPLE_CALL)\n-\t{\n-\t  get_expr_operands (stmt, gimple_op_ptr (stmt, 0), opf_def);\n-\t  start = 1;\n-\t}\n-\n-      for (i = start; i < gimple_num_ops (stmt); i++)\n-\tget_expr_operands (stmt, gimple_op_ptr (stmt, i), opf_use);\n+    case GIMPLE_RETURN:\n+      append_vuse (gimple_vop (cfun));\n+      goto do_default;\n \n+    case GIMPLE_CALL:\n       /* Add call-clobbered operands, if needed.  */\n-      if (code == GIMPLE_CALL)\n-\tmaybe_add_call_vops (stmt);\n+      maybe_add_call_vops (stmt);\n+      /* FALLTHRU */\n \n-      if (code == GIMPLE_RETURN)\n-\tappend_vuse (gimple_vop (cfun));\n+    case GIMPLE_ASSIGN:\n+      get_expr_operands (stmt, gimple_op_ptr (stmt, 0), opf_def);\n+      start = 1;\n+      /* FALLTHRU */\n+\n+    default:\n+    do_default:\n+      n = gimple_num_ops (stmt);\n+      for (i = start; i < n; i++)\n+\tget_expr_operands (stmt, gimple_op_ptr (stmt, i), opf_use);\n+      break;\n     }\n }\n "}]}