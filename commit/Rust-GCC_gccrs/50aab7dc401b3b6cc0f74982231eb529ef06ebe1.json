{"sha": "50aab7dc401b3b6cc0f74982231eb529ef06ebe1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBhYWI3ZGM0MDFiM2I2Y2MwZjc0OTgyMjMxZWI1MjllZjA2ZWJlMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-02-16T20:37:49Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-02-16T20:37:49Z"}, "message": "re PR target/37049 (Unaligned move used on aligned  destination of push insn)\n\ngcc/\n\n2009-02-16  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/37049\n\t* config/i386/i386.c (ix86_expand_push): Set memory alignment\n\tto function argument boundary.\n\ngcc/testsuite/\n\n2009-02-16  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/37049\n\t* gcc.target/i386/push-1.c: New.\n\nFrom-SVN: r144209", "tree": {"sha": "5714dffe97f911ae5c3baa320d1c4804984b80b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5714dffe97f911ae5c3baa320d1c4804984b80b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50aab7dc401b3b6cc0f74982231eb529ef06ebe1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50aab7dc401b3b6cc0f74982231eb529ef06ebe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50aab7dc401b3b6cc0f74982231eb529ef06ebe1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f720bdbd413a22e20c2f4616d364ae101c63463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f720bdbd413a22e20c2f4616d364ae101c63463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f720bdbd413a22e20c2f4616d364ae101c63463"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "981f150f3b17cd853ade30c7acc81fb97e5cd1cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50aab7dc401b3b6cc0f74982231eb529ef06ebe1", "patch": "@@ -1,3 +1,9 @@\n+2009-02-16  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/37049\n+\t* config/i386/i386.c (ix86_expand_push): Set memory alignment\n+\tto function argument boundary.\n+\n 2009-02-16  Hariharan Sandanagobalane  <hariharan@picochip.com>\n \n \t* config/picochip/picochip.md (lea_add): Allow any nonimmediate"}, {"sha": "582a9dc4a6970dd4650adf48747f65f55c9a680e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=50aab7dc401b3b6cc0f74982231eb529ef06ebe1", "patch": "@@ -12594,6 +12594,12 @@ ix86_expand_push (enum machine_mode mode, rtx x)\n     emit_move_insn (stack_pointer_rtx, tmp);\n \n   tmp = gen_rtx_MEM (mode, stack_pointer_rtx);\n+\n+  /* When we push an operand onto stack, it has to be aligned at least\n+     at the function argument boundary.  */\n+  set_mem_align (tmp,\n+\t\t ix86_function_arg_boundary (mode, NULL_TREE));\n+\n   emit_move_insn (tmp, x);\n }\n "}, {"sha": "73f0bc58a6ed36a4a821883a9a79dccb6b836ca7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50aab7dc401b3b6cc0f74982231eb529ef06ebe1", "patch": "@@ -1,3 +1,8 @@\n+2009-02-16  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/37049\n+\t* gcc.target/i386/push-1.c: New.\n+\n 2009-02-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/struct/w_prof_single_str_global.c: Mask return value."}, {"sha": "cf5a104136409b94e8961b93f4cf77370a04cf6c", "filename": "gcc/testsuite/gcc.target/i386/push-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpush-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50aab7dc401b3b6cc0f74982231eb529ef06ebe1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpush-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpush-1.c?ref=50aab7dc401b3b6cc0f74982231eb529ef06ebe1", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-w -msse2 -Os\" } */\n+\n+typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));\n+\n+extern void foo (__m128 x, __m128 y ,__m128 z ,__m128 a, int size);\n+\n+void\n+bar (void)\n+{\n+  __m128 x = { 1.0 };\n+  foo (x, x, x, x, 5);\n+}\n+\n+/* { dg-final { scan-assembler-not \"movups\" } } */"}]}