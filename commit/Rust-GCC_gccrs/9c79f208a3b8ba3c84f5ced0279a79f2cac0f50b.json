{"sha": "9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM3OWYyMDhhM2I4YmEzYzg0ZjVjZWQwMjc5YTc5ZjJjYWMwZjUwYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:48:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:48:00Z"}, "message": "[multiple changes]\n\n2012-10-29  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-win32.ads: Kill potential warning.\n\n2012-10-29  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi: Describe new pragma Assert_And_Cut.\n\t* par-prag.adb, sem_prag.adb, snames.ads-tmpl: Add new pragma\n\tand treat it like pragma Assert.\n\nFrom-SVN: r192923", "tree": {"sha": "634164c34e9976a1840c637298117cdfa7933370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/634164c34e9976a1840c637298117cdfa7933370"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/comments", "author": null, "committer": null, "parents": [{"sha": "061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061bc17d25f9e54b0a8434a07a19e1c3fcf3a77c"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "7e0df9fb8544b51c21e9ae0206a0cdc3141fa354", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "patch": "@@ -105,6 +105,7 @@ Implementation Defined Pragmas\n * Pragma Ada_2012::\n * Pragma Annotate::\n * Pragma Assert::\n+* Pragma Assert_And_Cut::\n * Pragma Assertion_Policy::\n * Pragma Assume_No_Invalid_Values::\n * Pragma Ast_Entry::\n@@ -843,6 +844,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Ada_2012::\n * Pragma Annotate::\n * Pragma Assert::\n+* Pragma Assert_And_Cut::\n * Pragma Assertion_Policy::\n * Pragma Assume_No_Invalid_Values::\n * Pragma Ast_Entry::\n@@ -1195,6 +1197,22 @@ of Ada from 2005 on. In GNAT, it is implemented in all versions\n of Ada, and the DISABLE policy is an implementation-defined\n addition.\n \n+@node Pragma Assert_And_Cut\n+@unnumberedsec Pragma Assert_And_Cut\n+@findex Assert_And_Cut\n+@noindent\n+Syntax:\n+@smallexample @c ada\n+pragma Assert_And_Cut (\n+  boolean_EXPRESSION\n+  [, string_EXPRESSION]);\n+@end smallexample\n+\n+@noindent\n+The effect of this pragma for compilation is exactly the same as the one\n+of pragma @code{Assert}. This pragma is used to help formal verification\n+tools by marking program points where the tool can simplify precise\n+knowledge about execution based on the assertion given.\n \n @node Pragma Assertion_Policy\n @unnumberedsec Pragma Assertion_Policy"}, {"sha": "79d57a3f8e2572758dbaeb04c5b075d202f316a1", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "patch": "@@ -1098,6 +1098,7 @@ begin\n            Pragma_All_Calls_Remote               |\n            Pragma_Annotate                       |\n            Pragma_Assert                         |\n+           Pragma_Assert_And_Cut                 |\n            Pragma_Asynchronous                   |\n            Pragma_Atomic                         |\n            Pragma_Atomic_Components              |"}, {"sha": "ec07b820d45da35db3cbc3438e928255ea746163", "filename": "gcc/ada/s-win32.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fs-win32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fs-win32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-win32.ads?ref=9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 2008-2012, Free Software Foundation, Inc.          --\n+--          Copyright (C) 2008-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n --  This package plus its child provide the low level interface to the Win32\n --  API. The core part of the Win32 API (common to RTX and Win32) is in this\n --  package, and an additional part of the Win32 API which is not supported by\n---  RTX is in package System.Win33.Ext.\n+--  RTX is in package System.Win32.Ext.\n \n with Interfaces.C;\n \n@@ -73,8 +73,13 @@ package System.Win32 is\n    for Bits2'Size  use 2;\n    for Bits17'Size use 17;\n \n+   --  Note that the following clashes with standard names are to stay\n+   --  compatible with the historical choice of following the C names.\n+\n+   pragma Warnings (Off);\n    FALSE : constant := 0;\n    TRUE  : constant := 1;\n+   pragma Warnings (On);\n \n    function GetLastError return DWORD;\n    pragma Import (Stdcall, GetLastError, \"GetLastError\");"}, {"sha": "4af9a517185cdfdd96f962928eabc222e011e309", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "patch": "@@ -6759,14 +6759,17 @@ package body Sem_Prag is\n             end if;\n          end Annotate;\n \n-         ------------\n-         -- Assert --\n-         ------------\n+         -----------------------------\n+         -- Assert & Assert_And_Cut --\n+         -----------------------------\n \n          --  pragma Assert ([Check =>] Boolean_EXPRESSION\n          --                 [, [Message =>] Static_String_EXPRESSION]);\n \n-         when Pragma_Assert => Assert : declare\n+         --  pragma Assert_And_Cut ([Check =>] Boolean_EXPRESSION\n+         --                         [, [Message =>] Static_String_EXPRESSION]);\n+\n+         when Pragma_Assert | Pragma_Assert_And_Cut => Assert : declare\n             Expr : Node_Id;\n             Newa : List_Id;\n \n@@ -6784,6 +6787,13 @@ package body Sem_Prag is\n             --  So rewrite pragma in this manner, transfer the message\n             --  argument if present, and analyze the result\n \n+            --  Pragma Assert_And_Cut is treated exactly like pragma Assert by\n+            --  the frontend. Formal verification tools may use it to \"cut\" the\n+            --  paths through the code, to make verification tractable. When\n+            --  dealing with a semantically analyzed tree, the information that\n+            --  a Check node N corresponds to a source Assert_And_Cut pragma\n+            --  can be retrieved from the pragma kind of Original_Node(N).\n+\n             Expr := Get_Pragma_Arg (Arg1);\n             Newa := New_List (\n               Make_Pragma_Argument_Association (Loc,\n@@ -15185,6 +15195,7 @@ package body Sem_Prag is\n       Pragma_All_Calls_Remote               => -1,\n       Pragma_Annotate                       => -1,\n       Pragma_Assert                         => -1,\n+      Pragma_Assert_And_Cut                 => -1,\n       Pragma_Assertion_Policy               =>  0,\n       Pragma_Assume_No_Invalid_Values       =>  0,\n       Pragma_Asynchronous                   => -1,"}, {"sha": "bae9c07a3290d0419cb04567c979b3803866bc7b", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=9c79f208a3b8ba3c84f5ced0279a79f2cac0f50b", "patch": "@@ -448,6 +448,7 @@ package Snames is\n    --  correctly recognize and process Name_AST_Entry.\n \n    Name_Assert                         : constant Name_Id := N + $; -- Ada 05\n+   Name_Assert_And_Cut                 : constant Name_Id := N + $; -- GNAT\n    Name_Asynchronous                   : constant Name_Id := N + $;\n    Name_Atomic                         : constant Name_Id := N + $;\n    Name_Atomic_Components              : constant Name_Id := N + $;\n@@ -1697,6 +1698,7 @@ package Snames is\n       Pragma_Abort_Defer,\n       Pragma_All_Calls_Remote,\n       Pragma_Assert,\n+      Pragma_Assert_And_Cut,\n       Pragma_Asynchronous,\n       Pragma_Atomic,\n       Pragma_Atomic_Components,"}]}