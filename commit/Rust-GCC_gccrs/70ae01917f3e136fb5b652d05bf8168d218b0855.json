{"sha": "70ae01917f3e136fb5b652d05bf8168d218b0855", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhZTAxOTE3ZjNlMTM2ZmI1YjY1MmQwNWJmODE2OGQyMThiMDg1NQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-06-08T14:46:09Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-06-08T14:46:09Z"}, "message": "re PR rtl-optimization/10588 ([PPC] i==0||j==0 should use cntlzw and srawi)\n\n\t* config/rs6000/rs6000.md (call_indirect_nonlocal_aix32): Prefer\n\tCTR to LR.\n\t(call_indirect_nonlocal_aix64): Same.\n\t(call_value_indirect_nonlocal_aix32): Same.\n\t(call_value_indirect_nonlocal_aix64): Same.\n\n\tPR target/10588\n\t(eq): Use CLZ splitter for compare with zero.\n\nFrom-SVN: r100759", "tree": {"sha": "b62c7801c0cee5eb27d67618418b74738854070a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b62c7801c0cee5eb27d67618418b74738854070a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70ae01917f3e136fb5b652d05bf8168d218b0855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ae01917f3e136fb5b652d05bf8168d218b0855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70ae01917f3e136fb5b652d05bf8168d218b0855", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ae01917f3e136fb5b652d05bf8168d218b0855/comments", "author": null, "committer": null, "parents": [{"sha": "625b02b215d1e3bde2404c02894ec0bb4a5bf0e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625b02b215d1e3bde2404c02894ec0bb4a5bf0e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625b02b215d1e3bde2404c02894ec0bb4a5bf0e5"}], "stats": {"total": 86, "additions": 66, "deletions": 20}, "files": [{"sha": "44fbfdb568c80539cc88b54149495fa07815d295", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ae01917f3e136fb5b652d05bf8168d218b0855/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ae01917f3e136fb5b652d05bf8168d218b0855/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70ae01917f3e136fb5b652d05bf8168d218b0855", "patch": "@@ -1,3 +1,14 @@\n+2005-06-08  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.md (call_indirect_nonlocal_aix32): Prefer\n+\tCTR to LR.\n+\t(call_indirect_nonlocal_aix64): Same.\n+\t(call_value_indirect_nonlocal_aix32): Same.\n+\t(call_value_indirect_nonlocal_aix64): Same.\n+\n+\tPR target/10588\n+\t(eq): Use CLZ splitter for compare with zero.\n+\n 2005-06-08  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.c (bfin_return_in_memory): Simplify; return"}, {"sha": "9cd1350782d57b0a092d30e91cb27564b84f54aa", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 55, "deletions": 20, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ae01917f3e136fb5b652d05bf8168d218b0855/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ae01917f3e136fb5b652d05bf8168d218b0855/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=70ae01917f3e136fb5b652d05bf8168d218b0855", "patch": "@@ -10247,13 +10247,13 @@\n ;; and < 0 if they were not.\n \n (define_insn \"*call_indirect_nonlocal_aix32\"\n-  [(call (mem:SI (match_operand:SI 0 \"register_operand\" \"cl\"))\n-\t (match_operand 1 \"\" \"g\"))\n+  [(call (mem:SI (match_operand:SI 0 \"register_operand\" \"c,*l\"))\n+\t (match_operand 1 \"\" \"g,g\"))\n    (use (reg:SI 2))\n    (use (reg:SI 11))\n    (set (reg:SI 2)\n \t(mem:SI (plus:SI (reg:SI 1) (const_int 20))))\n-   (clobber (match_scratch:SI 2 \"=l\"))]\n+   (clobber (match_scratch:SI 2 \"=l,l\"))]\n   \"TARGET_32BIT && DEFAULT_ABI == ABI_AIX\"\n   \"b%T0l\\;{l|lwz} 2,20(1)\"\n   [(set_attr \"type\" \"jmpreg\")\n@@ -10272,13 +10272,13 @@\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"*call_indirect_nonlocal_aix64\"\n-  [(call (mem:SI (match_operand:DI 0 \"register_operand\" \"cl\"))\n-\t (match_operand 1 \"\" \"g\"))\n+  [(call (mem:SI (match_operand:DI 0 \"register_operand\" \"c,*l\"))\n+\t (match_operand 1 \"\" \"g,g\"))\n    (use (reg:DI 2))\n    (use (reg:DI 11))\n    (set (reg:DI 2)\n \t(mem:DI (plus:DI (reg:DI 1) (const_int 40))))\n-   (clobber (match_scratch:SI 2 \"=l\"))]\n+   (clobber (match_scratch:SI 2 \"=l,l\"))]\n   \"TARGET_64BIT && DEFAULT_ABI == ABI_AIX\"\n   \"b%T0l\\;ld 2,40(1)\"\n   [(set_attr \"type\" \"jmpreg\")\n@@ -10298,13 +10298,13 @@\n \n (define_insn \"*call_value_indirect_nonlocal_aix32\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"cl\"))\n-\t      (match_operand 2 \"\" \"g\")))\n+\t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"c,*l\"))\n+\t      (match_operand 2 \"\" \"g,g\")))\n    (use (reg:SI 2))\n    (use (reg:SI 11))\n    (set (reg:SI 2)\n \t(mem:SI (plus:SI (reg:SI 1) (const_int 20))))\n-   (clobber (match_scratch:SI 3 \"=l\"))]\n+   (clobber (match_scratch:SI 3 \"=l,l\"))]\n   \"TARGET_32BIT && DEFAULT_ABI == ABI_AIX\"\n   \"b%T1l\\;{l|lwz} 2,20(1)\"\n   [(set_attr \"type\" \"jmpreg\")\n@@ -10325,13 +10325,13 @@\n \n (define_insn \"*call_value_indirect_nonlocal_aix64\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:DI 1 \"register_operand\" \"cl\"))\n-\t      (match_operand 2 \"\" \"g\")))\n+\t(call (mem:SI (match_operand:DI 1 \"register_operand\" \"c,*l\"))\n+\t      (match_operand 2 \"\" \"g,g\")))\n    (use (reg:DI 2))\n    (use (reg:DI 11))\n    (set (reg:DI 2)\n \t(mem:DI (plus:DI (reg:DI 1) (const_int 40))))\n-   (clobber (match_scratch:SI 3 \"=l\"))]\n+   (clobber (match_scratch:SI 3 \"=l,l\"))]\n   \"TARGET_64BIT && DEFAULT_ABI == ABI_AIX\"\n   \"b%T1l\\;ld 2,40(1)\"\n   [(set_attr \"type\" \"jmpreg\")\n@@ -11472,11 +11472,11 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n \t(eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n \t       (match_operand:SI 2 \"reg_or_cint_operand\" \"r,O,K,L,I\")))\n-   (clobber (match_scratch:SI 3 \"=r,&r,r,r,r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,X,r,r,r\"))]\n   \"TARGET_32BIT\"\n   \"@\n    xor %0,%1,%2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\n-   {sfi|subfic} %3,%1,0\\;{ae|adde} %0,%3,%1\n+   #\n    {xoril|xori} %0,%1,%b2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\n    {xoriu|xoris} %0,%1,%u2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\n    {sfi|subfic} %0,%1,%2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\"\n@@ -11487,17 +11487,31 @@\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n \t(eq:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n \t       (match_operand:DI 2 \"reg_or_cint_operand\" \"r,O,K,J,I\")))\n-   (clobber (match_scratch:DI 3 \"=r,&r,r,r,r\"))]\n+   (clobber (match_scratch:DI 3 \"=r,X,r,r,r\"))]\n   \"TARGET_64BIT\"\n   \"@\n    xor %0,%1,%2\\;subfic %3,%0,0\\;adde %0,%3,%0\n-   subfic %3,%1,0\\;adde %0,%3,%1\n+   #\n    xori %0,%1,%b2\\;subfic %3,%0,0\\;adde %0,%3,%0\n    xoris %0,%1,%u2\\;subfic %3,%0,0\\;adde %0,%3,%0\n    subfic %0,%1,%2\\;subfic %3,%0,0\\;adde %0,%3,%0\"\n   [(set_attr \"type\" \"three,two,three,three,three\")\n    (set_attr \"length\" \"12,8,12,12,12\")])\n \n+(define_split\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"\")\n+\t(eq:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"\")\n+\t       (match_operand:GPR 2 \"zero_constant\" \"\")))\n+   (clobber (match_scratch:GPR 3 \"\"))]\n+  \"\"\n+  [(set (match_dup 0)\n+\t(clz:GPR (match_dup 1)))\n+   (set (match_dup 0)\n+\t(lshiftrt:GPR (match_dup 0) (match_dup 4)))]\n+  {\n+    operands[4] = GEN_INT (exact_log2 (GET_MODE_BITSIZE (<MODE>mode)));\n+  })\n+\n (define_insn \"\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,x,x,x,?y,?y,?y,?y,?y\")\n \t(compare:CC\n@@ -11506,11 +11520,11 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r,r,r,r,r,r\")\n \t(eq:SI (match_dup 1) (match_dup 2)))\n-   (clobber (match_scratch:SI 3 \"=r,&r,r,r,r,r,&r,r,r,r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,X,r,r,r,r,X,r,r,r\"))]\n   \"TARGET_32BIT\"\n   \"@\n    xor %0,%1,%2\\;{sfi|subfic} %3,%0,0\\;{ae.|adde.} %0,%3,%0\n-   {sfi|subfic} %3,%1,0\\;{ae.|adde.} %0,%3,%1\n+   #\n    {xoril|xori} %0,%1,%b2\\;{sfi|subfic} %3,%0,0\\;{ae.|adde.} %0,%3,%0\n    {xoriu|xoris} %0,%1,%u2\\;{sfi|subfic} %3,%0,0\\;{ae.|adde.} %0,%3,%0\n    {sfi|subfic} %0,%1,%2\\;{sfi|subfic} %3,%0,0\\;{ae.|adde.} %0,%3,%0\n@@ -11548,11 +11562,11 @@\n \t (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r,r,r,r,r,r,r\")\n \t(eq:DI (match_dup 1) (match_dup 2)))\n-   (clobber (match_scratch:DI 3 \"=r,&r,r,r,r,r,&r,r,r,r\"))]\n+   (clobber (match_scratch:DI 3 \"=r,X,r,r,r,r,X,r,r,r\"))]\n   \"TARGET_64BIT\"\n   \"@\n    xor %0,%1,%2\\;subfic %3,%0,0\\;adde. %0,%3,%0\n-   subfic %3,%1,0\\;adde. %0,%3,%1\n+   #\n    xori %0,%1,%b2\\;subfic %3,%0,0\\;adde. %0,%3,%0\n    xoris %0,%1,%u2\\;subfic %3,%0,0\\;adde. %0,%3,%0\n    subfic %0,%1,%2\\;subfic %3,%0,0\\;adde. %0,%3,%0\n@@ -11582,6 +11596,27 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n+(define_split\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"\")\n+\t(compare:CC\n+\t (eq:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"\")\n+\t\t (match_operand:GPR 2 \"zero_constant\" \"\"))\n+\t (const_int 0)))\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"\")\n+\t(eq:GPR (match_dup 1) (match_dup 2)))\n+   (clobber (match_scratch:GPR 3 \"\"))]\n+  \"\"\n+  [(set (match_dup 0)\n+\t(clz:GPR (match_dup 1)))\n+   (parallel [(set (match_dup 4)\n+\t\t   (compare:CC (lshiftrt:GPR (match_dup 0) (match_dup 5))\n+\t\t\t       (const_int 0)))\n+\t      (set (match_dup 0)\n+\t\t   (lshiftrt:GPR (match_dup 0) (match_dup 5)))])]\n+  {\n+    operands[5] = GEN_INT (exact_log2 (GET_MODE_BITSIZE (<MODE>mode)));\n+  })\n+\n ;; We have insns of the form shown by the first define_insn below.  If\n ;; there is something inside the comparison operation, we must split it.\n (define_split"}]}