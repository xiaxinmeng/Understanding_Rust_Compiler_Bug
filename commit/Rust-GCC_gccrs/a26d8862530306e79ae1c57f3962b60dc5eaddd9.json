{"sha": "a26d8862530306e79ae1c57f3962b60dc5eaddd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI2ZDg4NjI1MzAzMDZlNzlhZTFjNTdmMzk2MmI2MGRjNWVhZGRkOQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-10-05T19:23:33Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-10-05T19:23:33Z"}, "message": "In gcc/: 2010-10-05 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * c-parser.c (c_parser_objc_method_definition): Updated comment.\n\nIn gcc/cp/:\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        PR objc++/31125\n        * parser.c (cp_parser_objc_class_interface): If no identifier\n        follows an @interface token, stop parsing the interface after\n        printing an error.\n        (cp_parser_objc_class_implementation): If no identifier follows an\n        @implementation token, stop parsing the implementation after\n        printing an error.\n\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        PR objc++/23707\n        * parser.c (cp_parser_objc_method_keyword_params): If the required\n        colon is not found while parsing parameters, stop parsing them.\n\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        PR objc++/31126\n        * parser.c (cp_parser_objc_class_ivars): Do not eat the EOF or\n        @end after detecting it.  Print an error if @end is found without\n        a '}'.\n        (cp_parser_objc_method_prototype_list): Do not eat the EOF after\n        detecting it.  Fixed reading the next token when continuing\n        because of an error in a method signature.  Print an error if EOF\n        is found without an '@end'.\n        (cp_parser_objc_method_definition_list): Same change.\n\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from apple/trunk branch on FSF servers:\n\n        2005-10-17  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4290840\n        * parser.c (cp_parser_objc_method_keyword_params): Check for valid\n        method parameters and issue error.\n        (cp_parser_objc_method_definition_list): Check for invalid tokens\n        which cannot start a function definition.\n\n        2005-10-14  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4294425\n        * parser.c (cp_parser_objc_message_args): Check for missing message\n        arguments and syntax error.\n\n        2005-10-13  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4261146\n        * parser.c (cp_parser_objc_class_ivars): Check for @end/eof while\n        looking for '}'.\n\n        2005-08-15  Ziemowit Laski  <zlaski@apple.com>\n\n        Radar 4093475\n        * parser.c (cp_parser_objc_interstitial_code): Catch stray\n        '{' and '}' tokens and issue appropriate errors.\n\n        2005-08-02  Ziemowit Laski  <zlaski@apple.com>\n\n        Radar 4185810\n        (cp_parser_statement_seq_opt): In addition to '}' and\n        end-of-file, a statement sequence may also be terminated\n        by a stray '@end'.\n\nIn gcc/objc/:\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from 'apple/trunk' branch on FSF servers.\n\n        2005-10-17  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4290840\n        * objc-act.c (objc_start_method_definition): Check for error_mark_node for\n        the selector name and make a quick exit.\n\nIn gcc/testsuite/:\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        PR objc++/28050\n        * obj-c++.dg/syntax-error-10.mm: New.\n\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        PR objc++/23707\n        * obj-c++.dg/syntax-error-9.mm: New.\n\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        PR objc++/31126\n        * obj-c++.dg/syntax-error-8.mm: New.\n\n2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from 'apple/trunk' branch on FSF servers.\n\n        2005-10-17  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4290840\n        * obj-c++.dg/syntax-error-7.mm: New\n\n        2005-10-14  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4294425\n        * obj-c++.dg/syntax-error-6.mm: New\n\n        2005-10-13  Fariborz Jahanian <fjahanian@apple.com>\n\n        Radar 4261146\n        * obj-c++.dg/syntax-error-5.mm: New\n\n        2005-08-15  Ziemowit Laski  <zlaski@apple.com>\n\n        Radar 4093475\n        * obj-c++.dg/syntax-error-[3-4].mm: New.\n\n        2005-08-02  Ziemowit Laski  <zlaski@apple.com>\n\n        Radar 4185810\n        * obj-c++.dg/syntax-error-[1-2].mm: New.\n\nFrom-SVN: r164997", "tree": {"sha": "886a6b036431bb61a6e71747b4fc19d2517d00f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/886a6b036431bb61a6e71747b4fc19d2517d00f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a26d8862530306e79ae1c57f3962b60dc5eaddd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26d8862530306e79ae1c57f3962b60dc5eaddd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a26d8862530306e79ae1c57f3962b60dc5eaddd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26d8862530306e79ae1c57f3962b60dc5eaddd9/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae718d66b613819ca53a6dffbfce517ae200bc89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae718d66b613819ca53a6dffbfce517ae200bc89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae718d66b613819ca53a6dffbfce517ae200bc89"}], "stats": {"total": 321, "additions": 310, "deletions": 11}, "files": [{"sha": "50311768d8b1f880d496a606d4d2a83750810efe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -1,3 +1,7 @@\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-parser.c (c_parser_objc_method_definition): Updated comment.\n+\n 2010-10-05  Jan Hubicka  <jh@suse.cz>\n \n \t* doc/invoke.texi (-flto-partition, lto-partitions, lto-minpartition):\n@@ -1768,7 +1772,6 @@\n \tunconditionally if TODO_rebuild_alias is set, else only when optimizing\n \tif TODO_update_address_taken is set.\n \n->>>>>>> .r164755\n 2010-09-23  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/arm/arm.h (OUTPUT_ADDR_CONST_EXTRA): Remove."}, {"sha": "5b38a487f782cdebc315682e068b3b3c7320ce4c", "filename": "gcc/c-parser.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -6729,8 +6729,9 @@ c_parser_objc_method_definition (c_parser *parser)\n   else\n     {\n       /* This code is executed when we find a method definition\n-\t outside of an @implementation context.  Parse the method (to\n-\t keep going) but do not emit any code.\n+\t outside of an @implementation context (or invalid for other\n+\t reasons).  Parse the method (to keep going) but do not emit\n+\t any code.\n       */\n       c_parser_compound_statement (parser);\n     }"}, {"sha": "e347e6df252792be7990595f2909976c3381af55", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -1,3 +1,68 @@\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR objc++/31125\n+\t* parser.c (cp_parser_objc_class_interface): If no identifier\n+\tfollows an @interface token, stop parsing the interface after\n+\tprinting an error.\n+\t(cp_parser_objc_class_implementation): If no identifier follows an\n+\t@implementation token, stop parsing the implementation after\n+\tprinting an error.\n+\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR objc++/23707\n+\t* parser.c (cp_parser_objc_method_keyword_params): If the required\n+\tcolon is not found while parsing parameters, stop parsing them.\n+\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR objc++/31126\n+\t* parser.c (cp_parser_objc_class_ivars): Do not eat the EOF or\n+\t@end after detecting it.  Print an error if @end is found without\n+\ta '}'.\n+\t(cp_parser_objc_method_prototype_list): Do not eat the EOF after\n+\tdetecting it.  Fixed reading the next token when continuing\n+\tbecause of an error in a method signature.  Print an error if EOF\n+\tis found without an '@end'.\n+\t(cp_parser_objc_method_definition_list): Same change.\n+\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\t\n+\tMerge from apple/trunk branch on FSF servers:\n+\t\n+\t2005-10-17  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\tRadar 4290840\n+\t* parser.c (cp_parser_objc_method_keyword_params): Check for valid\n+\tmethod parameters and issue error.\n+\t(cp_parser_objc_method_definition_list): Check for invalid tokens\n+\twhich cannot start a function definition.\n+\n+\t2005-10-14  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\tRadar 4294425\n+\t* parser.c (cp_parser_objc_message_args): Check for missing message\n+\targuments and syntax error.\n+\n+\t2005-10-13  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\tRadar 4261146\n+\t* parser.c (cp_parser_objc_class_ivars): Check for @end/eof while\n+\tlooking for '}'.\n+\n+\t2005-08-15  Ziemowit Laski  <zlaski@apple.com>\n+\n+\tRadar 4093475\n+\t* parser.c (cp_parser_objc_interstitial_code): Catch stray\n+\t'{' and '}' tokens and issue appropriate errors.\n+\t\n+\t2005-08-02  Ziemowit Laski  <zlaski@apple.com>\n+\n+\tRadar 4185810\n+\t(cp_parser_statement_seq_opt): In addition to '}' and\n+\tend-of-file, a statement sequence may also be terminated\n+\tby a stray '@end'.\n+\t\n 2010-10-05  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cp-tree.h (cxx_print_error_function,"}, {"sha": "c481ae3cb2b4c42012fcde2e4f0fe236909e0d28", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 71, "deletions": 8, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -8294,10 +8294,13 @@ cp_parser_statement_seq_opt (cp_parser* parser, tree in_statement_expr)\n     {\n       cp_token *token = cp_lexer_peek_token (parser->lexer);\n \n-      /* If we're looking at a `}', then we've run out of statements.  */\n+      /* If we are looking at a `}', then we have run out of\n+\t statements; the same is true if we have reached the end\n+\t of file, or have stumbled upon a stray '@end'.  */\n       if (token->type == CPP_CLOSE_BRACE\n \t  || token->type == CPP_EOF\n-\t  || token->type == CPP_PRAGMA_EOL)\n+\t  || token->type == CPP_PRAGMA_EOL\n+\t  || (token->type == CPP_KEYWORD && token->keyword == RID_AT_END))\n \tbreak;\n       \n       /* If we are in a compound statement and find 'else' then\n@@ -21090,6 +21093,12 @@ cp_parser_objc_message_args (cp_parser* parser)\n       token = cp_lexer_peek_token (parser->lexer);\n     }\n \n+  if (sel_args == NULL_TREE && addl_args == NULL_TREE)\n+    {\n+      cp_parser_error (parser, \"objective-c++ message argument(s) are expected\");\n+      return build_tree_list (error_mark_node, error_mark_node);\n+    }\n+\n   return build_tree_list (sel_args, addl_args);\n }\n \n@@ -21482,7 +21491,12 @@ cp_parser_objc_method_keyword_params (cp_parser* parser, tree* attributes)\n \t}\n \n       maybe_unary_selector_p = false;\n-      cp_parser_require (parser, CPP_COLON, RT_COLON);\n+      if (!cp_parser_require (parser, CPP_COLON, RT_COLON))\n+\t{\n+\t  /* Something went quite wrong.  There should be a colon\n+\t     here, but there is not.  Stop parsing parameters.  */\n+\t  break;\n+\t}\n       type_name = cp_parser_objc_typename (parser);\n       /* New ObjC allows attributes on parameters too.  */\n       if (cp_lexer_next_token_is_keyword (parser->lexer, RID_ATTRIBUTE))\n@@ -21517,6 +21531,11 @@ cp_parser_objc_method_keyword_params (cp_parser* parser, tree* attributes)\n       return error_mark_node;\n     }\n \n+  if (params == NULL_TREE)\n+    {\n+      cp_parser_error (parser, \"objective-c++ method declaration is expected\");\n+      return error_mark_node;\n+    }\n   return params;\n }\n \n@@ -21608,6 +21627,13 @@ cp_parser_objc_interstitial_code (cp_parser* parser)\n       cp_lexer_consume_token (parser->lexer);\n       objc_set_method_opt (false);\n     }\n+  /* Other stray characters must generate errors.  */\n+  else if (token->type == CPP_OPEN_BRACE || token->type == CPP_CLOSE_BRACE)\n+    {\n+      cp_lexer_consume_token (parser->lexer);\n+      error (\"stray `%s' between Objective-C++ methods\",\n+\t     token->type == CPP_OPEN_BRACE ? \"{\" : \"}\");\n+    }\n   /* Finally, try to parse a block-declaration, or a function-definition.  */\n   else\n     cp_parser_block_declaration (parser, /*statement_p=*/false);\n@@ -21670,6 +21696,7 @@ cp_parser_objc_method_prototype_list (cp_parser* parser)\n \t  if (sig == error_mark_node)\n \t    {\n \t      cp_parser_skip_to_end_of_block_or_statement (parser);\n+\t      token = cp_lexer_peek_token (parser->lexer);\n \t      continue;\n \t    }\n \t  objc_add_method_declaration (sig, attributes);\n@@ -21687,7 +21714,11 @@ cp_parser_objc_method_prototype_list (cp_parser* parser)\n       token = cp_lexer_peek_token (parser->lexer);\n     }\n \n-  cp_lexer_consume_token (parser->lexer);  /* Eat '@end'.  */\n+  if (token->type != CPP_EOF)\n+    cp_lexer_consume_token (parser->lexer);  /* Eat '@end'.  */\n+  else\n+    cp_parser_error (parser, \"expected %<@end%>\");\n+\n   objc_finish_interface ();\n }\n \n@@ -21711,6 +21742,7 @@ cp_parser_objc_method_definition_list (cp_parser* parser)\n \t  if (sig == error_mark_node)\n \t    {\n \t      cp_parser_skip_to_end_of_block_or_statement (parser);\n+\t      token = cp_lexer_peek_token (parser->lexer);\n \t      continue;\n \t    }\n \t  objc_start_method_definition (sig, attribute);\n@@ -21726,7 +21758,7 @@ cp_parser_objc_method_definition_list (cp_parser* parser)\n \t      perform_deferred_access_checks ();\n \t      stop_deferring_access_checks ();\n \t      meth = cp_parser_function_definition_after_declarator (parser,\n-\t\t\t\t\t\t\t\t false);\n+\t\t\t\t\t\t\t\t     false);\n \t      pop_deferring_access_checks ();\n \t      objc_finish_method_definition (meth);\n \t    }\n@@ -21742,7 +21774,11 @@ cp_parser_objc_method_definition_list (cp_parser* parser)\n       token = cp_lexer_peek_token (parser->lexer);\n     }\n \n-  cp_lexer_consume_token (parser->lexer);  /* Eat '@end'.  */\n+  if (token->type != CPP_EOF)\n+    cp_lexer_consume_token (parser->lexer);  /* Eat '@end'.  */\n+  else\n+    cp_parser_error (parser, \"expected %<@end%>\");\n+\n   objc_finish_implementation ();\n }\n \n@@ -21759,7 +21795,8 @@ cp_parser_objc_class_ivars (cp_parser* parser)\n   cp_lexer_consume_token (parser->lexer);  /* Eat '{'.  */\n   token = cp_lexer_peek_token (parser->lexer);\n \n-  while (token->type != CPP_CLOSE_BRACE)\n+  while (token->type != CPP_CLOSE_BRACE \n+\t&& token->keyword != RID_AT_END && token->type != CPP_EOF)\n     {\n       cp_decl_specifier_seq declspecs;\n       int decl_class_or_enum_p;\n@@ -21858,7 +21895,14 @@ cp_parser_objc_class_ivars (cp_parser* parser)\n       token = cp_lexer_peek_token (parser->lexer);\n     }\n \n-  cp_lexer_consume_token (parser->lexer);  /* Eat '}'.  */\n+  if (token->keyword == RID_AT_END)\n+    cp_parser_error (parser, \"expected %<}%>\");\n+\n+  /* Do not consume the RID_AT_END, so it will be read again as terminating\n+     the @interface of @implementation.  */ \n+  if (token->keyword != RID_AT_END && token->type != CPP_EOF)\n+    cp_lexer_consume_token (parser->lexer);  /* Eat '}'.  */\n+    \n   /* For historical reasons, we accept an optional semicolon.  */\n   if (cp_lexer_next_token_is (parser->lexer, CPP_SEMICOLON))\n     cp_lexer_consume_token (parser->lexer);\n@@ -21932,6 +21976,15 @@ cp_parser_objc_class_interface (cp_parser* parser, tree attributes)\n \n   cp_lexer_consume_token (parser->lexer);  /* Eat '@interface'.  */\n   name = cp_parser_identifier (parser);\n+  if (name == error_mark_node)\n+    {\n+      /* It's hard to recover because even if valid @interface stuff\n+\t is to follow, we can't compile it (or validate it) if we\n+\t don't even know which class it refers to.  Let's assume this\n+\t was a stray '@interface' token in the stream and skip it.\n+      */\n+      return;\n+    }\n   cp_parser_objc_superclass_or_category (parser, &super, &categ);\n   protos = cp_parser_objc_protocol_refs_opt (parser);\n \n@@ -21958,6 +22011,16 @@ cp_parser_objc_class_implementation (cp_parser* parser)\n \n   cp_lexer_consume_token (parser->lexer);  /* Eat '@implementation'.  */\n   name = cp_parser_identifier (parser);\n+  if (name == error_mark_node)\n+    {\n+      /* It's hard to recover because even if valid @implementation\n+\t stuff is to follow, we can't compile it (or validate it) if\n+\t we don't even know which class it refers to.  Let's assume\n+\t this was a stray '@implementation' token in the stream and\n+\t skip it.\n+      */\n+      return;\n+    }\n   cp_parser_objc_superclass_or_category (parser, &super, &categ);\n \n   /* We have either a class or a category on our hands.  */"}, {"sha": "a68b46d71e760532642793046f8ddab9826e9ef5", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -1,3 +1,13 @@\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tMerge from 'apple/trunk' branch on FSF servers.\n+\n+\t2005-10-17  Fariborz Jahanian <fjahanian@apple.com>\n+\n+        Radar 4290840\n+\t* objc-act.c (objc_start_method_definition): Check for error_mark_node for\n+\tthe selector name and make a quick exit.\n+\t\n 2010-10-04  Andi Kleen <ak@linux.intel.com>\n \n \t* Make-lang.in (cc1obj-dummy, cc1obj): Add + to build rule."}, {"sha": "5aaadc67ceb7cacbf4a39da341a4e6eb80dca93e", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -821,6 +821,9 @@ objc_start_method_definition (tree decl, tree attributes)\n       return false;\n     }\n \n+  if (decl != NULL_TREE  && METHOD_SEL_NAME (decl) == error_mark_node)\n+    return false;\n+\n   if (attributes)\n     warning_at (input_location, OPT_Wattributes, \n \t\t\"method attributes are not available in this version\""}, {"sha": "b70a6b26b29a8ff30dc9f974be1ab53edf15bfc2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -1,3 +1,47 @@\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR objc++/28050\n+\t* obj-c++.dg/syntax-error-10.mm: New.\n+\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR objc++/23707\n+\t* obj-c++.dg/syntax-error-9.mm: New.\n+\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR objc++/31126\n+\t* obj-c++.dg/syntax-error-8.mm: New.\n+\n+2010-10-05  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tMerge from 'apple/trunk' branch on FSF servers.\n+\n+\t2005-10-17  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\tRadar 4290840\n+\t* obj-c++.dg/syntax-error-7.mm: New\n+\n+\t2005-10-14  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\tRadar 4294425\n+\t* obj-c++.dg/syntax-error-6.mm: New\n+\n+\t2005-10-13  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\tRadar 4261146\n+\t* obj-c++.dg/syntax-error-5.mm: New\n+\n+\t2005-08-15  Ziemowit Laski  <zlaski@apple.com>\n+\n+\tRadar 4093475\n+\t* obj-c++.dg/syntax-error-[3-4].mm: New.\n+\t\n+\t2005-08-02  Ziemowit Laski  <zlaski@apple.com>\n+\n+\tRadar 4185810\n+\t* obj-c++.dg/syntax-error-[1-2].mm: New.\n+\t\n 2010-10-05  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/45752"}, {"sha": "13f3c275cce6be66df6628a2509ca7c847d20dc5", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-1.mm", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1,26 @@\n+/* Graceful handling of a syntax error.  */\n+/* { dg-do compile } */\n+\n+#include <objc/Object.h>\n+\n+class foo {\n+  public:\n+    foo();\n+    virtual ~foo();\n+};\n+\n+\n+extern void NXLog(const char *, ...);\n+\n+@interface Test2 : Object {\n+}\n+- (void) foo2;\n+@end\n+\n+@implementation Test2\n+- (void) foo2\n+  NXLog(\"Hello, world!\"); /* { dg-error \"expected .\\{. before .NXLog.\" } */\n+} /* { dg-error \"stray .\\}. between Objective\\\\-C\\\\+\\\\+ methods\" } */\n+@end\n+\n+/* { dg-error \"expected constructor, destructor, or type conversion before\" \"\" { target *-*-* } 22 } */"}, {"sha": "e45abccfc7d33bc3471e1b84769f1c11fe7d09d6", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-10.mm", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-10.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-10.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-10.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1 @@\n+@interface /* { dg-error \"expected identifier\" } */"}, {"sha": "ba8804a89e28525dec2468724ceec9532e372557", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-2.mm", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-2.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1,16 @@\n+/* Recover gracefully from a syntax error.  */\n+\n+@implementation Whatever  /* { dg-warning \"cannot find interface declaration for .Whatever.\" } */\n+\n+- (void) function\n+{\n+\tif( 1 )\n+\t{\n+\telse   /* { dg-error \"expected .\\}. before .else.\" } */\n+\t{\n+\t}\n+}\n+\n+- (void) another {}\n+\n+@end"}, {"sha": "34f914bad28e97261b739c31469548f31d67596a", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-3.mm", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-3.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1,10 @@\n+/* Yet another stray infinite loop... */\n+/* { dg-do compile } */\n+\n+@interface Foo\n+{\n+  int x;\n+  int y;\n+}\n+- (int) foo ; { /* { dg-error \"stray .\\{. between Objective\\\\-C\\\\+\\\\+ methods\" } */\n+@end"}, {"sha": "0df061839b4993cec6dfeeec0e5cc590fabccfb4", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-4.mm", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-4.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-4.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-4.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1,15 @@\n+/* Yet another stray infinite loop... */\n+/* { dg-do compile } */\n+\n+@interface t\n+{\n+}\n+- (void)go;\n+@end\n+@implementation t\n+- (void)go\n+{\n+        }\n+} /* { dg-error \"stray .\\}. between Objective\\\\-C\\\\+\\\\+ methods\" } */\n+@end\n+"}, {"sha": "f0d06052081de65a75dd3cc62d67da2a9fa22f3a", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-5.mm", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-5.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+\n+typedef struct S { int i; } NSDictionary;\n+\n+@interface A \n+{\n+}\n+@end\n+\n+@interface B : A\n+{\n+    NSDictionary * _userInfo;\n+@end\t\t\t\t/* { dg-error \"expected .\\}. before .end.\"  } */"}, {"sha": "21423ec7eb73b7c0e624e5df92c980129eadddc2", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-6.mm", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-6.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-6.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-6.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+@interface NSButton\n+- (int) state;\n+@end\n+\n+void FOO()\n+{\n+  NSButton * mCopyAcrobatCB; \n+\t\n+  [ [ mCopyAcrobatCB state ] == 0 ] != 1;  /* { dg-error \"objective\\\\-c\\\\+\\\\+\" } */\n+}"}, {"sha": "eef5bc75c62b9710494c33be6b01059f9a4e7d09", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-7.mm", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-7.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-7.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-7.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+\n+@interface Foo\n+-(void) someMethod;\n+@end\n+\n+@implementation Foo\n+-(void)\n+-(void) someMethod /* { dg-error \"expected before .-.\" } */\n+{\n+}\n+@end /* { dg-error \"incomplete implementation of class\" } */\n+/* { dg-error \"method definition for ..someMethod. not found\" \"\" { target *-*-* } 12 } */"}, {"sha": "731ffda5f5e1064f0acaf0f20aa3da3c462f169e", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-8.mm", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-8.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-8.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-8.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1 @@\n+@interface A /* { dg-error \"expected ..end.\" } */\n\\ No newline at end of file"}, {"sha": "97706d5b1aa28621dba5491128931ded28e37a20", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-9.mm", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-9.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26d8862530306e79ae1c57f3962b60dc5eaddd9/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-9.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-9.mm?ref=a26d8862530306e79ae1c57f3962b60dc5eaddd9", "patch": "@@ -0,0 +1,3 @@\n+@implementation SaturnDoc /* { dg-warning \"cannot find interface declaration\" } */\n+- read: (void*)aStream ggg /* { dg-error \"expected .:. at end of input\" } */\n+/* { dg-error \"expected ..end. at end of input\" \"\" { target *-*-* } 2 } */\n\\ No newline at end of file"}]}