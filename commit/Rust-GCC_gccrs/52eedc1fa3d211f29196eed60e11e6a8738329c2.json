{"sha": "52eedc1fa3d211f29196eed60e11e6a8738329c2", "node_id": "C_kwDOANBUbNoAKDUyZWVkYzFmYTNkMjExZjI5MTk2ZWVkNjBlMTFlNmE4NzM4MzI5YzI", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-09T18:36:39Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-09T18:37:15Z"}, "message": "docs: create sources tarball\n\nmaintainer-scripts/ChangeLog:\n\n\t* update_web_docs_git.py: Create sources tarball.", "tree": {"sha": "c2ef73d8b23845783c326edf2ec15a3fae4297d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2ef73d8b23845783c326edf2ec15a3fae4297d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52eedc1fa3d211f29196eed60e11e6a8738329c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52eedc1fa3d211f29196eed60e11e6a8738329c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52eedc1fa3d211f29196eed60e11e6a8738329c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52eedc1fa3d211f29196eed60e11e6a8738329c2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eadbe80060ab6c45193a1a57fac84b035e1c328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eadbe80060ab6c45193a1a57fac84b035e1c328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eadbe80060ab6c45193a1a57fac84b035e1c328"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "d9cf9b70968a3ddf688272105e20f452717debf5", "filename": "maintainer-scripts/update_web_docs_git.py", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52eedc1fa3d211f29196eed60e11e6a8738329c2/maintainer-scripts%2Fupdate_web_docs_git.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52eedc1fa3d211f29196eed60e11e6a8738329c2/maintainer-scripts%2Fupdate_web_docs_git.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_web_docs_git.py?ref=52eedc1fa3d211f29196eed60e11e6a8738329c2", "patch": "@@ -37,6 +37,32 @@ def find_configs():\n                 yield (Path(root).resolve(), docname)\n \n \n+def create_source_tarball(output, configs):\n+    pwd = Path('.').resolve()\n+    subfolders = {'doc'}\n+    explicit_files = {'gcc/BASE-VER', 'gcc/DEV-PHASE', 'gcc/DATESTAMP'}\n+\n+    for location, _ in configs:\n+        location = location.relative_to(pwd)\n+        while not location.name == 'doc':\n+            location = location.parent\n+        subfolders.add(location)\n+\n+    sources = Path('sources')\n+    sources.mkdir()\n+\n+    # Copy all subfolders and files\n+    for subfolder in subfolders:\n+        shutil.copytree(subfolder, sources / subfolder)\n+\n+    for filename in explicit_files:\n+        shutil.copy(filename, sources / filename)\n+\n+    shutil.make_archive(Path(output, 'docs-sources'), 'gztar',\n+                        sources)\n+    print('sources tarball has been created')\n+\n+\n with tempfile.TemporaryDirectory() as folder:\n     print(f'Using {folder} as temporary directory')\n     os.chdir(folder)\n@@ -49,6 +75,9 @@ def find_configs():\n     if not output.exists():\n         output.mkdir()\n \n+    # Create source tarball\n+    create_source_tarball(output, configs)\n+\n     temp = Path('tmp').resolve()\n     temp.mkdir()\n "}]}