{"sha": "d4c3ec27386c2b61e46604c0674dbb1dac004310", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRjM2VjMjczODZjMmI2MWU0NjYwNGMwNjc0ZGJiMWRhYzAwNDMxMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-04-23T00:36:28Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-04-23T00:36:28Z"}, "message": "collect2.c (main): Use concat in lieu of xmalloc/sprintf.\n\n\t* collect2.c (main): Use concat in lieu of xmalloc/sprintf.\n\t(write_c_file_stat): Likewise.\n\n\t* dbxout.c (dbxout_init): Likewise.\n\n\t* profile.c (output_func_start_profiler): Likewise.\n\ncp:\n\t* xref.c (GNU_xref_file): Use concat in lieu of xmalloc/sprintf.\n\nf:\n\t* com.c (ffecom_subscript_check_): Use concat in lieu of\n\txmalloc/sprintf.\n\njava:\n\t* jvspec.c (lang_specific_driver): Fix memory allocation\n\tdeficit, by using concat in lieu of xmalloc/sprintf.\n\nFrom-SVN: r41495", "tree": {"sha": "790252fc6f2f85414e4da728fab71c76dd6c9020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/790252fc6f2f85414e4da728fab71c76dd6c9020"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4c3ec27386c2b61e46604c0674dbb1dac004310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c3ec27386c2b61e46604c0674dbb1dac004310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c3ec27386c2b61e46604c0674dbb1dac004310", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c3ec27386c2b61e46604c0674dbb1dac004310/comments", "author": null, "committer": null, "parents": [{"sha": "2ac8a0f9c2464064ba2eb5cd9d63a4f8d6e3525b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac8a0f9c2464064ba2eb5cd9d63a4f8d6e3525b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac8a0f9c2464064ba2eb5cd9d63a4f8d6e3525b"}], "stats": {"total": 97, "additions": 40, "deletions": 57}, "files": [{"sha": "f2a7a3d3ec305e9ced586c1e92a0695091976d8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -1,3 +1,12 @@\n+2001-04-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* collect2.c (main): Use concat in lieu of xmalloc/sprintf.\n+\t(write_c_file_stat): Likewise.\n+\n+\t* dbxout.c (dbxout_init): Likewise.\n+\n+\t* profile.c (output_func_start_profiler): Likewise.\n+\n 2001-04-22  Philipp Thomas  <pthomas@suse.de>\n \n \t* ABOUT-GCC-NLS: Now that gettext 0.10.37 is out,"}, {"sha": "4757b9fb6887a83515b64a9c3bd28608a340662d", "filename": "gcc/collect2.c", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -1269,9 +1269,8 @@ main (argc, argv)\n \n   if (exports.first)\n     {\n-      char *buf = xmalloc (strlen (export_file) + 5);\n-\n-      sprintf (buf, \"-bE:%s\", export_file);\n+      char *buf = concat (\"-bE:\", export_file, NULL);\n+      \n       *ld1++ = buf;\n       *ld2++ = buf;\n \n@@ -1435,13 +1434,7 @@ main (argc, argv)\n   /* Tell the linker that we have initializer and finalizer functions.  */\n #ifdef LD_INIT_SWITCH\n #ifdef COLLECT_EXPORT_LIST\n-  {\n-    /* option name + functions + colons + NULL */\n-    char *buf = xmalloc (strlen (LD_INIT_SWITCH)\n-\t\t\t + strlen(initname) + strlen(fininame) + 3);\n-    sprintf (buf, \"%s:%s:%s\", LD_INIT_SWITCH, initname, fininame);\n-    *ld2++ = buf;\n-  }\n+  *ld2++ = concat (LD_INIT_SWITCH, \":\", initname, \":\", fininame, NULL);\n #else\n   *ld2++ = LD_INIT_SWITCH;\n   *ld2++ = initname;\n@@ -1456,12 +1449,7 @@ main (argc, argv)\n       /* If we did not add export flag to link arguments before, add it to\n \t second link phase now.  No new exports should have been added.  */\n       if (! exports.first)\n-\t{\n-\t  char *buf = xmalloc (strlen (export_file) + 5);\n-\n-\t  sprintf (buf, \"-bE:%s\", export_file);\n-\t  *ld2++ = buf;\n-\t}\n+\t*ld2++ = concat (\"-bE:\", export_file, NULL);\n \n       add_to_list (&exports, initname);\n       add_to_list (&exports, fininame);\n@@ -1878,13 +1866,8 @@ write_c_file_stat (stream, name)\n     notice (\"\\nwrite_c_file - output name is %s, prefix is %s\\n\",\n \t    output_file, prefix);\n \n-#define INIT_NAME_FORMAT \"_GLOBAL__FI_%s\"\n-  initname = xmalloc (strlen (prefix) + sizeof (INIT_NAME_FORMAT) - 2);\n-  sprintf (initname, INIT_NAME_FORMAT, prefix);\n-\n-#define FINI_NAME_FORMAT \"_GLOBAL__FD_%s\"\n-  fininame = xmalloc (strlen (prefix) + sizeof (FINI_NAME_FORMAT) - 2);\n-  sprintf (fininame, FINI_NAME_FORMAT, prefix);\n+  initname = concat (\"_GLOBAL__FI_\", prefix, NULL);\n+  fininame = concat (\"_GLOBAL__FD_\", prefix, NULL);\n \n   free (prefix);\n "}, {"sha": "31019b26faf121fa02cd11622662ed5326f57c74", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -1,3 +1,7 @@\n+2001-04-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* xref.c (GNU_xref_file): Use concat in lieu of xmalloc/sprintf.\n+\n 2001-04-23  Jason Merrill  <jason_merrill@redhat.com>\n \n \t* except.c (build_throw): Wrap the initialization of the exception"}, {"sha": "af35020efb82766f7886fbf382fa1b265f4af077", "filename": "gcc/cp/xref.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fcp%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fcp%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fxref.c?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -205,14 +205,7 @@ GNU_xref_file (name)\n   if (FILE_NAME_ABSOLUTE_P (name) || ! wd_name)\n     xf->outname = xf->name;\n   else\n-    {\n-      char *nmbuf\n-\t= (char *) xmalloc (strlen (wd_name) + strlen (FILE_NAME_JOINER)\n-\t\t\t    + strlen (name) + 1);\n-      sprintf (nmbuf, \"%s%s%s\", wd_name, FILE_NAME_JOINER, name);\n-      name = nmbuf;\n-      xf->outname = nmbuf;\n-    }\n+    xf->outname = name = concat (wd_name, FILE_NAME_JOINER, name, NULL);\n \n   fprintf (xref_file, \"FIL %s %s 0\\n\", name, wd_name);\n "}, {"sha": "1252e2b5cd15acd5420924adf456b2e3e20dbcca", "filename": "gcc/dbxout.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -395,11 +395,7 @@ dbxout_init (asm_file, input_file_name, syms)\n #endif\n     {\n       if (!cwd && (cwd = getpwd ()) && (!*cwd || cwd[strlen (cwd) - 1] != '/'))\n-\t{\n-\t  char *wdslash = xmalloc (strlen (cwd) + sizeof (FILE_NAME_JOINER));\n-\t  sprintf (wdslash, \"%s%s\", cwd, FILE_NAME_JOINER);\n-\t  cwd = wdslash;\n-\t}\n+\tcwd = concat (cwd, FILE_NAME_JOINER, NULL);\n       if (cwd)\n \t{\n #ifdef DBX_OUTPUT_MAIN_SOURCE_DIRECTORY"}, {"sha": "f4ceb1c5cb10d4fcf1cd5a09c2a78cd694415755", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -1,3 +1,8 @@\n+Sun Apr 22 20:18:01 2001  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* com.c (ffecom_subscript_check_): Use concat in lieu of\n+\txmalloc/sprintf.\n+\n 2001-04-21  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* news.texi: Update release information for 0.5.27."}, {"sha": "87d63f01e8d8852bad8a398990f80e2b4b44e7f9", "filename": "gcc/f/com.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -694,10 +694,8 @@ ffecom_subscript_check_ (tree array, tree element, int dim, int total_dims,\n     switch (total_dims)\n       {\n       case 0:\n-\tvar = xmalloc (strlen (array_name) + 20);\n-\tsprintf (var, \"%s[%s-substring]\",\n-\t\t array_name,\n-\t\t dim ? \"end\" : \"start\");\n+\tvar = concat (array_name, \"[\", (dim ? \"end\" : \"start\"),\n+\t\t      \"-substring]\", NULL);\n \tlen = strlen (var) + 1;\n \targ1 = build_string (len, var);\n \tfree (var);\n@@ -740,13 +738,10 @@ ffecom_subscript_check_ (tree array, tree element, int dim, int total_dims,\n \t\t\t      convert (TREE_TYPE (element),\n \t\t\t\t       integer_one_node)));\n \n-    proc = xmalloc ((len = strlen (input_filename)\n-\t\t     + IDENTIFIER_LENGTH (DECL_NAME (current_function_decl))\n-\t\t     + 2));\n-\n-    sprintf (&proc[0], \"%s/%s\",\n-\t     input_filename,\n-\t     IDENTIFIER_POINTER (DECL_NAME (current_function_decl)));\n+    proc = concat (input_filename, \"/\",\n+\t\t   IDENTIFIER_POINTER (DECL_NAME (current_function_decl)),\n+\t\t   NULL);\n+    len = strlen (proc) + 1;\n     arg3 = build_string (len, proc);\n \n     free (proc);"}, {"sha": "43c5d49995a5d67ce7b50fcd80727ee712d9592b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -1,3 +1,8 @@\n+2001-04-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* jvspec.c (lang_specific_driver): Fix memory allocation\n+\tdeficit, by using concat in lieu of xmalloc/sprintf.\n+\n 2001-04-20  Per Bothner  <per@bothner.com>\n \n \tFixes to compile multiple .class files at once."}, {"sha": "fd6ec5aab928e494bf6bf33da55f3e58694efa6b", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -436,20 +436,14 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n       if (strcmp (argv[i], \"-classpath\") == 0\n \t  || strcmp (argv[i], \"-CLASSPATH\") == 0)\n \t{\n-\t  char* patharg\n-\t    = (char*) xmalloc (strlen (argv[i]) + strlen (argv[i+1]) + 3);\n-\t  sprintf (patharg, \"-f%s=%s\", argv[i]+1, argv[i+1]);\n-\t  arglist[j] = patharg;\n+\t  arglist[j] = concat (\"-f\", argv[i]+1, \"=\", argv[i+1], NULL);\n \t  i++;\n \t  continue;\n \t}\n \n       if (strcmp (argv[i], \"-d\") == 0)\n \t{\n-\t  char *patharg = (char *) xmalloc (sizeof (\"-foutput-class-dir=\")\n-\t\t\t\t\t    + strlen (argv[i + 1]) + 1);\n-\t  sprintf (patharg, \"-foutput-class-dir=%s\", argv[i + 1]);\n-\t  arglist[j] = patharg;\n+\t  arglist[j] = concat (\"-foutput-class-dir=\", argv[i + 1], NULL);\n \t  ++i;\n \t  continue;\n \t}"}, {"sha": "52253082aa50113a3a24ce9f183a5f1db8c77970", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c3ec27386c2b61e46604c0674dbb1dac004310/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=d4c3ec27386c2b61e46604c0674dbb1dac004310", "patch": "@@ -1090,8 +1090,7 @@ output_func_start_profiler ()\n \n   fnname = get_file_function_name ('I');\n   cfnname = IDENTIFIER_POINTER (fnname);\n-  name = xmalloc (strlen (cfnname) + 5);\n-  sprintf (name, \"%sGCOV\",cfnname);\n+  name = concat (cfnname, \"GCOV\", NULL);\n   fnname = get_identifier (name);\n   free (name);\n "}]}