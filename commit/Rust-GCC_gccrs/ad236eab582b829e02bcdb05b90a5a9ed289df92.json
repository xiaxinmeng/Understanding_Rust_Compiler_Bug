{"sha": "ad236eab582b829e02bcdb05b90a5a9ed289df92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyMzZlYWI1ODJiODI5ZTAyYmNkYjA1YjkwYTVhOWVkMjg5ZGY5Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-01-14T10:42:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-01-14T10:42:12Z"}, "message": "re PR other/18132 (Problem compiling gcc 3.4.2)\n\n\t* semantics.c (finish_asm_stmt): Don't warn about redundant volatile.\nPR 18132\n\t* decl2.c (import_export_class): MULTIPLE_SYMBOL_SPACES only means\n\tthat we don't suppress the other copies.\n\t* lex.c (handle_cp_pragma): Likewise.\nPR 18627\n\nFrom-SVN: r24662", "tree": {"sha": "98a5d82091537eb50bfd6273da30757aa8897552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98a5d82091537eb50bfd6273da30757aa8897552"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad236eab582b829e02bcdb05b90a5a9ed289df92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad236eab582b829e02bcdb05b90a5a9ed289df92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad236eab582b829e02bcdb05b90a5a9ed289df92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad236eab582b829e02bcdb05b90a5a9ed289df92/comments", "author": null, "committer": null, "parents": [{"sha": "9ef064430c72f88aec17b95501c9e1ce63070ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef064430c72f88aec17b95501c9e1ce63070ccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef064430c72f88aec17b95501c9e1ce63070ccc"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "a0145167ed918c1a2250988e77876718560d0b86", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad236eab582b829e02bcdb05b90a5a9ed289df92/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad236eab582b829e02bcdb05b90a5a9ed289df92/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ad236eab582b829e02bcdb05b90a5a9ed289df92", "patch": "@@ -1,3 +1,11 @@\n+1999-01-14  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* semantics.c (finish_asm_stmt): Don't warn about redundant volatile.\n+\n+\t* decl2.c (import_export_class): MULTIPLE_SYMBOL_SPACES only means\n+\tthat we don't suppress the other copies.\n+\t* lex.c (handle_cp_pragma): Likewise.\n+\n 1999-01-13  Mark Mitchell  <mark@markmitchell.com>\n \n \t* decl.c (grokdeclarator): Undo 1998-12-14 change."}, {"sha": "0ca5753d45abd40caa84afcf4135323cf53d2591", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad236eab582b829e02bcdb05b90a5a9ed289df92/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad236eab582b829e02bcdb05b90a5a9ed289df92/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=ad236eab582b829e02bcdb05b90a5a9ed289df92", "patch": "@@ -1,5 +1,5 @@\n /* Process declarations and variables for C compiler.\n-   Copyright (C) 1988, 92-97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92-98, 1999 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -2482,7 +2482,6 @@ import_export_vtable (decl, type, final)\n \n       int found = CLASSTYPE_TEMPLATE_INSTANTIATION (type);\n \n-#ifndef MULTIPLE_SYMBOL_SPACES\n       if (! found && ! final)\n \t{\n \t  tree method;\n@@ -2496,7 +2495,6 @@ import_export_vtable (decl, type, final)\n \t\tbreak;\n \t      }\n \t}\n-#endif\n \n       if (final || ! found)\n \t{\n@@ -2539,7 +2537,6 @@ import_export_class (ctype)\n       && ! flag_implicit_templates)\n     import_export = -1;\n \n-#ifndef MULTIPLE_SYMBOL_SPACES\n   /* Base our import/export status on that of the first non-inline,\n      non-abstract virtual function, if any.  */\n   if (import_export == 0\n@@ -2559,6 +2556,10 @@ import_export_class (ctype)\n \t    }\n \t}\n     }\n+\n+#ifdef MULTIPLE_SYMBOL_SPACES\n+  if (import_export == -1)\n+    import_export = 0;\n #endif\n \n   if (import_export)"}, {"sha": "0e61c350ba265497714dfc73dcf75f28800873fd", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad236eab582b829e02bcdb05b90a5a9ed289df92/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad236eab582b829e02bcdb05b90a5a9ed289df92/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=ad236eab582b829e02bcdb05b90a5a9ed289df92", "patch": "@@ -1,5 +1,5 @@\n /* Separate lexical analyzer for GNU C++.\n-   Copyright (C) 1987, 89, 92-97, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 89, 92-98, 1999 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -4854,7 +4854,6 @@ handle_cp_pragma (pname)\n       if (token != END_OF_LINE)\n \twarning (\"garbage after `#pragma interface' ignored\");\n \n-#ifndef MULTIPLE_SYMBOL_SPACES\n       write_virtuals = 3;\n \n       if (impl_file_chain == 0)\n@@ -4878,10 +4877,14 @@ handle_cp_pragma (pname)\n \t}\n \n       interface_only = interface_strcmp (main_filename);\n+#ifdef MULTIPLE_SYMBOL_SPACES\n+      if (! interface_only)\n+\tinterface_unknown = 0;\n+#else /* MULTIPLE_SYMBOL_SPACES */\n       interface_unknown = 0;\n+#endif /* MULTIPLE_SYMBOL_SPACES */\n       TREE_INT_CST_LOW (fileinfo) = interface_only;\n       TREE_INT_CST_HIGH (fileinfo) = interface_unknown;\n-#endif /* MULTIPLE_SYMBOL_SPACES */\n \n       return 1;\n     }\n@@ -4908,7 +4911,6 @@ handle_cp_pragma (pname)\n       if (token != END_OF_LINE)\n \twarning (\"garbage after `#pragma implementation' ignored\");\n \n-#ifndef MULTIPLE_SYMBOL_SPACES\n       if (write_virtuals == 3)\n \t{\n \t  struct impl_files *ifiles = impl_file_chain;\n@@ -4953,7 +4955,6 @@ handle_cp_pragma (pname)\n #endif\n       TREE_INT_CST_LOW (fileinfo) = interface_only;\n       TREE_INT_CST_HIGH (fileinfo) = interface_unknown;\n-#endif /* MULTIPLE_SYMBOL_SPACES */\n \n       return 1;\n     }"}, {"sha": "e4d4371472deedc17b675bab5c280c8d15b75c9d", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad236eab582b829e02bcdb05b90a5a9ed289df92/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad236eab582b829e02bcdb05b90a5a9ed289df92/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ad236eab582b829e02bcdb05b90a5a9ed289df92", "patch": "@@ -747,7 +747,9 @@ finish_asm_stmt (cv_qualifier, string, output_operands,\n \t}\n       else\n \t{\n-\t  if (cv_qualifier != NULL_TREE)\n+\t  /* Don't warn about redundant specification of 'volatile' here.  */\n+\t  if (cv_qualifier != NULL_TREE\n+\t      && cv_qualifier != ridpointers[(int) RID_VOLATILE])\n \t    cp_warning (\"%s qualifier ignored on asm\",\n \t\t\tIDENTIFIER_POINTER (cv_qualifier));\n \t  expand_asm (string);"}]}