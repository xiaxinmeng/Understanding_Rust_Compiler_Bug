{"sha": "5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d", "node_id": "C_kwDOANBUbNoAKDVkZmNkZTNiNDk3YzBlZWRiNjk3YWI4ZWIxMGE0YjM2NmU0M2VjMWQ", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-04-20T09:26:18Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-04-27T22:18:08Z"}, "message": "gccrs: Add missing where clause lowering for Impl functions\n\nFixes #2106\n\ngcc/rust/ChangeLog:\n\n\t* hir/rust-ast-lower-implitem.h: add missing where clause lowering\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/issue-2106.rs: New test.\n\t* rust/compile/issue-1524.rs: regression (placeholder generic)\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>", "tree": {"sha": "fd5443c137e14fa0c93da110183e8f8206cb4c86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd5443c137e14fa0c93da110183e8f8206cb4c86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5a7e8d10b379c487527204fd5e1b92d668aa906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5a7e8d10b379c487527204fd5e1b92d668aa906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5a7e8d10b379c487527204fd5e1b92d668aa906"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "e9599f7a064c5551592b4e18769c4721e5695f86", "filename": "gcc/rust/hir/rust-ast-lower-implitem.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h?ref=5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d", "patch": "@@ -133,6 +133,14 @@ class ASTLowerImplItem : public ASTLoweringBase\n   {\n     // ignore for now and leave empty\n     std::vector<std::unique_ptr<HIR::WhereClauseItem> > where_clause_items;\n+    for (auto &item : function.get_where_clause ().get_items ())\n+      {\n+\tHIR::WhereClauseItem *i\n+\t  = ASTLowerWhereClauseItem::translate (*item.get ());\n+\twhere_clause_items.push_back (\n+\t  std::unique_ptr<HIR::WhereClauseItem> (i));\n+      }\n+\n     HIR::WhereClause where_clause (std::move (where_clause_items));\n     HIR::FunctionQualifiers qualifiers\n       = lower_qualifiers (function.get_qualifiers ());\n@@ -209,6 +217,14 @@ class ASTLowerImplItem : public ASTLoweringBase\n   {\n     // ignore for now and leave empty\n     std::vector<std::unique_ptr<HIR::WhereClauseItem> > where_clause_items;\n+    for (auto &item : method.get_where_clause ().get_items ())\n+      {\n+\tHIR::WhereClauseItem *i\n+\t  = ASTLowerWhereClauseItem::translate (*item.get ());\n+\twhere_clause_items.push_back (\n+\t  std::unique_ptr<HIR::WhereClauseItem> (i));\n+      }\n+\n     HIR::WhereClause where_clause (std::move (where_clause_items));\n     HIR::FunctionQualifiers qualifiers\n       = lower_qualifiers (method.get_qualifiers ());"}, {"sha": "2d7599f1804ed9d4fdf9e3f0bccf0a3977f497d2", "filename": "gcc/testsuite/rust/compile/issue-1524.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1524.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1524.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1524.rs?ref=5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-additional-options \"-w\" }\n+// { dg-additional-options \"-w -frust-compile-until=nameresolution\" }\n // https://github.com/Rust-GCC/gccrs/issues/1524\n // https://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/src/test/ui/methods/method-normalize-bounds-issue-20604.rs\n trait Hasher {"}, {"sha": "a4f235c14dd3c8333bdc91e2967771ad9c7aed87", "filename": "gcc/testsuite/rust/compile/issue-2106.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2106.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2106.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2106.rs?ref=5dfcde3b497c0eedb697ab8eb10a4b366e43ec1d", "patch": "@@ -0,0 +1,15 @@\n+struct Foo(u32);\n+// { dg-warning \"struct is never constructed\" \"\" { target *-*-* } .-1 }\n+\n+pub trait Bar {\n+    fn bar(self);\n+}\n+\n+impl Foo {\n+    pub fn map<F>(f: F)\n+    where\n+        F: Bar,\n+    {\n+        f.bar();\n+    }\n+}"}]}