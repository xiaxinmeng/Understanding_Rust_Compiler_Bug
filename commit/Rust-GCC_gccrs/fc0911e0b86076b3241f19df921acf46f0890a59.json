{"sha": "fc0911e0b86076b3241f19df921acf46f0890a59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMwOTExZTBiODYwNzZiMzI0MWYxOWRmOTIxYWNmNDZmMDg5MGE1OQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-10-13T18:36:31Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-10-13T18:36:31Z"}, "message": "gcov-io.c (gcov_open): Fix documentation.\n\n\t* gcov-io.c (gcov_open): Fix documentation.  Simplify setting\n\tgcov_var.mode.  Remove unnecessary fstat.\n\nFrom-SVN: r241136", "tree": {"sha": "c9e95670d56ed7dd916960f0561db4f6a7df15d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9e95670d56ed7dd916960f0561db4f6a7df15d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc0911e0b86076b3241f19df921acf46f0890a59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0911e0b86076b3241f19df921acf46f0890a59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc0911e0b86076b3241f19df921acf46f0890a59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0911e0b86076b3241f19df921acf46f0890a59/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dca85bf15de2cdb18cc1c3f1706c603fb91f8fb"}], "stats": {"total": 54, "additions": 17, "deletions": 37}, "files": [{"sha": "6fdf0b965770cc031d556febcd7af5de703ef580", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0911e0b86076b3241f19df921acf46f0890a59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0911e0b86076b3241f19df921acf46f0890a59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc0911e0b86076b3241f19df921acf46f0890a59", "patch": "@@ -1,3 +1,8 @@\n+2016-10-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcov-io.c (gcov_open): Fix documentation.  Simplify setting\n+\tgcov_var.mode.  Remove unnecessary fstat.\n+\n 2016-10-13  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR bootstrap/77962"}, {"sha": "1720d91d78623762e0239582c462e1591fe64cad", "filename": "gcc/gcov-io.c", "status": "modified", "additions": 12, "deletions": 37, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0911e0b86076b3241f19df921acf46f0890a59/gcc%2Fgcov-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0911e0b86076b3241f19df921acf46f0890a59/gcc%2Fgcov-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.c?ref=fc0911e0b86076b3241f19df921acf46f0890a59", "patch": "@@ -115,10 +115,9 @@ static inline gcov_unsigned_t from_file (gcov_unsigned_t value)\n    opened. If MODE is >= 0 an existing file will be opened, if\n    possible, and if MODE is <= 0, a new file will be created. Use\n    MODE=0 to attempt to reopen an existing file and then fall back on\n-   creating a new one.  If MODE < 0, the file will be opened in\n+   creating a new one.  If MODE > 0, the file will be opened in\n    read-only mode.  Otherwise it will be opened for modification.\n-   Return zero on failure, >0 on opening an existing file and <0 on\n-   creating a new one.  */\n+   Return zero on failure, non-zero on success.  */\n \n GCOV_LINKAGE int\n #if IN_LIBGCOV\n@@ -156,17 +155,12 @@ gcov_open (const char *name, int mode)\n       /* pass mode (ignored) for compatibility */\n       fd = open (name, O_RDONLY, S_IRUSR | S_IWUSR);\n     }\n-  else if (mode < 0)\n+  else\n      {\n        /* Write mode - acquire a write-lock.  */\n        s_flock.l_type = F_WRLCK;\n-      fd = open (name, O_RDWR | O_CREAT | O_TRUNC, 0666);\n-    }\n-  else /* mode == 0 */\n-    {\n-      /* Read-Write mode - acquire a write-lock.  */\n-      s_flock.l_type = F_WRLCK;\n-      fd = open (name, O_RDWR | O_CREAT, 0666);\n+       /* Truncate if force new mode.  */\n+       fd = open (name, O_RDWR | O_CREAT | (mode < 0 ? O_TRUNC : 0), 0666);\n     }\n   if (fd < 0)\n     return 0;\n@@ -181,42 +175,23 @@ gcov_open (const char *name, int mode)\n       close (fd);\n       return 0;\n     }\n-\n-  if (mode > 0)\n-    gcov_var.mode = 1;\n-  else if (mode == 0)\n-    {\n-      struct stat st;\n-\n-      if (fstat (fd, &st) < 0)\n-\t{\n-\t  fclose (gcov_var.file);\n-\t  gcov_var.file = 0;\n-\t  return 0;\n-\t}\n-      if (st.st_size != 0)\n-\tgcov_var.mode = 1;\n-      else\n-\tgcov_var.mode = mode * 2 + 1;\n-    }\n-  else\n-    gcov_var.mode = mode * 2 + 1;\n #else\n   if (mode >= 0)\n+    /* Open an existing file.  */\n     gcov_var.file = fopen (name, (mode > 0) ? \"rb\" : \"r+b\");\n \n   if (gcov_var.file)\n-    gcov_var.mode = 1;\n+    mode = 1;\n   else if (mode <= 0)\n-    {\n-      gcov_var.file = fopen (name, \"w+b\");\n-      if (gcov_var.file)\n-\tgcov_var.mode = mode * 2 + 1;\n-    }\n+    /* Create a new file.  */\n+    gcov_var.file = fopen (name, \"w+b\");\n+\n   if (!gcov_var.file)\n     return 0;\n #endif\n \n+  gcov_var.mode = mode ? mode : 1;\n+\n   setbuf (gcov_var.file, (char *)0);\n \n   return 1;"}]}