{"sha": "10843f8303509fcba880c6c05c08e4b4ccd24f36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA4NDNmODMwMzUwOWZjYmE4ODBjNmMwNWMwOGU0YjRjY2QyNGYzNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-24T08:14:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-24T08:20:41Z"}, "message": "tree-optimization/97085 - fold some trivial bool vector ?:\n\nThe following aovids the ICE in the testcase by doing some additional\nsimplification of VEC_COND_EXPRs for VECTOR_BOOLEAN_TYPE_P which\nwe don't really expect, esp. when they are not classical vectors,\nthus AVX512 or SVE masks.\n\n2020-09-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97085\n\t* match.pd (mask ? { false,..} : { true, ..} -> ~mask): New.\n\n\t* gcc.dg/vect/pr97085.c: New testcase.", "tree": {"sha": "f31b1e91b04fde83788a442b217e4ec6db7b5f3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f31b1e91b04fde83788a442b217e4ec6db7b5f3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10843f8303509fcba880c6c05c08e4b4ccd24f36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10843f8303509fcba880c6c05c08e4b4ccd24f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10843f8303509fcba880c6c05c08e4b4ccd24f36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10843f8303509fcba880c6c05c08e4b4ccd24f36/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e437162001f258c8db4eae25da3bca812dd557a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e437162001f258c8db4eae25da3bca812dd557a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e437162001f258c8db4eae25da3bca812dd557a"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e6dcdd0b855881c49f4eb7e4640a5421ea0480aa", "filename": "gcc/match.pd", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10843f8303509fcba880c6c05c08e4b4ccd24f36/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10843f8303509fcba880c6c05c08e4b4ccd24f36/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=10843f8303509fcba880c6c05c08e4b4ccd24f36", "patch": "@@ -3521,6 +3521,17 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (if (optimize_vectors_before_lowering_p () && types_match (@0, @1))\n   (vec_cond (bit_and (bit_not @0) @1) @2 @3)))\n \n+/* Canonicalize mask ? { 0, ... } : { -1, ...} to ~mask if the mask\n+   types are compatible.  */\n+(simplify\n+ (vec_cond @0 VECTOR_CST@1 VECTOR_CST@2)\n+ (if (VECTOR_BOOLEAN_TYPE_P (type)\n+      && types_match (type, TREE_TYPE (@0)))\n+  (if (integer_zerop (@1) && integer_all_onesp (@2))\n+   (bit_not @0)\n+   (if (integer_all_onesp (@1) && integer_zerop (@2))\n+    @0))))\n+\n /* Simplification moved from fold_cond_expr_with_comparison.  It may also\n    be extended.  */\n /* This pattern implements two kinds simplification:"}, {"sha": "ffde9f10995a69bf602a5d670c5609a3c8bd3786", "filename": "gcc/testsuite/gcc.dg/vect/pr97085.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10843f8303509fcba880c6c05c08e4b4ccd24f36/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97085.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10843f8303509fcba880c6c05c08e4b4ccd24f36/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97085.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97085.c?ref=10843f8303509fcba880c6c05c08e4b4ccd24f36", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-march=armv8.2-a+sve\" { target aarch64-*-* } } */\n+\n+int a, b, c, d;\n+short e, g;\n+unsigned short f;\n+void h() {\n+  for (; d; d++) {\n+    g = d;\n+    e = b == 0 ? 1 : a % b;\n+    c ^= (f = e) > (g == 5);\n+  }\n+}"}]}