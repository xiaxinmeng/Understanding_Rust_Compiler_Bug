{"sha": "26d4492f61622491f615cbc065f9186b683e76b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZkNDQ5MmY2MTYyMjQ5MWY2MTVjYmMwNjVmOTE4NmI2ODNlNzZiMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-02T02:00:51Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-02T02:00:51Z"}, "message": "tree-cfg.c (cleanup_tree_cfg): Speed up by calling delete_unrechable_blocks() only when necessary.\n\n\t* tree-cfg.c (cleanup_tree_cfg): Speed up by calling\n\tdelete_unrechable_blocks() only when necessary.\n\nFrom-SVN: r88419", "tree": {"sha": "0f8b589bb3ccfc6ed5ffc6065e2bed0cf1b544e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f8b589bb3ccfc6ed5ffc6065e2bed0cf1b544e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26d4492f61622491f615cbc065f9186b683e76b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d4492f61622491f615cbc065f9186b683e76b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d4492f61622491f615cbc065f9186b683e76b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d4492f61622491f615cbc065f9186b683e76b3/comments", "author": null, "committer": null, "parents": [{"sha": "ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee0f32f4ac63a937f0819e8d1caaf128e01cdf1e"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "9dbb7feec0bf693df3587f5b470d56887622a610", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d4492f61622491f615cbc065f9186b683e76b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d4492f61622491f615cbc065f9186b683e76b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26d4492f61622491f615cbc065f9186b683e76b3", "patch": "@@ -1,3 +1,8 @@\n+2004-10-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-cfg.c (cleanup_tree_cfg): Speed up by calling\n+\tdelete_unrechable_blocks() only when necessary.\n+\n 2004-10-02  P.J. Darcy  <darcypj@us.ibm.com>\n \n \t* gthr-tpf.h (__gthread_recursive_mutex_t): New type."}, {"sha": "6919facd4031be04858df1316fa71bd99c85b209", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d4492f61622491f615cbc065f9186b683e76b3/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d4492f61622491f615cbc065f9186b683e76b3/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=26d4492f61622491f615cbc065f9186b683e76b3", "patch": "@@ -718,19 +718,29 @@ cleanup_tree_cfg (void)\n   timevar_push (TV_TREE_CLEANUP_CFG);\n \n   retval = cleanup_control_flow ();\n+  retval |= delete_unreachable_blocks ();\n \n-  /* These two transformations can cascade, so we iterate on them until\n-     nothing changes.  */\n+  /* thread_jumps() sometimes leaves further transformation\n+     opportunities for itself, so iterate on it until nothing\n+     changes.  */\n   while (something_changed)\n     {\n-      something_changed = delete_unreachable_blocks ();\n-      something_changed |= thread_jumps ();\n+      something_changed = thread_jumps ();\n+\n+      /* delete_unreachable_blocks() does its job only when\n+\t thread_jumps() produces more unreachable blocks.  */\n+      if (something_changed)\n+\tdelete_unreachable_blocks ();\n+\n       retval |= something_changed;\n     }\n \n #ifdef ENABLE_CHECKING\n   if (retval)\n-    gcc_assert (!cleanup_control_flow ());\n+    {\n+      gcc_assert (!cleanup_control_flow ());\n+      gcc_assert (!delete_unreachable_blocks ());\n+    }\n #endif\n \n   /* Merging the blocks creates no new opportunities for the other"}]}