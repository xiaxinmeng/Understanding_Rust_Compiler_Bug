{"sha": "e2ffd79638a99be102aacb3d825c5a9d8a0ea913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmZmQ3OTYzOGE5OWJlMTAyYWFjYjNkODI1YzVhOWQ4YTBlYTkxMw==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2003-09-17T00:41:46Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-09-17T00:41:46Z"}, "message": "m68k.h (TARGET_CPU_CPP_BUILTINS): Add target predefines.\n\n\t* config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Add target predefines.\n\t* config/m68k/m68k-none.h (CPP_CPU_DEFAULT_SPEC): Kill all definitions.\n\t* config/m68k/m68k-none.h (CPP_FPU_SPEC): Remove.\n\t* config/m68k/m68k-none.h (CPP_SPEC): Likewise.\n\nFrom-SVN: r71450", "tree": {"sha": "b4bb981f39ab0acce41738a39448fbb3269d218b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4bb981f39ab0acce41738a39448fbb3269d218b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2ffd79638a99be102aacb3d825c5a9d8a0ea913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ffd79638a99be102aacb3d825c5a9d8a0ea913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2ffd79638a99be102aacb3d825c5a9d8a0ea913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ffd79638a99be102aacb3d825c5a9d8a0ea913/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2339fbfdca2dd7959204026e74897f65c4cbd399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2339fbfdca2dd7959204026e74897f65c4cbd399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2339fbfdca2dd7959204026e74897f65c4cbd399"}], "stats": {"total": 111, "additions": 48, "deletions": 63}, "files": [{"sha": "9062d99d28995a19bbe0238a3469bc6a7fbed211", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ffd79638a99be102aacb3d825c5a9d8a0ea913/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ffd79638a99be102aacb3d825c5a9d8a0ea913/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2ffd79638a99be102aacb3d825c5a9d8a0ea913", "patch": "@@ -1,3 +1,10 @@\n+2003-09-16  Bernardo Innocenti  <bernie@develer.com>\n+\n+\t* config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Add target predefines.\n+\t* config/m68k/m68k-none.h (CPP_CPU_DEFAULT_SPEC): Kill all definitions.\n+\t* config/m68k/m68k-none.h (CPP_FPU_SPEC): Remove.\n+\t* config/m68k/m68k-none.h (CPP_SPEC): Likewise.\n+\n 2003-09-16  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \t* cfgcleanup.c (label_is_jump_target_p): Correct use of table"}, {"sha": "bb8d374f61c377e1e4c7cf3a024af9871353d9b9", "filename": "gcc/config/m68k/m68k-none.h", "status": "modified", "additions": 1, "deletions": 59, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ffd79638a99be102aacb3d825c5a9d8a0ea913/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ffd79638a99be102aacb3d825c5a9d8a0ea913/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-none.h?ref=e2ffd79638a99be102aacb3d825c5a9d8a0ea913", "patch": "@@ -48,32 +48,26 @@ Boston, MA 02111-1307, USA.  */\n    this file.  However, it's not used anywhere here because it doesn't\n    seem to be necessary.  */\n #if TARGET_CPU_DEFAULT == M68K_CPU_m68k || TARGET_CPU_DEFAULT == M68K_CPU_m68020\n-#define CPP_CPU_DEFAULT_SPEC \"%{!ansi:-Dmc68020 } -D__mc68020 -D__mc68020__\"\n #define ASM_CPU_DEFAULT_SPEC \"-mc68020\"\n #define CC1_CPU_DEFAULT_SPEC \"-m68020\"\n #else\n #if TARGET_CPU_DEFAULT == M68K_CPU_m68000\n-#define CPP_CPU_DEFAULT_SPEC \"%{!ansi:-Dmc68000 } -D__mc68000 -D__mc68000__\"\n #define ASM_CPU_DEFAULT_SPEC \"-mc68000\"\n #define CC1_CPU_DEFAULT_SPEC \"-m68000\"\n #else\n #if TARGET_CPU_DEFAULT == M68K_CPU_m68030\n-#define CPP_CPU_DEFAULT_SPEC \"%{!ansi:-Dmc68030 } -D__mc68030 -D__mc68030__\"\n #define ASM_CPU_DEFAULT_SPEC \"-mc68030\"\n #define CC1_CPU_DEFAULT_SPEC \"-m68030\"\n #else\n #if TARGET_CPU_DEFAULT == M68K_CPU_m68040\n-#define CPP_CPU_DEFAULT_SPEC \"%{!ansi:-Dmc68040 } -D__mc68040 -D__mc68040__\"\n #define ASM_CPU_DEFAULT_SPEC \"-mc68040\"\n #define CC1_CPU_DEFAULT_SPEC \"-m68040\"\n #else\n #if TARGET_CPU_DEFAULT == M68K_CPU_m68302\n-#define CPP_CPU_DEFAULT_SPEC \"%{!ansi:-Dmc68302 } -D__mc68302 -D__mc68302__\"\n #define ASM_CPU_DEFAULT_SPEC \"-mc68302\"\n #define CC1_CPU_DEFAULT_SPEC \"-m68302\"\n #else\n #if TARGET_CPU_DEFAULT == M68K_CPU_m68332\n-#define CPP_CPU_DEFAULT_SPEC \"%{!ansi:-Dmc68332 -Dmcpu32 } -D__mc68332 -D__mc68332__ -D__mcpu32 -D__mcpu32__\"\n #define ASM_CPU_DEFAULT_SPEC \"-mc68332\"\n #define CC1_CPU_DEFAULT_SPEC \"-m68332\"\n #else\n@@ -84,55 +78,6 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n #endif\n #endif\n #endif\n-\f\n-/* Define __HAVE_68881__ or nothing (soft float), appropriately.  */\n-#undef CPP_FPU_SPEC\n-#if TARGET_DEFAULT & MASK_68881\n-#define CPP_FPU_SPEC \"\\\n-%{!mc68000:%{!m68000:%{!m68302:%{!mcpu32:%{!m68332:%{!m5200:%{!m5206e:%{!m528x:%{!m5307:%{!m5407:%{!msoft-float:%{!mno-68881:-D__HAVE_68881__ }}}}}}}}}}}} \\\n-%{m68881:-D__HAVE_68881__ }\"\n-#else\n-#define CPP_FPU_SPEC \"\\\n-%{m68881:-D__HAVE_68881__ }\"\n-#endif\n-\n-/* Names to predefine in the preprocessor for this target machine.\n-   Other definitions depend on what the default cpu is and switches\n-   given to the compiler:\n-\n-   -m68000, -mc68000: define nothing else\n-   -m68010: define mc68010\n-   -m68020, -mc68020: define mc68020\n-   -m68030: define mc68030\n-   -m68040: define mc68040\n-   -m68060: define mc68060\n-   -m68020-40: define mc68020 mc68030 mc68040\n-   -m68020-60: define mc68020 mc68030 mc68040 mc68060\n-   -m68302: define mc68302 \n-   -m68332: define mc68332 mcpu32\n-   -mcpu32: define mcpu32\n-   -m5200: define mcoldfire mcf5200\n-   -m5206e: define mcoldfire mcf5200 mcf5206e\n-   -m528x: define mcoldfire mc5200 mc528x\n-   -m5307: define mcoldfire mc5300 mc5307\n-   -m5407: define mcoldfire mc5400 mc5407\n-\n-   default: define as above appropriately\n-\n-   GCC won't automatically add __'d versions, we have to mention them\n-   explicitly.  */\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%(cpp_fpu)%{!ansi:%{m68302:-Dmc68302 }%{m68010:-Dmc68010 }%{m68020:-Dmc68020 }%{mc68020:-Dmc68020 }%{m68030:-Dmc68030 }%{m68040:-Dmc68040 }%{m68020-40:-Dmc68020 -Dmc68030 -Dmc68040 }%{m68020-60:-Dmc68020 -Dmc68030 -Dmc68040 -Dmc68060 }%{m68060:-Dmc68060 }%{mcpu32:-Dmcpu32 } %{m68332:-Dmc68332 -Dmcpu32 }%{m5200:-Dmcoldfire -Dmcf5200 }%{m5206e:-Dmcoldfire -Dmcf5200 -Dmcf5206e }%{m528x:-Dmcoldfire -Dmcf5200 -Dmcf528x }%{m5307:-Dmcoldfire -Dmcf5300 -Dmcf5307 }%{m5407: -Dmcoldfire -Dmcf5400 -Dmcf5407 }} \\\n-%{m68302:-D__mc68302__ -D__mc68302 }%{m68010:-D__mc68010__ -D__mc68010 }%{m68020:-D__mc68020__ -D__mc68020 }%{mc68020:-D__mc68020__ -D__mc68020 }%{m68030:-D__mc68030__ -D__mc68030 }%{m68040:-D__mc68040__ -D__mc68040 }%{m68020-40:-D__mc68020__ -D__mc68030__ -D__mc68040__ -D__mc68020 -D__mc68030 -D__mc68040 }%{m68020-60:-D__mc68020__ -D__mc68030__ -D__mc68040__ -D__mc68020 -D__mc68030 -D__mc68040 -D__mc68060__ -D__mc68060 }%{m68060:-D__mc68060__ -D__mc68060 }%{mcpu32:-D__mcpu32__ -D__mcpu32 }%{m68332:-D__mc68332__ -D__mc68332 -D__mcpu32__ -D__mcpu32 }%{m5200:-D__mcf5200__ -D__mcf5200 -D__mcoldfire__ } \\\n-%{m5206e:-D__mcoldfire__ -D__mcf5200__ -D__mcf5200 -D__mcf5206e__ -D__mcf5206e } \\\n-%{m528x:-D__mcoldfire__ -D__mcf5200__ -D__mcf5200 -D__mcf528x__ -D__mcf528x } \\\n-%{m5307:-D__mcoldfire__ -D__mcf5300__ -D__mcf5300 -D__mcf5307__ -D__mcf5307 } \\\n-%{m5407:-D__mcoldfire__ -D__mcf5400__ -D__mcf5400 -D__mcf5407__ -D__mcf5407 } \\\n-%{!mc68000:%{!m68000:%{!m68302:%{!m68010:%{!mc68020:%{!m68020:%{!m68030:%{!m68040:%{!m68020-40:%{!m68020-60:%{!m68060:%{!mcpu32: %{!m68332:%{!m5200:%{!m5206e:%{!m528x:%{!m5307:%{!m5407:%(cpp_cpu_default)}}}}}}}}}}}}}}}}}} \\\n-%(cpp_subtarget) \\\n-\"\n \n /* Pass flags to gas indicating which type of processor we have.  */\n \n@@ -159,11 +104,8 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n    Do not define this macro if it does not need to do anything.  */\n \n #define EXTRA_SPECS\t\t\t\t\t\\\n-  { \"cpp_cpu_default\",\tCPP_CPU_DEFAULT_SPEC },\t\t\\\n-  { \"cpp_fpu\",\t\tCPP_FPU_SPEC },\t\t\t\\\n-  { \"cpp_subtarget\",\tCPP_SUBTARGET_SPEC },\t\t\\\n   { \"asm_cpu_default\",\tASM_CPU_DEFAULT_SPEC },\t\t\\\n-/*{ \"cc1_cpu_default\",\tCC1_CPU_DEFAULT__SPEC },*/\t\\\n+  { \"cc1_cpu_default\",\tCC1_CPU_DEFAULT_SPEC },\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \n #define CPP_SUBTARGET_SPEC \"\""}, {"sha": "700f4d6662d56dcf66a7c5691e967aac23c5ccf8", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ffd79638a99be102aacb3d825c5a9d8a0ea913/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ffd79638a99be102aacb3d825c5a9d8a0ea913/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=e2ffd79638a99be102aacb3d825c5a9d8a0ea913", "patch": "@@ -28,10 +28,46 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_CPU_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__mc68000__\");\t\t\\\n-\tif (TARGET_68020)\t\t\t\\\n-\t  builtin_define (\"__mc68020__\");\t\\\n \tbuiltin_define (\"__m68k__\");\t\t\\\n+\tbuiltin_define_std (\"mc68000\");\t\t\\\n+\tif (TARGET_68060)\t\t\t\\\n+\t  builtin_define_std (\"mc68060\");\t\\\n+\telse if (TARGET_68040)\t\t\t\\\n+\t  builtin_define_std (\"mc68040\");\t\\\n+\telse if (TARGET_68020)\t\t\t\\\n+\t    builtin_define_std (\"mc68020\");\t\\\n+\tif (TARGET_68881)\t\t\t\\\n+\t  builtin_define (\"__HAVE_68881__\");\t\\\n+\tif (TARGET_CPU32)\t\t\t\\\n+\t  {\t\t\t\t\t\\\n+\t    builtin_define_std (\"mc68332\");\t\\\n+\t    builtin_define_std (\"mcpu32\");\t\\\n+\t  }\t\t\t\t\t\\\n+\tif (TARGET_COLDFIRE)\t\t\t\\\n+\t  builtin_define (\"__mcoldfire__\");\t\\\n+\tif (TARGET_5200)\t\t\t\\\n+\t  builtin_define (\"__mcf5200__\");\t\\\n+\tif (TARGET_528x)\t\t\t\\\n+\t  {\t\t\t\t\t\\\n+\t    builtin_define (\"__mcf528x__\");\t\\\n+\t    builtin_define (\"__mcf5200__\");\t\\\n+\t  }\t\t\t\t\t\\\n+\tif (TARGET_CFV3)\t\t\t\\\n+\t  {\t\t\t\t\t\\\n+\t    builtin_define (\"__mcf5300__\");\t\\\n+\t    builtin_define (\"__mcf5307__\");\t\\\n+\t  }\t\t\t\t\t\\\n+\tif (TARGET_CFV4)\t\t\t\\\n+\t  {\t\t\t\t\t\\\n+\t    builtin_define (\"__mcf5400__\");\t\\\n+\t    builtin_define (\"__mcf5407__\");\t\\\n+\t  }\t\t\t\t\t\\\n+\tif (TARGET_CF_HWDIV)\t\t\t\\\n+\t  builtin_define (\"__mcfhwdiv__\");\t\\\n+\tif (flag_pic)\t\t\t\t\\\n+\t  builtin_define (\"__pic__\");\t\t\\\n+\tif (flag_pic > 1)\t\t\t\\\n+\t  builtin_define (\"__PIC__\");\t\t\\\n \tbuiltin_assert (\"cpu=m68k\");\t\t\\\n \tbuiltin_assert (\"machine=m68k\");\t\\\n     }\t\t\t\t\t\t\\\n@@ -155,7 +191,7 @@ extern int target_flags;\n #define MASK_CF_HWDIV\t0x40000\n #define TARGET_CF_HWDIV\t(target_flags & MASK_CF_HWDIV)\n \n-/* Compile for mcf582 */\n+/* Compile for mcf528x */\n #define MASK_528x\t0x80000\n #define TARGET_528x (target_flags & MASK_528x)\n "}]}