{"sha": "9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUyNzE1MzEzOTBiNzBmZDQwMGZkZmJkMWJhNWE3NzRmOWZlNGRmNQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2015-02-10T10:09:49Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2015-02-10T10:09:49Z"}, "message": "Fix <iso/math_c99.h> signbit on Solaris\n\n\tfixincludes:\n\t* inclhack.def (solaris_math_11): New fix.\n\t* fixincl.x: Regenerate.\n\t* tests/base/iso/math_c99.h [SOLARIS_MATH_11_CHECK]: New test.\n\n\tgcc/testsuite:\n\t* gcc.dg/signbit-sa.c: New test.\n\nFrom-SVN: r220577", "tree": {"sha": "eb3f4a25ccd2cc0944a6e25152366db3f36040e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb3f4a25ccd2cc0944a6e25152366db3f36040e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bab4f4e37f5cbaf7807119d40d3b5ebd5bea856f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab4f4e37f5cbaf7807119d40d3b5ebd5bea856f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bab4f4e37f5cbaf7807119d40d3b5ebd5bea856f"}], "stats": {"total": 158, "additions": 151, "deletions": 7}, "files": [{"sha": "f5483cf72d15b9a8a35d898611321b83c5c40b4f", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "patch": "@@ -1,3 +1,9 @@\n+2015-02-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* inclhack.def (solaris_math_11): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/iso/math_c99.h [SOLARIS_MATH_11_CHECK]: New test.\n+\n 2015-02-06  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR bootstrap/53348"}, {"sha": "77a9c321a3d528b34d0deb09b0b2133d7b4b8977", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 67, "deletions": 7, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "patch": "@@ -1,12 +1,12 @@\n /*  -*- buffer-read-only: t -*- vi: set ro:\n- *\n+ * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n- *\n- * It has been AutoGen-ed  December 20, 2014 at 03:22:33 PM by AutoGen 5.18.5pre6\n+ * \n+ * It has been AutoGen-ed  Friday February  6, 2015 at 04:31:58 PM CET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Dec 20 15:22:33 PST 2014\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Feb  6 16:31:58 CET 2015\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 223 fixup descriptions.\n+ * This file contains 224 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -6856,6 +6856,60 @@ static const char* apzSolaris_Math_9Patch[] = {\n     \"^#define[ \\t]+([a-z]+)\\\\(x, y\\\\)([ \\t]+)\\\\(\\\\(x\\\\) __builtin_[a-z]+\\\\(y\\\\)\\\\)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris_Math_11 fix\n+ */\n+tSCC zSolaris_Math_11Name[] =\n+     \"solaris_math_11\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris_Math_11List[] =\n+  \"iso/math_c99.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzSolaris_Math_11Machs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSolaris_Math_11Select0[] =\n+       \"@\\\\(#\\\\)math_c99\\\\.h[ \\t]+1\\\\.[0-9]+[ \\t]+[0-9/]+ \";\n+\n+#define    SOLARIS_MATH_11_TEST_CT  1\n+static tTestDesc aSolaris_Math_11Tests[] = {\n+  { TT_EGREP,    zSolaris_Math_11Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Solaris_Math_11\n+ */\n+static const char* apzSolaris_Math_11Patch[] = {\n+    \"format\",\n+    \"#undef\\tsignbit\\n\\\n+#define\\tsignbit(x)\\t(sizeof(x) == sizeof(float) \\\\\\n\\\n+\\t\\t\\t   ? __builtin_signbitf(x) \\\\\\n\\\n+\\t\\t\\t   : sizeof(x) == sizeof(long double) \\\\\\n\\\n+\\t\\t\\t     ? __builtin_signbitl(x) \\\\\\n\\\n+\\t\\t\\t     : __builtin_signbit(x))\",\n+    \"^#undef[ \\t]+signbit\\n\\\n+#if defined\\\\(__sparc\\\\)\\n\\\n+#define[ \\t]+signbit\\\\(x\\\\)[ \\t]+__extension__\\\\( \\\\\\\\\\n\\\n+[ \\t]+\\\\{[ \\t]*__typeof\\\\(x\\\\)[ \\t]*__x_s[ \\t]*=[ \\t]*\\\\(x\\\\);[ \\t]*\\\\\\\\\\n\\\n+[ \\t]+\\\\(int\\\\)[ \\t]*\\\\(\\\\*\\\\(unsigned[ \\t]*\\\\*\\\\)[ \\t]*\\\\&__x_s[ \\t]*>>[ \\t]*31\\\\);[ \\t]*\\\\}\\\\)\\n\\\n+#elif defined\\\\(__i386\\\\) \\\\|\\\\| defined\\\\(__amd64\\\\)\\n\\\n+#define[ \\t]+signbit\\\\(x\\\\)[ \\t]+__extension__\\\\( \\\\\\\\\\n\\\n+[ \\t]+\\\\{ __typeof\\\\(x\\\\) __x_s = \\\\(x\\\\); \\\\\\\\\\n\\\n+[ \\t]+\\\\(sizeof \\\\(__x_s\\\\) == sizeof \\\\(float\\\\) \\\\? \\\\\\\\\\n\\\n+[ \\t]+\\\\(int\\\\) \\\\(\\\\*\\\\(unsigned \\\\*\\\\) \\\\&__x_s >> 31\\\\) : \\\\\\\\\\n\\\n+[ \\t]+sizeof \\\\(__x_s\\\\) == sizeof \\\\(double\\\\) \\\\? \\\\\\\\\\n\\\n+[ \\t]+\\\\(int\\\\) \\\\(\\\\(\\\\(unsigned \\\\*\\\\) \\\\&__x_s\\\\)\\\\[1\\\\] >> 31\\\\) : \\\\\\\\\\n\\\n+[ \\t]+\\\\(int\\\\) \\\\(\\\\(\\\\(unsigned short \\\\*\\\\) \\\\&__x_s\\\\)\\\\[4\\\\] >> 15\\\\)\\\\); \\\\}\\\\)\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Solaris_Once_Init_1 fix\n@@ -9152,9 +9206,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          260\n+#define REGEX_COUNT          261\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            223\n+#define FIX_COUNT            224\n \n /*\n  *  Enumerate the fixes\n@@ -9325,6 +9379,7 @@ typedef enum {\n     SOLARIS_MATH_4_FIXIDX,\n     SOLARIS_MATH_8_FIXIDX,\n     SOLARIS_MATH_9_FIXIDX,\n+    SOLARIS_MATH_11_FIXIDX,\n     SOLARIS_ONCE_INIT_1_FIXIDX,\n     SOLARIS_POSIX_SPAWN_RESTRICT_FIXIDX,\n     SOLARIS_POW_INT_OVERLOAD_FIXIDX,\n@@ -10211,6 +10266,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SOLARIS_MATH_9_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSolaris_Math_9Tests,   apzSolaris_Math_9Patch, 0 },\n \n+  {  zSolaris_Math_11Name,    zSolaris_Math_11List,\n+     apzSolaris_Math_11Machs,\n+     SOLARIS_MATH_11_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSolaris_Math_11Tests,   apzSolaris_Math_11Patch, 0 },\n+\n   {  zSolaris_Once_Init_1Name,    zSolaris_Once_Init_1List,\n      apzSolaris_Once_Init_1Machs,\n      SOLARIS_ONCE_INIT_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "ce9a2ca6b4c5b9cdc1562771571c2b6456d6bf76", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "patch": "@@ -3548,6 +3548,58 @@ fix = {\n     \"#define\tisunordered(x, y)\t((x) __builtin_isunordered(y))\";\n };\n \n+/*\n+ * Newer Solaris 10/11 GCC signbit implementations cause strict-aliasing\n+ * warnings.\n+ */\n+fix = {\n+    hackname = solaris_math_11;\n+    select = '@\\(#\\)math_c99\\.h' \"[ \\t]+1\\\\.[0-9]+[ \\t]+[0-9/]+ \";\n+    files = iso/math_c99.h;\n+    c_fix = format;\n+    c_fix_arg = << _EOArg_\n+#undef\tsignbit\n+#define\tsignbit(x)\t(sizeof(x) == sizeof(float) \\\n+\t\t\t   ? __builtin_signbitf(x) \\\n+\t\t\t   : sizeof(x) == sizeof(long double) \\\n+\t\t\t     ? __builtin_signbitl(x) \\\n+\t\t\t     : __builtin_signbit(x))\n+_EOArg_;\n+    c_fix_arg = << _EOArg_\n+^#undef[ \t]+signbit\n+#if defined\\(__sparc\\)\n+#define[ \t]+signbit\\(x\\)[ \t]+__extension__\\( \\\\\n+[ \t]+\\{[ \t]*__typeof\\(x\\)[ \t]*__x_s[ \t]*=[ \t]*\\(x\\);[ \t]*\\\\\n+[ \t]+\\(int\\)[ \t]*\\(\\*\\(unsigned[ \t]*\\*\\)[ \t]*\\&__x_s[ \t]*>>[ \t]*31\\);[ \t]*\\}\\)\n+#elif defined\\(__i386\\) \\|\\| defined\\(__amd64\\)\n+#define[ \t]+signbit\\(x\\)[ \t]+__extension__\\( \\\\\n+[ \t]+\\{ __typeof\\(x\\) __x_s = \\(x\\); \\\\\n+[ \t]+\\(sizeof \\(__x_s\\) == sizeof \\(float\\) \\? \\\\\n+[ \t]+\\(int\\) \\(\\*\\(unsigned \\*\\) \\&__x_s >> 31\\) : \\\\\n+[ \t]+sizeof \\(__x_s\\) == sizeof \\(double\\) \\? \\\\\n+[ \t]+\\(int\\) \\(\\(\\(unsigned \\*\\) \\&__x_s\\)\\[1\\] >> 31\\) : \\\\\n+[ \t]+\\(int\\) \\(\\(\\(unsigned short \\*\\) \\&__x_s\\)\\[4\\] >> 15\\)\\); \\}\\)\n+#endif\n+_EOArg_;\n+    test_text = << _EOText_\n+/* @(#)math_c99.h\t1.14\t13/03/27 */\n+#undef\tsignbit\n+#if defined(__sparc)\n+#define\tsignbit(x)\t__extension__( \\\\\n+\t\t\t\t{ __typeof(x) __x_s = (x); \\\\\n+\t\t\t\t(int) (*(unsigned *) &__x_s >> 31); })\n+#elif defined(__i386) || defined(__amd64)\n+#define\tsignbit(x)\t__extension__( \\\\\n+\t\t\t{ __typeof(x) __x_s = (x); \\\\\n+\t\t\t(sizeof (__x_s) == sizeof (float) ? \\\\\n+\t\t\t(int) (*(unsigned *) &__x_s >> 31) : \\\\\n+\t\t\tsizeof (__x_s) == sizeof (double) ? \\\\\n+\t\t\t(int) (((unsigned *) &__x_s)[1] >> 31) : \\\\\n+\t\t\t(int) (((unsigned short *) &__x_s)[4] >> 15)); })\n+#endif\n+_EOText_;\n+};\n+\n /*\n  * Sun Solaris defines PTHREAD_ONCE_INIT as an array containing a\n  * structure.  As such, it need two levels of brackets, but only"}, {"sha": "6c642e5852944ba23b60084183a4732f126c321c", "filename": "fixincludes/tests/base/iso/math_c99.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h?ref=9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "patch": "@@ -75,3 +75,14 @@\n #undef\tisunordered\n #define\tisunordered(x, y)\t__builtin_isunordered(x, y)\n #endif  /* SOLARIS_MATH_9_CHECK */\n+\n+\n+#if defined( SOLARIS_MATH_11_CHECK )\n+/* @(#)math_c99.h\t1.14\t13/03/27 */\n+#undef\tsignbit\n+#define\tsignbit(x)\t(sizeof(x) == sizeof(float) \\\n+\t\t\t   ? __builtin_signbitf(x) \\\n+\t\t\t   : sizeof(x) == sizeof(long double) \\\n+\t\t\t     ? __builtin_signbitl(x) \\\n+\t\t\t     : __builtin_signbit(x))\n+#endif  /* SOLARIS_MATH_11_CHECK */"}, {"sha": "9bb681c6193b30832d86e5d0ef1f67fb43b6ec90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "patch": "@@ -1,3 +1,7 @@\n+2015-02-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc.dg/signbit-sa.c: New test.\n+\n 2015-02-10  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/57822"}, {"sha": "4cbefdd1e19404090cd1805632a4792e8496237e", "filename": "gcc/testsuite/gcc.dg/signbit-sa.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-sa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e271531390b70fd400fdfbd1ba5a774f9fe4df5/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-sa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsignbit-sa.c?ref=9e271531390b70fd400fdfbd1ba5a774f9fe4df5", "patch": "@@ -0,0 +1,11 @@\n+/* Some versions of Solaris <math.h> give strict-aliasing warnings for\n+   signbit.  */\n+/* { dg-options \"-std=c99 -O2 -Wstrict-aliasing\" } */\n+\n+#include <math.h>\n+\n+int\n+main (void)\n+{\n+  return signbit (1.0f) | signbit (1.0) | signbit (1.0l);;\n+}"}]}