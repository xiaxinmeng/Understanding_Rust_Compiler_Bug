{"sha": "915829ccf1a380e5af8d7f59f53a9fe75bc778b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE1ODI5Y2NmMWEzODBlNWFmOGQ3ZjU5ZjUzYTlmZTc1YmM3NzhiMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-29T13:27:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-29T13:27:13Z"}, "message": "* semantics.c (is_valid_constexpr_fn): Specify input location.\n\nFrom-SVN: r171660", "tree": {"sha": "c3dc925150587ace20ca54156c8c2548ddafe590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3dc925150587ace20ca54156c8c2548ddafe590"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/915829ccf1a380e5af8d7f59f53a9fe75bc778b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/915829ccf1a380e5af8d7f59f53a9fe75bc778b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/915829ccf1a380e5af8d7f59f53a9fe75bc778b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86c8d1f646594d65f8d78714e59c948aefe918ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c8d1f646594d65f8d78714e59c948aefe918ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c8d1f646594d65f8d78714e59c948aefe918ef"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "99a06d1fbc5b7e86a05ccfdee0a66f01475c052c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=915829ccf1a380e5af8d7f59f53a9fe75bc778b1", "patch": "@@ -1,3 +1,7 @@\n+2011-03-29  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (is_valid_constexpr_fn): Specify input location.\n+\n 2011-03-28  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48313"}, {"sha": "da8c0163849f8fed2a49a5f4ae3ee986c79b6528", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=915829ccf1a380e5af8d7f59f53a9fe75bc778b1", "patch": "@@ -5338,8 +5338,8 @@ is_valid_constexpr_fn (tree fun, bool complain)\n       {\n \tret = false;\n \tif (complain)\n-\t  error (\"invalid type for parameter %q#D of constexpr function\",\n-\t\t parm);\n+\t  error (\"invalid type for parameter %d of constexpr \"\n+\t\t \"function %q+#D\", DECL_PARM_INDEX (parm), fun);\n       }\n \n   if (!DECL_CONSTRUCTOR_P (fun))\n@@ -5349,7 +5349,7 @@ is_valid_constexpr_fn (tree fun, bool complain)\n \t{\n \t  ret = false;\n \t  if (complain)\n-\t    error (\"invalid return type %qT of constexpr function %qD\",\n+\t    error (\"invalid return type %qT of constexpr function %q+D\",\n \t\t   rettype, fun);\n \t}\n \n@@ -5359,7 +5359,7 @@ is_valid_constexpr_fn (tree fun, bool complain)\n \t{\n \t  ret = false;\n \t  if (complain)\n-\t    error (\"enclosing class of %q#D is not a literal type\", fun);\n+\t    error (\"enclosing class of %q+#D is not a literal type\", fun);\n \t}\n     }\n "}, {"sha": "721427265e55064e02a57e8372417443f2ed2a82", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=915829ccf1a380e5af8d7f59f53a9fe75bc778b1", "patch": "@@ -1,3 +1,7 @@\n+2011-03-29  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-diag1.C: Adjust error locations.\n+\n 2011-03-29  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/48095"}, {"sha": "183d3f768fa14a703de392b70071ce89ecc6a9ac", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-diag1.C", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/915829ccf1a380e5af8d7f59f53a9fe75bc778b1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C?ref=915829ccf1a380e5af8d7f59f53a9fe75bc778b1", "patch": "@@ -1,21 +1,20 @@\n // Test that we explain why a template instantiation isn't constexpr\n // { dg-options -std=c++0x }\n-// { dg-prune-output \"not a constexpr function\" }\n \n template <class T>\n struct A\n {\n   T t;\n-  constexpr int f() { return 42; }\n+  constexpr int f() { return 42; } // { dg-error \"enclosing class\" }\n };\n \n struct B { B(); operator int(); };\n \n constexpr A<int> ai = { 42 };\n constexpr int i = ai.f();\n \n-constexpr int b = A<B>().f();\t// { dg-error \"enclosing class\" }\n+constexpr int b = A<B>().f();\t// { dg-error \"not a constexpr function\" }\n \n template <class T>\n-constexpr int f (T t) { return 42; }\n-constexpr int x = f(B());\t// { dg-error \"parameter\" }\n+constexpr int f (T t) { return 42; } // { dg-error \"parameter\" }\n+constexpr int x = f(B());\t     // { dg-error \"constexpr function\" }"}]}