{"sha": "5f3c0ee908b5e10f5226be0bad8b4ac55d41d985", "node_id": "C_kwDOANBUbNoAKDVmM2MwZWU5MDhiNWUxMGY1MjI2YmUwYmFkOGI0YWM1NWQ0MWQ5ODU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-17T23:53:37Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-18T09:51:02Z"}, "message": "libstdc++: Improve comments describing --enable-fully-dynamic-string\n\nlibstdc++-v3/ChangeLog:\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING): Improve\n\tcomments.\n\t* configure: Regenerate.", "tree": {"sha": "117d5c610624840b395bda0c5fbfd07cdcfbb2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/117d5c610624840b395bda0c5fbfd07cdcfbb2e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f3c0ee908b5e10f5226be0bad8b4ac55d41d985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3c0ee908b5e10f5226be0bad8b4ac55d41d985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3c0ee908b5e10f5226be0bad8b4ac55d41d985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3c0ee908b5e10f5226be0bad8b4ac55d41d985/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8feb059ca2b3fb50a1ccec01a49f119ec223084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8feb059ca2b3fb50a1ccec01a49f119ec223084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8feb059ca2b3fb50a1ccec01a49f119ec223084"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "930861e6a94630b15f5afcaa13cec12e97cfd2cb", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3c0ee908b5e10f5226be0bad8b4ac55d41d985/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3c0ee908b5e10f5226be0bad8b4ac55d41d985/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=5f3c0ee908b5e10f5226be0bad8b4ac55d41d985", "patch": "@@ -499,19 +499,24 @@ AC_DEFUN([GLIBCXX_CHECK_LFS], [\n \n \n dnl\n-dnl Check for whether a fully dynamic basic_string implementation should\n-dnl be turned on, that does not put empty objects in per-process static\n-dnl memory (mostly useful together with shared memory allocators, see PR\n-dnl libstdc++/16612 for details).\n+dnl Check whether the old Copy-On-Write basic_string should allocate a new\n+dnl empty representation for every default-constructed basic_string. Without\n+dnl this option, COW strings share a single empty rep in static storage,\n+dnl but this only works if the linker can guarantee the static storage has\n+dnl a unique definition in the process. It also doesn't work if basic_string\n+dnl objects are stored in shared memory (see PR libstdc++/16612).\n+dnl When fully dynamic strings are enabled, the static storage is not used\n+dnl and a new empty string with reference-count == 1 is allocated each time.\n+dnl Enabling this changes the libstdc++.so ABI.\n dnl\n dnl --enable-fully-dynamic-string defines _GLIBCXX_FULLY_DYNAMIC_STRING to 1\n dnl --disable-fully-dynamic-string defines _GLIBCXX_FULLY_DYNAMIC_STRING to 0\n-dnl otherwise undefined\n+dnl otherwise the macro is not defined.\n dnl  +  Usage:  GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING[(DEFAULT)]\n dnl       Where DEFAULT is either `yes' or `no'.\n dnl\n AC_DEFUN([GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING], [\n-  GLIBCXX_ENABLE(fully-dynamic-string,$1,,[do not put empty strings in per-process static memory])\n+  GLIBCXX_ENABLE(fully-dynamic-string,$1,,[do not put empty strings in per-process static memory], [permit yes|no])\n   if test $enable_fully_dynamic_string = yes; then\n     enable_fully_dynamic_string_def=1\n   else"}, {"sha": "4c9be007521d935c00a623779b8092f377292659", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3c0ee908b5e10f5226be0bad8b4ac55d41d985/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3c0ee908b5e10f5226be0bad8b4ac55d41d985/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=5f3c0ee908b5e10f5226be0bad8b4ac55d41d985", "patch": "@@ -18679,8 +18679,8 @@ if test \"${enable_fully_dynamic_string+set}\" = set; then :\n   enableval=$enable_fully_dynamic_string;\n       case \"$enableval\" in\n        yes|no) ;;\n-       *) as_fn_error $? \"Argument to enable/disable fully-dynamic-string must be yes or no\" \"$LINENO\" 5 ;;\n-      esac\n+       *) as_fn_error $? \"Unknown argument to enable/disable fully-dynamic-string\" \"$LINENO\" 5 ;;\n+\t  \t        esac\n \n else\n   enable_fully_dynamic_string=no"}]}