{"sha": "b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlMGRkOGViNzRhZTk5MTFiMGZjYjI3NGM3N2EyOTRhMjk2MWNmOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-22T03:32:20Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-22T03:32:20Z"}, "message": "i386.md: Simplify certain comparisons of const_int.\n\n\t* config/i386/i386.md: Simplify certain comparisons of\n\tconst_int.\n\nFrom-SVN: r76335", "tree": {"sha": "b3d55ab9b2a1b4178b32ea005cbbffec4bb6a0b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3d55ab9b2a1b4178b32ea005cbbffec4bb6a0b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8/comments", "author": null, "committer": null, "parents": [{"sha": "5cc5eddc7c96bcff0a4fb8488c97e31d13f1aea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc5eddc7c96bcff0a4fb8488c97e31d13f1aea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc5eddc7c96bcff0a4fb8488c97e31d13f1aea1"}], "stats": {"total": 41, "additions": 17, "deletions": 24}, "files": [{"sha": "80af02b0ee4c68e37eec8e8817bad3f65f5c080a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8", "patch": "@@ -1,3 +1,8 @@\n+2004-01-21  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/i386/i386.md: Simplify certain comparisons of\n+\tconst_int.\n+\n 2004-01-21  Andrew Pinski  <apinski@apple.com>\n \n \tPR target/13785"}, {"sha": "938a40ef61351344c89972829aa2881f30fdd1d4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b4e0dd8eb74ae9911b0fcb274c77a294a2961cf8", "patch": "@@ -10638,8 +10638,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{q}\\t{%b2, %0|%0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{q}\\t%0\";\n       else\n@@ -10695,8 +10694,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{q}\\t{%b2, %0|%0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{q}\\t%0\";\n       else\n@@ -10843,8 +10841,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{l}\\t{%b2, %0|%0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{l}\\t%0\";\n       else\n@@ -10924,8 +10921,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{l}\\t{%b2, %k0|%k0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{l}\\t%k0\";\n       else\n@@ -10983,8 +10979,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{l}\\t{%b2, %0|%0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{l}\\t%0\";\n       else\n@@ -11022,8 +11017,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{l}\\t{%b2, %k0|%k0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{l}\\t%k0\";\n       else\n@@ -11067,8 +11061,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{w}\\t{%b2, %0|%0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{w}\\t%0\";\n       else\n@@ -11105,8 +11098,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{w}\\t{%b2, %0|%0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{w}\\t%0\";\n       else\n@@ -11147,8 +11139,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{w}\\t{%b2, %0|%0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{w}\\t%0\";\n       else\n@@ -11203,8 +11194,7 @@\n \t  else\n \t    return \"sal{b}\\t{%b2, %0|%0, %b2}\";\n \t}\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \t{\n \t  if (get_attr_mode (insn) == MODE_SI)\n@@ -11259,8 +11249,7 @@\n \t  else\n \t    return \"sal{b}\\t{%b2, %0|%0, %b2}\";\n \t}\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \t{\n \t  if (get_attr_mode (insn) == MODE_SI)\n@@ -11311,8 +11300,7 @@\n     default:\n       if (REG_P (operands[2]))\n \treturn \"sal{b}\\t{%b2, %0|%0, %b2}\";\n-      else if (GET_CODE (operands[2]) == CONST_INT\n-\t       && INTVAL (operands[2]) == 1\n+      else if (operands[2] == const1_rtx\n \t       && (TARGET_SHIFT1 || optimize_size))\n \treturn \"sal{b}\\t%0\";\n       else"}]}