{"sha": "fc0ea003f9b1975837f2742d68600c52934137bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMwZWEwMDNmOWIxOTc1ODM3ZjI3NDJkNjg2MDBjNTI5MzQxMzdiZA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-10-11T20:54:07Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-10-11T20:54:07Z"}, "message": "s390.c (print_operand): Support 'S' format flag.\n\n\t* config/s390/s390.c (print_operand): Support 'S' format flag.\n\t* config/s390/s390.md (\"*tmqi_mem\"): Use 'S' format flag.\n\t(\"*tstsi\", \"*tstsi_cconly\", \"*tstsi_cconly2\"): Likewise.\n\t(\"*tsthiCCT\", \"*tsthiCCT_cconly\", \"*tsthi\", \"*tsthi_cconly\"): Likewise.\n\t(\"*tstqiCCT\", \"*tstqiCCT_cconly\", \"*tstqi\", \"*tstqi_cconly\"): Likewise.\n\t(\"*cmphi_ccu\", \"*cmpqi_ccu\", \"*clc\"): Likewise\n\t(\"movti\", \"*movdi_31\", \"*movqi\", \"*movdf_31\", \"*mvc\"): Likewise.\n\t(\"*movstricthi\"): Likewise.\n\t(\"*load_multiple_di\", \"*load_multiple_si\"): Likewise.\n\t(\"*store_multiple_di\", \"*store_multiple_si\"): Likewise.\n\t(\"*sethiqisi\", \"*sethihisi\"): Likewise.\n\t(\"*sethiqidi_64\", \"*sethiqidi_31\"): Likewise.\n\t(\"*andqi3_zarch\", \"*andqi3_esa\", \"*nc\"): Likewise.\n\t(\"*iorqi3_zarch\", \"*iorqi3_esa\", \"*oc\"): Likewise.\n\t(\"*xorqi3\", \"*xc\", \"*xc_zero\"): Likewise.\n\t(\"get_tp_64\", \"get_tp_31\", \"set_tp_64\", \"set_tp_31\"): Likewise.\n\n\t(\"*tmhi_full\"): Fix incorrect op_type attribute.\n\n\t(\"*adddi3_alc_cc\", \"*adddi3_alc\"): Remove double backslash.\n\t(\"*subdi3_slb_cc\", \"*subdi3_slb\"): Likewise.\n\t(\"*addsi3_alc_cc\", \"*addsi3_alc\"): Likewise.\n\t(\"*subsi3_slb_cc\", \"*subsi3_slb\"): Likewise.\n\nFrom-SVN: r88903", "tree": {"sha": "efa28246b799afaea8556a420583d0f9e372adca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efa28246b799afaea8556a420583d0f9e372adca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc0ea003f9b1975837f2742d68600c52934137bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0ea003f9b1975837f2742d68600c52934137bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc0ea003f9b1975837f2742d68600c52934137bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0ea003f9b1975837f2742d68600c52934137bd/comments", "author": null, "committer": null, "parents": [{"sha": "61b26514c237eeda6dbb2391cb64ddd4fd9a984f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b26514c237eeda6dbb2391cb64ddd4fd9a984f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b26514c237eeda6dbb2391cb64ddd4fd9a984f"}], "stats": {"total": 216, "additions": 132, "deletions": 84}, "files": [{"sha": "5d8d74db8faf6ce3dc170113f157e6d832c44ae3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0ea003f9b1975837f2742d68600c52934137bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0ea003f9b1975837f2742d68600c52934137bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc0ea003f9b1975837f2742d68600c52934137bd", "patch": "@@ -1,3 +1,29 @@\n+2004-10-11  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (print_operand): Support 'S' format flag.\n+\t* config/s390/s390.md (\"*tmqi_mem\"): Use 'S' format flag.\n+\t(\"*tstsi\", \"*tstsi_cconly\", \"*tstsi_cconly2\"): Likewise.\n+\t(\"*tsthiCCT\", \"*tsthiCCT_cconly\", \"*tsthi\", \"*tsthi_cconly\"): Likewise.\n+\t(\"*tstqiCCT\", \"*tstqiCCT_cconly\", \"*tstqi\", \"*tstqi_cconly\"): Likewise.\n+\t(\"*cmphi_ccu\", \"*cmpqi_ccu\", \"*clc\"): Likewise\n+\t(\"movti\", \"*movdi_31\", \"*movqi\", \"*movdf_31\", \"*mvc\"): Likewise.\n+\t(\"*movstricthi\"): Likewise.\n+\t(\"*load_multiple_di\", \"*load_multiple_si\"): Likewise.\n+\t(\"*store_multiple_di\", \"*store_multiple_si\"): Likewise.\n+\t(\"*sethiqisi\", \"*sethihisi\"): Likewise.\n+\t(\"*sethiqidi_64\", \"*sethiqidi_31\"): Likewise.\n+\t(\"*andqi3_zarch\", \"*andqi3_esa\", \"*nc\"): Likewise.\n+\t(\"*iorqi3_zarch\", \"*iorqi3_esa\", \"*oc\"): Likewise.\n+\t(\"*xorqi3\", \"*xc\", \"*xc_zero\"): Likewise.\n+\t(\"get_tp_64\", \"get_tp_31\", \"set_tp_64\", \"set_tp_31\"): Likewise.\n+\n+\t(\"*tmhi_full\"): Fix incorrect op_type attribute.\n+\n+\t(\"*adddi3_alc_cc\", \"*adddi3_alc\"): Remove double backslash.\n+\t(\"*subdi3_slb_cc\", \"*subdi3_slb\"): Likewise.\n+\t(\"*addsi3_alc_cc\", \"*addsi3_alc\"): Likewise.\n+\t(\"*subsi3_slb_cc\", \"*subsi3_slb\"): Likewise.\n+\n 2004-10-11  Andrew Pinski  <pinskia@physics.uc.edu\n \n \tPR middle-end/16266"}, {"sha": "72cdbf79660064d83bd15b75c48bb558ddb1e0f8", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0ea003f9b1975837f2742d68600c52934137bd/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0ea003f9b1975837f2742d68600c52934137bd/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=fc0ea003f9b1975837f2742d68600c52934137bd", "patch": "@@ -4066,6 +4066,7 @@ print_operand_address (FILE *file, rtx addr)\n     'J': print tls_load/tls_gdcall/tls_ldcall suffix\n     'O': print only the displacement of a memory reference.\n     'R': print only the base register of a memory reference.\n+    'S': print S-type memory reference (base+displacement).\n     'N': print the second word of a DImode operand.\n     'M': print the second word of a TImode operand.\n     'Y': print shift count operand.\n@@ -4143,6 +4144,26 @@ print_operand (FILE *file, rtx x, int code)\n       }\n       return;\n \n+    case 'S':\n+      {\n+\tstruct s390_address ad;\n+\n+\tif (GET_CODE (x) != MEM\n+\t    || !s390_decompose_address (XEXP (x, 0), &ad)\n+\t    || (ad.base && !REG_OK_FOR_BASE_STRICT_P (ad.base))\n+\t    || ad.indx)\n+\t  abort ();\n+\n+\tif (ad.disp)\n+\t  output_addr_const (file, ad.disp);\n+\telse\n+\t  fprintf (file, \"0\");\n+\n+\tif (ad.base)\n+\t  fprintf (file, \"(%s)\", reg_names[REGNO (ad.base)]);\n+      }\n+      return;\n+\n     case 'N':\n       if (GET_CODE (x) == REG)\n \tx = gen_rtx_REG (GET_MODE (x), REGNO (x) + 1);"}, {"sha": "e1e36931a56af3fd9a050debf77e8e0ab1d61800", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 85, "deletions": 84, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0ea003f9b1975837f2742d68600c52934137bd/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0ea003f9b1975837f2742d68600c52934137bd/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=fc0ea003f9b1975837f2742d68600c52934137bd", "patch": "@@ -60,6 +60,7 @@\n ;;     %J: print tls_load/tls_gdcall/tls_ldcall suffix\n ;;     %O: print only the displacement of a memory reference.\n ;;     %R: print only the base register of a memory reference.\n+;;     %S: print S-type memory reference (base+displacement).\n ;;     %N: print the second word of a DImode operand.\n ;;     %M: print the second word of a TImode operand.\n \n@@ -302,8 +303,8 @@\n                  (match_operand:QI 2 \"immediate_operand\" \"n,n\")))]\n   \"s390_match_ccmode (insn, s390_tm_ccmode (operands[1], operands[2], 0))\"\n   \"@\n-   tm\\t%0,%b1\n-   tmy\\t%0,%b1\"\n+   tm\\t%S0,%b1\n+   tmy\\t%S0,%b1\"\n   [(set_attr \"op_type\" \"SI,SIY\")])\n \n (define_insn \"*tmdi_reg\"\n@@ -340,7 +341,7 @@\n                  (match_operand:HI 1 \"immediate_operand\" \"n\")))]\n   \"s390_match_ccmode (insn, s390_tm_ccmode (constm1_rtx, operands[1], 1))\"\n   \"tml\\t%0,65535\"\n-  [(set_attr \"op_type\" \"RX\")])\n+  [(set_attr \"op_type\" \"RI\")])\n \n (define_insn \"*tmqi_full\"\n   [(set (reg 33)\n@@ -401,8 +402,8 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n    ltr\\t%2,%0\n-   icm\\t%2,15,%0\n-   icmy\\t%2,15,%0\"\n+   icm\\t%2,15,%S0\n+   icmy\\t%2,15,%S0\"\n   [(set_attr \"op_type\" \"RR,RS,RSY\")])\n \n (define_insn \"*tstsi_cconly\"\n@@ -413,8 +414,8 @@\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n    ltr\\t%0,%0\n-   icm\\t%2,15,%0\n-   icmy\\t%2,15,%0\"\n+   icm\\t%2,15,%S0\n+   icmy\\t%2,15,%S0\"\n   [(set_attr \"op_type\" \"RR,RS,RSY\")])\n \n (define_insn \"*tstsi_cconly2\"\n@@ -433,8 +434,8 @@\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n-   icm\\t%2,3,%0\n-   icmy\\t%2,3,%0\n+   icm\\t%2,3,%S0\n+   icmy\\t%2,3,%S0\n    tml\\t%0,65535\"\n   [(set_attr \"op_type\" \"RS,RSY,RI\")])\n \n@@ -445,8 +446,8 @@\n    (clobber (match_scratch:HI 2 \"=d,d,X\"))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n-   icm\\t%2,3,%0\n-   icmy\\t%2,3,%0\n+   icm\\t%2,3,%S0\n+   icmy\\t%2,3,%S0\n    tml\\t%0,65535\"\n   [(set_attr \"op_type\" \"RS,RSY,RI\")])\n \n@@ -458,8 +459,8 @@\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n-   icm\\t%2,3,%0\n-   icmy\\t%2,3,%0\"\n+   icm\\t%2,3,%S0\n+   icmy\\t%2,3,%S0\"\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*tsthi_cconly\"\n@@ -469,8 +470,8 @@\n    (clobber (match_scratch:HI 2 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n-   icm\\t%2,3,%0\n-   icmy\\t%2,3,%0\"\n+   icm\\t%2,3,%S0\n+   icmy\\t%2,3,%S0\"\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*tstqiCCT\"\n@@ -481,8 +482,8 @@\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n-   icm\\t%2,1,%0\n-   icmy\\t%2,1,%0\n+   icm\\t%2,1,%S0\n+   icmy\\t%2,1,%S0\n    tml\\t%0,255\"\n   [(set_attr \"op_type\" \"RS,RSY,RI\")])\n \n@@ -492,8 +493,8 @@\n                  (match_operand:QI 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n-   cli\\t%0,0\n-   cliy\\t%0,0\n+   cli\\t%S0,0\n+   cliy\\t%S0,0\n    tml\\t%0,255\"\n   [(set_attr \"op_type\" \"SI,SIY,RI\")])\n \n@@ -505,8 +506,8 @@\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n-   icm\\t%2,1,%0\n-   icmy\\t%2,1,%0\"\n+   icm\\t%2,1,%S0\n+   icmy\\t%2,1,%S0\"\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*tstqi_cconly\"\n@@ -516,8 +517,8 @@\n    (clobber (match_scratch:QI 2 \"=d,d\"))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"@\n-   icm\\t%2,1,%0\n-   icmy\\t%2,1,%0\"\n+   icm\\t%2,1,%S0\n+   icmy\\t%2,1,%S0\"\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n \n@@ -645,8 +646,8 @@\n    && (!s390_pool_operand (operands[0]) || !s390_pool_operand (operands[1]))\n    && !register_operand (operands[1], HImode)\"\n   \"@\n-   clm\\t%0,3,%1\n-   clmy\\t%0,3,%1\n+   clm\\t%0,3,%S1\n+   clmy\\t%0,3,%S1\n    #\"\n   [(set_attr \"op_type\" \"RS,RSY,SS\")])\n \n@@ -658,10 +659,10 @@\n    && (!s390_pool_operand (operands[0]) || !s390_pool_operand (operands[1]))\n    && !register_operand (operands[1], QImode)\"\n   \"@\n-   clm\\t%0,1,%1\n-   clmy\\t%0,1,%1\n-   cli\\t%0,%b1\n-   cliy\\t%0,%b1\n+   clm\\t%0,1,%S1\n+   clmy\\t%0,1,%S1\n+   cli\\t%S0,%b1\n+   cliy\\t%S0,%b1\n    #\"\n   [(set_attr \"op_type\" \"RS,RSY,SI,SIY,SS\")])\n \n@@ -675,7 +676,7 @@\n    (use (match_operand 2 \"const_int_operand\" \"n\"))]\n   \"s390_match_ccmode (insn, CCUmode)\n    && INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n-  \"clc\\t%O0(%2,%R0),%1\"\n+  \"clc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")\n    (set_attr \"type\"    \"cs\")])\n \n@@ -800,8 +801,8 @@\n         (match_operand:TI 1 \"general_operand\" \"QS,d,dKm,d,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n-   lmg\\t%0,%N0,%1\n-   stmg\\t%1,%N1,%0\n+   lmg\\t%0,%N0,%S1\n+   stmg\\t%1,%N1,%S0\n    #\n    #\n    #\"\n@@ -914,8 +915,8 @@\n         (match_operand:DI 1 \"general_operand\" \"Q,d,dKm,d,*f,R,T,*f,*f,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n-   lm\\t%0,%N0,%1\n-   stm\\t%1,%N1,%0\n+   lm\\t%0,%N0,%S1\n+   stm\\t%1,%N1,%S0\n    #\n    #\n    ldr\\t%0,%1\n@@ -1271,8 +1272,8 @@\n    icy\\t%0,%1\n    stc\\t%1,%0\n    stcy\\t%1,%0\n-   mvi\\t%0,%b1\n-   mviy\\t%0,%b1\n+   mvi\\t%S0,%b1\n+   mviy\\t%S0,%b1\n    #\"\n   [(set_attr \"op_type\" \"RR,RI,RX,RXY,RX,RXY,SI,SIY,SS\")\n    (set_attr \"type\" \"lr,*,*,*,store,store,store,store,cs\")])\n@@ -1310,8 +1311,8 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n-   icm\\t%0,3,%1\n-   icmy\\t%0,3,%1\"\n+   icm\\t%0,3,%S1\n+   icmy\\t%0,3,%S1\"\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n ;\n@@ -1366,8 +1367,8 @@\n    ldy\\t%0,%1\n    std\\t%1,%0\n    stdy\\t%1,%0\n-   lm\\t%0,%N0,%1\n-   stm\\t%1,%N1,%0\n+   lm\\t%0,%N0,%S1\n+   stm\\t%1,%N1,%S0\n    #\n    #\n    #\"\n@@ -1459,7 +1460,7 @@\n         (match_operand:BLK 1 \"memory_operand\" \"Q\"))\n    (use (match_operand 2 \"const_int_operand\" \"n\"))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n-  \"mvc\\t%O0(%2,%R0),%1\"\n+  \"mvc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")\n    (set_attr \"type\"    \"cs\")])\n \n@@ -1572,7 +1573,7 @@\n {\n   int words = XVECLEN (operands[0], 0);\n   operands[0] = gen_rtx_REG (DImode, REGNO (operands[1]) + words - 1);\n-  return \"lmg\\t%1,%0,%2\";\n+  return \"lmg\\t%1,%0,%S2\";\n }\n    [(set_attr \"op_type\" \"RSY\")\n     (set_attr \"type\"    \"lm\")])\n@@ -1585,7 +1586,7 @@\n {\n   int words = XVECLEN (operands[0], 0);\n   operands[0] = gen_rtx_REG (SImode, REGNO (operands[1]) + words - 1);\n-  return which_alternative == 0 ? \"lm\\t%1,%0,%2\" : \"lmy\\t%1,%0,%2\";\n+  return which_alternative == 0 ? \"lm\\t%1,%0,%S2\" : \"lmy\\t%1,%0,%S2\";\n }\n    [(set_attr \"op_type\" \"RS,RSY\")\n     (set_attr \"type\"    \"lm\")])\n@@ -1663,7 +1664,7 @@\n {\n   int words = XVECLEN (operands[0], 0);\n   operands[0] = gen_rtx_REG (DImode, REGNO (operands[2]) + words - 1);\n-  return \"stmg\\t%2,%0,%1\";\n+  return \"stmg\\t%2,%0,%S1\";\n }\n    [(set_attr \"op_type\" \"RSY\")\n     (set_attr \"type\"    \"stm\")])\n@@ -1677,7 +1678,7 @@\n {\n   int words = XVECLEN (operands[0], 0);\n   operands[0] = gen_rtx_REG (SImode, REGNO (operands[2]) + words - 1);\n-  return which_alternative == 0 ? \"stm\\t%2,%0,%1\" : \"stmy\\t%2,%0,%1\";\n+  return which_alternative == 0 ? \"stm\\t%2,%0,%S1\" : \"stmy\\t%2,%0,%S1\";\n }\n    [(set_attr \"op_type\" \"RS,RSY\")\n     (set_attr \"type\"    \"stm\")])\n@@ -2262,8 +2263,8 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n-   icm\\t%0,8,%1\n-   icmy\\t%0,8,%1\"\n+   icm\\t%0,8,%S1\n+   icmy\\t%0,8,%S1\"\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*sethighhisi\"\n@@ -2272,16 +2273,16 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"@\n-   icm\\t%0,12,%1\n-   icmy\\t%0,12,%1\"\n+   icm\\t%0,12,%S1\n+   icmy\\t%0,12,%S1\"\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn \"*sethighqidi_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (unspec:DI [(match_operand:QI 1 \"s_operand\" \"QS\")] UNSPEC_SETHIGH))\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n-  \"icmh\\t%0,8,%1\"\n+  \"icmh\\t%0,8,%S1\"\n   [(set_attr \"op_type\" \"RSY\")])\n \n (define_insn \"*sethighqidi_31\"\n@@ -2290,8 +2291,8 @@\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n   \"@\n-   icm\\t%0,8,%1\n-   icmy\\t%0,8,%1\"\n+   icm\\t%0,8,%S1\n+   icmy\\t%0,8,%S1\"\n   [(set_attr \"op_type\" \"RS,RSY\")])\n \n (define_insn_and_split \"*extractqi\"\n@@ -4230,8 +4231,8 @@\n         (plus:DI (plus:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"s390_match_ccmode (insn, CCLmode) && TARGET_64BIT\"\n   \"@\n-   alcgr\\\\t%0,%2\n-   alcg\\\\t%0,%2\"\n+   alcgr\\t%0,%2\n+   alcg\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*adddi3_alc\"\n@@ -4242,8 +4243,8 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"@\n-   alcgr\\\\t%0,%2\n-   alcg\\\\t%0,%2\"\n+   alcgr\\t%0,%2\n+   alcg\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_slb_cc\"\n@@ -4257,8 +4258,8 @@\n         (minus:DI (minus:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"s390_match_ccmode (insn, CCLmode) && TARGET_64BIT\"\n   \"@\n-   slbgr\\\\t%0,%2\n-   slbg\\\\t%0,%2\"\n+   slbgr\\t%0,%2\n+   slbg\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subdi3_slb\"\n@@ -4269,8 +4270,8 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"@\n-   slbgr\\\\t%0,%2\n-   slbg\\\\t%0,%2\"\n+   slbgr\\t%0,%2\n+   slbg\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_expand \"adddicc\"\n@@ -4299,8 +4300,8 @@\n         (plus:SI (plus:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"s390_match_ccmode (insn, CCLmode) && TARGET_CPU_ZARCH\"\n   \"@\n-   alcr\\\\t%0,%2\n-   alc\\\\t%0,%2\"\n+   alcr\\t%0,%2\n+   alc\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*addsi3_alc\"\n@@ -4311,8 +4312,8 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_CPU_ZARCH\"\n   \"@\n-   alcr\\\\t%0,%2\n-   alc\\\\t%0,%2\"\n+   alcr\\t%0,%2\n+   alc\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subsi3_slb_cc\"\n@@ -4326,8 +4327,8 @@\n         (minus:SI (minus:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"s390_match_ccmode (insn, CCLmode) && TARGET_CPU_ZARCH\"\n   \"@\n-   slbr\\\\t%0,%2\n-   slb\\\\t%0,%2\"\n+   slbr\\t%0,%2\n+   slb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_insn \"*subsi3_slb\"\n@@ -4338,8 +4339,8 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_CPU_ZARCH\"\n   \"@\n-   slbr\\\\t%0,%2\n-   slb\\\\t%0,%2\"\n+   slbr\\t%0,%2\n+   slb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXY\")])\n \n (define_expand \"addsicc\"\n@@ -5374,8 +5375,8 @@\n   \"@\n    nr\\t%0,%2\n    nill\\t%0,%b2\n-   ni\\t%0,%b2\n-   niy\\t%0,%b2\n+   ni\\t%S0,%b2\n+   niy\\t%S0,%b2\n    #\"\n   [(set_attr \"op_type\"  \"RR,RI,SI,SIY,SS\")])\n \n@@ -5387,7 +5388,7 @@\n   \"!TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    nr\\t%0,%2\n-   ni\\t%0,%b2\n+   ni\\t%S0,%b2\n    #\"\n   [(set_attr \"op_type\"  \"RR,SI,SS\")])\n \n@@ -5410,7 +5411,7 @@\n    (use (match_operand 2 \"const_int_operand\" \"n\"))\n    (clobber (reg:CC 33))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n-  \"nc\\t%O0(%2,%R0),%1\"\n+  \"nc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")\n    (set_attr \"type\"    \"cs\")])\n \n@@ -5664,8 +5665,8 @@\n   \"@\n    or\\t%0,%2\n    oill\\t%0,%b2\n-   oi\\t%0,%b2\n-   oiy\\t%0,%b2\n+   oi\\t%S0,%b2\n+   oiy\\t%S0,%b2\n    #\"\n   [(set_attr \"op_type\"  \"RR,RI,SI,SIY,SS\")])\n \n@@ -5677,7 +5678,7 @@\n   \"!TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n    or\\t%0,%2\n-   oi\\t%0,%b2\n+   oi\\t%S0,%b2\n    #\"\n   [(set_attr \"op_type\"  \"RR,SI,SS\")])\n \n@@ -5700,7 +5701,7 @@\n    (use (match_operand 2 \"const_int_operand\" \"n\"))\n    (clobber (reg:CC 33))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n-  \"oc\\t%O0(%2,%R0),%1\"\n+  \"oc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")\n    (set_attr \"type\"    \"cs\")])\n \n@@ -5920,8 +5921,8 @@\n   \"s390_logical_operator_ok_p (operands)\"\n   \"@\n    xr\\t%0,%2\n-   xi\\t%0,%b2\n-   xiy\\t%0,%b2\n+   xi\\t%S0,%b2\n+   xiy\\t%S0,%b2\n    #\"\n   [(set_attr \"op_type\"  \"RR,SI,SIY,SS\")])\n \n@@ -5944,7 +5945,7 @@\n    (use (match_operand 2 \"const_int_operand\" \"n\"))\n    (clobber (reg:CC 33))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n-  \"xc\\t%O0(%2,%R0),%1\"\n+  \"xc\\t%O0(%2,%R0),%S1\"\n   [(set_attr \"op_type\" \"SS\")\n    (set_attr \"type\"    \"cs\")])\n \n@@ -6000,7 +6001,7 @@\n    (use (match_operand 1 \"const_int_operand\" \"n\"))\n    (clobber (reg:CC 33))]\n   \"INTVAL (operands[1]) >= 1 && INTVAL (operands[1]) <= 256\"\n-  \"xc\\t%O0(%1,%R0),%0\"\n+  \"xc\\t%O0(%1,%R0),%S0\"\n   [(set_attr \"op_type\" \"SS\")\n    (set_attr \"type\"    \"cs\")])\n \n@@ -7423,7 +7424,7 @@\n   \"TARGET_64BIT\"\n   \"@\n    ear\\t%0,%%a0\\;sllg\\t%0,%0,32\\;ear\\t%0,%%a1\n-   stam\\t%%a0,%%a1,%0\"\n+   stam\\t%%a0,%%a1,%S0\"\n   [(set_attr \"op_type\" \"NN,RS\")\n    (set_attr \"atype\"   \"reg,*\")\n    (set_attr \"type\"    \"o3,*\")\n@@ -7435,7 +7436,7 @@\n   \"!TARGET_64BIT\"\n   \"@\n    ear\\t%0,%%a0\n-   stam\\t%%a0,%%a0,%0\"\n+   stam\\t%%a0,%%a0,%S0\"\n   [(set_attr \"op_type\" \"RRE,RS\")])\n \n (define_insn \"set_tp_64\"\n@@ -7444,7 +7445,7 @@\n   \"TARGET_64BIT\"\n   \"@\n    sar\\t%%a1,%0\\;srlg\\t%1,%0,32\\;sar\\t%%a0,%1\n-   lam\\t%%a0,%%a1,%0\"\n+   lam\\t%%a0,%%a1,%S0\"\n   [(set_attr \"op_type\" \"NN,RS\")\n    (set_attr \"atype\"   \"reg,*\")\n    (set_attr \"type\"    \"o3,*\")\n@@ -7455,7 +7456,7 @@\n   \"!TARGET_64BIT\"\n   \"@\n    sar\\t%%a0,%0\n-   lam\\t%%a0,%%a0,%0\"\n+   lam\\t%%a0,%%a0,%S0\"\n   [(set_attr \"op_type\" \"RRE,RS\")])\n \n (define_insn \"*tls_load_64\""}]}