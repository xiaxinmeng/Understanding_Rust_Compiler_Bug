{"sha": "ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE1ZmJjODdlM2NkZWZkZTFlNmI4MTRmMjgzNGQzMWQ0M2M0ZjU4Zg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-24T00:53:06Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-24T00:53:06Z"}, "message": "filebuf_members.cc: New file.\n\n\n2000-06-23  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* testsuite/27_io/filebuf_members.cc: New file.\n\t* testsuite/27_io/filebuf_members-1.tst: New file.\n\t* bits/fstream.tcc (basic_filebuf::basic_filebuf(fd)): Use it.\n\t(basic_filebuf::close): Use it.\n\t* bits/std_fstream.h (basic_filebuf): Remove default arguments for\n\tfilebuf ctor.\n\t(basic_filebuf): Add _M_fileno_based data member.\n\n\t* bits/std_fstream.h: Formatting tweaks.\n\t* testsuite/27_io/ofstream_members.cc: New file.\n\t* testsuite/27_io/ofstream_members-1.tst: New file.\n\t* testsuite/27_io/ifstream_members.cc: New file.\n\t* testsuite/27_io/ifstream_members-1.tst: New file.\n\nFrom-SVN: r34672", "tree": {"sha": "20f0cd939103aafb88f929fe337bffa1e8060398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20f0cd939103aafb88f929fe337bffa1e8060398"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f/comments", "author": null, "committer": null, "parents": [{"sha": "b16810bfe20098164e7023fb0e707f6f36977087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16810bfe20098164e7023fb0e707f6f36977087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16810bfe20098164e7023fb0e707f6f36977087"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "libstdc++-v3/testsuite/27_io/filebuf_members-1.tst", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members-1.tst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members-1.tst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members-1.tst?ref=ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f"}, {"sha": "d26fd3b87c645f05eddfd1af8785aae7354f72e6", "filename": "libstdc++-v3/testsuite/27_io/filebuf_members.cc", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc?ref=ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f", "patch": "@@ -0,0 +1,93 @@\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.3 filebuf member functions\n+\n+// various tests for filebuf::open() and filebuf::close() including\n+// the non-portable functionality in the libstdc++-v3 IO library\n+\n+#include <fstream>\n+#include <cassert>\n+#include <unistd.h>\n+#include <fcntl.h>\n+\n+\n+// verify that std::filebuf doesn't close files that it didn't open\n+// when using the following std::filebuf ctor:\n+//\n+//      std::filebuf(int __fd,\n+//                   const char* __unused,\n+//                   ios_base::openmode __mode);\n+//\n+// thanks to \"George T. Talbot\" <george@moberg.com> for uncovering\n+// this bug/situation. \n+\n+const char name_01[] = \"testsuite/filebuf_members-1.tst\";\n+const char name_02[] = \"testsuite/filebuf_members-1.txt\";\n+\n+int\n+test_01()\n+{\n+  bool test = true;\n+  int close_num;\n+\n+  // read (ext)\n+  int fd = open(name01, O_RDONLY);\n+  test &= fd >= 0;\n+\n+  {\n+    std::filebuf fb(fd, \"double_read\", std::ios_base::in);\n+  }\n+  \n+  close_num = close(fd);\n+  test &= close_num == 0;\n+\n+\n+  // read (standard)\n+  FILE* f = fopen(name01, \"r\");\n+  test &= !f;\n+\n+  {\n+    std::ifstream ifstream1(name02);\n+    test &= ifstream1.is_open();\n+    std::ios_base::iostate st01 = ifstream1.rdstate();\n+    test &= st01 == std::ios_base::goodbit;\n+  }\n+  \n+  close_num = fclose(f);\n+  test &= close_num == 0;\n+\n+  \n+#ifdef DEBUG_ASSERT\n+  assert(test);\n+#endif\n+\n+  return test;\n+}\n+\n+\n+int\n+main()\n+{\n+  test_01();\n+  return 0;\n+}\n+\n+\n+\n+"}]}