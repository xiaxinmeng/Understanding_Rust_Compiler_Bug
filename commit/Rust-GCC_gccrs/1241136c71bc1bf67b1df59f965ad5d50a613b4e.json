{"sha": "1241136c71bc1bf67b1df59f965ad5d50a613b4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0MTEzNmM3MWJjMWJmNjdiMWRmNTlmOTY1YWQ1ZDUwYTYxM2I0ZQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-02-22T10:50:49Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-02-22T10:50:49Z"}, "message": "[libgomp] In OpenACC offloading testing, be more explicit in what is supported, and what is not, or why not\n\n\tlibgomp/\n\t* testsuite/lib/libgomp.exp: Error out for unknown offload target.\n\t* testsuite/libgomp.oacc-c++/c++.exp: Likewise.  Report if\n\t\"offloading: supported, but hardware not accessible\".\n\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n\t* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.\n\nFrom-SVN: r269106", "tree": {"sha": "f3e5c383f4e173702f09e518e4acdb4918a15d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3e5c383f4e173702f09e518e4acdb4918a15d9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1241136c71bc1bf67b1df59f965ad5d50a613b4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1241136c71bc1bf67b1df59f965ad5d50a613b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1241136c71bc1bf67b1df59f965ad5d50a613b4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1241136c71bc1bf67b1df59f965ad5d50a613b4e/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68034b1bc2058fd3c78b0f583e718e8443346580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68034b1bc2058fd3c78b0f583e718e8443346580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68034b1bc2058fd3c78b0f583e718e8443346580"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "32bc21f50fda77bbe87ca9fccda5b11c06682252", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=1241136c71bc1bf67b1df59f965ad5d50a613b4e", "patch": "@@ -1,3 +1,11 @@\n+2019-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/lib/libgomp.exp: Error out for unknown offload target.\n+\t* testsuite/libgomp.oacc-c++/c++.exp: Likewise.  Report if\n+\t\"offloading: supported, but hardware not accessible\".\n+\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.\n+\n 2019-02-19  Chung-Lin Tang <cltang@codesourcery.com>\n \n \tPR c/87924"}, {"sha": "2392642c7d6379c9b049be4dedf03296847f4ec3", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=1241136c71bc1bf67b1df59f965ad5d50a613b4e", "patch": "@@ -58,6 +58,9 @@ foreach offload_target_openacc $offload_targets_s {\n \thsa {\n \t    continue\n \t}\n+\tdefault {\n+\t    error \"Unknown offload target: $offload_target_openacc\"\n+\t}\n     }\n     lappend offload_targets_s_openacc \"$offload_target_openacc\"\n }\n@@ -375,7 +378,7 @@ proc check_effective_target_openacc_nvidia_accel_configured { } {\n     return [is-effective-target lp64]\n }\n \n-# Return 1 if at least one nvidia board is present.\n+# Return 1 if at least one Nvidia GPU is accessible.\n \n proc check_effective_target_openacc_nvidia_accel_present { } {\n     return [check_runtime openacc_nvidia_accel_present {\n@@ -386,7 +389,7 @@ proc check_effective_target_openacc_nvidia_accel_present { } {\n     } \"\" ]\n }\n \n-# Return 1 if at least one nvidia board is present, and the nvidia device type\n+# Return 1 if at least one Nvidia GPU is accessible, and the nvidia device type\n # is selected by default by means of setting the environment variable\n # ACC_DEVICE_TYPE.\n "}, {"sha": "d0e5f42b88bdcd4394935e3babe1c2cba1611009", "filename": "libgomp/testsuite/libgomp.oacc-c++/c++.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp?ref=1241136c71bc1bf67b1df59f965ad5d50a613b4e", "patch": "@@ -88,7 +88,7 @@ if { $lang_test_file_found } {\n \t    nvidia {\n \t\tif { ![check_effective_target_openacc_nvidia_accel_present] } {\n \t\t    # Don't bother; execution testing is going to FAIL.\n-\t\t    untested \"$subdir $offload_target_openacc offloading\"\n+\t\t    untested \"$subdir $offload_target_openacc offloading: supported, but hardware not accessible\"\n \t\t    continue\n \t\t}\n \n@@ -101,7 +101,7 @@ if { $lang_test_file_found } {\n \t\tset acc_mem_shared 0\n \t    }\n \t    default {\n-\t\tset acc_mem_shared 0\n+\t\terror \"Unknown OpenACC device type: $offload_target_openacc\"\n \t    }\n \t}\n \tset tagopt \"$tagopt -DACC_MEM_SHARED=$acc_mem_shared\""}, {"sha": "77e852efaef7be2ff64715f479429fe2173529e9", "filename": "libgomp/testsuite/libgomp.oacc-c/c.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp?ref=1241136c71bc1bf67b1df59f965ad5d50a613b4e", "patch": "@@ -51,7 +51,7 @@ foreach offload_target_openacc $offload_targets_s_openacc {\n \tnvidia {\n \t    if { ![check_effective_target_openacc_nvidia_accel_present] } {\n \t\t# Don't bother; execution testing is going to FAIL.\n-\t\tuntested \"$subdir $offload_target_openacc offloading\"\n+\t\tuntested \"$subdir $offload_target_openacc offloading: supported, but hardware not accessible\"\n \t\tcontinue\n \t    }\n \n@@ -64,7 +64,7 @@ foreach offload_target_openacc $offload_targets_s_openacc {\n \t    set acc_mem_shared 0\n \t}\n \tdefault {\n-\t    set acc_mem_shared 0\n+\t    error \"Unknown OpenACC device type: $offload_target_openacc\"\n \t}\n     }\n     set tagopt \"$tagopt -DACC_MEM_SHARED=$acc_mem_shared\""}, {"sha": "a262a8a2c9703a7d9a81392daa64de33c4267ce7", "filename": "libgomp/testsuite/libgomp.oacc-fortran/fortran.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1241136c71bc1bf67b1df59f965ad5d50a613b4e/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp?ref=1241136c71bc1bf67b1df59f965ad5d50a613b4e", "patch": "@@ -76,14 +76,14 @@ if { $lang_test_file_found } {\n \t    nvidia {\n \t\tif { ![check_effective_target_openacc_nvidia_accel_present] } {\n \t\t    # Don't bother; execution testing is going to FAIL.\n-\t\t    untested \"$subdir $offload_target_openacc offloading\"\n+\t\t    untested \"$subdir $offload_target_openacc offloading: supported, but hardware not accessible\"\n \t\t    continue\n \t\t}\n \n \t\tset acc_mem_shared 0\n \t    }\n \t    default {\n-\t\tset acc_mem_shared 0\n+\t\terror \"Unknown OpenACC device type: $offload_target_openacc\"\n \t    }\n \t}\n \tset tagopt \"$tagopt -DACC_MEM_SHARED=$acc_mem_shared\""}]}