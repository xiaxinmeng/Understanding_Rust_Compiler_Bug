{"sha": "79dad081a1117381afd19a2f62438766a3bee859", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlkYWQwODFhMTExNzM4MWFmZDE5YTJmNjI0Mzg3NjZhM2JlZTg1OQ==", "commit": {"author": {"name": "David Ung", "email": "davidu@mips.com", "date": "2005-07-29T17:25:27Z"}, "committer": {"name": "David Ung", "email": "davidu@gcc.gnu.org", "date": "2005-07-29T17:25:27Z"}, "message": "mips.c (mips_cpu_info_table): Add 5kf to the table.\n\n* config/mips/mips.c (mips_cpu_info_table): Add 5kf to the table.\n(mips_rtx_cost_data): Add costs for 5kc and 5kf.\n* config/mips/mips.h (processor_type): Add PROCESSOR_5KF.\n* config/mips/mips.md (cpu): Add 5kf name.\n(includes): Includes 5k.md.\n* config/mips/5k.md: New DFA pipeline for the 5kc/5kf.\n* doc/invoke.texi (MIPS Options): Updated cpu name supported with\n-march flag.\n\nFrom-SVN: r102560", "tree": {"sha": "3b430ef3b3b488bc0171dd342af719c0bf136a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b430ef3b3b488bc0171dd342af719c0bf136a97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79dad081a1117381afd19a2f62438766a3bee859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79dad081a1117381afd19a2f62438766a3bee859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79dad081a1117381afd19a2f62438766a3bee859", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79dad081a1117381afd19a2f62438766a3bee859/comments", "author": null, "committer": null, "parents": [{"sha": "89e80dd49573d8eda808fb2a5dd09546329f8e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e80dd49573d8eda808fb2a5dd09546329f8e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e80dd49573d8eda808fb2a5dd09546329f8e82"}], "stats": {"total": 279, "additions": 273, "deletions": 6}, "files": [{"sha": "f63c42e742e1642e44b3bb8309dda179f08a4fdb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79dad081a1117381afd19a2f62438766a3bee859/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79dad081a1117381afd19a2f62438766a3bee859/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79dad081a1117381afd19a2f62438766a3bee859", "patch": "@@ -1,3 +1,14 @@\n+2005-07-29  David Ung  <davidu@mips.com>\n+\n+\t* config/mips/mips.c (mips_cpu_info_table): Add 5kf to the table.\n+\t(mips_rtx_cost_data): Add costs for 5kc and 5kf.\n+\t* config/mips/mips.h (processor_type): Add PROCESSOR_5KF.\n+\t* config/mips/mips.md (cpu): Add 5kf name.\n+\t(includes): Includes 5k.md.\n+\t* config/mips/5k.md: New DFA pipeline for the 5kc/5kf.\n+\t* doc/invoke.texi (MIPS Options): Updated cpu name supported with\n+\t-march flag.\t\n+\n 2005-07-29  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 22550"}, {"sha": "0fa588ac6dc5f9e544610b28a703c4101d61793a", "filename": "gcc/config/mips/5k.md", "status": "added", "additions": 230, "deletions": 0, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fconfig%2Fmips%2F5k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fconfig%2Fmips%2F5k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5k.md?ref=79dad081a1117381afd19a2f62438766a3bee859", "patch": "@@ -0,0 +1,230 @@\n+;; DFA-based pipeline descriptions for MIPS32 5K processor family\n+;; Contributed by David Ung (davidu@mips.com)\n+;;   and Nigel Stephens (nigel@mips.com)\n+;;\n+;; References:\n+;;   \"MIPS64 5K Processor Core Family Software User's Manual,\n+;;     Doc no: MD00012, Rev 2.09, Jan 28, 2005.\"\n+;;\n+;; 5Kc - Single issue with no floating point unit.\n+;; 5kf - Separate floating point pipe which can dual-issue with the\n+;;       integer pipe.\n+;;\n+;; Copyright (C) 2005 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to the\n+;; Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,\n+;; MA 02110-1301, USA.\n+\n+(define_automaton \"r5k_cpu, r5k_mdu, r5k_fpu\")\n+\n+;; Integer execution unit.\n+(define_cpu_unit \"r5k_ixu_arith\"       \"r5k_cpu\")\n+(define_cpu_unit \"r5k_ixu_mpydiv\"      \"r5k_mdu\")\n+(define_cpu_unit \"r5kf_fpu_arith\"      \"r5k_fpu\")\n+\n+(define_insn_reservation \"r5k_int_load\" 2\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"load\"))\n+  \"r5k_ixu_arith\")\n+\n+(define_insn_reservation \"r5k_int_prefetch\" 1\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"prefetch,prefetchx\"))\n+  \"r5k_ixu_arith\")\n+\n+(define_insn_reservation \"r5k_int_store\" 1\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"store\"))\n+  \"r5k_ixu_arith\")\n+\n+;; Divides\n+(define_insn_reservation \"r5k_int_divsi\" 34\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"!DI\")))\n+ \"r5k_ixu_arith+(r5k_ixu_mpydiv*34)\")\n+\n+(define_insn_reservation \"r5k_int_divdi\" 66\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"r5k_ixu_arith+(r5k_ixu_mpydiv*66)\")\n+\n+;; 32x32 multiply\n+;; 32x16 is faster, but there's no way to detect this\n+(define_insn_reservation \"r5k_int_mult\" 2\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (and (eq_attr \"type\" \"imul,imadd\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"r5k_ixu_arith+(r5k_ixu_mpydiv*2)\")\n+\n+;; 64x64 multiply\n+(define_insn_reservation \"r5k_int_mult_64\" 9\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (and (eq_attr \"type\" \"imul,imadd\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"r5k_ixu_arith+(r5k_ixu_mpydiv*2)\")\n+\n+;; 3 operand MUL 32x32\n+(define_insn_reservation \"r5k_int_mul\" 4\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (and (eq_attr \"type\" \"imul3\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"r5k_ixu_arith+(r5k_ixu_mpydiv*2)\")\n+\n+;; Move to HI/LO -> MADD/MSUB,MFHI/MFLO has a 1 cycle latency.\n+(define_insn_reservation \"r5k_int_mthilo\" 1\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"mthilo\"))\n+  \"r5k_ixu_arith+r5k_ixu_mpydiv\")\n+\n+;; Move from HI/LO -> integer operation has a 2 cycle latency.\n+(define_insn_reservation \"r5k_int_mfhilo\" 2\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"mfhilo\"))\n+  \"r5k_ixu_arith+r5k_ixu_mpydiv\")\n+\n+;; All other integer insns.\n+(define_insn_reservation \"r5k_int_alu\" 1\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"arith,condmove,shift,const,nop,slt\"))\n+  \"r5k_ixu_arith\")\n+\n+(define_insn_reservation \"r5k_int_branch\" 1\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"branch\"))\n+  \"r5k_ixu_arith\")\n+\n+;; JR/JALR always cause one pipeline bubble because of interlock.\n+(define_insn_reservation \"r5k_int_jump\" 2\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"jump,call\"))\n+  \"r5k_ixu_arith\")\n+\n+;; Any    -> JR/JALR (without dependency) : 1 clock issue delay\n+;; Any    -> JR/JALR (with dependency)    : 2 clock issue delay\n+;; load   -> JR/JALR (with dependency)    : 3 clock issue delay\n+;; mfhilo -> JR/JALR (with dependency)    : 3 clock issue delay\n+;; mul    -> JR/JALR (with dependency)    : 3 clock issue delay\n+(define_bypass 2 \"r5k_int_alu\"    \"r5k_int_jump\")\n+(define_bypass 3 \"r5k_int_load\"   \"r5k_int_jump\")\n+(define_bypass 3 \"r5k_int_mfhilo\" \"r5k_int_jump\")\n+(define_bypass 3 \"r5k_int_mul\"    \"r5k_int_jump\")\n+\n+;; Unknown or multi - single issue\n+(define_insn_reservation \"r5k_int_unknown\" 1\n+  (and (eq_attr \"cpu\" \"5kc,5kf\")\n+       (eq_attr \"type\" \"unknown,multi\"))\n+  \"r5k_ixu_arith+r5k_ixu_mpydiv\")\n+\n+\n+;; Floating Point Instructions\n+;; The 5Kf is a partial dual-issue cpu which can dual issue an integer\n+;; and floating-point instruction in the same cycle.\n+\n+;; fadd, fabs, fneg\n+(define_insn_reservation \"r5kf_fadd\" 4\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (eq_attr \"type\" \"fadd,fabs,fneg\"))\n+  \"r5kf_fpu_arith\")\n+\n+;; fmove, fcmove\n+(define_insn_reservation \"r5kf_fmove\" 4\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (eq_attr \"type\" \"fmove\"))\n+  \"r5kf_fpu_arith\")\n+\n+;; fload\n+(define_insn_reservation \"r5kf_fload\" 3\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (eq_attr \"type\" \"fpload,fpidxload\"))\n+  \"r5kf_fpu_arith\")\n+\n+;; fstore\n+(define_insn_reservation \"r5kf_fstore\" 1\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (eq_attr \"type\" \"fpstore\"))\n+  \"r5kf_fpu_arith\")\n+\n+;; fmul, fmadd\n+(define_insn_reservation \"r5kf_fmul_sf\" 4\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"r5kf_fpu_arith\")\n+\n+(define_insn_reservation \"r5kf_fmul_df\" 5\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"r5kf_fpu_arith*2\")\n+\n+;; fdiv, fsqrt, frsqrt\n+(define_insn_reservation \"r5kf_fdiv_sf\" 17\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (and (eq_attr \"type\" \"fdiv,fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"r5kf_fpu_arith*14\")\n+\n+(define_insn_reservation \"r5kf_fdiv_df\" 32\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (and (eq_attr \"type\" \"fdiv,fsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"r5kf_fpu_arith*29\")\n+\n+;; frsqrt\n+(define_insn_reservation \"r5kf_frsqrt_df\" 35\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (and (eq_attr \"type\" \"frsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"r5kf_fpu_arith*31\")\n+\n+;; fcmp\n+(define_insn_reservation \"r5kf_fcmp\" 2\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (eq_attr \"type\" \"fcmp\"))\n+  \"r5kf_fpu_arith\")\n+\n+;; fcmp -> movf.fmt & movt.fmt bypass (dependency must be on condition)\n+(define_bypass 1 \"r5kf_fcmp\" \"r5kf_fmove\")\n+\n+;; fcvt (cvt.d.s, cvt.[sd].[wl]\n+(define_insn_reservation \"r5kf_fcvt_d2s\" 4\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (and (eq_attr \"type\" \"fcvt\")\n+\t    (eq_attr \"cnv_mode\" \"I2S,I2D,S2D\")))\n+  \"r5kf_fpu_arith\")\n+\n+;; fcvt (cvt.s.d)\n+(define_insn_reservation \"r5kf_fcvt_s2d\" 6\n+  (and (eq_attr \"cpu\" \"5kc\")\n+       (and (eq_attr \"type\" \"fcvt\")\n+\t    (eq_attr \"cnv_mode\" \"D2S\")))\n+  \"r5kf_fpu_arith\")\n+\n+;; fcvt (cvt.[wl].[sd], etc)\n+(define_insn_reservation \"r5kf_fcvt_f2i\" 5\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (and (eq_attr \"type\" \"fcvt\")\n+\t    (eq_attr \"cnv_mode\" \"S2I,D2I\")))\n+  \"r5kf_fpu_arith\")\n+\n+;; fxfer (mfc1, mfhc1, mtc1, mthc1) - single issue\n+(define_insn_reservation \"r5kf_fxfer\" 2\n+  (and (eq_attr \"cpu\" \"5kf\")\n+       (eq_attr \"type\" \"xfer\"))\n+  \"r5k_ixu_arith+r5kf_fpu_arith\")"}, {"sha": "ba4efb37a13bf464a28ec917acfecd51c508ffae", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=79dad081a1117381afd19a2f62438766a3bee859", "patch": "@@ -748,6 +748,7 @@ const struct mips_cpu_info mips_cpu_info_table[] = {\n \n   /* MIPS64 */\n   { \"5kc\", PROCESSOR_5KC, 64 },\n+  { \"5kf\", PROCESSOR_5KF, 64 },\n   { \"20kc\", PROCESSOR_20KC, 64 },\n   { \"sb1\", PROCESSOR_SB1, 64 },\n   { \"sr71000\", PROCESSOR_SR71000, 64 },\n@@ -813,7 +814,26 @@ static struct mips_rtx_cost_data const mips_rtx_cost_data[PROCESSOR_MAX] =\n                        4            /* memory_latency */\n     },\n     { /* 5KC */\n-      DEFAULT_COSTS\n+      SOFT_FP_COSTS,\n+      COSTS_N_INSNS (4),            /* int_mult_si */\n+      COSTS_N_INSNS (11),           /* int_mult_di */\n+      COSTS_N_INSNS (36),           /* int_div_si */\n+      COSTS_N_INSNS (68),           /* int_div_di */\n+                       1,           /* branch_cost */\n+                       4            /* memory_latency */\n+    },\n+    { /* 5KF */\n+      COSTS_N_INSNS (4),            /* fp_add */\n+      COSTS_N_INSNS (4),            /* fp_mult_sf */\n+      COSTS_N_INSNS (5),            /* fp_mult_df */\n+      COSTS_N_INSNS (17),           /* fp_div_sf */\n+      COSTS_N_INSNS (32),           /* fp_div_df */\n+      COSTS_N_INSNS (4),            /* int_mult_si */\n+      COSTS_N_INSNS (11),           /* int_mult_di */\n+      COSTS_N_INSNS (36),           /* int_div_si */\n+      COSTS_N_INSNS (68),           /* int_div_di */\n+                       1,           /* branch_cost */\n+                       4            /* memory_latency */\n     },\n     { /* 20KC */\n       DEFAULT_COSTS"}, {"sha": "b68075a4fe08b17264ce0418bbf6c6c6230aae06", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=79dad081a1117381afd19a2f62438766a3bee859", "patch": "@@ -36,6 +36,7 @@ enum processor_type {\n   PROCESSOR_4KC,\n   PROCESSOR_4KP,\n   PROCESSOR_5KC,\n+  PROCESSOR_5KF,\n   PROCESSOR_20KC,\n   PROCESSOR_24K,\n   PROCESSOR_24KX,"}, {"sha": "b0ceff8dbe319b8a0fe5488b11e543d0078196f4", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=79dad081a1117381afd19a2f62438766a3bee859", "patch": "@@ -336,7 +336,7 @@\n ;; Attribute describing the processor.  This attribute must match exactly\n ;; with the processor_type enumeration in mips.h.\n (define_attr \"cpu\"\n-  \"r3000,4kc,4kp,5kc,20kc,24k,24kx,m4k,r3900,r6000,r4000,r4100,r4111,r4120,r4130,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,sb1,sr71000\"\n+  \"r3000,4kc,4kp,5kc,5kf,20kc,24k,24kx,m4k,r3900,r6000,r4000,r4100,r4111,r4120,r4130,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,sb1,sr71000\"\n   (const (symbol_ref \"mips_tune\")))\n \n ;; The type of hardware hazard associated with this instruction.\n@@ -571,6 +571,7 @@\n (define_cpu_unit \"imuldiv\" \"imuldiv\")\n \n (include \"4k.md\")\n+(include \"5k.md\")\n (include \"24k.md\")\n (include \"3000.md\")\n (include \"4000.md\")"}, {"sha": "f59ef6dc406c186384a23053a1ddd4034d12e7fe", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79dad081a1117381afd19a2f62438766a3bee859/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=79dad081a1117381afd19a2f62438766a3bee859", "patch": "@@ -9909,13 +9909,17 @@ The ISA names are:\n @samp{mips1}, @samp{mips2}, @samp{mips3}, @samp{mips4},\n @samp{mips32}, @samp{mips32r2}, and @samp{mips64}.\n The processor names are:\n-@samp{4kc}, @samp{4kp}, @samp{5kc}, @samp{20kc},\n+@samp{4kc}, @samp{4km}, @samp{4kp},\n+@samp{5kc}, @samp{5kf},\n+@samp{20kc},\n+@samp{24k}, @samp{24kc}, @samp{24kf}, @samp{24kx},\n @samp{m4k},\n-@samp{r2000}, @samp{r3000}, @samp{r3900}, @samp{r4000}, @samp{r4400},\n-@samp{r4600}, @samp{r4650}, @samp{r6000}, @samp{r8000}, @samp{rm7000},\n-@samp{rm9000},\n @samp{orion},\n+@samp{r2000}, @samp{r3000}, @samp{r3900}, @samp{r4000}, @samp{r4400},\n+@samp{r4600}, @samp{r4650}, @samp{r6000}, @samp{r8000},\n+@samp{rm7000}, @samp{rm9000},\n @samp{sb1},\n+@samp{sr71000},\n @samp{vr4100}, @samp{vr4111}, @samp{vr4120}, @samp{vr4130}, @samp{vr4300},\n @samp{vr5000}, @samp{vr5400} and @samp{vr5500}.\n The special value @samp{from-abi} selects the"}]}