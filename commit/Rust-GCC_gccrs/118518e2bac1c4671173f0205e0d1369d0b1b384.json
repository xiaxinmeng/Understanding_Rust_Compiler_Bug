{"sha": "118518e2bac1c4671173f0205e0d1369d0b1b384", "node_id": "C_kwDOANBUbNoAKDExODUxOGUyYmFjMWM0NjcxMTczZjAyMDVlMGQxMzY5ZDBiMWIzODQ", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-05-18T11:58:28Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-06-08T12:32:35Z"}, "message": "collector: Make visitors public\n\nMake all trivial visitor functions public so we could easily call the\ncollection of an ast's subtree from any node.\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-ast-collector.h: Make trivial visitors public.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "71d15a42a8ee5d9107450a7279dd7d75004e189a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71d15a42a8ee5d9107450a7279dd7d75004e189a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/118518e2bac1c4671173f0205e0d1369d0b1b384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118518e2bac1c4671173f0205e0d1369d0b1b384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/118518e2bac1c4671173f0205e0d1369d0b1b384", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118518e2bac1c4671173f0205e0d1369d0b1b384/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c0c0cb69ba2819839005216489eed6d43d27a19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c0c0cb69ba2819839005216489eed6d43d27a19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c0c0cb69ba2819839005216489eed6d43d27a19"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "91e49ca14962e970b178a1335f3aaf7770184005", "filename": "gcc/rust/ast/rust-ast-collector.h", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118518e2bac1c4671173f0205e0d1369d0b1b384/gcc%2Frust%2Fast%2Frust-ast-collector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118518e2bac1c4671173f0205e0d1369d0b1b384/gcc%2Frust%2Fast%2Frust-ast-collector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-collector.h?ref=118518e2bac1c4671173f0205e0d1369d0b1b384", "patch": "@@ -41,22 +41,6 @@ class TokenCollector : public ASTVisitor\n private:\n   std::vector<TokenPtr> &tokens;\n \n-  /**\n-   * Compatibility layer for using the visitor pattern on polymorphic classes\n-   * with a unified overload syntax. This allows us to call `visit` both on\n-   * types implementing `accept_vis` method and for classes for which the\n-   * `visit` method is directly implemented.\n-   */\n-  template <typename T> void visit (std::unique_ptr<T> &node)\n-  {\n-    node->accept_vis (*this);\n-  }\n-\n-  /**\n-   * @see visit<std::unique_ptr<T>>\n-   */\n-  template <typename T> void visit (T &node);\n-\n   /**\n    * Visit all items in given @collection, placing the separator in between but\n    * not at the end.\n@@ -106,6 +90,24 @@ class TokenCollector : public ASTVisitor\n   void visit_closure_common (ClosureExpr &expr);\n \n   void visit_loop_common (BaseLoopExpr &expr);\n+\n+public:\n+  /**\n+   * Compatibility layer for using the visitor pattern on polymorphic classes\n+   * with a unified overload syntax. This allows us to call `visit` both on\n+   * types implementing `accept_vis` method and for classes for which the\n+   * `visit` method is directly implemented.\n+   */\n+  template <typename T> void visit (std::unique_ptr<T> &node)\n+  {\n+    node->accept_vis (*this);\n+  }\n+\n+  /**\n+   * @see visit<std::unique_ptr<T>>\n+   */\n+  template <typename T> void visit (T &node);\n+\n   void visit (LoopLabel &label);\n \n   void visit (Literal &lit, Location locus = {});"}]}