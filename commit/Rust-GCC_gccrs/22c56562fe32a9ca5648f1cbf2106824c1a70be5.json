{"sha": "22c56562fe32a9ca5648f1cbf2106824c1a70be5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJjNTY1NjJmZTMyYTljYTU2NDhmMWNiZjIxMDY4MjRjMWE3MGJlNQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2001-12-15T15:36:14Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2001-12-15T15:36:14Z"}, "message": "regrename.c (copyprop_hardreg_forward): Do not keep register value data live across abnormal call or eh egdes.\n\n* regrename.c (copyprop_hardreg_forward): Do not keep register\nvalue data live across abnormal call or eh egdes.\n\nFrom-SVN: r48043", "tree": {"sha": "7670c8f7bf0879e43d4f1df6768fbf299eee65e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7670c8f7bf0879e43d4f1df6768fbf299eee65e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22c56562fe32a9ca5648f1cbf2106824c1a70be5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c56562fe32a9ca5648f1cbf2106824c1a70be5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c56562fe32a9ca5648f1cbf2106824c1a70be5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c56562fe32a9ca5648f1cbf2106824c1a70be5/comments", "author": null, "committer": null, "parents": [{"sha": "3a531a8b4e988c611b5412ff30bbb7ab26c4b02c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a531a8b4e988c611b5412ff30bbb7ab26c4b02c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a531a8b4e988c611b5412ff30bbb7ab26c4b02c"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "56fd127102bed5de90facca7b177b6bfae12fb28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c56562fe32a9ca5648f1cbf2106824c1a70be5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c56562fe32a9ca5648f1cbf2106824c1a70be5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22c56562fe32a9ca5648f1cbf2106824c1a70be5", "patch": "@@ -1,3 +1,8 @@\n+2001-12-15  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* regrename.c (copyprop_hardreg_forward): Do not keep register\n+\tvalue data live across abnormal call or eh egdes.\n+\n Sat Dec 15 08:29:45 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* expr.c (highest_pow2_factor, case INTEGER_CST): Return"}, {"sha": "3236a438287e88a8e543db4ec377ec17221ddb9b", "filename": "gcc/regrename.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c56562fe32a9ca5648f1cbf2106824c1a70be5/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c56562fe32a9ca5648f1cbf2106824c1a70be5/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=22c56562fe32a9ca5648f1cbf2106824c1a70be5", "patch": "@@ -1626,6 +1626,7 @@ copyprop_hardreg_forward ()\n       /* ??? Ought to use more intelligent queueing of blocks.  */\n       if (bb->pred\n \t  && ! bb->pred->pred_next \n+\t  && ! (bb->pred->flags & (EDGE_ABNORMAL_CALL | EDGE_EH))\n \t  && bb->pred->src->index != ENTRY_BLOCK\n \t  && bb->pred->src->index < b)\n \tall_vd[b] = all_vd[bb->pred->src->index];"}]}