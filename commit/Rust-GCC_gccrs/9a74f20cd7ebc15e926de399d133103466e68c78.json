{"sha": "9a74f20cd7ebc15e926de399d133103466e68c78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE3NGYyMGNkN2ViYzE1ZTkyNmRlMzk5ZDEzMzEwMzQ2NmU2OGM3OA==", "commit": {"author": {"name": "Balaji V. Iyer", "email": "balaji.v.iyer@intel.com", "date": "2014-01-09T13:37:41Z"}, "committer": {"name": "Balaji V. Iyer", "email": "bviyer@gcc.gnu.org", "date": "2014-01-09T13:37:41Z"}, "message": "re PR c++/59631 (ICE using _Cilk_spawn without -fcilkplus)\n\nFix for PR c++/59631.\n+++ gcc/cp/ChangeLog\n+2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+       PR c++/59631\n+       * parser.c (cp_parser_postfix_expression): Added a new if-statement\n+       and replaced an existing if-statement with else-if statement.\n+       Changed an existing error message wording to match the one from the C\n+       parser.\n+\n\n+++ gcc/testsuite/ChangeLog \n+2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+       PR c++/59631\n+       * gcc.dg/cilk-plus/cilk-plus.exp: Removed \"-fcilkplus\" from flags list.\n+       * g++.dg/cilk-plus/cilk-plus.exp: Likewise.\n+       * c-c++-common/cilk-plus/CK/spawnee_inline.c: Replaced second dg-option\n+       with dg-additional-options.\n+       * c-c++-common/cilk-plus/CK/varargs_test.c: Likewise.\n+       * c-c++-common/cilk-plus/CK/steal_check.c: Likewise.\n+       * c-c++-common/cilk-plus/CK/spawner_inline.c: Likewise.\n+       * c-c++-common/cilk-plus/CK/spawning_arg.c: Likewise.\n+       * c-c++-common/cilk-plus/CK/invalid_spawns.c: Added a dg-options tag.\n+       * c-c++-common/cilk-plus/CK/pr59631.c: New testcase.\n+\n\ngcc/c/ChangeLog\n+2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+       PR c++/59631\n+       * c-parser.c (c_parser_postfix_expression): Replaced consecutive if\n+       statements with if-elseif statements.\n+\n\nFrom-SVN: r206463", "tree": {"sha": "adb41b0b3fef66103c5e0819878c0ff1e538a137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adb41b0b3fef66103c5e0819878c0ff1e538a137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a74f20cd7ebc15e926de399d133103466e68c78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a74f20cd7ebc15e926de399d133103466e68c78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a74f20cd7ebc15e926de399d133103466e68c78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a74f20cd7ebc15e926de399d133103466e68c78/comments", "author": null, "committer": null, "parents": [{"sha": "63124c486dcd729695fc6ee33fc0ebe74379f589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63124c486dcd729695fc6ee33fc0ebe74379f589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63124c486dcd729695fc6ee33fc0ebe74379f589"}], "stats": {"total": 95, "additions": 73, "deletions": 22}, "files": [{"sha": "d3b338a5b8ea14d2b47aeab9f1db969a4ba50fb3", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,3 +1,9 @@\n+2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\tPR c++/59631\n+\t* c-parser.c (c_parser_postfix_expression): Replaced consecutive if\n+\tstatements with if-elseif statements.\n+\n 2014-01-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/57773"}, {"sha": "44902100bc6995934dde29656414603b8e4a81a6", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -7500,7 +7500,7 @@ c_parser_postfix_expression (c_parser *parser)\n \t      expr = c_parser_postfix_expression (parser);\n \t      expr.value = error_mark_node;\t      \n \t    }\n-\t  if (c_parser_peek_token (parser)->keyword == RID_CILK_SPAWN)\n+\t  else if (c_parser_peek_token (parser)->keyword == RID_CILK_SPAWN)\n \t    {\n \t      error_at (loc, \"consecutive %<_Cilk_spawn%> keywords \"\n \t\t\t\"are not permitted\");"}, {"sha": "9213de72d1b4698ef597e09badd4e03de0808402", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,3 +1,11 @@\n+2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\tPR c++/59631\n+\t* parser.c (cp_parser_postfix_expression): Added a new if-statement\n+\tand replaced an existing if-statement with else-if statement.\n+\tChanged an existing error message wording to match the one from the C\n+\tparser.\n+\n 2014-01-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/59614"}, {"sha": "c3016bcda4b68d75f2455779f399eda314348208", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -5803,7 +5803,13 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \tpostfix_expression = \n \t  cp_parser_postfix_expression (parser, false, false, \n \t\t\t\t\tfalse, false, &idk);\n-\tif (saved_in_statement & IN_CILK_SPAWN)\n+\tif (!flag_enable_cilkplus)\n+\t  {\n+\t    error_at (token->location, \"-fcilkplus must be enabled to use\"\n+\t\t      \" %<_Cilk_spawn%>\");\n+\t    cfun->calls_cilk_spawn = 0;\n+\t  }\n+\telse if (saved_in_statement & IN_CILK_SPAWN)\n \t  {\n \t    error_at (token->location, \"consecutive %<_Cilk_spawn%> keywords \"\n \t\t      \"are not permitted\");\n@@ -5830,8 +5836,8 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t  finish_expr_stmt (sync_expr);\n \t}\n       else\n-\terror_at (input_location, \"_Cilk_sync cannot be used without enabling \"\n-\t\t  \"Cilk Plus\");\n+\terror_at (token->location, \"-fcilkplus must be enabled to use\" \n+\t\t  \" %<_Cilk_sync%>\");\n       cp_lexer_consume_token (parser->lexer);\n       break;\n "}, {"sha": "52d55b8cf1702aa129604e4fe711c789ad9ef7a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,3 +1,17 @@\n+2014-01-09  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\tPR c++/59631\n+\t* gcc.dg/cilk-plus/cilk-plus.exp: Removed \"-fcilkplus\" from flags list.\n+\t* g++.dg/cilk-plus/cilk-plus.exp: Likewise.\n+\t* c-c++-common/cilk-plus/CK/spawnee_inline.c: Replaced second dg-option\n+\twith dg-additional-options.\n+\t* c-c++-common/cilk-plus/CK/varargs_test.c: Likewise.\n+\t* c-c++-common/cilk-plus/CK/steal_check.c: Likewise.\n+\t* c-c++-common/cilk-plus/CK/spawner_inline.c: Likewise.\n+\t* c-c++-common/cilk-plus/CK/spawning_arg.c: Likewise.\n+\t* c-c++-common/cilk-plus/CK/invalid_spawns.c: Added a dg-options tag.\n+\t* c-c++-common/cilk-plus/CK/pr59631.c: New testcase.\n+\n 2014-01-09  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/59715"}, {"sha": "ba9e6193627ebe7438f612130430438e1b83f210", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/invalid_spawns.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Finvalid_spawns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Finvalid_spawns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Finvalid_spawns.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-fcilkplus\" } */\n+\n extern int foo ();\n int bar = _Cilk_spawn foo (); /* { dg-error \"may only be used inside a function\" } */\n "}, {"sha": "389ee7c5dab0792a520871aac8e073fd5b42ec7d", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/pr59631.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr59631.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr59631.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr59631.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \" \" } */  \n+\n+/* Tests the errors when Cilk keywords are used without -fcilkplus.  */\n+\n+void foo()\n+{\n+    _Cilk_spawn foo(); /* { dg-error \"must be enabled to use\" } */\n+}\n+\n+void foo2 ()\n+{\n+  _Cilk_spawn foo (); /* { dg-error \"must be enabled to use\" } */\n+  _Cilk_sync; /* { dg-error \"must be enabled to use\" } */\n+}"}, {"sha": "233a371f140e6a54abf8b63c6f6f8a9a840352e7", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/spawnee_inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawnee_inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawnee_inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawnee_inline.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-options \"-fcilkplus -w\" } */\n-/* { dg-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-additional-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n \n #include <stdio.h>\n #include <stdlib.h>"}, {"sha": "55ec223abb3511d371173054c12db5e4584ffddd", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/spawner_inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawner_inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawner_inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawner_inline.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-options \"-fcilkplus\" } */\n-/* { dg-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-additional-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n \n #include <stdlib.h>\n #define DEFAULT_VALUE 30"}, {"sha": "95e6cab02c13de0af09a83bed3358398e9fe48ed", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/spawning_arg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawning_arg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawning_arg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawning_arg.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-options \"-fcilkplus\" } */\n-/* { dg-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-additional-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n \n void f0(volatile int *steal_flag)\n { "}, {"sha": "6e2876531c3a412b4f84d7782cc838d712d2977b", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/steal_check.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fsteal_check.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fsteal_check.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fsteal_check.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-options \"-fcilkplus\" } */\n-/* { dg-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-additional-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n \n // #include <cilk/cilk_api.h>\n extern void __cilkrts_set_param (char *, char *);"}, {"sha": "2714600244090f2aa48e48697478acdb686210ce", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/varargs_test.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fvarargs_test.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fvarargs_test.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fvarargs_test.c?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run  { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-options \"-fcilkplus\" } */\n-/* { dg-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-additional-options \"-lcilkrts\" { target { i?86-*-* x86_64-*-* } } } */\n \n #include <stdarg.h>\n #include <stdlib.h>"}, {"sha": "fc353f53e6298feb40e8c93c1b080b6e353d06a3", "filename": "gcc/testsuite/g++.dg/cilk-plus/cilk-plus.exp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -74,12 +74,12 @@ dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/CK/*.cc]] \" -g -O3\n dg-finish\n \n dg-init\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -O2 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -O3 -fcilkplus\" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -O2 \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -O3 \" \" \"\n dg-finish\n unset TEST_EXTRA_LIBS"}, {"sha": "c80baf956708e865eac8a2f5420a47aab13cba1a", "filename": "gcc/testsuite/gcc.dg/cilk-plus/cilk-plus.exp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a74f20cd7ebc15e926de399d133103466e68c78/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp?ref=9a74f20cd7ebc15e926de399d133103466e68c78", "patch": "@@ -51,13 +51,13 @@ dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -f\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -fcilkplus -O3 -std=c99\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -fcilkplus -g -O0 -std=c99\" \" \"\n \n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -std=c99 -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -ftree-vectorize -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -g -fcilkplus\" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -std=c99 \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -ftree-vectorize \" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -g \" \" \"\n if { [check_effective_target_lto] } {\n-    dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -flto -g -fcilkplus\" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -flto -g \" \" \"\n }\n \n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/SE/*.c]] \" -g\" \" \""}]}