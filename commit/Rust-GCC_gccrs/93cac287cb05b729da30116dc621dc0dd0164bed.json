{"sha": "93cac287cb05b729da30116dc621dc0dd0164bed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNjYWMyODdjYjA1YjcyOWRhMzAxMTZkYzYyMWRjMGRkMDE2NGJlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-05-21T13:32:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-05-21T13:32:47Z"}, "message": "i386.md (adddi_4_rex64, [...]): For operand2 -128 override length_immediate attribute to 1.\n\n\t* config/i386/i386.md (adddi_4_rex64, addsi_4, addhi_4): For\n\toperand2 -128 override length_immediate attribute to 1.\n\t* config/i386/predicates.md (constm128_operand): New predicate.\n\nFrom-SVN: r147767", "tree": {"sha": "462b35c2f312c8549bcf1cdb37764c922a222bda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/462b35c2f312c8549bcf1cdb37764c922a222bda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93cac287cb05b729da30116dc621dc0dd0164bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93cac287cb05b729da30116dc621dc0dd0164bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93cac287cb05b729da30116dc621dc0dd0164bed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93cac287cb05b729da30116dc621dc0dd0164bed/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a952487c45d701416fc353fef8eb540c9909e399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a952487c45d701416fc353fef8eb540c9909e399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a952487c45d701416fc353fef8eb540c9909e399"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "3c4c8823b1086bae0b9329f55e9504d57adbd14b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93cac287cb05b729da30116dc621dc0dd0164bed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93cac287cb05b729da30116dc621dc0dd0164bed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93cac287cb05b729da30116dc621dc0dd0164bed", "patch": "@@ -1,5 +1,9 @@\n 2009-05-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/i386.md (adddi_4_rex64, addsi_4, addhi_4): For\n+\toperand2 -128 override length_immediate attribute to 1.\n+\t* config/i386/predicates.md (constm128_operand): New predicate.\n+\n \t* config/i386/i386.c (memory_address_length): Handle %r12\n \tthe same as %rsp and %r13 the same as %rbp.  For %rsp and %rbp\n \talso check REGNO."}, {"sha": "596f7709e92ad7f039797d257c408e4f8277a01f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93cac287cb05b729da30116dc621dc0dd0164bed/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93cac287cb05b729da30116dc621dc0dd0164bed/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=93cac287cb05b729da30116dc621dc0dd0164bed", "patch": "@@ -6648,6 +6648,11 @@\n      (if_then_else (match_operand:DI 2 \"incdec_operand\" \"\")\n \t(const_string \"incdec\")\n \t(const_string \"alu\")))\n+   (set (attr \"length_immediate\")\n+      (if_then_else\n+\t(and (eq_attr \"type\" \"alu\") (match_operand 2 \"constm128_operand\" \"\"))\n+\t(const_string \"1\")\n+\t(const_string \"*\")))\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"*adddi_5_rex64\"\n@@ -7114,6 +7119,11 @@\n      (if_then_else (match_operand:SI 2 \"incdec_operand\" \"\")\n \t(const_string \"incdec\")\n \t(const_string \"alu\")))\n+   (set (attr \"length_immediate\")\n+      (if_then_else\n+\t(and (eq_attr \"type\" \"alu\") (match_operand 2 \"constm128_operand\" \"\"))\n+\t(const_string \"1\")\n+\t(const_string \"*\")))\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*addsi_5\"\n@@ -7397,6 +7407,11 @@\n      (if_then_else (match_operand:HI 2 \"incdec_operand\" \"\")\n \t(const_string \"incdec\")\n \t(const_string \"alu\")))\n+   (set (attr \"length_immediate\")\n+      (if_then_else\n+\t(and (eq_attr \"type\" \"alu\") (match_operand 2 \"constm128_operand\" \"\"))\n+\t(const_string \"1\")\n+\t(const_string \"*\")))\n    (set_attr \"mode\" \"SI\")])\n \n "}, {"sha": "c9921d65ec254a66284457cb026840dfd4f8498a", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93cac287cb05b729da30116dc621dc0dd0164bed/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93cac287cb05b729da30116dc621dc0dd0164bed/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=93cac287cb05b729da30116dc621dc0dd0164bed", "patch": "@@ -587,6 +587,11 @@\n   (and (match_code \"const_int\")\n        (match_test \"INTVAL (op) == 128\")))\n \n+;; Match exactly -128.\n+(define_predicate \"constm128_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test \"INTVAL (op) == -128\")))\n+\n ;; Match 2, 4, or 8.  Used for leal multiplicands.\n (define_predicate \"const248_operand\"\n   (match_code \"const_int\")"}]}