{"sha": "a1954f72c64181e9cd63945c12776e168f166bc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE5NTRmNzJjNjQxODFlOWNkNjM5NDVjMTI3NzZlMTY4ZjE2NmJjMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "seb@napoca", "date": "2010-02-11T19:42:38Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-11T19:42:38Z"}, "message": "re PR tree-optimization/42771 ([graphite] ICE: in graphite_loop_normal_form, at graphite-sese-to-poly.c (2))\n\nFix PR42771.\n\n2010-02-10  Sebastian Pop  <seb@napoca>\n\n\tPR middle-end/42771\n\t* graphite-clast-to-gimple.c (gloog): Call rename_sese_parameters.\n\t* graphite-clast-to-gimple.h (gloog): Update declaration.\n\t* graphite-poly.c (new_scop): Clear POLY_SCOP_P.\n\t* graphite-poly.h (struct poly_bb): Add missing comments.\n\t(struct scop): Add poly_scop_p field.\n\t(POLY_SCOP_P): New.\n\t* graphite-sese-to-poly.c (build_poly_scop): Set POLY_SCOP_P.\n\t* graphite.c (graphite_transform_loops): Build the polyhedral\n\trepresentation for each scop before code generation.\n\t* sese.c (rename_variables_in_operand): Removed.\n\t(rename_variables_in_expr): Return the renamed expression.\n\t(rename_sese_parameters): New.\n\t* sese.h (rename_sese_parameters): Declared.\n\n\t* gcc.dg/graphite/pr42771.c: New.\n\nFrom-SVN: r156711", "tree": {"sha": "9a93f6270813899e2fca5101fe3e5ca955c10cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a93f6270813899e2fca5101fe3e5ca955c10cee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1954f72c64181e9cd63945c12776e168f166bc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1954f72c64181e9cd63945c12776e168f166bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1954f72c64181e9cd63945c12776e168f166bc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1954f72c64181e9cd63945c12776e168f166bc3/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01e64c3dc777ec3515ca89cb279410edab2fc5c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e64c3dc777ec3515ca89cb279410edab2fc5c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e64c3dc777ec3515ca89cb279410edab2fc5c2"}], "stats": {"total": 136, "additions": 89, "deletions": 47}, "files": [{"sha": "41f05b0fbb55480b9db4d8b3aa330daae49b4b21", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -1,3 +1,22 @@\n+2010-02-10  Sebastian Pop  <seb@napoca>\n+\n+\tPR middle-end/42771\n+\t* graphite-clast-to-gimple.c (gloog): Call rename_sese_parameters.\n+\t* graphite-clast-to-gimple.h (gloog): Update declaration.\n+\t* graphite-poly.c (new_scop): Clear POLY_SCOP_P.\n+\t* graphite-poly.h (struct poly_bb): Add missing comments.\n+\t(struct scop): Add poly_scop_p field.\n+\t(POLY_SCOP_P): New.\n+\t* graphite-sese-to-poly.c (build_poly_scop): Set POLY_SCOP_P.\n+\t* graphite.c (graphite_transform_loops): Build the polyhedral\n+\trepresentation for each scop before code generation.\n+\t* sese.c (rename_variables_in_operand): Removed.\n+\t(rename_variables_in_expr): Return the renamed expression.\n+\t(rename_sese_parameters): New.\n+\t* sese.h (rename_sese_parameters): Declared.\n+\n+\t* gcc.dg/graphite/pr42771.c: New.\n+\n 2010-02-07  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* gcc.dg/graphite/block-0.c: Call abort for runtime test.  Always"}, {"sha": "424f5c681690682a532e14704d54fa88500a33de", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -1428,14 +1428,15 @@ create_params_index (htab_t index_table, CloogProgram *prog) {\n */\n \n bool\n-gloog (scop_p scop, htab_t bb_pbb_mapping)\n+gloog (scop_p scop, VEC (scop_p, heap) *scops, htab_t bb_pbb_mapping)\n {\n   VEC (tree, heap) *newivs = VEC_alloc (tree, heap, 10);\n   loop_p context_loop;\n   sese region = SCOP_REGION (scop);\n   ifsese if_region = NULL;\n   htab_t rename_map, newivs_index, params_index;\n   cloog_prog_clast pc;\n+  int i;\n \n   timevar_push (TV_GRAPHITE_CODE_GEN);\n   gloog_error = false;\n@@ -1481,6 +1482,10 @@ gloog (scop_p scop, htab_t bb_pbb_mapping)\n \t\t\t    if_region->true_region->exit);\n   scev_reset_htab ();\n   rename_nb_iterations (rename_map);\n+\n+  for (i = 0; VEC_iterate (scop_p, scops, i, scop); i++)\n+    rename_sese_parameters (rename_map, SCOP_REGION (scop));\n+\n   recompute_all_dominators ();\n   graphite_verify ();\n "}, {"sha": "ae1f35c7962abbf258d24faa2932f68030b55eaa", "filename": "gcc/graphite-clast-to-gimple.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-clast-to-gimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-clast-to-gimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.h?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -36,7 +36,7 @@ typedef struct bb_pbb_def\n   poly_bb_p pbb;\n }bb_pbb_def;\n \n-extern bool gloog (scop_p, htab_t);\n+extern bool gloog (scop_p, VEC (scop_p, heap) *, htab_t);\n extern cloog_prog_clast scop_to_clast (scop_p);\n extern void debug_clast_stmt (struct clast_stmt *);\n extern void print_clast_stmt (FILE *, struct clast_stmt *);"}, {"sha": "3e29b4bd4dad0ae2fc40068ce0811de10d2770f4", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -464,6 +464,8 @@ new_scop (void *region)\n   SCOP_ORIGINAL_SCHEDULE (scop) = NULL;\n   SCOP_TRANSFORMED_SCHEDULE (scop) = NULL;\n   SCOP_SAVED_SCHEDULE (scop) = NULL;\n+  POLY_SCOP_P (scop) = false;\n+\n   return scop;\n }\n "}, {"sha": "0a8204ec9a1dfc532998f6cd94448ca5d6ba410d", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -277,8 +277,10 @@ struct poly_scattering\n \n struct poly_bb\n {\n+  /* Pointer to a basic block or a statement in the compiler.  */\n   void *black_box;\n \n+  /* Pointer to the SCOP containing this PBB.  */\n   scop_p scop;\n \n   /* The iteration domain of this bb.\n@@ -1303,6 +1305,10 @@ struct scop\n   /* A hashtable of the data dependence relations for the original\n      scattering.  */\n   htab_t original_pddrs;\n+\n+  /* True when the scop has been converted to its polyhedral\n+     representation.  */\n+  bool poly_scop_p;\n };\n \n #define SCOP_BBS(S) (S->bbs)\n@@ -1312,6 +1318,7 @@ struct scop\n #define SCOP_ORIGINAL_SCHEDULE(S) (S->original_schedule)\n #define SCOP_TRANSFORMED_SCHEDULE(S) (S->transformed_schedule)\n #define SCOP_SAVED_SCHEDULE(S) (S->saved_schedule)\n+#define POLY_SCOP_P(S) (S->poly_scop_p)\n \n extern scop_p new_scop (void *);\n extern void free_scop (scop_p);"}, {"sha": "614232b118ccafc24e7356c9e1f4d80b9726a65f", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -2898,6 +2898,7 @@ build_poly_scop (scop_p scop)\n   scop_to_lst (scop);\n   build_scop_scattering (scop);\n   build_scop_drs (scop);\n+  POLY_SCOP_P (scop) = true;\n \n   return true;\n }"}, {"sha": "ba05cc74361b8a36209053861cf0a5d73c443488", "filename": "gcc/graphite.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -268,20 +268,13 @@ graphite_transform_loops (void)\n   bb_pbb_mapping = htab_create (10, bb_pbb_map_hash, eq_bb_pbb_map, free);\n \n   for (i = 0; VEC_iterate (scop_p, scops, i, scop); i++)\n-    {\n-      bool transform_done = false;\n-\n-      if (!build_poly_scop (scop))\n-\tcontinue;\n+    build_poly_scop (scop);\n \n-      if (apply_poly_transforms (scop))\n-\ttransform_done = gloog (scop, bb_pbb_mapping);\n-      else\n-\tcheck_poly_representation (scop);\n-\n-      if (transform_done)\n-\tneed_cfg_cleanup_p = true;\n-    }\n+  for (i = 0; VEC_iterate (scop_p, scops, i, scop); i++)\n+    if (POLY_SCOP_P (scop)\n+\t&& apply_poly_transforms (scop)\n+\t&& gloog (scop, scops, bb_pbb_mapping))\n+      need_cfg_cleanup_p = true;\n \n   htab_delete (bb_pbb_mapping);\n   free_scops (scops);"}, {"sha": "6fb406521ee1f650f913f7200c3482ffc43bfd70", "filename": "gcc/sese.c", "status": "modified", "additions": 27, "deletions": 32, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -526,49 +526,31 @@ set_rename (htab_t map, tree old_name, tree expr)\n   *slot = new_rename_map_elt (old_name, expr);\n }\n \n-static void rename_variables_in_expr (htab_t, tree);\n-\n-/* Renames the operand OP of expression T following the tuples\n-   (OLD_NAME, EXPR) in RENAME_MAP.  */\n-\n-static void\n-rename_variables_in_operand (htab_t rename_map, tree t, int op)\n-{\n-  tree operand = TREE_OPERAND (t, op);\n-\n-  if (TREE_CODE (operand) == SSA_NAME)\n-    {\n-      tree new_name = get_rename (rename_map, operand);\n-\n-      if (new_name != operand)\n-\tTREE_OPERAND (t, op) = new_name;\n-    }\n-  else\n-    rename_variables_in_expr (rename_map, operand);\n-}\n-\n /* Renames the expression T following the tuples (OLD_NAME, EXPR) in\n-   RENAME_MAP.  */\n+   the rename map M.  Returns the expression T after renaming.  */\n \n-static void\n-rename_variables_in_expr (htab_t rename_map, tree t)\n+static tree\n+rename_variables_in_expr (htab_t m, tree t)\n {\n   if (!t)\n-    return;\n+    return t;\n+\n+ if (TREE_CODE (t) == SSA_NAME)\n+   return get_rename (m, t);\n \n   switch (TREE_CODE_LENGTH (TREE_CODE (t)))\n     {\n     case 3:\n-      rename_variables_in_operand (rename_map, t, 2);\n+      TREE_OPERAND (t, 2) = rename_variables_in_expr (m, TREE_OPERAND (t, 2));\n \n     case 2:\n-      rename_variables_in_operand (rename_map, t, 1);\n+      TREE_OPERAND (t, 1) = rename_variables_in_expr (m, TREE_OPERAND (t, 1));\n \n     case 1:\n-      rename_variables_in_operand (rename_map, t, 0);\n+      TREE_OPERAND (t, 0) = rename_variables_in_expr (m, TREE_OPERAND (t, 0));\n \n     default:\n-      return;\n+      return t;\n     }\n }\n \n@@ -582,9 +564,22 @@ rename_nb_iterations (htab_t rename_map)\n   struct loop *loop;\n \n   FOR_EACH_LOOP (li, loop, 0)\n-    {\n-      rename_variables_in_expr (rename_map, loop->nb_iterations);\n-    }\n+    loop->nb_iterations = rename_variables_in_expr (rename_map,\n+\t\t\t\t\t\t    loop->nb_iterations);\n+}\n+\n+/* Renames all the parameters of SESE following the tuples (OLD_NAME,\n+   EXPR) in RENAME_MAP.  */\n+\n+void\n+rename_sese_parameters (htab_t rename_map, sese region)\n+{\n+  int i;\n+  tree p;\n+\n+  for (i = 0; VEC_iterate (tree, SESE_PARAMS (region), i, p); i++)\n+    VEC_replace (tree, SESE_PARAMS (region), i,\n+\t\t rename_variables_in_expr (rename_map, p));\n }\n \n /* Adjusts the phi nodes in the block BB for variables defined in"}, {"sha": "980ade9850b5da3a8a34bde3b8a4c35b3f62fa78", "filename": "gcc/sese.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fsese.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Fsese.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.h?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -264,6 +264,7 @@ extern hashval_t rename_map_elt_info (const void *);\n extern int eq_rename_map_elts (const void *, const void *);\n extern void set_rename (htab_t, tree, tree);\n extern void rename_nb_iterations (htab_t);\n+extern void rename_sese_parameters (htab_t, sese);\n \n /* Constructs a new SCEV_INFO_STR structure for VAR and INSTANTIATED_BELOW.  */\n "}, {"sha": "505fda7eb73341eb46363a7a5ce108645e77574e", "filename": "gcc/testsuite/gcc.dg/graphite/pr42771.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42771.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1954f72c64181e9cd63945c12776e168f166bc3/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42771.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42771.c?ref=a1954f72c64181e9cd63945c12776e168f166bc3", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-options \"-O3 -fgraphite-identity\" } */\n+\n+extern int *A;\n+extern int B[][4];\n+extern void bar(void);\n+\n+void foo(int im, int jm, int cond)\n+{\n+  int i, j;\n+  if (cond) {\n+    for (i = 0; i < 256; i++)\n+      A[i] = 0;\n+    bar();\n+  }\n+  for (i = 0; i < im; i++)\n+    for (j = 1; j < jm; j++)\n+      if (jm != 8 || j != jm >> 1)\n+        B[j][0] ^= B[j-1][0];\n+}"}]}