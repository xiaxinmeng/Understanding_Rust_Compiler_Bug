{"sha": "f0b741b6e73d812ddbe0c4f91154646cea567df3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBiNzQxYjZlNzNkODEyZGRiZTBjNGY5MTE1NDY0NmNlYTU2N2RmMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:54:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:54:45Z"}, "message": "[multiple changes]\n\n2012-10-29  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.adb (Derive_Progenitor_Subprograms): Disable small\n\toptimization in generic formal types.\n\n2012-10-29  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb, exp_ch3.adb: Add comments.\n\t* sem_prag.adb: Minor reformatting.\n\nFrom-SVN: r192926", "tree": {"sha": "39c2d1f1c4154be2dfbde9d20e3aa72419f8c537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39c2d1f1c4154be2dfbde9d20e3aa72419f8c537"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0b741b6e73d812ddbe0c4f91154646cea567df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b741b6e73d812ddbe0c4f91154646cea567df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b741b6e73d812ddbe0c4f91154646cea567df3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b741b6e73d812ddbe0c4f91154646cea567df3/comments", "author": null, "committer": null, "parents": [{"sha": "c18e9f65faeb5ea78af6d703c2e5b4e60de0485c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c18e9f65faeb5ea78af6d703c2e5b4e60de0485c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c18e9f65faeb5ea78af6d703c2e5b4e60de0485c"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "3d26adaaf7023df43182cff4bb1f4e2d5a963404", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f0b741b6e73d812ddbe0c4f91154646cea567df3", "patch": "@@ -1,3 +1,13 @@\n+2012-10-29  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Derive_Progenitor_Subprograms): Disable small\n+\toptimization in generic formal types.\n+\n+2012-10-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb, exp_ch3.adb: Add comments.\n+\t* sem_prag.adb: Minor reformatting.\n+\n 2012-10-29  Tristan Gingold  <gingold@adacore.com>\n \n \t* bindgen.adb (Gen_Output_File_Ada): Do not emit declaration for"}, {"sha": "5df52c1f510661b810169abab5defc00d08aec4a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=f0b741b6e73d812ddbe0c4f91154646cea567df3", "patch": "@@ -1537,10 +1537,9 @@ package body Exp_Ch3 is\n             Append_To (Args, Make_Identifier (Loc, Name_uMaster));\n          end if;\n \n-         if not Restricted_Profile then\n-\n-            --  No _Chain for restricted profile\n+         --  Add _Chain (not done in the restricted profile because ???)\n \n+         if not Restricted_Profile then\n             Append_To (Args, Make_Identifier (Loc, Name_uChain));\n          end if;\n "}, {"sha": "94a71ff4c1817d62312d40f44adece8a3d8ba670", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=f0b741b6e73d812ddbe0c4f91154646cea567df3", "patch": "@@ -911,16 +911,15 @@ package body Exp_Ch9 is\n    --  Start of processing for Build_Activation_Chain_Entity\n \n    begin\n-      --  Activation chain is never used in restricted profile\n+      --  Activation chain is never used in restricted profile (why not???)\n \n       if Restricted_Profile then\n          return;\n       end if;\n \n       Find_Enclosing_Context (N, Context, Context_Id, Decls);\n \n-      --  If an activation chain entity has not been declared already, create\n-      --  one.\n+      --  If activation chain entity has not been declared already, create one\n \n       if Nkind (Context) = N_Extended_Return_Statement\n         or else No (Activation_Chain_Entity (Context))"}, {"sha": "bb3937ea7e1e7079b22b2d5e9eb624b2d19c1805", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f0b741b6e73d812ddbe0c4f91154646cea567df3", "patch": "@@ -12804,16 +12804,18 @@ package body Sem_Ch3 is\n       --  done here because interfaces must be visible in the partial and\n       --  private view (RM 7.3(7.3/2)).\n \n-      --  Small optimization: This work is only required if the parent is\n-      --  abstract. If the tagged type is not abstract, it cannot have\n-      --  abstract primitives (the only entities in the list of primitives of\n-      --  non-abstract tagged types that can reference abstract primitives\n-      --  through its Alias attribute are the internal entities that have\n-      --  attribute Interface_Alias, and these entities are generated later\n-      --  by Add_Internal_Interface_Entities).\n+      --  Small optimization: This work is only required if the parent\n+      --  is abstract or a generic formal type. If the tagged type is not\n+      --  abstract, it cannot have abstract primitives (the only entities\n+      --  in the list of primitives of non-abstract tagged types that can\n+      --  reference abstract primitives through its Alias attribute are the\n+      --  internal entities that have attribute Interface_Alias, and these\n+      --  entities are generated later by Add_Internal_Interface_Entities).\n+      --  Need explanation for the generic case ???\n \n       if In_Private_Part (Current_Scope)\n-        and then Is_Abstract_Type (Parent_Type)\n+        and then (Is_Abstract_Type (Parent_Type)\n+                    or else Is_Generic_Type (Parent_Type))\n       then\n          Elmt := First_Elmt (Primitive_Operations (Tagged_Type));\n          while Present (Elmt) loop"}, {"sha": "05eb5022e9120035c89d0c47de625f5d2e63f89a", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=f0b741b6e73d812ddbe0c4f91154646cea567df3", "patch": "@@ -840,7 +840,7 @@ package body Sem_Disp is\n       Tagged_Type := Find_Dispatching_Type (Subp);\n \n       --  Ada 2005 (AI-345): Use the corresponding record (if available).\n-      --  Required because primitives of concurrent types are be attached\n+      --  Required because primitives of concurrent types are attached\n       --  to the corresponding record (not to the concurrent type).\n \n       if Ada_Version >= Ada_2005"}, {"sha": "af5506a0e136497f233f4155f85814f5feb1800f", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b741b6e73d812ddbe0c4f91154646cea567df3/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f0b741b6e73d812ddbe0c4f91154646cea567df3", "patch": "@@ -6763,11 +6763,13 @@ package body Sem_Prag is\n          -- Assert/Assert_And_Cut --\n          ---------------------------\n \n-         --  pragma Assert ([Check =>] Boolean_EXPRESSION\n-         --                 [, [Message =>] Static_String_EXPRESSION]);\n+         --  pragma Assert\n+         --    (   [Check => ]  Boolean_EXPRESSION\n+         --     [, [Message =>] Static_String_EXPRESSION]);\n \n-         --  pragma Assert_And_Cut ([Check =>] Boolean_EXPRESSION\n-         --                         [, [Message =>] Static_String_EXPRESSION]);\n+         --  pragma Assert_And_Cut\n+         --    (   [Check => ]  Boolean_EXPRESSION\n+         --     [, [Message =>] Static_String_EXPRESSION]);\n \n          when Pragma_Assert | Pragma_Assert_And_Cut => Assert : declare\n             Expr : Node_Id;\n@@ -6776,7 +6778,6 @@ package body Sem_Prag is\n          begin\n             if Prag_Id = Pragma_Assert then\n                Ada_2005_Pragma;\n-\n             else -- Pragma_Assert_And_Cut\n                GNAT_Pragma;\n             end if;"}]}