{"sha": "db16c1841a09f60bbdf2bb825e7e790a437f83c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIxNmMxODQxYTA5ZjYwYmJkZjJiYjgyNWU3ZTc5MGE0MzdmODNjNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-11-17T17:44:41Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-11-17T17:44:41Z"}, "message": "tree-tailcall.c (eliminate_tail_call): Be more careful about not disturbin profile of entry block.\n\n\n\t* tree-tailcall.c (eliminate_tail_call): Be more careful about not\n\tdisturbin profile of entry block.\n\nFrom-SVN: r254887", "tree": {"sha": "0b8ddecbdf0968c20f67c16dec7dae40527dba93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b8ddecbdf0968c20f67c16dec7dae40527dba93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db16c1841a09f60bbdf2bb825e7e790a437f83c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db16c1841a09f60bbdf2bb825e7e790a437f83c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db16c1841a09f60bbdf2bb825e7e790a437f83c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db16c1841a09f60bbdf2bb825e7e790a437f83c7/comments", "author": null, "committer": null, "parents": [{"sha": "3860f31db1e1b155532fb96a3e703b6b9e780753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3860f31db1e1b155532fb96a3e703b6b9e780753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3860f31db1e1b155532fb96a3e703b6b9e780753"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "5ab422c917ab7b11df27045a5fa99ec440800a87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db16c1841a09f60bbdf2bb825e7e790a437f83c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db16c1841a09f60bbdf2bb825e7e790a437f83c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db16c1841a09f60bbdf2bb825e7e790a437f83c7", "patch": "@@ -1,3 +1,8 @@\n+2017-11-17  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-tailcall.c (eliminate_tail_call): Be more careful about not\n+\tdisturbin profile of entry block.\n+\n 2017-11-17  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-fnsummary.c (estimate_node_size_and_time): Be more tolerant for"}, {"sha": "212519cdfd7236f6b3c258937ed02613f53d191d", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db16c1841a09f60bbdf2bb825e7e790a437f83c7/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db16c1841a09f60bbdf2bb825e7e790a437f83c7/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=db16c1841a09f60bbdf2bb825e7e790a437f83c7", "patch": "@@ -889,10 +889,18 @@ eliminate_tail_call (struct tailcall *t)\n \n   /* Number of executions of function has reduced by the tailcall.  */\n   e = single_succ_edge (gsi_bb (t->call_gsi));\n-  decrease_profile (EXIT_BLOCK_PTR_FOR_FN (cfun), e->count ());\n-  decrease_profile (ENTRY_BLOCK_PTR_FOR_FN (cfun), e->count ());\n+\n+  profile_count count = e->count ();\n+\n+  /* When profile is inconsistent and the recursion edge is more frequent\n+     than number of executions of functions, scale it down, so we do not end\n+     up with 0 executions of entry block.  */\n+  if (count >= ENTRY_BLOCK_PTR_FOR_FN (cfun)->count)\n+    count = ENTRY_BLOCK_PTR_FOR_FN (cfun)->count.apply_scale (7, 8);\n+  decrease_profile (EXIT_BLOCK_PTR_FOR_FN (cfun), count);\n+  decrease_profile (ENTRY_BLOCK_PTR_FOR_FN (cfun), count);\n   if (e->dest != EXIT_BLOCK_PTR_FOR_FN (cfun))\n-    decrease_profile (e->dest, e->count ());\n+    decrease_profile (e->dest, count);\n \n   /* Replace the call by a jump to the start of function.  */\n   e = redirect_edge_and_branch (single_succ_edge (gsi_bb (t->call_gsi)),"}]}