{"sha": "e7c54c8ecb1c2a97009cb003978fd128c837494a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdjNTRjOGVjYjFjMmE5NzAwOWNiMDAzOTc4ZmQxMjhjODM3NDk0YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-05-02T11:56:35Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-05-02T11:56:35Z"}, "message": "alpha.md (*add<mode>3_ieee): Merge to add<mode>3 using enabled attribute.\n\n\t* config/alpha/alpha.md (*add<mode>3_ieee): Merge to add<mode>3\n\tusing enabled attribute.\n\t(*sub<mode>3_ieee): Merge to sub<mode>3 using enabled attribute.\n\t(*mul<mode>3_ieee): Merge to mul<mode>3 using enabled attribute.\n\t(*div<mode>3_ieee): Merge to div<mode>3 using enabled attribute.\n\t(*sqrt<mode>2_ieee): Merge to sqrt<mode>2 using enabled attribute.\n\t(*fix_truncdfdi_ieee): Merge to *fix_truncdfdi2 using enabled attribute.\n\t(*fix_truncsfdi_ieee): Merge to *fix_truncsfdi2 using enabled attribute.\n\t(*floatdisf_ieee): Merge to floatdisf2 using enabled attribute.\n\t(*floatdidf_ieee): Merge to floatdidf2 using enabled attribute.\n\t(*truncdfsf2_ieee): Merge to truncdfsf2 using enabled attribute.\n\t(*cmpdf_ieee): Merge to *cmpdf_internal using enabled attribute.\n\nFrom-SVN: r247490", "tree": {"sha": "9ea0654ed91806d317e41c7ec063b3eb1af079de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ea0654ed91806d317e41c7ec063b3eb1af079de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7c54c8ecb1c2a97009cb003978fd128c837494a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c54c8ecb1c2a97009cb003978fd128c837494a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c54c8ecb1c2a97009cb003978fd128c837494a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c54c8ecb1c2a97009cb003978fd128c837494a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b1053b27063d02fd05b1dddb560dc0185412da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1053b27063d02fd05b1dddb560dc0185412da0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b1053b27063d02fd05b1dddb560dc0185412da0"}], "stats": {"total": 265, "additions": 108, "deletions": 157}, "files": [{"sha": "c5e07b56d41e68485eb8761a549153eee71eb702", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c54c8ecb1c2a97009cb003978fd128c837494a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c54c8ecb1c2a97009cb003978fd128c837494a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7c54c8ecb1c2a97009cb003978fd128c837494a", "patch": "@@ -1,3 +1,18 @@\n+2017-05-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.md (*add<mode>3_ieee): Merge to add<mode>3\n+\tusing enabled attribute.\n+\t(*sub<mode>3_ieee): Merge to sub<mode>3 using enabled attribute.\n+\t(*mul<mode>3_ieee): Merge to mul<mode>3 using enabled attribute.\n+\t(*div<mode>3_ieee): Merge to div<mode>3 using enabled attribute.\n+\t(*sqrt<mode>2_ieee): Merge to sqrt<mode>2 using enabled attribute.\n+\t(*fix_truncdfdi_ieee): Merge to *fix_truncdfdi2 using enabled attribute.\n+\t(*fix_truncsfdi_ieee): Merge to *fix_truncsfdi2 using enabled attribute.\n+\t(*floatdisf_ieee): Merge to floatdisf2 using enabled attribute.\n+\t(*floatdidf_ieee): Merge to floatdidf2 using enabled attribute.\n+\t(*truncdfsf2_ieee): Merge to truncdfsf2 using enabled attribute.\n+\t(*cmpdf_ieee): Merge to *cmpdf_internal using enabled attribute.\n+\n 2017-05-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_code_end): Use {FIRST,LAST}_INT_REG."}, {"sha": "8180656e5f758cc621f30b828eac97e4f9bf88e7", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 93, "deletions": 157, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c54c8ecb1c2a97009cb003978fd128c837494a/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c54c8ecb1c2a97009cb003978fd128c837494a/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=e7c54c8ecb1c2a97009cb003978fd128c837494a", "patch": "@@ -1671,27 +1671,21 @@\n   \"cpysn %R2,%R1,%0\"\n   [(set_attr \"type\" \"fadd\")])\n \n-(define_insn \"*add<mode>3_ieee\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=&f\")\n-\t(plus:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"%fG\")\n-\t\t    (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG\")))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"add<modesuffix>%/ %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fadd\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n-\n (define_insn \"add<mode>3\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=f\")\n-\t(plus:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"%fG\")\n-\t\t    (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG\")))]\n+  [(set (match_operand:FMODE 0 \"register_operand\" \"=f,&f\")\n+\t(plus:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"%fG,fG\")\n+\t\t    (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG,fG\")))]\n   \"TARGET_FP\"\n   \"add<modesuffix>%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n+   (set_attr \"trap_suffix\" \"u_su_sui\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_insn \"*adddf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -1725,27 +1719,21 @@\n   \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (PLUS, operands); DONE;\")\n \n-(define_insn \"*sub<mode>3_ieee\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=&f\")\n-\t(minus:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG\")\n-\t\t     (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG\")))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"sub<modesuffix>%/ %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fadd\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n-\n (define_insn \"sub<mode>3\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=f\")\n-\t(minus:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG\")\n-\t\t     (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG\")))]\n+  [(set (match_operand:FMODE 0 \"register_operand\" \"=f,&f\")\n+\t(minus:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG,fG\")\n+\t\t     (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG,fG\")))]\n   \"TARGET_FP\"\n   \"sub<modesuffix>%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n+   (set_attr \"trap_suffix\" \"u_su_sui\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_insn \"*subdf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -1791,27 +1779,21 @@\n   \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (MINUS, operands); DONE;\")\n \n-(define_insn \"*mul<mode>3_ieee\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=&f\")\n-\t(mult:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"%fG\")\n-\t\t    (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG\")))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"mul<modesuffix>%/ %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fmul\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n-\n (define_insn \"mul<mode>3\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=f\")\n-\t(mult:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"%fG\")\n-\t\t    (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG\")))]\n+  [(set (match_operand:FMODE 0 \"register_operand\" \"=f,&f\")\n+\t(mult:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"%fG,fG\")\n+\t\t    (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG,fG\")))]\n   \"TARGET_FP\"\n   \"mul<modesuffix>%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n+   (set_attr \"trap_suffix\" \"u_su_sui\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_insn \"*muldf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -1845,29 +1827,22 @@\n   \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (MULT, operands); DONE;\")\n \n-(define_insn \"*div<mode>3_ieee\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=&f\")\n-\t(div:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG\")\n-\t\t   (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG\")))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"div<modesuffix>%/ %R1,%R2,%0\"\n-  [(set_attr \"type\" \"fdiv\")\n-   (set_attr \"opsize\" \"<opmode>\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n-\n (define_insn \"div<mode>3\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=f\")\n-\t(div:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG\")\n-\t\t   (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG\")))]\n+  [(set (match_operand:FMODE 0 \"register_operand\" \"=f,&f\")\n+\t(div:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG,fG\")\n+\t\t   (match_operand:FMODE 2 \"reg_or_0_operand\" \"fG,fG\")))]\n   \"TARGET_FP\"\n   \"div<modesuffix>%/ %R1,%R2,%0\"\n   [(set_attr \"type\" \"fdiv\")\n    (set_attr \"opsize\" \"<opmode>\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n+   (set_attr \"trap_suffix\" \"u_su_sui\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_insn \"*divdf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -1912,27 +1887,21 @@\n   \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (DIV, operands); DONE;\")\n \n-(define_insn \"*sqrt<mode>2_ieee\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=&f\")\n-\t(sqrt:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG\")))]\n-  \"TARGET_FP && TARGET_FIX && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"sqrt<modesuffix>%/ %R1,%0\"\n-  [(set_attr \"type\" \"fsqrt\")\n-   (set_attr \"opsize\" \"<opmode>\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n-\n (define_insn \"sqrt<mode>2\"\n-  [(set (match_operand:FMODE 0 \"register_operand\" \"=f\")\n-\t(sqrt:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG\")))]\n+  [(set (match_operand:FMODE 0 \"register_operand\" \"=f,&f\")\n+\t(sqrt:FMODE (match_operand:FMODE 1 \"reg_or_0_operand\" \"fG,fG\")))]\n   \"TARGET_FP && TARGET_FIX\"\n   \"sqrt<modesuffix>%/ %R1,%0\"\n   [(set_attr \"type\" \"fsqrt\")\n    (set_attr \"opsize\" \"<opmode>\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n+   (set_attr \"trap_suffix\" \"u_su_sui\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n ;; Define conversion operators between DFmode and SImode, using the cvtql\n ;; instruction.  To allow combine et al to do useful things, we keep the\n@@ -1991,27 +1960,21 @@\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n-(define_insn \"*fix_truncdfdi_ieee\"\n-  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=&f\")\n-\t(match_operator:DI 2 \"fix_operator\" \n-\t  [(match_operand:DF 1 \"reg_or_0_operand\" \"fG\")]))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"cvt%-q%/ %R1,%0\"\n-  [(set_attr \"type\" \"fadd\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"c\")\n-   (set_attr \"trap_suffix\" \"v_sv_svi\")])\n-\n (define_insn \"*fix_truncdfdi2\"\n-  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=f\")\n+  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=f,&f\")\n \t(match_operator:DI 2 \"fix_operator\" \n-\t  [(match_operand:DF 1 \"reg_or_0_operand\" \"fG\")]))]\n+\t  [(match_operand:DF 1 \"reg_or_0_operand\" \"fG,fG\")]))]\n   \"TARGET_FP\"\n   \"cvt%-q%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"c\")\n-   (set_attr \"trap_suffix\" \"v_sv_svi\")])\n+   (set_attr \"trap_suffix\" \"v_sv_svi\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_expand \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"reg_no_subreg_operand\")\n@@ -2063,27 +2026,21 @@\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n \n-(define_insn \"*fix_truncsfdi_ieee\"\n-  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=&f\")\n-\t(match_operator:DI 2 \"fix_operator\" \n-\t  [(float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))]))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"cvt%-q%/ %R1,%0\"\n-  [(set_attr \"type\" \"fadd\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"c\")\n-   (set_attr \"trap_suffix\" \"v_sv_svi\")])\n-\n (define_insn \"*fix_truncsfdi2\"\n-  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=f\")\n+  [(set (match_operand:DI 0 \"reg_no_subreg_operand\" \"=f,&f\")\n \t(match_operator:DI 2 \"fix_operator\" \n-\t  [(float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"fG\"))]))]\n+\t  [(float_extend:DF (match_operand:SF 1 \"reg_or_0_operand\" \"fG,fG\"))]))]\n   \"TARGET_FP\"\n   \"cvt%-q%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"c\")\n-   (set_attr \"trap_suffix\" \"v_sv_svi\")])\n+   (set_attr \"trap_suffix\" \"v_sv_svi\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_expand \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"reg_no_subreg_operand\")\n@@ -2108,25 +2065,20 @@\n   \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (UNSIGNED_FIX, operands); DONE;\")\n \n-(define_insn \"*floatdisf_ieee\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n-\t(float:SF (match_operand:DI 1 \"reg_no_subreg_operand\" \"f\")))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"cvtq%,%/ %1,%0\"\n-  [(set_attr \"type\" \"fadd\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"sui\")])\n-\n (define_insn \"floatdisf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(float:SF (match_operand:DI 1 \"reg_no_subreg_operand\" \"f\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,&f\")\n+\t(float:SF (match_operand:DI 1 \"reg_no_subreg_operand\" \"f,f\")))]\n   \"TARGET_FP\"\n   \"cvtq%,%/ %1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"sui\")])\n+   (set_attr \"trap_suffix\" \"sui\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_insn_and_split \"*floatsisf2_ieee\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n@@ -2155,25 +2107,20 @@\n   operands[2] = gen_rtx_REG (DImode, REGNO (operands[0]));\n })\n \n-(define_insn \"*floatdidf_ieee\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n-\t(float:DF (match_operand:DI 1 \"reg_no_subreg_operand\" \"f\")))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"cvtq%-%/ %1,%0\"\n-  [(set_attr \"type\" \"fadd\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"sui\")])\n-\n (define_insn \"floatdidf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(float:DF (match_operand:DI 1 \"reg_no_subreg_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,&f\")\n+\t(float:DF (match_operand:DI 1 \"reg_no_subreg_operand\" \"f,f\")))]\n   \"TARGET_FP\"\n   \"cvtq%-%/ %1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"sui\")])\n+   (set_attr \"trap_suffix\" \"sui\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_insn_and_split \"*floatsidf2_ieee\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n@@ -2277,25 +2224,20 @@\n   \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FLOAT_EXTEND, operands); DONE;\")\n \n-(define_insn \"*truncdfsf2_ieee\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=&f\")\n-\t(float_truncate:SF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"cvt%-%,%/ %R1,%0\"\n-  [(set_attr \"type\" \"fadd\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n-\n (define_insn \"truncdfsf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(float_truncate:SF (match_operand:DF 1 \"reg_or_0_operand\" \"fG\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,&f\")\n+\t(float_truncate:SF (match_operand:DF 1 \"reg_or_0_operand\" \"fG,fG\")))]\n   \"TARGET_FP\"\n   \"cvt%-%,%/ %R1,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")\n    (set_attr \"round_suffix\" \"normal\")\n-   (set_attr \"trap_suffix\" \"u_su_sui\")])\n+   (set_attr \"trap_suffix\" \"u_su_sui\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_expand \"trunctfdf2\"\n   [(use (match_operand:DF 0 \"register_operand\"))\n@@ -2672,27 +2614,21 @@\n ;; we need to have variants that expand the arguments from SFmode\n ;; to DFmode.\n \n-(define_insn \"*cmpdf_ieee\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=&f\")\n-\t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n-\t\t\t   [(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")\n-\t\t\t    (match_operand:DF 3 \"reg_or_0_operand\" \"fG\")]))]\n-  \"TARGET_FP && alpha_fptm >= ALPHA_FPTM_SU\"\n-  \"cmp%-%C1%/ %R2,%R3,%0\"\n-  [(set_attr \"type\" \"fadd\")\n-   (set_attr \"trap\" \"yes\")\n-   (set_attr \"trap_suffix\" \"su\")])\n-\n (define_insn \"*cmpdf_internal\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,&f\")\n \t(match_operator:DF 1 \"alpha_fp_comparison_operator\"\n-\t\t\t   [(match_operand:DF 2 \"reg_or_0_operand\" \"fG\")\n-\t\t\t    (match_operand:DF 3 \"reg_or_0_operand\" \"fG\")]))]\n+\t\t\t   [(match_operand:DF 2 \"reg_or_0_operand\" \"fG,fG\")\n+\t\t\t    (match_operand:DF 3 \"reg_or_0_operand\" \"fG,fG\")]))]\n   \"TARGET_FP\"\n   \"cmp%-%C1%/ %R2,%R3,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")\n-   (set_attr \"trap_suffix\" \"su\")])\n+   (set_attr \"trap_suffix\" \"su\")\n+   (set (attr \"enabled\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"alpha_fptm < ALPHA_FPTM_SU\")\n+\t   ]\n+\t   (symbol_ref \"true\")))])\n \n (define_insn \"*cmpdf_ext1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")"}]}