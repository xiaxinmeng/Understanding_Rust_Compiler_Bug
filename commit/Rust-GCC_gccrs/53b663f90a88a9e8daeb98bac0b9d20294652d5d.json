{"sha": "53b663f90a88a9e8daeb98bac0b9d20294652d5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNiNjYzZjkwYTg4YTllOGRhZWI5OGJhYzBiOWQyMDI5NDY1MmQ1ZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-19T08:39:30Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-19T09:11:47Z"}, "message": "Fix typo in c-parser.c.\n\ngcc/c/ChangeLog:\n\n\t* c-parser.c: Fix typo.", "tree": {"sha": "8106c7b69dce55363f21fbfdbf35fa50d517e2a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8106c7b69dce55363f21fbfdbf35fa50d517e2a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53b663f90a88a9e8daeb98bac0b9d20294652d5d", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7DouMACgkQTcGC3A+n\nN4V6jggAlRcoGAG0PlkiXsS1P6+HqklJX3MRNrxENfNp77yS+v2b9zKx8dKltEhO\n410+IXa3+ez5JsgzaiFA0iI0A1KzkoV6va87N37FloPwYHZAywb6S6AVCXArFIrU\nSkWhaxFfx/xnVlueR6r8KOtoCGMdAppL0S/Ng8J2tLcUPmPTANXyzpPvxS0OzXRh\nj3ZrN07i27t4waCoeUeKyqB3sJAdqkL+wmibdhNZpXZ26V27sqHc0PTGD9fjU22k\niM/LT8s+UMSTE7+4mvWVjXvkejxLD3VdGoDGI0A6Otu4kx34IN+gaT1nkITXJpod\nJy4Ci5FxXDd5pSLVbi3kph8UdJrQJQ==\n=a2bZ\n-----END PGP SIGNATURE-----", "payload": "tree 8106c7b69dce55363f21fbfdbf35fa50d517e2a5\nparent 800bcc8c00f3ce940aa174845bb61faca9e85d36\nauthor Martin Liska <mliska@suse.cz> 1589877570 +0200\ncommitter Martin Liska <mliska@suse.cz> 1589879507 +0200\n\nFix typo in c-parser.c.\n\ngcc/c/ChangeLog:\n\n\t* c-parser.c: Fix typo.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b663f90a88a9e8daeb98bac0b9d20294652d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b663f90a88a9e8daeb98bac0b9d20294652d5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b663f90a88a9e8daeb98bac0b9d20294652d5d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "800bcc8c00f3ce940aa174845bb61faca9e85d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800bcc8c00f3ce940aa174845bb61faca9e85d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800bcc8c00f3ce940aa174845bb61faca9e85d36"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5d11e7e73c16c59961485dffaa95a4a29590df19", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b663f90a88a9e8daeb98bac0b9d20294652d5d/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b663f90a88a9e8daeb98bac0b9d20294652d5d/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=53b663f90a88a9e8daeb98bac0b9d20294652d5d", "patch": "@@ -73,7 +73,7 @@ along with GCC; see the file COPYING3.  If not see\n /* We need to walk over decls with incomplete struct/union/enum types\n    after parsing the whole translation unit.\n    In finish_decl(), if the decl is static, has incomplete\n-   struct/union/enum type, it is appeneded to incomplete_record_decls.\n+   struct/union/enum type, it is appended to incomplete_record_decls.\n    In c_parser_translation_unit(), we iterate over incomplete_record_decls\n    and report error if any of the decls are still incomplete.  */ \n "}]}