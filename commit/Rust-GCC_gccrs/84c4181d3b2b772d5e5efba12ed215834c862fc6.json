{"sha": "84c4181d3b2b772d5e5efba12ed215834c862fc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRjNDE4MWQzYjJiNzcyZDVlNWVmYmExMmVkMjE1ODM0Yzg2MmZjNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-22T13:47:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-22T13:47:23Z"}, "message": "[multiple changes]\n\n2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Do not perform type layout within\n\ta generic unit.\n\n2012-02-22  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* init.c (__gnat_error_handler) [Linux]: Map SIGBUS to\n\tStorage_Error.\n\n2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Expand_N_Assignment_Statement): Reject an\n\tassignment to a classwide type whose type is limited, as\n\tcan happen in an instantiation in programs that run afoul or\n\tAI05-0087.\n\nFrom-SVN: r184471", "tree": {"sha": "8aa5baea8ab81c655c592aaedb0bd67070fd490d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8aa5baea8ab81c655c592aaedb0bd67070fd490d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84c4181d3b2b772d5e5efba12ed215834c862fc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c4181d3b2b772d5e5efba12ed215834c862fc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c4181d3b2b772d5e5efba12ed215834c862fc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c4181d3b2b772d5e5efba12ed215834c862fc6/comments", "author": null, "committer": null, "parents": [{"sha": "bbd6a014640b668d38004deb8f647303e2347ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd6a014640b668d38004deb8f647303e2347ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbd6a014640b668d38004deb8f647303e2347ac5"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "8204c0401db2315ccad538de81d1f1511fb60c65", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c4181d3b2b772d5e5efba12ed215834c862fc6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c4181d3b2b772d5e5efba12ed215834c862fc6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=84c4181d3b2b772d5e5efba12ed215834c862fc6", "patch": "@@ -1,3 +1,21 @@\n+2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Do not perform type layout within\n+\ta generic unit.\n+\n+2012-02-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* init.c (__gnat_error_handler) [Linux]: Map SIGBUS to\n+\tStorage_Error.\n+\n+2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_Assignment_Statement): Reject an\n+\tassignment to a classwide type whose type is limited, as\n+\tcan happen in an instantiation in programs that run afoul or\n+\tAI05-0087.\n+\n+\n 2012-02-17  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch6.adb (Legal_Copy): If layout is not"}, {"sha": "7eb224d0f079d0c45d532ceb65da613bb7cc5e0e", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c4181d3b2b772d5e5efba12ed215834c862fc6/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c4181d3b2b772d5e5efba12ed215834c862fc6/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=84c4181d3b2b772d5e5efba12ed215834c862fc6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,6 +28,7 @@ with Atree;    use Atree;\n with Checks;   use Checks;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n+with Errout;   use Errout;\n with Exp_Aggr; use Exp_Aggr;\n with Exp_Ch6;  use Exp_Ch6;\n with Exp_Ch7;  use Exp_Ch7;\n@@ -2086,6 +2087,18 @@ package body Exp_Ch5 is\n                          and then\n                            not Restriction_Active (No_Dispatching_Calls))\n             then\n+               if Is_Limited_Type (Typ) then\n+\n+                  --  This can happen in an instance when the formal is an\n+                  --  extension of a limited interface, and the actual is\n+                  --  limited. This is an error according to AI05-0087, but\n+                  --  is not caught at the point of instantiation in earlier\n+                  --  versions.\n+\n+                  Error_Msg_N (\"assignment not available on limited type\", N);\n+                  return;\n+               end if;\n+\n                --  Fetch the primitive op _assign and proper type to call it.\n                --  Because of possible conflicts between private and full view,\n                --  fetch the proper type directly from the operation profile."}, {"sha": "15bd6e075e3adfe2bc9e6735612a57831160ad55", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c4181d3b2b772d5e5efba12ed215834c862fc6/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c4181d3b2b772d5e5efba12ed215834c862fc6/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=84c4181d3b2b772d5e5efba12ed215834c862fc6", "patch": "@@ -4407,10 +4407,12 @@ package body Freeze is\n          --  the size and alignment values. This processing is not required for\n          --  generic types, since generic types do not play any part in code\n          --  generation, and so the size and alignment values for such types\n-         --  are irrelevant.\n+         --  are irrelevant. Ditto for types declared within a generic unit,\n+         --  which may have components that depend on generic parameters, and\n+         --  that will be recreated in an instance.\n \n-         if Is_Generic_Type (E) then\n-            return Result;\n+         if Inside_A_Generic then\n+            null;\n \n          --  Otherwise we call the layout procedure\n "}, {"sha": "c2fd46b893fc43df19a980e2d2b0b4a97a697383", "filename": "gcc/ada/init.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c4181d3b2b772d5e5efba12ed215834c862fc6/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c4181d3b2b772d5e5efba12ed215834c862fc6/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=84c4181d3b2b772d5e5efba12ed215834c862fc6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2012, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -661,8 +661,8 @@ __gnat_error_handler (int sig, siginfo_t *si ATTRIBUTE_UNUSED, void *ucontext)\n       break;\n \n     case SIGBUS:\n-      exception = &constraint_error;\n-      msg = \"SIGBUS\";\n+      exception = &storage_error;\n+      msg = \"SIGBUS: possible stack overflow\";\n       break;\n \n     case SIGFPE:"}]}