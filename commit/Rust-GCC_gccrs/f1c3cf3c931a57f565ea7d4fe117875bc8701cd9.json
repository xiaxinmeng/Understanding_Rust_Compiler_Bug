{"sha": "f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFjM2NmM2M5MzFhNTdmNTY1ZWE3ZDRmZTExNzg3NWJjODcwMWNkOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-02-10T21:48:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-02-10T21:48:35Z"}, "message": "PR c++/42983, core issue 906\n\n\tPR c++/42983, core issue 906\n\t* method.c (defaultable_fn_check): Check virtualness.\n\t* include/std/thread (~_Impl_base): Move default out of line.\n\t* libsupc++/nested_exception.h (~nested_exception): Likewise.\n\nFrom-SVN: r156672", "tree": {"sha": "1a4635e30a19420754667446c235f2ef0f178b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a4635e30a19420754667446c235f2ef0f178b88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a79ff3be3d08ef53b5b6ca9a0adb7fc84ebdb19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a79ff3be3d08ef53b5b6ca9a0adb7fc84ebdb19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a79ff3be3d08ef53b5b6ca9a0adb7fc84ebdb19"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "11ec213bc8a640294e8d04703204ddd2d136dada", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -1,3 +1,8 @@\n+2010-02-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42983, core issue 906\n+\t* method.c (defaultable_fn_check): Check virtualness.\n+\n 2010-02-10  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/43016"}, {"sha": "ccc977d9df3c2545ef8a9f2a35c70cc91ded0c12", "filename": "gcc/cp/method.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -1069,6 +1069,9 @@ defaultable_fn_check (tree fn)\n \t  if (TYPE_RAISES_EXCEPTIONS (TREE_TYPE (fn)))\n \t    error (\"function %q+D defaulted on its first declaration \"\n \t\t   \"must not have an exception-specification\", fn);\n+\t  if (DECL_VIRTUAL_P (fn))\n+\t    error (\"%qD declared virtual cannot be defaulted in the class \"\n+\t\t   \"body\", fn);\n \t}\n       else if (!processing_template_decl)\n \tdefaulted_late_check (fn);"}, {"sha": "1ddd79182957c0612f10e68123cafe45e259753c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -1,5 +1,9 @@\n 2010-02-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/42983, core issue 906\n+\t* g++.dg/cpp0x/defaulted15.C: Add virtualness test.\n+\t* g++.dg/cpp0x/defaulted9.C: Move virtual default outside class.\n+\n \tPR c++/43016\n \t* g++.dg/cpp0x/lambda/lambda-conv.C: Test for weakness.\n "}, {"sha": "b54cedb0bccb093643d2f9295e22a36aaa414f41", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted15.C", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -41,3 +41,8 @@ struct G: public F\n   // Can't be const because F copy ctor isn't.\n   G(const G&) = default;\t// { dg-error \"const\" }\n };\n+\n+struct H\n+{\n+  virtual ~H() = default;\t// { dg-error \"declared virtual\" }\n+};"}, {"sha": "1e5e2cbf9fbc5d8f526af19d9ceaf252971c8d49", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted9.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted9.C?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -4,9 +4,11 @@\n struct _Impl_base\n {\n   _Impl_base() = default;\n-  virtual ~_Impl_base() = default;\n+  virtual ~_Impl_base();\n };\n \n+inline _Impl_base::~_Impl_base() = default;\n+\n template<typename _Tp>\n class _Impl : public _Impl_base\n { };"}, {"sha": "be668b755875b84105eb8e369ec62f9c254ecd69", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -1,3 +1,11 @@\n+2010-02-10  Jason Merrill  <jason@redhat.com>\n+\n+\tCore issue 906\n+\t* include/std/thread (~_Impl_base): Move defaulted dtor out of line.\n+\t* libsupc++/nested_exception.h (~nested_exception): Likewise.\n+\t* testsuite/18_support/nested_exception/throw_with_nested.cc: Likewise.\n+\t* testsuite/18_support/nested_exception/rethrow_if_nested.cc: Likewise.\n+\n 2010-02-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/tr1/hashtable.h: Fold in include/tr1_impl/hashtable.h"}, {"sha": "628c34a7f98b27230b21172c0986aaa99fbeca63", "filename": "libstdc++-v3/include/std/thread", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -97,7 +97,7 @@ namespace std\n     {\n       __shared_base_type\t_M_this_ptr;\n \n-      virtual ~_Impl_base() = default;\n+      virtual ~_Impl_base();\n \n       virtual void _M_run() = 0;\n     };\n@@ -193,6 +193,8 @@ namespace std\n       }\n   };\n \n+  inline thread::_Impl_base::~_Impl_base() = default;\n+\n   inline void\n   swap(thread& __x, thread& __y)\n   { __x.swap(__y); }"}, {"sha": "713c33433e0a1b45c7a2434a6d448f5ca85fe4e8", "filename": "libstdc++-v3/libsupc++/nested_exception.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnested_exception.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnested_exception.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnested_exception.h?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -63,7 +63,7 @@ namespace std\n \n     nested_exception& operator=(const nested_exception&) = default;\n \n-    virtual ~nested_exception() = default;\n+    virtual ~nested_exception();\n \n     void\n     rethrow_nested() const __attribute__ ((__noreturn__))\n@@ -74,6 +74,8 @@ namespace std\n     { return _M_ptr; }\n   };\n \n+  inline nested_exception::~nested_exception() = default;\n+\n   template<typename _Except>\n     struct _Nested_exception : public _Except, public nested_exception\n     {"}, {"sha": "ec8d172c400e0d15fd010c251d4332ef1c4f9005", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/rethrow_if_nested.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_if_nested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_if_nested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Frethrow_if_nested.cc?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -23,7 +23,8 @@\n \n struct derived : std::nested_exception { };\n \n-struct base { virtual ~base() = default; };\n+struct base { virtual ~base(); };\n+inline base::~base() = default;\n \n struct derived2 : base, std::nested_exception { };\n "}, {"sha": "c846d0944fbd053c1edd6829db278c2b4d2e9722", "filename": "libstdc++-v3/testsuite/18_support/nested_exception/throw_with_nested.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c3cf3c931a57f565ea7d4fe117875bc8701cd9/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnested_exception%2Fthrow_with_nested.cc?ref=f1c3cf3c931a57f565ea7d4fe117875bc8701cd9", "patch": "@@ -23,7 +23,8 @@\n \n struct derived : std::nested_exception { };\n \n-struct not_derived { virtual ~not_derived() = default; };\n+struct not_derived { virtual ~not_derived(); };\n+inline not_derived::~not_derived() = default;\n \n void test01() \n {"}]}