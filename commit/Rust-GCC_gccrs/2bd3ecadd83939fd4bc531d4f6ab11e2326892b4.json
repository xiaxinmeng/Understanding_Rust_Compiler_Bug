{"sha": "2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkM2VjYWRkODM5MzlmZDRiYzUzMWQ0ZjZhYjExZTIzMjY4OTJiNA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-03-19T20:34:10Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-03-19T20:34:10Z"}, "message": "c-common.h (c_dump_tree), [...]): Change return type from 'int' to 'bool'.\n\n(gcc)\n\t* c-common.h (c_dump_tree), c-dump.c (c_dump_tree),\n\tlanghooks-def.h (lhd_tree_dump_dump_tree),\n\tlanghooks.c (lhd_tree_dump_dump_tree), langhooks.h (*dump_tree):\n\tChange return type from 'int' to 'bool'.  Replace 0 and 1 with\n\ttrue and false in return statements.\n(cp)\n\t* dump.c (cp_dump_tree), cp-tree.h (cp_dump_tree): Change return\n\ttype from 'int' to 'bool'. Replace 0 and 1 with true and false in\n\treturn statements.\n(java)\n\t* lang.c (java_dump_tree): Change return type from 'int' to 'bool'.\n\tReplace 0 and 1 with true and false in return statements.\n\nFrom-SVN: r64596", "tree": {"sha": "f55a99d28f04841642f126e415df18047f0526cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f55a99d28f04841642f126e415df18047f0526cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/comments", "author": null, "committer": null, "parents": [{"sha": "784fb70e84d78a83a6599824b8b5e44eb85ba633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/784fb70e84d78a83a6599824b8b5e44eb85ba633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/784fb70e84d78a83a6599824b8b5e44eb85ba633"}], "stats": {"total": 73, "additions": 46, "deletions": 27}, "files": [{"sha": "7a8272c86e66fec6ec974c5cd33f821354870905", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -1,3 +1,11 @@\n+2003-03-19  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* c-common.h (c_dump_tree), c-dump.c (c_dump_tree),\n+\tlanghooks-def.h (lhd_tree_dump_dump_tree),\n+\tlanghooks.c (lhd_tree_dump_dump_tree), langhooks.h (*dump_tree):\n+\tChange return type from 'int' to 'bool'.  Replace 0 and 1 with\n+\ttrue and false in return statements.\n+\n 2003-03-19  Kevin Buettner  <kevinb@redhat.com>\n \n \t* dwarf2out.c (DWARF_INITIAL_LENGTH_SIZE): Define."}, {"sha": "b174f58e44bf0f1ad5c555820dc72f79eee937cf", "filename": "gcc/c-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -1281,7 +1281,7 @@ struct c_fileinfo\n struct c_fileinfo *get_fileinfo\t\t\tPARAMS ((const char *));\n extern void dump_time_statistics\t\tPARAMS ((void));\n \n-extern int c_dump_tree\t\t\t\tPARAMS ((void *, tree));\n+extern bool c_dump_tree\t\t\t\tPARAMS ((void *, tree));\n \n extern void pch_init\t\t\t\tPARAMS ((void));\n extern int c_common_valid_pch\t\t\tPARAMS ((cpp_reader *pfile,"}, {"sha": "7f3464b38a03d7d106fe9c1fb33a43284371bc10", "filename": "gcc/c-dump.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fc-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fc-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-dump.c?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -49,7 +49,7 @@ dump_next_stmt (di, t)\n \n /* Dump any C-specific tree codes and attributes of common codes.  */\n \n-int\n+bool\n c_dump_tree (dump_info, t)\n      void *dump_info;\n      tree t;\n@@ -194,5 +194,5 @@ c_dump_tree (dump_info, t)\n       break;\n     }\n \n-  return 0;\n+  return false;\n }"}, {"sha": "d5864cd7dea06aef5d6815380b2c98844547b57f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -1,3 +1,9 @@\n+2003-03-19  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* dump.c (cp_dump_tree), cp-tree.h (cp_dump_tree): Change return\n+\ttype from 'int' to 'bool'. Replace 0 and 1 with true and false in\n+\treturn statements.\n+\n 2003-03-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/8316, c++/9315, c++/10136"}, {"sha": "f8ded19f7c7299878905ba95e15c57f74984e485", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -4407,7 +4407,7 @@ extern tree mangle_guard_variable               (tree);\n extern tree mangle_ref_init_variable            (tree);\n \n /* in dump.c */\n-extern int cp_dump_tree                         (void *, tree);\n+extern bool cp_dump_tree                         (void *, tree);\n \n /* -- end of C++ */\n "}, {"sha": "7f73a3085e3e38f52471c32fbd8f1bac3258b12f", "filename": "gcc/cp/dump.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fcp%2Fdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fcp%2Fdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdump.c?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -202,7 +202,7 @@ dump_op (dump_info_p di, tree t)\n   }\n }\n \n-int\n+bool\n cp_dump_tree (void* dump_info, tree t)\n {\n   enum tree_code code;\n@@ -223,17 +223,17 @@ cp_dump_tree (void* dump_info, tree t)\n       if (IDENTIFIER_OPNAME_P (t))\n \t{\n \t  dump_string (di, \"operator\");\n-\t  return 1;\n+\t  return true;\n \t}\n       else if (IDENTIFIER_TYPENAME_P (t))\n \t{\n \t  dump_child (\"tynm\", TREE_TYPE (t));\n-\t  return 1;\n+\t  return true;\n \t}\n       else if (t == anonymous_namespace_name)\n \t{\n \t  dump_string (di, \"unnamed\");\n-\t  return 1;\n+\t  return true;\n \t}\n       break;\n \n@@ -243,7 +243,7 @@ cp_dump_tree (void* dump_info, tree t)\n \t  dump_string (di, \"ptrmem\");\n \t  dump_child (\"ptd\", TYPE_PTRMEM_POINTED_TO_TYPE (t));\n \t  dump_child (\"cls\", TYPE_PTRMEM_CLASS_TYPE (t));\n-\t  return 1;\n+\t  return true;\n \t}\n       break;\n \n@@ -254,15 +254,15 @@ cp_dump_tree (void* dump_info, tree t)\n \t  dump_string (di, \"ptrmem\");\n \t  dump_child (\"ptd\", TYPE_PTRMEM_POINTED_TO_TYPE (t));\n \t  dump_child (\"cls\", TYPE_PTRMEM_CLASS_TYPE (t));\n-\t  return 1;\n+\t  return true;\n \t}\n \n       /* Is it a type used as a base? */\n       if (TYPE_CONTEXT (t) && TREE_CODE (TYPE_CONTEXT (t)) == TREE_CODE (t)\n \t  && CLASSTYPE_AS_BASE (TYPE_CONTEXT (t)) == t)\n \t{\n \t  dump_child (\"bfld\", TYPE_CONTEXT (t));\n-\t  return 1;\n+\t  return true;\n \t}\n       \n       if (! IS_AGGR_TYPE (t))"}, {"sha": "db5651b37e2b1729dbde5eb253f616e04f27b6ea", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -1,3 +1,8 @@\n+2003-03-19  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* lang.c (java_dump_tree): Change return type from 'int' to 'bool'.\n+\tReplace 0 and 1 with true and false in return statements.\n+\n 2003-03-19  Tom Tromey  <tromey@redhat.com>\n \n \t* lex.c (do_java_lex): Renamed from java_lex."}, {"sha": "031ddcc38b81802e58116df0735d70d6a5346f0e", "filename": "gcc/java/lang.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -69,7 +69,7 @@ static int java_unsafe_for_reeval (tree);\n static int merge_init_test_initialization (void * *, void *);\n static int inline_init_test_initialization (void * *, void *);\n static bool java_can_use_bit_fields_p (void);\n-static int java_dump_tree (void *, tree);\n+static bool java_dump_tree (void *, tree);\n static void dump_compound_expr (dump_info_p, tree);\n \n #ifndef TARGET_OBJECT_SUFFIX\n@@ -1050,7 +1050,7 @@ dump_compound_expr (dump_info_p di, tree t)\n     }\n }\n   \n-static int\n+static bool\n java_dump_tree (void *dump_info, tree t)\n {\n   enum tree_code code;\n@@ -1073,29 +1073,29 @@ java_dump_tree (void *dump_info, tree t)\n \tdump_child (\"body\", DECL_FUNCTION_BODY (t));\n       if (DECL_LANG_SPECIFIC (t) && !dump_flag (di, TDF_SLIM, t))\n \tdump_child (\"inline body\", DECL_SAVED_TREE (t));\n-      return 1;\n+      return true;\n \n     case RETURN_EXPR:\n       dump_child (\"expr\", TREE_OPERAND (t, 0));\n-      return 1;\n+      return true;\n \n     case GOTO_EXPR:\n       dump_child (\"goto\", TREE_OPERAND (t, 0));\n-      return 1;\n+      return true;\n \n     case LABEL_EXPR:\n       dump_child (\"label\", TREE_OPERAND (t, 0));\n-      return 1;\n+      return true;\n \n     case LABELED_BLOCK_EXPR:\n       dump_child (\"label\", TREE_OPERAND (t, 0));\n       dump_child (\"block\", TREE_OPERAND (t, 1));\n-      return 1;\n+      return true;\n \n     case EXIT_BLOCK_EXPR:\n       dump_child (\"block\", TREE_OPERAND (t, 0));\n       dump_child (\"val\", TREE_OPERAND (t, 1));\n-      return 1;\n+      return true;\n \n     case BLOCK:\n       if (BLOCK_EXPR_BODY (t))\n@@ -1114,17 +1114,17 @@ java_dump_tree (void *dump_info, tree t)\n \t    block = TREE_CHAIN (block);\n \t  }\n \t}\n-      return 1;\n+      return true;\n       \n     case COMPOUND_EXPR:\n       if (!dump_flag (di, TDF_SLIM, t))\n-\treturn 0;\n+\treturn false;\n       dump_compound_expr (di, t);\n-      return 1;\n+      return true;\n \n     default:\n       break;\n     }\n-  return 0;\n+  return false;\n }\n #include \"gt-java-lang.h\""}, {"sha": "4315eab91e7750445add45ac6ba2275edff7e2c4", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -183,7 +183,7 @@ void write_global_declarations PARAMS ((void));\n }\n \n /* Tree dump hooks.  */\n-int lhd_tree_dump_dump_tree \t\t\tPARAMS ((void *, tree));\n+bool lhd_tree_dump_dump_tree \t\t\tPARAMS ((void *, tree));\n int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n \n #define LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN lhd_tree_dump_dump_tree"}, {"sha": "16592a9b3f71a71584dbed699bd7b5c522731137", "filename": "gcc/langhooks.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -426,12 +426,12 @@ lhd_tree_inlining_convert_parm_for_inlining (parm, value, fndecl)\n    nodes.  Returns nonzero if it does not want the usual dumping of the\n    second argument.  */\n \n-int\n+bool\n lhd_tree_dump_dump_tree (di, t)\n      void *di ATTRIBUTE_UNUSED;\n      tree t ATTRIBUTE_UNUSED;\n {\n-  return 0;\n+  return false;\n }\n \n /* lang_hooks.tree_dump.type_qual:  Determine type qualifiers in a"}, {"sha": "82454952397fed467c262e4135a390eee8ced71b", "filename": "gcc/langhooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd3ecadd83939fd4bc531d4f6ab11e2326892b4/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=2bd3ecadd83939fd4bc531d4f6ab11e2326892b4", "patch": "@@ -90,7 +90,7 @@ struct lang_hooks_for_tree_dump\n {\n   /* Dump language-specific parts of tree nodes.  Returns nonzero if it\n      does not want the usual dumping of the second argument.  */\n-  int (*dump_tree) PARAMS ((void *, tree));\n+  bool (*dump_tree) PARAMS ((void *, tree));\n \n   /* Determine type qualifiers in a language-specific way.  */\n   int (*type_quals) PARAMS ((tree));"}]}