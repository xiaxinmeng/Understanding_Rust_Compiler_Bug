{"sha": "1a03ecbe99422e87f7dcd2fca544d84b2ff924cc", "node_id": "C_kwDOANBUbNoAKDFhMDNlY2JlOTk0MjJlODdmN2RjZDJmY2E1NDRkODRiMmZmOTI0Y2M", "commit": {"author": {"name": "@mvvsmk", "email": "mvvsmanojkumar@gmail.com", "date": "2021-11-20T11:25:45Z"}, "committer": {"name": "@mvvsmk", "email": "mvvsmanojkumar@gmail.com", "date": "2021-11-20T11:25:45Z"}, "message": "Removed markdown linting errors from README.md and CONTRIBUTING.md\n\nFixes #487\nSigned-off-by: M V V S Manoj Kumar <mvvsmanojkumar@gamil.com>", "tree": {"sha": "fec95467decd432589e1138ccd20bfdbaddaf6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fec95467decd432589e1138ccd20bfdbaddaf6f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc/comments", "author": {"login": "mvvsmk", "id": 71825974, "node_id": "MDQ6VXNlcjcxODI1OTc0", "avatar_url": "https://avatars.githubusercontent.com/u/71825974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvvsmk", "html_url": "https://github.com/mvvsmk", "followers_url": "https://api.github.com/users/mvvsmk/followers", "following_url": "https://api.github.com/users/mvvsmk/following{/other_user}", "gists_url": "https://api.github.com/users/mvvsmk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvvsmk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvvsmk/subscriptions", "organizations_url": "https://api.github.com/users/mvvsmk/orgs", "repos_url": "https://api.github.com/users/mvvsmk/repos", "events_url": "https://api.github.com/users/mvvsmk/events{/privacy}", "received_events_url": "https://api.github.com/users/mvvsmk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mvvsmk", "id": 71825974, "node_id": "MDQ6VXNlcjcxODI1OTc0", "avatar_url": "https://avatars.githubusercontent.com/u/71825974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvvsmk", "html_url": "https://github.com/mvvsmk", "followers_url": "https://api.github.com/users/mvvsmk/followers", "following_url": "https://api.github.com/users/mvvsmk/following{/other_user}", "gists_url": "https://api.github.com/users/mvvsmk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvvsmk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvvsmk/subscriptions", "organizations_url": "https://api.github.com/users/mvvsmk/orgs", "repos_url": "https://api.github.com/users/mvvsmk/repos", "events_url": "https://api.github.com/users/mvvsmk/events{/privacy}", "received_events_url": "https://api.github.com/users/mvvsmk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73a0903c156f86e1e59c30c542780fe2162438d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a0903c156f86e1e59c30c542780fe2162438d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a0903c156f86e1e59c30c542780fe2162438d4"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "20e499c29e1e3b2927f79906870dbaf032e63994", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc/CONTRIBUTING.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/CONTRIBUTING.md?ref=1a03ecbe99422e87f7dcd2fca544d84b2ff924cc", "patch": "@@ -4,24 +4,29 @@\n \n * **Ensure the bug was not already reported** by searching on GitHub under [Issues](https://github.com/Rust-GCC/gccrs/issues).\n \n-* If you're unable to find an open issue addressing the problem, [open a new one](https://github.com/Rust-GCC/gccrs/issues/new). Be sure to include a **title and clear description**, as much relevant information as possible, and a **code sample** or an **executable test case** demonstrating the expected behavior that is not occurring.\n+* If you're unable to find an open issue addressing the problem, [open a new one](https://github.com/Rust-GCC/gccrs/issues/new). \n+  Be sure to include a **title and clear description**, as much relevant information as possible, and a **code sample** \n+  or an **executable test case** demonstrating the expected behavior that is not occurring.\n \n #### **Do you want to submit a patch?**\n \n * Open a new GitHub pull request with the patch.\n \n * Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n \n-* Before submitting, GCC development requires copyright assignment or the Developer's Certificate of Origin sign-off. Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide or [Developer's Certificate of Origin (DCO) Sign-off](https://gcc.gnu.org/dco.html) guide.\n+* Before submitting, GCC development requires copyright assignment or the Developer's Certificate of Origin sign-off.\n+   Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide or [Developer's Certificate of Origin (DCO) Sign-off](https://gcc.gnu.org/dco.html) guide.\n \n * Patches sent to the [`gcc-rust` mailing list](https://gcc.gnu.org/mailman/listinfo/gcc-rust) are likewise welcome.\n-These will be imported into a GitHub PR to follow the normal review process, and the link to the GitHub PR sent to the submitter.\n+These will be imported into a GitHub PR to follow the normal review process, \n+and the link to the GitHub PR sent to the submitter.\n \n #### **Do you intend to add a new feature or change an existing one?**\n \n * Suggest your change in the [Zulip](https://gcc-rust.zulipchat.com/) and start writing code.\n \n-* Do not open an issue on GitHub until you have collected positive feedback about the change. GitHub issues are primarily intended for bug reports and fixes.\n+* Do not open an issue on GitHub until you have collected positive feedback about the change. \n+  GitHub issues are primarily intended for bug reports and fixes.\n \n #### **Do you have questions about the source code?**\n \n@@ -38,18 +43,21 @@ These will be imported into a GitHub PR to follow the normal review process, and\n \n * Avoid PR's with merge commit unless there's a good reason\n \n-* Where possible please add test cases to `gcc/testsuite/rust/` for all PRs. Some issues may not be testable via dejagnu/automation such as debug dump changes.\n+* Where possible please add test cases to `gcc/testsuite/rust/` for all PRs. \n+  Some issues may not be testable via dejagnu/automation such as debug dump changes.\n \n * Follow the [GCC coding style](https://gcc.gnu.org/codingconventions.html) (see `clang-format` below).\n \n * PRs won't be merged until the build and tests pass.\n \n-* Please take the time to create good git commit messages. See the existing format of them in the git log or refer to something like: https://chris.beams.io/posts/git-commit/\n+* Please take the time to create good git commit messages. \n+  See the existing format of them in the git log or refer to something like: https://chris.beams.io/posts/git-commit/\n \n #### Running `clang-format` locally\n \n * on all files using python scripts\n-... corresponding to what the _Clang Format Lint_ (`.github/workflows/clang-format.yml`) is doing, with `clang-format-10` being available locally, and avoiding the Docker overhead.\n+... corresponding to what the _Clang Format Lint_ (`.github/workflows/clang-format.yml`) \n+is doing, with `clang-format-10` being available locally, and avoiding the Docker overhead.\n \n ```shell\n $ wget 'https://github.com/DoozyX/clang-format-lint-action/raw/v0.11/run-clang-format.py'\n@@ -114,7 +122,8 @@ index 9559374ce60..bd3043295ce 100644\n  };\n ```\n \n-Also note that you can use a given version of `clang-format` by using `git clang-format-10` if you have installed that particular version.\n+Also note that you can use a given version of `clang-format` by using `git clang-format-10` if you have \n+installed that particular version.\n \n Thanks! :heart: :heart: :heart:\n "}, {"sha": "5c8307ff4d8d25ab4c932aa63b97de7b2be14623", "filename": "README.md", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=1a03ecbe99422e87f7dcd2fca544d84b2ff924cc", "patch": "@@ -82,7 +82,8 @@ $ $HOME/gccrs-install/gccrs -g -O2 -c test.rs -o test.o\n $ $HOME/gccrs-install/gccrs -o test test.o\n ```\n \n-You can also setup your shell to automatically find the installed compiler. For example for `bash`, add the following in your `$HOME/.bashrc`:\n+You can also setup your shell to automatically find the installed compiler. For example for `bash`, \n+add the following in your `$HOME/.bashrc`:\n \n ```bash\n export PATH=$HOME/gccrs-install/bin:$PATH\n@@ -125,7 +126,8 @@ test cases referencing any issues on Github.\n \n ### Enabling internal checks\n \n-GCC has several internal checks that can be enabled during configuration. In the case of `gccrs`, you can enable the following:\n+GCC has several internal checks that can be enabled during configuration. In the case of `gccrs`, \n+you can enable the following:\n ```bash\n $ ../gccrs/configure --prefix=$HOME/gccrs-install --disable-bootstrap --enable-multilib --enable-languages=rust --enable-checking=gimple,tree,types\n ```\n@@ -143,7 +145,8 @@ $ gdb --args  /some/path/../../rust1 test.rs -quiet -dumpbase arithmetic_express\n  -mtune=generic -march=x86-64 -O0 -w -version -fdiagnostics-color=never -fno-diagnostics-show-caret -fno-diagnostics-show-line-numbers -fdiagnostics-urls=never -fdiagnostics-path-format=separate-events -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu\n ```\n \n-Or simply add the `-wrapper gdb,--args` option. This will call each subcommand in `gdb` and you simply have to break/debug in `rust1`:\n+Or simply add the `-wrapper gdb,--args` option. \n+This will call each subcommand in `gdb` and you simply have to break/debug in `rust1`:\n ```bash\n $ gccrs test.rs -O0 -S -o arithmetic_expressions1.s -wrapper gdb,--args\n ```\n@@ -192,16 +195,18 @@ To emit Rust front end debug output, you may add options like `-frust-debug`, `-\n \n If you want to contribute to GCC Rust, you can find more information in [CONTRIBUTING.md](https://github.com/Rust-GCC/gccrs/blob/master/CONTRIBUTING.md).\n \n-Please be aware this project is designed to be pushed upstream to GCC when we reach some milestones, and this means we require\n-copyright assignment or the Developer's Certificate of Origin sign-off. Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide or [Developer's Certificate of Origin (DCO) Sign-off](https://gcc.gnu.org/dco.html) guide.\n+Please be aware this project is designed to be pushed upstream to GCC when we reach some milestones, \n+and this means we require copyright assignment or the Developer's Certificate of Origin sign-off. \n+Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide or [Developer's Certificate of Origin (DCO) Sign-off](https://gcc.gnu.org/dco.html) guide.\n \n-Not all contributions must be code; we would love to see new test cases or bugs and issues to be reported. Feel free to add any comments on open PRs\n+Not all contributions must be code; we would love to see new test cases or bugs and issues to be reported. \n+Feel free to add any comments on open PRs\n \n ## Community\n \n We can be found on all usual Rust channels such as Zulip, but we also have our own channels:\n \n- * GCC Rust Zulip: https://gcc-rust.zulipchat.com/\n- * Twitter: https://twitter.com/gcc_rust\n- * GCC Mailing List: https://gcc.gnu.org/mailman/listinfo/gcc-rust\n- * irc: irc.oftc.net - gccrust\n+* GCC Rust Zulip: https://gcc-rust.zulipchat.com/\n+* Twitter: https://twitter.com/gcc_rust\n+* GCC Mailing List: https://gcc.gnu.org/mailman/listinfo/gcc-rust\n+* irc: irc.oftc.net - gccrust"}]}