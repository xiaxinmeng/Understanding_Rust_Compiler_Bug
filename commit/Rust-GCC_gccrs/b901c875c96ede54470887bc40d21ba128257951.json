{"sha": "b901c875c96ede54470887bc40d21ba128257951", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkwMWM4NzVjOTZlZGU1NDQ3MDg4N2JjNDBkMjFiYTEyODI1Nzk1MQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2018-05-11T13:29:41Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2018-05-11T13:29:41Z"}, "message": "[arm] PR target/85733 Restore be8 linking behaviour for ARMv6-M and products deriving from its capabilities\n\nMy patch last year to automate passing the be8 flag to the linker had\na nasty flaw in that I forgot entirely that the ARMv6-M architecture\ndid not derive its capabilities directly from the ARMv6 capability\nlist, but was a new group of capabilities (since it needs to leave out\nthe ARM -- notm -- feature bit).  The feature list defined was thus\nmissing the be8 bit.  Furthermore, any product derived from that\nfeature group consequently lacked the be8 feature as well and this\nincluded all ARMv7 and ARMv8 parts.\n\nThe fix is embarrassingly simple...\n\n\tPR target/85733\n\t* config/arm/arm-cpus.in (fgroup ARMv6m): Add be8 feature.\n\nFrom-SVN: r260162", "tree": {"sha": "0924ac02d8c48745b128fac0ba2b74b2ec730745", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0924ac02d8c48745b128fac0ba2b74b2ec730745"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b901c875c96ede54470887bc40d21ba128257951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b901c875c96ede54470887bc40d21ba128257951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b901c875c96ede54470887bc40d21ba128257951", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b901c875c96ede54470887bc40d21ba128257951/comments", "author": null, "committer": null, "parents": [{"sha": "55f31ed10fd38c50560114c47698ed0aa2b302c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f31ed10fd38c50560114c47698ed0aa2b302c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55f31ed10fd38c50560114c47698ed0aa2b302c8"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "ae615068a73e0f5bda856ca5bd213fe0b2d6bc84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b901c875c96ede54470887bc40d21ba128257951/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b901c875c96ede54470887bc40d21ba128257951/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b901c875c96ede54470887bc40d21ba128257951", "patch": "@@ -1,3 +1,8 @@\n+2018-05-11  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/85733\n+\t* config/arm/arm-cpus.in (fgroup ARMv6m): Add be8 feature.\n+\n 2018-05-11  Sebastian Peryt  <sebastian.peryt@intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_WAITPKG_SET,"}, {"sha": "96972a057e7459874ef0bdac5e6379fb666e4189", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b901c875c96ede54470887bc40d21ba128257951/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b901c875c96ede54470887bc40d21ba128257951/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=b901c875c96ede54470887bc40d21ba128257951", "patch": "@@ -234,7 +234,7 @@ define fgroup ARMv6zk     ARMv6k\n define fgroup ARMv6t2     ARMv6 thumb2\n # This is suspect.  ARMv6-m doesn't really pull in any useful features\n # from ARMv5* or ARMv6.\n-define fgroup ARMv6m      mode32 armv3m armv4 thumb armv5 armv5e armv6\n+define fgroup ARMv6m      mode32 armv3m armv4 thumb armv5 armv5e armv6 be8\n # This is suspect, the 'common' ARMv7 subset excludes the thumb2 'DSP' and\n # integer SIMD instructions that are in ARMv6T2.  */\n define fgroup ARMv7       ARMv6m thumb2 armv7"}]}