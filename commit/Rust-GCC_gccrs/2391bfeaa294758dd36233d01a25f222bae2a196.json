{"sha": "2391bfeaa294758dd36233d01a25f222bae2a196", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM5MWJmZWFhMjk0NzU4ZGQzNjIzM2QwMWEyNWYyMjJiYWUyYTE5Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-01-27T23:51:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-01-27T23:51:02Z"}, "message": "(expand_expr, case MINUS_EXPR): Remove bogus operand swap.\n\nFrom-SVN: r8829", "tree": {"sha": "d30773355f16d2a7b119be1dd4f04f36f24ea2f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d30773355f16d2a7b119be1dd4f04f36f24ea2f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2391bfeaa294758dd36233d01a25f222bae2a196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2391bfeaa294758dd36233d01a25f222bae2a196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2391bfeaa294758dd36233d01a25f222bae2a196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2391bfeaa294758dd36233d01a25f222bae2a196/comments", "author": null, "committer": null, "parents": [{"sha": "82f0e2cc935b2ef1bf4ad92f705ac4bc3088925e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82f0e2cc935b2ef1bf4ad92f705ac4bc3088925e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82f0e2cc935b2ef1bf4ad92f705ac4bc3088925e"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "6034a46c7de5bbe8d0929e47543622e88106ee36", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2391bfeaa294758dd36233d01a25f222bae2a196/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2391bfeaa294758dd36233d01a25f222bae2a196/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=2391bfeaa294758dd36233d01a25f222bae2a196", "patch": "@@ -5214,10 +5214,6 @@ expand_expr (exp, target, tmode, modifier)\n \t  rtx op1 = expand_expr (TREE_OPERAND (exp, 1), NULL_RTX,\n \t\t\t\t VOIDmode, modifier);\n \n-\t  /* If one operand is a CONST_INT, put it last.  */\n-\t  if (GET_CODE (op0) == CONST_INT)\n-\t    temp = op0, op0 = op1, op1 = temp;\n-\n \t  /* If the last operand is a CONST_INT, use plus_constant of\n \t     the negated constant.  Else make the MINUS.  */\n \t  if (GET_CODE (op1) == CONST_INT)"}]}