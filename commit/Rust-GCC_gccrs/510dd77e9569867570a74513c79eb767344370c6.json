{"sha": "510dd77e9569867570a74513c79eb767344370c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwZGQ3N2U5NTY5ODY3NTcwYTc0NTEzYzc5ZWI3NjczNDQzNzBjNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-07-31T12:11:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-07-31T12:11:54Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1730", "tree": {"sha": "22c8628cde5f7744c664c8ae0aa453e22e9eea81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22c8628cde5f7744c664c8ae0aa453e22e9eea81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/510dd77e9569867570a74513c79eb767344370c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510dd77e9569867570a74513c79eb767344370c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510dd77e9569867570a74513c79eb767344370c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510dd77e9569867570a74513c79eb767344370c6/comments", "author": null, "committer": null, "parents": [{"sha": "87b36970b70a7af4b76f5cd13c601e1319b8e4b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b36970b70a7af4b76f5cd13c601e1319b8e4b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87b36970b70a7af4b76f5cd13c601e1319b8e4b9"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "ab9b09d1a6207b4fe63e5b77d6f9d1b1cfbe50d0", "filename": "gcc/combine.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510dd77e9569867570a74513c79eb767344370c6/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510dd77e9569867570a74513c79eb767344370c6/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=510dd77e9569867570a74513c79eb767344370c6", "patch": "@@ -8095,6 +8095,18 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t  if (XEXP (note, 0) == elim_i2 || XEXP (note, 0) == elim_i1)\n \t    break;\n \n+\t  /* If the register is used in both I2 and I3 and it dies in I3, \n+\t     we might have added another reference to it.  If reg_n_refs\n+\t     was 2, bump it to 3.  This has to be correct since the \n+\t     register must have been set somewhere.  The reason this is\n+\t     done is because local-alloc.c treats 2 references as a \n+\t     special case.  */\n+\n+\t  if (place == i3 && i2 != 0 && GET_CODE (XEXP (note, 0)) == REG\n+\t      && reg_n_refs[REGNO (XEXP (note, 0))]== 2\n+\t      && reg_referenced_p (XEXP (note, 0), PATTERN (i2)))\n+\t    reg_n_refs[REGNO (XEXP (note, 0))] = 3;\n+\n \t  if (place == 0)\n \t    for (tem = prev_nonnote_insn (i3);\n \t\t tem && (GET_CODE (tem) == INSN"}, {"sha": "fb483db9107fdef56c7533b9b99ba8d431346480", "filename": "gcc/final.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510dd77e9569867570a74513c79eb767344370c6/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510dd77e9569867570a74513c79eb767344370c6/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=510dd77e9569867570a74513c79eb767344370c6", "patch": "@@ -2078,6 +2078,13 @@ output_operand (x, code)\n {\n   if (x && GET_CODE (x) == SUBREG)\n     x = alter_subreg (x);\n+\n+  /* If X is a pseudo-register, abort now rather than writing trash to the\n+     assembler file.  */\n+\n+  if (GET_CODE (x) == REG && REGNO (x) >= FIRST_PSEUDO_REGISTER)\n+    abort ();\n+\n   PRINT_OPERAND (asm_out_file, x, code);\n }\n "}, {"sha": "46274374ce189bf7b9bfee0ae59ac6df924623de", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510dd77e9569867570a74513c79eb767344370c6/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510dd77e9569867570a74513c79eb767344370c6/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=510dd77e9569867570a74513c79eb767344370c6", "patch": "@@ -3321,7 +3321,7 @@ reload_as_needed (first, live_known)\n   for (i = 0; i < NUM_ELIMINABLE_REGS; i++)\n     {\n       INITIAL_ELIMINATION_OFFSET (reg_eliminate[i].from, reg_eliminate[i].to,\n-\t\t\t\t  reg_eliminate[i].initial_offset)\n+\t\t\t\t  reg_eliminate[i].initial_offset);\n       reg_eliminate[i].previous_offset\n \t= reg_eliminate[i].offset = reg_eliminate[i].initial_offset;\n     }"}]}