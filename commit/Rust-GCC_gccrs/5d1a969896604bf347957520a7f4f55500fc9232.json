{"sha": "5d1a969896604bf347957520a7f4f55500fc9232", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQxYTk2OTg5NjYwNGJmMzQ3OTU3NTIwYTdmNGY1NTUwMGZjOTIzMg==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gnat.com", "date": "2001-10-04T17:50:42Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-04T17:50:42Z"}, "message": "3lsoccon.ads: Added file, missed with initial check ins.\n\n\t* 3lsoccon.ads: Added file, missed with initial check ins.\n\n\t* 4lintnam.ads: Fix header format.\n\tChange Linux to GNU/Linux.\n\n\t* 5iosinte.adb: Change Linux to GNU/Linux.\n\n\t* 5iosinte.ads: Change Linux to GNU/Linux.\n\n\t* 5itaprop.adb: Change Linux to GNU/Linux.\n\n\t* 5itaspri.ads: Change Linux to GNU/Linux.\n\tUpdate copyright notice.\n\n\t* 5lintman.adb: Change Linux to GNU/Linux.\n\n\t* 5lml-tgt.adb: Change Linux to GNU/Linux.\n\n\t* 5losinte.ads: Change Linux to GNU/Linux.\n\n\t* 5lsystem.ads: Change Linux to GNU/Linux.\n\n\t* 5qosinte.adb: Change Linux to GNU/Linux.\n\n\t* 5qosinte.ads: Change Linux to GNU/Linux.\n\n\t* 5qparame.ads: Change Linux to GNU/Linux.\n\n\t* 5qtaprop.adb: Change Linux to GNU/Linux.\n\n\t* 5qtaspri.ads: Change Linux to GNU/Linux.\n\tAdd 2001 to copyright notice.\n\n\t* 5vintman.ads: Change Linux to GNU/Linux.\n\tFix header format.  Add 2001 to copyright notice.\n\n\t* g-soccon.ads: Change Linux to GNU/Linux.\n\n\t* g-trasym.ads: Change Linux to GNU/Linux.\n\tAdd 2001 to copyright notice.\n\n\t* memtrack.adb: Change Linux to GNU/Linux.\n\n\t* s-intman.ads: Change Linux to GNU/Linux.\n\tAdd 2001 to copyright notice.  Fix header format.\n\n\t* s-stache.adb: Change Linux to GNU/Linux.\n\n\t* adaint.c: Change Linux to GNU/Linux.\n\n\t* cio.c: Change Linux to GNU/Linux.\n\n\t* cstreams.c: Change Linux to GNU/Linux.\n\n\t* init.c: Change Linux to GNU/Linux.\n\n\t* gmem.c: Change Linux to GNU/Linux.\n\n\t* tracebak.c: Change Linux to GNU/Linux.\n\nFrom-SVN: r46011", "tree": {"sha": "69861f374b6070650fbda79f1fc0e6fbc6313e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69861f374b6070650fbda79f1fc0e6fbc6313e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d1a969896604bf347957520a7f4f55500fc9232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1a969896604bf347957520a7f4f55500fc9232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d1a969896604bf347957520a7f4f55500fc9232", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1a969896604bf347957520a7f4f55500fc9232/comments", "author": null, "committer": null, "parents": [{"sha": "d3d43aabbd50deea95b18f395c43b6ff9a9fc19f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d43aabbd50deea95b18f395c43b6ff9a9fc19f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3d43aabbd50deea95b18f395c43b6ff9a9fc19f"}], "stats": {"total": 408, "additions": 296, "deletions": 112}, "files": [{"sha": "4371e0d3a3704e0fe2e469a4f4557ae7c1731ec3", "filename": "gcc/ada/3lsoccon.ads", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F3lsoccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F3lsoccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F3lsoccon.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -0,0 +1,115 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--                            $Revision$\n+--                                                                          --\n+--              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the version for GNU/Linux\n+\n+package GNAT.Sockets.Constants is\n+\n+   --  Families\n+\n+   AF_INET              : constant :=                2;\n+   AF_INET6             : constant :=               10;\n+\n+   --  Modes\n+\n+   SOCK_STREAM          : constant :=                1;\n+   SOCK_DGRAM           : constant :=                2;\n+\n+   --  Socket Errors\n+\n+   EBADF                : constant :=                9;\n+   ENOTSOCK             : constant :=               88;\n+   ENOTCONN             : constant :=              107;\n+   ENOBUFS              : constant :=              105;\n+   EOPNOTSUPP           : constant :=               95;\n+   EFAULT               : constant :=               14;\n+   EWOULDBLOCK          : constant :=               11;\n+   EADDRNOTAVAIL        : constant :=               99;\n+   EMSGSIZE             : constant :=               90;\n+   EADDRINUSE           : constant :=               98;\n+   EINVAL               : constant :=               22;\n+   EACCES               : constant :=               13;\n+   EAFNOSUPPORT         : constant :=               97;\n+   EISCONN              : constant :=              106;\n+   ETIMEDOUT            : constant :=              110;\n+   ECONNREFUSED         : constant :=              111;\n+   ENETUNREACH          : constant :=              101;\n+   EALREADY             : constant :=              114;\n+   EINPROGRESS          : constant :=              115;\n+   ENOPROTOOPT          : constant :=               92;\n+   EPROTONOSUPPORT      : constant :=               93;\n+   EINTR                : constant :=                4;\n+   EIO                  : constant :=                5;\n+   ESOCKTNOSUPPORT      : constant :=               94;\n+\n+   --  Host Errors\n+\n+   HOST_NOT_FOUND       : constant :=                1;\n+   TRY_AGAIN            : constant :=                2;\n+   NO_ADDRESS           : constant :=                4;\n+   NO_RECOVERY          : constant :=                3;\n+\n+   --  Control Flags\n+\n+   FIONBIO              : constant :=            21537;\n+   FIONREAD             : constant :=            21531;\n+\n+   --  Shutdown Modes\n+\n+   SHUT_RD              : constant :=                0;\n+   SHUT_WR              : constant :=                1;\n+   SHUT_RDWR            : constant :=                2;\n+\n+   --  Protocol Levels\n+\n+   SOL_SOCKET           : constant :=                1;\n+   IPPROTO_IP           : constant :=                0;\n+   IPPROTO_UDP          : constant :=               17;\n+   IPPROTO_TCP          : constant :=                6;\n+\n+   --  Socket Options\n+\n+   TCP_NODELAY          : constant :=                1;\n+   SO_SNDBUF            : constant :=                7;\n+   SO_RCVBUF            : constant :=                8;\n+   SO_REUSEADDR         : constant :=                2;\n+   SO_KEEPALIVE         : constant :=                9;\n+   SO_LINGER            : constant :=               13;\n+   SO_ERROR             : constant :=                4;\n+   SO_BROADCAST         : constant :=                6;\n+   IP_ADD_MEMBERSHIP    : constant :=               35;\n+   IP_DROP_MEMBERSHIP   : constant :=               36;\n+   IP_MULTICAST_TTL     : constant :=               33;\n+   IP_MULTICAST_LOOP    : constant :=               34;\n+end GNAT.Sockets.Constants;"}, {"sha": "52c3e95047a929e2f08cc120e727986ff9b998ba", "filename": "gcc/ada/4lintnam.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F4lintnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F4lintnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F4lintnam.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.5 $                             --\n+--                             $Revision$\n --                                                                          --\n --           Copyright (C) 1991-2001 Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a Linux version of this package.\n+--  This is a GNU/Linux version of this package.\n --\n --  The following signals are reserved by the run time (FSU threads):\n --"}, {"sha": "7cd2013becd934768588ba3a1befff19710ef2b3", "filename": "gcc/ada/5iosinte.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5iosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5iosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5iosinte.adb?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---                             $Revision: 1.12 $\n+--                             $Revision$\n --                                                                          --\n --             Copyright (C) 1991-2001 Florida State University             --\n --                                                                          --\n@@ -34,8 +34,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a LinuxThreads, Solaris pthread and HP-UX pthread version of this\n---  package.\n+--  This is a GNU/LinuxThreads, Solaris pthread and HP-UX pthread version\n+--  of this package.\n \n pragma Polling (Off);\n --  Turn off polling, we do not want ATC polling to take place during"}, {"sha": "152c2e0305a0ceb71a88342a7ac04ca41c570bd4", "filename": "gcc/ada/5iosinte.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5iosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5iosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5iosinte.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                              $Revision: 1.27 $\n+--                              $Revision$\n --                                                                          --\n --          Copyright (C) 1991-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a Linux (LinuxThreads) version of this package.\n+--  This is a GNU/Linux (GNU/LinuxThreads) version of this package.\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n@@ -115,11 +115,11 @@ package System.OS_Interface is\n    SIGPROF    : constant := 27; --  profiling timer expired\n    SIGXCPU    : constant := 24; --  CPU time limit exceeded\n    SIGXFSZ    : constant := 25; --  filesize limit exceeded\n-   SIGUNUSED  : constant := 31;  --  unused signal (Linux)\n-   SIGSTKFLT  : constant := 16;  --  coprocessor stack fault (Linux)\n-   SIGLTHRRES : constant := 32;  --  LinuxThreads restart signal\n-   SIGLTHRCAN : constant := 33;  --  LinuxThreads cancel signal\n-   SIGLTHRDBG : constant := 34;  --  LinuxThreads debugger signal\n+   SIGUNUSED  : constant := 31; --  unused signal (GNU/Linux)\n+   SIGSTKFLT  : constant := 16; --  coprocessor stack fault (Linux)\n+   SIGLTHRRES : constant := 32; --  GNU/LinuxThreads restart signal\n+   SIGLTHRCAN : constant := 33; --  GNU/LinuxThreads cancel signal\n+   SIGLTHRDBG : constant := 34; --  GNU/LinuxThreads debugger signal\n \n    SIGADAABORT : constant := SIGABRT;\n    --  Change this if you want to use another signal for task abort.\n@@ -146,12 +146,12 @@ package System.OS_Interface is\n       --  POSIX simply won't allow it.\n \n       SIGLTHRRES, SIGLTHRCAN, SIGLTHRDBG);\n-      --  These three signals are used by LinuxThreads starting from\n+      --  These three signals are used by GNU/LinuxThreads starting from\n       --  glibc 2.1 (future 2.2).\n \n    Reserved    : constant Signal_Set :=\n    --  I am not sure why the following two signals are reserved.\n-   --  I guess they are not supported by this version of Linux.\n+   --  I guess they are not supported by this version of GNU/Linux.\n      (SIGVTALRM, SIGUNUSED);\n \n    type sigset_t is private;"}, {"sha": "f88d8c33a0616e01ab1db509abd506b27a502acc", "filename": "gcc/ada/5itaprop.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5itaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5itaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5itaprop.adb?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---                             $Revision: 1.43 $\n+--                             $Revision$\n --                                                                          --\n --             Copyright (C) 1991-2001, Florida State University            --\n --                                                                          --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a Linux (LinuxThreads) version of this package\n+--  This is a GNU/Linux (GNU/LinuxThreads) version of this package\n \n --  This package contains all the GNULL primitives that interface directly\n --  with the underlying OS.\n@@ -105,7 +105,7 @@ package body System.Task_Primitives.Operations is\n    ------------------\n \n    Max_Stack_Size : constant := 2000 * 1024;\n-   --  LinuxThreads does not return an error value when requesting\n+   --  GNU/LinuxThreads does not return an error value when requesting\n    --  a task stack size which is too large, so we have to check this\n    --  ourselves.\n \n@@ -699,7 +699,9 @@ package body System.Task_Primitives.Operations is\n          end if;\n       end if;\n \n-      --  Priorities are in range 1 .. 99 on Linux, so map 0 .. 31 to 1 .. 32\n+      --  Priorities are in range 1 .. 99 on GNU/Linux, so we map\n+      --  map 0 .. 31 to 1 .. 32\n+\n       Param.sched_priority := Interfaces.C.int (Prio) + 1;\n \n       if Time_Slice_Val > 0 then"}, {"sha": "755ebc878bd8d3568c35342002369e18aaae560e", "filename": "gcc/ada/5itaspri.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5itaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5itaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5itaspri.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.5 $\n+--                             $Revision$\n --                                                                          --\n---           Copyright (C) 1991-2000 Free Software Foundation, Inc.         --\n+--           Copyright (C) 1991-2001 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the Linux (LinuxThreads) version of this package.\n+--  This is the GNU/Linux (GNU/LinuxThreads) version of this package.\n \n --  This package provides low-level support for most tasking features.\n "}, {"sha": "d58987d56ae3458c1936958878393986fa52b072", "filename": "gcc/ada/5lintman.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5lintman.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5lintman.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5lintman.adb?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---                             $Revision: 1.18 $\n+--                             $Revision$\n --                                                                          --\n --             Copyright (C) 1991-2001 Florida State University             --\n --                                                                          --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the Linux version of this package\n+--  This is the GNU/Linux version of this package\n \n --  This file performs the system-dependent translation between machine\n --  exceptions and the Ada exceptions, if any, that should be raised when they"}, {"sha": "f765c4a745a1dc598d1a70a9b67826cd90ff790a", "filename": "gcc/ada/5lml-tgt.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5lml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5lml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5lml-tgt.adb?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -3,11 +3,11 @@\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n --                             M L I B . T G T                              --\n---                             (Linux Version)                              --\n+--                           (GNU/Linux Version)                            --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.2 $\n+--                            $Revision$\n --                                                                          --\n --              Copyright (C) 2001, Ada Core Technologies, Inc.             --\n --                                                                          --\n@@ -30,7 +30,7 @@\n --  This package provides a set of target dependent routines to build\n --  static, dynamic and shared libraries.\n \n---  This is the Linux version of the body.\n+--  This is the GNU/Linux version of the body.\n \n with Ada.Characters.Handling;   use Ada.Characters.Handling;\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;"}, {"sha": "1bc31b4433ea9e943ed76e13e30fa588409ed2c4", "filename": "gcc/ada/5losinte.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5losinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5losinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5losinte.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.27 $\n+--                             $Revision$\n --                                                                          --\n --          Copyright (C) 1991-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a Linux (FSU THREADS) version of this package.\n+--  This is a GNU/Linux (FSU THREADS) version of this package.\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n@@ -114,8 +114,8 @@ package System.OS_Interface is\n    SIGPROF    : constant := 27; --  profiling timer expired\n    SIGXCPU    : constant := 24; --  CPU time limit exceeded\n    SIGXFSZ    : constant := 25; --  filesize limit exceeded\n-   SIGUNUSED  : constant := 31;  --  unused signal (Linux)\n-   SIGSTKFLT  : constant := 16;  --  coprocessor stack fault (Linux)\n+   SIGUNUSED  : constant := 31; --  unused signal (GNU/Linux)\n+   SIGSTKFLT  : constant := 16; --  coprocessor stack fault (GNU/Linux)\n \n    SIGADAABORT : constant := SIGABRT;\n    --  Change this if you want to use another signal for task abort."}, {"sha": "3ea2fc7cc259010f86e9ce0d0e5c4be01cc131bc", "filename": "gcc/ada/5lsystem.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5lsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5lsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5lsystem.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -5,9 +5,9 @@\n --                               S Y S T E M                                --\n --                                                                          --\n --                                 S p e c                                  --\n---                            (Linux/x86 Version)\n+--                          (GNU/Linux/x86 Version)                         --\n --                                                                          --\n---                            $Revision: 1.4 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --"}, {"sha": "2b0ffc7d560f57eb95bdaa2e264558a27f913582", "filename": "gcc/ada/5qosinte.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5qosinte.adb?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---                             $Revision: 1.4 $\n+--                             $Revision$\n --                                                                          --\n---             Copyright (C) 1991-2000 Florida State University             --\n+--             Copyright (C) 1991-2001 Florida State University             --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  RT Linux version.\n+--  RT GNU/Linux version.\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System."}, {"sha": "68c1a2c6fbf5b634130cecca0f7448000ce82b63", "filename": "gcc/ada/5qosinte.ads", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5qosinte.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.8 $\n+--                             $Revision$\n --                                                                          --\n --             Copyright (C) 1991-2001 Florida State University             --\n --                                                                          --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  RT Linux version.\n+--  RT GNU/Linux version.\n \n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n@@ -52,7 +52,7 @@ package System.OS_Interface is\n    subtype int            is Interfaces.C.int;\n    subtype unsigned_long  is Interfaces.C.unsigned_long;\n \n-   --  RT Linux kernel threads should not use the\n+   --  RT GNU/Linux kernel threads should not use the\n    --  OS signal interfaces.\n \n    Max_Interrupt : constant := 2;\n@@ -69,8 +69,8 @@ package System.OS_Interface is\n    RT_TIME_END : constant := 16#7fffFfffFfffFfff#;\n \n    type RTIME is range -2 ** 63 .. 2 ** 63 - 1;\n-   --  the introduction of type RTIME is due to the fact that RT-Linux\n-   --  uses this type to represent time. In RT-Linux, it's a long long\n+   --  the introduction of type RTIME is due to the fact that RT-GNU/Linux\n+   --  uses this type to represent time. In RT-GNU/Linux, it's a long long\n    --  integer that takes 64 bits for storage\n \n    -------------------------\n@@ -79,8 +79,8 @@ package System.OS_Interface is\n \n    RT_LOWEST_PRIORITY : constant System.Any_Priority :=\n      System.Any_Priority'First;\n-   --  for the lowest priority task in RT_Linux. By the design, this task\n-   --  is the regular linux kernel.\n+   --  for the lowest priority task in RT-GNU/Linux. By the design, this\n+   --  task is the regular GNU/Linux kernel.\n \n    RT_TASK_MAGIC : constant := 16#754d2774#;\n    --  a special constant used as a label for a task that has been created\n@@ -91,8 +91,8 @@ package System.OS_Interface is\n \n    SFIF : Integer;\n    pragma Import (C, SFIF, \"SFIF\");\n-   --  Interrupt emulation flag used by RT-Linux. If it's 0, the regular\n-   --  Linux kernel is preempted. Otherwise, the regular Linux kernel is\n+   --  Interrupt emulation flag used by RT-GNU/Linux. If it's 0, the regular\n+   --  GNU/Linux kernel is preempted. Otherwise, the regular Linux kernel is\n    --  running\n \n    GFP_ATOMIC : constant := 16#1#;\n@@ -112,17 +112,17 @@ package System.OS_Interface is\n      function (arg : System.Address) return System.Address;\n \n    --  ??? need to define a type for references to (IDs of)\n-   --  RT Linux lock objects, and implement the lock objects.\n+   --  RT GNU/Linux lock objects, and implement the lock objects.\n \n    subtype Thread_Id is System.Address;\n \n    -------------------------------\n    -- Useful imported functions --\n    -------------------------------\n \n-   ---------------------------------\n-   -- functions from linux kernel --\n-   ---------------------------------\n+   -------------------------------------\n+   -- Functions from GNU/Linux kernel --\n+   -------------------------------------\n \n    function Kmalloc (size : Integer; Priority : Integer) return System.Address;\n    pragma Import (C, Kmalloc, \"kmalloc\");"}, {"sha": "1c42fdcd45674a8579f58ee103379e8ddb2720ff", "filename": "gcc/ada/5qparame.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qparame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qparame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5qparame.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.3 $\n+--                            $Revision$\n --                                                                          --\n---          Copyright (C) 1992-2000 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,7 +33,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the RT-Linux version.\n+--  This is the RT-GNU/Linux version.\n --  Blank line intentional so that it lines up exactly with default.\n \n --  This package defines some system dependent parameters for GNAT. These"}, {"sha": "a487d5dce40e362a51278b158a1480d6ba9193e5", "filename": "gcc/ada/5qtaprop.adb", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5qtaprop.adb?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---                             $Revision: 1.10 $\n+--                             $Revision$\n --                                                                          --\n --             Copyright (C) 1991-2001, Florida State University            --\n --                                                                          --\n@@ -34,7 +34,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  RT Linux version\n+--  RT GNU/Linux version\n \n --  ???? Later, look at what we might want to provide for interrupt\n --  management.\n@@ -74,11 +74,11 @@ package body System.Task_Primitives.Operations is\n        System.Tasking,\n        System.Storage_Elements;\n \n-   ----------------------------\n-   -- RT Linux specific Data --\n-   ----------------------------\n+   --------------------------------\n+   -- RT GNU/Linux specific Data --\n+   --------------------------------\n \n-   --  Define two important parameters necessary for a Linux kernel module.\n+   --  Define two important parameters necessary for a GNU/Linux kernel module.\n    --  Any module that is going to be loaded into the kernel space needs these\n    --  parameters.\n \n@@ -93,8 +93,8 @@ package body System.Task_Primitives.Operations is\n    pragma Export (C, Kernel_Version, \"kernel_version\");\n    --  So that insmod can find the version number.\n \n-   --  The following procedures have their name specified by the linux module\n-   --  loader. Note that they simply correspond to adainit/adafinal.\n+   --  The following procedures have their name specified by the GNU/Linux\n+   --  module loader. Note that they simply correspond to adainit/adafinal.\n \n    function Init_Module return Integer;\n    pragma Export (C, Init_Module, \"init_module\");\n@@ -183,7 +183,7 @@ package body System.Task_Primitives.Operations is\n    --  A variable to hold Task_ID for the environment task.\n    --  Once initialized, this behaves as a constant.\n    --  In the current implementation, this is the task assigned permanently\n-   --  as the regular Linux kernel.\n+   --  as the regular GNU/Linux kernel.\n \n    All_Tasks_L : aliased RTS_Lock;\n    --  See comments on locking rules in System.Tasking (spec).\n@@ -194,7 +194,8 @@ package body System.Task_Primitives.Operations is\n    --  We start at 100, to reserve some special values for\n    --  using in error checking.\n \n-   Linux_Irq_State : Integer := 0;\n+   GNU_Linux_Irq_State : Integer := 0;\n+   --  This needs comments ???\n \n    type Duration_As_Integer is delta 1.0\n       range -2.0**(Duration'Size - 1) .. 2.0**(Duration'Size - 1) - 1.0;\n@@ -517,21 +518,21 @@ package body System.Task_Primitives.Operations is\n          pragma Debug (Printk\n            (\"Rt_Schedule: Top_Task = Environment_Task\" & LF));\n          --  If there are no RT tasks ready, we execute the regular\n-         --  Linux kernel, and allow the regular Linux interrupt\n+         --  GNU/Linux kernel, and allow the regular GNU/Linux interrupt\n          --  handlers to preempt the current task again.\n \n          if not In_Elab_Code then\n-            SFIF := Linux_Irq_State;\n+            SFIF := GNU_Linux_Irq_State;\n          end if;\n \n       elsif Current_Task = Environment_Task_ID then\n          pragma Debug (Printk\n            (\"Rt_Schedule: Current_Task = Environment_Task\" & LF));\n-         --  We are going to preempt the regular Linux kernel to\n-         --  execute an RT task, so don't allow the regular Linux\n+         --  We are going to preempt the regular GNU/Linux kernel to\n+         --  execute an RT task, so don't allow the regular GNU/Linux\n          --  interrupt handlers to preempt the current task any more.\n \n-         Linux_Irq_State := SFIF;\n+         GNU_Linux_Irq_State := SFIF;\n          SFIF := 0;\n       end if;\n \n@@ -1713,7 +1714,7 @@ package body System.Task_Primitives.Operations is\n    --  initialize the target-dependent data.  We do that in this procedure.\n \n    --  In the present implementation, Environment_Task is set to be the\n-   --  regular Linux kernel task.\n+   --  regular GNU/Linux kernel task.\n \n    procedure Initialize (Environment_Task : Task_ID) is\n    begin\n@@ -1743,7 +1744,7 @@ package body System.Task_Primitives.Operations is\n       Idle_Task.Common.LL.Succ := Idle_Task'Address;\n       Idle_Task.Common.LL.Pred := Idle_Task'Address;\n \n-      --  Initialize the regular Linux kernel task.\n+      --  Initialize the regular GNU/Linux kernel task.\n \n       Environment_Task.Common.LL.Magic := RT_TASK_MAGIC;\n       Environment_Task.Common.LL.State := RT_TASK_READY;\n@@ -1758,7 +1759,7 @@ package body System.Task_Primitives.Operations is\n       Timer_Queue.Common.LL.Pred        := Timer_Queue'Address;\n       Timer_Queue.Common.LL.Resume_Time := Max_Sensible_Delay;\n \n-      --  Set the current task to regular Linux kernel task\n+      --  Set the current task to regular GNU/Linux kernel task\n \n       Current_Task := Environment_Task;\n "}, {"sha": "87018a7b91622a9d560b1ed2820030087f1572d8", "filename": "gcc/ada/5qtaspri.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qtaspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5qtaspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5qtaspri.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.3 $\n+--                             $Revision$\n --                                                                          --\n---            Copyright (C) 1991-2000, Florida State University             --\n+--            Copyright (C) 1991-2001, Florida State University             --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,7 +33,8 @@\n -- State University (http://www.gnat.com).                                  --\n --                                                                          --\n ------------------------------------------------------------------------------\n---  RT_Linux version.\n+\n+--  RT_GNU/Linux version\n \n pragma Polling (Off);\n --  Turn off polling, we do not want ATC polling to take place during\n@@ -65,7 +66,7 @@ package System.Task_Primitives is\n \n private\n \n-   type RT_Linux_Lock is record\n+   type RT_GNU_Linux_Lock is record\n       Ceiling_Priority     : System.Any_Priority;\n       Pre_Locking_Priority : System.Any_Priority;\n       --  Used to store the task's active priority before it\n@@ -77,8 +78,8 @@ private\n       --  the current package -- a circularity.\n    end record;\n \n-   type Lock is new RT_Linux_Lock;\n-   type RTS_Lock is new RT_Linux_Lock;\n+   type Lock is new RT_GNU_Linux_Lock;\n+   type RTS_Lock is new RT_GNU_Linux_Lock;\n \n    type RTS_Lock_Ptr is access all RTS_Lock;\n    type Lock_Ptr is access all Lock;"}, {"sha": "0b8744b838d887e2cda87d4722b9eb93f9430670", "filename": "gcc/ada/5vintman.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5vintman.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2F5vintman.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vintman.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.1 $                             --\n+--                             $Revision$\n --                                                                          --\n---          Copyright (C) 1991-2000 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1991-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,9 +119,9 @@ package System.Interrupt_Management is\n \n    procedure Initialize_Interrupts;\n    --  On systems where there is no signal inheritance between tasks (e.g\n-   --  VxWorks, LinuxThreads), this procedure is used to initialize interrupts\n-   --  handling in each task. Otherwise this function should only be called by\n-   --  initialize in this package body.\n+   --  VxWorks, GNU/LinuxThreads), this procedure is used to initialize\n+   --  interrupts handling in each task. Otherwise this function should\n+   --  only be called by initialize in this package body.\n \n private\n "}, {"sha": "0ef137ebf14a387c7138bf7e69ed5536aa1969fa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -1,3 +1,66 @@\n+2001-10-04  Geert Bosch  <bosch@gnat.com>\n+\n+\t* 3lsoccon.ads: Added file, missed with initial check ins.\n+  \n+\t* 4lintnam.ads: Fix header format.\n+\tChange Linux to GNU/Linux.\n+  \n+\t* 5iosinte.adb: Change Linux to GNU/Linux.\n+\n+\t* 5iosinte.ads: Change Linux to GNU/Linux.\n+  \n+\t* 5itaprop.adb: Change Linux to GNU/Linux.\n+  \n+\t* 5itaspri.ads: Change Linux to GNU/Linux.\n+\tUpdate copyright notice.\n+  \n+\t* 5lintman.adb: Change Linux to GNU/Linux.\n+  \n+\t* 5lml-tgt.adb: Change Linux to GNU/Linux.\n+  \n+\t* 5losinte.ads: Change Linux to GNU/Linux.\n+  \n+\t* 5lsystem.ads: Change Linux to GNU/Linux.\n+  \n+\t* 5qosinte.adb: Change Linux to GNU/Linux.\n+  \n+\t* 5qosinte.ads: Change Linux to GNU/Linux.\n+  \n+\t* 5qparame.ads: Change Linux to GNU/Linux.\n+  \n+\t* 5qtaprop.adb: Change Linux to GNU/Linux.\n+  \n+\t* 5qtaspri.ads: Change Linux to GNU/Linux.\n+\tAdd 2001 to copyright notice.\n+  \n+\t* 5vintman.ads: Change Linux to GNU/Linux.\n+\tFix header format.  Add 2001 to copyright notice.\n+  \n+\t* g-soccon.ads: Change Linux to GNU/Linux.\n+  \n+\t* g-trasym.ads: Change Linux to GNU/Linux.\n+\tAdd 2001 to copyright notice.\n+  \n+\t* memtrack.adb: Change Linux to GNU/Linux.\n+  \n+\t* s-intman.ads: Change Linux to GNU/Linux.\n+\tAdd 2001 to copyright notice.  Fix header format.\n+  \n+\t* s-stache.adb: Change Linux to GNU/Linux.\n+  \n+\t* adaint.c: Change Linux to GNU/Linux.\n+  \n+\t* cio.c: Change Linux to GNU/Linux.\n+  \n+\t* cstreams.c: Change Linux to GNU/Linux.\n+  \n+\t* init.c: Change Linux to GNU/Linux.\n+  \n+\t* gmem.c: Change Linux to GNU/Linux.\n+  \n+\t* tracebak.c: Change Linux to GNU/Linux.\n+\n+\n 2001-10-02  Geert Bosch  <bosch@gnat.com>\n \n \t* misc.c (insert_default_attributes): Add dummy version."}, {"sha": "48d66c79f3db0f0299a4d6e049a0a81e7395cb56", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -4,7 +4,7 @@\n  *                                                                          *\n  *                               A D A I N T                                *\n  *                                                                          *\n- *                            $Revision: 1.2 $\n+ *                            $Revision$\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n@@ -1987,7 +1987,7 @@ int _flush_cache()\n       && ! (defined (__alpha__)  && defined (__osf__)) \\\n       && ! defined (__MINGW32__))\n /* Dummy function to satisfy g-trasym.o.\n-   Currently Solaris sparc, HP/UX, IRIX, Linux, Tru64 & Windows provide a\n+   Currently Solaris sparc, HP/UX, IRIX, GNU/Linux, Tru64 & Windows provide a\n    non-dummy version of this procedure in libaddr2line.a */\n \n void"}, {"sha": "65a78698579a9726cf4ba430c48977f83341409b", "filename": "gcc/ada/cio.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fcio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fcio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcio.c?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                            $Revision: 1.2 $\n+ *                            $Revision$\n  *                                                                          *\n  *          Copyright (C) 1992-2001 Free Software Foundation, Inc.          *\n  *                                                                          *\n@@ -77,7 +77,7 @@ put_int_stderr (int x)\n \n #else\n \n-/* Don't use macros on linux since they cause incompatible changes between\n+/* Don't use macros on GNU/Linux since they cause incompatible changes between\n    glibc 2.0 and 2.1 */\n #ifdef linux\n #undef putchar"}, {"sha": "6411fdc6558787d8ea28debb0c08395bdbdd52e3", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *              Auxiliary C functions for Interfaces.C.Streams              *\n  *                                                                          *\n- *                              $Revision: 1.1 $\n+ *                              $Revision$\n  *                                                                          *\n  *          Copyright (C) 1992-2001 Free Software Foundation, Inc.          *\n  *                                                                          *\n@@ -63,7 +63,7 @@ int max_path_len = PATH_MAX;\n \n #ifdef linux\n \n-/* Don't use macros on linux since they cause incompatible changes between\n+/* Don't use macros on GNU/Linux since they cause incompatible changes between\n    glibc 2.0 and 2.1 */\n \n #ifdef stderr\n@@ -199,7 +199,7 @@ __gnat_full_name (nam, buffer)\n #elif defined (sgi)\n \n   /* Use realpath function which resolves links and references to .. and ..\n-     on those Unix systems that support it. Note that linux provides it but\n+     on those Unix systems that support it. Note that GNU/Linux provides it but\n      cannot handle more than 5 symbolic links in a full name, so we use the\n      getcwd approach instead. */\n   realpath (nam, buffer);"}, {"sha": "4371e0d3a3704e0fe2e469a4f4557ae7c1731ec3", "filename": "gcc/ada/g-soccon.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fg-soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fg-soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.7 $\n+--                            $Revision$\n --                                                                          --\n --              Copyright (C) 2001 Ada Core Technologies, Inc.              --\n --                                                                          --\n@@ -32,7 +32,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the version for Linux\n+--  This is the version for GNU/Linux\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "cd72be42ac32e5855c88416ff3e501f36df2b64f", "filename": "gcc/ada/g-trasym.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fg-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fg-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.12 $\n+--                            $Revision$\n --                                                                          --\n---           Copyright (C) 1999-2000 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 1999-2001 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,7 @@\n --  Run-time symbolic traceback support\n \n --  Note: this is only available on selected targets. Currently it is\n---  supported on Sparc/Solaris, Linux, Windows NT, HP-UX, IRIX and Tru64.\n+--  supported on Sparc/Solaris, GNU/Linux, Windows NT, HP-UX, IRIX and Tru64.\n \n --  The routines provided in this package assume that your application has\n --  been compiled with debugging information turned on, since this information"}, {"sha": "809ef0b8018256e4850707b12d08172162f2c814", "filename": "gcc/ada/gmem.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fgmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fgmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgmem.c?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -4,7 +4,7 @@\n  *                                                                          *\n  *                                 G M E M                                  *\n  *                                                                          *\n- *                             $Revision: 1.1 $\n+ *                             $Revision$\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n@@ -43,7 +43,7 @@\n \n       DEC Unix\n       SGI Irix\n-      Linux x86\n+      GNU/Linux x86\n       Solaris (sparc and x86) (*)\n       Windows 98/95/NT (x86)\n "}, {"sha": "4b808165b908590ee066b558478b758135e6c1ca", "filename": "gcc/ada/init.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -4,7 +4,7 @@\n  *                                                                          *\n  *                                 I N I T                                  *\n  *                                                                          *\n- *                            $Revision: 1.1 $\n+ *                            $Revision$\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n@@ -525,15 +525,16 @@ __gnat_initialize ()\n \n \n /*************************************/\n-/* __gnat_initialize (Linux version) */\n+/* __gnat_initialize (GNU/Linux version) */\n /*************************************/\n \n #elif defined (linux) && defined (i386) && !defined (__RT__)\n \n #include <signal.h>\n #include <asm/sigcontext.h>\n \n-/* Linux with GNU libc does not define NULL in included header files */\n+/* GNU/Linux, which uses glibc, does not define NULL in included\n+   header files */\n \n #if !defined (NULL)\n #define NULL ((void *) 0)\n@@ -561,10 +562,11 @@ __gnat_error_handler (sig)\n \n   struct sigcontext *info\n     = (struct sigcontext *) (((char *) &sig) + sizeof (int));\n-  /* Linux does not document how to get the machine state in a signal handler,\n-     but in fact the necessary data is in a sigcontext_struct value that is\n-     on the stack immediately above the signal number parameter, and the\n-     above messing accesses this value on the stack. */\n+\n+  /* The Linux kernel does not document how to get the machine state in a\n+     signal handler, but in fact the necessary data is in a sigcontext_struct\n+     value that is on the stack immediately above the signal number\n+     parameter, and the above messing accesses this value on the stack. */\n \n   struct Machine_State *mstate;\n "}, {"sha": "a2226f0d78049814ce2de760ffa5eed24fb56565", "filename": "gcc/ada/memtrack.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fmemtrack.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fmemtrack.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmemtrack.adb?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.1 $\n+--                            $Revision$\n --                                                                          --\n --             Copyright (C) 2001 Free Software Foundation, Inc.            --\n --                                                                          --\n@@ -62,7 +62,7 @@\n --  NOTE: This capability is currently supported on the following targets:\n --\n --    Windows\n---    Linux\n+--    GNU/Linux\n --    HP-UX\n --    Irix\n --    Solaris"}, {"sha": "98b6f3b2e3cb53330baa72f5379e3cfedc9f78dc", "filename": "gcc/ada/s-intman.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fs-intman.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fs-intman.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman.ads?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---                             $Revision: 1.4 $                             --\n+--                             $Revision$\n --                                                                          --\n---          Copyright (C) 1991-1998 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1991-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -117,9 +117,9 @@ package System.Interrupt_Management is\n \n    procedure Initialize_Interrupts;\n    --  On systems where there is no signal inheritance between tasks (e.g\n-   --  VxWorks, LinuxThreads), this procedure is used to initialize interrupts\n-   --  handling in each task. Otherwise this function should only be called by\n-   --  initialize in this package body.\n+   --  VxWorks, GNU/LinuxThreads), this procedure is used to initialize\n+   --  interrupts handling in each task. Otherwise this function should\n+   --  only be called by initialize in this package body.\n \n private\n    type Interrupt_Mask is new System.OS_Interface.sigset_t;"}, {"sha": "2cfb603ecc35a20ea67fd6570fa96b2e8e3ed3b5", "filename": "gcc/ada/s-stache.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fs-stache.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Fs-stache.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stache.adb?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---                             $Revision: 1.10 $\n+--                             $Revision$\n --                                                                          --\n --          Copyright (C) 1999-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -47,7 +47,7 @@ package body System.Stack_Checking is\n    --  This size is assumed for the environment stack when no size has been\n    --  set by the runtime, and no GNAT_STACK_LIMIT environment variable was\n    --  present. The value is chosen to be just under 8 MB whic is the actual\n-   --  default size on some systems including LinuxThreads, so we will get\n+   --  default size on some systems including GNU/LinuxThreads, so we will get\n    --  correct storage errors on those systems without setting environment\n    --  variables.\n "}, {"sha": "890d0e8d8c6f71d4c89bc48f2e77d0d97ecf4d71", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1a969896604bf347957520a7f4f55500fc9232/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=5d1a969896604bf347957520a7f4f55500fc9232", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                            $Revision: 1.1 $\n+ *                            $Revision$\n  *                                                                          *\n  *           Copyright (C) 2000-2001 Ada Core Technologies, Inc.            *\n  *                                                                          *\n@@ -39,7 +39,7 @@\n    PowerPC/AiX\n    PowerPC/VxWorks\n    Sparc/Solaris\n-   i386/Linux\n+   i386/GNU/Linux\n    i386/Solaris\n    i386/NT\n    i386/OS2"}]}