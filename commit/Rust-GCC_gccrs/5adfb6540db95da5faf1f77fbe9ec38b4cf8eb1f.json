{"sha": "5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f", "node_id": "C_kwDOANBUbNoAKDVhZGZiNjU0MGRiOTVkYTVmYWYxZjc3ZmJlOWVjMzhiNGNmOGViMWY", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-08-17T15:47:21Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-08-17T18:14:02Z"}, "message": "Reset root oracle from path_oracle::reset_path.\n\nWhen we cross a backedge in the path solver, we reset the path\nrelations and nuke the root oracle.  However, we forget to reset it\nfor the next path.  This is causing us to miss threads because\nsubsequent paths will have no root oracle to use.\n\nWith this patch we get 201 more threads in the threadfull passes in my\n.ii files and 118 more overall (DOM gets less because threadfull runs\nbefore).\n\nNormally, I'd recommend this for the GCC 12 branch, but considering\nhow sensitive other passes are to jump threading, and that there is no\nPR associated with this, perhaps we should leave this out.  Up to the\nrelease maintainers of course.\n\ngcc/ChangeLog:\n\n\t* gimple-range-path.cc\n\t(path_range_query::compute_ranges_in_block): Remove\n\tset_root_oracle call.\n\t(path_range_query::compute_ranges): Pass ranger oracle to\n\treset_path.\n\t* value-relation.cc (path_oracle::reset_path): Set root oracle.\n\t* value-relation.h (path_oracle::reset_path): Add root oracle\n\targument.", "tree": {"sha": "0548abb2f313400f6b67235d22559949b4ae6b76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0548abb2f313400f6b67235d22559949b4ae6b76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c136d53e89e32fe9d22e41e5df89c08d3470049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c136d53e89e32fe9d22e41e5df89c08d3470049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c136d53e89e32fe9d22e41e5df89c08d3470049"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "73e248b7e0be1ea9e1976d4fc27af094c4fcf1b4", "filename": "gcc/gimple-range-path.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f/gcc%2Fgimple-range-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f/gcc%2Fgimple-range-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.cc?ref=5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f", "patch": "@@ -435,11 +435,10 @@ path_range_query::compute_ranges_in_block (basic_block bb)\n \t\t e->src->index, e->dest->index);\n \n       path_oracle *p = get_path_oracle ();\n-      p->reset_path ();\n       // ?? Instead of nuking the root oracle altogether, we could\n       // reset the path oracle to search for relations from the top of\n       // the loop with the root oracle.  Something for future development.\n-      p->set_root_oracle (nullptr);\n+      p->reset_path ();\n     }\n \n   gori_compute &g = m_ranger->gori ();\n@@ -615,7 +614,10 @@ path_range_query::compute_ranges (const vec<basic_block> &path,\n     compute_exit_dependencies (m_exit_dependencies, m_path);\n \n   if (m_resolve)\n-    get_path_oracle ()->reset_path ();\n+    {\n+      path_oracle *p = get_path_oracle ();\n+      p->reset_path (m_ranger->oracle ());\n+    }\n \n   if (DEBUG_SOLVER)\n     {"}, {"sha": "7fc22d30126d89364557d2b00c3c96100ab7b2bd", "filename": "gcc/value-relation.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f/gcc%2Fvalue-relation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f/gcc%2Fvalue-relation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-relation.cc?ref=5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f", "patch": "@@ -1513,11 +1513,13 @@ path_oracle::query_relation (basic_block bb, tree ssa1, tree ssa2)\n   return query_relation (bb, equiv_1, equiv_2);\n }\n \n-// Reset any relations registered on this path.\n+// Reset any relations registered on this path.  ORACLE is the root\n+// oracle to use.\n \n void\n-path_oracle::reset_path ()\n+path_oracle::reset_path (relation_oracle *oracle)\n {\n+  set_root_oracle (oracle);\n   m_equiv.m_next = NULL;\n   bitmap_clear (m_equiv.m_names);\n   m_relations.m_head = NULL;"}, {"sha": "64884a8eea20c9ea055379ad191656d0051db5e5", "filename": "gcc/value-relation.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f/gcc%2Fvalue-relation.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f/gcc%2Fvalue-relation.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-relation.h?ref=5adfb6540db95da5faf1f77fbe9ec38b4cf8eb1f", "patch": "@@ -242,7 +242,7 @@ class path_oracle : public relation_oracle\n   relation_kind query_relation (basic_block, tree, tree) final override;\n   relation_kind query_relation (basic_block, const_bitmap, const_bitmap)\n     final override;\n-  void reset_path ();\n+  void reset_path (relation_oracle *oracle = NULL);\n   void set_root_oracle (relation_oracle *oracle) { m_root = oracle; }\n   void dump (FILE *, basic_block) const final override;\n   void dump (FILE *) const final override;"}]}