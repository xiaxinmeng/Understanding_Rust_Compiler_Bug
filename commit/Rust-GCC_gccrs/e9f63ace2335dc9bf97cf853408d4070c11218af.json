{"sha": "e9f63ace2335dc9bf97cf853408d4070c11218af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlmNjNhY2UyMzM1ZGM5YmY5N2NmODUzNDA4ZDQwNzBjMTEyMThhZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-08-30T13:44:47Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-08-30T13:44:47Z"}, "message": "re PR fortran/33228 (Accepts use-associated functions in MODULE PROCEDURE)\n\n2007-08-30  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/33228\n\t* interface.c (check_interface0): Improve error for external procs.\n\t(check_sym_interfaces): Fix checking of module procedures.\n\n2007-08-30  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/33228\n\t* gfortran.dg/generic_9.f90: Update error message.\n\t* gfortran.dg/generic_14.f90: New.\n\nFrom-SVN: r127925", "tree": {"sha": "d3b5361965e6f0cc0dc4972d868e9b3cee4b3d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3b5361965e6f0cc0dc4972d868e9b3cee4b3d54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9f63ace2335dc9bf97cf853408d4070c11218af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f63ace2335dc9bf97cf853408d4070c11218af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f63ace2335dc9bf97cf853408d4070c11218af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f63ace2335dc9bf97cf853408d4070c11218af/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "541d3103fc50b32bf5d5d4a403995e3857eb030e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/541d3103fc50b32bf5d5d4a403995e3857eb030e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/541d3103fc50b32bf5d5d4a403995e3857eb030e"}], "stats": {"total": 136, "additions": 128, "deletions": 8}, "files": [{"sha": "e40c9e233ff44d496a504e243a3f2183d555007e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e9f63ace2335dc9bf97cf853408d4070c11218af", "patch": "@@ -1,3 +1,9 @@\n+2007-08-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/33228\n+\t* interface.c (check_interface0): Improve error for external procs.\n+\t(check_sym_interfaces): Fix checking of module procedures.\n+\n 2007-08-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/32989"}, {"sha": "7bb5a25834f2c86afec685f2babbca68cce580b5", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=e9f63ace2335dc9bf97cf853408d4070c11218af", "patch": "@@ -988,9 +988,13 @@ check_interface0 (gfc_interface *p, const char *interface_name)\n   for (; p; p = p->next)\n     if (!p->sym->attr.function && !p->sym->attr.subroutine)\n       {\n-\tgfc_error (\"Procedure '%s' in %s at %L is neither function nor \"\n-\t\t   \"subroutine\", p->sym->name, interface_name,\n-\t\t   &p->sym->declared_at);\n+\tif (p->sym->attr.external)\n+\t  gfc_error (\"Procedure '%s' in %s at %L has no explicit interface\",\n+\t\t     p->sym->name, interface_name, &p->sym->declared_at);\n+\telse\n+\t  gfc_error (\"Procedure '%s' in %s at %L is neither function nor \"\n+\t\t     \"subroutine\", p->sym->name, interface_name,\n+\t\t     &p->sym->declared_at);\n \treturn 1;\n       }\n   p = psave;\n@@ -1081,11 +1085,10 @@ check_sym_interfaces (gfc_symbol *sym)\n \n       for (p = sym->generic; p; p = p->next)\n \t{\n-\t  if (!p->sym->attr.use_assoc && p->sym->attr.mod_proc\n-\t      && p->sym->attr.if_source != IFSRC_DECL)\n+\t  if (p->sym->attr.mod_proc && p->sym->attr.if_source != IFSRC_DECL)\n \t    {\n-\t      gfc_error (\"MODULE PROCEDURE '%s' at %L does not come \"\n-\t\t\t \"from a module\", p->sym->name, &p->where);\n+\t      gfc_error (\"'%s' at %L is not a module procedure\",\n+\t\t\t p->sym->name, &p->where);\n \t      return;\n \t    }\n \t}"}, {"sha": "aa8626626ce527db0bd59b0babf35ad4320b591b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9f63ace2335dc9bf97cf853408d4070c11218af", "patch": "@@ -1,3 +1,9 @@\n+2007-08-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/33228\n+\t* interface.c (check_interface0): Improve error for external procs.\n+\t(check_sym_interfaces): Fix checking of module procedures.\n+\n 2007-08-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/sync-2.c (AI_ALIGN): Define if not defined."}, {"sha": "3198da1dafc1c66a6ad517ba05bfe1a8d9d75779", "filename": "gcc/testsuite/gfortran.dg/generic_14.f90", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_14.f90?ref=e9f63ace2335dc9bf97cf853408d4070c11218af", "patch": "@@ -0,0 +1,105 @@\n+! { dg-do compile }\n+!\n+! Check whether MODULE PROCEDUREs are properly treated\n+! They need to be contained in a procedure, i.e. an\n+! interface in another procedure is invalid; they may, however,\n+! come from a use-associated procedure.\n+! (The PROCEDURE statement allows also for non-module procedures\n+!  if there is an explicit interface.)\n+!\n+! PR fortran/33228\n+!\n+module inclmod\n+  implicit none\n+  interface\n+    subroutine wrong1(a)\n+      integer :: a\n+    end subroutine wrong1\n+  end interface\n+  interface gen_incl\n+    module procedure ok1\n+  end interface gen_incl\n+  external wrong2\n+  external wrong3\n+  real wrong3\n+contains\n+  subroutine ok1(f)\n+    character :: f\n+  end subroutine ok1\n+end module inclmod\n+\n+module a\n+  use inclmod\n+  implicit none\n+  interface gen\n+    subroutine ok1_a(a,b)\n+      integer :: a,b\n+    end subroutine ok1_a\n+    module procedure ok1, ok2_a\n+  end interface gen\n+contains\n+  subroutine ok2_a(a,b,c)\n+     integer :: a,b,c\n+  end subroutine ok2_a\n+end module a\n+\n+module b\n+  use inclmod\n+  interface gen_wrong_0\n+    module procedure gen_incl  ! { dg-error \"Cannot change attributes\" }\n+  end interface gen_wrong_0\n+end module b\n+\n+module c\n+  use inclmod\n+  interface gen_wrong_1\n+    module procedure wrong1  ! { dg-error \"is not a module procedure\" }\n+  end interface gen_wrong_1\n+end module c\n+\n+module d\n+  use inclmod\n+  interface gen_wrong_2\n+    module procedure wrong2  ! { dg-error \"Cannot change attributes\" }\n+  end interface gen_wrong_2\n+end module d\n+\n+module e\n+  use inclmod\n+  interface gen_wrong_3\n+    module procedure wrong3  ! { dg-error \"Cannot change attributes\" }\n+  end interface gen_wrong_3\n+end module e\n+\n+module f\n+  implicit none\n+  interface\n+    subroutine wrong_a(a)\n+      integer :: a\n+    end subroutine wrong_a\n+  end interface\n+  interface gen_wrong_4\n+    module procedure wrong_a  ! { dg-error \"is not a module procedure\" }\n+  end interface gen_wrong_4\n+end module f\n+\n+module g\n+  implicit none\n+  external wrong_b            ! { dg-error \"has no explicit interface\" }\n+  interface gen_wrong_5\n+    module procedure wrong_b  ! wrong, see above\n+  end interface gen_wrong_5\n+end module g\n+\n+module h\n+  implicit none\n+  external wrong_c            ! { dg-error \"has no explicit interface\" }\n+  real wrong_c\n+  interface gen_wrong_6\n+    module procedure wrong_c  ! wrong, see above\n+  end interface gen_wrong_6\n+end module h\n+\n+end\n+\n+! { dg-final { cleanup-modules \"a inclmod\" } }"}, {"sha": "92dd65096c1ac8897b90c4a85e7ec9a5c3612660", "filename": "gcc/testsuite/gfortran.dg/generic_9.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f63ace2335dc9bf97cf853408d4070c11218af/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_9.f90?ref=e9f63ace2335dc9bf97cf853408d4070c11218af", "patch": "@@ -21,7 +21,7 @@ MODULE class_foo\n USE class_foo_type, ONLY: foo, bar_init_set_int\n \n INTERFACE foo_init\n-  MODULE PROCEDURE foo_init_default  ! { dg-error \"does not come from a module\" }\n+  MODULE PROCEDURE foo_init_default  ! { dg-error \"is not a module procedure\" }\n END INTERFACE\n \n INTERFACE bar_init"}]}