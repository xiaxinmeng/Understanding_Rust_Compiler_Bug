{"sha": "614c7d3716281075f8ef704f37895a121a14d9bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE0YzdkMzcxNjI4MTA3NWY4ZWY3MDRmMzc4OTVhMTIxYTE0ZDliZA==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-12-04T07:32:04Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-12-04T07:32:04Z"}, "message": "cppfiles.c (cpp_make_system_header): Take 2 booleans, and operate on current buffer.\n\n        * cppfiles.c (cpp_make_system_header): Take 2 booleans,\n        and operate on current buffer.\n        (cpp_read_file): Rename _cpp_read_file.\n        * cpplib.c (do_line, do_pragma_system_header): Update calls to\n        cpp_make_system_header.\n        * fix-header.c: Similarly.\n        * cpphash.h (_cpp_read_file): Move from...\n        * cpplib.h: ... here.\n        * cppinit.c (do_includes, cpp_start_read): Update appropriately.\n\nFrom-SVN: r37989", "tree": {"sha": "2ee77fc01b58627c217cdfa65bb2e8134086c70b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ee77fc01b58627c217cdfa65bb2e8134086c70b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/614c7d3716281075f8ef704f37895a121a14d9bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614c7d3716281075f8ef704f37895a121a14d9bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/614c7d3716281075f8ef704f37895a121a14d9bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614c7d3716281075f8ef704f37895a121a14d9bd/comments", "author": null, "committer": null, "parents": [{"sha": "2936419d1cbff6e526a77bbba46b06c5552a60e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2936419d1cbff6e526a77bbba46b06c5552a60e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2936419d1cbff6e526a77bbba46b06c5552a60e1"}], "stats": {"total": 58, "additions": 35, "deletions": 23}, "files": [{"sha": "f2ff46108eeb1a71d23358ae8979586b60db447f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=614c7d3716281075f8ef704f37895a121a14d9bd", "patch": "@@ -1,3 +1,15 @@\n+2000-12-04  Neil Booth  <neilb@earthling.net>\n+\n+        * cppfiles.c (cpp_make_system_header): Take 2 booleans,\n+        and operate on current buffer.\n+        (cpp_read_file): Rename _cpp_read_file.  \n+        * cpplib.c (do_line, do_pragma_system_header): Update calls to\n+        cpp_make_system_header.\n+        * fix-header.c: Similarly.\n+        * cpphash.h (_cpp_read_file): Move from... \n+        * cpplib.h: ... here.\n+        * cppinit.c (do_includes, cpp_start_read): Update appropriately.\n+\n 2000-12-03  Kaveh R. Ghazi  <ghazi@teal.rutgers.edu>\n \n \t* builtins.c (expand_builtin_strspn, expand_builtin_strcspn):"}, {"sha": "4043a57c2b98079796b0009c3976a9ab1515e704", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=614c7d3716281075f8ef704f37895a121a14d9bd", "patch": "@@ -526,17 +526,16 @@ _cpp_fake_include (pfile, fname)\n    see the details of struct include_file.  This is an exported interface\n    because fix-header needs it.  */\n void\n-cpp_make_system_header (pfile, pbuf, flag)\n+cpp_make_system_header (pfile, syshdr, externc)\n      cpp_reader *pfile;\n-     cpp_buffer *pbuf;\n-     int flag;\n+     int syshdr, externc;\n {\n-  if (flag < 0 || flag > 2)\n-    cpp_ice (pfile, \"cpp_make_system_header: bad flag %d\\n\", flag);\n-  else if (!pbuf->inc)\n-    cpp_ice (pfile, \"cpp_make_system_header called on non-file buffer\");\n-  else\n-    pbuf->inc->sysp = flag;\n+  int flags = 0;\n+\n+  /* 1 = system header, 2 = system header to be treated as C.  */\n+  if (syshdr)\n+    flags = 1 + (externc != 0);\n+  pfile->buffer->inc->sysp = flags;\n }\n \n /* Report on all files that might benefit from a multiple include guard.\n@@ -714,7 +713,7 @@ _cpp_compare_file_date (pfile, f)\n /* Push an input buffer and load it up with the contents of FNAME.\n    If FNAME is \"\" or NULL, read standard input.  */\n int\n-cpp_read_file (pfile, fname)\n+_cpp_read_file (pfile, fname)\n      cpp_reader *pfile;\n      const char *fname;\n {"}, {"sha": "2cab3628bb1a633dece5c96fba26446065891727", "filename": "gcc/cpphash.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=614c7d3716281075f8ef704f37895a121a14d9bd", "patch": "@@ -224,6 +224,7 @@ extern cpp_hashnode *_cpp_lookup_with_hash PARAMS ((cpp_reader*, size_t,\n \n /* In cppfiles.c */\n extern void _cpp_simplify_pathname\tPARAMS ((char *));\n+extern int _cpp_read_file\t\tPARAMS ((cpp_reader *, const char *));\n extern void _cpp_execute_include\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t const cpp_token *, int,\n \t\t\t\t\t\t struct file_name_list *));"}, {"sha": "7e5d7f6af67fd869cba3b1150a8722deb3a4ecd4", "filename": "gcc/cppinit.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=614c7d3716281075f8ef704f37895a121a14d9bd", "patch": "@@ -931,7 +931,7 @@ do_includes (pfile, p, scan)\n \n       /* Later: maybe update this to use the #include \"\" search path\n \t if cpp_read_file fails.  */\n-      if (cpp_read_file (pfile, p->arg) && scan)\n+      if (_cpp_read_file (pfile, p->arg) && scan)\n \tcpp_scan_buffer_nooutput (pfile, 0);\n       q = p->next;\n       free (p);\n@@ -1002,7 +1002,7 @@ cpp_start_read (pfile, fname)\n   if (CPP_OPTION (pfile, out_fname) == NULL)\n     CPP_OPTION (pfile, out_fname) = \"\";\n \n-  if (!cpp_read_file (pfile, fname))\n+  if (!_cpp_read_file (pfile, fname))\n     return 0;\n \n   initialize_dependency_output (pfile);"}, {"sha": "197faaf3c189af6037b2867998d457ead3b57ca3", "filename": "gcc/cpplib.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=614c7d3716281075f8ef704f37895a121a14d9bd", "patch": "@@ -771,23 +771,23 @@ do_line (pfile)\n \t  if (action_number == 1)\n \t    {\n \t      reason = FC_ENTER;\n-\t      cpp_make_system_header (pfile, buffer, 0);\n+\t      cpp_make_system_header (pfile, 0, 0);\n \t      read_line_number (pfile, &action_number);\n \t    }\n \t  else if (action_number == 2)\n \t    {\n \t      reason = FC_LEAVE;\n-\t      cpp_make_system_header (pfile, buffer, 0);\n+\t      cpp_make_system_header (pfile, 0, 0);\n \t      read_line_number (pfile, &action_number);\n \t    }\n \t  if (action_number == 3)\n \t    {\n-\t      cpp_make_system_header (pfile, buffer, 1);\n+\t      cpp_make_system_header (pfile, 1, 0);\n \t      read_line_number (pfile, &action_number);\n \t    }\n \t  if (action_number == 4)\n \t    {\n-\t      cpp_make_system_header (pfile, buffer, 2);\n+\t      cpp_make_system_header (pfile, 1, 1);\n \t      read_line_number (pfile, &action_number);\n \t    }\n \t}\n@@ -1100,11 +1100,12 @@ static void\n do_pragma_system_header (pfile)\n      cpp_reader *pfile;\n {\n-  cpp_buffer *ip = CPP_BUFFER (pfile);\n-  if (CPP_PREV_BUFFER (ip) == NULL)\n-    cpp_warning (pfile, \"#pragma system_header outside include file\");\n+  cpp_buffer *buffer = pfile->buffer;\n+\n+  if (buffer->prev == 0)\n+    cpp_warning (pfile, \"#pragma system_header ignored outside include file\");\n   else\n-    cpp_make_system_header (pfile, ip, 1);\n+    cpp_make_system_header (pfile, 1, 0);\n \n   check_eol (pfile);\n }"}, {"sha": "524b8f6ed616c030f59787e5e280dac870251418", "filename": "gcc/cpplib.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=614c7d3716281075f8ef704f37895a121a14d9bd", "patch": "@@ -781,8 +781,7 @@ extern void cpp_stop_lookahead\t\tPARAMS ((cpp_reader *, int));\n \n /* In cppfiles.c */\n extern int cpp_included\tPARAMS ((cpp_reader *, const char *));\n-extern int cpp_read_file PARAMS ((cpp_reader *, const char *));\n-extern void cpp_make_system_header PARAMS ((cpp_reader *, cpp_buffer *, int));\n+extern void cpp_make_system_header PARAMS ((cpp_reader *, int, int));\n \n /* These are inline functions instead of macros so we can get type\n    checking.  */"}, {"sha": "872751257ab2b209a27320ad7e64f80ffa71389d", "filename": "gcc/fix-header.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614c7d3716281075f8ef704f37895a121a14d9bd/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=614c7d3716281075f8ef704f37895a121a14d9bd", "patch": "@@ -636,7 +636,7 @@ read_scan_file (in_fname, argc, argv)\n     exit (FATAL_EXIT_CODE);\n \n   /* We are scanning a system header, so mark it as such.  */\n-  cpp_make_system_header (scan_in, CPP_BUFFER (scan_in), 1);\n+  cpp_make_system_header (scan_in, 1, 0);\n \n   scan_decls (scan_in, argc, argv);\n   for (cur_symbols = &symbol_table[0]; cur_symbols->names; cur_symbols++)"}]}