{"sha": "88c4d85e27e18bf991ab8728b73127a0385f2c27", "node_id": "C_kwDOANBUbNoAKDg4YzRkODVlMjdlMThiZjk5MWFiODcyOGI3MzEyN2EwMzg1ZjJjMjc", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2022-03-03T10:23:26Z"}, "committer": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2022-03-03T10:25:11Z"}, "message": "openmp, fortran: Check that the type of an event handle in a detach clause is suitable [PR104131]\n\nThis rejects variables that are array types, array elements or derived type\nmembers when used as the event handle inside a detach clause (in accordance\nwith the OpenMP specification).  This would previously lead to an ICE.\n\n2022-03-03  Kwok Cheung Yeung  <kcy@codesourcery.com>\n\ngcc/fortran/\n\n\tPR fortran/104131\n\t* openmp.cc (gfc_match_omp_detach): Move check for type of event\n\thandle to...\n\t(resolve_omp_clauses) ...here.  Also check that the event handle is\n\tnot an array, or an array access or structure element access.\n\ngcc/testsuite/\n\n\tPR fortran/104131\n\t* gfortran.dg/gomp/pr104131.f90: New.\n\t* gfortran.dg/gomp/task-detach-1.f90: Update expected error message.", "tree": {"sha": "d8da68a27c3a7dd423d86d2ef74e676c9c576963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8da68a27c3a7dd423d86d2ef74e676c9c576963"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88c4d85e27e18bf991ab8728b73127a0385f2c27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c4d85e27e18bf991ab8728b73127a0385f2c27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88c4d85e27e18bf991ab8728b73127a0385f2c27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c4d85e27e18bf991ab8728b73127a0385f2c27/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b5e456f0187406e17444b6e40d974f94524f2a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5e456f0187406e17444b6e40d974f94524f2a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b5e456f0187406e17444b6e40d974f94524f2a2"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "16cd03a3d67c07d52f3f8f187f55a5113d280b15", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c4d85e27e18bf991ab8728b73127a0385f2c27/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c4d85e27e18bf991ab8728b73127a0385f2c27/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=88c4d85e27e18bf991ab8728b73127a0385f2c27", "patch": "@@ -531,14 +531,6 @@ gfc_match_omp_detach (gfc_expr **expr)\n   if (gfc_match_variable (expr, 0) != MATCH_YES)\n     goto syntax_error;\n \n-  if ((*expr)->ts.type != BT_INTEGER || (*expr)->ts.kind != gfc_c_intptr_kind)\n-    {\n-      gfc_error (\"%qs at %L should be of type \"\n-\t\t \"integer(kind=omp_event_handle_kind)\",\n-\t\t (*expr)->symtree->n.sym->name, &(*expr)->where);\n-      return MATCH_ERROR;\n-    }\n-\n   if (gfc_match_char (')') != MATCH_YES)\n     goto syntax_error;\n \n@@ -7581,9 +7573,29 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \tgfc_error (\"%s must contain at least one MAP clause at %L\",\n \t\t   p, &code->loc);\n     }\n-  if (!openacc && omp_clauses->mergeable && omp_clauses->detach)\n-    gfc_error (\"%<DETACH%> clause at %L must not be used together with \"\n-\t       \"%<MERGEABLE%> clause\", &omp_clauses->detach->where);\n+\n+  if (!openacc && omp_clauses->detach)\n+    {\n+      if (!gfc_resolve_expr (omp_clauses->detach)\n+\t  || omp_clauses->detach->ts.type != BT_INTEGER\n+\t  || omp_clauses->detach->ts.kind != gfc_c_intptr_kind\n+\t  || omp_clauses->detach->rank != 0)\n+\tgfc_error (\"%qs at %L should be a scalar of type \"\n+\t\t   \"integer(kind=omp_event_handle_kind)\",\n+\t\t   omp_clauses->detach->symtree->n.sym->name,\n+\t\t   &omp_clauses->detach->where);\n+      else if (omp_clauses->detach->symtree->n.sym->attr.dimension > 0)\n+\tgfc_error (\"The event handle at %L must not be an array element\",\n+\t\t   &omp_clauses->detach->where);\n+      else if (omp_clauses->detach->symtree->n.sym->ts.type == BT_DERIVED\n+\t       || omp_clauses->detach->symtree->n.sym->ts.type == BT_CLASS)\n+\tgfc_error (\"The event handle at %L must not be part of \"\n+\t\t   \"a derived type or class\", &omp_clauses->detach->where);\n+\n+      if (omp_clauses->mergeable)\n+\tgfc_error (\"%<DETACH%> clause at %L must not be used together with \"\n+\t\t   \"%<MERGEABLE%> clause\", &omp_clauses->detach->where);\n+    }\n }\n \n "}, {"sha": "472d19dd753d2073821c3b47e6313d8e1fd173d3", "filename": "gcc/testsuite/gfortran.dg/gomp/pr104131.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c4d85e27e18bf991ab8728b73127a0385f2c27/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr104131.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c4d85e27e18bf991ab8728b73127a0385f2c27/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr104131.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr104131.f90?ref=88c4d85e27e18bf991ab8728b73127a0385f2c27", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+\n+program p\n+  use iso_c_binding, only: c_intptr_t\n+  implicit none\n+  integer, parameter :: omp_event_handle_kind = c_intptr_t\n+\n+  type dt\n+    integer(omp_event_handle_kind) :: f\n+  end type\n+  integer(omp_event_handle_kind) :: x(1)\n+  type(dt) :: y\n+\n+  !$omp task detach(x) ! { dg-error \"'x' at \\\\\\(1\\\\\\) should be a scalar of type integer\\\\\\(kind=omp_event_handle_kind\\\\\\)\" }\n+  !$omp end task\n+\n+  !$omp task detach(x(1)) ! { dg-error \"The event handle at \\\\\\(1\\\\\\) must not be an array element\" }\n+  !$omp end task\n+\n+  !$omp task detach(y) ! { dg-error \"'y' at \\\\\\(1\\\\\\) should be a scalar of type integer\\\\\\(kind=omp_event_handle_kind\\\\\\)\" }\n+  !$omp end task\n+\n+  !$omp task detach(y%f) ! { dg-error \"The event handle at \\\\\\(1\\\\\\) must not be part of a derived type or class\" }\n+  !$omp end task\n+end program"}, {"sha": "2e77aea054987b2cf550f67b78cd910b56e82f9b", "filename": "gcc/testsuite/gfortran.dg/gomp/task-detach-1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88c4d85e27e18bf991ab8728b73127a0385f2c27/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftask-detach-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88c4d85e27e18bf991ab8728b73127a0385f2c27/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftask-detach-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftask-detach-1.f90?ref=88c4d85e27e18bf991ab8728b73127a0385f2c27", "patch": "@@ -18,8 +18,8 @@ program task_detach_1\n   !$omp task detach(x) mergeable ! { dg-error \"'DETACH' clause at \\\\\\(1\\\\\\) must not be used together with 'MERGEABLE' clause\" }\n   !$omp end task\n \n-  !$omp task detach(z) ! { dg-error \"'z' at \\\\\\(1\\\\\\) should be of type integer\\\\\\(kind=omp_event_handle_kind\\\\\\)\" }\n-  !$omp end task ! { dg-error \"Unexpected !\\\\\\$OMP END TASK statement at \\\\\\(1\\\\\\)\" }\n+  !$omp task detach(z) ! { dg-error \"'z' at \\\\\\(1\\\\\\) should be a scalar of type integer\\\\\\(kind=omp_event_handle_kind\\\\\\)\" }\n+  !$omp end task\n   \n   !$omp task detach (x) firstprivate (x) ! { dg-error \"DETACH event handle 'x' in FIRSTPRIVATE clause at \\\\\\(1\\\\\\)\" }\n   !$omp end task"}]}