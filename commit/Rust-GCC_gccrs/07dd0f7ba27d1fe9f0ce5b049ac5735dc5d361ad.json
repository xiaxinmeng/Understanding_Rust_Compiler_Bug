{"sha": "07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad", "node_id": "C_kwDOANBUbNoAKDA3ZGQwZjdiYTI3ZDFmZTlmMGNlNWIwNDlhYzU3MzVkYzVkMzYxYWQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-05T12:14:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-05T14:05:59Z"}, "message": "tree-optimization/106198 - CFG cleanup vs LC SSA\n\nThis is another case like PR106182 where for the 2nd testcase in\nthe bug there are no removed or discovered loops but still changing\nloop exits invalidates LC SSA and it is not enough to just scan for\nuses in the blocks that changed loop depth.  One might argue that\nif we'd include former exit destinations we'd pick up the original\nLC SSA use but for virtuals on block merging we'd have propagated\nthose out (while for regular uses we insert copies).  CFG cleanup\ncan also be entered with loops needing fixup so any heuristics\nbased on loop structure are bound to fail.\n\n\tPR tree-optimization/106198\n\t* tree-cfgcleanup.cc (repair_loop_structures): Always do a\n\tfull LC SSA rewrite but only if any blocks changed loop\n\tdepth.\n\n\t* gcc.dg/pr106198.c: New testcase.", "tree": {"sha": "5cb0dcaf215051b224a42f416a0089db4467ee50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cb0dcaf215051b224a42f416a0089db4467ee50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cc08ceb5baa4e4d6ade6de3a82d22d8fc2cc2a0"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "00d2758efa7d813e4d4f39f2baad3288b6aed78d", "filename": "gcc/testsuite/gcc.dg/pr106198.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106198.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106198.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr106198.c?ref=07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+int printf(const char *, ...);\n+long a;\n+int b;\n+volatile int c;\n+int main() {\n+  long e = a;\n+  int f = a;\n+ L:\n+  if (b > 0) {\n+    printf(\"0\");\n+    goto L;\n+  }\n+  if (f) {\n+    printf(\"%ld\", (long)b);\n+    goto L;\n+  }\n+  e >= b && c;\n+  return 0;\n+}"}, {"sha": "b9ff6896ce60af6e9c7cde913d000fbc2960b24b", "filename": "gcc/tree-cfgcleanup.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad/gcc%2Ftree-cfgcleanup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad/gcc%2Ftree-cfgcleanup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.cc?ref=07dd0f7ba27d1fe9f0ce5b049ac5735dc5d361ad", "patch": "@@ -1183,9 +1183,9 @@ repair_loop_structures (void)\n      become unreachable by back edges from latch).  Also a former\n      irreducible loop can become reducible - in this case force a full\n      rewrite into loop-closed SSA form.  */\n-  if (loops_state_satisfies_p (LOOP_CLOSED_SSA))\n-    rewrite_into_loop_closed_ssa (n_new_or_deleted_loops ? NULL : changed_bbs,\n-\t\t\t\t  TODO_update_ssa);\n+  if (loops_state_satisfies_p (LOOP_CLOSED_SSA)\n+      && (!bitmap_empty_p (changed_bbs) || n_new_or_deleted_loops))\n+    rewrite_into_loop_closed_ssa (NULL, TODO_update_ssa);\n \n   BITMAP_FREE (changed_bbs);\n "}]}