{"sha": "e0201d823abfcbc3acadc1f78a0c94fdc8474dfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAyMDFkODIzYWJmY2JjM2FjYWRjMWY3OGEwYzk0ZmRjODQ3NGRmZQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-07-09T07:53:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-09T07:53:21Z"}, "message": "[Ada] Fix ownership checking for pointers in SPARK\n\nChecking of the readable status of sub-expressions occurring in the\ntarget path of an assignment should occur before the right-hand-side is\nmoved or borrowed or observed.\n\nThere is no impact on compilation.\n\n2019-07-09  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_spark.adb (Check_Expression): Change signature to take an\n\tExtended_Checking_Mode, for handling read permission checking of\n\tsub-expressions in an assignment.\n\t(Check_Parameter_Or_Global): Adapt to new behavior of\n\tCheck_Expression for mode Assign.\n\t(Check_Safe_Pointers): Do not analyze generic bodies.\n\t(Check_Assignment): Separate checking of the target of an\n\tassignment.\n\nFrom-SVN: r273266", "tree": {"sha": "38dc220a202f0a0adb0bb44427b607f6553b31f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38dc220a202f0a0adb0bb44427b607f6553b31f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0201d823abfcbc3acadc1f78a0c94fdc8474dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0201d823abfcbc3acadc1f78a0c94fdc8474dfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0201d823abfcbc3acadc1f78a0c94fdc8474dfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0201d823abfcbc3acadc1f78a0c94fdc8474dfe/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5d3d113ca9c67320ed06b65c50e8e46e22b6198"}], "stats": {"total": 85, "additions": 62, "deletions": 23}, "files": [{"sha": "9f6b789b983770e6e0a9678ee4e832011cb56e90", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0201d823abfcbc3acadc1f78a0c94fdc8474dfe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0201d823abfcbc3acadc1f78a0c94fdc8474dfe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e0201d823abfcbc3acadc1f78a0c94fdc8474dfe", "patch": "@@ -1,3 +1,14 @@\n+2019-07-09  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_spark.adb (Check_Expression): Change signature to take an\n+\tExtended_Checking_Mode, for handling read permission checking of\n+\tsub-expressions in an assignment.\n+\t(Check_Parameter_Or_Global): Adapt to new behavior of\n+\tCheck_Expression for mode Assign.\n+\t(Check_Safe_Pointers): Do not analyze generic bodies.\n+\t(Check_Assignment): Separate checking of the target of an\n+\tassignment.\n+\n 2019-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* repinfo.ads (JSON format): Adjust."}, {"sha": "2b1991959ab1bbb83a86d95ad045075abfe75cf2", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 51, "deletions": 23, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0201d823abfcbc3acadc1f78a0c94fdc8474dfe/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0201d823abfcbc3acadc1f78a0c94fdc8474dfe/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=e0201d823abfcbc3acadc1f78a0c94fdc8474dfe", "patch": "@@ -560,9 +560,13 @@ package body Sem_SPARK is\n    --  has the right permission, and also updating permissions when a path is\n    --  moved, borrowed, or observed.\n \n-   type Checking_Mode is\n+   type Extended_Checking_Mode is\n \n-     (Read,\n+     (Read_Subexpr,\n+      --  Special value used for assignment, to check that subexpressions of\n+      --  the assigned path are readable.\n+\n+      Read,\n       --  Default mode\n \n       Move,\n@@ -591,6 +595,8 @@ package body Sem_SPARK is\n       --  and extensions are set to Read_Only.\n      );\n \n+   subtype Checking_Mode is Extended_Checking_Mode range Read .. Observe;\n+\n    type Result_Kind is (Folded, Unfolded);\n    --  The type declaration to discriminate in the Perm_Or_Tree type\n \n@@ -631,7 +637,7 @@ package body Sem_SPARK is\n \n    procedure Check_Declaration (Decl : Node_Id);\n \n-   procedure Check_Expression (Expr : Node_Id; Mode : Checking_Mode);\n+   procedure Check_Expression (Expr : Node_Id; Mode : Extended_Checking_Mode);\n    pragma Precondition (Nkind_In (Expr, N_Index_Or_Discriminant_Constraint,\n                                         N_Range_Constraint,\n                                         N_Subtype_Indication)\n@@ -1421,8 +1427,10 @@ package body Sem_SPARK is\n    -- Check_Expression --\n    ----------------------\n \n-   procedure Check_Expression (Expr : Node_Id; Mode : Checking_Mode) is\n-\n+   procedure Check_Expression\n+     (Expr : Node_Id;\n+      Mode : Extended_Checking_Mode)\n+   is\n       --  Local subprograms\n \n       function Is_Type_Name (Expr : Node_Id) return Boolean;\n@@ -1543,8 +1551,14 @@ package body Sem_SPARK is\n          return;\n \n       elsif Is_Path_Expression (Expr) then\n-         Read_Indexes (Expr);\n-         Process_Path (Expr, Mode);\n+         if Mode /= Assign then\n+            Read_Indexes (Expr);\n+         end if;\n+\n+         if Mode /= Read_Subexpr then\n+            Process_Path (Expr, Mode);\n+         end if;\n+\n          return;\n       end if;\n \n@@ -2511,6 +2525,10 @@ package body Sem_SPARK is\n             Mode := Move;\n       end case;\n \n+      if Mode = Assign then\n+         Check_Expression (Expr, Read_Subexpr);\n+      end if;\n+\n       Check_Expression (Expr, Mode);\n    end Check_Parameter_Or_Global;\n \n@@ -2618,11 +2636,6 @@ package body Sem_SPARK is\n          Reset (Current_Perm_Env);\n       end Initialize;\n \n-      --  Local variables\n-\n-      Prag : Node_Id;\n-      --  SPARK_Mode pragma in application\n-\n    --  Start of processing for Check_Safe_Pointers\n \n    begin\n@@ -2636,20 +2649,28 @@ package body Sem_SPARK is\n             | N_Package_Declaration\n             | N_Subprogram_Body\n          =>\n-            Prag := SPARK_Pragma (Defining_Entity (N));\n+            declare\n+               E    : constant Entity_Id := Defining_Entity (N);\n+               Prag : constant Node_Id := SPARK_Pragma (E);\n+               --  SPARK_Mode pragma in application\n \n-            if Present (Prag) then\n-               if Get_SPARK_Mode_From_Annotation (Prag) = Opt.On then\n-                  Check_Node (N);\n-               end if;\n+            begin\n+               if Ekind (Unique_Entity (E)) in Generic_Unit_Kind then\n+                  null;\n \n-            elsif Nkind (N) = N_Package_Body then\n-               Check_List (Declarations (N));\n+               elsif Present (Prag) then\n+                  if Get_SPARK_Mode_From_Annotation (Prag) = Opt.On then\n+                     Check_Node (N);\n+                  end if;\n \n-            elsif Nkind (N) = N_Package_Declaration then\n-               Check_List (Private_Declarations (Specification (N)));\n-               Check_List (Visible_Declarations (Specification (N)));\n-            end if;\n+               elsif Nkind (N) = N_Package_Body then\n+                  Check_List (Declarations (N));\n+\n+               elsif Nkind (N) = N_Package_Declaration then\n+                  Check_List (Private_Declarations (Specification (N)));\n+                  Check_List (Visible_Declarations (Specification (N)));\n+               end if;\n+            end;\n \n          when others =>\n             null;\n@@ -2717,7 +2738,14 @@ package body Sem_SPARK is\n          when N_Assignment_Statement =>\n             declare\n                Target : constant Node_Id := Name (Stmt);\n+\n             begin\n+               --  Start with checking that the subexpressions of the target\n+               --  path are readable, before possibly updating the permission\n+               --  of these subexpressions in Check_Assignment.\n+\n+               Check_Expression (Target, Read_Subexpr);\n+\n                Check_Assignment (Target => Target,\n                                  Expr   => Expression (Stmt));\n "}]}