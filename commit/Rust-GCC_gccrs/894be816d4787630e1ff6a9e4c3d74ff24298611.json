{"sha": "894be816d4787630e1ff6a9e4c3d74ff24298611", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk0YmU4MTZkNDc4NzYzMGUxZmY2YTllNGMzZDc0ZmYyNDI5ODYxMQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2004-09-04T22:09:20Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-09-04T22:09:20Z"}, "message": "darwin.S: Fix comments and identation.\n\n2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/darwin.S: Fix comments and identation.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\nFrom-SVN: r87090", "tree": {"sha": "0d404ed2c6ebb48078268ca94f84352b20c6acfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d404ed2c6ebb48078268ca94f84352b20c6acfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/894be816d4787630e1ff6a9e4c3d74ff24298611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/894be816d4787630e1ff6a9e4c3d74ff24298611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/894be816d4787630e1ff6a9e4c3d74ff24298611", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/894be816d4787630e1ff6a9e4c3d74ff24298611/comments", "author": null, "committer": null, "parents": [{"sha": "40b32ef83fbd8c96e341f25bcf98d2fa7667fca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b32ef83fbd8c96e341f25bcf98d2fa7667fca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b32ef83fbd8c96e341f25bcf98d2fa7667fca9"}], "stats": {"total": 103, "additions": 54, "deletions": 49}, "files": [{"sha": "f1be09c62005c83fff13f86252fa22f69469f5d0", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894be816d4787630e1ff6a9e4c3d74ff24298611/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894be816d4787630e1ff6a9e4c3d74ff24298611/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=894be816d4787630e1ff6a9e4c3d74ff24298611", "patch": "@@ -1,3 +1,8 @@\n+2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* src/powerpc/darwin.S: Fix comments and identation.\n+\t* src/powerpc/darwin_closure.S: Likewise.\n+\n 2004-09-02  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* src/powerpc/ffi_darwin.c: Add flag for longdouble return values."}, {"sha": "b608e9c0333a8a6843d7a39e87e5897826dc2540", "filename": "libffi/src/powerpc/darwin.S", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894be816d4787630e1ff6a9e4c3d74ff24298611/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894be816d4787630e1ff6a9e4c3d74ff24298611/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S?ref=894be816d4787630e1ff6a9e4c3d74ff24298611", "patch": "@@ -40,8 +40,8 @@\n \t.align 2\n _ffi_call_DARWIN:\n LFB0:\n-\tmr      r12,r8\t\t/* We only need r12 until the call,\n-\t\t\t\t   so it doesn't have to be saved...  */\n+\tmr   \tr12,r8\t/* We only need r12 until the call,\n+\t\t\t   so it doesn't have to be saved.  */\n LFB1:\n \t/* Save the old stack pointer as AP.  */\n \tmr\tr8,r1\n@@ -52,16 +52,16 @@ LCFI0:\n \t/* Save registers we use.  */\n \tmflr\tr9\n \n-\tstw\tr28,-16(r8)\n+\tstw\tr28,-16(r8)\t\n \tstw\tr29,-12(r8)\n-\tstw\tr30, -8(r8)\n-\tstw\tr31, -4(r8)\n+\tstw\tr30,-8(r8)\n+\tstw\tr31,-4(r8)\n \n-\tstw\tr9,  8(r8)\n-\tstw\tr2, 20(r1)\n+\tstw\tr9,8(r8)\n+\tstw\tr2,20(r1)\n LCFI1:\n \n-\t/* Save arguments over call...  */\n+\t/* Save arguments over call.  */\n \tmr\tr31,r5\t/* flags,  */\n \tmr\tr30,r6\t/* rvalue,  */\n \tmr\tr29,r7\t/* function address,  */\n@@ -71,7 +71,7 @@ LCFI2:\n \tmr\tr4,r1\n \tli\tr9,0\n \n-\tmtctr\tr12 // r12 holds address of _ffi_prep_args\n+\tmtctr\tr12 /* r12 holds address of _ffi_prep_args.  */\n \tbctrl\n \tlwz     r2,20(r1)\n \n@@ -82,19 +82,19 @@ LCFI2:\n \tmtctr\tr29\n \t/* Load all those argument registers.\n \t   We have set up a nice stack frame, just load it into registers.  */\n-\tlwz     r3, 20+(1*4)(r1)\n-\tlwz     r4, 20+(2*4)(r1)\n-\tlwz     r5, 20+(3*4)(r1)\n-\tlwz     r6, 20+(4*4)(r1)\n+\tlwz     r3,20+(1*4)(r1)\n+\tlwz     r4,20+(2*4)(r1)\n+\tlwz     r5,20+(3*4)(r1)\n+\tlwz     r6,20+(4*4)(r1)\n \tnop\n-\tlwz     r7, 20+(5*4)(r1)\n-\tlwz     r8, 20+(6*4)(r1)\n-\tlwz     r9, 20+(7*4)(r1)\n+\tlwz     r7,20+(5*4)(r1)\n+\tlwz     r8,20+(6*4)(r1)\n+\tlwz     r9,20+(7*4)(r1)\n \tlwz     r10,20+(8*4)(r1)\n \n L1:\n \t/* Load all the FP registers.  */\n-\tbf\t6,L2 // 2f + 0x18\n+\tbf\t6,L2\t/* No floats to load.  */\n \tlfd\tf1,-16-(13*8)(r28)\n \tlfd\tf2,-16-(12*8)(r28)\n \tlfd\tf3,-16-(11*8)(r28)\n@@ -113,8 +113,8 @@ L1:\n \tlfd     f13,-16-(1*8)(r28)\n \n L2:\n-\tmr\tr12,r29 /* Put the target address in r12 as specified.  */\n-\tmtctr  r12\n+\tmr\tr12,r29\t/* Put the target address in r12 as specified.  */\n+\tmtctr  \tr12\n \tnop\n \tnop\n \t/* Make the call.  */\n@@ -129,14 +129,14 @@ L2:\n \tbf\t28,L(done_return_value)\n \tstw\tr4,4(r30)\n \n-\t/* Fall through...  */\n+\t/* Fall through.  */\n \n L(done_return_value):\n \t/* Restore the registers we used and return.  */\n-\tlwz\tr9,   8(r28)\n-\tlwz\tr31,  -4(r28)\n+\tlwz\tr9,8(r28)\n+\tlwz\tr31,-4(r28)\n \tmtlr\tr9\n-\tlwz\tr30, -8(r28)\n+\tlwz\tr30,-8(r28)\n \tlwz\tr29,-12(r28)\n \tlwz\tr28,-16(r28)\n \tlwz\tr1,0(r1)"}, {"sha": "272278b938b09bbbab55ba1f725a7662f273e732", "filename": "libffi/src/powerpc/darwin_closure.S", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/894be816d4787630e1ff6a9e4c3d74ff24298611/libffi%2Fsrc%2Fpowerpc%2Fdarwin_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/894be816d4787630e1ff6a9e4c3d74ff24298611/libffi%2Fsrc%2Fpowerpc%2Fdarwin_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fdarwin_closure.S?ref=894be816d4787630e1ff6a9e4c3d74ff24298611", "patch": "@@ -36,8 +36,8 @@\n \t.align 2\n _ffi_closure_ASM:\n LFB1:\n-\tmflr\tr0\t\t\t/* extract return address  */\n-\tstw\tr0, 8(r1)\t\t/* save the return address  */\n+\tmflr\tr0\t\t/* extract return address  */\n+\tstw\tr0,8(r1)\t/* save the return address  */\n LCFI0:\n \t/* 24 Bytes (Linkage Area)\n \t   32 Bytes (outgoing parameter area, always reserved)\n@@ -53,29 +53,29 @@ LCFI1:\n \n \t/* We store gpr 3 to gpr 10 (aligned to 4)\n \t   in the parents outgoing area.  */\n-\tstw   r3, 200(r1)\n-\tstw   r4, 204(r1)\n-\tstw   r5, 208(r1)\n-\tstw   r6, 212(r1)\n-\tstw   r7, 216(r1)\n-\tstw   r8, 220(r1)\n-\tstw   r9, 224(r1)\n-\tstw   r10, 228(r1)\n+\tstw   r3,200(r1)\n+\tstw   r4,204(r1)\n+\tstw   r5,208(r1)\n+\tstw   r6,212(r1)\n+\tstw   r7,216(r1)\n+\tstw   r8,220(r1)\n+\tstw   r9,224(r1)\n+\tstw   r10,228(r1)\n \n \t/* We save fpr 1 to fpr 13. (aligned to 8)  */\n-\tstfd  f1, 56(r1)\n-\tstfd  f2, 64(r1)\n-\tstfd  f3, 72(r1)\n-\tstfd  f4, 80(r1)\n-\tstfd  f5, 88(r1)\n-\tstfd  f6, 96(r1)\n-\tstfd  f7, 104(r1)\n-\tstfd  f8, 112(r1)\n-\tstfd  f9, 120(r1)\n-\tstfd  f10, 128(r1)\n-\tstfd  f11, 136(r1)\n-\tstfd  f12, 144(r1)\n-\tstfd  f13, 152(r1)\n+\tstfd  f1,56(r1)\n+\tstfd  f2,64(r1)\n+\tstfd  f3,72(r1)\n+\tstfd  f4,80(r1)\n+\tstfd  f5,88(r1)\n+\tstfd  f6,96(r1)\n+\tstfd  f7,104(r1)\n+\tstfd  f8,112(r1)\n+\tstfd  f9,120(r1)\n+\tstfd  f10,128(r1)\n+\tstfd  f11,136(r1)\n+\tstfd  f12,144(r1)\n+\tstfd  f13,152(r1)\n \n \t/* Set up registers for the routine that actually does the work\n \t   get the context pointer from the trampoline.  */\n@@ -226,9 +226,9 @@ Lret_type14:\n \n /* case done  */\n Lfinish:\n-\taddi\tr1,r1,176\t\t/* Restore stack pointer.  */\n-\tlwz\tr0,8(r1)\t\t/* Get return address.  */\n-\tmtlr\tr0\t\t\t/* Reset link register.  */\n+\taddi\tr1,r1,176\t/* Restore stack pointer.  */\n+\tlwz\tr0,8(r1)\t/* Get return address.  */\n+\tmtlr\tr0\t\t/* Reset link register.  */\n \tblr\n \n /* END(ffi_closure_ASM)  */"}]}