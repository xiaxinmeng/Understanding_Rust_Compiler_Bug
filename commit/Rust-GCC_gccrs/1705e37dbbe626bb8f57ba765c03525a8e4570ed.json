{"sha": "1705e37dbbe626bb8f57ba765c03525a8e4570ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcwNWUzN2RiYmU2MjZiYjhmNTdiYTc2NWMwMzUyNWE4ZTQ1NzBlZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-08-11T18:26:08Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-08-11T18:26:08Z"}, "message": "EventQueue.java (currentEvent, lastWhen): New fields.\n\n\t* java/awt/EventQueue.java (currentEvent, lastWhen): New fields.\n\t(postEvent): Removed FIXME comment.\n\t(isDispatchThread): Documented.\n\t(getCurrentEvent): New method.\n\t(dispatchEvent): Set currentEvent and lastWhen.\n\t(getMostRecentEventTime): Rewrote.\n\t(invokeLater): Documented.\n\nFrom-SVN: r70333", "tree": {"sha": "154d20505f42a83a6c31e7eaa7b460c17e5e8379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/154d20505f42a83a6c31e7eaa7b460c17e5e8379"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1705e37dbbe626bb8f57ba765c03525a8e4570ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1705e37dbbe626bb8f57ba765c03525a8e4570ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1705e37dbbe626bb8f57ba765c03525a8e4570ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1705e37dbbe626bb8f57ba765c03525a8e4570ed/comments", "author": null, "committer": null, "parents": [{"sha": "13fb3a61e748da7fa080a8228f0228ec2528116d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13fb3a61e748da7fa080a8228f0228ec2528116d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13fb3a61e748da7fa080a8228f0228ec2528116d"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "b9a8680cadbc36f1814f954f83d287270aa5c14c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1705e37dbbe626bb8f57ba765c03525a8e4570ed/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1705e37dbbe626bb8f57ba765c03525a8e4570ed/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1705e37dbbe626bb8f57ba765c03525a8e4570ed", "patch": "@@ -1,3 +1,13 @@\n+2003-08-11  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/awt/EventQueue.java (currentEvent, lastWhen): New fields.\n+\t(postEvent): Removed FIXME comment.\n+\t(isDispatchThread): Documented.\n+\t(getCurrentEvent): New method.\n+\t(dispatchEvent): Set currentEvent and lastWhen.\n+\t(getMostRecentEventTime): Rewrote.\n+\t(invokeLater): Documented.\n+\n 2003-08-10  Bryce McKinlay  <bryce@mckinlay.net.nz>\n \n \t* java/io/PrintStream.java (print): Always flush if auto_flush is"}, {"sha": "45dc9713b6e4a46a7a03213fe130c2b291746a78", "filename": "libjava/java/awt/EventQueue.java", "status": "modified", "additions": 42, "deletions": 5, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1705e37dbbe626bb8f57ba765c03525a8e4570ed/libjava%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1705e37dbbe626bb8f57ba765c03525a8e4570ed/libjava%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventQueue.java?ref=1705e37dbbe626bb8f57ba765c03525a8e4570ed", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -37,14 +37,16 @@\n \n package java.awt;\n \n+import java.awt.event.ActionEvent;\n+import java.awt.event.InputEvent;\n import java.awt.event.InvocationEvent;\n import java.lang.reflect.InvocationTargetException;\n import java.util.EmptyStackException;\n \n /* Written using on-line Java 2 Platform Standard Edition v1.3 API \n  * Specification, as well as \"The Java Class Libraries\", 2nd edition \n  * (Addison-Wesley, 1998).\n- * Status:  Believed complete, but untested. Check FIXME's.\n+ * Status:  Believed complete, but untested.\n  */\n \n /**\n@@ -65,6 +67,8 @@\n \n   private EventQueue next;\n   private EventQueue prev;\n+  private AWTEvent currentEvent;\n+  private long lastWhen = System.currentTimeMillis();\n \n   private EventDispatchThread dispatchThread = new EventDispatchThread(this);\n \n@@ -162,7 +166,6 @@ public synchronized void postEvent(AWTEvent evt)\n         next.postEvent(evt);\n         return;\n       }\n-    // FIXME: Security checks?\n \n     /* Check for any events already on the queue with the same source \n        and ID. */\t\n@@ -249,6 +252,10 @@ public static void invokeAndWait(Runnable runnable)\n   }\n \n   /**\n+   * This arranges for runnable to have its run method called in the\n+   * dispatch thread of the EventQueue.  This will happen after all\n+   * pending events are processed.\n+   *\n    * @since 1.2\n    */\n   public static void invokeLater(Runnable runnable)\n@@ -261,12 +268,31 @@ public static void invokeLater(Runnable runnable)\n     eq.postEvent(ie);\n   }\n \n+  /**\n+   * Return true if the current thread is the AWT event dispatch\n+   * thread.\n+   */\n   public static boolean isDispatchThread()\n   {\n     EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue(); \n     return (Thread.currentThread() == eq.dispatchThread);\n   }\n \n+  /**\n+   * Return the event currently being dispatched by the event\n+   * dispatch thread.  If the current thread is not the event\n+   * dispatch thread, this method returns null.\n+   *\n+   * @since 1.4\n+   */\n+  public static AWTEvent getCurrentEvent()\n+  {\n+    EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue(); \n+    if (Thread.currentThread() != eq.dispatchThread)\n+      return null;\n+    return eq.currentEvent;\n+  }\n+\n   /**\n    * Allows a custom EventQueue implementation to replace this one. \n    * All pending events are transferred to the new queue. Calls to postEvent,\n@@ -332,6 +358,15 @@ protected void pop() throws EmptyStackException\n    */\n   protected void dispatchEvent(AWTEvent evt)\n   {\n+    currentEvent = evt;\n+\n+    if (evt instanceof InputEvent)\n+      lastWhen = ((InputEvent) evt).getWhen();\n+    else if (evt instanceof ActionEvent)\n+      lastWhen = ((ActionEvent) evt).getWhen();\n+    else if (evt instanceof InvocationEvent)\n+      lastWhen = ((InvocationEvent) evt).getWhen();\n+\n     if (evt instanceof ActiveEvent)\n       {\n         ActiveEvent active_evt = (ActiveEvent) evt;\n@@ -373,7 +408,9 @@ else if (source instanceof MenuComponent)\n    */\n   public static long getMostRecentEventTime()\n   {\n-    // XXX For now, this ONLY does the current time.\n-    return System.currentTimeMillis();\n+    EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue(); \n+    if (Thread.currentThread() != eq.dispatchThread)\n+      return System.currentTimeMillis();\n+    return eq.lastWhen;\n   }\n }"}]}