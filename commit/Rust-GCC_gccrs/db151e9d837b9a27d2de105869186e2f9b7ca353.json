{"sha": "db151e9d837b9a27d2de105869186e2f9b7ca353", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIxNTFlOWQ4MzdiOWEyN2QyZGUxMDU4NjkxODZlMmY5YjdjYTM1Mw==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-08-12T16:14:52Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-08-12T16:14:52Z"}, "message": "lib1funcs.asm (ARM_FUNC_ALIAS): Also alias _L__name.\n\n\t* config/arm/lib1funcs.asm (ARM_FUNC_ALIAS): Also alias _L__name.\n\t(aeabi_uidivmod, aeabi_idivmod): Provide thumb implementation.\n\nFrom-SVN: r85879", "tree": {"sha": "ccb66dbd50764bd500cda582c2a9371bc803449d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccb66dbd50764bd500cda582c2a9371bc803449d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db151e9d837b9a27d2de105869186e2f9b7ca353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db151e9d837b9a27d2de105869186e2f9b7ca353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db151e9d837b9a27d2de105869186e2f9b7ca353", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db151e9d837b9a27d2de105869186e2f9b7ca353/comments", "author": null, "committer": null, "parents": [{"sha": "02b7526217b0d209f0ea4bce341dc7c65d9e1e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b7526217b0d209f0ea4bce341dc7c65d9e1e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b7526217b0d209f0ea4bce341dc7c65d9e1e44"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "3e651a98b54eb6b9eb4a9396abddbfc243af0ae1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db151e9d837b9a27d2de105869186e2f9b7ca353/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db151e9d837b9a27d2de105869186e2f9b7ca353/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db151e9d837b9a27d2de105869186e2f9b7ca353", "patch": "@@ -1,6 +1,11 @@\n+2004-08-12  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/lib1funcs.asm (ARM_FUNC_ALIAS): Also alias _L__name.\n+\t(aeabi_uidivmod, aeabi_idivmod): Provide thumb implementation.\n+\n 2004-08-12  David Daney  <ddaney@avtrex.com>\n \n-        * java/gcj.texi:  Add subsection on signal usage.\n+\t* java/gcj.texi:  Add subsection on signal usage.\n \n 2004-08-12  David Edelsohn  <edelsohn@gnu.org>\n "}, {"sha": "61de0a30855e44d5675cf299631b8174984ab4f6", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db151e9d837b9a27d2de105869186e2f9b7ca353/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db151e9d837b9a27d2de105869186e2f9b7ca353/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=db151e9d837b9a27d2de105869186e2f9b7ca353", "patch": "@@ -196,9 +196,13 @@ SYM (__\\name):\n \tbx\tpc\n \tnop\n \t.arm\n-_L__\\name:\t\t/* A hook to tell gdb that we've switched to ARM */\n+/* A hook to tell gdb that we've switched to ARM mode.  Also used to call\n+   directly from other local arm routines.  */\n+_L__\\name:\t\t\n .endm\n #define EQUIV .thumb_set\n+/* Branch directly to a function declared with ARM_FUNC_START.\n+   Must be called in arm mode.  */\n .macro  ARM_CALL name\n \tbl\t_L__\\name\n .endm\n@@ -220,6 +224,9 @@ SYM (__\\name):\n .macro\tARM_FUNC_ALIAS new old\n \t.globl\tSYM (__\\new)\n \tEQUIV\tSYM (__\\new), SYM (__\\old)\n+#ifdef __thumb__\n+\t.set\tSYM (_L__\\new), SYM (_L__\\old)\n+#endif\n .endm\n \n #ifdef __thumb__\n@@ -655,13 +662,22 @@ LSYM(Lgot_result):\n \n \tDIV_FUNC_END udivsi3\n \n-ARM_FUNC_START aeabi_uidivmod\n+FUNC_START aeabi_uidivmod\n+#ifdef __thumb__\n+\tpush\t{r0, r1, lr}\n+\tbl\tSYM(__udivsi3)\n+\tPOP\t{r1, r2, r3}\n+\tmul\tr2, r0\n+\tsub\tr1, r1, r2\n+\tbx\tr3\n+#else\n \tstmfd\tsp!, { r0, r1, lr }\n-\tARM_CALL udivsi3\n+\tbl\tSYM(__udivsi3)\n \tldmfd\tsp!, { r1, r2, lr }\n \tmul\tr3, r2, r0\n \tsub\tr1, r1, r3\n \tRET\n+#endif\n \tFUNC_END aeabi_uidivmod\n \t\n #endif /* L_udivsi3 */\n@@ -784,13 +800,22 @@ LSYM(Lover12):\n \t\n \tDIV_FUNC_END divsi3\n \n-ARM_FUNC_START aeabi_idivmod\n+FUNC_START aeabi_idivmod\n+#ifdef __thumb__\n+\tpush\t{r0, r1, lr}\n+\tbl\tSYM(__divsi3)\n+\tPOP\t{r1, r2, r3}\n+\tmul\tr2, r0\n+\tsub\tr1, r1, r2\n+\tbx\tr3\n+#else\n \tstmfd\tsp!, { r0, r1, lr }\n-\tARM_CALL divsi3\n+\tbl\tSYM(__divsi3)\n \tldmfd\tsp!, { r1, r2, lr }\n \tmul\tr3, r2, r0\n \tsub\tr1, r1, r3\n \tRET\n+#endif\n \tFUNC_END aeabi_idivmod\n \t\n #endif /* L_divsi3 */"}]}