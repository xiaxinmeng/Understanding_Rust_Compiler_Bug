{"sha": "558b318588aa0f997f3006077098259d3b768be8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU4YjMxODU4OGFhMGY5OTdmMzAwNjA3NzA5ODI1OWQzYjc2OGJlOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-02-01T14:05:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-02-01T14:05:09Z"}, "message": "graphite.c: Include tree-vectorizer.h for find_loop_location.\n\n2017-02-01  Richard Biener  <rguenther@suse.de>\n\n\t* graphite.c: Include tree-vectorizer.h for find_loop_location.\n\t(graphite_transform_loops): Provide opt-info for optimized nests.\n\t* tree-parloop.c (parallelize_loops): Provide opt-info for\n\tparallelized loops.\n\nFrom-SVN: r245096", "tree": {"sha": "9b266228ef9972686c647bce15472c381f5b6259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b266228ef9972686c647bce15472c381f5b6259"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/558b318588aa0f997f3006077098259d3b768be8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558b318588aa0f997f3006077098259d3b768be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/558b318588aa0f997f3006077098259d3b768be8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558b318588aa0f997f3006077098259d3b768be8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a44769735d467a8fff1302c08d5a80a94ef757c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a44769735d467a8fff1302c08d5a80a94ef757c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a44769735d467a8fff1302c08d5a80a94ef757c7"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "bb31a8f4b16282579ad6b9c91171cf4c9ddd496d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558b318588aa0f997f3006077098259d3b768be8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558b318588aa0f997f3006077098259d3b768be8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=558b318588aa0f997f3006077098259d3b768be8", "patch": "@@ -1,3 +1,10 @@\n+2017-02-01  Richard Biener  <rguenther@suse.de>\n+\n+\t* graphite.c: Include tree-vectorizer.h for find_loop_location.\n+\t(graphite_transform_loops): Provide opt-info for optimized nests.\n+\t* tree-parloop.c (parallelize_loops): Provide opt-info for\n+\tparallelized loops.\n+\n 2017-02-01  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/79315"}, {"sha": "1554d517f8c57028aa1af9317d64c3c33a1712bb", "filename": "gcc/graphite.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558b318588aa0f997f3006077098259d3b768be8/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558b318588aa0f997f3006077098259d3b768be8/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=558b318588aa0f997f3006077098259d3b768be8", "patch": "@@ -52,6 +52,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dbgcnt.h\"\n #include \"tree-parloops.h\"\n #include \"tree-cfgcleanup.h\"\n+#include \"tree-vectorizer.h\"\n #include \"graphite.h\"\n \n /* Print global statistics to FILE.  */\n@@ -328,6 +329,11 @@ graphite_transform_loops (void)\n \t   and could be in an inconsistent state.  */\n \tif (!graphite_regenerate_ast_isl (scop))\n \t  break;\n+\n+\tlocation_t loc = find_loop_location\n+\t\t\t   (scop->scop_info->region.entry->dest->loop_father);\n+\tdump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loc,\n+\t\t\t \"loop nest optimized\\n\");\n       }\n \n   free_scops (scops);"}, {"sha": "779258b90b4a34db66f39d4af689deed77903c07", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558b318588aa0f997f3006077098259d3b768be8/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558b318588aa0f997f3006077098259d3b768be8/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=558b318588aa0f997f3006077098259d3b768be8", "patch": "@@ -3322,17 +3322,14 @@ parallelize_loops (bool oacc_kernels_p)\n \n       changed = true;\n       skip_loop = loop->inner;\n-      if (dump_file && (dump_flags & TDF_DETAILS))\n-      {\n-\tif (loop->inner)\n-\t  fprintf (dump_file, \"parallelizing outer loop %d\\n\",loop->header->index);\n-\telse\n-\t  fprintf (dump_file, \"parallelizing inner loop %d\\n\",loop->header->index);\n-\tloop_loc = find_loop_location (loop);\n-\tif (loop_loc != UNKNOWN_LOCATION)\n-\t  fprintf (dump_file, \"\\nloop at %s:%d: \",\n-\t\t   LOCATION_FILE (loop_loc), LOCATION_LINE (loop_loc));\n-      }\n+\n+      loop_loc = find_loop_location (loop);\n+      if (loop->inner)\n+\tdump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loop_loc,\n+\t\t\t \"parallelizing outer loop %d\\n\", loop->num);\n+      else\n+\tdump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loop_loc,\n+\t\t\t \"parallelizing inner loop %d\\n\", loop->num);\n \n       gen_parallel_loop (loop, &reduction_list,\n \t\t\t n_threads, &niter_desc, oacc_kernels_p);"}]}