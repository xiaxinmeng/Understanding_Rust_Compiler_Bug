{"sha": "9b5713f7ce06d6f4c0df7410352623573d2506ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI1NzEzZjdjZTA2ZDZmNGMwZGY3NDEwMzUyNjIzNTczZDI1MDZlYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-04T07:25:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-04T07:25:54Z"}, "message": "re PR lto/85574 (LTO bootstapped binaries differ)\n\n2018-05-04  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/85574\n\t* fold-const.c (negate_expr_p): Restrict negation of operand\n\tzero of a division to when we know that can happen without\n\toverflow.\n\t(fold_negate_expr_1): Likewise.\n\n\t* gcc.dg/torture/pr85574.c: New testcase.\n\t* gcc.dg/torture/pr57656.c: Use dg-additional-options.\n\nFrom-SVN: r259922", "tree": {"sha": "eba13e4f2bd5af58b7b12a026ef0d945237cb5f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eba13e4f2bd5af58b7b12a026ef0d945237cb5f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b5713f7ce06d6f4c0df7410352623573d2506ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b5713f7ce06d6f4c0df7410352623573d2506ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b5713f7ce06d6f4c0df7410352623573d2506ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b5713f7ce06d6f4c0df7410352623573d2506ea/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "047823853d8324eab7d6ad8f266ee5395c4a76ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047823853d8324eab7d6ad8f266ee5395c4a76ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047823853d8324eab7d6ad8f266ee5395c4a76ff"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "3e769f54e6b8caec9ed7d40452ed5085035276de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b5713f7ce06d6f4c0df7410352623573d2506ea", "patch": "@@ -1,3 +1,11 @@\n+2018-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/85574\n+\t* fold-const.c (negate_expr_p): Restrict negation of operand\n+\tzero of a division to when we know that can happen without\n+\toverflow.\n+\t(fold_negate_expr_1): Likewise.\n+\n 2018-05-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/85466"}, {"sha": "faa184a2bbdd3df8ff05b896e60eeadeb23db327", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9b5713f7ce06d6f4c0df7410352623573d2506ea", "patch": "@@ -474,12 +474,15 @@ negate_expr_p (tree t)\n     case EXACT_DIV_EXPR:\n       if (TYPE_UNSIGNED (type))\n \tbreak;\n-      if (negate_expr_p (TREE_OPERAND (t, 0)))\n+      /* In general we can't negate A in A / B, because if A is INT_MIN and\n+         B is not 1 we change the sign of the result.  */\n+      if (TREE_CODE (TREE_OPERAND (t, 0)) == INTEGER_CST\n+\t  && negate_expr_p (TREE_OPERAND (t, 0)))\n \treturn true;\n       /* In general we can't negate B in A / B, because if A is INT_MIN and\n \t B is 1, we may turn this into INT_MIN / -1 which is undefined\n \t and actually traps on some architectures.  */\n-      if (! INTEGRAL_TYPE_P (TREE_TYPE (t))\n+      if (! ANY_INTEGRAL_TYPE_P (TREE_TYPE (t))\n \t  || TYPE_OVERFLOW_WRAPS (TREE_TYPE (t))\n \t  || (TREE_CODE (TREE_OPERAND (t, 1)) == INTEGER_CST\n \t      && ! integer_onep (TREE_OPERAND (t, 1))))\n@@ -652,14 +655,17 @@ fold_negate_expr_1 (location_t loc, tree t)\n     case EXACT_DIV_EXPR:\n       if (TYPE_UNSIGNED (type))\n \tbreak;\n-      if (negate_expr_p (TREE_OPERAND (t, 0)))\n+      /* In general we can't negate A in A / B, because if A is INT_MIN and\n+\t B is not 1 we change the sign of the result.  */\n+      if (TREE_CODE (TREE_OPERAND (t, 0)) == INTEGER_CST\n+\t  && negate_expr_p (TREE_OPERAND (t, 0)))\n \treturn fold_build2_loc (loc, TREE_CODE (t), type,\n \t\t\t\tnegate_expr (TREE_OPERAND (t, 0)),\n \t\t\t\tTREE_OPERAND (t, 1));\n       /* In general we can't negate B in A / B, because if A is INT_MIN and\n \t B is 1, we may turn this into INT_MIN / -1 which is undefined\n \t and actually traps on some architectures.  */\n-      if ((! INTEGRAL_TYPE_P (TREE_TYPE (t))\n+      if ((! ANY_INTEGRAL_TYPE_P (TREE_TYPE (t))\n \t   || TYPE_OVERFLOW_WRAPS (TREE_TYPE (t))\n \t   || (TREE_CODE (TREE_OPERAND (t, 1)) == INTEGER_CST\n \t       && ! integer_onep (TREE_OPERAND (t, 1))))"}, {"sha": "9e5784eb346f0905f2ba85f23cebe93572d2c715", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b5713f7ce06d6f4c0df7410352623573d2506ea", "patch": "@@ -1,3 +1,9 @@\n+2018-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/85574\n+\t* gcc.dg/torture/pr85574.c: New testcase.\n+\t* gcc.dg/torture/pr57656.c: Use dg-additional-options.\n+\n 2018-05-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/85466"}, {"sha": "02490140105984cc4cf424912fbebbd2e77ddcb5", "filename": "gcc/testsuite/gcc.dg/torture/pr57656.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57656.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57656.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57656.c?ref=9b5713f7ce06d6f4c0df7410352623573d2506ea", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-fstrict-overflow\" } */\n+/* { dg-additional-options \"-fstrict-overflow\" } */\n \n int main (void)\n {"}, {"sha": "5d95c96bc35922ced414c1bfbbd6b5d1089b56f6", "filename": "gcc/testsuite/gcc.dg/torture/pr85574.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85574.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b5713f7ce06d6f4c0df7410352623573d2506ea/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85574.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr85574.c?ref=9b5713f7ce06d6f4c0df7410352623573d2506ea", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-fwrapv\" } */\n+\n+#include \"pr57656.c\""}]}