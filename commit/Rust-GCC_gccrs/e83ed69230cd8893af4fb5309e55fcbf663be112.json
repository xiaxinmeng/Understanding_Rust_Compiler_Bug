{"sha": "e83ed69230cd8893af4fb5309e55fcbf663be112", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgzZWQ2OTIzMGNkODg5M2FmNGZiNTMwOWU1NWZjYmY2NjNiZTExMg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2015-10-16T12:22:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:22:22Z"}, "message": "exp_ch9.adb (Build_Simple_Entry_Call): Set_Is_Internal on the temporary object used for a by-copy entry parameter...\n\n2015-10-16  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch9.adb (Build_Simple_Entry_Call): Set_Is_Internal on\n\tthe temporary object used for a by-copy entry parameter, to\n\tensure that the object doesn't get its No_Initialization flag\n\treset later in Default_Initialize_Object. Also, generate the\n\tassignment of the actual to the temporary in the additional case\n\tof a scalar out parameter whose type has a Default_Value aspect.\n\t* exp_ch3.adb: Fix minor typo in comment.\n\nFrom-SVN: r228879", "tree": {"sha": "40dc89e985fd0bafa3c6714684353ab06c6b1663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40dc89e985fd0bafa3c6714684353ab06c6b1663"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e83ed69230cd8893af4fb5309e55fcbf663be112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83ed69230cd8893af4fb5309e55fcbf663be112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e83ed69230cd8893af4fb5309e55fcbf663be112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83ed69230cd8893af4fb5309e55fcbf663be112/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f145ece72186e2b18d2152387bd18647ed5a046d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f145ece72186e2b18d2152387bd18647ed5a046d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f145ece72186e2b18d2152387bd18647ed5a046d"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "c016f670596de945b56b9c43825ec4f54ba58ed1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83ed69230cd8893af4fb5309e55fcbf663be112/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83ed69230cd8893af4fb5309e55fcbf663be112/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e83ed69230cd8893af4fb5309e55fcbf663be112", "patch": "@@ -1,3 +1,13 @@\n+2015-10-16  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Simple_Entry_Call): Set_Is_Internal on\n+\tthe temporary object used for a by-copy entry parameter, to\n+\tensure that the object doesn't get its No_Initialization flag\n+\treset later in Default_Initialize_Object. Also, generate the\n+\tassignment of the actual to the temporary in the additional case\n+\tof a scalar out parameter whose type has a Default_Value aspect.\n+\t* exp_ch3.adb: Fix minor typo in comment.\n+\n 2015-10-16  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_util.adb, sem_util.ads, sem_ch6.adb, sem_ch7.adb, sem_ch8.adb:"}, {"sha": "bddb6e402c7d055b3bf5346309185dcb0bc910c1", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83ed69230cd8893af4fb5309e55fcbf663be112/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83ed69230cd8893af4fb5309e55fcbf663be112/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=e83ed69230cd8893af4fb5309e55fcbf663be112", "patch": "@@ -5154,7 +5154,7 @@ package body Exp_Ch3 is\n \n          --  Provide a default value if the object needs simple initialization\n          --  and does not already have an initial value. A generated temporary\n-         --  do not require initialization because it will be assigned later.\n+         --  does not require initialization because it will be assigned later.\n \n          elsif Needs_Simple_Initialization\n                  (Typ, Initialize_Scalars"}, {"sha": "5d1635171d9a346a845c300637e556a5625950d0", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 35, "deletions": 21, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83ed69230cd8893af4fb5309e55fcbf663be112/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83ed69230cd8893af4fb5309e55fcbf663be112/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=e83ed69230cd8893af4fb5309e55fcbf663be112", "patch": "@@ -4729,7 +4729,7 @@ package body Exp_Ch9 is\n             Formal := First_Formal (Ent);\n             while Present (Actual) loop\n \n-               --  If it is a by_copy_type, copy it to a new variable. The\n+               --  If it is a by-copy type, copy it to a new variable. The\n                --  packaged record has a field that points to this variable.\n \n                if Is_By_Copy_Type (Etype (Actual)) then\n@@ -4746,24 +4746,38 @@ package body Exp_Ch9 is\n \n                   Set_No_Initialization (N_Node);\n \n-                  --  We must make an assignment statement separate for the\n-                  --  case of limited type. We cannot assign it unless the\n+                  --  We must make a separate assignment statement for the\n+                  --  case of limited types. We cannot assign it unless the\n                   --  Assignment_OK flag is set first. An out formal of an\n-                  --  access type must also be initialized from the actual,\n-                  --  as stated in RM 6.4.1 (13), but no constraint is applied\n-                  --  before the call.\n+                  --  access type or whose type has a Default_Value must also\n+                  --  be initialized from the actual (see RM 6.4.1 (13-13.1)),\n+                  --  but no constraint, predicate, or null-exclusion check is\n+                  --  applied before the call.\n \n                   if Ekind (Formal) /= E_Out_Parameter\n                     or else Is_Access_Type (Etype (Formal))\n+                    or else\n+                      (Is_Scalar_Type (Etype (Formal))\n+                        and then\n+                         Present (Default_Aspect_Value (Etype (Formal))))\n                   then\n                      N_Var :=\n                        New_Occurrence_Of (Defining_Identifier (N_Node), Loc);\n                      Set_Assignment_OK (N_Var);\n                      Append_To (Stats,\n                        Make_Assignment_Statement (Loc,\n-                         Name => N_Var,\n+                         Name       => N_Var,\n                          Expression => Relocate_Node (Actual)));\n \n+                     --  Mark the object as internal, so we don't later reset\n+                     --  No_Initialization flag in Default_Initialize_Object,\n+                     --  which would lead to needless default initialization.\n+                     --  We don't set this outside the if statement, because\n+                     --  out scalar parameters without Default_Value do require\n+                     --  default initialization if Initialize_Scalars applies.\n+\n+                     Set_Is_Internal (Defining_Identifier (N_Node));\n+\n                      --  If actual is an out parameter of a null-excluding\n                      --  access type, there is access check on entry, so set\n                      --  Suppress_Assignment_Checks on the generated statement\n@@ -4777,8 +4791,9 @@ package body Exp_Ch9 is\n                   Append_To (Plist,\n                     Make_Attribute_Reference (Loc,\n                       Attribute_Name => Name_Unchecked_Access,\n-                    Prefix =>\n-                      New_Occurrence_Of (Defining_Identifier (N_Node), Loc)));\n+                      Prefix         =>\n+                        New_Occurrence_Of\n+                          (Defining_Identifier (N_Node), Loc)));\n \n                else\n                   --  Interface class-wide formal\n@@ -4800,7 +4815,7 @@ package body Exp_Ch9 is\n                        Make_Reference (Loc,\n                          Unchecked_Convert_To (Iface_Typ,\n                            Make_Selected_Component (Loc,\n-                             Prefix =>\n+                             Prefix        =>\n                                Relocate_Node (Actual),\n                              Selector_Name =>\n                                New_Occurrence_Of (Iface_Tag, Loc)))));\n@@ -4832,7 +4847,7 @@ package body Exp_Ch9 is\n \n             Parm3 :=\n               Make_Attribute_Reference (Loc,\n-                Prefix => New_Occurrence_Of (P, Loc),\n+                Prefix         => New_Occurrence_Of (P, Loc),\n                 Attribute_Name => Name_Address);\n \n             Append (Pdecl, Decls);\n@@ -4896,8 +4911,9 @@ package body Exp_Ch9 is\n \n                   Call :=\n                     Make_Procedure_Call_Statement (Loc,\n-                      Name => New_Occurrence_Of (\n-                        RTE (RE_Protected_Single_Entry_Call), Loc),\n+                      Name                   =>\n+                        New_Occurrence_Of\n+                          (RTE (RE_Protected_Single_Entry_Call), Loc),\n \n                       Parameter_Associations => New_List (\n                         Make_Attribute_Reference (Loc,\n@@ -4914,7 +4930,8 @@ package body Exp_Ch9 is\n          else\n             Call :=\n               Make_Procedure_Call_Statement (Loc,\n-                Name => New_Occurrence_Of (RTE (RE_Call_Simple), Loc),\n+                Name                   =>\n+                  New_Occurrence_Of (RTE (RE_Call_Simple), Loc),\n                 Parameter_Associations => New_List (Parm1, Parm2, Parm3));\n \n          end if;\n@@ -4935,11 +4952,11 @@ package body Exp_Ch9 is\n                then\n                   N_Node :=\n                     Make_Assignment_Statement (Loc,\n-                      Name => New_Copy (Actual),\n+                      Name       => New_Copy (Actual),\n                       Expression =>\n                         Make_Explicit_Dereference (Loc,\n                           Make_Selected_Component (Loc,\n-                            Prefix => New_Occurrence_Of (P, Loc),\n+                            Prefix        => New_Occurrence_Of (P, Loc),\n                             Selector_Name =>\n                               Make_Identifier (Loc, Chars (Formal)))));\n \n@@ -5037,7 +5054,7 @@ package body Exp_Ch9 is\n \n          Call :=\n            Make_Procedure_Call_Statement (Loc,\n-             Name => Name,\n+             Name                   => Name,\n              Parameter_Associations =>\n                New_List (Make_Attribute_Reference (Loc,\n                  Prefix         => New_Occurrence_Of (Chain, Loc),\n@@ -5320,7 +5337,7 @@ package body Exp_Ch9 is\n             declare\n                Bas : Entity_Id :=\n                        Base_Type\n-                        (Etype (Discrete_Subtype_Definition (Parent (Efam))));\n+                         (Etype (Discrete_Subtype_Definition (Parent (Efam))));\n \n                Bas_Decl : Node_Id := Empty;\n                Lo, Hi   : Node_Id;\n@@ -5590,10 +5607,8 @@ package body Exp_Ch9 is\n       else\n          if Is_Protected_Type (Ntyp) then\n             Sel := Name_uObject;\n-\n          elsif Is_Task_Type (Ntyp) then\n             Sel := Name_uTask_Id;\n-\n          else\n             raise Program_Error;\n          end if;\n@@ -5764,7 +5779,6 @@ package body Exp_Ch9 is\n       --  Now add lengths of preceding entries and entry families\n \n       Prev := First_Entity (Ttyp);\n-\n       while Chars (Prev) /= Chars (Ent)\n         or else (Ekind (Prev) /= Ekind (Ent))\n         or else not Sem_Ch6.Type_Conformant (Ent, Prev)"}]}