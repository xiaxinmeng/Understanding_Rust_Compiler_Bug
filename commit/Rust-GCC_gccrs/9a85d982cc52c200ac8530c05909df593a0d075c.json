{"sha": "9a85d982cc52c200ac8530c05909df593a0d075c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4NWQ5ODJjYzUyYzIwMGFjODUzMGMwNTkwOWRmNTkzYTBkMDc1Yw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-10-05T17:35:55Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-10-05T17:35:55Z"}, "message": "testsuite: multiline.exp: implement optional target/xfail selector\n\ngcc/testsuite/ChangeLog:\n\t* lib/multiline.exp (proc dg-end-multiline-output): Check argument\n\tcount.  If there's a 3rd argument, use dg-process-target on it,\n\tbailing out, or recording expected failures as \"maybe_x\".\n\t(proc handle-multiline-outputs): Extract \"maybe_x\", and use it\n\tto convert pass/fail into xpass/xfail.\n\nFrom-SVN: r264880", "tree": {"sha": "0cac802aa39f6f88713d4e2b167146d0f5dacf24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cac802aa39f6f88713d4e2b167146d0f5dacf24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a85d982cc52c200ac8530c05909df593a0d075c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a85d982cc52c200ac8530c05909df593a0d075c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a85d982cc52c200ac8530c05909df593a0d075c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a85d982cc52c200ac8530c05909df593a0d075c/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08993ffb5277066fcdb082fdb9a03bdbabd766a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08993ffb5277066fcdb082fdb9a03bdbabd766a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08993ffb5277066fcdb082fdb9a03bdbabd766a6"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "2f3ababae7861a824b330eaeede608c32235f0fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85d982cc52c200ac8530c05909df593a0d075c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85d982cc52c200ac8530c05909df593a0d075c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a85d982cc52c200ac8530c05909df593a0d075c", "patch": "@@ -1,3 +1,11 @@\n+2018-10-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* lib/multiline.exp (proc dg-end-multiline-output): Check argument\n+\tcount.  If there's a 3rd argument, use dg-process-target on it,\n+\tbailing out, or recording expected failures as \"maybe_x\".\n+\t(proc handle-multiline-outputs): Extract \"maybe_x\", and use it\n+\tto convert pass/fail into xpass/xfail.\n+\n 2018-10-05  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/87490"}, {"sha": "6c7ecdf483fbec968c20c8a6a8051b98aa80500b", "filename": "gcc/testsuite/lib/multiline.exp", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a85d982cc52c200ac8530c05909df593a0d075c/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a85d982cc52c200ac8530c05909df593a0d075c/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmultiline.exp?ref=9a85d982cc52c200ac8530c05909df593a0d075c", "patch": "@@ -78,13 +78,32 @@ proc dg-begin-multiline-output { args } {\n # Mark the end of an expected multiline output\n # All lines up to here since the last dg-begin-multiline-output are\n # expected to be seen.\n+#\n+# dg-end-multiline-output comment [{ target/xfail selector }]\n \n proc dg-end-multiline-output { args } {\n     global _multiline_last_beginning_line\n     verbose \"dg-end-multiline-output: args: $args\" 3\n     set line [expr [lindex $args 0] - 1]\n     verbose \"multiline output lines: $_multiline_last_beginning_line-$line\" 3\n \n+    if { [llength $args] > 3 } {\n+\terror \"[lindex $args 0]: too many arguments\"\n+\treturn\n+    }\n+\n+    set maybe_x \"\"\n+    if { [llength $args] >= 3 } {\n+\tswitch [dg-process-target [lindex $args 2]] {\n+\t    \"F\" { set maybe_x \"x\" }\n+\t    \"P\" { set maybe_x \"\" }\n+\t    \"N\" {\n+\t\t# If we get \"N\", this output doesn't apply to us so ignore it.\n+\t\treturn\n+\t    }\n+\t}\n+    }\n+\n     upvar 1 prog prog\n     verbose \"prog: $prog\" 3\n     # \"prog\" now contains the filename\n@@ -93,8 +112,8 @@ proc dg-end-multiline-output { args } {\n     set lines [_get_lines $prog $_multiline_last_beginning_line $line]\n \n     verbose \"lines: $lines\" 3\n-    # Create an entry of the form:  first-line, last-line, lines\n-    set entry [list $_multiline_last_beginning_line $line $lines]\n+    # Create an entry of the form:  first-line, last-line, lines, maybe_x\n+    set entry [list $_multiline_last_beginning_line $line $lines $maybe_x]\n     global multiline_expected_outputs\n     lappend multiline_expected_outputs $entry\n     verbose \"within dg-end-multiline-output: multiline_expected_outputs: $multiline_expected_outputs\" 3\n@@ -118,6 +137,7 @@ proc handle-multiline-outputs { text } {\n \tset start_line [lindex $entry 0]\n \tset end_line   [lindex $entry 1]\n \tset multiline  [lindex $entry 2]\n+\tset maybe_x    [lindex $entry 3]\n \tverbose \"  multiline: $multiline\" 3\n \tset rexp [_build_multiline_regex $multiline $index]\n \tverbose \"rexp: ${rexp}\" 4\n@@ -130,10 +150,10 @@ proc handle-multiline-outputs { text } {\n \n \t# Use \"regsub\" to attempt to prune the pattern from $text\n \tif {[regsub -line $rexp $text \"\" text]} {\n-\t    # Success; the multiline pattern was pruned.\n-\t    pass \"$title was found: \\\"$escaped_regex\\\"\"\n+\t    # The multiline pattern was pruned.\n+\t    ${maybe_x}pass \"$title was found: \\\"$escaped_regex\\\"\"\n \t} else {\n-\t    fail \"$title not found: \\\"$escaped_regex\\\"\"\n+\t    ${maybe_x}fail \"$title not found: \\\"$escaped_regex\\\"\"\n \t}\n \n \tset index [expr $index + 1]"}]}