{"sha": "7ef1fbd7aa2fa6c0ac22cecf9e11b283f8f823f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VmMWZiZDdhYTJmYTZjMGFjMjJjZWNmOWUxMWIyODNmOGY4MjNmNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-04T01:47:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-04T01:47:12Z"}, "message": "(expand_call): Pass objects who size depends on the contents of the\nobject by invisible reference.\n\nFrom-SVN: r5583", "tree": {"sha": "f7492277b2536221bb0a61be551f9b0f41cb99cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7492277b2536221bb0a61be551f9b0f41cb99cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ef1fbd7aa2fa6c0ac22cecf9e11b283f8f823f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef1fbd7aa2fa6c0ac22cecf9e11b283f8f823f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ef1fbd7aa2fa6c0ac22cecf9e11b283f8f823f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef1fbd7aa2fa6c0ac22cecf9e11b283f8f823f7/comments", "author": null, "committer": null, "parents": [{"sha": "99098c669ede8d46e430a5f387d18ea3c097fb4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99098c669ede8d46e430a5f387d18ea3c097fb4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99098c669ede8d46e430a5f387d18ea3c097fb4f"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "9334d95bf51f39dad721e5aeca7698f847e8b039", "filename": "gcc/calls.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef1fbd7aa2fa6c0ac22cecf9e11b283f8f823f7/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef1fbd7aa2fa6c0ac22cecf9e11b283f8f823f7/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=7ef1fbd7aa2fa6c0ac22cecf9e11b283f8f823f7", "patch": "@@ -942,10 +942,14 @@ expand_call (exp, target, ignore)\n \t These decisions are driven by the FUNCTION_... macros and must agree\n \t with those made by function.c.  */\n \n-#ifdef FUNCTION_ARG_PASS_BY_REFERENCE\n       /* See if this argument should be passed by invisible reference.  */\n-      if (FUNCTION_ARG_PASS_BY_REFERENCE (args_so_far, TYPE_MODE (type), type,\n-\t\t\t\t\t  argpos < n_named_args))\n+      if ((TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST\n+\t   && contains_placeholder_p (TYPE_SIZE (type)))\n+#ifdef FUNCTION_ARG_PASS_BY_REFERENCE\n+\t  || FUNCTION_ARG_PASS_BY_REFERENCE (args_so_far, TYPE_MODE (type),\n+\t\t\t\t\t     type, argpos < n_named_args)\n+#endif\n+\t  )\n \t{\n #ifdef FUNCTION_ARG_CALLEE_COPIES\n \t  if (FUNCTION_ARG_CALLEE_COPIES (args_so_far, TYPE_MODE (type), type,\n@@ -1000,7 +1004,6 @@ expand_call (exp, target, ignore)\n \t      type = build_pointer_type (type);\n \t    }\n \t}\n-#endif /* FUNCTION_ARG_PASS_BY_REFERENCE */\n \n       mode = TYPE_MODE (type);\n "}]}