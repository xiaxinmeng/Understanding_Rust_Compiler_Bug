{"sha": "a21d245c1b963298b531bf6e8fa85a61e6a42490", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIxZDI0NWMxYjk2MzI5OGI1MzFiZjZlOGZhODVhNjFlNmE0MjQ5MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:32:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:32:10Z"}, "message": "[multiple changes]\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* make.adb, makeutl.ads: Minor reformatting.\n\t* debug.adb, opt.ads: Clarify documentation of Front_End_Inlining and\n\tBack_End_Inlining.\n\n2014-08-01  Tristan Gingold  <gingold@adacore.com>\n\n\t* gnatcmd.adb (GNATCmd): Set AAMP_On_Target using command name.\n\nFrom-SVN: r213453", "tree": {"sha": "a6395d4b8310bdda4c3ba8a43eefb8beef8f1df7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6395d4b8310bdda4c3ba8a43eefb8beef8f1df7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a21d245c1b963298b531bf6e8fa85a61e6a42490", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21d245c1b963298b531bf6e8fa85a61e6a42490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a21d245c1b963298b531bf6e8fa85a61e6a42490", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21d245c1b963298b531bf6e8fa85a61e6a42490/comments", "author": null, "committer": null, "parents": [{"sha": "0f345950ec4144742c56a93aea07ada593e03788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f345950ec4144742c56a93aea07ada593e03788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f345950ec4144742c56a93aea07ada593e03788"}], "stats": {"total": 173, "additions": 88, "deletions": 85}, "files": [{"sha": "811742cfc32d76d088890152d4539b36b0cbaa2d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a21d245c1b963298b531bf6e8fa85a61e6a42490", "patch": "@@ -1,3 +1,13 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* make.adb, makeutl.ads: Minor reformatting.\n+\t* debug.adb, opt.ads: Clarify documentation of Front_End_Inlining and\n+\tBack_End_Inlining.\n+\n+2014-08-01  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* gnatcmd.adb (GNATCmd): Set AAMP_On_Target using command name.\n+\n 2014-08-01  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat1drv.adb (Adjust_Global_Switches): Reverse meaning of"}, {"sha": "0896c85f7d697aa80f27d577f75d5d554be6f602", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=a21d245c1b963298b531bf6e8fa85a61e6a42490", "patch": "@@ -116,7 +116,7 @@ package body Debug is\n    --  d.w  Do not check for infinite loops\n    --  d.x  No exception handlers\n    --  d.y\n-   --  d.z  Disable support for back end inlining\n+   --  d.z  Restore previous support for frontend handling of Inline_Always\n \n    --  d.A  Read/write Aspect_Specifications hash table to tree\n    --  d.B\n@@ -582,14 +582,12 @@ package body Debug is\n    --       fully compiled and analyzed, they just get eliminated from the\n    --       code generation step.\n \n-   --  d.z  Disable back end inlining. Back end inlining is enabled by default\n-   --       on targets that have the GCC backend (ie. all targets except AAMP,\n-   --       .NET and JVM). Back end inlining has no effect under GNATprove to\n-   --       avoid confusing the formal verification output, and it is disabled\n-   --       if the sources are compiled with frontend inlining (ie. -gnatN) to\n-   --       minimize the output differences to customers still using this\n-   --       deprecated switch. The flag .z facilitates disabling the back end\n-   --       inlining in case of unexpected problems.\n+   --  d.z  Restore previous front-end support for Inline_Always. In default\n+   --       mode, for targets that use the GCC back end (i.e. currently all\n+   --       targets except AAMP, .NET, JVM, and GNATprove), Inline_Always is\n+   --       handled by the back end. Use of this switch restores the previous\n+   --       handling of Inline_Always by the front end on such targets. For the\n+   --       targets that do not use the GCC back end, this switch is ignored.\n \n    --  d.A  There seems to be a problem with ASIS if we activate the circuit\n    --       for reading and writing the aspect specification hash table, so"}, {"sha": "8c60f8094345406ae45f3d4394c61ba0df128582", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=a21d245c1b963298b531bf6e8fa85a61e6a42490", "patch": "@@ -1584,15 +1584,12 @@ begin\n    Rules_Switches.Init;\n    Rules_Switches.Set_Last (0);\n \n-   --  Add the default search directories, to be able to find system.ads in the\n-   --  subsequent call to Targparm.Get_Target_Parameters.\n+   --  Set AAMP_On_Target from the command name, for testing in\n+   --  Osint.Program_Name to handle the mapping of GNAAMP tool names. We don't\n+   --  extract it from system.ads, has there may be no default runtime.\n \n-   Add_Default_Search_Dirs;\n-\n-   --  Get target parameters so that AAMP_On_Target will be set, for testing in\n-   --  Osint.Program_Name to handle the mapping of GNAAMP tool names.\n-\n-   Targparm.Get_Target_Parameters;\n+   Find_Program_Name;\n+   AAMP_On_Target := Name_Buffer (1 .. Name_Len) = \"gnaampcmd\";\n \n    --  Put the command line in environment variable GNAT_DRIVER_COMMAND_LINE,\n    --  so that the spawned tool may know the way the GNAT driver was invoked."}, {"sha": "07f960bddeb889b1ff8490a02b30689c63c911eb", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 57, "deletions": 65, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=a21d245c1b963298b531bf6e8fa85a61e6a42490", "patch": "@@ -68,9 +68,9 @@ with Targparm; use Targparm;\n with Tempdir;\n with Types;    use Types;\n \n-with Ada.Command_Line;          use Ada.Command_Line;\n+with Ada.Command_Line; use Ada.Command_Line;\n with Ada.Directories;\n-with Ada.Exceptions;            use Ada.Exceptions;\n+with Ada.Exceptions;   use Ada.Exceptions;\n \n with GNAT.Case_Util;            use GNAT.Case_Util;\n with GNAT.Command_Line;         use GNAT.Command_Line;\n@@ -1986,7 +1986,7 @@ package body Make is\n \n                      D_Chk :\n                      for D in ALIs.Table (ALI).First_Sdep ..\n-                       ALIs.Table (ALI).Last_Sdep\n+                              ALIs.Table (ALI).Last_Sdep\n                      loop\n                         Dep := Sdep.Table (D);\n                         UID  := Units_Htable.Get_First (Project_Tree.Units_HT);\n@@ -2285,8 +2285,7 @@ package body Make is\n             if Arguments_Project = No_Project then\n                Add_Arguments (The_Saved_Gcc_Switches.all);\n \n-            elsif not Arguments_Project.Externally_Built\n-              or else Must_Compile\n+            elsif not Arguments_Project.Externally_Built or else Must_Compile\n             then\n                --  We get the project directory for the relative path\n                --  switches and arguments.\n@@ -2339,7 +2338,6 @@ package body Make is\n                   --  plus the saved gcc switches.\n \n                   when List =>\n-\n                      declare\n                         Current : String_List_Id := Switches.Values;\n                         Element : String_Element;\n@@ -3977,11 +3975,11 @@ package body Make is\n                   --  Reset Temporary_Config_File to False so that the eventual\n                   --  other -gnatec switches will be displayed.\n \n-                  if (not Opt.Keep_Temporary_Files)\n+                  if not Opt.Keep_Temporary_Files\n                     and then Temporary_Config_File\n                     and then Args (J)'Length > 7\n-                    and then Args (J) (Args (J)'First .. Args (J)'First + 6)\n-                    = \"-gnatec\"\n+                    and then Args (J) (Args (J)'First .. Args (J)'First + 6) =\n+                                                                    \"-gnatec\"\n                   then\n                      Temporary_Config_File := False;\n \n@@ -4001,6 +3999,7 @@ package body Make is\n                      if Debug.Debug_Flag_F then\n                         declare\n                            Equal_Pos : Natural;\n+\n                         begin\n                            Equal_Pos := Args (J)'First - 1;\n                            for K in Args (J)'Range loop\n@@ -4109,6 +4108,8 @@ package body Make is\n       procedure Globalize_Dirs is new\n         Prj.Env.For_All_Object_Dirs (Globalize_Dir);\n \n+   --  Start of procedure Globalize\n+\n    begin\n       Success := True;\n       Display (Globalizer, Globalizer_Args);\n@@ -4200,9 +4201,7 @@ package body Make is\n             end loop;\n \n             for Index in 1 .. Library_Projs.Last loop\n-               if\n-                 Library_Projs.Table (Index).Extended_By = No_Project\n-               then\n+               if Library_Projs.Table (Index).Extended_By = No_Project then\n                   if Library_Projs.Table (Index).Library_Kind = Static then\n                      Linker_Switches.Increment_Last;\n                      Linker_Switches.Table (Linker_Switches.Last) :=\n@@ -4279,8 +4278,7 @@ package body Make is\n                      --  We are going to create one switch of the form\n                      --  \"-Wl,-rpath,dir_1:dir_2:dir_3\"\n \n-                     for Index in\n-                       Library_Paths.First .. Library_Paths.Last\n+                     for Index in Library_Paths.First .. Library_Paths.Last\n                      loop\n                         --  Add the length of the library dir plus one for the\n                         --  directory separator.\n@@ -4300,8 +4298,7 @@ package body Make is\n                      --  Put each library dir followed by a dir\n                      --  separator.\n \n-                     for Index in\n-                       Library_Paths.First .. Library_Paths.Last\n+                     for Index in Library_Paths.First .. Library_Paths.Last\n                      loop\n                         Option\n                           (Current + 1 ..\n@@ -4392,8 +4389,8 @@ package body Make is\n                --  need to do the duplication since the arguments will get\n                --  normalized. Not doing so will result in calling normalized\n                --  two times for the same set of arguments if gnatmake is\n-               --  passed multiple mains. This can result in the wrong argument\n-               --  being passed to the linker.\n+               --  passed multiple mains. This can result in the wrong\n+               --  argument being passed to the linker.\n \n             else\n                Last_Arg := Last_Arg + 1;\n@@ -4414,6 +4411,7 @@ package body Make is\n \n          declare\n             Success : Boolean := False;\n+\n          begin\n             --  If gnatmake was invoked with --subdirs and no project file,\n             --  put the executable in the subdirectory specified.\n@@ -4431,9 +4429,7 @@ package body Make is\n                Successful_Links.Increment_Last;\n                Successful_Links.Table (Successful_Links.Last) := Main_ALI_File;\n \n-            elsif Osint.Number_Of_Files = 1\n-              or else not Keep_Going\n-            then\n+            elsif Osint.Number_Of_Files = 1 or else not Keep_Going then\n                Make_Failed (\"*** link failed.\");\n \n             else\n@@ -4603,8 +4599,7 @@ package body Make is\n       Proj1   : Project_List;\n \n       procedure Add_To_Library_Projs (Proj : Project_Id);\n-      --  Add project Project to table Library_Projs in\n-      --  decreasing depth order.\n+      --  Add project Project to table Library_Projs in decreasing depth order\n \n       --------------------------\n       -- Add_To_Library_Projs --\n@@ -4749,7 +4744,6 @@ package body Make is\n       Stop_Compile               : out Boolean)\n    is\n       Args                : Argument_List (1 .. Gcc_Switches.Last);\n-\n       First_Compiled_File : File_Name_Type;\n       Youngest_Obj_File   : File_Name_Type;\n       Youngest_Obj_Stamp  : Time_Stamp_Type;\n@@ -5081,8 +5075,7 @@ package body Make is\n                      --  If there is no object directory, then it will be\n                      --  impossible to build the library, so fail immediately.\n \n-                     if Proj.Project.Object_Directory =\n-                       No_Path_Information\n+                     if Proj.Project.Object_Directory = No_Path_Information\n                      then\n                         Make_Failed\n                           (\"no object files to build library for\"\n@@ -5207,13 +5200,18 @@ package body Make is\n       --  Handles builder and global compilation switches, as read from the\n       --  project file.\n \n+      -------------------------\n+      -- Add_Global_Switches --\n+      -------------------------\n+\n       function Add_Global_Switches\n         (Switch      : String;\n          For_Lang    : Name_Id;\n          For_Builder : Boolean;\n          Has_Global_Compilation_Switches : Boolean) return Boolean\n       is\n          pragma Unreferenced (For_Lang);\n+\n       begin\n          if For_Builder then\n             Program_Args := None;\n@@ -5230,12 +5228,15 @@ package body Make is\n       end Add_Global_Switches;\n \n       procedure Do_Compute_Builder_Switches\n-         is new Makeutl.Compute_Builder_Switches (Add_Global_Switches);\n+      is new Makeutl.Compute_Builder_Switches (Add_Global_Switches);\n+\n+   --  Start of processing for Compute_Switches_For_Main\n+\n    begin\n       if Main_Project /= No_Project then\n          declare\n             Main_Source_File_Name : constant String :=\n-              Get_Name_String (Main_Source_File);\n+                                      Get_Name_String (Main_Source_File);\n \n             Main_Unit_File_Name   : constant String :=\n               Prj.Env.File_Name_Of_Library_Unit_Body\n@@ -5366,6 +5367,7 @@ package body Make is\n             declare\n                Dir_Path : constant String :=\n                  Get_Name_String (Main_Project.Directory.Display_Name);\n+\n             begin\n                for J in Last_Binder_Switch + 1 .. Binder_Switches.Last loop\n                   Ensure_Absolute_Path\n@@ -5473,6 +5475,7 @@ package body Make is\n          Real_Main_Project : Project_Id := No_Project;\n          Info              : Main_Info;\n          Proj              : Project_Id;\n+\n       begin\n          if Mains.Number_Of_Mains (Project_Tree) = 0\n            and then not Unique_Compile\n@@ -5641,7 +5644,6 @@ package body Make is\n                --  else gnatmake was invoked with the switch \"-u\".\n \n                if Value = Prj.Nil_String or else Unique_Compile then\n-\n                   if not Make_Steps\n                     or Compile_Only\n                     or not Main_Project.Library\n@@ -5788,9 +5790,7 @@ package body Make is\n \n       if Osint.Number_Of_Files = 0 then\n          if Main_Project /= No_Project and then Main_Project.Library then\n-            if Do_Bind_Step\n-              and then Main_Project.Standalone_Library = No\n-            then\n+            if Do_Bind_Step and then Main_Project.Standalone_Library = No then\n                Make_Failed (\"only stand-alone libraries may be bound\");\n             end if;\n \n@@ -5982,7 +5982,7 @@ package body Make is\n \n          if Current_Main_Index = 0\n            and then Unique_Compile\n-             and then Main_Project /= No_Project\n+           and then Main_Project /= No_Project\n          then\n             --  If this is a multi-unit source, do not compile it as is (ie\n             --  without specifying which unit to compile)\n@@ -5996,9 +5996,7 @@ package body Make is\n                   Index     => Current_Main_Index,\n                   In_Imported_Only => True);\n             begin\n-               if Source /= No_Source\n-                 and then Source.Index /= 0\n-               then\n+               if Source /= No_Source and then Source.Index /= 0 then\n                   goto Next_Main;\n                end if;\n             end;\n@@ -6090,26 +6088,28 @@ package body Make is\n             begin\n                Proj := Project_Tree.Projects;\n                while Proj /= null loop\n-                  Data := new Project_Compilation_Data'\n-                    (Mapping_File_Names        => new Temp_Path_Names\n-                       (1 .. Saved_Maximum_Processes),\n-                     Last_Mapping_File_Names   => 0,\n-                     Free_Mapping_File_Indexes => new Free_File_Indexes\n-                       (1 .. Saved_Maximum_Processes),\n-                     Last_Free_Indexes         => 0);\n+                  Data :=\n+                    new Project_Compilation_Data'\n+                      (Mapping_File_Names        =>\n+                         new Temp_Path_Names (1 .. Saved_Maximum_Processes),\n+                       Last_Mapping_File_Names   => 0,\n+                       Free_Mapping_File_Indexes =>\n+                         new Free_File_Indexes (1 .. Saved_Maximum_Processes),\n+                       Last_Free_Indexes         => 0);\n \n                   Project_Compilation_Htable.Set\n                     (Project_Compilation, Proj.Project, Data);\n                   Proj := Proj.Next;\n                end loop;\n \n-               Data := new Project_Compilation_Data'\n-                 (Mapping_File_Names        => new Temp_Path_Names\n-                    (1 .. Saved_Maximum_Processes),\n-                  Last_Mapping_File_Names   => 0,\n-                  Free_Mapping_File_Indexes => new Free_File_Indexes\n-                    (1 .. Saved_Maximum_Processes),\n-                  Last_Free_Indexes         => 0);\n+               Data :=\n+                 new Project_Compilation_Data'\n+                   (Mapping_File_Names        =>\n+                      new Temp_Path_Names (1 .. Saved_Maximum_Processes),\n+                    Last_Mapping_File_Names   => 0,\n+                    Free_Mapping_File_Indexes =>\n+                      new Free_File_Indexes (1 .. Saved_Maximum_Processes),\n+                    Last_Free_Indexes         => 0);\n \n                Project_Compilation_Htable.Set\n                  (Project_Compilation, No_Project, Data);\n@@ -6322,12 +6322,10 @@ package body Make is\n \n       else\n          Tempdir.Create_Temp_File\n-           (FD,\n-            Data.Mapping_File_Names (Data.Last_Mapping_File_Names));\n+           (FD, Data.Mapping_File_Names (Data.Last_Mapping_File_Names));\n \n          if FD = Invalid_FD then\n             Make_Failed (\"disk full\");\n-\n          else\n             Record_Temp_File\n               (Project_Tree.Shared,\n@@ -6357,7 +6355,7 @@ package body Make is\n       procedure Check_Version_And_Help is\n         new Check_Version_And_Help_G (Makeusg);\n \n-      --  Start of processing for Initialize\n+   --  Start of processing for Initialize\n \n    begin\n       --  Prepare the project's tree, since this is used to hold external\n@@ -6474,16 +6472,12 @@ package body Make is\n \n       --  Test for trailing -o switch\n \n-      elsif Output_File_Name_Present\n-        and then not Output_File_Name_Seen\n-      then\n+      elsif Output_File_Name_Present and then not Output_File_Name_Seen then\n          Make_Failed (\"output file name missing after -o\");\n \n       --  Test for trailing -D switch\n \n-      elsif Object_Directory_Present\n-        and then not Object_Directory_Seen\n-      then\n+      elsif Object_Directory_Present and then not Object_Directory_Seen then\n          Make_Failed (\"object directory missing after -D\");\n       end if;\n \n@@ -6742,8 +6736,8 @@ package body Make is\n            and then not Unit.File_Names (Spec).Locally_Removed\n            and then\n              (All_Projects\n-              or else\n-                Is_Extending (The_Project, Unit.File_Names (Spec).Project))\n+               or else\n+                 Is_Extending (The_Project, Unit.File_Names (Spec).Project))\n          then\n             --  If there is no source for the body, but there is one for the\n             --  spec which has not been locally removed, then we take this one.\n@@ -7407,9 +7401,7 @@ package body Make is\n       --  A special test is needed for the -o switch within a -largs since that\n       --  is another way to specify the name of the final executable.\n \n-      elsif Program_Args = Linker\n-        and then Argv = \"-o\"\n-      then\n+      elsif Program_Args = Linker and then Argv = \"-o\" then\n          Make_Failed\n            (\"switch -o not allowed within a -largs. Use -o directly.\");\n "}, {"sha": "045370903189451107ee53f3615915b9cc9eaf20", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=a21d245c1b963298b531bf6e8fa85a61e6a42490", "patch": "@@ -87,7 +87,7 @@ package Makeutl is\n \n    Keep_Temp_Files_Option : constant String := \"--keep-temp-files\";\n    --  Switch to suppress deletion of temp files created by the builder.\n-   --  Equivallent of -dn.\n+   --  Note that debug switch -gnatdn also has this effect.\n \n    Load_Standard_Base : Boolean := True;\n    --  False when gprbuild is called with --db-"}, {"sha": "611cc17093b654ef309bda6c74b8f7d7af4df44c", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a21d245c1b963298b531bf6e8fa85a61e6a42490/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=a21d245c1b963298b531bf6e8fa85a61e6a42490", "patch": "@@ -248,7 +248,10 @@ package Opt is\n \n    Back_End_Inlining : Boolean := False;\n    --  GNAT\n-   --  Set True to activate inlining by back-end expansion\n+   --  Set True to activate inlining by back-end expansion. This is the normal\n+   --  default mode for gcc targets, so it is True on such targets unless the\n+   --  switches -gnatN or -gnatd.z are used. See circuitry in gnat1drv for the\n+   --  exact conditions for setting this switch.\n \n    Bind_Alternate_Main_Name : Boolean := False;\n    --  GNATBIND\n@@ -823,7 +826,10 @@ package Opt is\n \n    Front_End_Inlining : Boolean := False;\n    --  GNAT\n-   --  Set True to activate inlining by front-end expansion\n+   --  Set True to activate inlining by front-end expansion (even on GCC\n+   --  targets, where inlining is normally handled by the back end). Set by\n+   --  the flag -gnatN (which is now considered obsolescent, since the GCC\n+   --  back end can do a better job of inlining than the front end these days.\n \n    Inline_Processing_Required : Boolean := False;\n    --  GNAT"}]}