{"sha": "66ce8ff7603b3b717fff93d706b1cf3548ba4671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZjZThmZjc2MDNiM2I3MTdmZmY5M2Q3MDZiMWNmMzU0OGJhNDY3MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-01-23T14:08:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-01-23T14:08:11Z"}, "message": "[PR c++/839888] Baselink tsubst ICE\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-01/msg01954.html\n\tPR c++/83988\n\t* pt.c (tsubst_baselink): Remove optype assert.\n\t* ptree.c (cxx_print_xnode): <case BASELINK> Print BASELINK_OPTYPE.\n\n\tPR c++/83988\n\t* g++.dg/template/pr83988.C: New.\n\nFrom-SVN: r256986", "tree": {"sha": "310b045403587d2a1e1ccee5d2ab0a632cf14517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/310b045403587d2a1e1ccee5d2ab0a632cf14517"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66ce8ff7603b3b717fff93d706b1cf3548ba4671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66ce8ff7603b3b717fff93d706b1cf3548ba4671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66ce8ff7603b3b717fff93d706b1cf3548ba4671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66ce8ff7603b3b717fff93d706b1cf3548ba4671/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55a46cb54a7ebabd298e7f574993bb73f879758c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55a46cb54a7ebabd298e7f574993bb73f879758c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55a46cb54a7ebabd298e7f574993bb73f879758c"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "97c54ac9a0036e641b168167f028433c9dd828ac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=66ce8ff7603b3b717fff93d706b1cf3548ba4671", "patch": "@@ -1,3 +1,9 @@\n+2018-01-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/83988\n+\t* pt.c (tsubst_baselink): Remove optype assert.\n+\t* ptree.c (cxx_print_xnode): <case BASELINK> Print BASELINK_OPTYPE.\n+\n 2018-01-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/83958"}, {"sha": "695870da32cd0a55e189e45dc48edbf4e1f95fb2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=66ce8ff7603b3b717fff93d706b1cf3548ba4671", "patch": "@@ -14447,11 +14447,8 @@ tsubst_baselink (tree baselink, tree object_type,\n \tfns = BASELINK_FUNCTIONS (baselink);\n     }\n   else\n-    {\n-      gcc_assert (optype == BASELINK_OPTYPE (baselink));\n-      /* We're going to overwrite pieces below, make a duplicate.  */\n-      baselink = copy_node (baselink);\n-    }\n+    /* We're going to overwrite pieces below, make a duplicate.  */\n+    baselink = copy_node (baselink);\n \n   /* If lookup found a single function, mark it as used at this point.\n      (If lookup found multiple functions the one selected later by"}, {"sha": "40535c7c06abde09735a0f0044f2dbd5566a6367", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=66ce8ff7603b3b717fff93d706b1cf3548ba4671", "patch": "@@ -215,6 +215,7 @@ cxx_print_xnode (FILE *file, tree node, int indent)\n       print_node (file, \"binfo\", BASELINK_BINFO (node), indent + 4);\n       print_node (file, \"access_binfo\", BASELINK_ACCESS_BINFO (node),\n \t\t  indent + 4);\n+      print_node (file, \"optype\", BASELINK_OPTYPE (node), indent + 4);\n       break;\n     case OVERLOAD:\n       print_node (file, \"function\", OVL_FUNCTION (node), indent+4);"}, {"sha": "17399f97a8004720e763c460dae97bac814d188e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66ce8ff7603b3b717fff93d706b1cf3548ba4671", "patch": "@@ -1,3 +1,8 @@\n+2018-01-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/83988\n+\t* g++.dg/template/pr83988.C: New.\n+\n 2018-01-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/82882"}, {"sha": "bd2762cd68f806fc822b5bb0fb617aba71ebeb12", "filename": "gcc/testsuite/g++.dg/template/pr83988.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr83988.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66ce8ff7603b3b717fff93d706b1cf3548ba4671/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr83988.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr83988.C?ref=66ce8ff7603b3b717fff93d706b1cf3548ba4671", "patch": "@@ -0,0 +1,16 @@\n+// PR 83988 ICE\n+\n+template<class T> struct optional {};\n+struct get_from_json {\n+  template<typename GetWhat>\n+  operator optional<GetWhat>() const {return optional<GetWhat> ();}\n+  template<typename AsWhat>\n+  optional<AsWhat> maybe() const\n+  {\n+    return this->operator optional<AsWhat>();\n+  }\n+};\n+void test()\n+{\n+  get_from_json().maybe<int>();\n+}"}]}