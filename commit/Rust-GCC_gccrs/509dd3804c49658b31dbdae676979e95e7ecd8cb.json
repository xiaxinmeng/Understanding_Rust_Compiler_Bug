{"sha": "509dd3804c49658b31dbdae676979e95e7ecd8cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA5ZGQzODA0YzQ5NjU4YjMxZGJkYWU2NzY5NzllOTVlN2VjZDhjYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-10-08T20:49:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-10-08T20:49:19Z"}, "message": "re PR rtl-optimization/45903 (unnecessary load of 32/64bit variable when only 8 bits are needed)\n\n\tPR tree-optimization/45903\n\t* simplify-rtx.c (simplify_subreg): Optimize lowpart SUBREG\n\tof *SHIFTRT of MEM.\n\n\t* gcc.target/i386/pr45903.c: New test.\n\nFrom-SVN: r165200", "tree": {"sha": "132af12e172f41cd9faf29bd32999c04ed39e7ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/132af12e172f41cd9faf29bd32999c04ed39e7ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/509dd3804c49658b31dbdae676979e95e7ecd8cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509dd3804c49658b31dbdae676979e95e7ecd8cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509dd3804c49658b31dbdae676979e95e7ecd8cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509dd3804c49658b31dbdae676979e95e7ecd8cb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0fd76d8e4c34b647eec8fcd7c8b797b8559301e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd76d8e4c34b647eec8fcd7c8b797b8559301e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fd76d8e4c34b647eec8fcd7c8b797b8559301e0"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "182337f101b31e0e0e05136b34f8045faa9ecf18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/509dd3804c49658b31dbdae676979e95e7ecd8cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/509dd3804c49658b31dbdae676979e95e7ecd8cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=509dd3804c49658b31dbdae676979e95e7ecd8cb", "patch": "@@ -1,3 +1,9 @@\n+2010-10-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/45903\n+\t* simplify-rtx.c (simplify_subreg): Optimize lowpart SUBREG\n+\tof *SHIFTRT of MEM.\n+\n 2010-10-08  Richard Guenther  <rguenther@suse.de>\n \n \t* lto-streamer-in.c (lto_input_ts_decl_minimal_tree_pointers):"}, {"sha": "ff1437be41bdc4265252aa70bff2de7c20b51a49", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/509dd3804c49658b31dbdae676979e95e7ecd8cb/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/509dd3804c49658b31dbdae676979e95e7ecd8cb/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=509dd3804c49658b31dbdae676979e95e7ecd8cb", "patch": "@@ -5482,6 +5482,31 @@ simplify_subreg (enum machine_mode outermode, rtx op,\n \t\t\t\t   : byte + shifted_bytes));\n     }\n \n+  /* If we have a lowpart SUBREG of a right shift of MEM, make a new MEM\n+     and try replacing the SUBREG and shift with it.  Don't do this if\n+     the MEM has a mode-dependent address or if we would be widening it.  */\n+\n+  if ((GET_CODE (op) == LSHIFTRT\n+       || GET_CODE (op) == ASHIFTRT)\n+      && MEM_P (XEXP (op, 0))\n+      && CONST_INT_P (XEXP (op, 1))\n+      && GET_MODE_SIZE (outermode) < GET_MODE_SIZE (GET_MODE (op))\n+      && (INTVAL (XEXP (op, 1)) % GET_MODE_BITSIZE (outermode)) == 0\n+      && INTVAL (XEXP (op, 1)) > 0\n+      && INTVAL (XEXP (op, 1)) < GET_MODE_BITSIZE (innermode)\n+      && ! mode_dependent_address_p (XEXP (XEXP (op, 0), 0))\n+      && ! MEM_VOLATILE_P (XEXP (op, 0))\n+      && byte == subreg_lowpart_offset (outermode, innermode)\n+      && (GET_MODE_SIZE (outermode) >= UNITS_PER_WORD\n+\t  || WORDS_BIG_ENDIAN == BYTES_BIG_ENDIAN))\n+    {\n+      int shifted_bytes = INTVAL (XEXP (op, 1)) / BITS_PER_UNIT;\n+      return adjust_address_nv (XEXP (op, 0), outermode,\n+\t\t\t\t(WORDS_BIG_ENDIAN\n+\t\t\t\t ? byte - shifted_bytes\n+\t\t\t\t : byte + shifted_bytes));\n+    }\n+\n   return NULL_RTX;\n }\n "}, {"sha": "dd23413753da756fce1bbf2c701737e326e6cea4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/509dd3804c49658b31dbdae676979e95e7ecd8cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/509dd3804c49658b31dbdae676979e95e7ecd8cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=509dd3804c49658b31dbdae676979e95e7ecd8cb", "patch": "@@ -1,3 +1,8 @@\n+2010-10-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/45903\n+\t* gcc.target/i386/pr45903.c: New test.\n+\n 2010-10-08  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat.dg/interface5.adb: Compile with warnings disabled."}]}