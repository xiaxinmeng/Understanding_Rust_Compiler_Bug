{"sha": "7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MyYjAxN2M5YTVmOWE4MWRjZjZiMmIyMDQ3ZmQxMDE2NWQxOTQyMA==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2001-07-25T13:33:17Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2001-07-25T13:33:17Z"}, "message": "stmt.c (expand_goto): A nonlocal goto can be a call too.\n\n\n2001-07-25  Andrew MacLeod  <amacleod@redhat.com>\n\t    Janis Johnson  <janis@us.ibm.com>\n\n\t* stmt.c (expand_goto): A nonlocal goto can be a call too.\n\t* builtins.c (expand_builtin_longjmp): Reverse label and static chain\n\tpointer parameters to match documented usage of nonlocal_goto.\n\t* config/ia64/ia64.md (nonlocal_goto): Revert label and static chain\n\tparameters to their correct order.\n\t* config/sparc/sparc.md (nonlocal_goto): Revert label and static chain\n\tparameters to their correct order.\n\nCo-Authored-By: Janis Johnson <janis@us.ibm.com>\n\nFrom-SVN: r44353", "tree": {"sha": "e7c323638a787cb35876771b5347818a79319262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7c323638a787cb35876771b5347818a79319262"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/comments", "author": null, "committer": null, "parents": [{"sha": "ff3daa889a35408d19790c6a5bd01fed99362c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3daa889a35408d19790c6a5bd01fed99362c1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff3daa889a35408d19790c6a5bd01fed99362c1d"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "e8716379fbddfd562caaf860fd628cbd08552cab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "patch": "@@ -1,3 +1,14 @@\n+2001-07-25  Andrew MacLeod  <amacleod@redhat.com>\n+\t    Janis Johnson  <janis@us.ibm.com>\n+\n+\t* stmt.c (expand_goto): A nonlocal goto can be a call too.\n+\t* builtins.c (expand_builtin_longjmp): Reverse label and static chain\n+\tpointer parameters to match documented usage of nonlocal_goto.\n+\t* config/ia64/ia64.md (nonlocal_goto): Revert label and static chain\n+\tparameters to their correct order.\n+\t* config/sparc/sparc.md (nonlocal_goto): Revert label and static chain\n+\tparameters to their correct order.\n+\n 2001-07-25  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* config/ia64/ia64.h (STRIP_NAME_ENCODING): Strip out '*' as well."}, {"sha": "985324a7375d06ba2c86f1d3dee412ebbd8c1afb", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "patch": "@@ -696,7 +696,7 @@ expand_builtin_longjmp (buf_addr, value)\n \t/* We have to pass a value to the nonlocal_goto pattern that will\n \t   get copied into the static_chain pointer, but it does not matter\n \t   what that value is, because builtin_setjmp does not use it.  */\n-\temit_insn (gen_nonlocal_goto (value, fp, stack, lab));\n+\temit_insn (gen_nonlocal_goto (value, lab, stack, fp));\n       else\n #endif\n \t{"}, {"sha": "6d1821f012c50a5acca888f0bc8bc695f2069f51", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "patch": "@@ -4986,9 +4986,9 @@\n {\n   emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \\\"__ia64_nonlocal_goto\\\"),\n \t\t     LCT_NORETURN, VOIDmode, 3,\n-\t\t     operands[3], Pmode,\n+\t\t     operands[1], Pmode,\n \t\t     copy_to_reg (XEXP (operands[2], 0)), Pmode,\n-\t\t     operands[1], Pmode);\n+\t\t     operands[3], Pmode);\n   emit_barrier ();\n   DONE;\n }\")"}, {"sha": "51a8e70e8a97549ad64327d6aaa1e370ad2eee3c", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "patch": "@@ -8970,9 +8970,9 @@\n #if 0\n   rtx chain = operands[0];\n #endif\n-  rtx fp = operands[1];\n+  rtx lab = operands[1];\n   rtx stack = operands[2];\n-  rtx lab = operands[3];\n+  rtx fp = operands[3];\n   rtx labreg;\n \n   /* Trap instruction to flush all the register windows.  */"}, {"sha": "169291656d98151a0b039e069737104a4a7ee535", "filename": "gcc/stmt.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2b017c9a5f9a81dcf6b2b2047fd10165d19420/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=7c2b017c9a5f9a81dcf6b2b2047fd10165d19420", "patch": "@@ -842,12 +842,17 @@ expand_goto (label)\n \n       /* Search backwards to the jump insn and mark it as a \n \t non-local goto.  */\n-      for (insn = get_last_insn ();\n-\t   GET_CODE (insn) != JUMP_INSN; \n-\t   insn = PREV_INSN (insn))\n-\tcontinue;\n-      REG_NOTES (insn) = alloc_EXPR_LIST (REG_NON_LOCAL_GOTO, const0_rtx,\n-\t\t\t\t\t  REG_NOTES (insn));\n+      for (insn = get_last_insn (); insn; insn = PREV_INSN (insn))\n+\t{\n+\t  if (GET_CODE (insn) == JUMP_INSN)\n+\t    {\n+\t      REG_NOTES (insn) = alloc_EXPR_LIST (REG_NON_LOCAL_GOTO,\n+\t\t\t\t\t\t  const0_rtx, REG_NOTES (insn));\n+\t      break;\n+\t    }\n+\t  else if (GET_CODE (insn) == CALL_INSN)\n+\t      break;\n+\t}\n     }\n   else\n     expand_goto_internal (label, label_rtx (label), NULL_RTX);"}]}