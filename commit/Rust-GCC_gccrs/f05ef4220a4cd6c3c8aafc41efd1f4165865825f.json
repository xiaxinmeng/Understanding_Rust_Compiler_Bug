{"sha": "f05ef4220a4cd6c3c8aafc41efd1f4165865825f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA1ZWY0MjIwYTRjZDZjM2M4YWFmYzQxZWZkMWY0MTY1ODY1ODI1Zg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-03T18:57:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-03T18:57:18Z"}, "message": "tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): Don't fold fp plus with minus.\n\n        * tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): Don't fold\n        fp plus with minus.\n\nFrom-SVN: r84061", "tree": {"sha": "4f592787da68b05ca62b4a01784fe39a83f221f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f592787da68b05ca62b4a01784fe39a83f221f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f05ef4220a4cd6c3c8aafc41efd1f4165865825f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05ef4220a4cd6c3c8aafc41efd1f4165865825f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f05ef4220a4cd6c3c8aafc41efd1f4165865825f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05ef4220a4cd6c3c8aafc41efd1f4165865825f/comments", "author": null, "committer": null, "parents": [{"sha": "fa9784263f4e37528e0acb57019488a735221b7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9784263f4e37528e0acb57019488a735221b7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9784263f4e37528e0acb57019488a735221b7f"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "8f6ae167d3d3df0b0d76728288e6ae544b97613a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040703-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f05ef4220a4cd6c3c8aafc41efd1f4165865825f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040703-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f05ef4220a4cd6c3c8aafc41efd1f4165865825f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040703-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040703-1.c?ref=f05ef4220a4cd6c3c8aafc41efd1f4165865825f", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dom2\" } */\n+\n+float foo(float x)\n+{\n+  x += 1;\n+  x -= 1;\n+  return x;\n+}\n+\n+/* We should *not* fold the arithmetic.  */\n+/* { dg-final { scan-tree-dump-times \"0.0\" 0 \"dom2\"} } */"}, {"sha": "356daacb21c08c1e6f672e2ded582701bbf16bb3", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f05ef4220a4cd6c3c8aafc41efd1f4165865825f/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f05ef4220a4cd6c3c8aafc41efd1f4165865825f/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=f05ef4220a4cd6c3c8aafc41efd1f4165865825f", "patch": "@@ -1945,6 +1945,25 @@ simplify_rhs_and_lookup_avail_expr (struct dom_walk_data *walk_data,\n \t\t  tree type = TREE_TYPE (TREE_OPERAND (stmt, 0));\n \t\t  tree t;\n \n+\t\t  /* If we care about correct floating point results, then\n+\t\t     don't fold x + c1 - c2.  Note that we need to take both\n+\t\t     the codes and the signs to figure this out.  */\n+\t\t  if (FLOAT_TYPE_P (type)\n+\t\t      && !flag_unsafe_math_optimizations\n+\t\t      && (rhs_def_code == PLUS_EXPR\n+\t\t\t  || rhs_def_code == MINUS_EXPR))\n+\t\t    {\n+\t\t      bool neg = false;\n+\n+\t\t      neg ^= (rhs_code == MINUS_EXPR);\n+\t\t      neg ^= (rhs_def_code == MINUS_EXPR);\n+\t\t      neg ^= real_isneg (TREE_REAL_CST_PTR (outer_const));\n+\t\t      neg ^= real_isneg (TREE_REAL_CST_PTR (def_stmt_op1));\n+\n+\t\t      if (neg)\n+\t\t\tgoto dont_fold_assoc;\n+\t\t    }\n+\n \t\t  /* Ho hum.  So fold will only operate on the outermost\n \t\t     thingy that we give it, so we have to build the new\n \t\t     expression in two pieces.  This requires that we handle\n@@ -1979,6 +1998,7 @@ simplify_rhs_and_lookup_avail_expr (struct dom_walk_data *walk_data,\n \t\t}\n \t    }\n \t}\n+ dont_fold_assoc:;\n     }\n \n   /* Transform TRUNC_DIV_EXPR and TRUNC_MOD_EXPR into RSHIFT_EXPR"}]}