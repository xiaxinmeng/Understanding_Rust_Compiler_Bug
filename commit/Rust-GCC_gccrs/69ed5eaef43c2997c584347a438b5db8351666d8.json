{"sha": "69ed5eaef43c2997c584347a438b5db8351666d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjllZDVlYWVmNDNjMjk5N2M1ODQzNDdhNDM4YjVkYjgzNTE2NjZkOA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2021-06-27T14:59:57Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2021-06-27T14:59:57Z"}, "message": "Fix inner attribute parsing\n\nparse_inner_attribute tried to skip the right square token twice. This caused odd error\nmessages in case there were multiple inner attributes. This bug masked another bug in\nparse_attr_input where when the (optional) attr input was an assignment to a literal\nthe parser failed to skip the literal.\n\nThe existing top_attr.rs testcase relied on the two bugs cancelling each other out.\nAdd a new testcase inner_attributes.rs for the first bug.\n\nResolves: https://github.com/Rust-GCC/gccrs/issues/510", "tree": {"sha": "89cf03f5129a254c253b3a052e006bf2df9dd990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89cf03f5129a254c253b3a052e006bf2df9dd990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69ed5eaef43c2997c584347a438b5db8351666d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69ed5eaef43c2997c584347a438b5db8351666d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69ed5eaef43c2997c584347a438b5db8351666d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69ed5eaef43c2997c584347a438b5db8351666d8/comments", "author": null, "committer": null, "parents": [{"sha": "54e0d0171932b7c43e69f685e5fe41d473ddf5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e0d0171932b7c43e69f685e5fe41d473ddf5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e0d0171932b7c43e69f685e5fe41d473ddf5bf"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "23e62349e40c7c335d11e58105066ebdaa7f74b3", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ed5eaef43c2997c584347a438b5db8351666d8/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ed5eaef43c2997c584347a438b5db8351666d8/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=69ed5eaef43c2997c584347a438b5db8351666d8", "patch": "@@ -495,7 +495,6 @@ Parser<ManagedTokenSource>::parse_inner_attribute ()\n     return AST::Attribute::create_empty ();\n \n   AST::Attribute actual_attribute = parse_attribute_body ();\n-  lexer.skip_token ();\n \n   if (!skip_token (RIGHT_SQUARE))\n     return AST::Attribute::create_empty ();\n@@ -785,6 +784,7 @@ Parser<ManagedTokenSource>::parse_attr_input ()\n \t// create actual LiteralExpr\n \tAST::LiteralExpr lit_expr (t->get_str (), lit_type, t->get_type_hint (),\n \t\t\t\t   {}, t->get_locus ());\n+\tlexer.skip_token ();\n \n \tstd::unique_ptr<AST::AttrInput> attr_input_lit (\n \t  new AST::AttrInputLiteral (std::move (lit_expr)));"}, {"sha": "3410dd6ec871eceb78fb168d179d547d8885f92a", "filename": "gcc/testsuite/rust/compile/torture/inner_attributes.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ed5eaef43c2997c584347a438b5db8351666d8/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Finner_attributes.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ed5eaef43c2997c584347a438b5db8351666d8/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Finner_attributes.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Finner_attributes.rs?ref=69ed5eaef43c2997c584347a438b5db8351666d8", "patch": "@@ -0,0 +1,3 @@\n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n+pub fn main () { }"}]}