{"sha": "0feb237657c7c1f057754a8d8132a83adc63250e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZlYjIzNzY1N2M3YzFmMDU3NzU0YThkODEzMmE4M2FkYzYzMjUwZQ==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2020-11-07T09:31:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-15T11:41:57Z"}, "message": "[Ada] Fix serial port baud rate setting on GNU/Linux\n\ngcc/ada/\n\n\t* libgnat/g-sercom__linux.adb (Set): Use cfsetospeed and\n\tcfsetispeed to set the baud rate. Clear non-blocking serial port\n\tstatus when blocking is requested.", "tree": {"sha": "7f4b11f7ba29634b514cee3ccf8cdfbc48e91f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f4b11f7ba29634b514cee3ccf8cdfbc48e91f98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0feb237657c7c1f057754a8d8132a83adc63250e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0feb237657c7c1f057754a8d8132a83adc63250e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0feb237657c7c1f057754a8d8132a83adc63250e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0feb237657c7c1f057754a8d8132a83adc63250e/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2224729c890681365d1844e102d7db114e2251cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2224729c890681365d1844e102d7db114e2251cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2224729c890681365d1844e102d7db114e2251cc"}], "stats": {"total": 110, "additions": 102, "deletions": 8}, "files": [{"sha": "f7212e87ccaabc7d58bbdb8914a9bb0da42f08ef", "filename": "gcc/ada/libgnat/g-sercom__linux.adb", "status": "modified", "additions": 102, "deletions": 8, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0feb237657c7c1f057754a8d8132a83adc63250e/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0feb237657c7c1f057754a8d8132a83adc63250e/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb?ref=0feb237657c7c1f057754a8d8132a83adc63250e", "patch": "@@ -30,6 +30,33 @@\n ------------------------------------------------------------------------------\n \n --  This is the GNU/Linux implementation of this package\n+--\n+--  Testing on GNU/Linux can be done with socat & stty tools.\n+--\n+--  First in a terminal create a virtual serial port:\n+--\n+--  * First solution, the terminal is one of the side of the channel\n+--    characters written with Write into the port will be displayed\n+--    there and characters typed into the terminal will be send to the\n+--    channel and will be received by a Read call.\n+--\n+--     $ socat PTY,link=/tmp/virtual-tty,raw,echo=1 -\n+--\n+--  * Second solution, the virtual channel contains two side and the\n+--    program can Read and Write date to it.\n+--\n+--     $ socat PTY,link=/tmp/virtual-tty,raw,echo=1 \\\n+--         PTY,link=/tmp/virtual-tty,raw,echo=1\n+--\n+--  Connect to this virtual serial port with:\n+--\n+--     Open (Port => P, Name => \"/tmp/virtual-tty\");\n+--\n+--  Do any settings using the Set routine below, then you can check\n+--  the serial port configuration with:\n+--\n+--     $ stty --file /tmp/virtual-tty\n+--\n \n with Ada.Streams;          use Ada.Streams;\n \n@@ -52,6 +79,34 @@ package body GNAT.Serial_Communications is\n    function fcntl (fd : int; cmd : int; value : int) return int;\n    pragma Import (C, fcntl, \"fcntl\");\n \n+   C_Data_Rate : constant array (Data_Rate) of unsigned :=\n+                   (B75      => OSC.B75,\n+                    B110     => OSC.B110,\n+                    B150     => OSC.B150,\n+                    B300     => OSC.B300,\n+                    B600     => OSC.B600,\n+                    B1200    => OSC.B1200,\n+                    B2400    => OSC.B2400,\n+                    B4800    => OSC.B4800,\n+                    B9600    => OSC.B9600,\n+                    B19200   => OSC.B19200,\n+                    B38400   => OSC.B38400,\n+                    B57600   => OSC.B57600,\n+                    B115200  => OSC.B115200,\n+                    B230400  => OSC.B230400,\n+                    B460800  => OSC.B460800,\n+                    B500000  => OSC.B500000,\n+                    B576000  => OSC.B576000,\n+                    B921600  => OSC.B921600,\n+                    B1000000 => OSC.B1000000,\n+                    B1152000 => OSC.B1152000,\n+                    B1500000 => OSC.B1500000,\n+                    B2000000 => OSC.B2000000,\n+                    B2500000 => OSC.B2500000,\n+                    B3000000 => OSC.B3000000,\n+                    B3500000 => OSC.B3500000,\n+                    B4000000 => OSC.B4000000);\n+\n    C_Bits      : constant array (Data_Bits) of unsigned :=\n                    (CS7 => OSC.CS7, CS8 => OSC.CS8);\n \n@@ -162,15 +217,17 @@ package body GNAT.Serial_Communications is\n    is\n       use OSC;\n \n+      subtype speed_t is unsigned;\n+\n       type termios is record\n          c_iflag  : unsigned;\n          c_oflag  : unsigned;\n          c_cflag  : unsigned;\n          c_lflag  : unsigned;\n          c_line   : unsigned_char;\n          c_cc     : Interfaces.C.char_array (0 .. 31);\n-         c_ispeed : unsigned;\n-         c_ospeed : unsigned;\n+         c_ispeed : speed_t;\n+         c_ospeed : speed_t;\n       end record;\n       pragma Convention (C, termios);\n \n@@ -184,9 +241,15 @@ package body GNAT.Serial_Communications is\n       function tcflush (fd : int; queue_selector : int) return int;\n       pragma Import (C, tcflush, \"tcflush\");\n \n+      function cfsetospeed (termios_p : Address; speed : speed_t) return int;\n+      pragma Import (C, cfsetospeed, \"cfsetospeed\");\n+\n+      function cfsetispeed (termios_p : Address; speed : speed_t) return int;\n+      pragma Import (C, cfsetispeed, \"cfsetispeed\");\n+\n       Current : termios;\n \n-      Res : int;\n+      Res : int := 0;\n       pragma Warnings (Off, Res);\n       --  Warnings off, since we don't always test the result\n \n@@ -205,6 +268,7 @@ package body GNAT.Serial_Communications is\n                            or C_Stop_Bits (Stop_Bits)\n                            or C_Parity (Parity)\n                            or CREAD;\n+\n       Current.c_iflag := 0;\n       Current.c_lflag := 0;\n       Current.c_oflag := 0;\n@@ -224,10 +288,36 @@ package body GNAT.Serial_Communications is\n             Current.c_iflag := Current.c_iflag or IXON;\n       end case;\n \n-      Current.c_ispeed     := Data_Rate_Value (Rate);\n-      Current.c_ospeed     := Data_Rate_Value (Rate);\n-      Current.c_cc (VMIN)  := char'Val (0);\n-      Current.c_cc (VTIME) := char'Val (Natural (Timeout * 10));\n+      Current.c_ispeed := Data_Rate_Value (Rate);\n+      Current.c_ospeed := Data_Rate_Value (Rate);\n+\n+      --  See man termios for descriptions about the different modes\n+\n+      if Block and then Timeout = 0.0 then\n+         --  MIN > 0, TIME == 0 (blocking read)\n+         Current.c_cc (VMIN)  := char'Val (1);\n+         Current.c_cc (VTIME) := char'Val (0);\n+\n+      else\n+         --  MIN == 0, TIME > 0  (read with timeout)\n+         --  MIN == 0, TIME == 0 (polling read)\n+         Current.c_cc (VMIN)  := char'Val (0);\n+         Current.c_cc (VTIME) := char'Val (Natural (Timeout * 10));\n+\n+         Current.c_lflag := Current.c_lflag or (not ICANON);\n+      end if;\n+\n+      Res := cfsetispeed (Current'Address, C_Data_Rate (Rate));\n+\n+      if Res = -1 then\n+         Raise_Error (\"set: cfsetispeed failed\");\n+      end if;\n+\n+      Res := cfsetospeed (Current'Address, C_Data_Rate (Rate));\n+\n+      if Res = -1 then\n+         Raise_Error (\"set: cfsetospeed failed\");\n+      end if;\n \n       --  Set port settings\n \n@@ -236,7 +326,11 @@ package body GNAT.Serial_Communications is\n \n       --  Block\n \n-      Res := fcntl (int (Port.H), F_SETFL, (if Block then 0 else FNDELAY));\n+      if Block then\n+         --  In blocking mode, remove the non-blocking flags set while\n+         --  opening the serial port (see Open).\n+         Res := fcntl (int (Port.H), F_SETFL, 0);\n+      end if;\n \n       if Res = -1 then\n          Raise_Error (\"set: fcntl failed\");"}]}