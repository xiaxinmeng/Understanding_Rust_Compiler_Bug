{"sha": "23d956f9358316e3a65455ff3dc4caffb6b67de3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNkOTU2ZjkzNTgzMTZlM2E2NTQ1NWZmM2RjNGNhZmZiNmI2N2RlMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-16T17:04:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-16T17:04:41Z"}, "message": "parser.c (cp_parser_abort_tentative_parse): Make sure we haven't committed to this tentative parse.\n\n\t* parser.c (cp_parser_abort_tentative_parse): Make sure we haven't\n\tcommitted to this tentative parse.\n\nFrom-SVN: r171054", "tree": {"sha": "3fadba72eff30694e113412308e175ec50c69a8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fadba72eff30694e113412308e175ec50c69a8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23d956f9358316e3a65455ff3dc4caffb6b67de3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d956f9358316e3a65455ff3dc4caffb6b67de3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23d956f9358316e3a65455ff3dc4caffb6b67de3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d956f9358316e3a65455ff3dc4caffb6b67de3/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb4586d38825faf532f8dd12c73049410563ee7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4586d38825faf532f8dd12c73049410563ee7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb4586d38825faf532f8dd12c73049410563ee7c"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "8a4082941d932b65d9c5d430bd7152875e041f91", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d956f9358316e3a65455ff3dc4caffb6b67de3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d956f9358316e3a65455ff3dc4caffb6b67de3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=23d956f9358316e3a65455ff3dc4caffb6b67de3", "patch": "@@ -1,5 +1,8 @@\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n+\t* parser.c (cp_parser_abort_tentative_parse): Make sure we haven't\n+\tcommitted to this tentative parse.\n+\n \tPR c++/47999\n \t* semantics.c (finish_call_expr): Preserve reference semantics\n \tin templates."}, {"sha": "9523fdccd950d8f8023068ae11de723e4f0b672a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d956f9358316e3a65455ff3dc4caffb6b67de3/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d956f9358316e3a65455ff3dc4caffb6b67de3/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=23d956f9358316e3a65455ff3dc4caffb6b67de3", "patch": "@@ -21398,6 +21398,8 @@ cp_parser_commit_to_tentative_parse (cp_parser* parser)\n static void\n cp_parser_abort_tentative_parse (cp_parser* parser)\n {\n+  gcc_assert (parser->context->status != CP_PARSER_STATUS_KIND_COMMITTED\n+\t      || errorcount > 0);\n   cp_parser_simulate_error (parser);\n   /* Now, pretend that we want to see if the construct was\n      successfully parsed.  */"}]}