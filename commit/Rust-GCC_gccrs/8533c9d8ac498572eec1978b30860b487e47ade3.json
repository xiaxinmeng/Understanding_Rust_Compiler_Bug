{"sha": "8533c9d8ac498572eec1978b30860b487e47ade3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUzM2M5ZDhhYzQ5ODU3MmVlYzE5NzhiMzA4NjBiNDg3ZTQ3YWRlMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-03-30T19:58:35Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-30T19:58:35Z"}, "message": "Replace type != type comparisons with types_compatible_p.\n\n2010-03-30  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/43430\n\t* tree-vect-slp.c (vect_get_and_check_slp_defs): Replace type\n\tpointer comparisons with types_compatible_p.\n\t* tree-vect-stmts.c (vectorizable_call): Same.\n\t(vectorizable_condition): Same.\n\n\t* gcc.dg/vect/pr43430-1.c: New.\n\nFrom-SVN: r157833", "tree": {"sha": "22b4bb57614eef3adf7e4f9f22fb36de4a3af545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22b4bb57614eef3adf7e4f9f22fb36de4a3af545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8533c9d8ac498572eec1978b30860b487e47ade3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8533c9d8ac498572eec1978b30860b487e47ade3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8533c9d8ac498572eec1978b30860b487e47ade3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8533c9d8ac498572eec1978b30860b487e47ade3/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce0ecb98c2297112599b26191d5294187016307c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce0ecb98c2297112599b26191d5294187016307c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce0ecb98c2297112599b26191d5294187016307c"}], "stats": {"total": 67, "additions": 61, "deletions": 6}, "files": [{"sha": "a533a7fef60afe62adb3778eb0c98666b6f02bff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8533c9d8ac498572eec1978b30860b487e47ade3", "patch": "@@ -1,3 +1,11 @@\n+2010-03-30  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/43430\n+\t* tree-vect-slp.c (vect_get_and_check_slp_defs): Replace type\n+\tpointer comparisons with types_compatible_p.\n+\t* tree-vect-stmts.c (vectorizable_call): Same.\n+\t(vectorizable_condition): Same.\n+\n 2010-03-30  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.c (s390_emit_prologue): Omit issuing a dynamic"}, {"sha": "c9ede61b356d6edf5b6dfbe60e8fbc75745cf5ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8533c9d8ac498572eec1978b30860b487e47ade3", "patch": "@@ -1,3 +1,8 @@\n+2010-03-30  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/43430\n+\t* gcc.dg/vect/pr43430-1.c: New.\n+\n 2010-03-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/43559"}, {"sha": "9a36983813f8f2701407d61fe8bc82353cbf521c", "filename": "gcc/testsuite/gcc.dg/vect/pr43430-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43430-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43430-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr43430-1.c?ref=8533c9d8ac498572eec1978b30860b487e47ade3", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 16\n+\n+typedef int uint8_t;\n+uint8_t data_ch1[N + 1] =\n+  { 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30 };\n+uint8_t data_ch2[N + 1] =\n+  { 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30 };\n+#define SUM 480\n+\n+__attribute__ ((noinline)) int\n+foo (uint8_t * s1, uint8_t * s2, int stride)\n+{\n+  int score = 0;\n+  int x;\n+  for (x = 0; x < N; x++)\n+    score += ((s1[x] - s1[x + stride] + s2[x + stride]) >= 0 ?\n+\t      s1[x] + s2[x + stride] :\n+\t      s2[x + stride]);\n+\n+  if (score != SUM)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+int\n+main (void)\n+{\n+  check_vect ();\n+  return foo (data_ch1, data_ch2, 1);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "77fd929a819baab9cdee98273bdc0b69a8609a85", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=8533c9d8ac498572eec1978b30860b487e47ade3", "patch": "@@ -246,14 +246,16 @@ vect_get_and_check_slp_defs (loop_vec_info loop_vinfo, bb_vec_info bb_vinfo,\n \t      if ((i == 0\n \t\t   && (*first_stmt_dt0 != dt[i]\n \t\t       || (*first_stmt_def0_type && def\n-\t\t\t   && *first_stmt_def0_type != TREE_TYPE (def))))\n+\t\t\t   && !types_compatible_p (*first_stmt_def0_type,\n+\t\t\t\t\t\t   TREE_TYPE (def)))))\n \t\t  || (i == 1\n \t\t      && (*first_stmt_dt1 != dt[i]\n \t\t\t  || (*first_stmt_def1_type && def\n-\t\t\t      && *first_stmt_def1_type != TREE_TYPE (def))))\n+\t\t\t      && !types_compatible_p (*first_stmt_def1_type,\n+\t\t\t\t\t\t      TREE_TYPE (def)))))\n \t\t  || (!def\n-\t\t      && TREE_TYPE (*first_stmt_const_oprnd)\n-\t\t      != TREE_TYPE (oprnd)))\n+\t\t      && !types_compatible_p (TREE_TYPE (*first_stmt_const_oprnd),\n+\t\t\t\t\t      TREE_TYPE (oprnd))))\n \t\t{\n \t\t  if (vect_print_dump_info (REPORT_SLP))\n \t\t    fprintf (vect_dump, \"Build SLP failed: different types \");"}, {"sha": "48bf1bdd54a409286cdbb69d10609fcafd7838c0", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8533c9d8ac498572eec1978b30860b487e47ade3/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=8533c9d8ac498572eec1978b30860b487e47ade3", "patch": "@@ -1268,7 +1268,7 @@ vectorizable_call (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt)\n \n       /* We can only handle calls with arguments of the same type.  */\n       if (rhs_type\n-\t  && rhs_type != TREE_TYPE (op))\n+\t  && !types_compatible_p (rhs_type, TREE_TYPE (op)))\n \t{\n \t  if (vect_print_dump_info (REPORT_DETAILS))\n \t    fprintf (vect_dump, \"argument types differ.\");\n@@ -3863,7 +3863,8 @@ vectorizable_condition (gimple stmt, gimple_stmt_iterator *gsi,\n \n   /* We do not handle two different vector types for the condition\n      and the values.  */\n-  if (TREE_TYPE (TREE_OPERAND (cond_expr, 0)) != TREE_TYPE (vectype))\n+  if (!types_compatible_p (TREE_TYPE (TREE_OPERAND (cond_expr, 0)),\n+\t\t\t   TREE_TYPE (vectype)))\n     return false;\n \n   if (TREE_CODE (then_clause) == SSA_NAME)"}]}