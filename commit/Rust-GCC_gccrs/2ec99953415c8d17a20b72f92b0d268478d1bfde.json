{"sha": "2ec99953415c8d17a20b72f92b0d268478d1bfde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVjOTk5NTM0MTVjOGQxN2EyMGI3MmY5MmIwZDI2ODQ3OGQxYmZkZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-07-09T22:44:42Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-09T22:44:42Z"}, "message": "re PR c++/60686 (message \" only declarations of constructors can be \u2018explicit\u2019 \" now conflicting with C++11)\n\n/cp\n2014-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/60686\n\t* decl.c (grokdeclarator): Adjust error messages about 'explicit'\n\toutside class declaration, in friend declaration, and neither on\n\tconstructor nor conversion operator.\n\n/testsuite\n2014-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/60686\n\t* g++.dg/cpp0x/explicit8.C: New.\n\nFrom-SVN: r212415", "tree": {"sha": "b02f959d9997fd80cadd477063c83e136789fa8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b02f959d9997fd80cadd477063c83e136789fa8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ec99953415c8d17a20b72f92b0d268478d1bfde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec99953415c8d17a20b72f92b0d268478d1bfde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ec99953415c8d17a20b72f92b0d268478d1bfde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec99953415c8d17a20b72f92b0d268478d1bfde/comments", "author": null, "committer": null, "parents": [{"sha": "a6ea72bf8296fcb351b76e4f0c11763bc5ae1505", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ea72bf8296fcb351b76e4f0c11763bc5ae1505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ea72bf8296fcb351b76e4f0c11763bc5ae1505"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "5827bbdf3de5c32f774976eae764026c78caa345", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ec99953415c8d17a20b72f92b0d268478d1bfde/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ec99953415c8d17a20b72f92b0d268478d1bfde/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2ec99953415c8d17a20b72f92b0d268478d1bfde", "patch": "@@ -1,3 +1,10 @@\n+2014-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/60686\n+\t* decl.c (grokdeclarator): Adjust error messages about 'explicit'\n+\toutside class declaration, in friend declaration, and neither on\n+\tconstructor nor conversion operator.\n+\n 2014-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tDR 1584"}, {"sha": "1ade5861d581e0b67821b690c3f64be15566d88a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ec99953415c8d17a20b72f92b0d268478d1bfde/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ec99953415c8d17a20b72f92b0d268478d1bfde/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2ec99953415c8d17a20b72f92b0d268478d1bfde", "patch": "@@ -10117,9 +10117,16 @@ grokdeclarator (const cp_declarator *declarator,\n \n   if (explicitp == 1 || (explicitp && friendp))\n     {\n-      /* [dcl.fct.spec] The explicit specifier shall only be used in\n-\t declarations of constructors within a class definition.  */\n-      error (\"only declarations of constructors can be %<explicit%>\");\n+      /* [dcl.fct.spec] (C++11) The explicit specifier shall be used only\n+\t in the declaration of a constructor or conversion function within\n+\t a class definition.  */\n+      if (!current_class_type)\n+\terror (\"%<explicit%> outside class declaration\");\n+      else if (friendp)\n+\terror (\"%<explicit%> in friend declaration\");\n+      else\n+\terror (\"only declarations of constructors and conversion operators \"\n+\t       \"can be %<explicit%>\");\n       explicitp = 0;\n     }\n "}, {"sha": "f4ccc1fda68c4fade692f371c0b9db46beafc6be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ec99953415c8d17a20b72f92b0d268478d1bfde/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ec99953415c8d17a20b72f92b0d268478d1bfde/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ec99953415c8d17a20b72f92b0d268478d1bfde", "patch": "@@ -1,3 +1,8 @@\n+2014-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/60686\n+\t* g++.dg/cpp0x/explicit8.C: New.\n+\n 2014-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tDR 1584"}, {"sha": "acacf97451a686f273a34b7486ec9907d0c8ca68", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit8.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ec99953415c8d17a20b72f92b0d268478d1bfde/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ec99953415c8d17a20b72f92b0d268478d1bfde/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit8.C?ref=2ec99953415c8d17a20b72f92b0d268478d1bfde", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/60686\n+// { dg-do compile { target c++11 } }\n+\n+struct A {\n+  explicit operator int() const;\n+};\n+\n+explicit inline A::operator int() const { return 1; }  // { dg-error \"'explicit' outside class declaration\" }\n+\n+struct B {\n+  explicit void f();  // { dg-error \"only declarations of constructors and conversion operators can be 'explicit'\" }\n+};\n+\n+explicit void B::f() { }  // { dg-error \"'explicit' outside class declaration\" }\n+\n+struct C {\n+  explicit C(int);\n+};\n+\n+struct D {\n+  explicit friend C::C(int);  // { dg-error \"'explicit' in friend declaration\" }\n+};"}]}