{"sha": "a543eb5e9af8c0a0cc50f82f4d88506204a70886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU0M2ViNWU5YWY4YzBhMGNjNTBmODJmNGQ4ODUwNjIwNGE3MDg4Ng==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2003-01-21T08:33:20Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-01-21T08:33:20Z"}, "message": "genautomata.c: Space savings in generated code:\n\n\t* genautomata.c: Space savings in generated code:\n\t(output_dfa_insn_code_func): Split out the table-enlargement\n\tpath to an out-of-line static function, dfa_insn_code_enlarge.\n\t(output_internal_insn_latency_func): Use a lookup table for the\n\tdefault latencies.\n\t(output_print_reservation_func): Use a lookup table for the\n\tstrings.\n\nFrom-SVN: r61541", "tree": {"sha": "ed6a0806e92cec01adef962ac308bf2047fdd0e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed6a0806e92cec01adef962ac308bf2047fdd0e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a543eb5e9af8c0a0cc50f82f4d88506204a70886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a543eb5e9af8c0a0cc50f82f4d88506204a70886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a543eb5e9af8c0a0cc50f82f4d88506204a70886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a543eb5e9af8c0a0cc50f82f4d88506204a70886/comments", "author": null, "committer": null, "parents": [{"sha": "292e35a31bcfd1648b087a0de16c04fab0cb0d76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/292e35a31bcfd1648b087a0de16c04fab0cb0d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/292e35a31bcfd1648b087a0de16c04fab0cb0d76"}], "stats": {"total": 271, "additions": 169, "deletions": 102}, "files": [{"sha": "54d87d33323a60d9c1ab4379354edc6f6b9ac9cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a543eb5e9af8c0a0cc50f82f4d88506204a70886/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a543eb5e9af8c0a0cc50f82f4d88506204a70886/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a543eb5e9af8c0a0cc50f82f4d88506204a70886", "patch": "@@ -1,3 +1,13 @@\n+2003-01-21  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* genautomata.c: Space savings in generated code:\n+\t(output_dfa_insn_code_func): Split out the table-enlargement\n+\tpath to an out-of-line static function, dfa_insn_code_enlarge.\n+\t(output_internal_insn_latency_func): Use a lookup table for the\n+\tdefault latencies.\n+\t(output_print_reservation_func): Use a lookup table for the\n+\tstrings.\n+\n 2003-01-21  Christian Ehrhardt  <ehrhardt@mathematik.uni-ulm.de>\n \n \tPR opt/7507"}, {"sha": "8442461ca774cd097bf010f7a86605491a359674", "filename": "gcc/genautomata.c", "status": "modified", "additions": 159, "deletions": 102, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a543eb5e9af8c0a0cc50f82f4d88506204a70886/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a543eb5e9af8c0a0cc50f82f4d88506204a70886/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=a543eb5e9af8c0a0cc50f82f4d88506204a70886", "patch": "@@ -8613,40 +8613,57 @@ output_internal_insn_code_evaluation (insn_name, insn_code_name, code)\n }\n \n \n-/* The function outputs function `dfa_insn_code'.  */\n+/* This function outputs `dfa_insn_code' and its helper function\n+   `dfa_insn_code_enlarge'.  */\n static void\n output_dfa_insn_code_func ()\n {\n-  fprintf (output_file, \"#ifdef __GNUC__\\n__inline__\\n#endif\\n\");\n-  fprintf (output_file, \"static int %s PARAMS ((rtx));\\n\",\n-\t   DFA_INSN_CODE_FUNC_NAME);\n-  fprintf (output_file, \"static int\\n%s (%s)\\n\\trtx %s;\\n\",\n-\t   DFA_INSN_CODE_FUNC_NAME, INSN_PARAMETER_NAME, INSN_PARAMETER_NAME);\n-  fprintf (output_file, \"{\\n  int %s;\\n  int %s;\\n\\n\",\n-\t   INTERNAL_INSN_CODE_NAME, TEMPORARY_VARIABLE_NAME);\n-  fprintf (output_file, \"  if (INSN_UID (%s) >= %s)\\n    {\\n\",\n-\t   INSN_PARAMETER_NAME, DFA_INSN_CODES_LENGTH_VARIABLE_NAME);\n-  fprintf (output_file, \"      %s = %s;\\n      %s = 2 * INSN_UID (%s);\\n\",\n-\t   TEMPORARY_VARIABLE_NAME, DFA_INSN_CODES_LENGTH_VARIABLE_NAME,\n-\t   DFA_INSN_CODES_LENGTH_VARIABLE_NAME, INSN_PARAMETER_NAME);\n-  fprintf (output_file, \"      %s = xrealloc (%s, %s * sizeof (int));\\n\",\n-\t   DFA_INSN_CODES_VARIABLE_NAME, DFA_INSN_CODES_VARIABLE_NAME,\n-\t   DFA_INSN_CODES_LENGTH_VARIABLE_NAME);\n-  fprintf (output_file,\n-\t   \"      for (; %s < %s; %s++)\\n        %s [%s] = -1;\\n    }\\n\",\n-\t   TEMPORARY_VARIABLE_NAME, DFA_INSN_CODES_LENGTH_VARIABLE_NAME,\n-\t   TEMPORARY_VARIABLE_NAME, DFA_INSN_CODES_VARIABLE_NAME,\n-\t   TEMPORARY_VARIABLE_NAME);\n-  fprintf (output_file, \"  if ((%s = %s [INSN_UID (%s)]) < 0)\\n    {\\n\",\n-\t   INTERNAL_INSN_CODE_NAME, DFA_INSN_CODES_VARIABLE_NAME,\n-\t   INSN_PARAMETER_NAME);\n-  fprintf (output_file, \"      %s = %s (%s);\\n\", INTERNAL_INSN_CODE_NAME,\n-\t   INTERNAL_DFA_INSN_CODE_FUNC_NAME, INSN_PARAMETER_NAME);\n-  fprintf (output_file, \"      %s [INSN_UID (%s)] = %s;\\n\",\n-\t   DFA_INSN_CODES_VARIABLE_NAME, INSN_PARAMETER_NAME,\n-\t   INTERNAL_INSN_CODE_NAME);\n-  fprintf (output_file, \"    }\\n  return %s;\\n}\\n\\n\",\n+  /* Emacs c-mode gets really confused if there's a { or } in column 0\n+     inside a string, so don't do that.  */\n+  fprintf (output_file, \"\\\n+static void dfa_insn_code_enlarge PARAMS ((int));\\n\\\n+static void\\n\\\n+dfa_insn_code_enlarge (uid)\\n\\\n+     int uid;\\n{\\n\\\n+  int i = %s;\\n\\\n+  %s = 2 * uid;\\n\\\n+  %s = xrealloc (%s,\\n\\\n+                 %s * sizeof(int));\\n\\\n+  for (; i < %s; i++)\\n\\\n+    %s[i] = -1;\\n}\\n\\n\",\n+ \t   DFA_INSN_CODES_LENGTH_VARIABLE_NAME,\n+ \t   DFA_INSN_CODES_LENGTH_VARIABLE_NAME,\n+ \t   DFA_INSN_CODES_VARIABLE_NAME, DFA_INSN_CODES_VARIABLE_NAME,\n+ \t   DFA_INSN_CODES_LENGTH_VARIABLE_NAME,\n+ \t   DFA_INSN_CODES_LENGTH_VARIABLE_NAME,\n+ \t   DFA_INSN_CODES_VARIABLE_NAME);\n+  fprintf (output_file, \"\\\n+static inline int %s PARAMS ((rtx));\\n\\\n+static inline int\\n%s (%s)\\n\\\n+    rtx %s;\\n{\\n\\\n+ int uid = INSN_UID (%s);\\n\\\n+ int %s;\\n\\n\",\n+\t   DFA_INSN_CODE_FUNC_NAME, DFA_INSN_CODE_FUNC_NAME,\n+\t   INSN_PARAMETER_NAME, INSN_PARAMETER_NAME,\n+\t   INSN_PARAMETER_NAME,\n \t   INTERNAL_INSN_CODE_NAME);\n+\n+  fprintf (output_file,\n+\t   \"  if (uid >= %s)\\n    dfa_insn_code_enlarge (uid);\\n\\n\",\n+\t   DFA_INSN_CODES_LENGTH_VARIABLE_NAME);\n+  fprintf (output_file, \"  %s = %s[uid];\\n\",\n+\t   INTERNAL_INSN_CODE_NAME, DFA_INSN_CODES_VARIABLE_NAME);\n+  fprintf (output_file, \"\\\n+  if (%s < 0)\\n\\\n+    {\\n\\\n+      %s = %s (%s);\\n\\\n+      %s[uid] = %s;\\n\\\n+    }\\n\",\n+\t   INTERNAL_INSN_CODE_NAME,\n+\t   INTERNAL_INSN_CODE_NAME,\n+\t   INTERNAL_DFA_INSN_CODE_FUNC_NAME, INSN_PARAMETER_NAME,\n+\t   DFA_INSN_CODES_VARIABLE_NAME, INTERNAL_INSN_CODE_NAME);\n+  fprintf (output_file, \"  return %s;\\n}\\n\\n\", INTERNAL_INSN_CODE_NAME);\n }\n \n /* The function outputs PHR interface function `state_transition'.  */\n@@ -8881,8 +8898,22 @@ output_internal_insn_latency_func ()\n {\n   decl_t decl;\n   struct bypass_decl *bypass;\n-  int i;\n+  int i, j, col;\n+  const char *tabletype = \"unsigned char\";\n \n+  /* Find the smallest integer type that can hold all the default\n+     latency values.  */\n+  for (i = 0; i < description->decls_num; i++)\n+    if (description->decls[i]->mode == dm_insn_reserv)\n+      {\n+\tdecl = description->decls[i];\n+\tif (DECL_INSN_RESERV (decl)->default_latency > UCHAR_MAX\n+\t    && tabletype[0] != 'i')  /* don't shrink it */\n+\t  tabletype = \"unsigned short\";\n+\tif (DECL_INSN_RESERV (decl)->default_latency > USHRT_MAX)\n+\t  tabletype = \"int\";\n+      }\n+    \n   fprintf (output_file, \"static int %s PARAMS ((int, int, rtx, rtx));\\n\",\n \t   INTERNAL_INSN_LATENCY_FUNC_NAME);\n   fprintf (output_file, \"static int\\n%s (%s, %s, %s, %s)\",\n@@ -8892,50 +8923,70 @@ output_internal_insn_latency_func ()\n   fprintf (output_file, \"\\n\\tint %s;\\n\\tint %s;\\n\",\n \t   INTERNAL_INSN_CODE_NAME, INTERNAL_INSN2_CODE_NAME);\n   fprintf (output_file,\n-\t   \"\\trtx %s ATTRIBUTE_UNUSED;\\n\\trtx %s ATTRIBUTE_UNUSED;\\n\",\n+\t   \"\\trtx %s ATTRIBUTE_UNUSED;\\n\\trtx %s ATTRIBUTE_UNUSED;\\n{\\n\",\n \t   INSN_PARAMETER_NAME, INSN2_PARAMETER_NAME);\n-  fprintf (output_file, \"{\\n  switch (%s)\\n    {\\n\", INTERNAL_INSN_CODE_NAME);\n+\n+  fprintf (output_file, \"  static const %s default_latencies[] =\\n    {\",\n+\t   tabletype);\n+\n+  for (i = 0, j = 0, col = 7; i < description->decls_num; i++)\n+    if (description->decls[i]->mode == dm_insn_reserv\n+\t&& description->decls[i] != advance_cycle_insn_decl)\n+      {\n+\tif ((col = (col+1) % 8) == 0)\n+\t  fputs (\"\\n     \", output_file);\n+\tdecl = description->decls[i];\n+\tif (j++ != DECL_INSN_RESERV (decl)->insn_num)\n+\t  abort ();\n+\tfprintf (output_file, \"% 4d,\",\n+\t\t DECL_INSN_RESERV (decl)->default_latency);\n+      }\n+  if (j != DECL_INSN_RESERV (advance_cycle_insn_decl)->insn_num)\n+    abort ();\n+  fputs (\"\\n    };\\n\", output_file);\n+\n+  fprintf (output_file, \"  if (%s >= %s || %s >= %s)\\n    return 0;\\n\",\n+\t   INTERNAL_INSN_CODE_NAME, ADVANCE_CYCLE_VALUE_NAME,\n+\t   INTERNAL_INSN2_CODE_NAME, ADVANCE_CYCLE_VALUE_NAME);\n+\n+  fprintf (output_file, \"  switch (%s)\\n    {\\n\", INTERNAL_INSN_CODE_NAME);\n   for (i = 0; i < description->decls_num; i++)\n-    {\n-      decl = description->decls [i];\n-      if (decl->mode == dm_insn_reserv)\n-\t{\n-\t  fprintf (output_file, \"    case %d:\\n\",\n-\t\t   DECL_INSN_RESERV (decl)->insn_num);\n-\t  if (DECL_INSN_RESERV (decl)->bypass_list == NULL)\n-\t    fprintf (output_file, \"      return (%s != %s ? %d : 0);\\n\",\n-\t\t     INTERNAL_INSN2_CODE_NAME, ADVANCE_CYCLE_VALUE_NAME,\n-\t\t     DECL_INSN_RESERV (decl)->default_latency);\n-\t  else\n-\t    {\n-\t      fprintf (output_file, \"      switch (%s)\\n        {\\n\",\n-\t\t       INTERNAL_INSN2_CODE_NAME);\n-\t      for (bypass = DECL_INSN_RESERV (decl)->bypass_list;\n-\t\t   bypass != NULL;\n-\t\t   bypass = bypass->next)\n-\t\t{\n-\t\t  fprintf (output_file, \"        case %d:\\n\",\n-\t\t\t   bypass->in_insn_reserv->insn_num);\n-\t\t  if (bypass->bypass_guard_name == NULL)\n-\t\t    fprintf (output_file, \"          return %d;\\n\",\n-\t\t\t     bypass->latency);\n-\t\t  else\n-\t\t    fprintf (output_file,\n-\t\t\t     \"          return (%s (%s, %s) ? %d : %d);\\n\",\n-\t\t\t     bypass->bypass_guard_name, INSN_PARAMETER_NAME,\n-\t\t\t     INSN2_PARAMETER_NAME, bypass->latency,\n-\t\t\t     DECL_INSN_RESERV (decl)->default_latency);\n-\t\t}\n-\t      fprintf (output_file, \"        default:\\n\");\n-\t      fprintf (output_file,\n-\t\t       \"          return (%s != %s ? %d : 0);\\n        }\\n\",\n-\t\t       INTERNAL_INSN2_CODE_NAME, ADVANCE_CYCLE_VALUE_NAME,\n-\t\t       DECL_INSN_RESERV (decl)->default_latency);\n-\t      \n-\t    }\n-\t}\n-    }\n-  fprintf (output_file, \"    default:\\n      return 0;\\n    }\\n}\\n\\n\");\n+    if (description->decls[i]->mode == dm_insn_reserv\n+\t&& DECL_INSN_RESERV (description->decls[i])->bypass_list)\n+      {\n+\tdecl = description->decls [i];\n+\tfprintf (output_file,\n+\t\t \"    case %d:\\n      switch (%s)\\n        {\\n\",\n+\t\t DECL_INSN_RESERV (decl)->insn_num,\n+\t\t INTERNAL_INSN2_CODE_NAME);\n+\tfor (bypass = DECL_INSN_RESERV (decl)->bypass_list;\n+\t     bypass != NULL;\n+\t     bypass = bypass->next)\n+\t  {\n+\t    if (bypass->in_insn_reserv->insn_num\n+\t\t== DECL_INSN_RESERV (advance_cycle_insn_decl)->insn_num)\n+\t      abort ();\n+\t    fprintf (output_file, \"        case %d:\\n\",\n+\t\t     bypass->in_insn_reserv->insn_num);\n+\t    if (bypass->bypass_guard_name == NULL)\n+\t      fprintf (output_file, \"          return %d;\\n\",\n+\t\t       bypass->latency);\n+\t    else\n+\t      {\n+\t\tfprintf (output_file,\n+\t\t\t \"          if (%s (%s, %s)\\n\",\n+\t\t\t bypass->bypass_guard_name, INSN_PARAMETER_NAME,\n+\t\t\t INSN2_PARAMETER_NAME);\n+\t\tfprintf (output_file,\n+\t\t\t \"            return %d;\\n          break;\\n\",\n+\t\t\t bypass->latency);\n+\t      }\n+\t  }\n+\tfputs (\"        }\\n\", output_file);\n+      }\n+\n+  fprintf (output_file, \"    }\\n  return default_latencies[%s];\\n}\\n\\n\",\n+\t   INTERNAL_INSN_CODE_NAME);\n }\n \n /* The function outputs PHR interface function `insn_latency'.  */\n@@ -8962,44 +9013,50 @@ static void\n output_print_reservation_func ()\n {\n   decl_t decl;\n-  int i;\n+  int i, j;\n \n-  fprintf (output_file, \"void\\n%s (%s, %s)\\n\\tFILE *%s;\\n\\trtx %s;\\n\",\n+  fprintf (output_file, \"void\\n%s (%s, %s)\\n\\tFILE *%s;\\n\\trtx %s;\\n{\\n\",\n            PRINT_RESERVATION_FUNC_NAME, FILE_PARAMETER_NAME,\n            INSN_PARAMETER_NAME, FILE_PARAMETER_NAME,\n            INSN_PARAMETER_NAME);\n-  fprintf (output_file, \"{\\n  int %s;\\n\", INTERNAL_INSN_CODE_NAME);\n-  fprintf (output_file, \"\\n  if (%s != 0)\\n    {\\n\", INSN_PARAMETER_NAME);\n-  fprintf (output_file, \"      %s = %s (%s);\\n\",\n-\t   INTERNAL_INSN_CODE_NAME, DFA_INSN_CODE_FUNC_NAME,\n-\t   INSN_PARAMETER_NAME);\n-  fprintf (output_file, \"      if (%s > %s)\\n\",\n-\t   INTERNAL_INSN_CODE_NAME, ADVANCE_CYCLE_VALUE_NAME);\n-  fprintf (output_file, \"        {\\n          fprintf (%s, \\\"%s\\\");\\n\",\n-           FILE_PARAMETER_NAME, NOTHING_NAME);\n-  fprintf (output_file, \"          return;\\n        }\\n\");\n-  fprintf (output_file, \"    }\\n  else\\n\");\n-  fprintf (output_file,\n-           \"    {\\n      fprintf (%s, \\\"%s\\\");\\n      return;\\n    }\\n\",\n-           FILE_PARAMETER_NAME, NOTHING_NAME);\n-  fprintf (output_file, \"  switch (%s)\\n    {\\n\", INTERNAL_INSN_CODE_NAME);\n-  for (i = 0; i < description->decls_num; i++)\n+\n+  fputs (\"  static const char *const reservation_names[] =\\n    {\",\n+\t output_file);\n+\n+  for (i = 0, j = 0; i < description->decls_num; i++)\n     {\n       decl = description->decls [i];\n       if (decl->mode == dm_insn_reserv && decl != advance_cycle_insn_decl)\n \t{\n-          fprintf (output_file,\n-                   \"    case %d:\\n\", DECL_INSN_RESERV (decl)->insn_num);\n-          fprintf (output_file,\n-                   \"      fprintf (%s, \\\"%s\\\");\\n      break;\\n\",\n-                   FILE_PARAMETER_NAME,\n-                   regexp_representation (DECL_INSN_RESERV (decl)->regexp));\n-          finish_regexp_representation ();\n-        }\n+\t  if (j++ != DECL_INSN_RESERV (decl)->insn_num)\n+\t    abort ();\n+\t  fprintf (output_file, \"\\n      \\\"%s\\\",\",\n+\t\t   regexp_representation (DECL_INSN_RESERV (decl)->regexp));\n+\t  finish_regexp_representation ();\n+\t}\n     }\n-  fprintf (output_file, \"    default:\\n      fprintf (%s, \\\"%s\\\");\\n    }\\n\",\n-           FILE_PARAMETER_NAME, NOTHING_NAME);\n-  fprintf (output_file, \"}\\n\\n\");\n+  if (j != DECL_INSN_RESERV (advance_cycle_insn_decl)->insn_num)\n+    abort ();\n+\t      \n+  fprintf (output_file, \"\\n      \\\"%s\\\"\\n    };\\n  int %s;\\n\\n\",\n+\t   NOTHING_NAME, INTERNAL_INSN_CODE_NAME);\n+\n+  fprintf (output_file, \"  if (%s == 0)\\n    %s = %s;\\n\",\n+\t   INSN_PARAMETER_NAME,\n+\t   INTERNAL_INSN_CODE_NAME, ADVANCE_CYCLE_VALUE_NAME);\n+  fprintf (output_file, \"  else\\n\\\n+    {\\n\\\n+      %s = %s (%s);\\n\\\n+      if (%s > %s)\\n\\\n+        %s = %s;\\n\\\n+    }\\n\",\n+\t   INTERNAL_INSN_CODE_NAME, DFA_INSN_CODE_FUNC_NAME,\n+\t       INSN_PARAMETER_NAME,\n+\t   INTERNAL_INSN_CODE_NAME, ADVANCE_CYCLE_VALUE_NAME,\n+\t   INTERNAL_INSN_CODE_NAME, ADVANCE_CYCLE_VALUE_NAME);\n+\n+  fprintf (output_file, \"  fputs (reservation_names[%s], %s);\\n}\\n\\n\",\n+\t   INTERNAL_INSN_CODE_NAME, FILE_PARAMETER_NAME);\n }\n \n /* The following function is used to sort unit declaration by their"}]}