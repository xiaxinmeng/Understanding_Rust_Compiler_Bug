{"sha": "e8d4f3fcb274af7dc592a5f95ca76da533505920", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThkNGYzZmNiMjc0YWY3ZGM1OTJhNWY5NWNhNzZkYTUzMzUwNTkyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-06-11T06:42:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-06-11T06:42:49Z"}, "message": "interface.c (fold_unary): Rename to...\n\n\t* interface.c (fold_unary): Rename to...\n\t(fold_unary_intrinsic): ... this.\n\t(gfc_extend_expr): Adjust caller.\n\t(gfc_match_generic_spec): Likewise.  Initialize *op to INTRINSIC_NONE\n\tto avoid warnings.\n\t* expr.c (gfc_simplify_expr): Initialize start and end before calling\n\tgfc_extract_int.\n\nFrom-SVN: r148366", "tree": {"sha": "a68cb3905d59801559b99384933e8a0c97de5c67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a68cb3905d59801559b99384933e8a0c97de5c67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8d4f3fcb274af7dc592a5f95ca76da533505920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d4f3fcb274af7dc592a5f95ca76da533505920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d4f3fcb274af7dc592a5f95ca76da533505920", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d4f3fcb274af7dc592a5f95ca76da533505920/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e521964299930c05e5306addf709980a52d4a62c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e521964299930c05e5306addf709980a52d4a62c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e521964299930c05e5306addf709980a52d4a62c"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "68ad797596eade0829b664233867b7514a04ad28", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8d4f3fcb274af7dc592a5f95ca76da533505920/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8d4f3fcb274af7dc592a5f95ca76da533505920/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e8d4f3fcb274af7dc592a5f95ca76da533505920", "patch": "@@ -1,3 +1,13 @@\n+2009-06-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* interface.c (fold_unary): Rename to...\n+\t(fold_unary_intrinsic): ... this.\n+\t(gfc_extend_expr): Adjust caller.\n+\t(gfc_match_generic_spec): Likewise.  Initialize *op to INTRINSIC_NONE\n+\tto avoid warnings.\n+\t* expr.c (gfc_simplify_expr): Initialize start and end before calling\n+\tgfc_extract_int.\n+\n 2009-06-10  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \t* trans-decl.c (create_main_function):  Don't build main decl twice."}, {"sha": "93427195fd3b9160b0b4bd54060e28ae50427ff4", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8d4f3fcb274af7dc592a5f95ca76da533505920/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8d4f3fcb274af7dc592a5f95ca76da533505920/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=e8d4f3fcb274af7dc592a5f95ca76da533505920", "patch": "@@ -1654,18 +1654,16 @@ gfc_simplify_expr (gfc_expr *p, int type)\n \t  gfc_char_t *s;\n \t  int start, end;\n \n+\t  start = 0;\n \t  if (p->ref && p->ref->u.ss.start)\n \t    {\n \t      gfc_extract_int (p->ref->u.ss.start, &start);\n \t      start--;  /* Convert from one-based to zero-based.  */\n \t    }\n-\t  else\n-\t    start = 0;\n \n+\t  end = p->value.character.length;\n \t  if (p->ref && p->ref->u.ss.end)\n \t    gfc_extract_int (p->ref->u.ss.end, &end);\n-\t  else\n-\t    end = p->value.character.length;\n \n \t  s = gfc_get_wide_string (end - start + 2);\n \t  memcpy (s, p->value.character.string + start,"}, {"sha": "6cd34fa11def4e855bc318547a82d9bc4e8761ca", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8d4f3fcb274af7dc592a5f95ca76da533505920/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8d4f3fcb274af7dc592a5f95ca76da533505920/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=e8d4f3fcb274af7dc592a5f95ca76da533505920", "patch": "@@ -95,7 +95,7 @@ gfc_free_interface (gfc_interface *intr)\n    minus respectively, leaving the rest unchanged.  */\n \n static gfc_intrinsic_op\n-fold_unary (gfc_intrinsic_op op)\n+fold_unary_intrinsic (gfc_intrinsic_op op)\n {\n   switch (op)\n     {\n@@ -136,10 +136,11 @@ gfc_match_generic_spec (interface_type *type,\n   if (gfc_match (\" operator ( %o )\", &i) == MATCH_YES)\n     {\t\t\t\t/* Operator i/f */\n       *type = INTERFACE_INTRINSIC_OP;\n-      *op = fold_unary (i);\n+      *op = fold_unary_intrinsic (i);\n       return MATCH_YES;\n     }\n \n+  *op = INTRINSIC_NONE;\n   if (gfc_match (\" operator ( \") == MATCH_YES)\n     {\n       m = gfc_match_defined_op_name (buffer, 1);\n@@ -2482,7 +2483,7 @@ gfc_extend_expr (gfc_expr *e)\n       actual->next->expr = e->value.op.op2;\n     }\n \n-  i = fold_unary (e->value.op.op);\n+  i = fold_unary_intrinsic (e->value.op.op);\n \n   if (i == INTRINSIC_USER)\n     {"}]}