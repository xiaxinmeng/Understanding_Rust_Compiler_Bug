{"sha": "c8df72c446639286815357b723f257264e6b6162", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkZjcyYzQ0NjYzOTI4NjgxNTM1N2I3MjNmMjU3MjY0ZTZiNjE2Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-02-04T08:52:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-04T08:52:18Z"}, "message": "* g++.dg/torture/alias-1.C: New test.\n\nFrom-SVN: r268510", "tree": {"sha": "663aeb29e6f09be16da617cde0ecf1df6beed0da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/663aeb29e6f09be16da617cde0ecf1df6beed0da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8df72c446639286815357b723f257264e6b6162", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8df72c446639286815357b723f257264e6b6162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8df72c446639286815357b723f257264e6b6162", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8df72c446639286815357b723f257264e6b6162/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a7df256445299c55162638c37c33bb8e6a19103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a7df256445299c55162638c37c33bb8e6a19103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a7df256445299c55162638c37c33bb8e6a19103"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "e2b024302c767cd9fb565632ca0b64acdc697cf0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8df72c446639286815357b723f257264e6b6162/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8df72c446639286815357b723f257264e6b6162/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8df72c446639286815357b723f257264e6b6162", "patch": "@@ -1,3 +1,7 @@\n+2019-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/torture/alias-1.C: New test.\n+\n 2019-02-03  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/69661"}, {"sha": "2abe543851092c0a97bfa308195f8ee23e4c7ce2", "filename": "gcc/testsuite/g++.dg/torture/alias-1.C", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8df72c446639286815357b723f257264e6b6162/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Falias-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8df72c446639286815357b723f257264e6b6162/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Falias-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Falias-1.C?ref=c8df72c446639286815357b723f257264e6b6162", "patch": "@@ -0,0 +1,57 @@\n+// Verify we don't try to allocate the same stack slot for\n+// buf1 and buf2 in qux.  While there is a CLOBBER stmt for buf1\n+// from inlined destructor, the buf1 variable doesn't go out of scope\n+// until after the baz call.\n+// { dg-do run }\n+\n+#include <new>\n+#include <cstring>\n+#include <cstdlib>\n+\n+char *p;\n+struct S { char buf[128]; S () { memset (buf, ' ', 128); }; ~S () {}; };\n+\n+__attribute__((noipa)) void\n+foo (char *x)\n+{\n+  p = x;\n+}\n+\n+__attribute__((noipa)) int\n+bar (S *x)\n+{\n+  return x->buf[12];\n+}\n+\n+__attribute__((noipa)) void\n+baz (char *x)\n+{\n+  S *a = new (p) (S);\n+  S *b = new (x) (S);\n+  memset (a->buf, '0', 128);\n+  memset (b->buf, '1', 128);\n+  if (bar (a) != '0' || bar (b) != '1')\n+    abort ();\n+  b->~S ();\n+  a->~S ();\n+}\n+\n+__attribute__((noipa)) void\n+qux ()\n+{\n+  char buf1[128];\n+  foo (buf1);\n+  S *p = new (buf1) (S);\n+  bar (p);\n+  p->~S ();\n+  {\n+    char buf2[128];\n+    baz (buf2);\n+  }\n+}\n+\n+int\n+main ()\n+{\n+  qux ();\n+}"}]}