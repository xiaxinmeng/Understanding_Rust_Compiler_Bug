{"sha": "210ae4f7b0fea9671482b8f01354fd5b9274f878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwYWU0ZjdiMGZlYTk2NzE0ODJiOGYwMTM1NGZkNWI5Mjc0Zjg3OA==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-03T16:26:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-03T16:26:15Z"}, "message": "Merge #543\n\n543: mark live symbol in if expr family except if let expr r=philberty a=thomasyonug\n\nmark live symbol in if expr family except if let expr\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>", "tree": {"sha": "7724e51fcaee8a851c83a1337cb1c30b633bccbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7724e51fcaee8a851c83a1337cb1c30b633bccbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/210ae4f7b0fea9671482b8f01354fd5b9274f878", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4I+nCRBK7hj4Ov3rIwAAMlwIACVoFwzWoegnbDPHZtdvU7wX\nEGbW2+FmjD1xdc2uY9FW3Xve/LdxAD2J+Rcj4JMnQDvoMhQiYuOiVSvCmngQGqj0\nv/z8x6P1LA/FJx2v/d3HCVMJhsqDDqb6IMAOjUQuU2KeOTFl5SEbMkhYAaVZOwnH\nxsDb/j/3wBfz/8wBD+F1EK46RH5CpltfR9EuuYeDy1scMDaDetACvH0RV7pcSkQd\ny8m3XCEDQ0zs5jARZHjQcJ/RL7fuohoq6l7Qw+LPhC9cWsOLDC7SAW2jTodWn0cB\n7aOkPqm3SD28DQPgkGw9lYXRtdgOMTnhpbx9CKAAyhipvQf74DoSFzjh0GnPMWM=\n=zSlA\n-----END PGP SIGNATURE-----\n", "payload": "tree 7724e51fcaee8a851c83a1337cb1c30b633bccbd\nparent 2b1d687d6a8eb959664e5299af229089341d14be\nparent e1aedf6ec7d30d957c96e8ac1e2eb1c7d1384242\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625329575 +0000\ncommitter GitHub <noreply@github.com> 1625329575 +0000\n\nMerge #543\n\n543: mark live symbol in if expr family except if let expr r=philberty a=thomasyonug\n\nmark live symbol in if expr family except if let expr\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210ae4f7b0fea9671482b8f01354fd5b9274f878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/210ae4f7b0fea9671482b8f01354fd5b9274f878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/210ae4f7b0fea9671482b8f01354fd5b9274f878/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b1d687d6a8eb959664e5299af229089341d14be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1d687d6a8eb959664e5299af229089341d14be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b1d687d6a8eb959664e5299af229089341d14be"}, {"sha": "e1aedf6ec7d30d957c96e8ac1e2eb1c7d1384242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1aedf6ec7d30d957c96e8ac1e2eb1c7d1384242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1aedf6ec7d30d957c96e8ac1e2eb1c7d1384242"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "5bc23e3bf5a59cc1779461975d1d3409ee7cdfb6", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210ae4f7b0fea9671482b8f01354fd5b9274f878/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210ae4f7b0fea9671482b8f01354fd5b9274f878/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=210ae4f7b0fea9671482b8f01354fd5b9274f878", "patch": "@@ -182,6 +182,26 @@ class MarkLive : public MarkLiveBase\n     expr.visit_rhs (*this);\n   }\n \n+  void visit (HIR::IfExpr &expr) override\n+  {\n+    expr.get_if_condition ()->accept_vis (*this);\n+    expr.get_if_block ()->accept_vis (*this);\n+  }\n+\n+  void visit (HIR::IfExprConseqElse &expr) override\n+  {\n+    expr.get_if_condition ()->accept_vis (*this);\n+    expr.get_if_block ()->accept_vis (*this);\n+    expr.get_else_block ()->accept_vis (*this);\n+  }\n+\n+  void visit (HIR::IfExprConseqIf &expr) override\n+  {\n+    expr.get_if_condition ()->accept_vis (*this);\n+    expr.get_if_block ()->accept_vis (*this);\n+    expr.get_conseq_if_expr ()->accept_vis (*this);\n+  }\n+\n   void visit (HIR::TraitItemFunc &item) override\n   {\n     item.get_block_expr ()->accept_vis (*this);"}, {"sha": "bcd520f66a93ac2c0c697792cbc3437137e0ffc2", "filename": "gcc/testsuite/rust/compile/torture/if.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210ae4f7b0fea9671482b8f01354fd5b9274f878/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210ae4f7b0fea9671482b8f01354fd5b9274f878/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif.rs?ref=210ae4f7b0fea9671482b8f01354fd5b9274f878", "patch": "@@ -0,0 +1,19 @@\n+fn foo() -> bool {\n+    true\n+}\n+\n+fn bar() {}\n+\n+struct Foo1 {\n+    one: i32\n+}\n+\n+\n+fn main() {\n+    if foo() {\n+        bar();\n+        let a = Foo1{one: 1};\n+        a.one\n+    }\n+\n+}\n\\ No newline at end of file"}, {"sha": "a89ad5eb02f0e15124466e5cc3ae6663c3219892", "filename": "gcc/testsuite/rust/compile/torture/if_elif.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210ae4f7b0fea9671482b8f01354fd5b9274f878/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif_elif.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210ae4f7b0fea9671482b8f01354fd5b9274f878/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif_elif.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif_elif.rs?ref=210ae4f7b0fea9671482b8f01354fd5b9274f878", "patch": "@@ -0,0 +1,20 @@\n+fn foo() -> bool {\n+    true\n+}\n+\n+fn bar() -> bool {\n+    false\n+}\n+\n+struct Foo1 {\n+    one: i32\n+}\n+\n+\n+fn main() {\n+    if foo() {\n+    } else if bar() {\n+        let a = Foo1{one: 1};\n+        a.one;\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "09aecaed4d6765dee2636208279886f61ca40ce0", "filename": "gcc/testsuite/rust/compile/torture/if_else.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/210ae4f7b0fea9671482b8f01354fd5b9274f878/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif_else.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/210ae4f7b0fea9671482b8f01354fd5b9274f878/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif_else.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fif_else.rs?ref=210ae4f7b0fea9671482b8f01354fd5b9274f878", "patch": "@@ -0,0 +1,19 @@\n+fn foo() -> bool {\n+    true\n+}\n+\n+fn bar() {}\n+\n+struct Foo1 {\n+    one: i32\n+}\n+\n+\n+fn main() {\n+    if foo() {\n+        bar();\n+    } else {\n+        let a = Foo1{one: 1};\n+        a.one;\n+    }\n+}\n\\ No newline at end of file"}]}