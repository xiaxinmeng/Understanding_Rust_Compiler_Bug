{"sha": "646e6f415ca6b02142132ebb82c8b11f08d2464f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ2ZTZmNDE1Y2E2YjAyMTQyMTMyZWJiODJjOGIxMWYwOGQyNDY0Zg==", "commit": {"author": {"name": "Jie Zhang", "email": "jie@codesourcery.com", "date": "2010-10-23T00:38:13Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2010-10-23T00:38:13Z"}, "message": "re PR rtl-optimization/37360 (ICE in haifa-sched.c when compiling __popcountsi2 from libgcc)\n\n\tPR rtl-optimization/37360\n\t* config/mips/mips.c (cached_can_issue_more): New local variable.\n\t(mips_sched_reorder_1): New.\n\t(mips_sched_reorder): Use mips_sched_reorder_1.\n\t(mips_sched_reorder2): New.\n\t(mips_variable_issue): Set cached_can_issue_more.\n\t(TARGET_SCHED_REORDER2): Define to mips_sched_reorder2\n\tinstead of mips_sched_reorder.\n\n\tRevert\n\t2008-09-09  Andrey Belevantsev  <abel@ispras.ru>\n\tPR rtl-optimization/37360\n\t* haifa-sched.c (max_issue): Do not assert that we never issue more\n\tinsns than issue_rate.  Add comment.\n\n\ttestsuite/\n\tPR rtl-optimization/37360\n\t* gcc.dg/pr37360.c: New test.\n\nFrom-SVN: r165880", "tree": {"sha": "f19a82621c5689bbcd86c5c3323f03caa5df1ea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f19a82621c5689bbcd86c5c3323f03caa5df1ea5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/646e6f415ca6b02142132ebb82c8b11f08d2464f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646e6f415ca6b02142132ebb82c8b11f08d2464f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/646e6f415ca6b02142132ebb82c8b11f08d2464f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646e6f415ca6b02142132ebb82c8b11f08d2464f/comments", "author": null, "committer": null, "parents": [{"sha": "61a796b1698be252fa2834f1da96bbc55da05b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61a796b1698be252fa2834f1da96bbc55da05b22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61a796b1698be252fa2834f1da96bbc55da05b22"}], "stats": {"total": 85, "additions": 72, "deletions": 13}, "files": [{"sha": "d42ef04abea0506069b2e8258efbda252a8866b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=646e6f415ca6b02142132ebb82c8b11f08d2464f", "patch": "@@ -1,3 +1,20 @@\n+2010-10-23  Jie Zhang  <jie@codesourcery.com>\n+\n+\tPR rtl-optimization/37360\n+\t* config/mips/mips.c (cached_can_issue_more): New local variable.\n+\t(mips_sched_reorder_1): New.\n+\t(mips_sched_reorder): Use mips_sched_reorder_1.\n+\t(mips_sched_reorder2): New.\n+\t(mips_variable_issue): Set cached_can_issue_more.\n+\t(TARGET_SCHED_REORDER2): Define to mips_sched_reorder2\n+\tinstead of mips_sched_reorder.\n+\n+\tRevert\n+\t2008-09-09  Andrey Belevantsev  <abel@ispras.ru>\n+\tPR rtl-optimization/37360\n+\t* haifa-sched.c (max_issue): Do not assert that we never issue more\n+\tinsns than issue_rate.  Add comment.\n+\n 2010-10-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimplify.c (gimplify_variable_sized_compare): Preserve the source"}, {"sha": "3dfc59ed4ccec1ee88151bc2545f686fd8f01d59", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=646e6f415ca6b02142132ebb82c8b11f08d2464f", "patch": "@@ -589,6 +589,10 @@ static const char *mips_hi_relocs[NUM_SYMBOL_TYPES];\n /* Target state for MIPS16.  */\n struct target_globals *mips16_globals;\n \n+/* Cached value of can_issue_more. This is cached in mips_variable_issue hook\n+   and returned from mips_sched_reorder2.  */\n+static int cached_can_issue_more;\n+\n /* Index R is the smallest register class that contains register R.  */\n const enum reg_class mips_regno_to_class[FIRST_PSEUDO_REGISTER] = {\n   LEA_REGS,\tLEA_REGS,\tM16_REGS,\tV1_REG,\n@@ -12436,11 +12440,11 @@ mips_sched_init (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n   mips_ls2.falu1_turn_p = true;\n }\n \n-/* Implement TARGET_SCHED_REORDER and TARGET_SCHED_REORDER2.  */\n+/* Subroutine used by TARGET_SCHED_REORDER and TARGET_SCHED_REORDER2.  */\n \n-static int\n-mips_sched_reorder (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n-\t\t    rtx *ready, int *nreadyp, int cycle ATTRIBUTE_UNUSED)\n+static void\n+mips_sched_reorder_1 (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n+\t\t      rtx *ready, int *nreadyp, int cycle ATTRIBUTE_UNUSED)\n {\n   if (!reload_completed\n       && TUNE_MACC_CHAINS\n@@ -12455,10 +12459,28 @@ mips_sched_reorder (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n \n   if (TUNE_74K)\n     mips_74k_agen_reorder (ready, *nreadyp);\n+}\n \n+/* Implement TARGET_SCHED_REORDER.  */\n+\n+static int\n+mips_sched_reorder (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n+\t\t    rtx *ready, int *nreadyp, int cycle ATTRIBUTE_UNUSED)\n+{\n+  mips_sched_reorder_1 (file, verbose, ready, nreadyp, cycle);\n   return mips_issue_rate ();\n }\n \n+/* Implement TARGET_SCHED_REORDER2.  */\n+\n+static int\n+mips_sched_reorder2 (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n+\t\t     rtx *ready, int *nreadyp, int cycle ATTRIBUTE_UNUSED)\n+{\n+  mips_sched_reorder_1 (file, verbose, ready, nreadyp, cycle);\n+  return cached_can_issue_more;\n+}\n+\n /* Update round-robin counters for ALU1/2 and FALU1/2.  */\n \n static void\n@@ -12516,6 +12538,7 @@ mips_variable_issue (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n \t      || recog_memoized (insn) < 0\n \t      || get_attr_type (insn) != TYPE_MULTI);\n \n+  cached_can_issue_more = more;\n   return more;\n }\n \f\n@@ -16417,7 +16440,7 @@ mips_shift_truncation_mask (enum machine_mode mode)\n #undef TARGET_SCHED_REORDER\n #define TARGET_SCHED_REORDER mips_sched_reorder\n #undef TARGET_SCHED_REORDER2\n-#define TARGET_SCHED_REORDER2 mips_sched_reorder\n+#define TARGET_SCHED_REORDER2 mips_sched_reorder2\n #undef TARGET_SCHED_VARIABLE_ISSUE\n #define TARGET_SCHED_VARIABLE_ISSUE mips_variable_issue\n #undef TARGET_SCHED_ADJUST_COST"}, {"sha": "889e3bf7d7127626cae0a79426334f624104f101", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=646e6f415ca6b02142132ebb82c8b11f08d2464f", "patch": "@@ -2479,14 +2479,7 @@ max_issue (struct ready_list *ready, int privileged_n, state_t state,\n   /* Init max_points.  */\n   max_points = 0;\n   more_issue = issue_rate - cycle_issued_insns;\n-\n-  /* ??? We used to assert here that we never issue more insns than issue_rate.\n-     However, some targets (e.g. MIPS/SB1) claim lower issue rate than can be\n-     achieved to get better performance.  Until these targets are fixed to use\n-     scheduler hooks to manipulate insns priority instead, the assert should\n-     be disabled.\n-\n-     gcc_assert (more_issue >= 0);  */\n+  gcc_assert (more_issue >= 0);\n \n   for (i = 0; i < n_ready; i++)\n     if (!ready_try [i])"}, {"sha": "0d9dabd0f132c0239dcba3ce1a36567028f0376b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=646e6f415ca6b02142132ebb82c8b11f08d2464f", "patch": "@@ -1,3 +1,8 @@\n+2010-10-23  Jie Zhang  <jie@codesourcery.com>\n+\n+\tPR rtl-optimization/37360\n+\t* gcc.dg/pr37360.c: New test.\n+\n 2010-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/ehreturn.c: Fix regexp in dg-final."}, {"sha": "d2ca7f38897ae8ee710f2471c828bdf52e005563", "filename": "gcc/testsuite/gcc.dg/pr37360.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37360.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/646e6f415ca6b02142132ebb82c8b11f08d2464f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37360.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37360.c?ref=646e6f415ca6b02142132ebb82c8b11f08d2464f", "patch": "@@ -0,0 +1,21 @@\n+/* PR rtl-optimization/37360 */\n+/* { dg-do compile { target fpic } } */\n+/* { dg-options \"-O3 -fPIC\" } */\n+\n+typedef unsigned int UQItype __attribute__ ((mode (QI)));\n+typedef unsigned int USItype __attribute__ ((mode (SI)));\n+\n+extern const UQItype __popcount_tab[256];\n+extern int __popcountsi2 (USItype);\n+\n+int\n+__popcountsi2 (USItype x)\n+{\n+  int i, ret = 0;\n+\n+  for (i = 0; i < (4 * 8); i += 8)\n+    ret += __popcount_tab[(x >> i) & 0xff];\n+\n+  return ret;\n+}\n+"}]}