{"sha": "e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiYThkMTFmODhmNzljZTNiZDA3YzVlOWE5OGM4NWI2ZDM5NGM0NQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-06-18T19:03:18Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-06-18T19:03:18Z"}, "message": "sh-protos.h (sh_pr_interrupt): Declare.\n\n\t* sh-protos.h (sh_pr_interrupt): Declare.\n\t* sh.c (sh_pr_interrupt): New function.\n\t(print_operand, calc_live_regs, sh_expand_prologue): Use it.\n\t(sh_hard_regno_rename_ok): Likewise.\n\t* sh.h (NORMAL_MODE): FP_MODE_NONE for interupt handlers.\n\nFrom-SVN: r54756", "tree": {"sha": "b12bb67aa8799a75653ec55ee6c6d4c19ddd3380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b12bb67aa8799a75653ec55ee6c6d4c19ddd3380"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/comments", "author": null, "committer": null, "parents": [{"sha": "ab928b32414497eba794c15e4965cf282858eb3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab928b32414497eba794c15e4965cf282858eb3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab928b32414497eba794c15e4965cf282858eb3f"}], "stats": {"total": 52, "additions": 23, "deletions": 29}, "files": [{"sha": "a6bba3ae801ffd18a75b57c4b09c5308fc4deb39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45", "patch": "@@ -1,3 +1,11 @@\n+Tue Jun 18 20:00:37 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh-protos.h (sh_pr_interrupt): Declare.\n+\t* sh.c (sh_pr_interrupt): New function.\n+\t(print_operand, calc_live_regs, sh_expand_prologue): Use it.\n+\t(sh_hard_regno_rename_ok): Likewise.\n+\t* sh.h (NORMAL_MODE): FP_MODE_NONE for interupt handlers.\n+\n 2002-06-18  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* rtl.def (DEFINE_AUTOMATON): Add description of new options"}, {"sha": "9aa114347cdb882045a424fa4078dcb411ec2a2b", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45", "patch": "@@ -123,6 +123,7 @@ extern int initial_elimination_offset PARAMS ((int, int));\n extern int fldi_ok PARAMS ((void));\n extern int sh_pr_n_sets PARAMS ((void));\n extern int sh_hard_regno_rename_ok PARAMS ((unsigned int, unsigned int));\n+extern int sh_cfun_interrupt_handler_p (void);\n \n #ifdef HARD_CONST\n extern void fpscr_set_from_mem PARAMS ((int, HARD_REG_SET));"}, {"sha": "a489dcffd289c0aa5cac6dc4f09e7eceed156af0", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 11, "deletions": 28, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45", "patch": "@@ -341,25 +341,13 @@ print_operand (stream, x, code)\n       fprintf (stream, \"%s\", LOCAL_LABEL_PREFIX);\n       break;\n     case '@':\n-      {\n-\tint interrupt_handler;\n-\n-\tif ((lookup_attribute\n-\t     (\"interrupt_handler\",\n-\t      DECL_ATTRIBUTES (current_function_decl)))\n-\t    != NULL_TREE)\n-\t  interrupt_handler = 1;\n-\telse\n-\t  interrupt_handler = 0;\n-\t\n       if (trap_exit)\n \tfprintf (stream, \"trapa #%d\", trap_exit);\n-      else if (interrupt_handler)\n+      else if (sh_cfun_interrupt_handler_p ())\n \tfprintf (stream, \"rte\");\n       else\n \tfprintf (stream, \"rts\");\n       break;\n-      }\n     case '#':\n       /* Output a nop if there's nothing in the delay slot.  */\n       if (dbr_sequence_length () == 0)\n@@ -4364,13 +4352,7 @@ calc_live_regs (count_ptr, live_regs_mask)\n   int interrupt_handler;\n   int pr_live;\n \n-  if ((lookup_attribute\n-       (\"interrupt_handler\",\n-\tDECL_ATTRIBUTES (current_function_decl)))\n-      != NULL_TREE)\n-    interrupt_handler = 1;\n-  else\n-    interrupt_handler = 0;\n+  interrupt_handler = sh_cfun_interrupt_handler_p ();\n \n   for (count = 0; 32 * count < FIRST_PSEUDO_REGISTER; count++)\n     live_regs_mask[count] = 0;\n@@ -4489,10 +4471,7 @@ sh_expand_prologue ()\n   int d_rounding = 0;\n   int save_flags = target_flags;\n \n-  current_function_interrupt\n-    = lookup_attribute (\"interrupt_handler\",\n-\t\t\tDECL_ATTRIBUTES (current_function_decl))\n-    != NULL_TREE;\n+  current_function_interrupt = sh_cfun_interrupt_handler_p ();\n \n   /* We have pretend args if we had an object sent partially in registers\n      and partially on the stack, e.g. a large structure.  */\n@@ -5747,6 +5726,13 @@ sh_handle_trap_exit_attribute (node, name, args, flags, no_add_attrs)\n   return NULL_TREE;\n }\n \n+int\n+sh_cfun_interrupt_handler_p (void)\n+{\n+  return (lookup_attribute (\"interrupt_handler\",\n+\t\t\t    DECL_ATTRIBUTES (current_function_decl))\n+\t  != NULL_TREE);\n+}\n \f\n /* Predicates used by the templates.  */\n \n@@ -6712,10 +6698,7 @@ sh_hard_regno_rename_ok (old_reg, new_reg)\n    saved by the prologue, even if they would normally be\n    call-clobbered.  */\n \n-   if ((lookup_attribute (\"interrupt_handler\",\n-\t\t\t  DECL_ATTRIBUTES (current_function_decl))\n-\t!= NULL_TREE)\n-       && !regs_ever_live[new_reg])\n+  if (sh_cfun_interrupt_handler_p () && !regs_ever_live[new_reg])\n      return 0;\n \n    return 1;"}, {"sha": "32baea408e51899309c66dc862838578ba74436e", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=e3ba8d11f88f79ce3bd07c5e9a98c85b6d394c45", "patch": "@@ -3251,7 +3251,9 @@ extern struct rtx_def *fpscr_rtx;\n #define OPTIMIZE_MODE_SWITCHING(ENTITY) TARGET_SH4\n \n #define NORMAL_MODE(ENTITY) \\\n-   (TARGET_FPU_SINGLE ? FP_MODE_SINGLE : FP_MODE_DOUBLE) \n+  (sh_cfun_interrupt_handler_p () ? FP_MODE_NONE \\\n+   : TARGET_FPU_SINGLE ? FP_MODE_SINGLE \\\n+   : FP_MODE_DOUBLE)\n \n #define EPILOGUE_USES(REGNO)       ((TARGET_SH3E || TARGET_SH4)\t\t\\\n \t\t\t\t    && (REGNO) == FPSCR_REG)"}]}