{"sha": "91347c3bbf788ede4af89f46206991c47fa8aceb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEzNDdjM2JiZjc4OGVkZTRhZjg5ZjQ2MjA2OTkxYzQ3ZmE4YWNlYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-16T14:23:13Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-16T14:23:13Z"}, "message": "Fortran: OpenMP - fix simd with (last)private (PR97061)\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/97061\n\t* trans-openmp.c (gfc_trans_omp_do): Handle simd with (last)private.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/97061\n\t* gfortran.dg/gomp/openmp-simd-6.f90: New test.", "tree": {"sha": "db8eee921a878bd0b338c07697193f38eae5aec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db8eee921a878bd0b338c07697193f38eae5aec5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91347c3bbf788ede4af89f46206991c47fa8aceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91347c3bbf788ede4af89f46206991c47fa8aceb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91347c3bbf788ede4af89f46206991c47fa8aceb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91347c3bbf788ede4af89f46206991c47fa8aceb/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b7147e48564679d53b3c6629714991c5506d614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b7147e48564679d53b3c6629714991c5506d614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b7147e48564679d53b3c6629714991c5506d614"}], "stats": {"total": 99, "additions": 85, "deletions": 14}, "files": [{"sha": "378088a9d040e417183eb9aa85a57590ed27f8c0", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91347c3bbf788ede4af89f46206991c47fa8aceb/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91347c3bbf788ede4af89f46206991c47fa8aceb/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=91347c3bbf788ede4af89f46206991c47fa8aceb", "patch": "@@ -4401,20 +4401,29 @@ gfc_trans_omp_do (gfc_code *code, gfc_exec_op op, stmtblock_t *pblock,\n       if (clauses)\n \t{\n \t  gfc_omp_namelist *n = NULL;\n-\t  if (op != EXEC_OMP_DISTRIBUTE)\n-\t    for (n = clauses->lists[(op == EXEC_OMP_SIMD && collapse == 1)\n-\t\t\t\t    ? OMP_LIST_LINEAR : OMP_LIST_LASTPRIVATE];\n+\t  if (op == EXEC_OMP_SIMD && collapse == 1)\n+\t    for (n = clauses->lists[OMP_LIST_LINEAR];\n \t\t n != NULL; n = n->next)\n \t      if (code->ext.iterator->var->symtree->n.sym == n->sym)\n-\t\tbreak;\n-\t  if (n != NULL)\n-\t    dovar_found = 1;\n-\t  else if (n == NULL && op != EXEC_OMP_SIMD)\n+\t\t{\n+\t\t  dovar_found = 3;\n+\t\t  break;\n+\t\t}\n+\t  if (n == NULL && op != EXEC_OMP_DISTRIBUTE)\n+\t    for (n = clauses->lists[OMP_LIST_LASTPRIVATE];\n+\t\t n != NULL; n = n->next)\n+\t      if (code->ext.iterator->var->symtree->n.sym == n->sym)\n+\t\t{\n+\t\t  dovar_found = 2;\n+\t\t  break;\n+\t\t}\n+\t  if (n == NULL)\n \t    for (n = clauses->lists[OMP_LIST_PRIVATE]; n != NULL; n = n->next)\n \t      if (code->ext.iterator->var->symtree->n.sym == n->sym)\n-\t\tbreak;\n-\t  if (n != NULL)\n-\t    dovar_found++;\n+\t\t{\n+\t\t  dovar_found = 1;\n+\t\t  break;\n+\t\t}\n \t}\n \n       /* Evaluate all the expressions in the iterator.  */\n@@ -4512,7 +4521,7 @@ gfc_trans_omp_do (gfc_code *code, gfc_exec_op op, stmtblock_t *pblock,\n       if (orig_decls)\n \tTREE_VEC_ELT (orig_decls, i) = dovar_decl;\n \n-      if (dovar_found == 2\n+      if (dovar_found == 3\n \t  && op == EXEC_OMP_SIMD\n \t  && collapse == 1\n \t  && !simple)\n@@ -4536,15 +4545,15 @@ gfc_trans_omp_do (gfc_code *code, gfc_exec_op op, stmtblock_t *pblock,\n \t      omp_clauses = gfc_trans_add_clause (tmp, omp_clauses);\n \t    }\n \t  if (!simple)\n-\t    dovar_found = 2;\n+\t    dovar_found = 3;\n \t}\n       else if (!dovar_found && !simple)\n \t{\n \t  tmp = build_omp_clause (input_location, OMP_CLAUSE_PRIVATE);\n \t  OMP_CLAUSE_DECL (tmp) = dovar_decl;\n \t  omp_clauses = gfc_trans_add_clause (tmp, omp_clauses);\n \t}\n-      if (dovar_found == 2)\n+      if (dovar_found > 1)\n \t{\n \t  tree c = NULL;\n \n@@ -4612,7 +4621,7 @@ gfc_trans_omp_do (gfc_code *code, gfc_exec_op op, stmtblock_t *pblock,\n \t}\n       if (!simple)\n \t{\n-\t  if (op != EXEC_OMP_SIMD)\n+\t  if (op != EXEC_OMP_SIMD || dovar_found == 1)\n \t    tmp = build_omp_clause (input_location, OMP_CLAUSE_PRIVATE);\n \t  else if (collapse == 1)\n \t    {"}, {"sha": "361e0dad343b5410dd79f4ef70a1756007278687", "filename": "gcc/testsuite/gfortran.dg/gomp/openmp-simd-6.f90", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91347c3bbf788ede4af89f46206991c47fa8aceb/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91347c3bbf788ede4af89f46206991c47fa8aceb/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fopenmp-simd-6.f90?ref=91347c3bbf788ede4af89f46206991c47fa8aceb", "patch": "@@ -0,0 +1,62 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/97061\n+\n+integer function f3 (a1, b1, u)\n+  implicit none\n+  integer :: a1, b1, d1\n+  integer u(0:1023)\n+  !$omp teams distribute parallel do simd default(none) firstprivate (a1, b1) shared(u) lastprivate(d1) \n+  do d1 = a1, b1-1\n+      u(d1) = 5\n+  end do\n+end\n+\n+subroutine foo(n, m, u)\n+  implicit none\n+  integer :: hh, ii, jj, n, m\n+  integer u(0:1023)\n+  !$omp simd private(ii)\n+  do ii = n, m\n+    u(ii) = 5\n+  end do\n+  !$omp simd linear(jj:1)\n+  do jj = 2, m+n\n+    u(jj) = 6\n+  end do\n+  !$omp simd\n+  do hh = 2, m+n\n+    u(hh) = 6\n+  end do\n+end\n+\n+subroutine bar(n, m, u)\n+  implicit none\n+  integer :: kkk, lll, ooo, ppp, n, m\n+  integer u(:,:)\n+  !$omp simd lastprivate(kkk) lastprivate(lll) collapse(2)\n+  do kkk = n, m\n+    do lll = n, m\n+      u(kkk, lll) = 5\n+    end do\n+  end do\n+  !$omp simd private(kkk) private(lll) collapse(2)\n+  do ooo = n, m\n+    do ppp = n, m\n+      u(ooo, ppp) = 5\n+    end do\n+  end do\n+end\n+\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp teams firstprivate\\\\(a1\\\\) firstprivate\\\\(b1\\\\) shared\\\\(u\\\\) default\\\\(none\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp distribute lastprivate\\\\(d1\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel firstprivate\\\\(a1\\\\) firstprivate\\\\(b1\\\\) lastprivate\\\\(d1\\\\) shared\\\\(u\\\\) default\\\\(none\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp for nowait\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd lastprivate\\\\(d1\\\\)\" 1 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd private\\\\(ii\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd linear\\\\(jj:1\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd linear\\\\(hh:1\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd lastprivate\\\\(kkk\\\\) lastprivate\\\\(lll\\\\) collapse\\\\(2\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd private\\\\(kkk\\\\) private\\\\(lll\\\\) collapse\\\\(2\\\\)\" 1 \"original\" } }"}]}