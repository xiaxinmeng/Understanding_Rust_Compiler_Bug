{"sha": "36b21740b4756881c0e35e3cb87d77fac3d1d731", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZiMjE3NDBiNDc1Njg4MWMwZTM1ZTNjYjg3ZDc3ZmFjM2QxZDczMQ==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2013-01-07T08:03:33Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2013-01-07T08:03:33Z"}, "message": "PR c++/52343 - error with alias template as template template argument\n\nIn the example accompanying this patch, check_instantiated_arg tries\nto ensure that a non-type template argument should be a constant if it\nhas integral or enumeration type.\n\nThe problem is that an alias template which type-id is, e.g, an\ninteger, looks like an argument that has integral/enumeration type:\nits TREE_TYPE is an integer type.  So check_instantiated_arg\nmistenkaly barks that this integral non-type argument is not a\nconstant.\n\nBootstrapped and tested on x86_64-unknown-linux-gnu against trunk.\n\ngcc/cp/\n\n\tPR c++/52343\n\t* pt.c (check_instantiated_arg): Allow type template arguments.\n\ngcc/testsuite/\n\n\tPR c++/52343\n\t* g++.dg/cpp0x/alias-decl-29.C: New test.\n\nFrom-SVN: r194960", "tree": {"sha": "9b289b525a47a504b542d1b8e5f6ac7cbebcb50e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b289b525a47a504b542d1b8e5f6ac7cbebcb50e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36b21740b4756881c0e35e3cb87d77fac3d1d731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b21740b4756881c0e35e3cb87d77fac3d1d731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36b21740b4756881c0e35e3cb87d77fac3d1d731", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b21740b4756881c0e35e3cb87d77fac3d1d731/comments", "author": null, "committer": null, "parents": [{"sha": "78aff3368069ecca868e9fa9d5f7b724c4c4c2c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78aff3368069ecca868e9fa9d5f7b724c4c4c2c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78aff3368069ecca868e9fa9d5f7b724c4c4c2c9"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "1a872ff0658e8fd858d0afdc1a6075ce0cec59fe", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b21740b4756881c0e35e3cb87d77fac3d1d731/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b21740b4756881c0e35e3cb87d77fac3d1d731/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=36b21740b4756881c0e35e3cb87d77fac3d1d731", "patch": "@@ -1,3 +1,8 @@\n+2013-01-04  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/52343\n+\t* pt.c (check_instantiated_arg): Allow type template arguments.\n+\n 2013-01-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/55877"}, {"sha": "30bafa07db1dc32d7427e5f80820eae96d161530", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b21740b4756881c0e35e3cb87d77fac3d1d731/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b21740b4756881c0e35e3cb87d77fac3d1d731/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=36b21740b4756881c0e35e3cb87d77fac3d1d731", "patch": "@@ -14419,6 +14419,9 @@ check_instantiated_arg (tree tmpl, tree t, tsubst_flags_t complain)\n \t  return true;\n \t}\n     }\n+  /* Class template and alias template arguments should be OK.  */\n+  else if (DECL_TYPE_TEMPLATE_P (t))\n+    ;\n   /* A non-type argument of integral or enumerated type must be a\n      constant.  */\n   else if (TREE_TYPE (t)"}, {"sha": "217e40fc7da455a6bc3f0b4d3c6e23d6009654e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b21740b4756881c0e35e3cb87d77fac3d1d731/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b21740b4756881c0e35e3cb87d77fac3d1d731/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36b21740b4756881c0e35e3cb87d77fac3d1d731", "patch": "@@ -1,3 +1,8 @@\n+2013-01-04  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/52343\n+\t* g++.dg/cpp0x/alias-decl-29.C: New test.\n+\n 2013-01-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/PR53876"}, {"sha": "f6cc6950ba7c03339c6b09a65d177bd9a6717f14", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-29.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36b21740b4756881c0e35e3cb87d77fac3d1d731/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36b21740b4756881c0e35e3cb87d77fac3d1d731/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-29.C?ref=36b21740b4756881c0e35e3cb87d77fac3d1d731", "patch": "@@ -0,0 +1,10 @@\n+// Origin: PR c++/52343\n+// { dg-do compile { target c++11 } }\n+\n+template<typename>\n+using A = int;\n+\n+template<template<class> class>\n+struct B {};\n+\n+B<A> b;"}]}