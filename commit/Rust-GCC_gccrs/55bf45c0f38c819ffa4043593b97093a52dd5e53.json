{"sha": "55bf45c0f38c819ffa4043593b97093a52dd5e53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTViZjQ1YzBmMzhjODE5ZmZhNDA0MzU5M2I5NzA5M2E1MmRkNWU1Mw==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-11-06T13:48:32Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-11-06T13:48:32Z"}, "message": "tree-sra.c: Fix completely_scalarize for negative indices.\n\n\t* tree-sra.c (completely_scalarize): Properly handle negative array\n\tindices using offset_int.\n\nFrom-SVN: r229852", "tree": {"sha": "616cf403c591e4ceb7aaf76bcd8e77e640ab68a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/616cf403c591e4ceb7aaf76bcd8e77e640ab68a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55bf45c0f38c819ffa4043593b97093a52dd5e53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55bf45c0f38c819ffa4043593b97093a52dd5e53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55bf45c0f38c819ffa4043593b97093a52dd5e53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55bf45c0f38c819ffa4043593b97093a52dd5e53/comments", "author": null, "committer": null, "parents": [{"sha": "f1aa4bb328a5e69e93f33d1a9f3cb8969ab4bbd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1aa4bb328a5e69e93f33d1a9f3cb8969ab4bbd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1aa4bb328a5e69e93f33d1a9f3cb8969ab4bbd8"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "219b6c95409a84f164187c27786b77f36d7daffc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55bf45c0f38c819ffa4043593b97093a52dd5e53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55bf45c0f38c819ffa4043593b97093a52dd5e53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55bf45c0f38c819ffa4043593b97093a52dd5e53", "patch": "@@ -1,3 +1,8 @@\n+2015-11-06  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* tree-sra.c (completely_scalarize): Properly handle negative array\n+\tindices using offset_int.\n+\n 2015-11-06  Richard Biener  <rguenther@suse.de>\n \n \t* alloc-pool.h (object_allocator::allocate): Default-initialize"}, {"sha": "1d4a632dc432cb9b17ab43aa8a65f3738d0e02db", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55bf45c0f38c819ffa4043593b97093a52dd5e53/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55bf45c0f38c819ffa4043593b97093a52dd5e53/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=55bf45c0f38c819ffa4043593b97093a52dd5e53", "patch": "@@ -999,18 +999,25 @@ completely_scalarize (tree base, tree decl_type, HOST_WIDE_INT offset, tree ref)\n \tif (maxidx)\n \t  {\n \t    gcc_assert (TREE_CODE (maxidx) == INTEGER_CST);\n-\t    /* MINIDX and MAXIDX are inclusive.  Try to avoid overflow.  */\n-\t    unsigned HOST_WIDE_INT lenp1 = tree_to_shwi (maxidx)\n-\t\t\t\t\t- tree_to_shwi (minidx);\n-\t    unsigned HOST_WIDE_INT idx = 0;\n-\t    do\n+\t    tree domain = TYPE_DOMAIN (decl_type);\n+\t    /* MINIDX and MAXIDX are inclusive, and must be interpreted in\n+\t       DOMAIN (e.g. signed int, whereas min/max may be size_int).  */\n+\t    offset_int idx = wi::to_offset (minidx);\n+\t    offset_int max = wi::to_offset (maxidx);\n+\t    if (!TYPE_UNSIGNED (domain))\n \t      {\n-\t\ttree nref = build4 (ARRAY_REF, elemtype, ref, size_int (idx),\n+\t\tidx = wi::sext (idx, TYPE_PRECISION (domain));\n+\t\tmax = wi::sext (max, TYPE_PRECISION (domain));\n+\t      }\n+\t    for (int el_off = offset; wi::les_p (idx, max); ++idx)\n+\t      {\n+\t\ttree nref = build4 (ARRAY_REF, elemtype,\n+\t\t\t\t    ref,\n+\t\t\t\t    wide_int_to_tree (domain, idx),\n \t\t\t\t    NULL_TREE, NULL_TREE);\n-\t\tint el_off = offset + idx * el_size;\n \t\tscalarize_elem (base, el_off, el_size, nref, elemtype);\n+\t\tel_off += el_size;\n \t      }\n-\t    while (++idx <= lenp1);\n \t  }\n       }\n       break;"}]}