{"sha": "d588b8b40c4da4c9efe9671f0b12dbdf11afe027", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU4OGI4YjQwYzRkYTRjOWVmZTk2NzFmMGIxMmRiZGYxMWFmZTAyNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-06-21T16:36:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:06Z"}, "message": "[Ada] Add iterators over GNAT.Array_Split.Slice_Set\n\ngcc/ada/\n\n\t* libgnat/g-arrspl.ads, libgnat/g-arrspl.adb (Create,\n\tFirst_Cursor, Advance, Has_Element): New.", "tree": {"sha": "02527a8a2485adf040a7be29e93f99b21a8e96a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02527a8a2485adf040a7be29e93f99b21a8e96a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d588b8b40c4da4c9efe9671f0b12dbdf11afe027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d588b8b40c4da4c9efe9671f0b12dbdf11afe027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d588b8b40c4da4c9efe9671f0b12dbdf11afe027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d588b8b40c4da4c9efe9671f0b12dbdf11afe027/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40486f926ce9f5c09d6211244c2d8dc46b94f03f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40486f926ce9f5c09d6211244c2d8dc46b94f03f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40486f926ce9f5c09d6211244c2d8dc46b94f03f"}], "stats": {"total": 62, "additions": 51, "deletions": 11}, "files": [{"sha": "877003077fafc190897f837afa7d343ae09c9548", "filename": "gcc/ada/libgnat/g-arrspl.adb", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d588b8b40c4da4c9efe9671f0b12dbdf11afe027/gcc%2Fada%2Flibgnat%2Fg-arrspl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d588b8b40c4da4c9efe9671f0b12dbdf11afe027/gcc%2Fada%2Flibgnat%2Fg-arrspl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-arrspl.adb?ref=d588b8b40c4da4c9efe9671f0b12dbdf11afe027", "patch": "@@ -49,7 +49,7 @@ package body GNAT.Array_Split is\n    -- Adjust --\n    ------------\n \n-   procedure Adjust (S : in out Slice_Set) is\n+   overriding procedure Adjust (S : in out Slice_Set) is\n    begin\n       S.D.Ref_Counter := S.D.Ref_Counter + 1;\n    end Adjust;\n@@ -68,6 +68,16 @@ package body GNAT.Array_Split is\n       Create (S, From, To_Set (Separators), Mode);\n    end Create;\n \n+   function Create\n+     (From       : Element_Sequence;\n+      Separators : Element_Sequence;\n+      Mode       : Separator_Mode := Single) return Slice_Set is\n+   begin\n+      return Ret : Slice_Set do\n+         Create (Ret, From, Separators, Mode);\n+      end return;\n+   end Create;\n+\n    ------------\n    -- Create --\n    ------------\n@@ -85,6 +95,16 @@ package body GNAT.Array_Split is\n       S := Result;\n    end Create;\n \n+   function Create\n+     (From       : Element_Sequence;\n+      Separators : Element_Set;\n+      Mode       : Separator_Mode := Single) return Slice_Set is\n+   begin\n+      return Ret : Slice_Set do\n+         Create (Ret, From, Separators, Mode);\n+      end return;\n+   end Create;\n+\n    -----------\n    -- Count --\n    -----------\n@@ -108,7 +128,7 @@ package body GNAT.Array_Split is\n    -- Finalize --\n    --------------\n \n-   procedure Finalize (S : in out Slice_Set) is\n+   overriding procedure Finalize (S : in out Slice_Set) is\n \n       procedure Free is\n          new Ada.Unchecked_Deallocation (Element_Sequence, Element_Access);\n@@ -139,7 +159,7 @@ package body GNAT.Array_Split is\n    -- Initialize --\n    ----------------\n \n-   procedure Initialize (S : in out Slice_Set) is\n+   overriding procedure Initialize (S : in out Slice_Set) is\n    begin\n       S.D := new Data'(1, null, 0, null, null);\n    end Initialize;"}, {"sha": "099d499d13f770e44124683bbf14e2b7312a33d1", "filename": "gcc/ada/libgnat/g-arrspl.ads", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d588b8b40c4da4c9efe9671f0b12dbdf11afe027/gcc%2Fada%2Flibgnat%2Fg-arrspl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d588b8b40c4da4c9efe9671f0b12dbdf11afe027/gcc%2Fada%2Flibgnat%2Fg-arrspl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-arrspl.ads?ref=d588b8b40c4da4c9efe9671f0b12dbdf11afe027", "patch": "@@ -72,7 +72,12 @@ package GNAT.Array_Split is\n       --  separator and no empty slice is created.\n      );\n \n-   type Slice_Set is private;\n+   type Slice_Set is private\n+     with Iterable => (First        => First_Cursor,\n+                       Next         => Advance,\n+                       Has_Element  => Has_Element,\n+                       Element      => Slice);\n+\n    --  This type uses by-reference semantics. This is a set of slices as\n    --  returned by Create or Set routines below. The abstraction represents\n    --  a set of items. Each item is a part of the original array named a\n@@ -85,6 +90,10 @@ package GNAT.Array_Split is\n       From       : Element_Sequence;\n       Separators : Element_Sequence;\n       Mode       : Separator_Mode := Single);\n+   function Create\n+     (From       : Element_Sequence;\n+      Separators : Element_Sequence;\n+      Mode       : Separator_Mode := Single) return Slice_Set;\n    --  Create a cut array object. From is the source array, and Separators\n    --  is a sequence of Element along which to split the array. The source\n    --  array is sliced at separator boundaries. The separators are not\n@@ -99,6 +108,10 @@ package GNAT.Array_Split is\n       From       : Element_Sequence;\n       Separators : Element_Set;\n       Mode       : Separator_Mode := Single);\n+   function Create\n+     (From       : Element_Sequence;\n+      Separators : Element_Set;\n+      Mode       : Separator_Mode := Single) return Slice_Set;\n    --  Same as above but using a Element_Set\n \n    procedure Set\n@@ -117,14 +130,21 @@ package GNAT.Array_Split is\n    type Slice_Number is new Natural;\n    --  Type used to count number of slices\n \n-   function Slice_Count (S : Slice_Set) return Slice_Number;\n-   pragma Inline (Slice_Count);\n+   function Slice_Count (S : Slice_Set) return Slice_Number with Inline;\n    --  Returns the number of slices (fields) in S\n \n+   function First_Cursor (Unused : Slice_Set) return Slice_Number is (1);\n+   function Advance\n+     (Unused : Slice_Set; Position : Slice_Number) return Slice_Number\n+   is (Position + 1);\n+   function Has_Element\n+     (Cont : Slice_Set; Position : Slice_Number) return Boolean\n+   is (Position <= Slice_Count (Cont));\n+   --  Functions used to iterate over a Slice_Set\n+\n    function Slice\n      (S     : Slice_Set;\n-      Index : Slice_Number) return Element_Sequence;\n-   pragma Inline (Slice);\n+      Index : Slice_Number) return Element_Sequence with Inline;\n    --  Returns the slice at position Index. First slice is 1. If Index is 0\n    --  the whole array is returned including the separators (this is the\n    --  original source array).\n@@ -184,8 +204,8 @@ private\n       D : Data_Access;\n    end record;\n \n-   procedure Initialize (S : in out Slice_Set);\n-   procedure Adjust     (S : in out Slice_Set);\n-   procedure Finalize   (S : in out Slice_Set);\n+   overriding procedure Initialize (S : in out Slice_Set);\n+   overriding procedure Adjust     (S : in out Slice_Set);\n+   overriding procedure Finalize   (S : in out Slice_Set);\n \n end GNAT.Array_Split;"}]}