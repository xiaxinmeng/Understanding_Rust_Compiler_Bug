{"sha": "3c9a2b55615908e38b39e6232de0985094cb4bc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M5YTJiNTU2MTU5MDhlMzhiMzllNjIzMmRlMDk4NTA5NGNiNGJjNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-04-24T20:12:12Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-04-24T20:12:12Z"}, "message": "Makefile.in (GCC_FOR_TARGET, [...]): Use -isystem, not -I, for including system headers.\n\n        * Makefile.in (GCC_FOR_TARGET, GCC_CFLAGS, LIBGCC2_INCLUDES,\n        deduced.h): Use -isystem, not -I, for including system headers.\n\nFrom-SVN: r33388", "tree": {"sha": "15e42656198c82057a06d2cfde19caf73cf98a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15e42656198c82057a06d2cfde19caf73cf98a32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c9a2b55615908e38b39e6232de0985094cb4bc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9a2b55615908e38b39e6232de0985094cb4bc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9a2b55615908e38b39e6232de0985094cb4bc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9a2b55615908e38b39e6232de0985094cb4bc6/comments", "author": null, "committer": null, "parents": [{"sha": "aaceac0baab45384da2038a70b97c5d19d264cbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaceac0baab45384da2038a70b97c5d19d264cbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaceac0baab45384da2038a70b97c5d19d264cbb"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "9fdf5048fac8b7922d25e4eca3537c93f9ec332f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c9a2b55615908e38b39e6232de0985094cb4bc6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c9a2b55615908e38b39e6232de0985094cb4bc6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c9a2b55615908e38b39e6232de0985094cb4bc6", "patch": "@@ -1,3 +1,8 @@\n+2000-04-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (GCC_FOR_TARGET, GCC_CFLAGS, LIBGCC2_INCLUDES,\n+\tdeduced.h): Use -isystem, not -I, for including system headers.\n+\n 2000-04-24  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/fr30/fr30.md (addsi3): Do not use small add instruction if"}, {"sha": "50856b8d955c648b72f8cfc25d98a75b8b8f2589", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c9a2b55615908e38b39e6232de0985094cb4bc6/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c9a2b55615908e38b39e6232de0985094cb4bc6/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=3c9a2b55615908e38b39e6232de0985094cb4bc6", "patch": "@@ -161,12 +161,12 @@ INSTALL_ASSERT_H = install-assert-h\n # The GCC to use for compiling libgcc2.a, enquire, and libgcc1-test.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n-GCC_FOR_TARGET = ./xgcc -B$(build_tooldir)/bin/ -B./ -I$(build_tooldir)/include\n+GCC_FOR_TARGET = ./xgcc -B$(build_tooldir)/bin/ -B./ -isystem $(build_tooldir)/include\n \n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n-# It also specifies -I./include to find, e.g., stddef.h.\n-GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -I./include $(TCFLAGS)\n+# It also specifies -isystem ./include to find, e.g., stddef.h.\n+GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -isystem ./include $(TCFLAGS)\n \n # Specify the abi to use when building the c++ runtime\n GXX_ABI_FLAG=@GXX_ABI_FLAG@\n@@ -360,7 +360,7 @@ LIBGCC2_DEBUG_CFLAGS = -g1\n LIBGCC2_CFLAGS = -O2 $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) $(TARGET_LIBGCC2_CFLAGS) $(LIBGCC2_DEBUG_CFLAGS) $(GTHREAD_FLAGS) -DIN_LIBGCC2 -D__GCC_FLOAT_NOT_NEEDED @inhibit_libc@\n \n # Additional options to use when compiling libgcc2.a.\n-# Some targets override this to -Iinclude\n+# Some targets override this to -isystem include\n LIBGCC2_INCLUDES =\n \n # Additional target-dependent options for compiling libgcc2.a.\n@@ -2239,7 +2239,7 @@ stmp-fixinc: fixinc.sh gsyslimits.h\n deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \tif [ -d $(SYSTEM_HEADER_DIR) ]; \\\n \tthen \\\n-\t  CC=\"$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -I. -I$(srcdir) -Iinclude -I${SYSTEM_HEADER_DIR}\"; \\\n+\t  CC=\"$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -I. -I$(srcdir) -isystem include -isystem ${SYSTEM_HEADER_DIR}\"; \\\n \t  export CC; \\\n \t  $(SHELL) $(srcdir)/scan-types.sh \"$(srcdir)\" >tmp-deduced.h; \\\n \t  mv tmp-deduced.h deduced.h; \\"}]}