{"sha": "5602b49d692730366a6e554b52fefa604459d136", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYwMmI0OWQ2OTI3MzAzNjZhNmU1NTRiNTJmZWZhNjA0NDU5ZDEzNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-11-18T18:13:36Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-11-18T18:13:36Z"}, "message": "re PR java/7912 (invalid verification error for arrays)\n\n\tFix for PR java/7912:\n\t* expr.c (can_widen_reference_to): Allow cast of array to\n\tCloneable or Serializable.\n\t* java-tree.h (java_lang_cloneable_identifier_node): Declare.\n\t(java_io_serializable_identifier_node): Likewise.\n\t* parse.y (java_lang_cloneable, java_io_serializable): Removed.\n\t(valid_ref_assignconv_cast_p): Use new identifier nodes.\n\t* lex.c (java_init_lex): Don't initialize java_lang_cloneable and\n\tjava_io_serializable.\n\t* decl.c (java_init_decl_processing): Initialize\n\tjava_lang_cloneable_identifier_node and\n\tjava_io_serializable_identifier_node.\n\t(java_lang_cloneable_identifier_node): New global.\n\t(java_io_serializable_identifier_node): Likewise.\n\nFrom-SVN: r59227", "tree": {"sha": "b4871257f616f991308049a0a275320ae8f40138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4871257f616f991308049a0a275320ae8f40138"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5602b49d692730366a6e554b52fefa604459d136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5602b49d692730366a6e554b52fefa604459d136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5602b49d692730366a6e554b52fefa604459d136", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5602b49d692730366a6e554b52fefa604459d136/comments", "author": null, "committer": null, "parents": [{"sha": "441c77991340c51604639124d611a38fed1c5292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441c77991340c51604639124d611a38fed1c5292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441c77991340c51604639124d611a38fed1c5292"}], "stats": {"total": 60, "additions": 44, "deletions": 16}, "files": [{"sha": "e8c9d5140440cee4c556d842dc14c1d8e65ad185", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5602b49d692730366a6e554b52fefa604459d136", "patch": "@@ -1,3 +1,20 @@\n+2002-11-18  Tom Tromey  <tromey@redhat.com>\n+\n+\tFix for PR java/7912:\n+\t* expr.c (can_widen_reference_to): Allow cast of array to\n+\tCloneable or Serializable.\n+\t* java-tree.h (java_lang_cloneable_identifier_node): Declare.\n+\t(java_io_serializable_identifier_node): Likewise.\n+\t* parse.y (java_lang_cloneable, java_io_serializable): Removed.\n+\t(valid_ref_assignconv_cast_p): Use new identifier nodes.\n+\t* lex.c (java_init_lex): Don't initialize java_lang_cloneable and\n+\tjava_io_serializable.\n+\t* decl.c (java_init_decl_processing): Initialize\n+\tjava_lang_cloneable_identifier_node and\n+\tjava_io_serializable_identifier_node.\n+\t(java_lang_cloneable_identifier_node): New global.\n+\t(java_io_serializable_identifier_node): Likewise.\n+\n 2002-11-14  Jens-Michael Hoffmann  <jensmh@gmx.de>\n \n \t* buffer.c: Remove unnecessary casts."}, {"sha": "9e8efefca9048ce3268470a4595c4f5244705867", "filename": "gcc/java/decl.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=5602b49d692730366a6e554b52fefa604459d136", "patch": "@@ -57,6 +57,12 @@ static tree check_local_named_variable PARAMS ((tree, tree, int, int *));\n static tree check_local_unnamed_variable PARAMS ((tree, tree, tree));\n static void dump_function PARAMS ((enum tree_dump_index, tree));\n \n+/* Name of the Cloneable class.  */\n+tree java_lang_cloneable_identifier_node;\n+\n+/* Name of the Serializable class.  */\n+tree java_io_serializable_identifier_node;\n+\n /* Set to nonzero value in order to emit class initilization code\n    before static field references.  */\n extern int always_initialize_class_p;\n@@ -601,6 +607,10 @@ java_init_decl_processing ()\n   access0_identifier_node = get_identifier (\"access$0\");\n   classdollar_identifier_node = get_identifier (\"class$\");\n \n+  java_lang_cloneable_identifier_node = get_identifier (\"java.lang.Cloneable\");\n+  java_io_serializable_identifier_node =\n+    get_identifier (\"java.io.Serializable\");\n+\n   /* for lack of a better place to put this stub call */\n   init_expr_processing();\n "}, {"sha": "8db2670d0f99fee069f89b65aa1eaaacd2cd0657", "filename": "gcc/java/expr.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=5602b49d692730366a6e554b52fefa604459d136", "patch": "@@ -1,5 +1,5 @@\n /* Process expressions for the GNU compiler for the Java(TM) language.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -391,7 +391,12 @@ can_widen_reference_to (source_type, target_type)\n \t{\n \t  HOST_WIDE_INT source_length, target_length;\n \t  if (TYPE_ARRAY_P (source_type) != TYPE_ARRAY_P (target_type))\n-\t    return 0;\n+\t    {\n+\t      /* An array implements Cloneable and Serializable.  */\n+\t      tree name = DECL_NAME (TYPE_NAME (target_type));\n+\t      return (name == java_lang_cloneable_identifier_node\n+\t\t      || name == java_io_serializable_identifier_node);\n+\t    }\n \t  target_length = java_array_type_length (target_type);\n \t  if (target_length >= 0)\n \t    {"}, {"sha": "046cb9dfa687361e41a23af686d27c75ba92428f", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=5602b49d692730366a6e554b52fefa604459d136", "patch": "@@ -258,6 +258,9 @@ typedef struct CPool constant_pool;\n #define COMPONENT_REF_SIGNATURE(CPOOL, IDX) \\\n   NAME_AND_TYPE_SIGNATURE (CPOOL, COMPONENT_REF_NAME_AND_TYPE(CPOOL, IDX))\n \n+extern GTY(()) tree java_lang_cloneable_identifier_node;\n+extern GTY(()) tree java_io_serializable_identifier_node;\n+\n enum java_tree_index\n {\n   JTI_PROMOTED_BYTE_TYPE_NODE,"}, {"sha": "eecbcff81ce455809bd5671129abd78bc7eeb49a", "filename": "gcc/java/lex.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=5602b49d692730366a6e554b52fefa604459d136", "patch": "@@ -91,10 +91,6 @@ java_init_lex (finput, encoding)\n \n   if (!java_lang_id)\n     java_lang_id = get_identifier (\"java.lang\");\n-  if (!java_lang_cloneable)\n-    java_lang_cloneable = get_identifier (\"java.lang.Cloneable\");\n-  if (!java_io_serializable)\n-    java_io_serializable = get_identifier (\"java.io.Serializable\");\n   if (!inst_id)\n     inst_id = get_identifier (\"inst$\");\n   if (!wpv_id)"}, {"sha": "2a77235f3b13272a2d64737c21131b8df4084fd4", "filename": "gcc/java/parse.y", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5602b49d692730366a6e554b52fefa604459d136/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=5602b49d692730366a6e554b52fefa604459d136", "patch": "@@ -391,12 +391,6 @@ static GTY(()) tree java_lang_id;\n    instance/field access functions.  */\n static GTY(()) tree inst_id;\n \n-/* The \"java.lang.Cloneable\" qualified name.  */\n-static GTY(()) tree java_lang_cloneable;\n-\n-/* The \"java.io.Serializable\" qualified name.  */\n-static GTY(()) tree java_io_serializable;\n-\n /* Context and flag for static blocks */\n static GTY(()) tree current_static_block;\n \n@@ -13071,9 +13065,10 @@ valid_ref_assignconv_cast_p (source, dest, cast)\n \t{\n \t  /* Array */\n \t  return (cast\n-\t\t  && (DECL_NAME (TYPE_NAME (source)) == java_lang_cloneable\n+\t\t  && (DECL_NAME (TYPE_NAME (source))\n+\t\t      == java_lang_cloneable_identifier_node\n \t\t      || (DECL_NAME (TYPE_NAME (source))\n-\t\t\t  == java_io_serializable)));\n+\t\t\t  == java_io_serializable_identifier_node)));\n \t}\n     }\n   if (TYPE_ARRAY_P (source))\n@@ -13083,8 +13078,10 @@ valid_ref_assignconv_cast_p (source, dest, cast)\n       /* Can't cast an array to an interface unless the interface is\n \t java.lang.Cloneable or java.io.Serializable.  */\n       if (TYPE_INTERFACE_P (dest))\n-\treturn (DECL_NAME (TYPE_NAME (dest)) == java_lang_cloneable\n-\t\t|| DECL_NAME (TYPE_NAME (dest)) == java_io_serializable);\n+\treturn (DECL_NAME (TYPE_NAME (dest))\n+\t\t== java_lang_cloneable_identifier_node\n+\t\t|| (DECL_NAME (TYPE_NAME (dest))\n+\t\t    == java_io_serializable_identifier_node));\n       else\t\t\t/* Arrays */\n \t{\n \t  tree source_element_type = TYPE_ARRAY_ELEMENT (source);"}]}