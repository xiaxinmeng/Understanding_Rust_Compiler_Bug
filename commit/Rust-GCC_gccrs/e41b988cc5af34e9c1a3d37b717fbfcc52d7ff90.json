{"sha": "e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQxYjk4OGNjNWFmMzRlOWMxYTNkMzdiNzE3ZmJmY2M1MmQ3ZmY5MA==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "gerald@pfeifer.com", "date": "2020-06-01T15:03:51Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@pfeifer.com", "date": "2020-06-01T15:04:22Z"}, "message": "libstdc++: Update/streamline Valgrind references\n\n\t* doc/xml/faq.xml: Adjust Valgrind reference and remove another.\n\t* doc/html/faq.html: Regenerate.", "tree": {"sha": "3330771d4155bb0a944279ad55d72cacd8a8ed11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3330771d4155bb0a944279ad55d72cacd8a8ed11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90/comments", "author": {"login": "GeraldPfeifer", "id": 4573532, "node_id": "MDQ6VXNlcjQ1NzM1MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4573532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeraldPfeifer", "html_url": "https://github.com/GeraldPfeifer", "followers_url": "https://api.github.com/users/GeraldPfeifer/followers", "following_url": "https://api.github.com/users/GeraldPfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/GeraldPfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeraldPfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeraldPfeifer/subscriptions", "organizations_url": "https://api.github.com/users/GeraldPfeifer/orgs", "repos_url": "https://api.github.com/users/GeraldPfeifer/repos", "events_url": "https://api.github.com/users/GeraldPfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/GeraldPfeifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GeraldPfeifer", "id": 4573532, "node_id": "MDQ6VXNlcjQ1NzM1MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4573532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeraldPfeifer", "html_url": "https://github.com/GeraldPfeifer", "followers_url": "https://api.github.com/users/GeraldPfeifer/followers", "following_url": "https://api.github.com/users/GeraldPfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/GeraldPfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeraldPfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeraldPfeifer/subscriptions", "organizations_url": "https://api.github.com/users/GeraldPfeifer/orgs", "repos_url": "https://api.github.com/users/GeraldPfeifer/repos", "events_url": "https://api.github.com/users/GeraldPfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/GeraldPfeifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff7da2b5d621d0aaf4a467344d0621eefd4aa78f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7da2b5d621d0aaf4a467344d0621eefd4aa78f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff7da2b5d621d0aaf4a467344d0621eefd4aa78f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "967e5f5f348c82d946a6839290b0894bc7ec11fe", "filename": "libstdc++-v3/doc/html/faq.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html?ref=e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90", "patch": "@@ -700,7 +700,7 @@\n     of a few dozen kilobytes on startup. This pool is used to ensure it's\n     possible to throw exceptions (such as <code class=\"classname\">bad_alloc</code>)\n     even when <code class=\"code\">malloc</code> is unable to allocate any more memory.\n-    With some versions of <a class=\"link\" href=\"http://valgrind.org/\" target=\"_top\"><span class=\"command\"><strong>valgrind</strong></span></a>\n+    With some versions of <a class=\"link\" href=\"https://valgrind.org\" target=\"_top\"><span class=\"command\"><strong>valgrind</strong></span></a>\n     this pool will be shown as \"still reachable\" when the process exits, e.g.\n     <code class=\"code\">still reachable: 72,704 bytes in 1 blocks</code>.\n     This memory is not a leak, because it's still in use by libstdc++,\n@@ -710,7 +710,7 @@\n     </p><p>\n     In the past, a few people reported that the standard containers appear\n     to leak memory when tested with memory checkers such as\n-    <a class=\"link\" href=\"http://valgrind.org/\" target=\"_top\"><span class=\"command\"><strong>valgrind</strong></span></a>.\n+    <span class=\"command\"><strong>valgrind</strong></span>.\n     Under some (non-default) configurations the library's allocators keep\n     free memory in a\n     pool for later reuse, rather than deallocating it with <code class=\"code\">delete</code>"}, {"sha": "e419d3c22a019150b3766e162acfd3b914b05241", "filename": "libstdc++-v3/doc/xml/faq.xml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml?ref=e41b988cc5af34e9c1a3d37b717fbfcc52d7ff90", "patch": "@@ -993,7 +993,7 @@\n     of a few dozen kilobytes on startup. This pool is used to ensure it's\n     possible to throw exceptions (such as <classname>bad_alloc</classname>)\n     even when <code>malloc</code> is unable to allocate any more memory.\n-    With some versions of <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://valgrind.org/\"><command>valgrind</command></link>\n+    With some versions of <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://valgrind.org\"><command>valgrind</command></link>\n     this pool will be shown as \"still reachable\" when the process exits, e.g.\n     <code>still reachable: 72,704 bytes in 1 blocks</code>.\n     This memory is not a leak, because it's still in use by libstdc++,\n@@ -1004,7 +1004,7 @@\n     <para>\n     In the past, a few people reported that the standard containers appear\n     to leak memory when tested with memory checkers such as\n-    <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://valgrind.org/\"><command>valgrind</command></link>.\n+    <command>valgrind</command>.\n     Under some (non-default) configurations the library's allocators keep\n     free memory in a\n     pool for later reuse, rather than deallocating it with <code>delete</code>"}]}