{"sha": "9b110be230335f0b0bc3cf676b42f0280225a784", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIxMTBiZTIzMDMzNWYwYjBiYzNjZjY3NmI0MmYwMjgwMjI1YTc4NA==", "commit": {"author": {"name": "Ond\u0159ej B\u00edlka", "email": "neleai@seznam.cz", "date": "2013-07-21T17:57:23Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-07-21T17:57:23Z"}, "message": "trans-decl.c: Fix comment typos.\n\n2013-07-21   Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n\n        * trans-decl.c: Fix comment typos.\n        * trans-expr.c: Ditto.\n\n2013-07-21   Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n\n        * io/transfer.c: Fix comment typos.\n\nFrom-SVN: r201107", "tree": {"sha": "dbd1fa6510c82db2a0f675666158f5a23da5fe4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbd1fa6510c82db2a0f675666158f5a23da5fe4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b110be230335f0b0bc3cf676b42f0280225a784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b110be230335f0b0bc3cf676b42f0280225a784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b110be230335f0b0bc3cf676b42f0280225a784", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b110be230335f0b0bc3cf676b42f0280225a784/comments", "author": {"login": "neleai", "id": 48067, "node_id": "MDQ6VXNlcjQ4MDY3", "avatar_url": "https://avatars.githubusercontent.com/u/48067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neleai", "html_url": "https://github.com/neleai", "followers_url": "https://api.github.com/users/neleai/followers", "following_url": "https://api.github.com/users/neleai/following{/other_user}", "gists_url": "https://api.github.com/users/neleai/gists{/gist_id}", "starred_url": "https://api.github.com/users/neleai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neleai/subscriptions", "organizations_url": "https://api.github.com/users/neleai/orgs", "repos_url": "https://api.github.com/users/neleai/repos", "events_url": "https://api.github.com/users/neleai/events{/privacy}", "received_events_url": "https://api.github.com/users/neleai/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c65cb8d1f07920e911d13e551476e28d204e8daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c65cb8d1f07920e911d13e551476e28d204e8daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c65cb8d1f07920e911d13e551476e28d204e8daa"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "85dc3c84e210dcd7225f373a4b46151f6c4374ea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b110be230335f0b0bc3cf676b42f0280225a784/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b110be230335f0b0bc3cf676b42f0280225a784/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9b110be230335f0b0bc3cf676b42f0280225a784", "patch": "@@ -1,3 +1,8 @@\n+2013-07-21   Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n+\n+\t* trans-decl.c: Fix comment typos.\n+\t* trans-expr.c: Ditto.\n+\n 2013-07-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/56937"}, {"sha": "0d7d9c577c1e20d5a44f41ac246716bfe1e36037", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b110be230335f0b0bc3cf676b42f0280225a784/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b110be230335f0b0bc3cf676b42f0280225a784/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=9b110be230335f0b0bc3cf676b42f0280225a784", "patch": "@@ -2157,7 +2157,7 @@ create_function_arglist (gfc_symbol * sym)\n \t    }\n \t}\n       /* For noncharacter scalar intrinsic types, VALUE passes the value,\n-\t hence, the optional status cannot be transfered via a NULL pointer.\n+\t hence, the optional status cannot be transferred via a NULL pointer.\n \t Thus, we will use a hidden argument in that case.  */\n       else if (f->sym->attr.optional && f->sym->attr.value\n \t       && !f->sym->attr.dimension && f->sym->ts.type != BT_CLASS"}, {"sha": "e0cdd49dfa245a3b8d2f1188767bdf250cc62577", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b110be230335f0b0bc3cf676b42f0280225a784/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b110be230335f0b0bc3cf676b42f0280225a784/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=9b110be230335f0b0bc3cf676b42f0280225a784", "patch": "@@ -1235,7 +1235,7 @@ gfc_conv_expr_present (gfc_symbol * sym)\n      as actual argument to denote absent dummies. For array descriptors,\n      we thus also need to check the array descriptor.  For BT_CLASS, it\n      can also occur for scalars and F2003 due to type->class wrapping and\n-     class->class wrapping.  Note futher that BT_CLASS always uses an\n+     class->class wrapping.  Note further that BT_CLASS always uses an\n      array descriptor for arrays, also for explicit-shape/assumed-size.  */\n \n   if (!sym->attr.allocatable\n@@ -2829,7 +2829,7 @@ gfc_build_compare_string (tree len1, tree str1, tree len2, tree str2, int kind,\n   /* We can compare via memcpy if the strings are known to be equal\n      in length and they are\n      - kind=1\n-     - kind=4 and the comparision is for (in)equality.  */\n+     - kind=4 and the comparison is for (in)equality.  */\n \n   if (INTEGER_CST_P (len1) && INTEGER_CST_P (len2)\n       && tree_int_cst_equal (len1, len2)"}, {"sha": "0a035ebb23856f6ca726729820ae2971c437b465", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b110be230335f0b0bc3cf676b42f0280225a784/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b110be230335f0b0bc3cf676b42f0280225a784/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=9b110be230335f0b0bc3cf676b42f0280225a784", "patch": "@@ -1,3 +1,7 @@\n+2013-07-21   Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n+\n+\t* io/transfer.c: Fix comment typos.\n+\n 2013-07-21  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/35862"}, {"sha": "0b1540ce2af6b09179dfe575076cf73382e3ff32", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b110be230335f0b0bc3cf676b42f0280225a784/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b110be230335f0b0bc3cf676b42f0280225a784/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=9b110be230335f0b0bc3cf676b42f0280225a784", "patch": "@@ -233,7 +233,7 @@ read_sf_internal (st_parameter_dt *dtp, int * length)\n     {\n       *length = 0;\n       /* Just return something that isn't a NULL pointer, otherwise the\n-         caller thinks an error occured.  */\n+         caller thinks an error occurred.  */\n       return (char*) empty_string;\n     }\n \n@@ -292,7 +292,7 @@ read_sf (st_parameter_dt *dtp, int * length)\n     {\n       *length = 0;\n       /* Just return something that isn't a NULL pointer, otherwise the\n-         caller thinks an error occured.  */\n+         caller thinks an error occurred.  */\n       return (char*) empty_string;\n     }\n \n@@ -512,7 +512,7 @@ read_block_form4 (st_parameter_dt *dtp, int * nbytes)\n     {\n       *nbytes = 0;\n       /* Just return something that isn't a NULL pointer, otherwise the\n-         caller thinks an error occured.  */\n+         caller thinks an error occurred.  */\n       return empty_string;\n     }\n "}]}