{"sha": "fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUxODE0Y2Y4NDAxZWIyY2RjNTRjZTc2ODM4YmQ1OTk2ZDlkNmU3MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-05-13T01:11:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-05-13T01:11:13Z"}, "message": "mmix.c, msp430.c: Add space between string literal and macro name.\n\ngcc/\n\t* config/mmix/mmix.c, config/msp430/msp430.c: Add space between\n\tstring literal and macro name.\ngcc/ada/\n\t* sigtramp-vxworks.c: Add space between string literal and macro\n\tname.\n\nFrom-SVN: r223106", "tree": {"sha": "16ec5443dfe9fd2ac067417ccf154dbf84aed6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16ec5443dfe9fd2ac067417ccf154dbf84aed6b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0753c69c6275152ac2be3dc173bf88707a96cf33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0753c69c6275152ac2be3dc173bf88707a96cf33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0753c69c6275152ac2be3dc173bf88707a96cf33"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "10b8fdd7490288cffbe5850f611a83840b0a0450", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "patch": "@@ -1,3 +1,8 @@\n+2015-05-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* config/mmix/mmix.c, config/msp430/msp430.c: Add space between\n+\tstring literal and macro name.\n+\n 2015-05-12  Steve Ellcey  <sellcey@imgtec.com>\n \n \t* config/mips/mips.c (mips_print_operand): Remove 'y' operand code."}, {"sha": "6df8f508ac661bf25e0893cfdde5d734c36a1428", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "patch": "@@ -1,3 +1,8 @@\n+2015-05-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* sigtramp-vxworks.c: Add space between string literal and macro\n+\tname.\n+\n 2015-05-12  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat_rm.texi, gnat_ugn.texi, doc: Documentation updates and clean ups"}, {"sha": "c697626a03e2cfa590bfea174c616c14cb866fc0", "filename": "gcc/ada/sigtramp-vxworks.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2Fada%2Fsigtramp-vxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2Fada%2Fsigtramp-vxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-vxworks.c?ref=fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "patch": "@@ -342,16 +342,16 @@ CR(\"\") \\\n TCR(\"# Allocate frame and save the non-volatile\") \\\n TCR(\"# registers we're going to modify\") \\\n TCR(\"mov\tip, sp\") \\\n-TCR(\"stmfd\tsp!, {r\"S(CFA_REG)\", fp, ip, lr, pc}\") \\\n+TCR(\"stmfd\tsp!, {r\" S(CFA_REG)\", fp, ip, lr, pc}\") \\\n TCR(\"# Setup CFA_REG = context, which we'll retrieve as our CFA value\") \\\n-TCR(\"ldr\tr\"S(CFA_REG)\", [ip]\") \\\n+TCR(\"ldr\tr\" S(CFA_REG)\", [ip]\") \\\n TCR(\"\")                 \\\n TCR(\"# Call the real handler. The signo, siginfo and sigcontext\") \\\n TCR(\"# arguments are the same as those we received in r0, r1 and r2\") \\\n TCR(\"sub\tfp, ip, #4\") \\\n TCR(\"blx\tr3\") \\\n TCR(\"# Restore our callee-saved items, release our frame and return\") \\\n-TCR(\"ldmfd\tsp, {r\"S(CFA_REG)\", fp, sp, pc}\")\n+TCR(\"ldmfd\tsp, {r\" S(CFA_REG)\", fp, sp, pc}\")\n \n #else\n Not_implemented;"}, {"sha": "e0699854e25700d75efd0e4647a3de538de412a0", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "patch": "@@ -2520,7 +2520,7 @@ mmix_output_shiftvalue_op_from_str (FILE *stream,\n   if (! mmix_shiftable_wyde_value (value))\n     {\n       char s[sizeof (\"0xffffffffffffffff\")];\n-      sprintf (s, \"%#\"PRIx64, value);\n+      sprintf (s, \"%#\" PRIx64, value);\n       internal_error (\"MMIX Internal: %s is not a shiftable int\", s);\n     }\n \n@@ -2562,7 +2562,7 @@ mmix_output_octa (FILE *stream, int64_t value, int do_begin_end)\n     fprintf (stream, \"#\" HOST_WIDE_INT_PRINT_HEX_PURE,\n \t     (HOST_WIDE_INT) value);\n   else /* Need to avoid the hex output; there's no ...WIDEST...HEX_PURE.  */\n-    fprintf (stream, \"%\"PRIu64, value);\n+    fprintf (stream, \"%\" PRIu64, value);\n \n   if (do_begin_end)\n     fprintf (stream, \"\\n\");\n@@ -2579,7 +2579,7 @@ mmix_output_shifted_value (FILE *stream, int64_t value)\n   if (! mmix_shiftable_wyde_value (value))\n     {\n       char s[16+2+1];\n-      sprintf (s, \"%#\"PRIx64, value);\n+      sprintf (s, \"%#\" PRIx64, value);\n       internal_error (\"MMIX Internal: %s is not a shiftable int\", s);\n     }\n "}, {"sha": "58d0efea1decb86cae4655091d5efd5dbf29a3fb", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1814cf8401eb2cdc54ce76838bd5996d9d6e70/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=fe1814cf8401eb2cdc54ce76838bd5996d9d6e70", "patch": "@@ -2248,7 +2248,7 @@ static struct\n }\n   const_shift_helpers[] =\n {\n-#define CSH(N,C,X,G) { \"__mspabi_\"N, C, X, gen_##G }\n+#define CSH(N,C,X,G) { \"__mspabi_\" N, C, X, gen_##G }\n \n   CSH (\"slli\", 1, 1, slli_1),\n   CSH (\"slll\", 1, 1, slll_1),"}]}