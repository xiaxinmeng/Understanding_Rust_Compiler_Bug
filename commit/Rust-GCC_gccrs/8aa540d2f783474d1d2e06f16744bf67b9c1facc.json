{"sha": "8aa540d2f783474d1d2e06f16744bf67b9c1facc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFhNTQwZDJmNzgzNDc0ZDFkMmUwNmYxNjc0NGJmNjdiOWMxZmFjYw==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2006-03-10T21:46:48Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2006-03-10T21:46:48Z"}, "message": "Imported GNU Classpath 0.90\n\n       Imported GNU Classpath 0.90\n       * scripts/makemake.tcl: Set gnu/java/awt/peer/swing to ignore.\n       * gnu/classpath/jdwp/VMFrame.java (SIZE): New constant.\n       * java/lang/VMCompiler.java: Use gnu.java.security.hash.MD5.\n       * java/lang/Math.java: New override file.\n       * java/lang/Character.java: Merged from Classpath.\n       (start, end): Now 'int's.\n       (canonicalName): New field.\n       (CANONICAL_NAME, NO_SPACES_NAME, CONSTANT_NAME): New constants.\n       (UnicodeBlock): Added argument.\n       (of): New overload.\n       (forName): New method.\n       Updated unicode blocks.\n       (sets): Updated.\n       * sources.am: Regenerated.\n       * Makefile.in: Likewise.\n\nFrom-SVN: r111942", "tree": {"sha": "ea38c56431c5d4528fb54254c3f8e50f517bede3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea38c56431c5d4528fb54254c3f8e50f517bede3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8aa540d2f783474d1d2e06f16744bf67b9c1facc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa540d2f783474d1d2e06f16744bf67b9c1facc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa540d2f783474d1d2e06f16744bf67b9c1facc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa540d2f783474d1d2e06f16744bf67b9c1facc/comments", "author": null, "committer": null, "parents": [{"sha": "27079765d00123f8e53d0e1ef7f9d46559266e6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27079765d00123f8e53d0e1ef7f9d46559266e6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27079765d00123f8e53d0e1ef7f9d46559266e6d"}], "stats": {"total": 211369, "additions": 188698, "deletions": 22671}, "files": [{"sha": "2329cc5d118d25c44a2b89e38f0cb587a312391d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,3 +1,22 @@\n+2006-03-09  Mark Wielaard  <mark@klomp.org>\n+\n+\tImported GNU Classpath 0.90\n+\t* scripts/makemake.tcl: Set gnu/java/awt/peer/swing to ignore.\n+\t* gnu/classpath/jdwp/VMFrame.java (SIZE): New constant.\n+\t* java/lang/VMCompiler.java: Use gnu.java.security.hash.MD5.\n+\t* java/lang/Math.java: New override file.\n+\t* java/lang/Character.java: Merged from Classpath.\n+\t(start, end): Now 'int's.\n+\t(canonicalName): New field.\n+\t(CANONICAL_NAME, NO_SPACES_NAME, CONSTANT_NAME): New constants.\n+\t(UnicodeBlock): Added argument.\n+\t(of): New overload.\n+\t(forName): New method.\n+\tUpdated unicode blocks.\n+\t(sets): Updated.\n+\t* sources.am: Regenerated.\n+\t* Makefile.in: Likewise.\n+\n 2006-03-09  Tom Tromey  <tromey@redhat.com>\n \n \tPR libgcj/23495:"}, {"sha": "7f4d7fba70cb3eca8e3d244ae3a0da3f09cccd46", "filename": "libjava/Makefile.in", "status": "modified", "additions": 1242, "deletions": 44, "changes": 1286, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -167,11 +167,33 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/java/rmi/registry.lo gnu/java/rmi/server.lo \\\n \tgnu/java/security.lo gnu/java/security/action.lo \\\n \tgnu/java/security/ber.lo gnu/java/security/der.lo \\\n-\tgnu/java/security/pkcs.lo gnu/java/security/provider.lo \\\n-\tgnu/java/security/util.lo gnu/java/security/x509.lo \\\n-\tgnu/java/security/x509/ext.lo gnu/java/text.lo \\\n-\tgnu/java/util.lo gnu/java/util/prefs.lo gnu/javax/crypto.lo \\\n-\tgnu/javax/imageio/bmp.lo gnu/javax/swing/text/html/parser.lo \\\n+\tgnu/java/security/hash.lo gnu/java/security/jce/hash.lo \\\n+\tgnu/java/security/jce/prng.lo gnu/java/security/jce/sig.lo \\\n+\tgnu/java/security/key.lo gnu/java/security/key/dss.lo \\\n+\tgnu/java/security/key/rsa.lo gnu/java/security/pkcs.lo \\\n+\tgnu/java/security/prng.lo gnu/java/security/provider.lo \\\n+\tgnu/java/security/sig.lo gnu/java/security/sig/dss.lo \\\n+\tgnu/java/security/sig/rsa.lo gnu/java/security/util.lo \\\n+\tgnu/java/security/x509.lo gnu/java/security/x509/ext.lo \\\n+\tgnu/java/text.lo gnu/java/util.lo gnu/java/util/prefs.lo \\\n+\tgnu/javax/crypto.lo gnu/javax/crypto/assembly.lo \\\n+\tgnu/javax/crypto/cipher.lo gnu/javax/crypto/jce.lo \\\n+\tgnu/javax/crypto/jce/cipher.lo gnu/javax/crypto/jce/key.lo \\\n+\tgnu/javax/crypto/jce/keyring.lo gnu/javax/crypto/jce/mac.lo \\\n+\tgnu/javax/crypto/jce/params.lo gnu/javax/crypto/jce/prng.lo \\\n+\tgnu/javax/crypto/jce/sig.lo gnu/javax/crypto/jce/spec.lo \\\n+\tgnu/javax/crypto/key.lo gnu/javax/crypto/key/dh.lo \\\n+\tgnu/javax/crypto/key/srp6.lo gnu/javax/crypto/keyring.lo \\\n+\tgnu/javax/crypto/mac.lo gnu/javax/crypto/mode.lo \\\n+\tgnu/javax/crypto/pad.lo gnu/javax/crypto/prng.lo \\\n+\tgnu/javax/crypto/sasl.lo gnu/javax/crypto/sasl/anonymous.lo \\\n+\tgnu/javax/crypto/sasl/crammd5.lo \\\n+\tgnu/javax/crypto/sasl/plain.lo gnu/javax/crypto/sasl/srp.lo \\\n+\tgnu/javax/imageio/bmp.lo gnu/javax/net/ssl.lo \\\n+\tgnu/javax/net/ssl/provider.lo gnu/javax/security/auth.lo \\\n+\tgnu/javax/security/auth/callback.lo \\\n+\tgnu/javax/security/auth/login.lo \\\n+\tgnu/javax/swing/text/html/parser.lo \\\n \tgnu/javax/swing/text/html/parser/models.lo \\\n \tgnu/javax/swing/text/html/parser/support.lo \\\n \tgnu/javax/swing/text/html/parser/support/low.lo gnu/regexp.lo \\\n@@ -207,10 +229,10 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/event.lo javax/swing/filechooser.lo \\\n \tjavax/swing/plaf.lo javax/swing/plaf/basic.lo \\\n \tjavax/swing/plaf/metal.lo javax/swing/plaf/multi.lo \\\n-\tjavax/swing/table.lo javax/swing/text.lo \\\n-\tjavax/swing/text/html.lo javax/swing/text/html/parser.lo \\\n-\tjavax/swing/text/rtf.lo javax/swing/tree.lo \\\n-\tjavax/swing/undo.lo javax/transaction.lo \\\n+\tjavax/swing/plaf/synth.lo javax/swing/table.lo \\\n+\tjavax/swing/text.lo javax/swing/text/html.lo \\\n+\tjavax/swing/text/html/parser.lo javax/swing/text/rtf.lo \\\n+\tjavax/swing/tree.lo javax/swing/undo.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo\n am__DEPENDENCIES_3 = gnu-CORBA.lo gnu-java-beans.lo gnu-javax-rmi.lo \\\n \tgnu-javax-sound-midi.lo gnu-xml.lo javax-imageio.lo \\\n@@ -1020,6 +1042,7 @@ gnu_classpath_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gn\n gnu_classpath_debug_source_files = \\\n classpath/gnu/classpath/debug/Component.java \\\n classpath/gnu/classpath/debug/PreciseFilter.java \\\n+classpath/gnu/classpath/debug/Simple1LineFormatter.java \\\n classpath/gnu/classpath/debug/SystemLogger.java\n \n gnu_classpath_debug_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_debug_source_files)))\n@@ -1351,6 +1374,7 @@ classpath/gnu/java/awt/peer/qt/QtWindowPeer.java\n \n gnu_java_beans_source_files = \\\n classpath/gnu/java/beans/BeanInfoEmbryo.java \\\n+classpath/gnu/java/beans/DefaultExceptionListener.java \\\n classpath/gnu/java/beans/DummyAppletContext.java \\\n classpath/gnu/java/beans/DummyAppletStub.java \\\n classpath/gnu/java/beans/ExplicitBeanInfo.java \\\n@@ -1369,7 +1393,6 @@ classpath/gnu/java/beans/decoder/ClassHandler.java \\\n classpath/gnu/java/beans/decoder/ConstructorContext.java \\\n classpath/gnu/java/beans/decoder/Context.java \\\n classpath/gnu/java/beans/decoder/DecoderContext.java \\\n-classpath/gnu/java/beans/decoder/DefaultExceptionListener.java \\\n classpath/gnu/java/beans/decoder/DoubleHandler.java \\\n classpath/gnu/java/beans/decoder/DummyContext.java \\\n classpath/gnu/java/beans/decoder/DummyHandler.java \\\n@@ -1791,6 +1814,7 @@ classpath/gnu/java/rmi/registry/RegistryImpl_Stub.java\n \n gnu_java_rmi_registry_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_rmi_registry_source_files)))\n gnu_java_rmi_server_source_files = \\\n+classpath/gnu/java/rmi/server/CombinedClassLoader.java \\\n classpath/gnu/java/rmi/server/ConnectionRunnerPool.java \\\n classpath/gnu/java/rmi/server/ProtocolConstants.java \\\n classpath/gnu/java/rmi/server/RMIClassLoaderImpl.java \\\n@@ -1812,7 +1836,9 @@ gnu_java_rmi_server_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.\n gnu_java_security_source_files = \\\n classpath/gnu/java/security/Engine.java \\\n classpath/gnu/java/security/OID.java \\\n-classpath/gnu/java/security/PolicyFile.java\n+classpath/gnu/java/security/PolicyFile.java \\\n+classpath/gnu/java/security/Properties.java \\\n+classpath/gnu/java/security/Registry.java\n \n gnu_java_security_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_source_files)))\n gnu_java_security_action_source_files = \\\n@@ -1837,43 +1863,168 @@ classpath/gnu/java/security/der/DERValue.java \\\n classpath/gnu/java/security/der/DERWriter.java\n \n gnu_java_security_der_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_der_source_files)))\n+gnu_java_security_hash_source_files = \\\n+classpath/gnu/java/security/hash/BaseHash.java \\\n+classpath/gnu/java/security/hash/HashFactory.java \\\n+classpath/gnu/java/security/hash/Haval.java \\\n+classpath/gnu/java/security/hash/IMessageDigest.java \\\n+classpath/gnu/java/security/hash/MD2.java \\\n+classpath/gnu/java/security/hash/MD4.java \\\n+classpath/gnu/java/security/hash/MD5.java \\\n+classpath/gnu/java/security/hash/RipeMD128.java \\\n+classpath/gnu/java/security/hash/RipeMD160.java \\\n+classpath/gnu/java/security/hash/Sha160.java \\\n+classpath/gnu/java/security/hash/Sha256.java \\\n+classpath/gnu/java/security/hash/Sha384.java \\\n+classpath/gnu/java/security/hash/Sha512.java \\\n+classpath/gnu/java/security/hash/Tiger.java \\\n+classpath/gnu/java/security/hash/Whirlpool.java\n+\n+gnu_java_security_hash_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_hash_source_files)))\n+gnu_java_security_jce_hash_source_files = \\\n+classpath/gnu/java/security/jce/hash/HavalSpi.java \\\n+classpath/gnu/java/security/jce/hash/MD2Spi.java \\\n+classpath/gnu/java/security/jce/hash/MD4Spi.java \\\n+classpath/gnu/java/security/jce/hash/MD5Spi.java \\\n+classpath/gnu/java/security/jce/hash/MessageDigestAdapter.java \\\n+classpath/gnu/java/security/jce/hash/RipeMD128Spi.java \\\n+classpath/gnu/java/security/jce/hash/RipeMD160Spi.java \\\n+classpath/gnu/java/security/jce/hash/Sha160Spi.java \\\n+classpath/gnu/java/security/jce/hash/Sha256Spi.java \\\n+classpath/gnu/java/security/jce/hash/Sha384Spi.java \\\n+classpath/gnu/java/security/jce/hash/Sha512Spi.java \\\n+classpath/gnu/java/security/jce/hash/TigerSpi.java \\\n+classpath/gnu/java/security/jce/hash/WhirlpoolSpi.java\n+\n+gnu_java_security_jce_hash_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_jce_hash_source_files)))\n+gnu_java_security_jce_prng_source_files = \\\n+classpath/gnu/java/security/jce/prng/HavalRandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/MD2RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/MD4RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/MD5RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/RipeMD128RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/RipeMD160RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/SecureRandomAdapter.java \\\n+classpath/gnu/java/security/jce/prng/Sha160RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/Sha256RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/Sha384RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/Sha512RandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/TigerRandomSpi.java \\\n+classpath/gnu/java/security/jce/prng/WhirlpoolRandomSpi.java\n+\n+gnu_java_security_jce_prng_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_jce_prng_source_files)))\n+gnu_java_security_jce_sig_source_files = \\\n+classpath/gnu/java/security/jce/sig/DSSKeyFactory.java \\\n+classpath/gnu/java/security/jce/sig/DSSKeyPairGeneratorSpi.java \\\n+classpath/gnu/java/security/jce/sig/DSSParameters.java \\\n+classpath/gnu/java/security/jce/sig/DSSParametersGenerator.java \\\n+classpath/gnu/java/security/jce/sig/DSSRawSignatureSpi.java \\\n+classpath/gnu/java/security/jce/sig/EncodedKeyFactory.java \\\n+classpath/gnu/java/security/jce/sig/KeyPairGeneratorAdapter.java \\\n+classpath/gnu/java/security/jce/sig/MD2withRSA.java \\\n+classpath/gnu/java/security/jce/sig/MD5withRSA.java \\\n+classpath/gnu/java/security/jce/sig/RSAKeyFactory.java \\\n+classpath/gnu/java/security/jce/sig/RSAKeyPairGeneratorSpi.java \\\n+classpath/gnu/java/security/jce/sig/RSAPSSRawSignatureSpi.java \\\n+classpath/gnu/java/security/jce/sig/SHA160withDSS.java \\\n+classpath/gnu/java/security/jce/sig/SHA160withRSA.java \\\n+classpath/gnu/java/security/jce/sig/SHA256withRSA.java \\\n+classpath/gnu/java/security/jce/sig/SHA384withRSA.java \\\n+classpath/gnu/java/security/jce/sig/SHA512withRSA.java \\\n+classpath/gnu/java/security/jce/sig/SignatureAdapter.java\n+\n+gnu_java_security_jce_sig_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_jce_sig_source_files)))\n+gnu_java_security_key_source_files = \\\n+classpath/gnu/java/security/key/IKeyPairCodec.java \\\n+classpath/gnu/java/security/key/IKeyPairGenerator.java \\\n+classpath/gnu/java/security/key/KeyPairCodecFactory.java \\\n+classpath/gnu/java/security/key/KeyPairGeneratorFactory.java\n+\n+gnu_java_security_key_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_key_source_files)))\n+gnu_java_security_key_dss_source_files = \\\n+classpath/gnu/java/security/key/dss/DSSKey.java \\\n+classpath/gnu/java/security/key/dss/DSSKeyPairGenerator.java \\\n+classpath/gnu/java/security/key/dss/DSSKeyPairPKCS8Codec.java \\\n+classpath/gnu/java/security/key/dss/DSSKeyPairRawCodec.java \\\n+classpath/gnu/java/security/key/dss/DSSKeyPairX509Codec.java \\\n+classpath/gnu/java/security/key/dss/DSSPrivateKey.java \\\n+classpath/gnu/java/security/key/dss/DSSPublicKey.java \\\n+classpath/gnu/java/security/key/dss/FIPS186.java\n+\n+gnu_java_security_key_dss_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_key_dss_source_files)))\n+gnu_java_security_key_rsa_source_files = \\\n+classpath/gnu/java/security/key/rsa/GnuRSAKey.java \\\n+classpath/gnu/java/security/key/rsa/GnuRSAPrivateKey.java \\\n+classpath/gnu/java/security/key/rsa/GnuRSAPublicKey.java \\\n+classpath/gnu/java/security/key/rsa/RSAKeyPairGenerator.java \\\n+classpath/gnu/java/security/key/rsa/RSAKeyPairPKCS8Codec.java \\\n+classpath/gnu/java/security/key/rsa/RSAKeyPairRawCodec.java \\\n+classpath/gnu/java/security/key/rsa/RSAKeyPairX509Codec.java\n+\n+gnu_java_security_key_rsa_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_key_rsa_source_files)))\n gnu_java_security_pkcs_source_files = \\\n classpath/gnu/java/security/pkcs/PKCS7SignedData.java \\\n classpath/gnu/java/security/pkcs/SignerInfo.java\n \n gnu_java_security_pkcs_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_pkcs_source_files)))\n+gnu_java_security_prng_source_files = \\\n+classpath/gnu/java/security/prng/BasePRNG.java \\\n+classpath/gnu/java/security/prng/EntropySource.java \\\n+classpath/gnu/java/security/prng/IRandom.java \\\n+classpath/gnu/java/security/prng/LimitReachedException.java \\\n+classpath/gnu/java/security/prng/MDGenerator.java \\\n+classpath/gnu/java/security/prng/PRNGFactory.java \\\n+classpath/gnu/java/security/prng/RandomEvent.java \\\n+classpath/gnu/java/security/prng/RandomEventListener.java\n+\n+gnu_java_security_prng_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_prng_source_files)))\n gnu_java_security_provider_source_files = \\\n classpath/gnu/java/security/provider/CollectionCertStoreImpl.java \\\n-classpath/gnu/java/security/provider/DSAKeyFactory.java \\\n-classpath/gnu/java/security/provider/DSAKeyPairGenerator.java \\\n classpath/gnu/java/security/provider/DSAParameterGenerator.java \\\n-classpath/gnu/java/security/provider/DSAParameters.java \\\n-classpath/gnu/java/security/provider/DSASignature.java \\\n classpath/gnu/java/security/provider/DefaultPolicy.java \\\n-classpath/gnu/java/security/provider/DiffieHellmanKeyFactoryImpl.java \\\n-classpath/gnu/java/security/provider/DiffieHellmanKeyPairGeneratorImpl.java \\\n-classpath/gnu/java/security/provider/EncodedKeyFactory.java \\\n classpath/gnu/java/security/provider/Gnu.java \\\n-classpath/gnu/java/security/provider/GnuDHPublicKey.java \\\n-classpath/gnu/java/security/provider/GnuDSAPrivateKey.java \\\n-classpath/gnu/java/security/provider/GnuDSAPublicKey.java \\\n-classpath/gnu/java/security/provider/GnuRSAPrivateKey.java \\\n-classpath/gnu/java/security/provider/GnuRSAPublicKey.java \\\n-classpath/gnu/java/security/provider/MD2withRSA.java \\\n-classpath/gnu/java/security/provider/MD4withRSA.java \\\n-classpath/gnu/java/security/provider/MD5.java \\\n-classpath/gnu/java/security/provider/MD5withRSA.java \\\n classpath/gnu/java/security/provider/PKIXCertPathValidatorImpl.java \\\n-classpath/gnu/java/security/provider/RSA.java \\\n-classpath/gnu/java/security/provider/RSAKeyFactory.java \\\n-classpath/gnu/java/security/provider/SHA.java \\\n-classpath/gnu/java/security/provider/SHA1PRNG.java \\\n-classpath/gnu/java/security/provider/SHA1withRSA.java \\\n classpath/gnu/java/security/provider/X509CertificateFactory.java\n \n gnu_java_security_provider_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_provider_source_files)))\n+gnu_java_security_sig_source_files = \\\n+classpath/gnu/java/security/sig/BaseSignature.java \\\n+classpath/gnu/java/security/sig/ISignature.java \\\n+classpath/gnu/java/security/sig/ISignatureCodec.java \\\n+classpath/gnu/java/security/sig/SignatureCodecFactory.java \\\n+classpath/gnu/java/security/sig/SignatureFactory.java\n+\n+gnu_java_security_sig_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_sig_source_files)))\n+gnu_java_security_sig_dss_source_files = \\\n+classpath/gnu/java/security/sig/dss/DSSSignature.java \\\n+classpath/gnu/java/security/sig/dss/DSSSignatureRawCodec.java \\\n+classpath/gnu/java/security/sig/dss/DSSSignatureX509Codec.java\n+\n+gnu_java_security_sig_dss_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_sig_dss_source_files)))\n+gnu_java_security_sig_rsa_source_files = \\\n+classpath/gnu/java/security/sig/rsa/EME_PKCS1_V1_5.java \\\n+classpath/gnu/java/security/sig/rsa/EMSA_PKCS1_V1_5.java \\\n+classpath/gnu/java/security/sig/rsa/EMSA_PSS.java \\\n+classpath/gnu/java/security/sig/rsa/RSA.java \\\n+classpath/gnu/java/security/sig/rsa/RSAPKCS1V1_5Signature.java \\\n+classpath/gnu/java/security/sig/rsa/RSAPKCS1V1_5SignatureRawCodec.java \\\n+classpath/gnu/java/security/sig/rsa/RSAPKCS1V1_5SignatureX509Codec.java \\\n+classpath/gnu/java/security/sig/rsa/RSAPSSSignature.java \\\n+classpath/gnu/java/security/sig/rsa/RSAPSSSignatureRawCodec.java \\\n+classpath/gnu/java/security/sig/rsa/RSASignatureFactory.java\n+\n+gnu_java_security_sig_rsa_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_sig_rsa_source_files)))\n gnu_java_security_util_source_files = \\\n-classpath/gnu/java/security/util/Prime.java\n+classpath/gnu/java/security/util/Base64.java \\\n+classpath/gnu/java/security/util/DerUtil.java \\\n+classpath/gnu/java/security/util/ExpirableObject.java \\\n+classpath/gnu/java/security/util/FormatUtil.java \\\n+classpath/gnu/java/security/util/PRNG.java \\\n+classpath/gnu/java/security/util/Prime.java \\\n+classpath/gnu/java/security/util/Prime2.java \\\n+classpath/gnu/java/security/util/Sequence.java \\\n+classpath/gnu/java/security/util/SimpleList.java \\\n+classpath/gnu/java/security/util/Util.java\n \n gnu_java_security_util_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_security_util_source_files)))\n gnu_java_security_x509_source_files = \\\n@@ -1926,19 +2077,349 @@ classpath/gnu/java/util/WeakIdentityHashMap.java\n \n gnu_java_util_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_util_source_files)))\n gnu_java_util_prefs_source_files = \\\n+classpath/gnu/java/util/prefs/EventDispatcher.java \\\n classpath/gnu/java/util/prefs/FileBasedFactory.java \\\n+classpath/gnu/java/util/prefs/FileBasedPreferences.java \\\n classpath/gnu/java/util/prefs/MemoryBasedFactory.java \\\n classpath/gnu/java/util/prefs/MemoryBasedPreferences.java \\\n classpath/gnu/java/util/prefs/NodeReader.java \\\n classpath/gnu/java/util/prefs/NodeWriter.java\n \n gnu_java_util_prefs_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_util_prefs_source_files)))\n gnu_javax_crypto_source_files = \\\n-classpath/gnu/javax/crypto/DiffieHellmanImpl.java \\\n-classpath/gnu/javax/crypto/GnuDHPrivateKey.java \\\n classpath/gnu/javax/crypto/RSACipherImpl.java\n \n gnu_javax_crypto_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_source_files)))\n+gnu_javax_crypto_assembly_source_files = \\\n+classpath/gnu/javax/crypto/assembly/Assembly.java \\\n+classpath/gnu/javax/crypto/assembly/Cascade.java \\\n+classpath/gnu/javax/crypto/assembly/CascadeStage.java \\\n+classpath/gnu/javax/crypto/assembly/CascadeTransformer.java \\\n+classpath/gnu/javax/crypto/assembly/DeflateTransformer.java \\\n+classpath/gnu/javax/crypto/assembly/Direction.java \\\n+classpath/gnu/javax/crypto/assembly/LoopbackTransformer.java \\\n+classpath/gnu/javax/crypto/assembly/ModeStage.java \\\n+classpath/gnu/javax/crypto/assembly/Operation.java \\\n+classpath/gnu/javax/crypto/assembly/PaddingTransformer.java \\\n+classpath/gnu/javax/crypto/assembly/Stage.java \\\n+classpath/gnu/javax/crypto/assembly/Transformer.java \\\n+classpath/gnu/javax/crypto/assembly/TransformerException.java\n+\n+gnu_javax_crypto_assembly_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_assembly_source_files)))\n+gnu_javax_crypto_cipher_source_files = \\\n+classpath/gnu/javax/crypto/cipher/Anubis.java \\\n+classpath/gnu/javax/crypto/cipher/BaseCipher.java \\\n+classpath/gnu/javax/crypto/cipher/Blowfish.java \\\n+classpath/gnu/javax/crypto/cipher/Cast5.java \\\n+classpath/gnu/javax/crypto/cipher/CipherFactory.java \\\n+classpath/gnu/javax/crypto/cipher/DES.java \\\n+classpath/gnu/javax/crypto/cipher/IBlockCipher.java \\\n+classpath/gnu/javax/crypto/cipher/IBlockCipherSpi.java \\\n+classpath/gnu/javax/crypto/cipher/Khazad.java \\\n+classpath/gnu/javax/crypto/cipher/NullCipher.java \\\n+classpath/gnu/javax/crypto/cipher/Rijndael.java \\\n+classpath/gnu/javax/crypto/cipher/Serpent.java \\\n+classpath/gnu/javax/crypto/cipher/Square.java \\\n+classpath/gnu/javax/crypto/cipher/TripleDES.java \\\n+classpath/gnu/javax/crypto/cipher/Twofish.java \\\n+classpath/gnu/javax/crypto/cipher/WeakKeyException.java\n+\n+gnu_javax_crypto_cipher_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_cipher_source_files)))\n+gnu_javax_crypto_jce_source_files = \\\n+classpath/gnu/javax/crypto/jce/DiffieHellmanImpl.java \\\n+classpath/gnu/javax/crypto/jce/GnuCrypto.java \\\n+classpath/gnu/javax/crypto/jce/GnuSasl.java \\\n+classpath/gnu/javax/crypto/jce/PBKDF2SecretKeyFactory.java\n+\n+gnu_javax_crypto_jce_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_source_files)))\n+gnu_javax_crypto_jce_cipher_source_files = \\\n+classpath/gnu/javax/crypto/jce/cipher/AESSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/ARCFourSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/AnubisSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/BlowfishSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/Cast5Spi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/CipherAdapter.java \\\n+classpath/gnu/javax/crypto/jce/cipher/DESSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/KhazadSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/NullCipherSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/PBES2.java \\\n+classpath/gnu/javax/crypto/jce/cipher/RijndaelSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/SerpentSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/SquareSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/TripleDESSpi.java \\\n+classpath/gnu/javax/crypto/jce/cipher/TwofishSpi.java\n+\n+gnu_javax_crypto_jce_cipher_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_cipher_source_files)))\n+gnu_javax_crypto_jce_key_source_files = \\\n+classpath/gnu/javax/crypto/jce/key/AnubisKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/AnubisSecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/BlowfishKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/BlowfishSecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/Cast5KeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/Cast5SecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/DESKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/DESSecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/DESedeSecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/KhazadKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/KhazadSecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/RijndaelKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/RijndaelSecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/SecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/SecretKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/SerpentKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/SerpentSecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/SquareKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/SquareSecretKeyFactoryImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/TripleDESKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/TwofishKeyGeneratorImpl.java \\\n+classpath/gnu/javax/crypto/jce/key/TwofishSecretKeyFactoryImpl.java\n+\n+gnu_javax_crypto_jce_key_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_key_source_files)))\n+gnu_javax_crypto_jce_keyring_source_files = \\\n+classpath/gnu/javax/crypto/jce/keyring/GnuKeyring.java\n+\n+gnu_javax_crypto_jce_keyring_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_keyring_source_files)))\n+gnu_javax_crypto_jce_mac_source_files = \\\n+classpath/gnu/javax/crypto/jce/mac/HMacHavalSpi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacMD2Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacMD4Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacMD5Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacRipeMD128Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacRipeMD160Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacSHA160Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacSHA256Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacSHA384Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacSHA512Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacTigerSpi.java \\\n+classpath/gnu/javax/crypto/jce/mac/HMacWhirlpoolSpi.java \\\n+classpath/gnu/javax/crypto/jce/mac/MacAdapter.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacAnubisImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacBlowfishImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacCast5Impl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacDESImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacKhazadImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacRijndaelImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacSerpentImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacSquareImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacTripleDESImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/OMacTwofishImpl.java \\\n+classpath/gnu/javax/crypto/jce/mac/TMMH16Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/UHash32Spi.java \\\n+classpath/gnu/javax/crypto/jce/mac/UMac32Spi.java\n+\n+gnu_javax_crypto_jce_mac_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_mac_source_files)))\n+gnu_javax_crypto_jce_params_source_files = \\\n+classpath/gnu/javax/crypto/jce/params/BlockCipherParameters.java \\\n+classpath/gnu/javax/crypto/jce/params/DEREncodingException.java \\\n+classpath/gnu/javax/crypto/jce/params/DERReader.java \\\n+classpath/gnu/javax/crypto/jce/params/DERWriter.java\n+\n+gnu_javax_crypto_jce_params_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_params_source_files)))\n+gnu_javax_crypto_jce_prng_source_files = \\\n+classpath/gnu/javax/crypto/jce/prng/ARCFourRandomSpi.java \\\n+classpath/gnu/javax/crypto/jce/prng/CSPRNGSpi.java \\\n+classpath/gnu/javax/crypto/jce/prng/FortunaImpl.java \\\n+classpath/gnu/javax/crypto/jce/prng/ICMRandomSpi.java \\\n+classpath/gnu/javax/crypto/jce/prng/UMacRandomSpi.java\n+\n+gnu_javax_crypto_jce_prng_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_prng_source_files)))\n+gnu_javax_crypto_jce_sig_source_files = \\\n+classpath/gnu/javax/crypto/jce/sig/DHKeyFactory.java \\\n+classpath/gnu/javax/crypto/jce/sig/DHKeyPairGeneratorSpi.java \\\n+classpath/gnu/javax/crypto/jce/sig/DHParameters.java \\\n+classpath/gnu/javax/crypto/jce/sig/DHParametersGenerator.java\n+\n+gnu_javax_crypto_jce_sig_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_sig_source_files)))\n+gnu_javax_crypto_jce_spec_source_files = \\\n+classpath/gnu/javax/crypto/jce/spec/BlockCipherParameterSpec.java \\\n+classpath/gnu/javax/crypto/jce/spec/TMMHParameterSpec.java \\\n+classpath/gnu/javax/crypto/jce/spec/UMac32ParameterSpec.java\n+\n+gnu_javax_crypto_jce_spec_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_jce_spec_source_files)))\n+gnu_javax_crypto_key_source_files = \\\n+classpath/gnu/javax/crypto/key/BaseKeyAgreementParty.java \\\n+classpath/gnu/javax/crypto/key/GnuSecretKey.java \\\n+classpath/gnu/javax/crypto/key/IKeyAgreementParty.java \\\n+classpath/gnu/javax/crypto/key/IncomingMessage.java \\\n+classpath/gnu/javax/crypto/key/KeyAgreementException.java \\\n+classpath/gnu/javax/crypto/key/KeyAgreementFactory.java \\\n+classpath/gnu/javax/crypto/key/OutgoingMessage.java\n+\n+gnu_javax_crypto_key_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_key_source_files)))\n+gnu_javax_crypto_key_dh_source_files = \\\n+classpath/gnu/javax/crypto/key/dh/DHKeyPairPKCS8Codec.java \\\n+classpath/gnu/javax/crypto/key/dh/DHKeyPairRawCodec.java \\\n+classpath/gnu/javax/crypto/key/dh/DHKeyPairX509Codec.java \\\n+classpath/gnu/javax/crypto/key/dh/DiffieHellmanKeyAgreement.java \\\n+classpath/gnu/javax/crypto/key/dh/DiffieHellmanReceiver.java \\\n+classpath/gnu/javax/crypto/key/dh/DiffieHellmanSender.java \\\n+classpath/gnu/javax/crypto/key/dh/ElGamalKeyAgreement.java \\\n+classpath/gnu/javax/crypto/key/dh/ElGamalReceiver.java \\\n+classpath/gnu/javax/crypto/key/dh/ElGamalSender.java \\\n+classpath/gnu/javax/crypto/key/dh/GnuDHKey.java \\\n+classpath/gnu/javax/crypto/key/dh/GnuDHKeyPairGenerator.java \\\n+classpath/gnu/javax/crypto/key/dh/GnuDHPrivateKey.java \\\n+classpath/gnu/javax/crypto/key/dh/GnuDHPublicKey.java \\\n+classpath/gnu/javax/crypto/key/dh/RFC2631.java\n+\n+gnu_javax_crypto_key_dh_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_key_dh_source_files)))\n+gnu_javax_crypto_key_srp6_source_files = \\\n+classpath/gnu/javax/crypto/key/srp6/SRP6Host.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRP6KeyAgreement.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRP6SaslClient.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRP6SaslServer.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRP6TLSClient.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRP6TLSServer.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRP6User.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRPAlgorithm.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRPKey.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRPKeyPairGenerator.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRPKeyPairRawCodec.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRPPrivateKey.java \\\n+classpath/gnu/javax/crypto/key/srp6/SRPPublicKey.java\n+\n+gnu_javax_crypto_key_srp6_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_key_srp6_source_files)))\n+gnu_javax_crypto_keyring_source_files = \\\n+classpath/gnu/javax/crypto/keyring/AuthenticatedEntry.java \\\n+classpath/gnu/javax/crypto/keyring/BaseKeyring.java \\\n+classpath/gnu/javax/crypto/keyring/BinaryDataEntry.java \\\n+classpath/gnu/javax/crypto/keyring/CertPathEntry.java \\\n+classpath/gnu/javax/crypto/keyring/CertificateEntry.java \\\n+classpath/gnu/javax/crypto/keyring/CompressedEntry.java \\\n+classpath/gnu/javax/crypto/keyring/EncryptedEntry.java \\\n+classpath/gnu/javax/crypto/keyring/Entry.java \\\n+classpath/gnu/javax/crypto/keyring/EnvelopeEntry.java \\\n+classpath/gnu/javax/crypto/keyring/GnuPrivateKeyring.java \\\n+classpath/gnu/javax/crypto/keyring/GnuPublicKeyring.java \\\n+classpath/gnu/javax/crypto/keyring/IKeyring.java \\\n+classpath/gnu/javax/crypto/keyring/IPrivateKeyring.java \\\n+classpath/gnu/javax/crypto/keyring/IPublicKeyring.java \\\n+classpath/gnu/javax/crypto/keyring/MalformedKeyringException.java \\\n+classpath/gnu/javax/crypto/keyring/MaskableEnvelopeEntry.java \\\n+classpath/gnu/javax/crypto/keyring/MeteredInputStream.java \\\n+classpath/gnu/javax/crypto/keyring/PasswordAuthenticatedEntry.java \\\n+classpath/gnu/javax/crypto/keyring/PasswordEncryptedEntry.java \\\n+classpath/gnu/javax/crypto/keyring/PasswordProtectedEntry.java \\\n+classpath/gnu/javax/crypto/keyring/PrimitiveEntry.java \\\n+classpath/gnu/javax/crypto/keyring/PrivateKeyEntry.java \\\n+classpath/gnu/javax/crypto/keyring/Properties.java \\\n+classpath/gnu/javax/crypto/keyring/PublicKeyEntry.java\n+\n+gnu_javax_crypto_keyring_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_keyring_source_files)))\n+gnu_javax_crypto_mac_source_files = \\\n+classpath/gnu/javax/crypto/mac/BaseMac.java \\\n+classpath/gnu/javax/crypto/mac/HMac.java \\\n+classpath/gnu/javax/crypto/mac/HMacFactory.java \\\n+classpath/gnu/javax/crypto/mac/IMac.java \\\n+classpath/gnu/javax/crypto/mac/MacFactory.java \\\n+classpath/gnu/javax/crypto/mac/MacInputStream.java \\\n+classpath/gnu/javax/crypto/mac/MacOutputStream.java \\\n+classpath/gnu/javax/crypto/mac/OMAC.java \\\n+classpath/gnu/javax/crypto/mac/TMMH16.java \\\n+classpath/gnu/javax/crypto/mac/UHash32.java \\\n+classpath/gnu/javax/crypto/mac/UMac32.java\n+\n+gnu_javax_crypto_mac_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_mac_source_files)))\n+gnu_javax_crypto_mode_source_files = \\\n+classpath/gnu/javax/crypto/mode/BaseMode.java \\\n+classpath/gnu/javax/crypto/mode/CBC.java \\\n+classpath/gnu/javax/crypto/mode/CFB.java \\\n+classpath/gnu/javax/crypto/mode/CTR.java \\\n+classpath/gnu/javax/crypto/mode/EAX.java \\\n+classpath/gnu/javax/crypto/mode/ECB.java \\\n+classpath/gnu/javax/crypto/mode/IAuthenticatedMode.java \\\n+classpath/gnu/javax/crypto/mode/ICM.java \\\n+classpath/gnu/javax/crypto/mode/IMode.java \\\n+classpath/gnu/javax/crypto/mode/ModeFactory.java \\\n+classpath/gnu/javax/crypto/mode/OFB.java\n+\n+gnu_javax_crypto_mode_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_mode_source_files)))\n+gnu_javax_crypto_pad_source_files = \\\n+classpath/gnu/javax/crypto/pad/BasePad.java \\\n+classpath/gnu/javax/crypto/pad/IPad.java \\\n+classpath/gnu/javax/crypto/pad/PKCS1_V1_5.java \\\n+classpath/gnu/javax/crypto/pad/PKCS7.java \\\n+classpath/gnu/javax/crypto/pad/PadFactory.java \\\n+classpath/gnu/javax/crypto/pad/SSL3.java \\\n+classpath/gnu/javax/crypto/pad/TBC.java \\\n+classpath/gnu/javax/crypto/pad/TLS1.java \\\n+classpath/gnu/javax/crypto/pad/WrongPaddingException.java\n+\n+gnu_javax_crypto_pad_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_pad_source_files)))\n+gnu_javax_crypto_prng_source_files = \\\n+classpath/gnu/javax/crypto/prng/ARCFour.java \\\n+classpath/gnu/javax/crypto/prng/CSPRNG.java \\\n+classpath/gnu/javax/crypto/prng/Fortuna.java \\\n+classpath/gnu/javax/crypto/prng/ICMGenerator.java \\\n+classpath/gnu/javax/crypto/prng/IPBE.java \\\n+classpath/gnu/javax/crypto/prng/PBKDF2.java \\\n+classpath/gnu/javax/crypto/prng/PRNGFactory.java \\\n+classpath/gnu/javax/crypto/prng/UMacGenerator.java\n+\n+gnu_javax_crypto_prng_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_prng_source_files)))\n+gnu_javax_crypto_sasl_source_files = \\\n+classpath/gnu/javax/crypto/sasl/AuthInfo.java \\\n+classpath/gnu/javax/crypto/sasl/AuthInfoProviderFactory.java \\\n+classpath/gnu/javax/crypto/sasl/ClientFactory.java \\\n+classpath/gnu/javax/crypto/sasl/ClientMechanism.java \\\n+classpath/gnu/javax/crypto/sasl/ConfidentialityException.java \\\n+classpath/gnu/javax/crypto/sasl/IAuthInfoProvider.java \\\n+classpath/gnu/javax/crypto/sasl/IAuthInfoProviderFactory.java \\\n+classpath/gnu/javax/crypto/sasl/IllegalMechanismStateException.java \\\n+classpath/gnu/javax/crypto/sasl/InputBuffer.java \\\n+classpath/gnu/javax/crypto/sasl/IntegrityException.java \\\n+classpath/gnu/javax/crypto/sasl/NoSuchMechanismException.java \\\n+classpath/gnu/javax/crypto/sasl/NoSuchUserException.java \\\n+classpath/gnu/javax/crypto/sasl/OutputBuffer.java \\\n+classpath/gnu/javax/crypto/sasl/SaslEncodingException.java \\\n+classpath/gnu/javax/crypto/sasl/SaslInputStream.java \\\n+classpath/gnu/javax/crypto/sasl/SaslOutputStream.java \\\n+classpath/gnu/javax/crypto/sasl/SaslUtil.java \\\n+classpath/gnu/javax/crypto/sasl/ServerFactory.java \\\n+classpath/gnu/javax/crypto/sasl/ServerMechanism.java \\\n+classpath/gnu/javax/crypto/sasl/UserAlreadyExistsException.java\n+\n+gnu_javax_crypto_sasl_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_sasl_source_files)))\n+gnu_javax_crypto_sasl_anonymous_source_files = \\\n+classpath/gnu/javax/crypto/sasl/anonymous/AnonymousClient.java \\\n+classpath/gnu/javax/crypto/sasl/anonymous/AnonymousServer.java \\\n+classpath/gnu/javax/crypto/sasl/anonymous/AnonymousUtil.java\n+\n+gnu_javax_crypto_sasl_anonymous_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_sasl_anonymous_source_files)))\n+gnu_javax_crypto_sasl_crammd5_source_files = \\\n+classpath/gnu/javax/crypto/sasl/crammd5/CramMD5AuthInfoProvider.java \\\n+classpath/gnu/javax/crypto/sasl/crammd5/CramMD5Client.java \\\n+classpath/gnu/javax/crypto/sasl/crammd5/CramMD5Registry.java \\\n+classpath/gnu/javax/crypto/sasl/crammd5/CramMD5Server.java \\\n+classpath/gnu/javax/crypto/sasl/crammd5/CramMD5Util.java \\\n+classpath/gnu/javax/crypto/sasl/crammd5/PasswordFile.java\n+\n+gnu_javax_crypto_sasl_crammd5_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_sasl_crammd5_source_files)))\n+gnu_javax_crypto_sasl_plain_source_files = \\\n+classpath/gnu/javax/crypto/sasl/plain/PasswordFile.java \\\n+classpath/gnu/javax/crypto/sasl/plain/PlainAuthInfoProvider.java \\\n+classpath/gnu/javax/crypto/sasl/plain/PlainClient.java \\\n+classpath/gnu/javax/crypto/sasl/plain/PlainRegistry.java \\\n+classpath/gnu/javax/crypto/sasl/plain/PlainServer.java\n+\n+gnu_javax_crypto_sasl_plain_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_sasl_plain_source_files)))\n+gnu_javax_crypto_sasl_srp_source_files = \\\n+classpath/gnu/javax/crypto/sasl/srp/CALG.java \\\n+classpath/gnu/javax/crypto/sasl/srp/ClientStore.java \\\n+classpath/gnu/javax/crypto/sasl/srp/IALG.java \\\n+classpath/gnu/javax/crypto/sasl/srp/KDF.java \\\n+classpath/gnu/javax/crypto/sasl/srp/PasswordFile.java \\\n+classpath/gnu/javax/crypto/sasl/srp/SRP.java \\\n+classpath/gnu/javax/crypto/sasl/srp/SRPAuthInfoProvider.java \\\n+classpath/gnu/javax/crypto/sasl/srp/SRPClient.java \\\n+classpath/gnu/javax/crypto/sasl/srp/SRPRegistry.java \\\n+classpath/gnu/javax/crypto/sasl/srp/SRPServer.java \\\n+classpath/gnu/javax/crypto/sasl/srp/SecurityContext.java \\\n+classpath/gnu/javax/crypto/sasl/srp/ServerStore.java \\\n+classpath/gnu/javax/crypto/sasl/srp/StoreEntry.java\n+\n+gnu_javax_crypto_sasl_srp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_crypto_sasl_srp_source_files)))\n gnu_javax_imageio_bmp_source_files = \\\n classpath/gnu/javax/imageio/bmp/BMPDecoder.java \\\n classpath/gnu/javax/imageio/bmp/BMPException.java \\\n@@ -1956,6 +2437,80 @@ classpath/gnu/javax/imageio/bmp/DecodeRLE4.java \\\n classpath/gnu/javax/imageio/bmp/DecodeRLE8.java\n \n gnu_javax_imageio_bmp_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_bmp_source_files)))\n+gnu_javax_net_ssl_source_files = \\\n+classpath/gnu/javax/net/ssl/Base64.java \\\n+classpath/gnu/javax/net/ssl/EntropySource.java \\\n+classpath/gnu/javax/net/ssl/NullManagerParameters.java \\\n+classpath/gnu/javax/net/ssl/PrivateCredentials.java \\\n+classpath/gnu/javax/net/ssl/SRPManagerParameters.java \\\n+classpath/gnu/javax/net/ssl/SRPTrustManager.java \\\n+classpath/gnu/javax/net/ssl/StaticTrustAnchors.java\n+\n+gnu_javax_net_ssl_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_net_ssl_source_files)))\n+gnu_javax_net_ssl_provider_source_files = \\\n+classpath/gnu/javax/net/ssl/provider/Alert.java \\\n+classpath/gnu/javax/net/ssl/provider/AlertException.java \\\n+classpath/gnu/javax/net/ssl/provider/Certificate.java \\\n+classpath/gnu/javax/net/ssl/provider/CertificateRequest.java \\\n+classpath/gnu/javax/net/ssl/provider/CertificateType.java \\\n+classpath/gnu/javax/net/ssl/provider/CertificateVerify.java \\\n+classpath/gnu/javax/net/ssl/provider/CipherSuite.java \\\n+classpath/gnu/javax/net/ssl/provider/ClientHello.java \\\n+classpath/gnu/javax/net/ssl/provider/ClientKeyExchange.java \\\n+classpath/gnu/javax/net/ssl/provider/CompressionMethod.java \\\n+classpath/gnu/javax/net/ssl/provider/Constructed.java \\\n+classpath/gnu/javax/net/ssl/provider/ContentType.java \\\n+classpath/gnu/javax/net/ssl/provider/Context.java \\\n+classpath/gnu/javax/net/ssl/provider/DiffieHellman.java \\\n+classpath/gnu/javax/net/ssl/provider/DigestInputStream.java \\\n+classpath/gnu/javax/net/ssl/provider/DigestOutputStream.java \\\n+classpath/gnu/javax/net/ssl/provider/Enumerated.java \\\n+classpath/gnu/javax/net/ssl/provider/Extension.java \\\n+classpath/gnu/javax/net/ssl/provider/Extensions.java \\\n+classpath/gnu/javax/net/ssl/provider/Finished.java \\\n+classpath/gnu/javax/net/ssl/provider/GNUSecurityParameters.java \\\n+classpath/gnu/javax/net/ssl/provider/Handshake.java \\\n+classpath/gnu/javax/net/ssl/provider/JCESecurityParameters.java \\\n+classpath/gnu/javax/net/ssl/provider/JDBCSessionContext.java \\\n+classpath/gnu/javax/net/ssl/provider/Jessie.java \\\n+classpath/gnu/javax/net/ssl/provider/JessieDHPrivateKey.java \\\n+classpath/gnu/javax/net/ssl/provider/JessieDHPublicKey.java \\\n+classpath/gnu/javax/net/ssl/provider/JessieRSAPrivateKey.java \\\n+classpath/gnu/javax/net/ssl/provider/JessieRSAPublicKey.java \\\n+classpath/gnu/javax/net/ssl/provider/KeyPool.java \\\n+classpath/gnu/javax/net/ssl/provider/MacException.java \\\n+classpath/gnu/javax/net/ssl/provider/OverflowException.java \\\n+classpath/gnu/javax/net/ssl/provider/ProtocolVersion.java \\\n+classpath/gnu/javax/net/ssl/provider/Random.java \\\n+classpath/gnu/javax/net/ssl/provider/RecordInput.java \\\n+classpath/gnu/javax/net/ssl/provider/RecordInputStream.java \\\n+classpath/gnu/javax/net/ssl/provider/RecordOutputStream.java \\\n+classpath/gnu/javax/net/ssl/provider/RecordingInputStream.java \\\n+classpath/gnu/javax/net/ssl/provider/SRPTrustManagerFactory.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLHMac.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLRSASignature.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLRandom.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLServerSocket.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLServerSocketFactory.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLSocket.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLSocketFactory.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLSocketInputStream.java \\\n+classpath/gnu/javax/net/ssl/provider/SSLSocketOutputStream.java \\\n+classpath/gnu/javax/net/ssl/provider/SecurityParameters.java \\\n+classpath/gnu/javax/net/ssl/provider/ServerHello.java \\\n+classpath/gnu/javax/net/ssl/provider/ServerKeyExchange.java \\\n+classpath/gnu/javax/net/ssl/provider/Session.java \\\n+classpath/gnu/javax/net/ssl/provider/SessionContext.java \\\n+classpath/gnu/javax/net/ssl/provider/Signature.java \\\n+classpath/gnu/javax/net/ssl/provider/SynchronizedRandom.java \\\n+classpath/gnu/javax/net/ssl/provider/TLSHMac.java \\\n+classpath/gnu/javax/net/ssl/provider/TLSRandom.java \\\n+classpath/gnu/javax/net/ssl/provider/Util.java \\\n+classpath/gnu/javax/net/ssl/provider/X509KeyManagerFactory.java \\\n+classpath/gnu/javax/net/ssl/provider/X509TrustManagerFactory.java \\\n+classpath/gnu/javax/net/ssl/provider/XMLSessionContext.java\n+\n+gnu_javax_net_ssl_provider_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_net_ssl_provider_source_files)))\n gnu_javax_rmi_source_files = \\\n classpath/gnu/javax/rmi/CORBA/CorbaInput.java \\\n classpath/gnu/javax/rmi/CORBA/CorbaOutput.java \\\n@@ -1969,6 +2524,25 @@ classpath/gnu/javax/rmi/CORBA/TieTargetRecord.java \\\n classpath/gnu/javax/rmi/CORBA/UtilDelegateImpl.java \\\n classpath/gnu/javax/rmi/CORBA/ValueHandlerDelegateImpl.java\n \n+gnu_javax_security_auth_source_files = \\\n+classpath/gnu/javax/security/auth/Password.java\n+\n+gnu_javax_security_auth_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_security_auth_source_files)))\n+gnu_javax_security_auth_callback_source_files = \\\n+classpath/gnu/javax/security/auth/callback/AWTCallbackHandler.java \\\n+classpath/gnu/javax/security/auth/callback/AbstractCallbackHandler.java \\\n+classpath/gnu/javax/security/auth/callback/ConsoleCallbackHandler.java \\\n+classpath/gnu/javax/security/auth/callback/DefaultCallbackHandler.java \\\n+classpath/gnu/javax/security/auth/callback/GnuCallbacks.java \\\n+classpath/gnu/javax/security/auth/callback/SwingCallbackHandler.java\n+\n+gnu_javax_security_auth_callback_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_security_auth_callback_source_files)))\n+gnu_javax_security_auth_login_source_files = \\\n+classpath/gnu/javax/security/auth/login/ConfigFileParser.java \\\n+classpath/gnu/javax/security/auth/login/ConfigFileTokenizer.java \\\n+classpath/gnu/javax/security/auth/login/GnuConfiguration.java\n+\n+gnu_javax_security_auth_login_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_security_auth_login_source_files)))\n gnu_javax_sound_midi_source_files = \\\n classpath/gnu/javax/sound/midi/alsa/AlsaInputPortDevice.java \\\n classpath/gnu/javax/sound/midi/alsa/AlsaMidiDeviceProvider.java \\\n@@ -2031,7 +2605,10 @@ classpath/gnu/regexp/RETokenBackRef.java \\\n classpath/gnu/regexp/RETokenChar.java \\\n classpath/gnu/regexp/RETokenEnd.java \\\n classpath/gnu/regexp/RETokenEndSub.java \\\n+classpath/gnu/regexp/RETokenIndependent.java \\\n classpath/gnu/regexp/RETokenLookAhead.java \\\n+classpath/gnu/regexp/RETokenLookBehind.java \\\n+classpath/gnu/regexp/RETokenNamedProperty.java \\\n classpath/gnu/regexp/RETokenOneOf.java \\\n classpath/gnu/regexp/RETokenPOSIX.java \\\n classpath/gnu/regexp/RETokenRange.java \\\n@@ -2209,20 +2786,17 @@ classpath/gnu/xml/stream/CommentImpl.java \\\n classpath/gnu/xml/stream/DTDImpl.java \\\n classpath/gnu/xml/stream/EndDocumentImpl.java \\\n classpath/gnu/xml/stream/EndElementImpl.java \\\n-classpath/gnu/xml/stream/EndEntityImpl.java \\\n classpath/gnu/xml/stream/EntityDeclarationImpl.java \\\n classpath/gnu/xml/stream/EntityReferenceImpl.java \\\n classpath/gnu/xml/stream/FilteredEventReader.java \\\n classpath/gnu/xml/stream/FilteredStreamReader.java \\\n-classpath/gnu/xml/stream/LocationImpl.java \\\n classpath/gnu/xml/stream/NamespaceImpl.java \\\n classpath/gnu/xml/stream/NotationDeclarationImpl.java \\\n classpath/gnu/xml/stream/ProcessingInstructionImpl.java \\\n classpath/gnu/xml/stream/SAXParser.java \\\n classpath/gnu/xml/stream/SAXParserFactory.java \\\n classpath/gnu/xml/stream/StartDocumentImpl.java \\\n classpath/gnu/xml/stream/StartElementImpl.java \\\n-classpath/gnu/xml/stream/StartEntityImpl.java \\\n classpath/gnu/xml/stream/UnicodeReader.java \\\n classpath/gnu/xml/stream/XIncludeFilter.java \\\n classpath/gnu/xml/stream/XMLEventAllocatorImpl.java \\\n@@ -2233,7 +2807,6 @@ classpath/gnu/xml/stream/XMLEventWriterImpl.java \\\n classpath/gnu/xml/stream/XMLInputFactoryImpl.java \\\n classpath/gnu/xml/stream/XMLOutputFactoryImpl.java \\\n classpath/gnu/xml/stream/XMLParser.java \\\n-classpath/gnu/xml/stream/XMLStreamReaderImpl.java \\\n classpath/gnu/xml/stream/XMLStreamWriterImpl.java \\\n classpath/gnu/xml/transform/AbstractNumberNode.java \\\n classpath/gnu/xml/transform/ApplyImportsNode.java \\\n@@ -2294,6 +2867,116 @@ classpath/gnu/xml/util/SAXNullTransformerFactory.java \\\n classpath/gnu/xml/util/XCat.java \\\n classpath/gnu/xml/util/XHTMLWriter.java \\\n classpath/gnu/xml/util/XMLWriter.java \\\n+classpath/gnu/xml/validation/datatype/Annotation.java \\\n+classpath/gnu/xml/validation/datatype/AnySimpleType.java \\\n+classpath/gnu/xml/validation/datatype/AnyType.java \\\n+classpath/gnu/xml/validation/datatype/AnyURIType.java \\\n+classpath/gnu/xml/validation/datatype/AtomicSimpleType.java \\\n+classpath/gnu/xml/validation/datatype/Base64BinaryType.java \\\n+classpath/gnu/xml/validation/datatype/BooleanType.java \\\n+classpath/gnu/xml/validation/datatype/ByteType.java \\\n+classpath/gnu/xml/validation/datatype/DateTimeType.java \\\n+classpath/gnu/xml/validation/datatype/DateType.java \\\n+classpath/gnu/xml/validation/datatype/DecimalType.java \\\n+classpath/gnu/xml/validation/datatype/DoubleType.java \\\n+classpath/gnu/xml/validation/datatype/DurationType.java \\\n+classpath/gnu/xml/validation/datatype/EntitiesType.java \\\n+classpath/gnu/xml/validation/datatype/EntityType.java \\\n+classpath/gnu/xml/validation/datatype/EnumerationFacet.java \\\n+classpath/gnu/xml/validation/datatype/Facet.java \\\n+classpath/gnu/xml/validation/datatype/FloatType.java \\\n+classpath/gnu/xml/validation/datatype/FractionDigitsFacet.java \\\n+classpath/gnu/xml/validation/datatype/GDayType.java \\\n+classpath/gnu/xml/validation/datatype/GMonthDayType.java \\\n+classpath/gnu/xml/validation/datatype/GMonthType.java \\\n+classpath/gnu/xml/validation/datatype/GYearMonthType.java \\\n+classpath/gnu/xml/validation/datatype/GYearType.java \\\n+classpath/gnu/xml/validation/datatype/HexBinaryType.java \\\n+classpath/gnu/xml/validation/datatype/IDRefType.java \\\n+classpath/gnu/xml/validation/datatype/IDRefsType.java \\\n+classpath/gnu/xml/validation/datatype/IDType.java \\\n+classpath/gnu/xml/validation/datatype/IntType.java \\\n+classpath/gnu/xml/validation/datatype/IntegerType.java \\\n+classpath/gnu/xml/validation/datatype/LanguageType.java \\\n+classpath/gnu/xml/validation/datatype/LengthFacet.java \\\n+classpath/gnu/xml/validation/datatype/ListSimpleType.java \\\n+classpath/gnu/xml/validation/datatype/LongType.java \\\n+classpath/gnu/xml/validation/datatype/MaxExclusiveFacet.java \\\n+classpath/gnu/xml/validation/datatype/MaxInclusiveFacet.java \\\n+classpath/gnu/xml/validation/datatype/MaxLengthFacet.java \\\n+classpath/gnu/xml/validation/datatype/MinExclusiveFacet.java \\\n+classpath/gnu/xml/validation/datatype/MinInclusiveFacet.java \\\n+classpath/gnu/xml/validation/datatype/MinLengthFacet.java \\\n+classpath/gnu/xml/validation/datatype/NCNameType.java \\\n+classpath/gnu/xml/validation/datatype/NMTokenType.java \\\n+classpath/gnu/xml/validation/datatype/NMTokensType.java \\\n+classpath/gnu/xml/validation/datatype/NameType.java \\\n+classpath/gnu/xml/validation/datatype/NegativeIntegerType.java \\\n+classpath/gnu/xml/validation/datatype/NonNegativeIntegerType.java \\\n+classpath/gnu/xml/validation/datatype/NonPositiveIntegerType.java \\\n+classpath/gnu/xml/validation/datatype/NormalizedStringType.java \\\n+classpath/gnu/xml/validation/datatype/NotationType.java \\\n+classpath/gnu/xml/validation/datatype/PatternFacet.java \\\n+classpath/gnu/xml/validation/datatype/PositiveIntegerType.java \\\n+classpath/gnu/xml/validation/datatype/QNameType.java \\\n+classpath/gnu/xml/validation/datatype/ShortType.java \\\n+classpath/gnu/xml/validation/datatype/SimpleType.java \\\n+classpath/gnu/xml/validation/datatype/StringType.java \\\n+classpath/gnu/xml/validation/datatype/TimeType.java \\\n+classpath/gnu/xml/validation/datatype/TokenType.java \\\n+classpath/gnu/xml/validation/datatype/TotalDigitsFacet.java \\\n+classpath/gnu/xml/validation/datatype/Type.java \\\n+classpath/gnu/xml/validation/datatype/TypeBuilder.java \\\n+classpath/gnu/xml/validation/datatype/TypeLibrary.java \\\n+classpath/gnu/xml/validation/datatype/TypeLibraryFactory.java \\\n+classpath/gnu/xml/validation/datatype/UnionSimpleType.java \\\n+classpath/gnu/xml/validation/datatype/UnsignedByteType.java \\\n+classpath/gnu/xml/validation/datatype/UnsignedIntType.java \\\n+classpath/gnu/xml/validation/datatype/UnsignedLongType.java \\\n+classpath/gnu/xml/validation/datatype/UnsignedShortType.java \\\n+classpath/gnu/xml/validation/datatype/WhiteSpaceFacet.java \\\n+classpath/gnu/xml/validation/relaxng/AnyNameNameClass.java \\\n+classpath/gnu/xml/validation/relaxng/AttributePattern.java \\\n+classpath/gnu/xml/validation/relaxng/ChoiceNameClass.java \\\n+classpath/gnu/xml/validation/relaxng/ChoicePattern.java \\\n+classpath/gnu/xml/validation/relaxng/DataPattern.java \\\n+classpath/gnu/xml/validation/relaxng/Define.java \\\n+classpath/gnu/xml/validation/relaxng/ElementPattern.java \\\n+classpath/gnu/xml/validation/relaxng/EmptyPattern.java \\\n+classpath/gnu/xml/validation/relaxng/FullSyntaxBuilder.java \\\n+classpath/gnu/xml/validation/relaxng/Grammar.java \\\n+classpath/gnu/xml/validation/relaxng/GrammarException.java \\\n+classpath/gnu/xml/validation/relaxng/GrammarValidator.java \\\n+classpath/gnu/xml/validation/relaxng/GroupPattern.java \\\n+classpath/gnu/xml/validation/relaxng/InterleavePattern.java \\\n+classpath/gnu/xml/validation/relaxng/ListPattern.java \\\n+classpath/gnu/xml/validation/relaxng/NSNameNameClass.java \\\n+classpath/gnu/xml/validation/relaxng/NameClass.java \\\n+classpath/gnu/xml/validation/relaxng/NameNameClass.java \\\n+classpath/gnu/xml/validation/relaxng/NotAllowedPattern.java \\\n+classpath/gnu/xml/validation/relaxng/OneOrMorePattern.java \\\n+classpath/gnu/xml/validation/relaxng/Param.java \\\n+classpath/gnu/xml/validation/relaxng/Pattern.java \\\n+classpath/gnu/xml/validation/relaxng/RELAXNGSchemaFactory.java \\\n+classpath/gnu/xml/validation/relaxng/RefPattern.java \\\n+classpath/gnu/xml/validation/relaxng/TextPattern.java \\\n+classpath/gnu/xml/validation/relaxng/ValuePattern.java \\\n+classpath/gnu/xml/validation/xmlschema/AnyAttribute.java \\\n+classpath/gnu/xml/validation/xmlschema/AttributeDeclaration.java \\\n+classpath/gnu/xml/validation/xmlschema/AttributeUse.java \\\n+classpath/gnu/xml/validation/xmlschema/ComplexType.java \\\n+classpath/gnu/xml/validation/xmlschema/ElementDeclaration.java \\\n+classpath/gnu/xml/validation/xmlschema/Particle.java \\\n+classpath/gnu/xml/validation/xmlschema/ValidationException.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchema.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchemaAttributeTypeInfo.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchemaBuilder.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchemaElementTypeInfo.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchemaSchemaFactory.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchemaTypeInfo.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchemaTypeInfoProvider.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchemaValidator.java \\\n+classpath/gnu/xml/validation/xmlschema/XMLSchemaValidatorHandler.java \\\n classpath/gnu/xml/xpath/AndExpr.java \\\n classpath/gnu/xml/xpath/ArithmeticExpr.java \\\n classpath/gnu/xml/xpath/BooleanFunction.java \\\n@@ -2426,6 +3109,7 @@ classpath/java/awt/KeyboardFocusManager.java \\\n classpath/java/awt/Label.java \\\n classpath/java/awt/LayoutManager.java \\\n classpath/java/awt/LayoutManager2.java \\\n+classpath/java/awt/LightweightDispatcher.java \\\n classpath/java/awt/List.java \\\n classpath/java/awt/MediaTracker.java \\\n classpath/java/awt/Menu.java \\\n@@ -2714,6 +3398,7 @@ classpath/java/awt/peer/WindowPeer.java\n java_awt_peer_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_awt_peer_source_files)))\n java_awt_print_source_files = \\\n classpath/java/awt/print/Book.java \\\n+classpath/java/awt/print/NoPrinterJob.java \\\n classpath/java/awt/print/PageFormat.java \\\n classpath/java/awt/print/Pageable.java \\\n classpath/java/awt/print/Paper.java \\\n@@ -2910,7 +3595,7 @@ classpath/java/lang/InternalError.java \\\n classpath/java/lang/InterruptedException.java \\\n classpath/java/lang/LinkageError.java \\\n classpath/java/lang/Long.java \\\n-classpath/java/lang/Math.java \\\n+java/lang/Math.java \\\n classpath/java/lang/NegativeArraySizeException.java \\\n classpath/java/lang/NoClassDefFoundError.java \\\n classpath/java/lang/NoSuchFieldError.java \\\n@@ -3213,6 +3898,7 @@ classpath/java/rmi/server/RMIServerSocketFactory.java \\\n classpath/java/rmi/server/RMISocketFactory.java \\\n classpath/java/rmi/server/RemoteCall.java \\\n classpath/java/rmi/server/RemoteObject.java \\\n+classpath/java/rmi/server/RemoteObjectInvocationHandler.java \\\n classpath/java/rmi/server/RemoteRef.java \\\n classpath/java/rmi/server/RemoteServer.java \\\n classpath/java/rmi/server/RemoteStub.java \\\n@@ -3554,6 +4240,7 @@ classpath/java/util/prefs/PreferencesFactory.java\n \n java_util_prefs_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_util_prefs_source_files)))\n java_util_regex_source_files = \\\n+classpath/java/util/regex/MatchResult.java \\\n classpath/java/util/regex/Matcher.java \\\n classpath/java/util/regex/Pattern.java \\\n classpath/java/util/regex/PatternSyntaxException.java\n@@ -3678,6 +4365,7 @@ classpath/javax/imageio/metadata/IIOMetadataController.java \\\n classpath/javax/imageio/metadata/IIOMetadataFormat.java \\\n classpath/javax/imageio/metadata/IIOMetadataFormatImpl.java \\\n classpath/javax/imageio/metadata/IIOMetadataNode.java \\\n+classpath/javax/imageio/plugins/bmp/BMPImageWriteParam.java \\\n classpath/javax/imageio/spi/IIORegistry.java \\\n classpath/javax/imageio/spi/IIOServiceProvider.java \\\n classpath/javax/imageio/spi/ImageInputStreamSpi.java \\\n@@ -3861,7 +4549,9 @@ classpath/javax/print/PrintException.java \\\n classpath/javax/print/PrintService.java \\\n classpath/javax/print/PrintServiceLookup.java \\\n classpath/javax/print/ServiceUIFactory.java \\\n+classpath/javax/print/SimpleDoc.java \\\n classpath/javax/print/StreamPrintService.java \\\n+classpath/javax/print/StreamPrintServiceFactory.java \\\n classpath/javax/print/URIException.java\n \n javax_print_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_print_source_files)))\n@@ -4530,6 +5220,18 @@ classpath/javax/swing/plaf/multi/MultiTreeUI.java \\\n classpath/javax/swing/plaf/multi/MultiViewportUI.java\n \n javax_swing_plaf_multi_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_plaf_multi_source_files)))\n+javax_swing_plaf_synth_source_files = \\\n+classpath/javax/swing/plaf/synth/ColorType.java \\\n+classpath/javax/swing/plaf/synth/Region.java \\\n+classpath/javax/swing/plaf/synth/SynthConstants.java \\\n+classpath/javax/swing/plaf/synth/SynthContext.java \\\n+classpath/javax/swing/plaf/synth/SynthGraphicsUtils.java \\\n+classpath/javax/swing/plaf/synth/SynthLookAndFeel.java \\\n+classpath/javax/swing/plaf/synth/SynthPainter.java \\\n+classpath/javax/swing/plaf/synth/SynthStyle.java \\\n+classpath/javax/swing/plaf/synth/SynthStyleFactory.java\n+\n+javax_swing_plaf_synth_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_plaf_synth_source_files)))\n javax_swing_table_source_files = \\\n classpath/javax/swing/table/AbstractTableModel.java \\\n classpath/javax/swing/table/DefaultTableCellRenderer.java \\\n@@ -4546,6 +5248,7 @@ javax_swing_table_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,\n javax_swing_text_source_files = \\\n classpath/javax/swing/text/AbstractDocument.java \\\n classpath/javax/swing/text/AbstractWriter.java \\\n+classpath/javax/swing/text/AsyncBoxView.java \\\n classpath/javax/swing/text/AttributeSet.java \\\n classpath/javax/swing/text/BadLocationException.java \\\n classpath/javax/swing/text/BoxView.java \\\n@@ -4611,10 +5314,17 @@ javax_swing_text_html_source_files = \\\n classpath/javax/swing/text/html/BlockView.java \\\n classpath/javax/swing/text/html/CSS.java \\\n classpath/javax/swing/text/html/CSSParser.java \\\n+classpath/javax/swing/text/html/FormView.java \\\n classpath/javax/swing/text/html/HTML.java \\\n classpath/javax/swing/text/html/HTMLDocument.java \\\n classpath/javax/swing/text/html/HTMLEditorKit.java \\\n classpath/javax/swing/text/html/HTMLFrameHyperlinkEvent.java \\\n+classpath/javax/swing/text/html/HTMLTableView.java \\\n+classpath/javax/swing/text/html/InlineView.java \\\n+classpath/javax/swing/text/html/NullView.java \\\n+classpath/javax/swing/text/html/ObjectView.java \\\n+classpath/javax/swing/text/html/Option.java \\\n+classpath/javax/swing/text/html/ParagraphView.java \\\n classpath/javax/swing/text/html/StyleSheet.java\n \n javax_swing_text_html_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_text_html_source_files)))\n@@ -4718,9 +5428,7 @@ classpath/javax/xml/stream/StreamFilter.java \\\n classpath/javax/xml/stream/XMLEventFactory.java \\\n classpath/javax/xml/stream/XMLEventReader.java \\\n classpath/javax/xml/stream/XMLEventWriter.java \\\n-classpath/javax/xml/stream/XMLFilter.java \\\n classpath/javax/xml/stream/XMLInputFactory.java \\\n-classpath/javax/xml/stream/XMLIterator.java \\\n classpath/javax/xml/stream/XMLOutputFactory.java \\\n classpath/javax/xml/stream/XMLReporter.java \\\n classpath/javax/xml/stream/XMLResolver.java \\\n@@ -4734,15 +5442,13 @@ classpath/javax/xml/stream/events/Comment.java \\\n classpath/javax/xml/stream/events/DTD.java \\\n classpath/javax/xml/stream/events/EndDocument.java \\\n classpath/javax/xml/stream/events/EndElement.java \\\n-classpath/javax/xml/stream/events/EndEntity.java \\\n classpath/javax/xml/stream/events/EntityDeclaration.java \\\n classpath/javax/xml/stream/events/EntityReference.java \\\n classpath/javax/xml/stream/events/Namespace.java \\\n classpath/javax/xml/stream/events/NotationDeclaration.java \\\n classpath/javax/xml/stream/events/ProcessingInstruction.java \\\n classpath/javax/xml/stream/events/StartDocument.java \\\n classpath/javax/xml/stream/events/StartElement.java \\\n-classpath/javax/xml/stream/events/StartEntity.java \\\n classpath/javax/xml/stream/events/XMLEvent.java \\\n classpath/javax/xml/stream/util/EventReaderDelegate.java \\\n classpath/javax/xml/stream/util/ReaderDelegate.java \\\n@@ -5564,16 +6270,56 @@ all_packages_source_files = \\\n   gnu/java/security/action.list \\\n   gnu/java/security/ber.list \\\n   gnu/java/security/der.list \\\n+  gnu/java/security/hash.list \\\n+  gnu/java/security/jce/hash.list \\\n+  gnu/java/security/jce/prng.list \\\n+  gnu/java/security/jce/sig.list \\\n+  gnu/java/security/key.list \\\n+  gnu/java/security/key/dss.list \\\n+  gnu/java/security/key/rsa.list \\\n   gnu/java/security/pkcs.list \\\n+  gnu/java/security/prng.list \\\n   gnu/java/security/provider.list \\\n+  gnu/java/security/sig.list \\\n+  gnu/java/security/sig/dss.list \\\n+  gnu/java/security/sig/rsa.list \\\n   gnu/java/security/util.list \\\n   gnu/java/security/x509.list \\\n   gnu/java/security/x509/ext.list \\\n   gnu/java/text.list \\\n   gnu/java/util.list \\\n   gnu/java/util/prefs.list \\\n   gnu/javax/crypto.list \\\n+  gnu/javax/crypto/assembly.list \\\n+  gnu/javax/crypto/cipher.list \\\n+  gnu/javax/crypto/jce.list \\\n+  gnu/javax/crypto/jce/cipher.list \\\n+  gnu/javax/crypto/jce/key.list \\\n+  gnu/javax/crypto/jce/keyring.list \\\n+  gnu/javax/crypto/jce/mac.list \\\n+  gnu/javax/crypto/jce/params.list \\\n+  gnu/javax/crypto/jce/prng.list \\\n+  gnu/javax/crypto/jce/sig.list \\\n+  gnu/javax/crypto/jce/spec.list \\\n+  gnu/javax/crypto/key.list \\\n+  gnu/javax/crypto/key/dh.list \\\n+  gnu/javax/crypto/key/srp6.list \\\n+  gnu/javax/crypto/keyring.list \\\n+  gnu/javax/crypto/mac.list \\\n+  gnu/javax/crypto/mode.list \\\n+  gnu/javax/crypto/pad.list \\\n+  gnu/javax/crypto/prng.list \\\n+  gnu/javax/crypto/sasl.list \\\n+  gnu/javax/crypto/sasl/anonymous.list \\\n+  gnu/javax/crypto/sasl/crammd5.list \\\n+  gnu/javax/crypto/sasl/plain.list \\\n+  gnu/javax/crypto/sasl/srp.list \\\n   gnu/javax/imageio/bmp.list \\\n+  gnu/javax/net/ssl.list \\\n+  gnu/javax/net/ssl/provider.list \\\n+  gnu/javax/security/auth.list \\\n+  gnu/javax/security/auth/callback.list \\\n+  gnu/javax/security/auth/login.list \\\n   gnu/javax/swing/text/html/parser.list \\\n   gnu/javax/swing/text/html/parser/models.list \\\n   gnu/javax/swing/text/html/parser/support.list \\\n@@ -5663,6 +6409,7 @@ all_packages_source_files = \\\n   javax/swing/plaf/basic.list \\\n   javax/swing/plaf/metal.list \\\n   javax/swing/plaf/multi.list \\\n+  javax/swing/plaf/synth.list \\\n   javax/swing/table.list \\\n   javax/swing/text.list \\\n   javax/swing/text/html.list \\\n@@ -5718,16 +6465,56 @@ ordinary_header_files = \\\n   $(gnu_java_security_action_header_files) \\\n   $(gnu_java_security_ber_header_files) \\\n   $(gnu_java_security_der_header_files) \\\n+  $(gnu_java_security_hash_header_files) \\\n+  $(gnu_java_security_jce_hash_header_files) \\\n+  $(gnu_java_security_jce_prng_header_files) \\\n+  $(gnu_java_security_jce_sig_header_files) \\\n+  $(gnu_java_security_key_header_files) \\\n+  $(gnu_java_security_key_dss_header_files) \\\n+  $(gnu_java_security_key_rsa_header_files) \\\n   $(gnu_java_security_pkcs_header_files) \\\n+  $(gnu_java_security_prng_header_files) \\\n   $(gnu_java_security_provider_header_files) \\\n+  $(gnu_java_security_sig_header_files) \\\n+  $(gnu_java_security_sig_dss_header_files) \\\n+  $(gnu_java_security_sig_rsa_header_files) \\\n   $(gnu_java_security_util_header_files) \\\n   $(gnu_java_security_x509_header_files) \\\n   $(gnu_java_security_x509_ext_header_files) \\\n   $(gnu_java_text_header_files) \\\n   $(gnu_java_util_header_files) \\\n   $(gnu_java_util_prefs_header_files) \\\n   $(gnu_javax_crypto_header_files) \\\n+  $(gnu_javax_crypto_assembly_header_files) \\\n+  $(gnu_javax_crypto_cipher_header_files) \\\n+  $(gnu_javax_crypto_jce_header_files) \\\n+  $(gnu_javax_crypto_jce_cipher_header_files) \\\n+  $(gnu_javax_crypto_jce_key_header_files) \\\n+  $(gnu_javax_crypto_jce_keyring_header_files) \\\n+  $(gnu_javax_crypto_jce_mac_header_files) \\\n+  $(gnu_javax_crypto_jce_params_header_files) \\\n+  $(gnu_javax_crypto_jce_prng_header_files) \\\n+  $(gnu_javax_crypto_jce_sig_header_files) \\\n+  $(gnu_javax_crypto_jce_spec_header_files) \\\n+  $(gnu_javax_crypto_key_header_files) \\\n+  $(gnu_javax_crypto_key_dh_header_files) \\\n+  $(gnu_javax_crypto_key_srp6_header_files) \\\n+  $(gnu_javax_crypto_keyring_header_files) \\\n+  $(gnu_javax_crypto_mac_header_files) \\\n+  $(gnu_javax_crypto_mode_header_files) \\\n+  $(gnu_javax_crypto_pad_header_files) \\\n+  $(gnu_javax_crypto_prng_header_files) \\\n+  $(gnu_javax_crypto_sasl_header_files) \\\n+  $(gnu_javax_crypto_sasl_anonymous_header_files) \\\n+  $(gnu_javax_crypto_sasl_crammd5_header_files) \\\n+  $(gnu_javax_crypto_sasl_plain_header_files) \\\n+  $(gnu_javax_crypto_sasl_srp_header_files) \\\n   $(gnu_javax_imageio_bmp_header_files) \\\n+  $(gnu_javax_net_ssl_header_files) \\\n+  $(gnu_javax_net_ssl_provider_header_files) \\\n+  $(gnu_javax_security_auth_header_files) \\\n+  $(gnu_javax_security_auth_callback_header_files) \\\n+  $(gnu_javax_security_auth_login_header_files) \\\n   $(gnu_javax_swing_text_html_parser_header_files) \\\n   $(gnu_javax_swing_text_html_parser_models_header_files) \\\n   $(gnu_javax_swing_text_html_parser_support_header_files) \\\n@@ -5817,6 +6604,7 @@ ordinary_header_files = \\\n   $(javax_swing_plaf_basic_header_files) \\\n   $(javax_swing_plaf_metal_header_files) \\\n   $(javax_swing_plaf_multi_header_files) \\\n+  $(javax_swing_plaf_synth_header_files) \\\n   $(javax_swing_table_header_files) \\\n   $(javax_swing_text_header_files) \\\n   $(javax_swing_text_html_header_files) \\\n@@ -8099,6 +8887,76 @@ gnu/java/security/der.list: $(gnu_java_security_der_source_files)\n \n -include gnu/java/security/der.deps\n \n+gnu/java/security/hash.list: $(gnu_java_security_hash_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_hash_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/hash.list\n+\n+-include gnu/java/security/hash.deps\n+\n+gnu/java/security/jce/hash.list: $(gnu_java_security_jce_hash_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_jce_hash_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/jce/hash.list\n+\n+-include gnu/java/security/jce/hash.deps\n+\n+gnu/java/security/jce/prng.list: $(gnu_java_security_jce_prng_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_jce_prng_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/jce/prng.list\n+\n+-include gnu/java/security/jce/prng.deps\n+\n+gnu/java/security/jce/sig.list: $(gnu_java_security_jce_sig_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_jce_sig_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/jce/sig.list\n+\n+-include gnu/java/security/jce/sig.deps\n+\n+gnu/java/security/key.list: $(gnu_java_security_key_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_key_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/key.list\n+\n+-include gnu/java/security/key.deps\n+\n+gnu/java/security/key/dss.list: $(gnu_java_security_key_dss_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_key_dss_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/key/dss.list\n+\n+-include gnu/java/security/key/dss.deps\n+\n+gnu/java/security/key/rsa.list: $(gnu_java_security_key_rsa_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_key_rsa_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/key/rsa.list\n+\n+-include gnu/java/security/key/rsa.deps\n+\n gnu/java/security/pkcs.list: $(gnu_java_security_pkcs_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_java_security_pkcs_source_files); do \\\n@@ -8109,6 +8967,16 @@ gnu/java/security/pkcs.list: $(gnu_java_security_pkcs_source_files)\n \n -include gnu/java/security/pkcs.deps\n \n+gnu/java/security/prng.list: $(gnu_java_security_prng_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_prng_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/prng.list\n+\n+-include gnu/java/security/prng.deps\n+\n gnu/java/security/provider.list: $(gnu_java_security_provider_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_java_security_provider_source_files); do \\\n@@ -8119,6 +8987,36 @@ gnu/java/security/provider.list: $(gnu_java_security_provider_source_files)\n \n -include gnu/java/security/provider.deps\n \n+gnu/java/security/sig.list: $(gnu_java_security_sig_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_sig_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/sig.list\n+\n+-include gnu/java/security/sig.deps\n+\n+gnu/java/security/sig/dss.list: $(gnu_java_security_sig_dss_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_sig_dss_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/sig/dss.list\n+\n+-include gnu/java/security/sig/dss.deps\n+\n+gnu/java/security/sig/rsa.list: $(gnu_java_security_sig_rsa_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_java_security_sig_rsa_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/java/security/sig/rsa.list\n+\n+-include gnu/java/security/sig/rsa.deps\n+\n gnu/java/security/util.list: $(gnu_java_security_util_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_java_security_util_source_files); do \\\n@@ -8189,6 +9087,246 @@ gnu/javax/crypto.list: $(gnu_javax_crypto_source_files)\n \n -include gnu/javax/crypto.deps\n \n+gnu/javax/crypto/assembly.list: $(gnu_javax_crypto_assembly_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_assembly_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/assembly.list\n+\n+-include gnu/javax/crypto/assembly.deps\n+\n+gnu/javax/crypto/cipher.list: $(gnu_javax_crypto_cipher_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_cipher_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/cipher.list\n+\n+-include gnu/javax/crypto/cipher.deps\n+\n+gnu/javax/crypto/jce.list: $(gnu_javax_crypto_jce_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce.list\n+\n+-include gnu/javax/crypto/jce.deps\n+\n+gnu/javax/crypto/jce/cipher.list: $(gnu_javax_crypto_jce_cipher_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_cipher_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce/cipher.list\n+\n+-include gnu/javax/crypto/jce/cipher.deps\n+\n+gnu/javax/crypto/jce/key.list: $(gnu_javax_crypto_jce_key_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_key_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce/key.list\n+\n+-include gnu/javax/crypto/jce/key.deps\n+\n+gnu/javax/crypto/jce/keyring.list: $(gnu_javax_crypto_jce_keyring_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_keyring_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce/keyring.list\n+\n+-include gnu/javax/crypto/jce/keyring.deps\n+\n+gnu/javax/crypto/jce/mac.list: $(gnu_javax_crypto_jce_mac_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_mac_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce/mac.list\n+\n+-include gnu/javax/crypto/jce/mac.deps\n+\n+gnu/javax/crypto/jce/params.list: $(gnu_javax_crypto_jce_params_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_params_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce/params.list\n+\n+-include gnu/javax/crypto/jce/params.deps\n+\n+gnu/javax/crypto/jce/prng.list: $(gnu_javax_crypto_jce_prng_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_prng_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce/prng.list\n+\n+-include gnu/javax/crypto/jce/prng.deps\n+\n+gnu/javax/crypto/jce/sig.list: $(gnu_javax_crypto_jce_sig_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_sig_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce/sig.list\n+\n+-include gnu/javax/crypto/jce/sig.deps\n+\n+gnu/javax/crypto/jce/spec.list: $(gnu_javax_crypto_jce_spec_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_jce_spec_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/jce/spec.list\n+\n+-include gnu/javax/crypto/jce/spec.deps\n+\n+gnu/javax/crypto/key.list: $(gnu_javax_crypto_key_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_key_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/key.list\n+\n+-include gnu/javax/crypto/key.deps\n+\n+gnu/javax/crypto/key/dh.list: $(gnu_javax_crypto_key_dh_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_key_dh_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/key/dh.list\n+\n+-include gnu/javax/crypto/key/dh.deps\n+\n+gnu/javax/crypto/key/srp6.list: $(gnu_javax_crypto_key_srp6_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_key_srp6_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/key/srp6.list\n+\n+-include gnu/javax/crypto/key/srp6.deps\n+\n+gnu/javax/crypto/keyring.list: $(gnu_javax_crypto_keyring_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_keyring_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/keyring.list\n+\n+-include gnu/javax/crypto/keyring.deps\n+\n+gnu/javax/crypto/mac.list: $(gnu_javax_crypto_mac_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_mac_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/mac.list\n+\n+-include gnu/javax/crypto/mac.deps\n+\n+gnu/javax/crypto/mode.list: $(gnu_javax_crypto_mode_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_mode_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/mode.list\n+\n+-include gnu/javax/crypto/mode.deps\n+\n+gnu/javax/crypto/pad.list: $(gnu_javax_crypto_pad_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_pad_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/pad.list\n+\n+-include gnu/javax/crypto/pad.deps\n+\n+gnu/javax/crypto/prng.list: $(gnu_javax_crypto_prng_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_prng_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/prng.list\n+\n+-include gnu/javax/crypto/prng.deps\n+\n+gnu/javax/crypto/sasl.list: $(gnu_javax_crypto_sasl_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_sasl_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/sasl.list\n+\n+-include gnu/javax/crypto/sasl.deps\n+\n+gnu/javax/crypto/sasl/anonymous.list: $(gnu_javax_crypto_sasl_anonymous_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_sasl_anonymous_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/sasl/anonymous.list\n+\n+-include gnu/javax/crypto/sasl/anonymous.deps\n+\n+gnu/javax/crypto/sasl/crammd5.list: $(gnu_javax_crypto_sasl_crammd5_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_sasl_crammd5_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/sasl/crammd5.list\n+\n+-include gnu/javax/crypto/sasl/crammd5.deps\n+\n+gnu/javax/crypto/sasl/plain.list: $(gnu_javax_crypto_sasl_plain_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_sasl_plain_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/sasl/plain.list\n+\n+-include gnu/javax/crypto/sasl/plain.deps\n+\n+gnu/javax/crypto/sasl/srp.list: $(gnu_javax_crypto_sasl_srp_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_crypto_sasl_srp_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/crypto/sasl/srp.list\n+\n+-include gnu/javax/crypto/sasl/srp.deps\n+\n gnu/javax/imageio/bmp.list: $(gnu_javax_imageio_bmp_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_javax_imageio_bmp_source_files); do \\\n@@ -8199,11 +9337,61 @@ gnu/javax/imageio/bmp.list: $(gnu_javax_imageio_bmp_source_files)\n \n -include gnu/javax/imageio/bmp.deps\n \n+gnu/javax/net/ssl.list: $(gnu_javax_net_ssl_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_net_ssl_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/net/ssl.list\n+\n+-include gnu/javax/net/ssl.deps\n+\n+gnu/javax/net/ssl/provider.list: $(gnu_javax_net_ssl_provider_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_net_ssl_provider_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/net/ssl/provider.list\n+\n+-include gnu/javax/net/ssl/provider.deps\n+\n gnu-javax-rmi.lo: $(gnu_javax_rmi_source_files)\n \t@find classpath/lib/gnu/javax/rmi -name '*.class' > gnu-javax-rmi.list\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-javax-rmi.lo @gnu-javax-rmi.list\n \t@rm -f gnu-javax-rmi.list\n \n+gnu/javax/security/auth.list: $(gnu_javax_security_auth_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_security_auth_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/security/auth.list\n+\n+-include gnu/javax/security/auth.deps\n+\n+gnu/javax/security/auth/callback.list: $(gnu_javax_security_auth_callback_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_security_auth_callback_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/security/auth/callback.list\n+\n+-include gnu/javax/security/auth/callback.deps\n+\n+gnu/javax/security/auth/login.list: $(gnu_javax_security_auth_login_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_javax_security_auth_login_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/javax/security/auth/login.list\n+\n+-include gnu/javax/security/auth/login.deps\n+\n gnu-javax-sound-midi.lo: $(gnu_javax_sound_midi_source_files)\n \t@find classpath/lib/gnu/javax/sound/midi -name '*.class' > gnu-javax-sound-midi.list\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-javax-sound-midi.lo @gnu-javax-sound-midi.list\n@@ -9114,6 +10302,16 @@ javax/swing/plaf/multi.list: $(javax_swing_plaf_multi_source_files)\n \n -include javax/swing/plaf/multi.deps\n \n+javax/swing/plaf/synth.list: $(javax_swing_plaf_synth_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(javax_swing_plaf_synth_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > javax/swing/plaf/synth.list\n+\n+-include javax/swing/plaf/synth.deps\n+\n javax/swing/table.list: $(javax_swing_table_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(javax_swing_table_source_files); do \\"}, {"sha": "60e126dbc8cd82804463dd706faed4cd8d2b7c70", "filename": "libjava/classpath/.classpath", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2F.classpath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2F.classpath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.classpath?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,6 +1,8 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <classpath>\n-\t<classpathentry excluding=\".externalToolBuilders/|.settings/|ChangeLog*|Makefile*|autom4te.cache/|compat/|config*|doc/|examples/|external/|gnu/javax/swing/plaf/|include/|install/|lib/|m4/|native/|resource/|scripts/|test/|testsuite/|vm/reference/\" kind=\"src\" path=\"\"/>\n+\t<classpathentry excluding=\".externalToolBuilders/|.settings/|ChangeLog*|Makefile*|autom4te.cache/|compat/|config*|doc/|examples/|external/|gnu/javax/swing/plaf/|include/|install/|lib/|m4/|native/|resource/|scripts/|test/|testsuite/|vm/reference/|tools/|external/relaxngDatatype/\" kind=\"src\" path=\"\"/>\n+\t<classpathentry kind=\"src\" path=\"external/relaxngDatatype\"/>\n+\t<classpathentry kind=\"src\" path=\"tools\"/>\n \t<classpathentry kind=\"src\" path=\"resource\"/>\n \t<classpathentry kind=\"src\" path=\"vm/reference\"/>\n \t<classpathentry kind=\"src\" path=\"external/sax\"/>"}, {"sha": "ebc689daf2fecf922afbd9f9595c321a33e12c18", "filename": "libjava/classpath/.project", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2F.project", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2F.project", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.project?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -35,6 +35,11 @@\n \t\t\t\t</dictionary>\n \t\t\t</arguments>\n \t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n \t\t<buildCommand>\n \t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n \t\t\t<triggers>auto,full,incremental,</triggers>\n@@ -55,11 +60,6 @@\n \t\t\t\t</dictionary>\n \t\t\t</arguments>\n \t\t</buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n \t\t<buildCommand>\n \t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n \t\t\t<triggers>auto,full,incremental,</triggers>"}, {"sha": "849b3a19c127987a8d28403d17e4a15996fe942d", "filename": "libjava/classpath/.settings/org.eclipse.jdt.core.prefs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.settings%2Forg.eclipse.jdt.core.prefs?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,4 +1,4 @@\n-#Tue Sep 13 16:15:04 MDT 2005\n+#Tue Feb 07 05:21:36 EST 2006\n eclipse.preferences.version=1\n org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled\n org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.4\n@@ -72,14 +72,15 @@ org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_e\n org.eclipse.jdt.core.formatter.alignment_for_binary_expression=18\n org.eclipse.jdt.core.formatter.alignment_for_compact_if=16\n org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=82\n+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0\n org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=18\n org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16\n org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=18\n org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=18\n org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=0\n-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16\n+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=17\n org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16\n-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16\n+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=17\n org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16\n org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16\n org.eclipse.jdt.core.formatter.blank_lines_after_imports=1\n@@ -111,7 +112,7 @@ org.eclipse.jdt.core.formatter.comment.format_source_code=true\n org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true\n org.eclipse.jdt.core.formatter.comment.indent_root_tags=true\n org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert\n-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert\n+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert\n org.eclipse.jdt.core.formatter.comment.line_length=80\n org.eclipse.jdt.core.formatter.compact_else_if=true\n org.eclipse.jdt.core.formatter.continuation_indentation=2\n@@ -128,7 +129,7 @@ org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false\n org.eclipse.jdt.core.formatter.indentation.size=4\n org.eclipse.jdt.core.formatter.insert_new_line_after_annotation=insert\n org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert\n+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=insert\n org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=insert\n org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert\n org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=insert\n@@ -198,7 +199,7 @@ org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert\n org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert\n org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=insert\n org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert\n+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=insert\n org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert\n org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert\n org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert\n@@ -302,3 +303,4 @@ org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1\n org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true\n org.eclipse.jdt.core.formatter.tabulation.char=space\n org.eclipse.jdt.core.formatter.tabulation.size=2\n+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false"}, {"sha": "5dd3eab469bad02cbd781833c9fdac6d818473ee", "filename": "libjava/classpath/AUTHORS", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FAUTHORS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FAUTHORS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FAUTHORS?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -22,6 +22,7 @@ Anthony Green (green@redhat.com)\n Jochen Hoenicke (Jochen.Hoenicke@Informatik.Uni-Oldenburg.de)\n Kazumitsu Ito (kaz@maczuka.gcd.org)\n Andrew John Hughes (gnu_andrew@member.fsf.org)\n+Olivier Jolly (olivier.jolly@pcedev.com)\n Brian Jones (cbj@gnu.org)\n Roman Kennke (roman@kennke.org) \n Michael Koch (konqueror@gmx.de)"}, {"sha": "f9b56b96f0df6d70ccc4129999d9417b16e6a9b4", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 6807, "deletions": 8, "changes": 6815, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "ae2588d4476b4bd71868b6b99c2f83a373368593", "filename": "libjava/classpath/LICENSE", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FLICENSE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FLICENSE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FLICENSE?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -298,3 +298,51 @@ terms:\n  for any purpose is hereby granted without fee, provided that the\n  above copyright notice and this permission notice are included in\n  all copies or substantial portions of the software.\n+\n+\n+Directory external/relaxngDatatype\n+RELAX NG Pluggable Datatype Libraries. All files are distributed under\n+the following notice:\n+\n+        Copyright (c) 2001, Thai Open Source Software Center Ltd, Sun\n+        Microsystems. All rights reserved.\n+\n+        Redistribution and use in source and binary forms, with or\n+        without\n+        modification, are permitted provided that the following\n+        conditions are met:\n+\n+            Redistributions of source code must retain the above\n+        copyright\n+            notice, this list of conditions and the following\n+        disclaimer.\n+\n+            Redistributions in binary form must reproduce the above\n+            copyright notice, this list of conditions and the following\n+            disclaimer in the documentation and/or other materials\n+        provided\n+            with the distribution.\n+\n+            Neither the names of the copyright holders nor the names of\n+        its\n+            contributors may be used to endorse or promote products\n+        derived\n+            from this software without specific prior written\n+        permission.\n+\n+        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n+        CONTRIBUTORS\n+        \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT\n+        NOT\n+        LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+        FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\n+        SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n+        INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+        SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n+        BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n+        LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+        (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n+        THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+        SUCH DAMAGE.\n+"}, {"sha": "82e97dbde7f9c8bcaa30da57458c50b41e76a58c", "filename": "libjava/classpath/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.am?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,8 +1,8 @@\n ## Input file for automake to generate the Makefile.in used by configure\n \n # lib first, to compile .class files before native code, last examples\n-SUBDIRS = lib doc external include native resource scripts $(EXAMPLESDIR)\n-DIST_SUBDIRS = lib doc external include native resource scripts examples\n+SUBDIRS = lib doc external include native resource scripts tools $(EXAMPLESDIR)\n+DIST_SUBDIRS = lib doc external include native resource scripts tools examples\n \n ## GCJ LOCAL: we need an extra -I here.\n ACLOCAL_AMFLAGS = -I m4 -I ../.. -I ../../config"}, {"sha": "a2bd3200269069dc5c0359f685bf670e65290012", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -96,13 +96,16 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\n CLASSPATH_MODULE = @CLASSPATH_MODULE@\n+COLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n+CREATE_COLLECTIONS_FALSE = @CREATE_COLLECTIONS_FALSE@\n+CREATE_COLLECTIONS_TRUE = @CREATE_COLLECTIONS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n@@ -133,6 +136,7 @@ EGREP = @EGREP@\n ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n+FASTJAR = @FASTJAR@\n FIND = @FIND@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n@@ -144,6 +148,8 @@ FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n+FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n+FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n GJDOC = @GJDOC@\n@@ -194,6 +200,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n QT_CFLAGS = @QT_CFLAGS@\n QT_LIBS = @QT_LIBS@\n@@ -273,8 +280,8 @@ target_vendor = @target_vendor@\n vm_classes = @vm_classes@\n \n # lib first, to compile .class files before native code, last examples\n-SUBDIRS = lib doc external include native resource scripts $(EXAMPLESDIR)\n-DIST_SUBDIRS = lib doc external include native resource scripts examples\n+SUBDIRS = lib doc external include native resource scripts tools $(EXAMPLESDIR)\n+DIST_SUBDIRS = lib doc external include native resource scripts tools examples\n ACLOCAL_AMFLAGS = -I m4 -I ../.. -I ../../config\n EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE \\\n              ChangeLog-2003 ChangeLog-2004 ChangeLog-2005 \\"}, {"sha": "8a0ff98c73a753400488e7c4662afe77e2736f2d", "filename": "libjava/classpath/NEWS", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FNEWS?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,3 +1,74 @@\n+New in release 0.90 (March 6, 2006)\n+\n+* Free Swing improvements: JTable columns are rearrangeable and\n+  resizeable with mouse. Painting and scrolling are now much\n+  faster. Plain text components now support highlighting and\n+  copy+paste to the system clipboard. Support for styled text has been\n+  improved, including some very basic HTML support. JFileChooser is\n+  now usable. Global event dispatching has been implemented. Memory\n+  consumption of Swing components has been reduced. Lots of general\n+  bugfixes. Added new system property to turn off Graphics2D use in\n+  Swing, even if Graphics2D is available: gnu.javax.swing.noGraphics2D\n+\n+* AWT. Improved support for mixing \"lightweight\" and \"heavyweight\"\n+  Components in Containers. Better support for dynamically updated\n+  menus. Better 1.0 event model support for Scrollbars. Better class\n+  documentation of gtk+ awt peers.\n+\n+* GNU Crypto and Jessie have been merged into GNU Classpath; this\n+  provides Classpath with a wide array of cryptographic algorithms\n+  (ciphers, message digests, etc.) and implementations of SSL version\n+  3 and TLS version 1. These roughly complement the public\n+  `java.security.' `javax.crypto,' and `javax.net.ssl' packages, and\n+  are service providers implementing the underlying algorithms.\n+ \n+* Updated HTTP and FTP URLConnection protocol handlers. HTTPS support\n+  out of the box.\n+\n+* Unicode 4.0.0 is supported. Character now includes support for using\n+  ether a char or an int to identify code points.\n+\n+* More correct handling of Object methods and serialization support\n+  for Proxy and abstract classes.\n+\n+* The new folder tools includes GIOP and RMI stub and tie source code\n+  generators, IOR parser and both transient and persistent GIOP naming\n+  services.\n+\n+* Added experimental support for dynamic creation of the RMI stubs\n+  using proxy classes. The rmic compiler is no longer required (unless\n+  for research and specific stubs).\n+\n+* XML validaton support for RELAX NG and W3C XML schema namespace\n+  URIs. RELAX NG pluggable XML schema datatype library API and an\n+  implementation for XML Schema Datatypes\n+  (http://www.w3.org/TR/xmlschema-2/).\n+\n+* Updated StAX implementaton to be compatible with final JSWDP 2.0.\n+\n+* The default back end for java.util.prefs has been changed.  The new\n+  default is capable of saving and restoring preferences to and from\n+  the file system.\n+\n+* javax.imageio.plugins.bmp implementation.\n+\n+* Added --enable-collections configure option which builds\n+  \"collections.jar\", a 1.1 VM compatibility jar.\n+\n+* gnu.regexp updated from GNU/Posix syntax to support util.regex\n+  syntax including various Unicode blocks, categories and properties.\n+\n+Runtime interface changes:\n+\n+* A new class, VMMath, is now available which separates the native\n+  mathematical functions from java.lang.Math.  The previous fdlibm\n+  implementation now forms the reference material for this class.\n+\n+* Updated VMObjectInputStream class to return Thread context class\n+  loader if no other class loader is found.\n+\n+* Updated documentation on InstrumentationImpl in vmintegration guide.\n+\n New in release 0.20 (Jan 13, 2006)\n \n * New StAX pull parser and SAX-over-StAX driver. Lots of DOM, SAX/StAX,"}, {"sha": "bed82c07cd2d2617a97076dc6e6a0fb1cb5b2b36", "filename": "libjava/classpath/configure", "status": "modified", "additions": 263, "deletions": 15, "changes": 278, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,6 +1,6 @@\n #! /bin/sh\n # Guess values for system-dependent variables and create Makefiles.\n-# Generated by GNU Autoconf 2.59 for GNU Classpath 0.20.\n+# Generated by GNU Autoconf 2.59 for GNU Classpath 0.90.\n #\n # Report bugs to <classpath@gnu.org>.\n #\n@@ -269,8 +269,8 @@ SHELL=${CONFIG_SHELL-/bin/sh}\n # Identity of this package.\n PACKAGE_NAME='GNU Classpath'\n PACKAGE_TARNAME='classpath'\n-PACKAGE_VERSION='0.20'\n-PACKAGE_STRING='GNU Classpath 0.20'\n+PACKAGE_VERSION='0.90'\n+PACKAGE_STRING='GNU Classpath 0.90'\n PACKAGE_BUGREPORT='classpath@gnu.org'\n \n ac_unique_file=\"java/lang/System.java\"\n@@ -312,7 +312,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os LIBVERSION CLASSPATH_MODULE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE GTK_CAIRO_ENABLED GTK_CAIRO_TRUE GTK_CAIRO_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE nativelibdir glibjdir CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE LN_S RANLIB ac_ct_RANLIB LIBTOOL CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP LIBICONV LTLIBICONV WARNING_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS CAIRO_CFLAGS CAIRO_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS QT_CFLAGS QT_LIBS MOC USER_JAVAH USER_SPECIFIED_JAVAH_TRUE USER_SPECIFIED_JAVAH_FALSE CLASSPATH_INCLUDES GCJ JIKES JIKESENCODING JIKESWARNINGS KJC GCJX ECJ FOUND_GCJ_TRUE FOUND_GCJ_FALSE FOUND_JIKES_TRUE FOUND_JIKES_FALSE FOUND_ECJ_TRUE FOUND_ECJ_FALSE FOUND_KJC_TRUE FOUND_KJC_FALSE FOUND_GCJX_TRUE FOUND_GCJX_FALSE USER_CLASSLIB USER_SPECIFIED_CLASSLIB_TRUE USER_SPECIFIED_CLASSLIB_FALSE vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os LIBVERSION CLASSPATH_MODULE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE GTK_CAIRO_ENABLED GTK_CAIRO_TRUE GTK_CAIRO_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE nativelibdir glibjdir CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE LN_S RANLIB ac_ct_RANLIB LIBTOOL CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP PERL COLLECTIONS_PREFIX LIBICONV LTLIBICONV WARNING_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS CAIRO_CFLAGS CAIRO_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS QT_CFLAGS QT_LIBS MOC USER_JAVAH USER_SPECIFIED_JAVAH_TRUE USER_SPECIFIED_JAVAH_FALSE CLASSPATH_INCLUDES GCJ JIKES JIKESENCODING JIKESWARNINGS KJC GCJX ECJ FOUND_GCJ_TRUE FOUND_GCJ_FALSE FOUND_JIKES_TRUE FOUND_JIKES_FALSE FOUND_ECJ_TRUE FOUND_ECJ_FALSE FOUND_KJC_TRUE FOUND_KJC_FALSE FOUND_GCJX_TRUE FOUND_GCJX_FALSE USER_CLASSLIB USER_SPECIFIED_CLASSLIB_TRUE USER_SPECIFIED_CLASSLIB_FALSE vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP FASTJAR INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -793,7 +793,7 @@ if test \"$ac_init_help\" = \"long\"; then\n   # Omit some internal or obsolete options to make the list less imposing.\n   # This message is too long to be a string in the A/UX 3.1 sh.\n   cat <<_ACEOF\n-\\`configure' configures GNU Classpath 0.20 to adapt to many kinds of systems.\n+\\`configure' configures GNU Classpath 0.90 to adapt to many kinds of systems.\n \n Usage: $0 [OPTION]... [VAR=VALUE]...\n \n@@ -864,13 +864,14 @@ fi\n \n if test -n \"$ac_init_help\"; then\n   case $ac_init_help in\n-     short | recursive ) echo \"Configuration of GNU Classpath 0.20:\";;\n+     short | recursive ) echo \"Configuration of GNU Classpath 0.90:\";;\n    esac\n   cat <<\\_ACEOF\n \n Optional Features:\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n+  --enable-collections    create collections.jar default=no\n   --enable-jni            compile JNI source default=yes\n   --enable-core-jni       compile JNI sources for core default=yes\n   --enable-Werror         whether to compile C code with -Werror which turns\n@@ -931,6 +932,7 @@ Optional Packages:\n   --with-ecj              bytecode compilation with ecj\n   --with-classpath        specify path to a classes.zip like file\n   --with-vm-classes       specify path to VM override source files\n+  --with-fastjar=PATH     define to use a fastjar style tool\n   --with-glibj            define what to install (zip|flat|both|none|build)\n                           [default=zip]\n   --with-gjdoc            generate documentation using gjdoc (default is NO)\n@@ -1048,7 +1050,7 @@ fi\n test -n \"$ac_init_help\" && exit 0\n if $ac_init_version; then\n   cat <<\\_ACEOF\n-GNU Classpath configure 0.20\n+GNU Classpath configure 0.90\n generated by GNU Autoconf 2.59\n \n Copyright (C) 2003 Free Software Foundation, Inc.\n@@ -1062,7 +1064,7 @@ cat >&5 <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n \n-It was created by GNU Classpath $as_me 0.20, which was\n+It was created by GNU Classpath $as_me 0.90, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   $ $0 $@\n@@ -1807,7 +1809,7 @@ fi\n \n # Define the identity of the package.\n  PACKAGE='classpath'\n- VERSION='0.20'\n+ VERSION='0.90'\n \n \n cat >>confdefs.h <<_ACEOF\n@@ -2022,6 +2024,29 @@ echo \"${ECHO_T}$am_cv_prog_tar_ustar\" >&6\n \n \n \n+# Check whether --enable-collections or --disable-collections was given.\n+if test \"${enable_collections+set}\" = set; then\n+  enableval=\"$enable_collections\"\n+  case x\"${enableval}\" in\n+                xyes) COMPILE_COLLECTIONS=yes; COLLECTIONS_PREFIX=\"\\\"gnu/java/util/collections\\\"\" ;;\n+                xno) COMPILE_COLLECTIONS=no ;;\n+\t\tx) COMPILE_COLLECTIONS=yes; COLLECTIONS_PREFIX=\"\\\"gnu/java/util/collections\\\"\" ;;\n+                *) COMPILE_COLLECTIONS=yes; COLLECTIONS_PREFIX=\"\\\"${enableval}\\\"\" ;;\n+              esac\n+else\n+  COMPILE_COLLECTIONS=no\n+fi;\n+\n+\n+if test \"x${COMPILE_COLLECTIONS}\" = xyes; then\n+  CREATE_COLLECTIONS_TRUE=\n+  CREATE_COLLECTIONS_FALSE='#'\n+else\n+  CREATE_COLLECTIONS_TRUE='#'\n+  CREATE_COLLECTIONS_FALSE=\n+fi\n+\n+\n # Check whether --enable-jni or --disable-jni was given.\n if test \"${enable_jni+set}\" = set; then\n   enableval=\"$enable_jni\"\n@@ -5121,7 +5146,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5124 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5149 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -7188,6 +7213,54 @@ exec 5>>./config.log\n \n \n \n+if test \"x${COMPILE_COLLECTIONS}\" = xyes; then\n+  # Extract the first word of \"perl\", so it can be a program name with args.\n+set dummy perl; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_path_PERL+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  case $PERL in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_PERL=\"$PERL\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_PERL=\"$as_dir/$ac_word$ac_exec_ext\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  ;;\n+esac\n+fi\n+PERL=$ac_cv_path_PERL\n+\n+if test -n \"$PERL\"; then\n+  echo \"$as_me:$LINENO: result: $PERL\" >&5\n+echo \"${ECHO_T}$PERL\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+\n+\n+            ac_config_files=\"$ac_config_files lib/mkcollections.pl\"\n+\n+            ac_config_commands=\"$ac_config_commands mkcollections.pl\"\n+\n+fi\n+\n if test \"x${COMPILE_JNI}\" = xyes; then\n   echo \"$as_me:$LINENO: checking for ANSI C header files\" >&5\n echo $ECHO_N \"checking for ANSI C header files... $ECHO_C\" >&6\n@@ -11371,6 +11444,104 @@ esac\n fi\n PKG_CONFIG=$ac_cv_path_PKG_CONFIG\n \n+if test -n \"$PKG_CONFIG\"; then\n+  echo \"$as_me:$LINENO: result: $PKG_CONFIG\" >&5\n+echo \"${ECHO_T}$PKG_CONFIG\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  fi\n+\n+  if test \"$PKG_CONFIG\" = \"no\" ; then\n+     echo \"*** The pkg-config script could not be found. Make sure it is\"\n+     echo \"*** in your path, or set the PKG_CONFIG environment variable\"\n+     echo \"*** to the full path to pkg-config.\"\n+     echo \"*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.\"\n+  else\n+     PKG_CONFIG_MIN_VERSION=0.9.0\n+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then\n+        echo \"$as_me:$LINENO: checking for freetype2\" >&5\n+echo $ECHO_N \"checking for freetype2... $ECHO_C\" >&6\n+\n+        if $PKG_CONFIG --exists \"freetype2\" ; then\n+            echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+            succeeded=yes\n+\n+            echo \"$as_me:$LINENO: checking FREETYPE2_CFLAGS\" >&5\n+echo $ECHO_N \"checking FREETYPE2_CFLAGS... $ECHO_C\" >&6\n+            FREETYPE2_CFLAGS=`$PKG_CONFIG --cflags \"freetype2\"`\n+            echo \"$as_me:$LINENO: result: $FREETYPE2_CFLAGS\" >&5\n+echo \"${ECHO_T}$FREETYPE2_CFLAGS\" >&6\n+\n+            echo \"$as_me:$LINENO: checking FREETYPE2_LIBS\" >&5\n+echo $ECHO_N \"checking FREETYPE2_LIBS... $ECHO_C\" >&6\n+            FREETYPE2_LIBS=`$PKG_CONFIG --libs \"freetype2\"`\n+            echo \"$as_me:$LINENO: result: $FREETYPE2_LIBS\" >&5\n+echo \"${ECHO_T}$FREETYPE2_LIBS\" >&6\n+        else\n+            FREETYPE2_CFLAGS=\"\"\n+            FREETYPE2_LIBS=\"\"\n+            ## If we have a custom action on failure, don't print errors, but\n+            ## do set a variable so people can do so.\n+            FREETYPE2_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"freetype2\"`\n+            echo $FREETYPE2_PKG_ERRORS\n+        fi\n+\n+\n+\n+     else\n+        echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n+        echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n+     fi\n+  fi\n+\n+  if test $succeeded = yes; then\n+     :\n+  else\n+     { { echo \"$as_me:$LINENO: error: Library requirements (freetype2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.\" >&5\n+echo \"$as_me: error: Library requirements (freetype2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+  fi\n+\n+\n+  succeeded=no\n+\n+  if test -z \"$PKG_CONFIG\"; then\n+    # Extract the first word of \"pkg-config\", so it can be a program name with args.\n+set dummy pkg-config; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_path_PKG_CONFIG+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  case $PKG_CONFIG in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_PKG_CONFIG=\"$PKG_CONFIG\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  test -z \"$ac_cv_path_PKG_CONFIG\" && ac_cv_path_PKG_CONFIG=\"no\"\n+  ;;\n+esac\n+fi\n+PKG_CONFIG=$ac_cv_path_PKG_CONFIG\n+\n if test -n \"$PKG_CONFIG\"; then\n   echo \"$as_me:$LINENO: result: $PKG_CONFIG\" >&5\n echo \"${ECHO_T}$PKG_CONFIG\" >&6\n@@ -11440,6 +11611,8 @@ echo \"$as_me: error: Library requirements (pangoft2) not met; consider adjusting\n \n \n \n+\n+\n   fi\n \n     if test \"x${COMPILE_QT_PEER}\" = xyes; then\n@@ -13734,9 +13907,9 @@ else\n fi\n \n \n-  if test \"x${GCJ}\" = x && test \"x${JIKES}\" = x && test \"x${user_specified_javac}\" != xkjc && test \"x${user_specified_javac}\" != xgcjx; then\n+  if test \"x${GCJ}\" = x && test \"x${JIKES}\" = x && test \"x${user_specified_javac}\" != xkjc && test \"x${user_specified_javac}\" != xgcjx && test \"x${user_specified_javac}\" != xecj; then\n       # FIXME: use autoconf error function\n-      echo \"configure: cannot find javac, try --with-gcj, --with-jikes, --with-kjc, or --with-gcjx\" 1>&2\n+      echo \"configure: cannot find javac, try --with-gcj, --with-jikes, --with-kjc, --with-ecj, or --with-gcjx\" 1>&2\n       exit 1\n   fi\n \n@@ -14073,6 +14246,62 @@ echo \"${ECHO_T}no\" >&6\n fi\n \n \n+# Check whether --with-fastjar or --without-fastjar was given.\n+if test \"${with_fastjar+set}\" = set; then\n+  withval=\"$with_fastjar\"\n+\n+\t\techo \"$as_me:$LINENO: checking for user supplied fastjar\" >&5\n+echo $ECHO_N \"checking for user supplied fastjar... $ECHO_C\" >&6\n+\t\tFASTJAR=${withval}\n+\t\techo \"$as_me:$LINENO: result: ${FASTJAR}\" >&5\n+echo \"${ECHO_T}${FASTJAR}\" >&6\n+\n+else\n+  # Extract the first word of \"fastjar\", so it can be a program name with args.\n+set dummy fastjar; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_path_FASTJAR+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  case $FASTJAR in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_FASTJAR=\"$FASTJAR\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_FASTJAR=\"$as_dir/$ac_word$ac_exec_ext\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  ;;\n+esac\n+fi\n+FASTJAR=$ac_cv_path_FASTJAR\n+\n+if test -n \"$FASTJAR\"; then\n+  echo \"$as_me:$LINENO: result: $FASTJAR\" >&5\n+echo \"${ECHO_T}$FASTJAR\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+fi;\n+  if test x\"${FASTJAR}\" != x; then\n+    ZIP=\"\"\n+  fi\n+\n+\n # Check whether --with-glibj or --without-glibj was given.\n if test \"${with_glibj+set}\" = set; then\n   withval=\"$with_glibj\"\n@@ -17194,7 +17423,7 @@ echo \"${ECHO_T}make use of $ac_cv_header_stdint in $ac_stdint_h $ac_cv_stdint_re\n \n \n \n-                                                                                                                                                                                                                                                                                                                                                    ac_config_files=\"$ac_config_files Makefile doc/Makefile doc/api/Makefile external/Makefile external/sax/Makefile external/w3c_dom/Makefile gnu/classpath/Configuration.java include/Makefile native/Makefile native/fdlibm/Makefile native/jawt/Makefile native/jni/Makefile native/jni/classpath/Makefile native/jni/java-io/Makefile native/jni/java-lang/Makefile native/jni/java-net/Makefile native/jni/java-nio/Makefile native/jni/java-util/Makefile native/jni/gtk-peer/Makefile native/jni/qt-peer/Makefile native/jni/xmlj/Makefile native/jni/midi-alsa/Makefile native/jni/midi-dssi/Makefile native/target/Makefile native/target/Linux/Makefile native/target/generic/Makefile resource/Makefile scripts/Makefile scripts/classpath.spec lib/Makefile lib/gen-classlist.sh lib/copy-vmresources.sh examples/Makefile examples/Makefile.jawt\"\n+                                                                                                                                                                                                                                                                                                                                                                        ac_config_files=\"$ac_config_files Makefile doc/Makefile doc/api/Makefile external/Makefile external/sax/Makefile external/w3c_dom/Makefile external/relaxngDatatype/Makefile gnu/classpath/Configuration.java include/Makefile native/Makefile native/fdlibm/Makefile native/jawt/Makefile native/jni/Makefile native/jni/classpath/Makefile native/jni/java-io/Makefile native/jni/java-lang/Makefile native/jni/java-net/Makefile native/jni/java-nio/Makefile native/jni/java-util/Makefile native/jni/gtk-peer/Makefile native/jni/qt-peer/Makefile native/jni/xmlj/Makefile native/jni/midi-alsa/Makefile native/jni/midi-dssi/Makefile native/target/Makefile native/target/Linux/Makefile native/target/generic/Makefile resource/Makefile scripts/Makefile scripts/classpath.spec lib/Makefile lib/gen-classlist.sh lib/copy-vmresources.sh tools/Makefile examples/Makefile examples/Makefile.jawt\"\n \n           ac_config_commands=\"$ac_config_commands gen-classlist\"\n \n@@ -17291,6 +17520,13 @@ LIBOBJS=$ac_libobjs\n LTLIBOBJS=$ac_ltlibobjs\n \n \n+if test -z \"${CREATE_COLLECTIONS_TRUE}\" && test -z \"${CREATE_COLLECTIONS_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_COLLECTIONS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"CREATE_COLLECTIONS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${CREATE_JNI_LIBRARIES_TRUE}\" && test -z \"${CREATE_JNI_LIBRARIES_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_JNI_LIBRARIES\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -17765,7 +18001,7 @@ _ASBOX\n } >&5\n cat >&5 <<_CSEOF\n \n-This file was extended by GNU Classpath $as_me 0.20, which was\n+This file was extended by GNU Classpath $as_me 0.90, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   CONFIG_FILES    = $CONFIG_FILES\n@@ -17831,7 +18067,7 @@ _ACEOF\n \n cat >>$CONFIG_STATUS <<_ACEOF\n ac_cs_version=\"\\\\\n-GNU Classpath config.status 0.20\n+GNU Classpath config.status 0.90\n configured by $0, generated by GNU Autoconf 2.59,\n   with options \\\\\"`echo \"$ac_configure_args\" | sed 's/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\\\\\"\n \n@@ -17959,12 +18195,14 @@ for ac_config_target in $ac_config_targets\n do\n   case \"$ac_config_target\" in\n   # Handling of arguments.\n+  \"lib/mkcollections.pl\" ) CONFIG_FILES=\"$CONFIG_FILES lib/mkcollections.pl\" ;;\n   \"Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n   \"doc/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES doc/Makefile\" ;;\n   \"doc/api/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES doc/api/Makefile\" ;;\n   \"external/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES external/Makefile\" ;;\n   \"external/sax/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES external/sax/Makefile\" ;;\n   \"external/w3c_dom/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES external/w3c_dom/Makefile\" ;;\n+  \"external/relaxngDatatype/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES external/relaxngDatatype/Makefile\" ;;\n   \"gnu/classpath/Configuration.java\" ) CONFIG_FILES=\"$CONFIG_FILES gnu/classpath/Configuration.java\" ;;\n   \"include/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES include/Makefile\" ;;\n   \"native/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/Makefile\" ;;\n@@ -17991,10 +18229,12 @@ do\n   \"lib/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES lib/Makefile\" ;;\n   \"lib/gen-classlist.sh\" ) CONFIG_FILES=\"$CONFIG_FILES lib/gen-classlist.sh\" ;;\n   \"lib/copy-vmresources.sh\" ) CONFIG_FILES=\"$CONFIG_FILES lib/copy-vmresources.sh\" ;;\n+  \"tools/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES tools/Makefile\" ;;\n   \"examples/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES examples/Makefile\" ;;\n   \"examples/Makefile.jawt\" ) CONFIG_FILES=\"$CONFIG_FILES examples/Makefile.jawt\" ;;\n   \"$ac_config_links_1\" ) CONFIG_LINKS=\"$CONFIG_LINKS $ac_config_links_1\" ;;\n   \"depfiles\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n+  \"mkcollections.pl\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS mkcollections.pl\" ;;\n   \"$ac_stdint_h\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS $ac_stdint_h\" ;;\n   \"gen-classlist\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gen-classlist\" ;;\n   \"copy-vmresources\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS copy-vmresources\" ;;\n@@ -18121,6 +18361,8 @@ s,@am__leading_dot@,$am__leading_dot,;t t\n s,@AMTAR@,$AMTAR,;t t\n s,@am__tar@,$am__tar,;t t\n s,@am__untar@,$am__untar,;t t\n+s,@CREATE_COLLECTIONS_TRUE@,$CREATE_COLLECTIONS_TRUE,;t t\n+s,@CREATE_COLLECTIONS_FALSE@,$CREATE_COLLECTIONS_FALSE,;t t\n s,@CREATE_JNI_LIBRARIES_TRUE@,$CREATE_JNI_LIBRARIES_TRUE,;t t\n s,@CREATE_JNI_LIBRARIES_FALSE@,$CREATE_JNI_LIBRARIES_FALSE,;t t\n s,@CREATE_CORE_JNI_LIBRARIES_TRUE@,$CREATE_CORE_JNI_LIBRARIES_TRUE,;t t\n@@ -18172,6 +18414,8 @@ s,@CXXDEPMODE@,$CXXDEPMODE,;t t\n s,@am__fastdepCXX_TRUE@,$am__fastdepCXX_TRUE,;t t\n s,@am__fastdepCXX_FALSE@,$am__fastdepCXX_FALSE,;t t\n s,@CXXCPP@,$CXXCPP,;t t\n+s,@PERL@,$PERL,;t t\n+s,@COLLECTIONS_PREFIX@,$COLLECTIONS_PREFIX,;t t\n s,@LIBICONV@,$LIBICONV,;t t\n s,@LTLIBICONV@,$LTLIBICONV,;t t\n s,@WARNING_CFLAGS@,$WARNING_CFLAGS,;t t\n@@ -18190,6 +18434,8 @@ s,@GTK_CFLAGS@,$GTK_CFLAGS,;t t\n s,@GTK_LIBS@,$GTK_LIBS,;t t\n s,@CAIRO_CFLAGS@,$CAIRO_CFLAGS,;t t\n s,@CAIRO_LIBS@,$CAIRO_LIBS,;t t\n+s,@FREETYPE2_CFLAGS@,$FREETYPE2_CFLAGS,;t t\n+s,@FREETYPE2_LIBS@,$FREETYPE2_LIBS,;t t\n s,@PANGOFT2_CFLAGS@,$PANGOFT2_CFLAGS,;t t\n s,@PANGOFT2_LIBS@,$PANGOFT2_LIBS,;t t\n s,@QT_CFLAGS@,$QT_CFLAGS,;t t\n@@ -18232,6 +18478,7 @@ s,@CP@,$CP,;t t\n s,@DATE@,$DATE,;t t\n s,@FIND@,$FIND,;t t\n s,@ZIP@,$ZIP,;t t\n+s,@FASTJAR@,$FASTJAR,;t t\n s,@INSTALL_GLIBJ_ZIP_TRUE@,$INSTALL_GLIBJ_ZIP_TRUE,;t t\n s,@INSTALL_GLIBJ_ZIP_FALSE@,$INSTALL_GLIBJ_ZIP_FALSE,;t t\n s,@INSTALL_CLASS_FILES_TRUE@,$INSTALL_CLASS_FILES_TRUE,;t t\n@@ -19069,6 +19316,7 @@ echo \"$as_me: error: cannot create directory $dirpart/$fdir\" >&2;}\n   done\n done\n  ;;\n+    mkcollections.pl ) chmod 755 lib/mkcollections.pl ;;\n     $ac_stdint_h )\n { echo \"$as_me:$LINENO: creating $ac_stdint_h : $_ac_stdint_h\" >&5\n echo \"$as_me: creating $ac_stdint_h : $_ac_stdint_h\" >&6;}"}, {"sha": "9315404487c9e7f95ac65bd55cd5f42830829a21", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -6,7 +6,7 @@ dnl -----------------------------------------------------------\n dnl define([AC_CACHE_LOAD], )dnl\n dnl define([AC_CACHE_SAVE], )dnl\n \n-AC_INIT([GNU Classpath],[0.20],[classpath@gnu.org],[classpath])\n+AC_INIT([GNU Classpath],[0.90],[classpath@gnu.org],[classpath])\n AC_CONFIG_SRCDIR(java/lang/System.java)\n \n AC_CANONICAL_TARGET\n@@ -38,6 +38,20 @@ AM_INIT_AUTOMAKE([1.9.0 gnu std-options tar-ustar])\n AC_CONFIG_HEADERS([include/config.h])\n AC_PREFIX_DEFAULT(/usr/local/classpath)\n \n+dnl -----------------------------------------------------------\n+dnl Enable collections.jar (disabled by default)\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE([collections],\n+              [AS_HELP_STRING(--enable-collections,create collections.jar [default=no])],\n+              [case x\"${enableval}\" in\n+                xyes) COMPILE_COLLECTIONS=yes; COLLECTIONS_PREFIX=\"\\\"gnu/java/util/collections\\\"\" ;;\n+                xno) COMPILE_COLLECTIONS=no ;;\n+\t\tx) COMPILE_COLLECTIONS=yes; COLLECTIONS_PREFIX=\"\\\"gnu/java/util/collections\\\"\" ;;\n+                *) COMPILE_COLLECTIONS=yes; COLLECTIONS_PREFIX=\"\\\"${enableval}\\\"\" ;;\n+              esac],\n+              [COMPILE_COLLECTIONS=no])\n+AM_CONDITIONAL(CREATE_COLLECTIONS, test \"x${COMPILE_COLLECTIONS}\" = xyes)\n+\n dnl -----------------------------------------------------------\n dnl Enable JNI libraries (enabled by default)\n dnl -----------------------------------------------------------\n@@ -238,6 +252,14 @@ AC_PROG_CC\n AC_PROG_CPP\n AC_PROG_CXX\n \n+if test \"x${COMPILE_COLLECTIONS}\" = xyes; then\n+  AC_PATH_PROG(PERL, [perl])\n+  AC_SUBST(PERL)\n+  AC_SUBST(COLLECTIONS_PREFIX)\n+  AC_CONFIG_FILES([lib/mkcollections.pl])\n+  AC_CONFIG_COMMANDS([mkcollections.pl],[chmod 755 lib/mkcollections.pl])\n+fi\n+\n if test \"x${COMPILE_JNI}\" = xyes; then\n   AC_HEADER_STDC\n \n@@ -359,12 +381,15 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n       PKG_CHECK_MODULES(CAIRO, cairo >= 0.5.0)\n     fi\n \n+    PKG_CHECK_MODULES(FREETYPE2, freetype2)\n     PKG_CHECK_MODULES(PANGOFT2, pangoft2)\n-  \n+\n     AC_SUBST(GTK_CFLAGS)\n     AC_SUBST(GTK_LIBS)\n     AC_SUBST(CAIRO_LIBS)\n     AC_SUBST(CAIRO_CFLAGS)\n+    AC_SUBST(FREETYPE2_LIBS)\n+    AC_SUBST(FREETYPE2_CFLAGS)\n     AC_SUBST(PANGOFT2_LIBS)\n     AC_SUBST(PANGOFT2_CFLAGS)\n   fi\n@@ -572,6 +597,7 @@ doc/api/Makefile\n external/Makefile\n external/sax/Makefile\n external/w3c_dom/Makefile\n+external/relaxngDatatype/Makefile\n gnu/classpath/Configuration.java\n include/Makefile\n native/Makefile\n@@ -598,6 +624,7 @@ scripts/classpath.spec\n lib/Makefile\n lib/gen-classlist.sh\n lib/copy-vmresources.sh\n+tools/Makefile\n examples/Makefile\n examples/Makefile.jawt])\n AC_CONFIG_COMMANDS([gen-classlist],[chmod 755 lib/gen-classlist.sh])"}, {"sha": "8c5bc8759e11c24f846b05c7b8eec5e2b9c3df69", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -80,13 +80,16 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\n CLASSPATH_MODULE = @CLASSPATH_MODULE@\n+COLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n+CREATE_COLLECTIONS_FALSE = @CREATE_COLLECTIONS_FALSE@\n+CREATE_COLLECTIONS_TRUE = @CREATE_COLLECTIONS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n@@ -117,6 +120,7 @@ EGREP = @EGREP@\n ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n+FASTJAR = @FASTJAR@\n FIND = @FIND@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n@@ -128,6 +132,8 @@ FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n+FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n+FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n GJDOC = @GJDOC@\n@@ -178,6 +184,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n QT_CFLAGS = @QT_CFLAGS@\n QT_LIBS = @QT_LIBS@"}, {"sha": "ec881322684753c0c840b846c82a8c4752aa9ec6", "filename": "libjava/classpath/doc/README.jaxp", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2FREADME.jaxp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2FREADME.jaxp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FREADME.jaxp?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -30,6 +30,7 @@ classes in the above packages.\n \n . org.xml.sax.* ... SAX2 interfaces\n . org.w3c.dom.* ... DOM Level 3 interfaces\n+. org.relaxng.datatype.* ... RELAX NG pluggable datatypes API\n \n CONFORMANCE\n \n@@ -175,3 +176,29 @@ using thread context variables.\n Update: thread context variables have been introduced. This is very\n untested though, libxmll therefore still has the single thread\n bottleneck.\n+\n+\n+Validation\n+===================================================\n+\n+Pluggable datatypes\n+---------------------------------------------------\n+Validators should use the RELAX NG pluggable datatypes API to retrieve\n+datatype (XML Schema simple type) implementations in a schema-neutral\n+fashion. The following code demonstrates looking up a W3C XML Schema\n+nonNegativeInteger datatype:\n+\n+  DatatypeLibrary xsd = DatatypeLibraryLoader\n+    .createDatatypeLibrary(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n+  Datatype nonNegativeInteger = xsd.createDatatype(\"nonNegativeInteger\");\n+\n+It is also possible to create new types by derivation. For instance,\n+to create a datatype that will match a US ZIP code:\n+\n+  DatatypeBuilder b = xsd.createDatatypeBuilder(\"string\");\n+  b.addParameter(\"pattern\", \"(^[0-9]{5}$)|(^[0-9]{5}-[0-9]{4}$)\");\n+  Datatype zipCode = b.createDatatype();\n+\n+A datatype library implementation for XML Schema is provided; other\n+library implementations may be added.\n+"}, {"sha": "96c586e07f3e6c127dec414fdbcadc69d26eccff", "filename": "libjava/classpath/doc/api/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -44,6 +44,7 @@ create_html:\n \t-licensetext \\\n \t-linksource \\\n \t-splitindex \\\n+\t-validhtml \\\n \t-d html \\\n \t-doctitle \"GNU Classpath $(VERSION)\" \\\n \t-windowtitle \"GNU Classpath $(VERSION) Documentation\" \\"}, {"sha": "fbdc5f7e01e017364ce25552c7cd5424933a8d1c", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -73,13 +73,16 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\n CLASSPATH_MODULE = @CLASSPATH_MODULE@\n+COLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n+CREATE_COLLECTIONS_FALSE = @CREATE_COLLECTIONS_FALSE@\n+CREATE_COLLECTIONS_TRUE = @CREATE_COLLECTIONS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n@@ -110,6 +113,7 @@ EGREP = @EGREP@\n ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n+FASTJAR = @FASTJAR@\n FIND = @FIND@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n@@ -121,6 +125,8 @@ FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n+FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n+FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n GJDOC = @GJDOC@\n@@ -171,6 +177,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n QT_CFLAGS = @QT_CFLAGS@\n QT_LIBS = @QT_LIBS@\n@@ -449,6 +456,7 @@ create_html:\n \t-licensetext \\\n \t-linksource \\\n \t-splitindex \\\n+\t-validhtml \\\n \t-d html \\\n \t-doctitle \"GNU Classpath $(VERSION)\" \\\n \t-windowtitle \"GNU Classpath $(VERSION) Documentation\" \\"}, {"sha": "6dc2bd2fe096e614348b1b9f5fec6588cc0a9fc4", "filename": "libjava/classpath/doc/unicode/Blocks-4.0.0.txt", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Funicode%2FBlocks-4.0.0.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Funicode%2FBlocks-4.0.0.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Funicode%2FBlocks-4.0.0.txt?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,133 @@\n+# Blocks-4.0.0.txt\n+# Correlated with Unicode 4.0\n+# Note: The casing of block names is not normative.\n+#       For example, \"Basic Latin\" and \"BASIC LATIN\" are equivalent.\n+#\n+# Code points not explicitly listed in this file are given the value No_Block.\n+#\n+# Start Code..End Code; Block Name\n+0000..007F; Basic Latin\n+0080..00FF; Latin-1 Supplement\n+0100..017F; Latin Extended-A\n+0180..024F; Latin Extended-B\n+0250..02AF; IPA Extensions\n+02B0..02FF; Spacing Modifier Letters\n+0300..036F; Combining Diacritical Marks\n+0370..03FF; Greek and Coptic\n+0400..04FF; Cyrillic\n+0500..052F; Cyrillic Supplementary\n+0530..058F; Armenian\n+0590..05FF; Hebrew\n+0600..06FF; Arabic\n+0700..074F; Syriac\n+0780..07BF; Thaana\n+0900..097F; Devanagari\n+0980..09FF; Bengali\n+0A00..0A7F; Gurmukhi\n+0A80..0AFF; Gujarati\n+0B00..0B7F; Oriya\n+0B80..0BFF; Tamil\n+0C00..0C7F; Telugu\n+0C80..0CFF; Kannada\n+0D00..0D7F; Malayalam\n+0D80..0DFF; Sinhala\n+0E00..0E7F; Thai\n+0E80..0EFF; Lao\n+0F00..0FFF; Tibetan\n+1000..109F; Myanmar\n+10A0..10FF; Georgian\n+1100..11FF; Hangul Jamo\n+1200..137F; Ethiopic\n+13A0..13FF; Cherokee\n+1400..167F; Unified Canadian Aboriginal Syllabics\n+1680..169F; Ogham\n+16A0..16FF; Runic\n+1700..171F; Tagalog\n+1720..173F; Hanunoo\n+1740..175F; Buhid\n+1760..177F; Tagbanwa\n+1780..17FF; Khmer\n+1800..18AF; Mongolian\n+1900..194F; Limbu\n+1950..197F; Tai Le\n+19E0..19FF; Khmer Symbols\n+1D00..1D7F; Phonetic Extensions\n+1E00..1EFF; Latin Extended Additional\n+1F00..1FFF; Greek Extended\n+2000..206F; General Punctuation\n+2070..209F; Superscripts and Subscripts\n+20A0..20CF; Currency Symbols\n+20D0..20FF; Combining Diacritical Marks for Symbols\n+2100..214F; Letterlike Symbols\n+2150..218F; Number Forms\n+2190..21FF; Arrows\n+2200..22FF; Mathematical Operators\n+2300..23FF; Miscellaneous Technical\n+2400..243F; Control Pictures\n+2440..245F; Optical Character Recognition\n+2460..24FF; Enclosed Alphanumerics\n+2500..257F; Box Drawing\n+2580..259F; Block Elements\n+25A0..25FF; Geometric Shapes\n+2600..26FF; Miscellaneous Symbols\n+2700..27BF; Dingbats\n+27C0..27EF; Miscellaneous Mathematical Symbols-A\n+27F0..27FF; Supplemental Arrows-A\n+2800..28FF; Braille Patterns\n+2900..297F; Supplemental Arrows-B\n+2980..29FF; Miscellaneous Mathematical Symbols-B\n+2A00..2AFF; Supplemental Mathematical Operators\n+2B00..2BFF; Miscellaneous Symbols and Arrows\n+2E80..2EFF; CJK Radicals Supplement\n+2F00..2FDF; Kangxi Radicals\n+2FF0..2FFF; Ideographic Description Characters\n+3000..303F; CJK Symbols and Punctuation\n+3040..309F; Hiragana\n+30A0..30FF; Katakana\n+3100..312F; Bopomofo\n+3130..318F; Hangul Compatibility Jamo\n+3190..319F; Kanbun\n+31A0..31BF; Bopomofo Extended\n+31F0..31FF; Katakana Phonetic Extensions\n+3200..32FF; Enclosed CJK Letters and Months\n+3300..33FF; CJK Compatibility\n+3400..4DBF; CJK Unified Ideographs Extension A\n+4DC0..4DFF; Yijing Hexagram Symbols\n+4E00..9FFF; CJK Unified Ideographs\n+A000..A48F; Yi Syllables\n+A490..A4CF; Yi Radicals\n+AC00..D7AF; Hangul Syllables\n+D800..DB7F; High Surrogates\n+DB80..DBFF; High Private Use Surrogates\n+DC00..DFFF; Low Surrogates\n+E000..F8FF; Private Use Area\n+F900..FAFF; CJK Compatibility Ideographs\n+FB00..FB4F; Alphabetic Presentation Forms\n+FB50..FDFF; Arabic Presentation Forms-A\n+FE00..FE0F; Variation Selectors\n+FE20..FE2F; Combining Half Marks\n+FE30..FE4F; CJK Compatibility Forms\n+FE50..FE6F; Small Form Variants\n+FE70..FEFF; Arabic Presentation Forms-B\n+FF00..FFEF; Halfwidth and Fullwidth Forms\n+FFF0..FFFF; Specials\n+10000..1007F; Linear B Syllabary\n+10080..100FF; Linear B Ideograms\n+10100..1013F; Aegean Numbers\n+10300..1032F; Old Italic\n+10330..1034F; Gothic\n+10380..1039F; Ugaritic\n+10400..1044F; Deseret\n+10450..1047F; Shavian\n+10480..104AF; Osmanya\n+10800..1083F; Cypriot Syllabary\n+1D000..1D0FF; Byzantine Musical Symbols\n+1D100..1D1FF; Musical Symbols\n+1D300..1D35F; Tai Xuan Jing Symbols\n+1D400..1D7FF; Mathematical Alphanumeric Symbols\n+20000..2A6DF; CJK Unified Ideographs Extension B\n+2F800..2FA1F; CJK Compatibility Ideographs Supplement\n+E0000..E007F; Tags\n+E0100..E01EF; Variation Selectors Supplement\n+F0000..FFFFF; Supplementary Private Use Area-A\n+100000..10FFFF; Supplementary Private Use Area-B"}, {"sha": "34d1c61de37ea47eb7a43bd6b8aae8c93b4bc87b", "filename": "libjava/classpath/doc/unicode/SpecialCasing-4.0.0.txt", "status": "added", "additions": 256, "deletions": 0, "changes": 256, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Funicode%2FSpecialCasing-4.0.0.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Funicode%2FSpecialCasing-4.0.0.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Funicode%2FSpecialCasing-4.0.0.txt?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,256 @@\n+# SpecialCasing-4.0.0.txt\n+# Date: 2003-03-14, 20:22:04 GMT [MD]\n+#\n+# Special Casing Properties\n+#\n+# This file is a supplement to the UnicodeData file.\n+# It contains additional information about the casing of Unicode characters.\n+# (For compatibility, the UnicodeData.txt file only contains case mappings for\n+# characters where they are 1-1, and does not have locale-specific mappings.)\n+# For more information, see the discussion of Case Mappings in the Unicode Standard.\n+#\n+# All code points not listed in this file that do not have a simple case mappings\n+# in UnicodeData.txt map to themselves.\n+# ================================================================================\n+# Format\n+# ================================================================================\n+# The entries in this file are in the following machine-readable format:\n+#\n+# <code>; <lower> ; <title> ; <upper> ; (<condition_list> ;)? # <comment>\n+#\n+# <code>, <lower>, <title>, and <upper> provide character values in hex. If there is more than\n+# one character, they are separated by spaces. Other than as used to separate elements,\n+# spaces are to be ignored.\n+#\n+# The <condition_list> is optional. Where present, it consists of one or more locales or contexts,\n+# separated by spaces. In these conditions:\n+# - A condition list overrides the normal behavior if all of the listed conditions are true.\n+# - The context is always the context of the characters in the original string,\n+#   NOT in the resulting string.\n+# - Case distinctions in the condition list are not significant.\n+# - Conditions preceded by \"Not_\" represent the negation of the condition.\n+#\n+# A locale is defined as:\n+# <locale> := <ISO_639_code> ( \"_\" <ISO_3166_code> ( \"_\" <variant> )? )?\n+# <ISO_3166_code> := 2-letter ISO country code,\n+# <ISO_639_code> :=  2-letter ISO language code\n+#\n+# A context is one of the following, as defined in the Unicode Standard:\n+#   Final_Sigma, After_Soft_Dotted, More_Above, Before_Dot, Not_Before_Dot, After_I\n+#\n+# Parsers of this file must be prepared to deal with future additions to this format:\n+#  * Additional contexts\n+#  * Additional fields\n+# ================================================================================\n+\n+# ================================================================================\n+# Unconditional mappings\n+# ================================================================================\n+\n+# The German es-zed is special--the normal mapping is to SS.\n+# Note: the titlecase should never occur in practice. It is equal to titlecase(uppercase(<es-zed>))\n+\n+00DF; 00DF; 0053 0073; 0053 0053; # LATIN SMALL LETTER SHARP S\n+\n+# Preserve canonical equivalence for I with dot. Turkic is handled below.\n+\n+0130; 0069 0307; 0130; 0130; # LATIN CAPITAL LETTER I WITH DOT ABOVE\n+\n+# Ligatures\n+\n+FB00; FB00; 0046 0066; 0046 0046; # LATIN SMALL LIGATURE FF\n+FB01; FB01; 0046 0069; 0046 0049; # LATIN SMALL LIGATURE FI\n+FB02; FB02; 0046 006C; 0046 004C; # LATIN SMALL LIGATURE FL\n+FB03; FB03; 0046 0066 0069; 0046 0046 0049; # LATIN SMALL LIGATURE FFI\n+FB04; FB04; 0046 0066 006C; 0046 0046 004C; # LATIN SMALL LIGATURE FFL\n+FB05; FB05; 0053 0074; 0053 0054; # LATIN SMALL LIGATURE LONG S T\n+FB06; FB06; 0053 0074; 0053 0054; # LATIN SMALL LIGATURE ST\n+\n+0587; 0587; 0535 0582; 0535 0552; # ARMENIAN SMALL LIGATURE ECH YIWN\n+FB13; FB13; 0544 0576; 0544 0546; # ARMENIAN SMALL LIGATURE MEN NOW\n+FB14; FB14; 0544 0565; 0544 0535; # ARMENIAN SMALL LIGATURE MEN ECH\n+FB15; FB15; 0544 056B; 0544 053B; # ARMENIAN SMALL LIGATURE MEN INI\n+FB16; FB16; 054E 0576; 054E 0546; # ARMENIAN SMALL LIGATURE VEW NOW\n+FB17; FB17; 0544 056D; 0544 053D; # ARMENIAN SMALL LIGATURE MEN XEH\n+\n+# No corresponding uppercase precomposed character\n+\n+0149; 0149; 02BC 004E; 02BC 004E; # LATIN SMALL LETTER N PRECEDED BY APOSTROPHE\n+0390; 0390; 0399 0308 0301; 0399 0308 0301; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS\n+03B0; 03B0; 03A5 0308 0301; 03A5 0308 0301; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS\n+01F0; 01F0; 004A 030C; 004A 030C; # LATIN SMALL LETTER J WITH CARON\n+1E96; 1E96; 0048 0331; 0048 0331; # LATIN SMALL LETTER H WITH LINE BELOW\n+1E97; 1E97; 0054 0308; 0054 0308; # LATIN SMALL LETTER T WITH DIAERESIS\n+1E98; 1E98; 0057 030A; 0057 030A; # LATIN SMALL LETTER W WITH RING ABOVE\n+1E99; 1E99; 0059 030A; 0059 030A; # LATIN SMALL LETTER Y WITH RING ABOVE\n+1E9A; 1E9A; 0041 02BE; 0041 02BE; # LATIN SMALL LETTER A WITH RIGHT HALF RING\n+1F50; 1F50; 03A5 0313; 03A5 0313; # GREEK SMALL LETTER UPSILON WITH PSILI\n+1F52; 1F52; 03A5 0313 0300; 03A5 0313 0300; # GREEK SMALL LETTER UPSILON WITH PSILI AND VARIA\n+1F54; 1F54; 03A5 0313 0301; 03A5 0313 0301; # GREEK SMALL LETTER UPSILON WITH PSILI AND OXIA\n+1F56; 1F56; 03A5 0313 0342; 03A5 0313 0342; # GREEK SMALL LETTER UPSILON WITH PSILI AND PERISPOMENI\n+1FB6; 1FB6; 0391 0342; 0391 0342; # GREEK SMALL LETTER ALPHA WITH PERISPOMENI\n+1FC6; 1FC6; 0397 0342; 0397 0342; # GREEK SMALL LETTER ETA WITH PERISPOMENI\n+1FD2; 1FD2; 0399 0308 0300; 0399 0308 0300; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND VARIA\n+1FD3; 1FD3; 0399 0308 0301; 0399 0308 0301; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND OXIA\n+1FD6; 1FD6; 0399 0342; 0399 0342; # GREEK SMALL LETTER IOTA WITH PERISPOMENI\n+1FD7; 1FD7; 0399 0308 0342; 0399 0308 0342; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND PERISPOMENI\n+1FE2; 1FE2; 03A5 0308 0300; 03A5 0308 0300; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND VARIA\n+1FE3; 1FE3; 03A5 0308 0301; 03A5 0308 0301; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND OXIA\n+1FE4; 1FE4; 03A1 0313; 03A1 0313; # GREEK SMALL LETTER RHO WITH PSILI\n+1FE6; 1FE6; 03A5 0342; 03A5 0342; # GREEK SMALL LETTER UPSILON WITH PERISPOMENI\n+1FE7; 1FE7; 03A5 0308 0342; 03A5 0308 0342; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND PERISPOMENI\n+1FF6; 1FF6; 03A9 0342; 03A9 0342; # GREEK SMALL LETTER OMEGA WITH PERISPOMENI\n+\n+# IMPORTANT-when capitalizing iota-subscript (0345)\n+#  It MUST be in normalized form--moved to the end of any sequence of combining marks.\n+#  This is because logically it represents a following base character!\n+#  E.g. <iota_subscript> (<Mn> | <Mc> | <Me>)+ => (<Mn> | <Mc> | <Me>)+ <iota_subscript>\n+# It should never be the first character in a word, so in titlecasing it can be left as is.\n+\n+# The following cases are already in the UnicodeData file, so are only commented here.\n+\n+# 0345; 0345; 0345; 0399; # COMBINING GREEK YPOGEGRAMMENI\n+\n+# All letters with YPOGEGRAMMENI (iota-subscript) or PROSGEGRAMMENI (iota adscript)\n+# have special uppercases.\n+# Note: characters with PROSGEGRAMMENI are actually titlecase, not uppercase!\n+\n+1F80; 1F80; 1F88; 1F08 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND YPOGEGRAMMENI\n+1F81; 1F81; 1F89; 1F09 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND YPOGEGRAMMENI\n+1F82; 1F82; 1F8A; 1F0A 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND VARIA AND YPOGEGRAMMENI\n+1F83; 1F83; 1F8B; 1F0B 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND VARIA AND YPOGEGRAMMENI\n+1F84; 1F84; 1F8C; 1F0C 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND OXIA AND YPOGEGRAMMENI\n+1F85; 1F85; 1F8D; 1F0D 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND OXIA AND YPOGEGRAMMENI\n+1F86; 1F86; 1F8E; 1F0E 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI\n+1F87; 1F87; 1F8F; 1F0F 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI\n+1F88; 1F80; 1F88; 1F08 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PROSGEGRAMMENI\n+1F89; 1F81; 1F89; 1F09 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PROSGEGRAMMENI\n+1F8A; 1F82; 1F8A; 1F0A 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1F8B; 1F83; 1F8B; 1F0B 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1F8C; 1F84; 1F8C; 1F0C 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1F8D; 1F85; 1F8D; 1F0D 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1F8E; 1F86; 1F8E; 1F0E 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1F8F; 1F87; 1F8F; 1F0F 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1F90; 1F90; 1F98; 1F28 0399; # GREEK SMALL LETTER ETA WITH PSILI AND YPOGEGRAMMENI\n+1F91; 1F91; 1F99; 1F29 0399; # GREEK SMALL LETTER ETA WITH DASIA AND YPOGEGRAMMENI\n+1F92; 1F92; 1F9A; 1F2A 0399; # GREEK SMALL LETTER ETA WITH PSILI AND VARIA AND YPOGEGRAMMENI\n+1F93; 1F93; 1F9B; 1F2B 0399; # GREEK SMALL LETTER ETA WITH DASIA AND VARIA AND YPOGEGRAMMENI\n+1F94; 1F94; 1F9C; 1F2C 0399; # GREEK SMALL LETTER ETA WITH PSILI AND OXIA AND YPOGEGRAMMENI\n+1F95; 1F95; 1F9D; 1F2D 0399; # GREEK SMALL LETTER ETA WITH DASIA AND OXIA AND YPOGEGRAMMENI\n+1F96; 1F96; 1F9E; 1F2E 0399; # GREEK SMALL LETTER ETA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI\n+1F97; 1F97; 1F9F; 1F2F 0399; # GREEK SMALL LETTER ETA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI\n+1F98; 1F90; 1F98; 1F28 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND PROSGEGRAMMENI\n+1F99; 1F91; 1F99; 1F29 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND PROSGEGRAMMENI\n+1F9A; 1F92; 1F9A; 1F2A 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1F9B; 1F93; 1F9B; 1F2B 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1F9C; 1F94; 1F9C; 1F2C 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1F9D; 1F95; 1F9D; 1F2D 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1F9E; 1F96; 1F9E; 1F2E 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1F9F; 1F97; 1F9F; 1F2F 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1FA0; 1FA0; 1FA8; 1F68 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND YPOGEGRAMMENI\n+1FA1; 1FA1; 1FA9; 1F69 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND YPOGEGRAMMENI\n+1FA2; 1FA2; 1FAA; 1F6A 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND VARIA AND YPOGEGRAMMENI\n+1FA3; 1FA3; 1FAB; 1F6B 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND VARIA AND YPOGEGRAMMENI\n+1FA4; 1FA4; 1FAC; 1F6C 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND OXIA AND YPOGEGRAMMENI\n+1FA5; 1FA5; 1FAD; 1F6D 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND OXIA AND YPOGEGRAMMENI\n+1FA6; 1FA6; 1FAE; 1F6E 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI\n+1FA7; 1FA7; 1FAF; 1F6F 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI\n+1FA8; 1FA0; 1FA8; 1F68 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PROSGEGRAMMENI\n+1FA9; 1FA1; 1FA9; 1F69 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PROSGEGRAMMENI\n+1FAA; 1FA2; 1FAA; 1F6A 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND VARIA AND PROSGEGRAMMENI\n+1FAB; 1FA3; 1FAB; 1F6B 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND VARIA AND PROSGEGRAMMENI\n+1FAC; 1FA4; 1FAC; 1F6C 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND OXIA AND PROSGEGRAMMENI\n+1FAD; 1FA5; 1FAD; 1F6D 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND OXIA AND PROSGEGRAMMENI\n+1FAE; 1FA6; 1FAE; 1F6E 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI\n+1FAF; 1FA7; 1FAF; 1F6F 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI\n+1FB3; 1FB3; 1FBC; 0391 0399; # GREEK SMALL LETTER ALPHA WITH YPOGEGRAMMENI\n+1FBC; 1FB3; 1FBC; 0391 0399; # GREEK CAPITAL LETTER ALPHA WITH PROSGEGRAMMENI\n+1FC3; 1FC3; 1FCC; 0397 0399; # GREEK SMALL LETTER ETA WITH YPOGEGRAMMENI\n+1FCC; 1FC3; 1FCC; 0397 0399; # GREEK CAPITAL LETTER ETA WITH PROSGEGRAMMENI\n+1FF3; 1FF3; 1FFC; 03A9 0399; # GREEK SMALL LETTER OMEGA WITH YPOGEGRAMMENI\n+1FFC; 1FF3; 1FFC; 03A9 0399; # GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI\n+\n+# Some characters with YPOGEGRAMMENI are also have no corresponding titlecases\n+\n+1FB2; 1FB2; 1FBA 0345; 1FBA 0399; # GREEK SMALL LETTER ALPHA WITH VARIA AND YPOGEGRAMMENI\n+1FB4; 1FB4; 0386 0345; 0386 0399; # GREEK SMALL LETTER ALPHA WITH OXIA AND YPOGEGRAMMENI\n+1FC2; 1FC2; 1FCA 0345; 1FCA 0399; # GREEK SMALL LETTER ETA WITH VARIA AND YPOGEGRAMMENI\n+1FC4; 1FC4; 0389 0345; 0389 0399; # GREEK SMALL LETTER ETA WITH OXIA AND YPOGEGRAMMENI\n+1FF2; 1FF2; 1FFA 0345; 1FFA 0399; # GREEK SMALL LETTER OMEGA WITH VARIA AND YPOGEGRAMMENI\n+1FF4; 1FF4; 038F 0345; 038F 0399; # GREEK SMALL LETTER OMEGA WITH OXIA AND YPOGEGRAMMENI\n+\n+1FB7; 1FB7; 0391 0342 0345; 0391 0342 0399; # GREEK SMALL LETTER ALPHA WITH PERISPOMENI AND YPOGEGRAMMENI\n+1FC7; 1FC7; 0397 0342 0345; 0397 0342 0399; # GREEK SMALL LETTER ETA WITH PERISPOMENI AND YPOGEGRAMMENI\n+1FF7; 1FF7; 03A9 0342 0345; 03A9 0342 0399; # GREEK SMALL LETTER OMEGA WITH PERISPOMENI AND YPOGEGRAMMENI\n+\n+# ================================================================================\n+# Conditional mappings\n+# ================================================================================\n+\n+# Special case for final form of sigma\n+\n+03A3; 03C2; 03A3; 03A3; Final_Sigma; # GREEK CAPITAL LETTER SIGMA\n+\n+# Note: the following cases for non-final are already in the UnicodeData file.\n+\n+# 03A3; 03C3; 03A3; 03A3; # GREEK CAPITAL LETTER SIGMA\n+# 03C3; 03C3; 03A3; 03A3; # GREEK SMALL LETTER SIGMA\n+# 03C2; 03C2; 03A3; 03A3; # GREEK SMALL LETTER FINAL SIGMA\n+\n+# Note: the following cases are not included, since they would case-fold in lowercasing\n+\n+# 03C3; 03C2; 03A3; 03A3; Final_Sigma; # GREEK SMALL LETTER SIGMA\n+# 03C2; 03C3; 03A3; 03A3; Not_Final_Sigma; # GREEK SMALL LETTER FINAL SIGMA\n+\n+# ================================================================================\n+# Locale-sensitive mappings\n+# ================================================================================\n+\n+# Lithuanian\n+\n+# Lithuanian retains the dot in a lowercase i when followed by accents.\n+\n+# Remove DOT ABOVE after \"i\" with upper or titlecase\n+\n+0307; 0307; ; ; lt After_Soft_Dotted; # COMBINING DOT ABOVE\n+\n+# Introduce an explicit dot above when lowercasing capital I's and J's\n+# whenever there are more accents above.\n+# (of the accents used in Lithuanian: grave, acute, tilde above, and ogonek)\n+\n+0049; 0069 0307; 0049; 0049; lt More_Above; # LATIN CAPITAL LETTER I\n+004A; 006A 0307; 004A; 004A; lt More_Above; # LATIN CAPITAL LETTER J\n+012E; 012F 0307; 012E; 012E; lt More_Above; # LATIN CAPITAL LETTER I WITH OGONEK\n+00CC; 0069 0307 0300; 00CC; 00CC; lt; # LATIN CAPITAL LETTER I WITH GRAVE\n+00CD; 0069 0307 0301; 00CD; 00CD; lt; # LATIN CAPITAL LETTER I WITH ACUTE\n+0128; 0069 0307 0303; 0128; 0128; lt; # LATIN CAPITAL LETTER I WITH TILDE\n+\n+# ================================================================================\n+\n+# Turkish and Azeri\n+\n+# I and i-dotless; I-dot and i are case pairs in Turkish and Azeri\n+# The following rules handle those cases.\n+\n+0130; 0069; 0130; 0130; tr; # LATIN CAPITAL LETTER I WITH DOT ABOVE\n+0130; 0069; 0130; 0130; az; # LATIN CAPITAL LETTER I WITH DOT ABOVE\n+\n+# When lowercasing, remove dot_above in the sequence I + dot_above, which will turn into i.\n+# This matches the behavior of the canonically equivalent I-dot_above\n+\n+0307; ; 0307; 0307; tr After_I; # COMBINING DOT ABOVE\n+0307; ; 0307; 0307; az After_I; # COMBINING DOT ABOVE\n+\n+# When lowercasing, unless an I is before a dot_above, it turns into a dotless i.\n+\n+0049; 0131; 0049; 0049; tr Not_Before_Dot; # LATIN CAPITAL LETTER I\n+0049; 0131; 0049; 0049; az Not_Before_Dot; # LATIN CAPITAL LETTER I\n+\n+# When uppercasing, i turns into a dotted capital I\n+\n+0069; 0069; 0130; 0130; tr; # LATIN SMALL LETTER I\n+0069; 0069; 0130; 0130; az; # LATIN SMALL LETTER I\n+\n+# Note: the following case is already in the UnicodeData file.\n+\n+# 0131; 0131; 0049; 0049; tr; # LATIN SMALL LETTER DOTLESS I"}, {"sha": "86ea1cf9f684cca1f8d2690f1462a9aba177ba37", "filename": "libjava/classpath/doc/unicode/UnicodeData-4.0.0.txt", "status": "added", "additions": 15100, "deletions": 0, "changes": 15100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Funicode%2FUnicodeData-4.0.0.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Funicode%2FUnicodeData-4.0.0.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Funicode%2FUnicodeData-4.0.0.txt?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "e9f10460125ac848bc4d63689dbbe05e8b2d9d7e", "filename": "libjava/classpath/doc/vmintegration.texinfo", "status": "modified", "additions": 71, "deletions": 18, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fvmintegration.texinfo?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -227,6 +227,7 @@ become operable.\n * java.lang.VMString::\n * java.lang.VMThread::\n * java.lang.VMInstrumentationImpl::\n+* java.lang.VMMath::\n @end menu\n \n @node java.lang.VMClass, java.lang.VMObject ,java.lang,java.lang\n@@ -684,17 +685,18 @@ having returned true, and is thus deprecated as a result.\n @end itemize\n @end itemize\n \n-@node java.lang.VMInstrumentationImpl,, java.lang.VMThread, java.lang\n+@node java.lang.VMInstrumentationImpl, java.lang.VMMath, java.lang.VMThread, java.lang\n @subsection @code{java.lang.VMInstrumentationImpl}\n \n The @code{java.lang.VMInstrumentationImpl} and\n-@code{java.lang.InstrumentationImpl} provides an implementation of the\n+@code{java.lang.InstrumentationImpl} classes provide an implementation of the\n @code{java.lang.instrument.Instrument} interface. This interface is for java\n 1.5 and is only in the generics branch.\n-A @code{InstrumentationImpl} object should be given to any agent\n-given in the command line (see the @code{java.lang.instrument} package\n-documentation). A VM has to implement the static native methods of the\n-@code{VMInstrumentationImpl} class.\n+A @code{InstrumentationImpl} object should be created by the VM when agents\n+are given in the command line (see the @code{java.lang.instrument} package\n+documentation). The VM has to set the static field\n+@code{VMClassLoader.instrumenter} to this object. The VM should implement the\n+static native methods of the @code{VMInstrumentationImpl} class.\n \n @itemize @bullet\n @item @code{isRedefineClassesSupported()} -- Returns true if the JVM supports\n@@ -707,21 +709,72 @@ by a specific class loader.\n @item @code{getObjectSize()} -- Gives the size of an object.\n @end itemize\n \n-When agents are defined, the VM has to call transformers of the\n-@code{InstrumentImpl} object each time a class is loaded, eg a call to\n-@code{VMClassLoader.defineClass}. The @code{InstrumentationImpl} class defines\n-a method that has to be called before reading a class file in the VM.\n+Instrumentation allows to modify the bytecode of a class before it gets read\n+by the VM. In GNU Classpath, the @code{ClassLoader.defineClass} method calls\n+the @code{VMClassLoader.defineClassWithTransformers} method which first checks\n+if @code{VMClassLoader.instrumenter} is @code{null}. If it's the case, it\n+directly calls @code{VMClassLoader.defineClass}. If it's not the case, the\n+method calls at first the @code{InstrumentationImpl.callTransformers} method,\n+which calls each transformer registered to the @code{InstrumentationImpl}\n+object and returns a new bytecode array. Then, it calls the\n+@code{VMClassLoader.defineClass} method with this new bytecode array.\n+\n+The second use of instrumentation is to redefine a class after it has been\n+loaded by the VM. This is done in the Java application by calling the\n+@code{Instrumentation.redefineClasses} method of the standard interface on\n+a @code{Instrumentation} object. The @code{InstrumentationImpl.redefineClasses}\n+method calls the @code{VMInstrumentationImpl.redefineClasses} native method\n+which must be implemented by the VM. The implementation should call the\n+@code{InstrumentationImpl.callTransformers} method.\n+\n+@node java.lang.VMMath, , java.lang.VMInstrumentationImpl, java.lang\n+@subsection @code{java.lang.VMMath}\n+\n+The @code{VMMath} class provides a series of native methods\n+for some of the mathematical functions present in @code{java.lang.Math}.\n+Classpath provides a default implementation of these which maps the\n+functions to those provided by @code{fdlibm}.  VM implementors are welcome\n+to replace this with more efficent implementations, as long as the accuracy\n+contract of these methods, specified in @code{java.lang.Math}, is maintained.\n \n @itemize @bullet\n-@item @code{callTransformers} -- Calls each transformer registered to\n-the @code{InstrumentationImpl} object and returns a new bytecode file.\n+@item 1.0\n+@itemize @bullet\n+@item @code{sin(double)} -- Returns the sine value for the given angle.\n+@item @code{cos(double)} -- Returns the cosine value for the given angle.\n+@item @code{tan(double)} -- Returns the tangent value for the given angle.\n+@item @code{asin(double)} -- Returns the arc sine value for the given angle.\n+@item @code{acos(double)} -- Returns the arc cosine value for the given angle.\n+@item @code{atan(double)} -- Returns the arc tangent value for the given angle.\n+@item @code{atan2(double,double)} -- Returns the arc tangent of the ratio of\n+the two arguments.\n+@item @code{exp(double)} -- Returns the exponent raised to the given power.\n+@item @code{log(double)} -- Returns the natural logarithm for the given value.\n+@item @code{sqrt(double)} -- Returns the square root of the value.\n+@item @code{pow(double,double)} -- Returns x to the power of y.\n+@item @code{IEEEremainder(double,double)} -- Returns the IEEE 754 remainder\n+for the two values.\n+@item @code{ceil(double)} -- Returns the nearest integer >= the value.\n+@item @code{floor(double)} -- Returns the nearest integer <= the value.\n+@item @code{rint(double)} -- Returns the nearest integer or the even one\n+if the distance between the two is equal.\n+@end itemize\n+@item 1.5\n+@itemize @bullet\n+@item @code{cbrt(double)} -- Returns the cube root of the value.\n+@item @code{cosh(double)} -- Returns the hyperbolic cosine value for the given\n+angle.\n+@item @code{expm1(double)} -- Returns the exponent of the value minus one.\n+@item @code{hypot(double,double)} -- Returns the hypotenuse corresponding to\n+x and y.\n+@item @code{log10(double)} -- Returns the base 10 logarithm of the given value.\n+@item @code{log1p(double)} -- Returns the natural logarithm of the value plus\n+one.\n+@item @code{sinh(double)} -- Returns the hyperbolic sine value for the given\n+angle.\n+@item @code{tanh(double)} -- Returns the hyperbolic tangent value for the given angle.\n+@end itemize\n @end itemize\n-\n-No default implementation is provided in gnu classpath for the\n-@code{VMInstrumentationImpl} methods. A default implementation will perhaps\n-be written, but it might break the @code{ClassLoader/VMClassLoader} interface\n-for calling the @code{InstrumentationImpl.callTransformers} when a class byte\n-code is defined with @code{ClassLoader.defineClass}.\n \n @node gnu.classpath, java.util, java.lang, Classpath Hooks\n @section @code{gnu.classpath}"}, {"sha": "054185d87ec0b9092cf89a25e27b406932d9a1ff", "filename": "libjava/classpath/doc/www.gnu.org/announce/20060113.wml", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20060113.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20060113.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fannounce%2F20060113.wml?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,289 @@\n+#!wml --include=..\n+\n+#use wml::std::page\n+#use wml::std::lang\n+#use wml::fmt::isolatin\n+#use wml::std::case global=upper\n+\n+<lang:star:slice:>\n+\n+<set-var last-modified-author=\"mjw\">\n+\n+#include <include/macros.wml>\n+\n+<header title=\"GNU Classpath 0.20 Announcement (2006-01-13)\"> \n+<pre>\n+GNU Classpath 0.20 released\n+\n+GNU Classpath, essential libraries for java, is a project to create\n+free core class libraries for use with runtimes, compilers and tools\n+for the java programming language.\n+\n+The GNU Classpath developer snapshot releases are not directly aimed\n+at the end user but are meant to be integrated into larger development\n+platforms. For example the GCC (gcj) and Kaffe projects will use the\n+developer snapshots as a base for future versions. More projects based\n+on GNU Classpath: http://www.gnu.org/software/classpath/stories.html\n+\n+Some highlights of changes in this release (more extensive list below):\n+\n+  New StAX pull parser and SAX-over-StAX driver. Full XMLEncoder\n+  implementation. The packages javax.sound.sampled, javax.print.attribute\n+  and javax.print.event have been implemented. Lots of new datatransfer,\n+  print, swing and swing.text work. Performance improvements in the\n+  painting/layout mechanism. Additional 1.5 support, including (separate)\n+  generic branch release. SecurityManager cleanups and start of review\n+  of all Permission checks. Buildable on cygwin. Fully buildable as\n+  \"in-workspace\" library-plus-vm inside (native) Eclipse. Real world\n+  Free Swing and CORBA example added.\n+\n+GNU Classpath 0.20 also comes in a \"generic\" version.\n+classpath-0.20-generics contains a version of the core library\n+that uses the new 1.5 language features such as generics and\n+enumerations. ECJ, JamVM, IKVM and Cacao are known to support the\n+generics release (*). And you should be able to run Eclipse 3.1 with\n+it to develop programs that use the new 1.5 language and core library\n+additions. classpath-generics is a work in progress and not as\n+extensively tested as our regular releases. But please try it out if\n+you want to help us test the new 1.5 support of the core libraries.\n+\n+(*) There is one additional VM interface needed for the VMClassLoader\n+    static final Class defineClassWithTransformers(ClassLoader loader,\n+        String name, byte[] data, int offset, int len, ProtectionDomain pd)\n+    Which is used for the new java.management.instrumentation support.\n+    See the VM Integration Guide for more details:\n+    http://www.gnu.org/software/classpath/docs/vmintegration.html\n+\n+Thanks to a donation of Berkeley Signal Inc GNU Classpath now has an\n+official autobuilder machine which is used for quality assurance,\n+regression testing, conformance reports and for publishing continous\n+snapshots. The machine can be reached as http://builder.classpath.org/\n+\n+40 people actively contributed to this release and made\n+605 CVS commits during the last two months of development\n+(excluding the generics branch work). diffstat since 0.19:\n+ 617 files changed, 89622 insertions(+), 37478 deletions(-)\n+\n+More details about the various changes and contributions below.\n+\n+A full list of bug reports fixed for this release can be found at:\n+http://gcc.gnu.org/bugzilla/buglist.cgi?product=classpath&target_milestone=0.20\n+\n+The GNU Classpath developers site http://developer.classpath.org/\n+provides detailed information on how to start with helping the GNU\n+Classpath project and gives an overview of the core class library\n+packages currently provided.  For each snapshot release generated\n+documentation is provided through the GNU Classpath Tools gjdoc\n+project.  A documentation generation framework for java source\n+files used by the GNU project. Full documentation on the currently\n+implementated packages and classes can be found at:\n+http://developer.classpath.org/doc/\n+\n+For more information about the project see also:\n+\n+- GNU Classpath home page:\n+  http://www.gnu.org/software/classpath/\n+\n+- Developer information (wiki):\n+  http://developer.classpath.org/\n+\n+- Full class documentation\n+  http://developer.classpath.org/doc/\n+\n+- GNU Classpath hackers:\n+  http://planet.classpath.org/\n+\n+- Autobuilder, current build status, build snapshots:\n+  http://builder.classpath.org/\n+\n+- Application test pages (wiki)\n+  http://developer.classpath.org/mediation/FreeAWTTestApps\n+  http://developer.classpath.org/mediation/FreeSwingTestApps\n+  http://developer.classpath.org/mediation/FreeSWTTestApps\n+\n+- GNU Classpath hacking with Eclipse (wiki)\n+  http://developer.classpath.org/mediation/ClasspathHackingWithEclipse\n+\n+- GNU Classpath promotion banners:\n+  http://developer.classpath.org/mediation/ClasspathBanners\n+\n+- GNU Classpath and Friends meeting (Feb 25/26, Brussels, Fosdem):\n+  http://www.gnu.org/software/classpath/events/fosdem06.html\n+\n+This release depends on gtk+ 2.4 for AWT support. But gtk+ 2.6 or\n+higher is recommended. Included, but not activated by default in this\n+release is a Graphics2D implementation based on the Cairo Graphics\n+framework (http://www.cairographics.org). Enabling this makes programs\n+like JFreeChart and JEdit start up on GNU Classpath based runtimes.\n+To enable this support install the cairo 0.5.x snapshot, configure GNU\n+Classpath with --enable-gtk-cairo.\n+\n+One of the major focuses of the GNU Classpath project is expanding and\n+using the Mauve test suite for Compatibility, Completeness and\n+Correctness checking.  Various groups around GNU Classpath collaborate\n+on the free software Mauve test suite which contains around 36.000\n+core library tests.  Mauve has various modules for testing core class\n+library implementations, byte code verifiers, source to byte code and\n+native code compiler tests.  Mauve also contains the Wonka visual test\n+suite and the Jacks Compiler Killer Suite.\n+See for more information: http://www.sourceware.org/mauve/\n+This release passes 35534 out of 36255 Mauve core library tests.\n+\n+Conformance reports for the included jaxp support can be found in the\n+doc/README.jaxp file.\n+\n+GNU Classpath 0.20 can be downloaded from\n+ftp://ftp.gnu.org/pub/gnu/classpath/\n+or one of the ftp.gnu.org mirrors\n+http://www.gnu.org/order/ftp.html\n+\n+File: classpath-0.20.tar.gz\n+MD5sum: 21e34b8e8acb4f7b31296bfaf4ad560a\n+SHA1sum: c1a38c6c6b67d8c8092cc6af6d86d8c99dad272a\n+\n+File: classpath-0.20-generics.tar.gz (EXPERIMENTAL)\n+MD5sum: db3c235b1ea497d7d2e5852f167d2b31\n+SHA1sum: 3d5f5cdd3dc51651f8b2c3765e30454931f45419\n+\n+New in release 0.20 (Jan 13, 2006)\n+(See the ChangeLog file for a full list of changes.)\n+\n+* New StAX pull parser and SAX-over-StAX driver. Lots of DOM, SAX/StAX,\n+  XPath and XSLT improvements.  Support for XInclude and XML Base added.\n+  Conformance is now regularly tested against various test-suites at\n+  http://builder.classpath.org/xml/ See also doc/README.jaxp.\n+\n+* Full beans XMLEncoder implementation.\n+\n+* javax.sound.sampled implementation.\n+\n+* javax.print.attribute and javax.print.event implementated.\n+\n+* Lots of new datatransfer, print swing and swing.text work and optimization.\n+\n+* Additional 1.5 support. Including new (separate) generic branch release.\n+\n+* SecurityManager cleanups and start of review of all Permission checks\n+  (includes adding lots of new checks to the Mauve test-suite).\n+\n+* Buildable on cygwin.\n+\n+* Fully buildable as \"in-workspace\" library-plus-vm inside (native) Eclipse\n+  see http://developer.classpath.org/mediation/ClasspathHackingWithEclipse\n+\n+* Full example that shows a real world CORBA and Free Swing implementation.\n+  See examples/gnu/classpath/examples/CORBA/swing/README.html\n+\n+Runtime interface changes:\n+\n+* New method VMStackWalker.getClassLoader() was added to avoid an infinite\n+  loop between getCallingClassLoader() and Class.getClassLoader().\n+\n+* The included fdlibm implementation has seen several cleanups to handle\n+  new architectures and namespacing issues (in particular for ppc, darwin\n+  and non-C99 compilers). Please double check any arithmetic test against\n+  new platforms/runtimes.\n+\n+* The gnu.java.net.Plain[Datagram]Socket implementations have been\n+  turned into VM reference classes with JNI/Posix implementations.\n+\n+New/Untested/Disabled Features:\n+\n+  The following new features are included, but not ready for\n+  production yet. They are explicitly disabled and not supported. But\n+  if you want to help with the development of these new features we\n+  are interested in feedback. You will have to explicitly enable them\n+  to try them out (and they will most likely contain bugs). If you are\n+  interested in any of these then please join the mailing-list and\n+  follow development in CVS.\n+\n+* Cairo Gtk+ Graphics2D support, enabled by giving configure\n+  --enable-gtk-cairo.\n+* QT4 AWT peers, enable by giving configure --enable-qt-peer.\n+\n+The following people helped with this release:\n+\n+Andreas Tobler\n+  Qt-4.1 support\n+Andrew Haley\n+  Jar work and Jonas fixes\n+Andrew John Hughes\n+  1.5 generics language work\n+Anthony Balkissoon\n+  Free Swing work\n+Anthony Green\n+  Socket work\n+Archie Cobbs\n+  New VMStackWalker work and JCVM integration\n+Audrius Meskauskas\n+  Free CORBA work and various Free Swing fixes\n+Bryce McKinlay\n+  Jar fixes\n+Caolan McNamara\n+  Dom fixes and OpenOffice fixes\n+Casey Marshall\n+  Crypto work\n+Chris Burdess\n+  XML GNU JAXP work\n+Christian Thalinger\n+  Various fixes, 64bit work and Cacao integration\n+Dalibor Topic\n+  Build cleanups and Kaffe integration\n+David Daney\n+  libgcj integration\n+David Gilbert\n+  Free Swing work\n+Freebeans\n+  Mysaifu Windows CE port and bug reports\n+Fridjof Siebert\n+  Hashtable work\n+Gary Benson\n+  Securitymanager and Permission work\n+Guilhem Lavaux\n+  fdlibm cleanups, performance work and Kaffe integration\n+Ingo Proetel\n+  Various fixes\n+Ito Kazumitsu\n+  Regex, text and character conversion support\n+Jan Roehrich\n+  Datatransfer work\n+Jeroen Frijters\n+  SecurityManager, collections and IKVM integration\n+Joao Victor\n+  Free Swing Timer work\n+John Zigman\n+  SocketChannel testing\n+Keith Seitz\n+  JDWP work\n+Lillian Angel\n+  Free Swing work\n+Mark Wielaard\n+  Bug fixes, packaging and release management\n+Nicolas Geoffray\n+  1.5 Class Instrumentation work\n+Paul Jenner\n+  Installation and cygwin work\n+Petteri Raty\n+  Configuration and Gentoo integration work\n+Raif S. Naffah\n+  Security work and Eclipse integration\n+Riccardo Mottola\n+  Powerpc work\n+Robert Schuster\n+  XMLEncoder and beans work\n+Roman Kennke\n+  Free Swing and AWT work, VM interface\n+Roman Schnider\n+  AWT work\n+Sven de Marothy\n+  Print and GTK+ work\n+Thomas Fitzsimmons\n+  Free Swing and AWT work\n+Tom Tromey\n+  Eclipse, gcj and gcjx integration\n+Wolfgang Baer\n+  javax.print and friends\n+\n+We would also like to thank the numerous bug reporters and testers!\n+</pre>\n+<footer>"}, {"sha": "3f0180d2e5c795a8bba142107c7de59df4c03aef", "filename": "libjava/classpath/doc/www.gnu.org/downloads/downloads.wml", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fdownloads%2Fdownloads.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fdownloads%2Fdownloads.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fdownloads%2Fdownloads.wml?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -77,10 +77,10 @@ sub mylink {\n <download-block>\n \n <download\n-\tdate=\"02 November 2005\"\n-\tversion=\"0.19\"\n-\turl=\"ftp://ftp.gnu.org/gnu/classpath/classpath-0.19.tar.gz\"\n-\tnotes=\"http://www.gnu.org/software/classpath/announce/20051102.html\"\n+\tdate=\"13 January 2006\"\n+\tversion=\"0.20\"\n+\turl=\"ftp://ftp.gnu.org/gnu/classpath/classpath-0.20.tar.gz\"\n+\tnotes=\"http://www.gnu.org/software/classpath/announce/20060113.html\"\n >\n \n <!-- download\n@@ -99,6 +99,12 @@ sub mylink {\n <boxitem>\n \n <download-block>\n+<download\n+\tdate=\"02 November 2005\"\n+\tversion=\"0.19\"\n+\turl=\"ftp://ftp.gnu.org/gnu/classpath/classpath-0.19.tar.gz\"\n+\tnotes=\"http://www.gnu.org/software/classpath/announce/20051102.html\"\n+>\n <download\n \tdate=\"06 September 2005\"\n \tversion=\"0.18\""}, {"sha": "08eb0f1fd50ceab1edc6a5fc68fb20c2099cc59f", "filename": "libjava/classpath/doc/www.gnu.org/newsitems.txt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -3,6 +3,11 @@\n             url=\"events/fosdem06.html\">\n </newsitem>\n \n+<newsitem date=\"13 Jan 2006\">\n+<createlink name=\"GNU Classpath 0.20\"\n+            url=\"announce/20060113.html\">\n+</newsitem>\n+\n <newsitem date=\"02 Nov 2005\">\n <createlink name=\"GNU Classpath 0.19\"\n             url=\"announce/20051102.html\">"}, {"sha": "bf427ee4122f492790f7293e45743461946203b2", "filename": "libjava/classpath/examples/Makefile.am", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.am?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -95,7 +95,10 @@ $(EXAMPLE_ZIP): $(EXAMPLE_JAVA_FILES)\n \tmkdir -p classes/gnu/classpath/examples/icons\n \tcp $(EXAMPLE_ICONS) classes/gnu/classpath/examples/icons\n \t$(JCOMPILER) -d classes $(EXAMPLE_JAVA_FILES) \n-\tcd classes; $(ZIP) -r ../$(EXAMPLE_ZIP) .; cd ..\n+\t(cd classes; \\\n+\tif test \"$(ZIP)\" != \"\"; then $(ZIP) -r ../$(EXAMPLE_ZIP) .; fi; \\\n+\tif test \"$(FASTJAR)\" != \"\"; then $(FASTJAR) cf ../$(EXAMPLE_ZIP) .; fi; \\\n+\tcd ..)\n \trm -rf classes\n \n # Zip file be gone! (and make sure the classes are gone too)"}, {"sha": "d5d9eb0a6384213ca33371f506ace90a1cb8a080", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -82,13 +82,16 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\n CLASSPATH_MODULE = @CLASSPATH_MODULE@\n+COLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n+CREATE_COLLECTIONS_FALSE = @CREATE_COLLECTIONS_FALSE@\n+CREATE_COLLECTIONS_TRUE = @CREATE_COLLECTIONS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n@@ -119,6 +122,7 @@ EGREP = @EGREP@\n ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n+FASTJAR = @FASTJAR@\n FIND = @FIND@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n@@ -130,6 +134,8 @@ FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n+FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n+FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n GJDOC = @GJDOC@\n@@ -180,6 +186,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n QT_CFLAGS = @QT_CFLAGS@\n QT_LIBS = @QT_LIBS@\n@@ -532,7 +539,10 @@ $(EXAMPLE_ZIP): $(EXAMPLE_JAVA_FILES)\n \tmkdir -p classes/gnu/classpath/examples/icons\n \tcp $(EXAMPLE_ICONS) classes/gnu/classpath/examples/icons\n \t$(JCOMPILER) -d classes $(EXAMPLE_JAVA_FILES) \n-\tcd classes; $(ZIP) -r ../$(EXAMPLE_ZIP) .; cd ..\n+\t(cd classes; \\\n+\tif test \"$(ZIP)\" != \"\"; then $(ZIP) -r ../$(EXAMPLE_ZIP) .; fi; \\\n+\tif test \"$(FASTJAR)\" != \"\"; then $(FASTJAR) cf ../$(EXAMPLE_ZIP) .; fi; \\\n+\tcd ..)\n \trm -rf classes\n \n # Zip file be gone! (and make sure the classes are gone too)"}, {"sha": "fa8966f266d1caac37cbbeb5744a716fe26079b0", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/swing/x5/PlayingDesk.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FPlayingDesk.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FPlayingDesk.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FPlayingDesk.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -433,7 +433,6 @@ public void friendsMove(int x, int y, Point[] victory)\n         else\n           {\n             blacks.add(new Point(x, y));\n-            repaint();\n \n             if (victory != null)\n               {\n@@ -447,7 +446,8 @@ public void friendsMove(int x, int y, Point[] victory)\n                 frame.talk(Color.black, \"Partner goes \" + x + \"-\" + y\n                   + \". Your move?\");\n                 player.set_current_state(I_THINK);\n-              }\n+              }            \n+            repaint();            \n           }\n       }\n     catch (RemoteException rex)"}, {"sha": "a0c33df34d0ea1b6ccd95da25af95986921f06ad", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/swing/x5/_GameManagerImpl_Tie.java", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2F_GameManagerImpl_Tie.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2F_GameManagerImpl_Tie.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2F_GameManagerImpl_Tie.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -57,13 +57,8 @@\n  * Tie on the client side. The Game Manager methods contain the code for remote\n  * invocation.\n  * \n- * This class is normally generated with rmic from the {@link GameManagerImpl}:\n- * \n- * <pre>\n- *   rmic -iiop -poa -keep gnu.classpath.examples.CORBA.swing.x5.GameManagerImpl\n- * </pre>\n- * \n- * (the compiled package must be present in the current folder).\n+ * This class is normally generated with rmic or grmic from the \n+ * {@link GameManagerImpl}. See tools/gnu/classpath/tools/giop/README.\n  * \n  * In this example the class was manually edited and commented for better\n  * understanding of functionality."}, {"sha": "f6c5f476521818e76a165e5b3acbcb6582ff31bc", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/swing/x5/_PlayerImpl_Tie.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2F_PlayerImpl_Tie.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2F_PlayerImpl_Tie.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2F_PlayerImpl_Tie.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -58,11 +58,8 @@\n  * rmic -iiop -poa -keep gnu.classpath.examples.CORBA.swing.x5.PlayerImpl\n  * (the compiled package must be present in the current folder).\n  * \n- * This class is normally generated with rmic from the {@link PlayerImpl}:\n- * <pre>\n- * rmic -iiop -poa -keep gnu.classpath.examples.CORBA.swing.x5.PlayerImpl\n- * </pre>\n- * (the compiled package must be present in the current folder).\n+ * This class is normally generated with rmic or grmic from the \n+ * {@link PlayerImpl}. See tools/gnu/classpath/tools/giop/README.\n  * \n  * In this example the class was manually edited and commented for better \n  * understanding of functionality."}, {"sha": "856917fa9493a501d3c129aaac50d0c49590d5cb", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ButtonDemo.java", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FButtonDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FButtonDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FButtonDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* ButtonDemo.java -- An example showing various buttons in Swing.\n-   Copyright (C) 2005,  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath examples.\n \n@@ -46,6 +46,8 @@ public class ButtonDemo\n   implements ActionListener \n {\n  \n+  private JPanel content;\n+\n   private JCheckBox buttonState;  \n   private JButton button1;\n   private JButton button2;\n@@ -77,6 +79,19 @@ public ButtonDemo(String title)\n   {\n     super(title);\n     JPanel content = createContent();\n+    // initFrameContent() is only called (from main) when running this app \n+    // standalone\n+  }\n+  \n+  /**\n+   * When the demo is run independently, the frame is displayed, so we should\n+   * initialise the content panel (including the demo content and a close \n+   * button).  But when the demo is run as part of the Swing activity board,\n+   * only the demo content panel is used, the frame itself is never displayed,\n+   * so we can avoid this step.\n+   */\n+  public void initFrameContent() \n+  {\n     JPanel closePanel = new JPanel();\n     JButton closeButton = new JButton(\"Close\");\n     closeButton.setActionCommand(\"CLOSE\");\n@@ -95,13 +110,16 @@ public ButtonDemo(String title)\n    */       \n   JPanel createContent() \n   {\n-    JPanel content = new JPanel(new BorderLayout());\n-    JPanel panel = new JPanel(new GridLayout(4, 1));\n-    panel.add(createButtonPanel());\n-    panel.add(createTogglePanel());\n-    panel.add(createCheckBoxPanel());\n-    panel.add(createRadioPanel());\n-    content.add(panel);\n+    if (content == null)\n+      {\n+        content = new JPanel(new BorderLayout());\n+        JPanel panel = new JPanel(new GridLayout(4, 1));\n+        panel.add(createButtonPanel());\n+        panel.add(createTogglePanel());\n+        panel.add(createCheckBoxPanel());\n+        panel.add(createRadioPanel());\n+        content.add(panel);\n+      }\n     return content;        \n   }\n     \n@@ -277,6 +295,7 @@ else if (e.getActionCommand().equals(\"CLOSE\"))\n   public static void main(String[] args) \n   {\n     ButtonDemo app = new ButtonDemo(\"Button Demo\");\n+    app.initFrameContent();\n     app.pack();\n     app.setVisible(true);\n   }"}, {"sha": "2af619ca8e4be250dea6479ec8ce87791a7fe062", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ComboBoxDemo.java", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FComboBoxDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FComboBoxDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FComboBoxDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* ComboBoxDemo.java -- An example showing various combo boxes in Swing.\n-   Copyright (C) 2005,  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006,  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath examples.\n \n@@ -69,6 +69,7 @@ public Component getListCellRendererComponent(JList list,\n     }\n   }\n \n+  private JPanel content;\n   private JCheckBox comboState1;  \n   private JComboBox combo1;\n   private JComboBox combo2;\n@@ -102,6 +103,19 @@ public ComboBoxDemo(String title)\n   {\n     super(title);\n     JPanel content = createContent();\n+    // initFrameContent() is only called (from main) when running this app \n+    // standalone\n+  }\n+  \n+  /**\n+   * When the demo is run independently, the frame is displayed, so we should\n+   * initialise the content panel (including the demo content and a close \n+   * button).  But when the demo is run as part of the Swing activity board,\n+   * only the demo content panel is used, the frame itself is never displayed,\n+   * so we can avoid this step.\n+   */\n+  public void initFrameContent() \n+  {\n     JPanel closePanel = new JPanel();\n     JButton closeButton = new JButton(\"Close\");\n     closeButton.setActionCommand(\"CLOSE\");\n@@ -120,15 +134,18 @@ public ComboBoxDemo(String title)\n    */       \n   JPanel createContent() \n   {\n-    JPanel content = new JPanel(new BorderLayout());\n-    JPanel panel = new JPanel(new GridLayout(6, 1));\n-    panel.add(createPanel1());\n-    panel.add(createPanel2());\n-    panel.add(createPanel3());\n-    panel.add(createPanel4());\n-    panel.add(createPanel5());\n-    panel.add(createPanel6());\n-    content.add(panel);\n+    if (content == null)\n+      {\n+        content = new JPanel(new BorderLayout());\n+        JPanel panel = new JPanel(new GridLayout(6, 1));\n+        panel.add(createPanel1());\n+        panel.add(createPanel2());\n+        panel.add(createPanel3());\n+        panel.add(createPanel4());\n+        panel.add(createPanel5());\n+        panel.add(createPanel6());\n+        content.add(panel);\n+      }\n     return content;        \n   }\n     \n@@ -353,6 +370,7 @@ public static void main(String[] args)\n         e.printStackTrace();\n     }\n     ComboBoxDemo app = new ComboBoxDemo(\"ComboBox Demo\");\n+    app.initFrameContent();\n     app.pack();\n     app.setVisible(true);\n   }"}, {"sha": "7cb722668a358baa28e5380ce6811817d9bb04ad", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/Demo.java", "status": "modified", "additions": 62, "deletions": 134, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* SwingDemo.java -- An example of using the javax.swing UI.\n-   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath examples.\n \n@@ -163,18 +163,6 @@ public void actionPerformed(ActionEvent e)\n     new PopUpAction(\"Buttons\",\n \t\t    (new ButtonDemo(\"Button Demo\")).createContent(),\n \t\t    examples);\n-    \n-    new PopUpAction(\"Toggles\",\n-\t\t    mkToggle(\"cool and refreshing\"),\n-\t\t    examples);\n-\n-    new PopUpAction(\"Checkbox\",\n-\t\t    mkCheckbox(\"ice cold\"),\n-\t\t    examples);\n-\n-    new PopUpAction(\"Radio\",\n-\t\t    mkRadio(\"delicious\"),\n-\t\t    examples);\n \n     new PopUpAction(\"Slider\",\n \t\t    (new SliderDemo(\"Slider Demo\")).createContent(),\n@@ -214,8 +202,7 @@ public void actionPerformed(ActionEvent e)\n \t\t    examples);\n \n     new PopUpAction(\"Spinner\",\n-\t\t    mkSpinner(),\n-\t\t    examples);\n+\t\t    new SpinnerDemo(\"Spinner Demo\").createContent(), examples);\n \n     new PopUpAction(\"TextField\",\n \t\t    (new TextFieldDemo(\"TextField Demo\")).createContent(),\n@@ -715,6 +702,7 @@ public Demo()\n     main.add(mkButtonBar());\n     component.add(main, BorderLayout.CENTER);\n     frame.pack();\n+    frame.setSize(800, 600);\n     frame.show();\n   }\n \n@@ -732,26 +720,6 @@ public static void main(String args[])\n     SwingUtilities.invokeLater(new LaterMain());\n   }\n \n-  public static JCheckBox mkCheckbox(String label)\n-  {\n-    JCheckBox c = new JCheckBox(label);\n-    c.setFont(new Font(\"Luxi\", Font.PLAIN, 14));\n-    return c;\n-  }\n-\n-  public static JPanel mkRadio(String label)\n-  {\n-    JPanel p = new JPanel();\n-    JRadioButton c = new JRadioButton(label);\n-    JRadioButton d = new JRadioButton(\"not \" + label);\n-    ButtonGroup bg = new ButtonGroup();\n-    bg.add(c);\n-    bg.add(d);\n-    p.add(c);\n-    p.add(d);\n-    return p;\n-  }\n-\n   public static JList mkList(Object[] elts)\n   {\n     JList list = new JList(elts);\n@@ -775,12 +743,6 @@ public static JComboBox mkComboBox(String[] names)\n     return box;\n   }\n \n-  public static JSpinner mkSpinner()\n-  {\n-    JSpinner spinner = new JSpinner();\n-    return spinner;\n-  }\n-\n   public static JButton mkBigButton(String title)\n   {\n     JButton b = new JButton(title);\n@@ -789,14 +751,6 @@ public static JButton mkBigButton(String title)\n     return b;\n   }\n \n-  public static JToggleButton mkToggle(String title)\n-  {\n-    JToggleButton b = new JToggleButton(title);\n-    b.setMargin(new Insets(5,5,5,5));\n-    b.setFont(new Font(\"Luxi\", Font.PLAIN, 14));\n-    return b;    \n-  }\n-\n   public static JPanel mkPanel(JComponent[] inners)\n   {\n     JPanel p = new JPanel();\n@@ -947,98 +901,75 @@ private static JEditorPane mkEditorPane()\n     return editorPane;\n   }\n   \n-  private static JTree mkTree()\n+  /**\n+   * Create the tree.\n+   * \n+   * @return thr scroll pane, containing the tree.\n+   */\n+  private static JComponent mkTree()\n   {\n     DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"Root node\");\n-    DefaultMutableTreeNode child1 = new DefaultMutableTreeNode(\"Child node 1\");\n-    DefaultMutableTreeNode child11 =\n-      new DefaultMutableTreeNode(\"Child node 1.1\");\n-    DefaultMutableTreeNode child12 =\n-      new DefaultMutableTreeNode(\"Child node 1.2\");\n-    DefaultMutableTreeNode child13 =\n-      new DefaultMutableTreeNode(\"Child node 1.3\");\n-    DefaultMutableTreeNode child2 = new DefaultMutableTreeNode(\"Child node 2\");\n-    DefaultMutableTreeNode child21 =\n-      new DefaultMutableTreeNode(\"Child node 2.1\");\n-    DefaultMutableTreeNode child22 =\n-      new DefaultMutableTreeNode(\"Child node 2.2\");\n-    DefaultMutableTreeNode child23 =\n-      new DefaultMutableTreeNode(\"Child node 2.3\");\n-    DefaultMutableTreeNode child24 =\n-      new DefaultMutableTreeNode(\"Child node 2.4\");\n-\n-    DefaultMutableTreeNode child3 = new DefaultMutableTreeNode(\"Child node 3\");\n-    root.add(child1);\n-    root.add(child2);\n-    root.add(child3);\n-    child1.add(child11);\n-    child1.add(child12);\n-    child1.add(child13);\n-    child2.add(child21);\n-    child2.add(child22);\n-    child2.add(child23);\n-    child2.add(child24);\n+    \n+    addChildren(\"Node\", root, 12);\n \n     JTree tree = new JTree(root);\n     tree.setLargeModel(true);\n     DefaultTreeSelectionModel dtsm = new DefaultTreeSelectionModel();\n     dtsm.setSelectionMode(DefaultTreeSelectionModel.SINGLE_TREE_SELECTION);\n     tree.setSelectionModel(dtsm);\n     \n-    return tree;\n+    // Make it editable.\n+    tree.setEditable(true);\n+    \n+    JComponent t = mkScrollPane(tree);\n+    t.setPreferredSize(new Dimension(200,200));\n+    return t;\n   }\n-\n-  private static JTable mkTable()\n+  \n+  /**\n+   * Add the specified number of children to this parent node. For each\n+   * child, the method is called recursively adding the nChildren-3 number of \n+   * grandchildren.\n+   * \n+   * @param parent the parent node\n+   * @param nChildren the number of children\n+   */\n+  private static void addChildren(String name, DefaultMutableTreeNode parent,\n+                                                int nChildren)\n   {\n-    Object[][] tableData = new Object[][] {\n-      {\n-        \"Field 1\", \"Field 2\" , \"Field 3\"\n-      },\n-      {\n-        \"Field 4\", \"Field 5\" , \"Field 6\"\n-      },\n-      {\n-        \"Field 7\", \"Field 8\" , \"Field 9\"\n-      },\n+    for (int i = 0; i < nChildren; i++)\n       {\n-        \"Field 10\", \"Field 11\" , \"Field 12\"\n+        String child_name = parent+\".\"+i;\n+        DefaultMutableTreeNode child = new DefaultMutableTreeNode\n+         (child_name);\n+        parent.add(child);\n+        addChildren(child_name, child, nChildren-3);\n       }\n-    };\n-    Object[] columnNames = new Object[] {\"Column 1\", \"Column 2\", \"Column 3\"};\n-\n-    JTable table = new JTable(tableData, columnNames);\n-    return table;\n+  }\n+  \n+  /**\n+   * Make a sample table component.\n+   */\n+  private static JPanel mkTable()\n+  {\n+    return new TableDemo(\"Table demo, double click to edit\")\n+                      .createContent();\n   }\n   \n   private JPanel mkButtonBar()\n   {    \n-    JPanel panel = new JPanel (new GridLayout(2, 1));\n-    JPanel panelA = new JPanel(new FlowLayout());\n-    JPanel panelB = new JPanel(new FlowLayout());\n-\n+    JPanel panel = new JPanel(new FlowLayout());\n     new PopUpAction(\"Buttons\",\n \t\t    (new ButtonDemo(\"Button Demo\")).createContent(),\n-\t\t    panelA);\n-    \n-    new PopUpAction(\"Toggles\",\n-\t\t    mkToggle(\"cool and refreshing\"),\n-\t\t    panelA);\n-\n-    new PopUpAction(\"Checkbox\",\n-\t\t    mkCheckbox(\"ice cold\"),\n-\t\t    panelA);\n-\n-    new PopUpAction(\"Radio\",\n-\t\t    mkRadio(\"delicious\"),\n-\t\t    panelA);\n+\t\t    panel);\n \n     new PopUpAction(\"Slider\",\n \t\t    (new SliderDemo(\"Slider Demo\")).createContent(),\n-\t\t    panelA);\n+\t\t    panel);\n \n     new PopUpAction(\"ProgressBar\",\n             ProgressBarDemo.createContent(),\n-             panelA);\n+             panel);\n \n \n     new PopUpAction(\"List\",\n@@ -1050,69 +981,66 @@ private JPanel mkButtonBar()\n                                                \"that\",\n                                                \"wraps\",\n                                                \"over\"}),\n-\t\t    panelA);\n+\t\t    panel);\n \n     new PopUpAction(\"Scrollbar\",\n \t\t    (new ScrollBarDemo(\"ScrollBar Demo\")).createContent(),\n-\t\t    panelA);\n+\t\t    panel);\n \n     new PopUpAction(\"Viewport\",\n \t\t    mkViewportBox(mkBigButton(\"View Me!\")),\n-\t\t    panelA);\n+\t\t    panel);\n \n     new PopUpAction(\"ScrollPane\",\n \t\t    mkScrollPane(mkBigButton(\"Scroll Me!\")),\n-\t\t    panelA);\n+\t\t    panel);\n \n     new PopUpAction(\"TabPane\",\n \t\t    mkTabs(new String[] {\"happy\",\n \t\t\t\t\t \"sad\",\n \t\t\t\t\t \"indifferent\"}),\n-\t\t    panelB);\n+\t\t    panel);\n \n-    new PopUpAction(\"Spinner\",\n-\t\t    mkSpinner(),\n-\t\t    panelB);\n+    new PopUpAction(\"Spinner\", \n+\t\t    new SpinnerDemo(\"Spinner Demo\").createContent(), panel);\n \n     new PopUpAction(\"TextField\",\n \t\t    (new TextFieldDemo(\"TextField Demo\")).createContent(),\n-\t\t    panelB);\n+\t\t    panel);\n \n     new PopUpAction(\"FileChooser\",\n                     (new FileChooserDemo(\"FileChooser Demo\")).createContent(),\n-                    panelB);\n+                    panel);\n \n     new PopUpAction(\"ColorChooser\",\n \t\t    mkColorChooser(),\n-\t\t    panelB);\n+\t\t    panel);\n \n     new PopUpAction(\"ComboBox\",\n \t\t    (new ComboBoxDemo(\"ComboBox Demo\")).createContent(),\n-\t\t    panelB);\n+\t\t    panel);\n \n     new PopUpAction(\"Editor\",\n                     mkEditorPane(),\n-                    panelB);\n+                    panel);\n     \n     new PopUpAction(\"Tree\",\n                     mkTree(),\n-                    panelB);\n+                    panel);\n     \n     new PopUpAction(\"Table\",\n                     mkTable(),\n-                    panelB);\n+                    panel);\n     \n     JButton exitDisposer = mkDisposerButton(frame);\n-    panelB.add(exitDisposer);\n+    panel.add(exitDisposer);\n     exitDisposer.addActionListener(new ActionListener()\n       {\n \tpublic void actionPerformed(ActionEvent e)\n \t{\n \t  System.exit(1);\n \t}\n       });\n-    panel.add(panelA);\n-    panel.add(panelB);\n     return panel;\n   }\n }"}, {"sha": "de86d23379006d2797afa28c879b22775308f003", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/FileChooserDemo.java", "status": "modified", "additions": 66, "deletions": 46, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FFileChooserDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FFileChooserDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FFileChooserDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* FileChooserDemo.java -- An example showing file choosers in Swing.\n-   Copyright (C) 2005,  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006,  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath examples.\n \n@@ -63,7 +63,9 @@ public boolean accept(File f)\n         return false;\n     }\n   }\n-    \n+\n+  private JPanel content;\n+\n   /** A label to display the selected file. */\n   JLabel selectedFileLabel;\n     \n@@ -85,6 +87,19 @@ public FileChooserDemo(String frameTitle)\n   {\n     super(frameTitle);\n     JPanel content = createContent();\n+    // initFrameContent() is only called (from main) when running this app \n+    // standalone\n+  }\n+  \n+  /**\n+   * When the demo is run independently, the frame is displayed, so we should\n+   * initialise the content panel (including the demo content and a close \n+   * button).  But when the demo is run as part of the Swing activity board,\n+   * only the demo content panel is used, the frame itself is never displayed,\n+   * so we can avoid this step.\n+   */\n+  public void initFrameContent() \n+  {\n     JPanel closePanel = new JPanel();\n     JButton closeButton = new JButton(\"Close\");\n     closeButton.setActionCommand(\"CLOSE\");\n@@ -102,52 +117,56 @@ public FileChooserDemo(String frameTitle)\n    * added if this demo is being run as a standalone demo).\n    */\n   JPanel createContent()\n-  {      \n-    JPanel panel = new JPanel(new BorderLayout());\n-     \n-    // create a panel of buttons to select the different styles of file \n-    // chooser...\n-    JPanel buttonPanel = new JPanel(new GridLayout(5, 1));\n-    JButton openButton = new JButton(\"Open...\");\n-    openButton.setActionCommand(\"OPEN\");\n-    openButton.addActionListener(this);\n-    buttonPanel.add(openButton);\n-    JButton saveButton = new JButton(\"Save...\");\n-    saveButton.setActionCommand(\"SAVE\");\n-    saveButton.addActionListener(this);\n-    buttonPanel.add(saveButton);\n-    JButton queryButton = new JButton(\"Select Directory...\");\n-    queryButton.setActionCommand(\"SELECT_DIRECTORY\");\n-    queryButton.addActionListener(this);\n-    buttonPanel.add(queryButton);\n-    JButton openJavaButton = new JButton(\"Open Java file...\");\n-    openJavaButton.setActionCommand(\"OPEN_JAVA\");\n-    openJavaButton.addActionListener(this);\n-    buttonPanel.add(openJavaButton);\n-    JButton openMultiButton = new JButton(\"Open multiple files...\");\n-    openMultiButton.setActionCommand(\"OPEN_MULTI\");\n-    openMultiButton.addActionListener(this);\n-    buttonPanel.add(openMultiButton);\n-    panel.add(buttonPanel, BorderLayout.WEST);\n-    \n-    // create a panel to display the selected file(s) and the return code\n-    JPanel displayPanel = new JPanel(new BorderLayout());\n-     \n-    selectedFileLabel = new JLabel(\"-\");\n-    selectedFileLabel.setBorder(BorderFactory.createTitledBorder(\"Selected File/Directory: \"));\n-    displayPanel.add(selectedFileLabel, BorderLayout.NORTH);\n+  {\n+    if (content == null)\n+      {\n+        JPanel panel = new JPanel(new BorderLayout());\n         \n-    selectedFilesList = new JList();\n-    JScrollPane sp = new JScrollPane(selectedFilesList);\n-    sp.setBorder(BorderFactory.createTitledBorder(\"Selected Files: \"));\n-    displayPanel.add(sp);\n-\n-    returnCodeLabel = new JLabel(\"0\");\n-    returnCodeLabel.setBorder(BorderFactory.createTitledBorder(\"Return Code:\"));\n-    displayPanel.add(returnCodeLabel, BorderLayout.SOUTH);\n+        // create a panel of buttons to select the different styles of file \n+        // chooser...\n+        JPanel buttonPanel = new JPanel(new GridLayout(5, 1));\n+        JButton openButton = new JButton(\"Open...\");\n+        openButton.setActionCommand(\"OPEN\");\n+        openButton.addActionListener(this);\n+        buttonPanel.add(openButton);\n+        JButton saveButton = new JButton(\"Save...\");\n+        saveButton.setActionCommand(\"SAVE\");\n+        saveButton.addActionListener(this);\n+        buttonPanel.add(saveButton);\n+        JButton queryButton = new JButton(\"Select Directory...\");\n+        queryButton.setActionCommand(\"SELECT_DIRECTORY\");\n+        queryButton.addActionListener(this);\n+        buttonPanel.add(queryButton);\n+        JButton openJavaButton = new JButton(\"Open Java file...\");\n+        openJavaButton.setActionCommand(\"OPEN_JAVA\");\n+        openJavaButton.addActionListener(this);\n+        buttonPanel.add(openJavaButton);\n+        JButton openMultiButton = new JButton(\"Open multiple files...\");\n+        openMultiButton.setActionCommand(\"OPEN_MULTI\");\n+        openMultiButton.addActionListener(this);\n+        buttonPanel.add(openMultiButton);\n+        panel.add(buttonPanel, BorderLayout.WEST);\n+        \n+        // create a panel to display the selected file(s) and the return code\n+        JPanel displayPanel = new JPanel(new BorderLayout());\n         \n-    panel.add(displayPanel);\n-    return panel;        \n+        selectedFileLabel = new JLabel(\"-\");\n+        selectedFileLabel.setBorder(BorderFactory.createTitledBorder(\"Selected File/Directory: \"));\n+        displayPanel.add(selectedFileLabel, BorderLayout.NORTH);\n+        \n+        selectedFilesList = new JList();\n+        JScrollPane sp = new JScrollPane(selectedFilesList);\n+        sp.setBorder(BorderFactory.createTitledBorder(\"Selected Files: \"));\n+        displayPanel.add(sp);\n+        \n+        returnCodeLabel = new JLabel(\"0\");\n+        returnCodeLabel.setBorder(BorderFactory.createTitledBorder(\"Return Code:\"));\n+        displayPanel.add(returnCodeLabel, BorderLayout.SOUTH);\n+        \n+        panel.add(displayPanel);\n+        content = panel;\n+      }\n+    return content;        \n   }\n     \n   /**\n@@ -221,6 +240,7 @@ else if (e.getActionCommand().equals(\"SELECT_DIRECTORY\"))\n   public static void main(String[] args) \n   {\n     FileChooserDemo app = new FileChooserDemo(\"File Chooser Demo\");\n+    app.initFrameContent();\n     app.pack();\n     app.setVisible(true);\n   }"}, {"sha": "aa8424804524e555431c0c05e37270988a577778", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/MiniDemo.java", "status": "added", "additions": 233, "deletions": 0, "changes": 233, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FMiniDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FMiniDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FMiniDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,233 @@\n+/* MiniDemo.java --  A Swing demo suitable for embedded environments\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Font;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.Box;\n+import javax.swing.BoxLayout;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTabbedPane;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+import javax.swing.plaf.metal.DefaultMetalTheme;\n+import javax.swing.plaf.metal.MetalIconFactory;\n+import javax.swing.plaf.metal.MetalLookAndFeel;\n+\n+/**\n+ * A Swing demo suitable for embedded environments (e.g. small display,\n+ * b/w graphics etc).\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class MiniDemo extends JFrame\n+{\n+\n+  /**\n+   * Creates a new MiniDemo instance.\n+   */\n+  MiniDemo()\n+  {\n+    createGUI();\n+  }\n+\n+  private void createGUI()\n+  {\n+    JTabbedPane tabPane = new JTabbedPane(JTabbedPane.TOP,\n+                                          JTabbedPane.SCROLL_TAB_LAYOUT);\n+\n+    // Setup scrolling list in first tab.\n+    Object[] listData = new Object[]{\"Milk\", \"Beer\", \"Wine\", \"Water\",\n+                                     \"Orange juice\", \"Tea\", \"Coffee\", \"Whiskey\",\n+                                     \"Lemonade\", \"Apple juice\", \"Gin Tonic\",\n+                                     \"Pangalactic Garleblaster\", \"Coke\"};\n+    JList list = new JList(listData);\n+    JScrollPane sp = new JScrollPane(list);\n+    tabPane.addTab(\"List\", sp);\n+\n+    // Setup some buttons in the second tab.\n+    JPanel buttonPanel = new JPanel();\n+    buttonPanel.setLayout(new GridLayout(4, 1));\n+    // JButtons\n+    JPanel jButtonPanel = new JPanel();\n+    jButtonPanel.setLayout(new BorderLayout());\n+    final JCheckBox buttonState1 = new JCheckBox(\"Enabled\", true);\n+    jButtonPanel.add(buttonState1, BorderLayout.EAST);\n+    JPanel jButtonContainer = new JPanel();\n+    final JButton jButton1 = new JButton(\"JButton\");\n+    final JButton jButton2 =\n+      new JButton(MetalIconFactory.getInternalFrameDefaultMenuIcon());\n+    jButtonContainer.add(jButton1);\n+    jButtonContainer.add(jButton2);\n+    jButtonPanel.add(jButtonContainer, BorderLayout.CENTER);\n+    buttonState1.addActionListener(\n+    new ActionListener()\n+    {\n+      public void actionPerformed(ActionEvent ev)\n+      {\n+        boolean enabled = buttonState1.isSelected();\n+        jButton1.setEnabled(enabled);\n+        jButton2.setEnabled(enabled);\n+      }\n+    });\n+    buttonPanel.add(jButtonPanel);\n+    // JToggleButtons\n+    JPanel jToggleButtonPanel = new JPanel();\n+    jToggleButtonPanel.setLayout(new BorderLayout());\n+    final JCheckBox buttonState2 = new JCheckBox(\"Enabled\", true);\n+    jToggleButtonPanel.add(buttonState2, BorderLayout.EAST);\n+    JPanel jToggleButtonContainer = new JPanel();\n+    final JButton jToggleButton1 = new JButton(\"JToggleButton\");\n+    final JButton jToggleButton2 =\n+      new JButton(MetalIconFactory.getInternalFrameDefaultMenuIcon());\n+    jToggleButtonContainer.add(jToggleButton1);\n+    jToggleButtonContainer.add(jToggleButton2);\n+    jToggleButtonPanel.add(jToggleButtonContainer, BorderLayout.CENTER);\n+    buttonState2.addActionListener(\n+    new ActionListener()\n+    {\n+      public void actionPerformed(ActionEvent ev)\n+      {\n+        boolean enabled = buttonState2.isSelected();\n+        jToggleButton1.setEnabled(enabled);\n+        jToggleButton2.setEnabled(enabled);\n+      }\n+    });\n+    buttonPanel.add(jToggleButtonPanel);\n+    tabPane.addTab(\"Buttons\", buttonPanel);\n+\n+    // ComboBoxes\n+    JPanel comboBoxPanel = new JPanel();\n+    JComboBox comboBox = new JComboBox(listData);\n+    comboBoxPanel.add(comboBox);\n+    tabPane.add(\"ComboBox\", comboBoxPanel);\n+\n+    // TextFields\n+    JPanel textFieldPanel = new JPanel();\n+    textFieldPanel.setLayout(new BoxLayout(textFieldPanel, BoxLayout.Y_AXIS));\n+    textFieldPanel.add(Box.createVerticalStrut(70));\n+    JPanel leftAlignedPanel = new JPanel(new BorderLayout());\n+    JPanel textFieldPanel1 = new JPanel();\n+    textFieldPanel1.setLayout(new BoxLayout(textFieldPanel1,\n+                                            BoxLayout.X_AXIS));\n+    final JTextField textfield1 = new JTextField(\"Hello World!\");\n+    textfield1.setHorizontalAlignment(JTextField.LEFT);\n+    textfield1.setFont(new Font(\"Dialog\", Font.PLAIN, 8));\n+    textFieldPanel1.add(textfield1);\n+    final JTextField textfield2 = new JTextField(\"Hello World!\");\n+    textfield2.setHorizontalAlignment(JTextField.LEFT);\n+    textfield2.setFont(new Font(\"Dialog\", Font.ITALIC, 12));\n+    textFieldPanel1.add(textfield2);\n+    final JTextField textfield3 = new JTextField(\"Hello World!\");\n+    textfield3.setHorizontalAlignment(JTextField.LEFT);\n+    textfield3.setFont(new Font(\"Dialog\", Font.BOLD, 14));\n+    textFieldPanel1.add(textfield3);\n+    leftAlignedPanel.add(textFieldPanel1);\n+    JPanel statePanel = new JPanel();\n+    statePanel.setLayout(new BoxLayout(statePanel, BoxLayout.Y_AXIS));\n+    statePanel.add(Box.createVerticalGlue());\n+    final JCheckBox enabled1 = new JCheckBox(\"enabled\");\n+    enabled1.setSelected(true);\n+    enabled1.addActionListener(\n+    new ActionListener()\n+    {\n+      public void actionPerformed(ActionEvent ev)\n+      {\n+        boolean enabled = enabled1.isSelected();\n+        textfield1.setEnabled(enabled);\n+        textfield2.setEnabled(enabled);\n+        textfield3.setEnabled(enabled);\n+      }\n+    });\n+    statePanel.add(enabled1);\n+    final JCheckBox editable1 = new JCheckBox(\"editable\");\n+    editable1.setSelected(true);\n+    editable1.addActionListener(\n+    new ActionListener()\n+    {\n+      public void actionPerformed(ActionEvent ev)\n+      {\n+        boolean editable = editable1.isSelected();\n+        textfield1.setEditable(editable);\n+        textfield2.setEditable(editable);\n+        textfield3.setEditable(editable);\n+      }\n+    });\n+    statePanel.add(editable1);\n+    statePanel.add(Box.createVerticalGlue());\n+    leftAlignedPanel.add(statePanel, BorderLayout.EAST);\n+    textFieldPanel.add(leftAlignedPanel);\n+    System.err.println(leftAlignedPanel.getPreferredSize());\n+    textFieldPanel.add(Box.createVerticalStrut(70));\n+    //panel.add(rightAlignedPanel);\n+    tabPane.add(\"TextField\", textFieldPanel);\n+    setContentPane(tabPane);\n+  }\n+\n+  /**\n+   * Starts the demo application.\n+   *\n+   * @param args the command line arguments (ignored)\n+   */\n+  public static void main(String[] args)\n+  {\n+    SwingUtilities.invokeLater(new Runnable() {\n+      public void run()\n+      {\n+        MetalLookAndFeel.setCurrentTheme(new DefaultMetalTheme());\n+        MiniDemo demo = new MiniDemo();\n+        demo.setSize(320, 200);\n+        demo.setUndecorated(true);\n+        demo.setVisible(true);\n+        demo.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+      }\n+    });\n+  }\n+\n+}"}, {"sha": "f90ffd4ceb102b31ec8200fb90c434c4d6809285", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/ScrollBarDemo.java", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FScrollBarDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FScrollBarDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FScrollBarDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* ScrollBarDemo.java -- An example showing scroll bars in Swing.\n-   Copyright (C) 2005,  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006, Free Software Foundation, Inc.\n \n This file is part of GNU Classpath examples.\n \n@@ -40,6 +40,8 @@ public class ScrollBarDemo\n   implements ActionListener \n {\n \n+  private JPanel content;\n+\n   /**\n    * Creates a new demo instance.\n    * \n@@ -49,6 +51,19 @@ public ScrollBarDemo(String title)\n   {\n     super(title);\n     JPanel content = createContent();\n+    // initFrameContent() is only called (from main) when running this app \n+    // standalone\n+  }\n+  \n+  /**\n+   * When the demo is run independently, the frame is displayed, so we should\n+   * initialise the content panel (including the demo content and a close \n+   * button).  But when the demo is run as part of the Swing activity board,\n+   * only the demo content panel is used, the frame itself is never displayed,\n+   * so we can avoid this step.\n+   */\n+  public void initFrameContent()\n+  {\n     JPanel closePanel = new JPanel();\n     JButton closeButton = new JButton(\"Close\");\n     closeButton.setActionCommand(\"CLOSE\");\n@@ -67,9 +82,12 @@ public ScrollBarDemo(String title)\n    */       \n   JPanel createContent() \n   {\n-    JPanel content = new JPanel(new BorderLayout());\n-    JPanel panel = createScrollBarPanel();\n-    content.add(panel);\n+    if (content == null)\n+      {\n+        content = new JPanel(new BorderLayout());\n+        JPanel panel = createScrollBarPanel();\n+        content.add(panel);\n+      }\n     return content;        \n   }\n     \n@@ -134,6 +152,7 @@ public void actionPerformed(ActionEvent e)\n   public static void main(String[] args) \n   {\n     ScrollBarDemo app = new ScrollBarDemo(\"ScrollBar Demo\");\n+    app.initFrameContent();\n     app.pack();\n     app.setVisible(true);\n   }"}, {"sha": "2bc510788005f6a3cf4f9d9a6b7c5eed06cb21ab", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/SliderDemo.java", "status": "modified", "additions": 36, "deletions": 17, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSliderDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSliderDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSliderDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* SliderDemo.java -- An example showing JSlider in various configurations.\n-   Copyright (C) 2005,  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006,  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath examples.\n \n@@ -35,7 +35,9 @@\n \n public class SliderDemo extends JFrame implements ActionListener \n {\n-   \n+\n+  private JPanel content;\n+\n   JSlider hslider1;\n   JSlider hslider2;\n   JSlider hslider3;\n@@ -59,7 +61,20 @@ public class SliderDemo extends JFrame implements ActionListener\n   public SliderDemo(String frameTitle) \n   {\n     super(frameTitle);\n-    JPanel content = createContent();\n+    content = createContent();\n+    // initFrameContent() is only called (from main) when running this app \n+    // standalone\n+  }\n+  \n+  /**\n+   * When the demo is run independently, the frame is displayed, so we should\n+   * initialise the content panel (including the demo content and a close \n+   * button).  But when the demo is run as part of the Swing activity board,\n+   * only the demo content panel is used, the frame itself is never displayed,\n+   * so we can avoid this step.\n+   */\n+  public void initFrameContent()\n+  {\n     JPanel closePanel = new JPanel();\n     JButton closeButton = new JButton(\"Close\");\n     closeButton.setActionCommand(\"CLOSE\");\n@@ -78,20 +93,23 @@ public SliderDemo(String frameTitle)\n    */       \n   JPanel createContent() \n   {\n-    JPanel content = new JPanel(new BorderLayout());\n-    JPanel panel = new JPanel(new GridLayout(1, 2));\n-    panel.add(createHorizontalPanel());\n-    panel.add(createVerticalPanel());\n-    enabledCheckBox = new JCheckBox(\"Enabled\");\n-    enabledCheckBox.setSelected(true);\n-    enabledCheckBox.setActionCommand(\"TOGGLE_ENABLED\");\n-    enabledCheckBox.addActionListener(this);\n-    JPanel checkBoxPanel = new JPanel();\n-    checkBoxPanel.add(enabledCheckBox);\n-    JPanel panel2 = new JPanel(new BorderLayout());\n-    panel2.add(panel);\n-    panel2.add(checkBoxPanel, BorderLayout.SOUTH);\n-    content.add(panel2);\n+    if (content == null)\n+      {\n+        content = new JPanel(new BorderLayout());\n+        JPanel panel = new JPanel(new GridLayout(1, 2));\n+        panel.add(createHorizontalPanel());\n+        panel.add(createVerticalPanel());\n+        enabledCheckBox = new JCheckBox(\"Enabled\");\n+        enabledCheckBox.setSelected(true);\n+        enabledCheckBox.setActionCommand(\"TOGGLE_ENABLED\");\n+        enabledCheckBox.addActionListener(this);\n+        JPanel checkBoxPanel = new JPanel();\n+        checkBoxPanel.add(enabledCheckBox);\n+        JPanel panel2 = new JPanel(new BorderLayout());\n+        panel2.add(panel);\n+        panel2.add(checkBoxPanel, BorderLayout.SOUTH);\n+        content.add(panel2);\n+      }\n     return content;        \n   }\n     \n@@ -242,6 +260,7 @@ else if (e.getActionCommand().equals(\"TOGGLE_ENABLED\"))\n   public static void main(String[] args) \n   {\n     SliderDemo app = new SliderDemo(\"Slider Demo\");\n+    app.initFrameContent();\n     app.pack();\n     app.setVisible(true);\n   }"}, {"sha": "4a05bc482ae0218c542ad48a8c95f06e1b4bdaf7", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/SpinnerDemo.java", "status": "added", "additions": 230, "deletions": 0, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSpinnerDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSpinnerDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FSpinnerDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,230 @@\n+/* SpinnerDemo.java -- An example showing various spinners in Swing.\n+   Copyright (C) 2006,  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath examples.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+*/\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Font;\n+import java.awt.GridLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JSpinner;\n+import javax.swing.SpinnerDateModel;\n+import javax.swing.SpinnerListModel;\n+import javax.swing.SpinnerNumberModel;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.metal.DefaultMetalTheme;\n+import javax.swing.plaf.metal.MetalLookAndFeel;\n+\n+/**\n+ * A simple demo showing various spinners in different states.\n+ */\n+public class SpinnerDemo \n+  extends JFrame \n+  implements ActionListener \n+{\n+  private JPanel content;\n+  private JCheckBox spinnerState1;  \n+  private JSpinner spinner1;\n+  private JSpinner spinner2;\n+\n+  private JCheckBox spinnerState2;    \n+  private JSpinner spinner3;\n+  private JSpinner spinner4;\n+    \n+  private JCheckBox spinnerState3;    \n+  private JSpinner spinner5;\n+  private JSpinner spinner6;\n+  \n+  /**\n+   * Creates a new demo instance.\n+   * \n+   * @param title  the frame title.\n+   */\n+  public SpinnerDemo(String title) \n+  {\n+    super(title);\n+    JPanel content = createContent();\n+    // initFrameContent() is only called (from main) when running this app \n+    // standalone\n+  }\n+  \n+  /**\n+   * When the demo is run independently, the frame is displayed, so we should\n+   * initialise the content panel (including the demo content and a close \n+   * button).  But when the demo is run as part of the Swing activity board,\n+   * only the demo content panel is used, the frame itself is never displayed,\n+   * so we can avoid this step.\n+   */\n+  public void initFrameContent() \n+  {\n+    JPanel closePanel = new JPanel();\n+    JButton closeButton = new JButton(\"Close\");\n+    closeButton.setActionCommand(\"CLOSE\");\n+    closeButton.addActionListener(this);\n+    closePanel.add(closeButton);\n+    content.add(closePanel, BorderLayout.SOUTH);\n+    getContentPane().add(content);\n+  }\n+       \n+  /**\n+   * Returns a panel with the demo content.  The panel\n+   * uses a BorderLayout(), and the BorderLayout.SOUTH area\n+   * is empty, to allow callers to add controls to the \n+   * bottom of the panel if they want to (a close button is\n+   * added if this demo is being run as a standalone demo).\n+   */       \n+  JPanel createContent() \n+  {\n+    if (content == null)\n+      {\n+        content = new JPanel(new BorderLayout());\n+        JPanel panel = new JPanel(new GridLayout(3, 1));\n+        panel.add(createPanel1());\n+        panel.add(createPanel2());\n+        panel.add(createPanel3());\n+        content.add(panel);\n+      }\n+    return content;        \n+  }\n+    \n+  private JPanel createPanel1() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.spinnerState1 = new JCheckBox(\"Enabled\", true);\n+    this.spinnerState1.setActionCommand(\"COMBO_STATE1\");\n+    this.spinnerState1.addActionListener(this);\n+    panel.add(this.spinnerState1, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\n+        \"Number Spinner: \"));\n+    this.spinner1 = new JSpinner(new SpinnerNumberModel(5.0, 0.0, 10.0, 0.5));\n+    this.spinner2 = new JSpinner(new SpinnerNumberModel(50, 0, 100, 5));\n+    this.spinner2.setFont(new Font(\"Dialog\", Font.PLAIN, 20));\n+    controlPanel.add(this.spinner1);\n+    controlPanel.add(this.spinner2);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+    \n+  private JPanel createPanel2() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.spinnerState2 = new JCheckBox(\"Enabled\", true);\n+    this.spinnerState2.setActionCommand(\"COMBO_STATE2\");\n+    this.spinnerState2.addActionListener(this);\n+    panel.add(this.spinnerState2, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\"Date Spinner: \"));\n+    this.spinner3 = new JSpinner(new SpinnerDateModel(new Date(), null, null, \n+        Calendar.DATE));\n+        \n+    this.spinner4 = new JSpinner(new SpinnerDateModel(new Date(), null, null, \n+        Calendar.YEAR));\n+    this.spinner4.setFont(new Font(\"Dialog\", Font.PLAIN, 20));\n+        \n+    controlPanel.add(this.spinner3);\n+    controlPanel.add(this.spinner4);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+\n+  private JPanel createPanel3() \n+  {\n+    JPanel panel = new JPanel(new BorderLayout());\n+    this.spinnerState3 = new JCheckBox(\"Enabled\", true);\n+    this.spinnerState3.setActionCommand(\"COMBO_STATE3\");\n+    this.spinnerState3.addActionListener(this);\n+    panel.add(this.spinnerState3, BorderLayout.EAST);\n+        \n+    JPanel controlPanel = new JPanel();\n+    controlPanel.setBorder(BorderFactory.createTitledBorder(\"List Spinner: \"));\n+    this.spinner5 = new JSpinner(new SpinnerListModel(new Object[] {\"Red\", \n+        \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\"}));\n+    \n+    this.spinner6 = new JSpinner(new SpinnerListModel(new Object[] {\"Red\", \n+        \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\"}));\n+    this.spinner6.setValue(\"Yellow\");\n+    this.spinner6.setFont(new Font(\"Dialog\", Font.PLAIN, 20));\n+        \n+    controlPanel.add(this.spinner5);\n+    controlPanel.add(this.spinner6);\n+        \n+    panel.add(controlPanel);\n+     \n+    return panel;\n+  }\n+    \n+  public void actionPerformed(ActionEvent e) \n+  {\n+    if (e.getActionCommand().equals(\"COMBO_STATE1\")) \n+    {\n+      spinner1.setEnabled(spinnerState1.isSelected());\n+      spinner2.setEnabled(spinnerState1.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"COMBO_STATE2\")) \n+    {\n+      spinner3.setEnabled(spinnerState2.isSelected());\n+      spinner4.setEnabled(spinnerState2.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"COMBO_STATE3\")) \n+    {\n+      spinner5.setEnabled(spinnerState3.isSelected());\n+      spinner6.setEnabled(spinnerState3.isSelected());\n+    }\n+    else if (e.getActionCommand().equals(\"CLOSE\"))\n+    {\n+      System.exit(0);\n+    }\n+  }\n+\n+  public static void main(String[] args) \n+  {\n+    try\n+    {\n+      MetalLookAndFeel.setCurrentTheme(new DefaultMetalTheme());\n+      UIManager.setLookAndFeel(new javax.swing.plaf.metal.MetalLookAndFeel());\n+    }\n+    catch (Exception e) {\n+        e.printStackTrace();\n+    }\n+    SpinnerDemo app = new SpinnerDemo(\"Spinner Demo\");\n+    app.initFrameContent();\n+    app.pack();\n+    app.setVisible(true);\n+  }\n+\n+}"}, {"sha": "1fbf2de537dafe1bea17dc80b4b9d818c77a1a12", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/TableDemo.java", "status": "added", "additions": 236, "deletions": 0, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,236 @@\n+/* TableDemo.java -- Demonstrates the use of JTable.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.examples.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.table.DefaultTableColumnModel;\n+import javax.swing.table.DefaultTableModel;\n+import javax.swing.table.TableColumn;\n+\n+/**\n+ * Displays the editable table. The first column consists of check boxes.\n+ * \n+ * @author Audrius Meskauskas (audriusa@bioinformatics.org)\n+ */\n+public class TableDemo extends JFrame\n+{ \n+  /**\n+   * The initial row count for this table.\n+   */ \n+  static int rows = 32;\n+  \n+  /**\n+   * The initial column count for this table.\n+   */ \n+  static int cols = 7;\n+  \n+  \n+  /**\n+   * The table model.\n+   */\n+  class TModel extends DefaultTableModel\n+  {\n+    \n+    /**\n+     * Return true if the cell is editable. All cells are editable.\n+     */\n+    public boolean isCellEditable(int parm1, int parm2)\n+    {\n+      return true;\n+    }\n+    \n+    /**\n+     * Get the number of the table rows.\n+     */\n+    public int getRowCount()\n+    {\n+      return rows;\n+    }\n+\n+    /**\n+     * Get the number of the table columns.\n+     */\n+    public int getColumnCount()\n+    {\n+      return cols;\n+    }\n+    \n+    /**\n+     * Set the value at the given position\n+     */\n+    public void setValueAt(Object aValue, int aRow, int aColumn)\n+    {\n+      values[aRow][aColumn] = aValue;\n+    }\n+    \n+    /**\n+     * Get the value at the given position.\n+     */\n+    public Object getValueAt(int aRow, int aColumn)\n+    {\n+      return values[aRow][aColumn];\n+    }\n+    \n+    /**\n+     * The column name, as suggested by model. This header should not be\n+     * visible, as it is overridden by setting the header name with\n+     * {@link TableColumn#setHeaderValue} in {@link TableDemo#createContent}.\n+     */\n+    public String getColumnName(int column)\n+    {\n+       return \"Error \"+column;\n+    }\n+    \n+    /**\n+     * The first column contains booleans, others - default class.\n+     */\n+    public Class getColumnClass(int column)\n+    {\n+      if (column == 0)\n+        return Boolean.class;\n+      else\n+        return super.getColumnClass(column);\n+    }    \n+  }\n+\n+  private JPanel content;\n+\n+  /**\n+   * The table being displayed.\n+   */\n+  JTable table = new JTable();\n+ \n+  /**\n+   * The table model.\n+   */\n+  TModel model = new TModel();\n+\n+  /**\n+   * The table value array.\n+   */\n+  Object[][] values;\n+  \n+  /**\n+   * Create the table demo with the given titel.\n+   * \n+   * @param title the frame title.\n+   */\n+  public TableDemo(String title)\n+  {\n+    super(title);\n+    getContentPane().add(createContent(), BorderLayout.CENTER);\n+  }\n+  \n+  /**\n+   * Returns a panel with the demo content. The panel uses a BorderLayout(), and\n+   * the BorderLayout.SOUTH area is empty, to allow callers to add controls to\n+   * the bottom of the panel if they want to (a close button is added if this\n+   * demo is being run as a standalone demo).\n+   */\n+  JPanel createContent()\n+  {\n+    if (content == null)\n+      {\n+        JPanel p = new JPanel();\n+        p.setLayout(new BorderLayout());\n+        values = new Object[rows][];\n+        for (int i = 0; i < values.length; i++)\n+          {\n+            values[i] = new Object[cols];\n+            for (int j = 1; j < cols; j++)\n+              {\n+                values[i][j] = \"\" + ((char) ('a' + j)) + i;\n+              }\n+            values [i][0] = i % 2 == 0? Boolean.TRUE : Boolean.FALSE;\n+          }\n+        \n+        table.setModel(model);        \n+        \n+        // Make the columns with gradually increasing width:\n+        DefaultTableColumnModel cm = new DefaultTableColumnModel();\n+        for (int i = 0; i < cols; i++)\n+          {\n+            TableColumn column = new TableColumn(i);\n+            \n+            // Showing the variable width columns.\n+            int width = 100+20*i;\n+            column.setPreferredWidth(width);\n+            \n+            // If we do not set the header value here, the value, returned\n+            // by model, is used.\n+            column.setHeaderValue(\"Width +\"+(20*i));\n+            \n+            cm.addColumn(column);            \n+          }\n+\n+        table.setColumnModel(cm);\n+\n+        // Create the table, place it into scroll pane and place\n+        // the pane into this frame.\n+        JScrollPane scroll = new JScrollPane();\n+        \n+        // The horizontal scroll bar is never needed.\n+        scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n+        scroll.getViewport().add(table);\n+        p.add(scroll, BorderLayout.CENTER);\n+        content = p;\n+      }\n+    return content;\n+  }\n+  \n+  /**\n+   * The executable method to display the editable table.\n+   * \n+   * @param args\n+   *          unused.\n+   */\n+  public static void main(String[] args)\n+  {\n+    TableDemo frame = new TableDemo(\"Table double click on the cell to edit.\");\n+    frame.setSize(new Dimension(640, 100));\n+    frame.validate();\n+    frame.setVisible(true);\n+  }\n+}"}, {"sha": "6eda469050ca2bc953828f13792fba918219cab0", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/TextFieldDemo.java", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTextFieldDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTextFieldDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTextFieldDemo.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* TextFieldDemo.java -- An example showing various textfields in Swing.\n-   Copyright (C) 2005,  Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006, Free Software Foundation, Inc.\n \n This file is part of GNU Classpath examples.\n \n@@ -107,6 +107,8 @@ public void paint(Graphics g)\n     }\n   }\n \n+  private JPanel content;\n+\n   /**\n    * The left aligned textfields and state buttons.\n    */\n@@ -115,7 +117,7 @@ public void paint(Graphics g)\n   JTextField textfield3;\n   JCheckBox enabled1;\n   JCheckBox editable1;\n-JPanel textFieldPanel1;\n+  JPanel textFieldPanel1;\n   /**\n    * The right aligned textfields and state buttons.\n    */\n@@ -162,6 +164,19 @@ public TextFieldDemo(String title)\n   {\n     super(title);\n     JPanel content = createContent();\n+    // initFrameContent() is only called (from main) when running this app \n+    // standalone\n+  }\n+  \n+  /**\n+   * When the demo is run independently, the frame is displayed, so we should\n+   * initialise the content panel (including the demo content and a close \n+   * button).  But when the demo is run as part of the Swing activity board,\n+   * only the demo content panel is used, the frame itself is never displayed,\n+   * so we can avoid this step.\n+   */\n+  public void initFrameContent() \n+  {\n     JPanel closePanel = new JPanel();\n     JButton closeButton = new JButton(\"Close\");\n     closeButton.setActionCommand(\"CLOSE\");\n@@ -180,15 +195,18 @@ public TextFieldDemo(String title)\n    */       \n   JPanel createContent() \n   {\n-    JPanel content = new JPanel(new BorderLayout());\n-    JPanel panel = new JPanel(new GridLayout(5, 1));\n-    panel.add(createLeftAlignedPanel());\n-    panel.add(createRightAlignedPanel());\n-    panel.add(createCenteredPanel());\n-    panel.add(createCustomColoredPanel());\n-    panel.add(createMiscPanel());\n-    content.add(panel);\n-    //content.setPreferredSize(new Dimension(400, 300));\n+    if (content == null)\n+      {\n+        content = new JPanel(new BorderLayout());\n+        JPanel panel = new JPanel(new GridLayout(5, 1));\n+        panel.add(createLeftAlignedPanel());\n+        panel.add(createRightAlignedPanel());\n+        panel.add(createCenteredPanel());\n+        panel.add(createCustomColoredPanel());\n+        panel.add(createMiscPanel());\n+        content.add(panel);\n+        //content.setPreferredSize(new Dimension(400, 300));\n+      }\n     return content;        \n   }\n     \n@@ -481,6 +499,7 @@ else if (e.getActionCommand().equals(\"EDITABLE4\"))\n   public static void main(String[] args) \n   {\n     TextFieldDemo app = new TextFieldDemo(\"TextField Demo\");\n+    app.initFrameContent();\n     app.pack();\n     app.setVisible(true);\n   }"}, {"sha": "7f62733739e320bd657766b5f74759ae33a6f4d9", "filename": "libjava/classpath/external/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.am?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n ## Input file for automake to generate the Makefile.in used by configure\n \n-SUBDIRS = sax w3c_dom\n+SUBDIRS = sax w3c_dom relaxngDatatype\n \n EXTRA_DIST = README"}, {"sha": "c75751e45e2703aebc6f32ed423025b99f161491", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -80,13 +80,16 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\n CLASSPATH_MODULE = @CLASSPATH_MODULE@\n+COLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n+CREATE_COLLECTIONS_FALSE = @CREATE_COLLECTIONS_FALSE@\n+CREATE_COLLECTIONS_TRUE = @CREATE_COLLECTIONS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n@@ -117,6 +120,7 @@ EGREP = @EGREP@\n ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n+FASTJAR = @FASTJAR@\n FIND = @FIND@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n@@ -128,6 +132,8 @@ FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n+FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n+FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n GJDOC = @GJDOC@\n@@ -178,6 +184,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n QT_CFLAGS = @QT_CFLAGS@\n QT_LIBS = @QT_LIBS@\n@@ -255,7 +262,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n vm_classes = @vm_classes@\n-SUBDIRS = sax w3c_dom\n+SUBDIRS = sax w3c_dom relaxngDatatype\n EXTRA_DIST = README\n all: all-recursive\n "}, {"sha": "282522db0342d8750454b3dc162493b5fc709cc8", "filename": "libjava/classpath/external/relaxngDatatype/.cvsignore", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2F.cvsignore?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,2 @@\n+Makefile\n+Makefile.in"}, {"sha": "8afce6597b5bf00a2eee21d4eda863034cc0c781", "filename": "libjava/classpath/external/relaxngDatatype/Makefile.am", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.am?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,14 @@\n+## Input file for automake to generate the Makefile.in used by configure\n+\n+EXTRA_DIST = README.txt \\\n+copying.txt \\\n+org/relaxng/datatype/Datatype.java \\\n+org/relaxng/datatype/DatatypeBuilder.java \\\n+org/relaxng/datatype/DatatypeException.java \\\n+org/relaxng/datatype/DatatypeLibrary.java \\\n+org/relaxng/datatype/DatatypeLibraryFactory.java \\\n+org/relaxng/datatype/DatatypeStreamingValidator.java \\\n+org/relaxng/datatype/ValidationContext.java \\\n+org/relaxng/datatype/helpers/DatatypeLibraryLoader.java \\\n+org/relaxng/datatype/helpers/ParameterlessDatatypeBuilder.java \\\n+org/relaxng/datatype/helpers/StreamingValidatorImpl.java"}, {"sha": "c7491f857d818b1c90957eb59362fc4a8bfca8b1", "filename": "libjava/classpath/external/relaxngDatatype/Makefile.in", "status": "added", "additions": 432, "deletions": 0, "changes": 432, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,432 @@\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+# 2003, 2004  Free Software Foundation, Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+VPATH = @srcdir@\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+top_builddir = ../..\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+INSTALL = @INSTALL@\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+target_triplet = @target@\n+subdir = external/relaxngDatatype\n+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n+\t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n+\t$(top_srcdir)/m4/acinclude.m4 \\\n+\t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n+\t$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \\\n+\t$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \\\n+\t$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n+CONFIG_HEADER = $(top_builddir)/include/config.h\n+CONFIG_CLEAN_FILES =\n+SOURCES =\n+DIST_SOURCES =\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+ACLOCAL = @ACLOCAL@\n+AMDEP_FALSE = @AMDEP_FALSE@\n+AMDEP_TRUE = @AMDEP_TRUE@\n+AMTAR = @AMTAR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+BUILD_CLASS_FILES_FALSE = @BUILD_CLASS_FILES_FALSE@\n+BUILD_CLASS_FILES_TRUE = @BUILD_CLASS_FILES_TRUE@\n+CAIRO_CFLAGS = @CAIRO_CFLAGS@\n+CAIRO_LIBS = @CAIRO_LIBS@\n+CC = @CC@\n+CCDEPMODE = @CCDEPMODE@\n+CFLAGS = @CFLAGS@\n+CLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\n+CLASSPATH_MODULE = @CLASSPATH_MODULE@\n+COLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\n+CP = @CP@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n+CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n+CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n+CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n+CREATE_COLLECTIONS_FALSE = @CREATE_COLLECTIONS_FALSE@\n+CREATE_COLLECTIONS_TRUE = @CREATE_COLLECTIONS_TRUE@\n+CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n+CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n+CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n+CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n+CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n+CREATE_GTK_PEER_LIBRARIES_TRUE = @CREATE_GTK_PEER_LIBRARIES_TRUE@\n+CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n+CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n+CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n+CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n+CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n+CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+DATE = @DATE@\n+DEFS = @DEFS@\n+DEPDIR = @DEPDIR@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+ECJ = @ECJ@\n+EGREP = @EGREP@\n+ERROR_CFLAGS = @ERROR_CFLAGS@\n+EXAMPLESDIR = @EXAMPLESDIR@\n+EXEEXT = @EXEEXT@\n+FASTJAR = @FASTJAR@\n+FIND = @FIND@\n+FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n+FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n+FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@\n+FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n+FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n+FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n+FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n+FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n+FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n+FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n+FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ = @GCJ@\n+GCJX = @GCJX@\n+GJDOC = @GJDOC@\n+GTK_CAIRO_ENABLED = @GTK_CAIRO_ENABLED@\n+GTK_CAIRO_FALSE = @GTK_CAIRO_FALSE@\n+GTK_CAIRO_TRUE = @GTK_CAIRO_TRUE@\n+GTK_CFLAGS = @GTK_CFLAGS@\n+GTK_LIBS = @GTK_LIBS@\n+INIT_LOAD_LIBRARY = @INIT_LOAD_LIBRARY@\n+INSTALL_CLASS_FILES_FALSE = @INSTALL_CLASS_FILES_FALSE@\n+INSTALL_CLASS_FILES_TRUE = @INSTALL_CLASS_FILES_TRUE@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_GLIBJ_ZIP_FALSE = @INSTALL_GLIBJ_ZIP_FALSE@\n+INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n+JAY = @JAY@\n+JAY_SKELETON = @JAY_SKELETON@\n+JIKES = @JIKES@\n+JIKESENCODING = @JIKESENCODING@\n+JIKESWARNINGS = @JIKESWARNINGS@\n+KJC = @KJC@\n+LDFLAGS = @LDFLAGS@\n+LIBDEBUG = @LIBDEBUG@\n+LIBICONV = @LIBICONV@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIBVERSION = @LIBVERSION@\n+LN_S = @LN_S@\n+LTLIBICONV = @LTLIBICONV@\n+LTLIBOBJS = @LTLIBOBJS@\n+MAINT = @MAINT@\n+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n+MAKEINFO = @MAKEINFO@\n+MKDIR = @MKDIR@\n+MOC = @MOC@\n+OBJEXT = @OBJEXT@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n+PANGOFT2_LIBS = @PANGOFT2_LIBS@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+PERL = @PERL@\n+PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n+RANLIB = @RANLIB@\n+REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n+REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n+REMOVE = @REMOVE@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n+STRIP = @STRIP@\n+USER_CLASSLIB = @USER_CLASSLIB@\n+USER_JAVAH = @USER_JAVAH@\n+USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n+USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n+USER_SPECIFIED_JAVAH_FALSE = @USER_SPECIFIED_JAVAH_FALSE@\n+USER_SPECIFIED_JAVAH_TRUE = @USER_SPECIFIED_JAVAH_TRUE@\n+VERSION = @VERSION@\n+WARNING_CFLAGS = @WARNING_CFLAGS@\n+XML_CFLAGS = @XML_CFLAGS@\n+XML_LIBS = @XML_LIBS@\n+XSLT_CFLAGS = @XSLT_CFLAGS@\n+XSLT_LIBS = @XSLT_LIBS@\n+X_CFLAGS = @X_CFLAGS@\n+X_EXTRA_LIBS = @X_EXTRA_LIBS@\n+X_LIBS = @X_LIBS@\n+X_PRE_LIBS = @X_PRE_LIBS@\n+ZIP = @ZIP@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_RANLIB = @ac_ct_RANLIB@\n+ac_ct_STRIP = @ac_ct_STRIP@\n+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n+am__include = @am__include@\n+am__leading_dot = @am__leading_dot@\n+am__quote = @am__quote@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+datadir = @datadir@\n+default_toolkit = @default_toolkit@\n+exec_prefix = @exec_prefix@\n+glibjdir = @glibjdir@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+localstatedir = @localstatedir@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+nativelibdir = @nativelibdir@\n+oldincludedir = @oldincludedir@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+sysconfdir = @sysconfdir@\n+target = @target@\n+target_alias = @target_alias@\n+target_cpu = @target_cpu@\n+target_os = @target_os@\n+target_vendor = @target_vendor@\n+vm_classes = @vm_classes@\n+EXTRA_DIST = README.txt \\\n+copying.txt \\\n+org/relaxng/datatype/Datatype.java \\\n+org/relaxng/datatype/DatatypeBuilder.java \\\n+org/relaxng/datatype/DatatypeException.java \\\n+org/relaxng/datatype/DatatypeLibrary.java \\\n+org/relaxng/datatype/DatatypeLibraryFactory.java \\\n+org/relaxng/datatype/DatatypeStreamingValidator.java \\\n+org/relaxng/datatype/ValidationContext.java \\\n+org/relaxng/datatype/helpers/DatatypeLibraryLoader.java \\\n+org/relaxng/datatype/helpers/ParameterlessDatatypeBuilder.java \\\n+org/relaxng/datatype/helpers/StreamingValidatorImpl.java\n+\n+all: all-am\n+\n+.SUFFIXES:\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  external/relaxngDatatype/Makefile'; \\\n+\tcd $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --gnu  external/relaxngDatatype/Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+distclean-libtool:\n+\t-rm -f libtool\n+uninstall-info-am:\n+tags: TAGS\n+TAGS:\n+\n+ctags: CTAGS\n+CTAGS:\n+\n+\n+distdir: $(DISTFILES)\n+\t$(mkdir_p) $(distdir)/org/relaxng/datatype $(distdir)/org/relaxng/datatype/helpers\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n+\tlist='$(DISTFILES)'; for file in $$list; do \\\n+\t  case $$file in \\\n+\t    $(srcdir)/*) file=`echo \"$$file\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+\t    $(top_srcdir)/*) file=`echo \"$$file\" | sed \"s|^$$topsrcdirstrip/|$(top_builddir)/|\"`;; \\\n+\t  esac; \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  dir=`echo \"$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t  if test \"$$dir\" != \"$$file\" && test \"$$dir\" != \".\"; then \\\n+\t    dir=\"/$$dir\"; \\\n+\t    $(mkdir_p) \"$(distdir)$$dir\"; \\\n+\t  else \\\n+\t    dir=''; \\\n+\t  fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \\\n+\t    fi; \\\n+\t    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \\\n+\t  else \\\n+\t    test -f $(distdir)/$$file \\\n+\t    || cp -p $$d/$$file $(distdir)/$$file \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+check-am: all-am\n+check: check-am\n+all-am: Makefile\n+installdirs:\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libtool mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-generic distclean-libtool\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am:\n+\n+install-exec-am:\n+\n+install-info: install-info-am\n+\n+install-man:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-generic mostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-info-am\n+\n+.PHONY: all all-am check check-am clean clean-generic clean-libtool \\\n+\tdistclean distclean-generic distclean-libtool distdir dvi \\\n+\tdvi-am html html-am info info-am install install-am \\\n+\tinstall-data install-data-am install-exec install-exec-am \\\n+\tinstall-info install-info-am install-man install-strip \\\n+\tinstallcheck installcheck-am installdirs maintainer-clean \\\n+\tmaintainer-clean-generic mostlyclean mostlyclean-generic \\\n+\tmostlyclean-libtool pdf pdf-am ps ps-am uninstall uninstall-am \\\n+\tuninstall-info-am\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "70d49b5fa64c51a7eb6dd69f6aff6f98d5439350", "filename": "libjava/classpath/external/relaxngDatatype/README.txt", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FREADME.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FREADME.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FREADME.txt?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,54 @@\n+======================================================================\r\n+           README FILE FOR DATATYPE INTERFACES FOR RELAX NG\r\n+======================================================================\r\n+\r\n+\r\n+\r\n+RELAX NG supports multiple datatype vocabularies. To achive this, an\r\n+interface between datatype vocabularies and schema processors is \r\n+necessary. This interface is intended to be a standard Java interface\r\n+for this purpose.\r\n+\r\n+\r\n+----------------------------------------------------------------------\r\n+LICENSE\r\n+----------------------------------------------------------------------\r\n+\r\n+See copying.txt.\r\n+\r\n+Note: this license is the BSD license.\r\n+\r\n+\r\n+\r\n+----------------------------------------------------------------------\r\n+FOR DEVELOPER\r\n+----------------------------------------------------------------------\r\n+\r\n+If you are planning to implement a datatype library, A sample datatype\r\n+library implementation by James Clark is available at [1], which\r\n+comes with documentation and source code.\r\n+\r\n+If you are planning to implement a schema processor, then don't forget\r\n+to check out org.relaxng.datatype.helpers.DatatypeLibraryLoader, as \r\n+this allows you to dynamically locate datatype implementations.\r\n+\r\n+\r\n+----------------------------------------------------------------------\r\n+LINKS\r\n+----------------------------------------------------------------------\r\n+\r\n+* OASIS RELAX NG TC\r\n+   http://www.oasis-open.org/committees/relax-ng/\r\n+* RELAX home page\r\n+   http://www.xml.gr.jp/relax/\r\n+\r\n+\r\n+----------------------------------------------------------------------\r\n+REFERENCES\r\n+----------------------------------------------------------------------\r\n+[1] Sample datatype library implementation by James Clark\r\n+    http://www.thaiopensource.com/relaxng/datatype-sample.zip\r\n+\r\n+Document written by Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)\r\n+======================================================================\r\n+END OF README\r"}, {"sha": "1b86eab60ea547bbe52a8133a6215b5cadd00d01", "filename": "libjava/classpath/external/relaxngDatatype/copying.txt", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Fcopying.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Fcopying.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Fcopying.txt?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,30 @@\n+Copyright (c) 2001, Thai Open Source Software Center Ltd, Sun Microsystems.\r\n+All rights reserved.\r\n+\r\n+Redistribution and use in source and binary forms, with or without\r\n+modification, are permitted provided that the following conditions are\r\n+met:\r\n+\r\n+    Redistributions of source code must retain the above copyright\r\n+    notice, this list of conditions and the following disclaimer.\r\n+\r\n+    Redistributions in binary form must reproduce the above copyright\r\n+    notice, this list of conditions and the following disclaimer in\r\n+    the documentation and/or other materials provided with the\r\n+    distribution.\r\n+\r\n+    Neither the names of the copyright holders nor the names of its\r\n+    contributors may be used to endorse or promote products derived\r\n+    from this software without specific prior written permission.\r\n+\r\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n+\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR\r\n+CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n+EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n+PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n+PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n+LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n+NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r"}, {"sha": "cf2dac134d8314f5a11f5b2eaf4de24deb2522d0", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/Datatype.java", "status": "added", "additions": 237, "deletions": 0, "changes": 237, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatype.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatype.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatype.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,237 @@\n+package org.relaxng.datatype;\r\n+\r\n+/**\r\n+ * Datatype object.\r\n+ * \r\n+ * This object has the following functionality:\r\n+ * \r\n+ * <ol>\r\n+ *  <li> functionality to identify a class of character sequences. This is\r\n+ *       done through the isValid method.\r\n+ * \r\n+ *  <li> functionality to produce a \"value object\" from a character sequence and\r\n+ *\t\t context information.\r\n+ * \r\n+ *  <li> functionality to test the equality of two value objects.\r\n+ * </ol>\r\n+ * \r\n+ * This interface also defines the createStreamingValidator method,\r\n+ * which is intended to efficiently support the validation of\r\n+ * large character sequences.\r\n+ * \r\n+ * @author <a href=\"mailto:jjc@jclark.com\">James Clark</a>\r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public interface Datatype {\r\n+\t\r\n+\t/**\r\n+\t * Checks if the specified 'literal' matches this Datatype\r\n+\t * with respect to the current context.\r\n+\t * \r\n+\t * @param literal\r\n+\t *\t\tthe lexical representation to be checked.\r\n+\t * @param context\r\n+\t *\t\tIf this datatype is context-dependent\r\n+\t *\t\t(i.e. the {@link #isContextDependent} method returns true),\r\n+\t *\t\tthen the caller must provide a non-null valid context object.\r\n+\t *\t\tOtherwise, the caller can pass null.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\ttrue if the 'literal' is a member of this Datatype;\r\n+\t *\t\tfalse if it's not a member of this Datatype.\r\n+\t */\r\n+\tboolean isValid( String literal, ValidationContext context );\r\n+\t\r\n+\t/**\r\n+\t * Similar to the isValid method but throws an exception with diagnosis\r\n+\t * in case of errors.\r\n+\t * \r\n+\t * <p>\r\n+\t * If the specified 'literal' is a valid lexical representation for this\r\n+\t * datatype, then this method must return without throwing any exception.\r\n+\t * If not, the callee must throw an exception (with diagnosis message,\r\n+\t * if possible.)\r\n+\t * \r\n+\t * <p>\r\n+\t * The application can use this method to provide detailed error message\r\n+\t * to users. This method is kept separate from the isValid method to\r\n+\t * achieve higher performance during normal validation.\r\n+\t * \r\n+\t * @exception DatatypeException\r\n+\t *\t\tIf the given literal is invalid, then this exception is thrown.\r\n+\t *\t\tIf the callee supports error diagnosis, then the exception should\r\n+\t *\t\tcontain a diagnosis message.\r\n+\t */\r\n+\tvoid checkValid( String literal, ValidationContext context )\r\n+\t\tthrows DatatypeException;\r\n+\t\r\n+\t/**\r\n+\t * Creates an instance of a streaming validator for this type.\r\n+\t * \r\n+\t * <p>\r\n+\t * By using streaming validators instead of the isValid method,\r\n+\t * the caller can avoid keeping the entire string, which is\r\n+\t * sometimes quite big, in memory.\r\n+\t * \r\n+\t * @param context\r\n+\t *\t\tIf this datatype is context-dependent\r\n+\t *\t\t(i.e. the {@link #isContextDependent} method returns true),\r\n+\t *\t\tthen the caller must provide a non-null valid context object.\r\n+\t *\t\tOtherwise, the caller can pass null.\r\n+\t *\t\tThe callee may keep a reference to this context object\r\n+\t *\t\tonly while the returned streaming validator is being used.\r\n+\t */\r\n+\tDatatypeStreamingValidator createStreamingValidator( ValidationContext context );\r\n+\t\r\n+\t/**\r\n+\t * Converts lexcial value and the current context to the corresponding\r\n+\t * value object.\r\n+\t * \r\n+\t * <p>\r\n+\t * The caller cannot generally assume that the value object is\r\n+\t * a meaningful Java object. For example, the caller cannot expect\r\n+\t * this method to return <code>java.lang.Number</code> type for\r\n+\t * the \"integer\" type of XML Schema Part 2.\r\n+\t * \r\n+\t * <p>\r\n+\t * Also, the caller cannot assume that the equals method and\r\n+\t * the hashCode method of the value object are consistent with\r\n+\t * the semantics of the datatype. For that purpose, the sameValue\r\n+\t * method and the valueHashCode method have to be used. Note that\r\n+\t * this means you cannot use classes like\r\n+\t * <code>java.util.Hashtable</code> to store the value objects.\r\n+\t * \r\n+\t * <p>\r\n+\t * The returned value object should be used solely for the sameValue\r\n+\t * and valueHashCode methods.\r\n+\t * \r\n+\t * @param context\r\n+\t *\t\tIf this datatype is context-dependent\r\n+\t *\t\t(when the {@link #isContextDependent} method returns true),\r\n+\t *\t\tthen the caller must provide a non-null valid context object.\r\n+\t *\t\tOtherwise, the caller can pass null.\r\n+\t * \r\n+\t * @return\tnull\r\n+\t *\t\twhen the given lexical value is not a valid lexical\r\n+\t *\t\tvalue for this type.\r\n+\t */\r\n+\tObject createValue( String literal, ValidationContext context );\r\n+\t\r\n+\t/**\r\n+\t * Tests the equality of two value objects which were originally\r\n+\t * created by the createValue method of this object.\r\n+\t * \r\n+\t * The behavior is undefined if objects not created by this type\r\n+\t * are passed. It is the caller's responsibility to ensure that\r\n+\t * value objects belong to this type.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\ttrue if two value objects are considered equal according to\r\n+\t *\t\tthe definition of this datatype; false if otherwise.\r\n+\t */\r\n+\tboolean sameValue( Object value1, Object value2 );\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Computes the hash code for a value object,\r\n+\t * which is consistent with the sameValue method.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\thash code for the specified value object.\r\n+\t */\r\n+\tint valueHashCode( Object value );\r\n+\r\n+\r\n+\r\n+\t\r\n+\t/**\r\n+\t * Indicates that the datatype doesn't have ID/IDREF semantics.\r\n+\t * \r\n+\t * This value is one of the possible return values of the\r\n+\t * {@link #getIdType} method.\r\n+\t */\r\n+\tpublic static final int ID_TYPE_NULL = 0;\r\n+\t\r\n+\t/**\r\n+\t * Indicates that RELAX NG compatibility processors should\r\n+\t * treat this datatype as having ID semantics.\r\n+\t * \r\n+\t * This value is one of the possible return values of the\r\n+\t * {@link #getIdType} method.\r\n+\t */\r\n+\tpublic static final int ID_TYPE_ID = 1;\r\n+\t\r\n+\t/**\r\n+\t * Indicates that RELAX NG compatibility processors should\r\n+\t * treat this datatype as having IDREF semantics.\r\n+\t * \r\n+\t * This value is one of the possible return values of the\r\n+\t * {@link #getIdType} method.\r\n+\t */\r\n+\tpublic static final int ID_TYPE_IDREF = 2;\r\n+\t\r\n+\t/**\r\n+\t * Indicates that RELAX NG compatibility processors should\r\n+\t * treat this datatype as having IDREFS semantics.\r\n+\t * \r\n+\t * This value is one of the possible return values of the\r\n+\t * {@link #getIdType} method.\r\n+\t */\r\n+\tpublic static final int ID_TYPE_IDREFS = 3;\r\n+\t\r\n+\t/**\r\n+\t * Checks if the ID/IDREF semantics is associated with this\r\n+\t * datatype.\r\n+\t * \r\n+\t * <p>\r\n+\t * This method is introduced to support the RELAX NG DTD\r\n+\t * compatibility spec. (Of course it's always free to use\r\n+\t * this method for other purposes.)\r\n+\t * \r\n+\t * <p>\r\n+\t * If you are implementing a datatype library and have no idea about\r\n+\t * the \"RELAX NG DTD compatibility\" thing, just return\r\n+\t * <code>ID_TYPE_NULL</code> is fine.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\tIf this datatype doesn't have any ID/IDREF semantics,\r\n+\t *\t\tit returns {@link #ID_TYPE_NULL}. If it has such a semantics\r\n+\t *\t\t(for example, XSD:ID, XSD:IDREF and comp:ID type), then\r\n+\t *\t\tit returns {@link #ID_TYPE_ID}, {@link #ID_TYPE_IDREF} or\r\n+\t *\t\t{@link #ID_TYPE_IDREFS}.\r\n+\t */\r\n+\tpublic int getIdType();\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Checks if this datatype may need a context object for\r\n+\t * the validation.\r\n+\t * \r\n+\t * <p>\r\n+\t * The callee must return true even when the context\r\n+\t * is not always necessary. (For example, the \"QName\" type\r\n+\t * doesn't need a context object when validating unprefixed\r\n+\t * string. But nonetheless QName must return true.)\r\n+\t * \r\n+\t * <p>\r\n+\t * XSD's <code>string</code> and <code>short</code> types\r\n+\t * are examples of context-independent datatypes.\r\n+\t * Its <code>QName</code> and <code>ENTITY</code> types\r\n+\t * are examples of context-dependent datatypes.\r\n+\t * \r\n+\t * <p>\r\n+\t * When a datatype is context-independent, then\r\n+\t * the {@link #isValid} method, the {@link #checkValid} method,\r\n+\t * the {@link #createStreamingValidator} method and\r\n+\t * the {@link #createValue} method can be called without\r\n+\t * providing a context object.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\t<b>true</b> if this datatype is context-dependent\r\n+\t *\t\t(it needs a context object sometimes);\r\n+\t * \r\n+\t *\t\t<b>false</b> if this datatype is context-<b>in</b>dependent\r\n+\t *\t\t(it never needs a context object).\r\n+\t */\r\n+\tpublic boolean isContextDependent();\r\n+}\r"}, {"sha": "75530de3c550e080a513fde927ead162a7579bec", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/DatatypeBuilder.java", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeBuilder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeBuilder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeBuilder.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,45 @@\n+package org.relaxng.datatype;\r\n+\r\n+/**\r\n+ * Creates a user-defined type by adding parameters to\r\n+ * the pre-defined type.\r\n+ * \r\n+ * @author <a href=\"mailto:jjc@jclark.com\">James Clark</a>\r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public interface DatatypeBuilder {\r\n+\t\r\n+\t/**\r\n+\t * Adds a new parameter.\r\n+\t *\r\n+\t * @param name\r\n+\t *\t\tThe name of the parameter to be added.\r\n+\t * @param strValue\r\n+\t *\t\tThe raw value of the parameter. Caller may not normalize\r\n+\t *\t\tthis value because any white space is potentially significant.\r\n+\t * @param context\r\n+\t *\t\tThe context information which can be used by the callee to\r\n+\t *\t\tacquire additional information. This context object is\r\n+\t *\t\tvalid only during this method call. The callee may not\r\n+\t *\t\tkeep a reference to this object.\r\n+\t * @exception\tDatatypeException\r\n+\t *\t\tWhen the given parameter is inappropriate for some reason.\r\n+\t *\t\tThe callee is responsible to recover from this error.\r\n+\t *\t\tThat is, the object should behave as if no such error\r\n+\t *\t\twas occured.\r\n+\t */\r\n+\tvoid addParameter( String name, String strValue, ValidationContext context )\r\n+\t\tthrows DatatypeException;\r\n+\t\r\n+\t/**\r\n+\t * Derives a new Datatype from a Datatype by parameters that\r\n+\t * were already set through the addParameter method.\r\n+\t * \r\n+\t * @exception DatatypeException\r\n+\t *\t\tDatatypeException must be thrown if the derivation is\r\n+\t *\t\tsomehow invalid. For example, a required parameter is missing,\r\n+\t *\t\tetc. The exception should contain a diagnosis message\r\n+\t *\t\tif possible.\r\n+\t */\r\n+\tDatatype createDatatype() throws DatatypeException;\r\n+}\r"}, {"sha": "970a99548b739c425dac8715b0bad24a72a8b074", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/DatatypeException.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeException.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,39 @@\n+package org.relaxng.datatype;\r\n+\r\n+/**\r\n+ * Signals Datatype related exceptions.\r\n+ * \r\n+ * @author <a href=\"mailto:jjc@jclark.com\">James Clark</a>\r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public class DatatypeException extends Exception {\r\n+\t\r\n+\tpublic DatatypeException( int index, String msg ) {\r\n+\t\tsuper(msg);\r\n+\t\tthis.index = index;\r\n+\t}\r\n+\tpublic DatatypeException( String msg ) {\r\n+\t\tthis(UNKNOWN,msg);\r\n+\t}\r\n+\t/**\r\n+\t * A constructor for those datatype libraries which don't support any\r\n+\t * diagnostic information at all.\r\n+\t */\r\n+\tpublic DatatypeException() {\r\n+\t\tthis(UNKNOWN,null);\r\n+\t}\r\n+\t\r\n+\t\r\n+\tprivate final int index;\r\n+\t\r\n+\tpublic static final int UNKNOWN = -1;\r\n+\r\n+\t/**\r\n+\t * Gets the index of the content where the error occured.\r\n+\t * UNKNOWN can be returned to indicate that no index information\r\n+\t * is available.\r\n+\t */\r\n+\tpublic int getIndex() {\r\n+\t\treturn index;\r\n+\t}\r\n+}\r"}, {"sha": "e18f2b379f6497def7cabbf39914661619ff31ca", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/DatatypeLibrary.java", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeLibrary.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeLibrary.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeLibrary.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,37 @@\n+package org.relaxng.datatype;\r\n+\r\n+/**\r\n+ * A Datatype library\r\n+ * \r\n+ * @author <a href=\"mailto:jjc@jclark.com\">James Clark</a>\r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public interface DatatypeLibrary {\r\n+\t\r\n+\t/**\r\n+\t * Creates a new instance of DatatypeBuilder.\r\n+\t * \r\n+\t * The callee should throw a DatatypeException in case of an error.\r\n+\t * \r\n+\t * @param baseTypeLocalName\r\n+\t *\t\tThe local name of the base type.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\tA non-null valid datatype object.\r\n+\t */\r\n+\tDatatypeBuilder createDatatypeBuilder( String baseTypeLocalName )\r\n+\t\tthrows DatatypeException;\r\n+\t\r\n+\t/**\r\n+\t * Gets or creates a pre-defined type.\r\n+\t * \r\n+\t * This is just a short-cut of\r\n+\t * <code>createDatatypeBuilder(typeLocalName).createDatatype();</code>\r\n+\t * \r\n+\t * The callee should throw a DatatypeException in case of an error.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\tA non-null valid datatype object.\r\n+\t */\r\n+\tDatatype createDatatype( String typeLocalName ) throws DatatypeException;\r\n+}\r"}, {"sha": "cdf1eef3c42c95cc09532446441e7f7821295c23", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/DatatypeLibraryFactory.java", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeLibraryFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeLibraryFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeLibraryFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,26 @@\n+package org.relaxng.datatype;\r\n+\r\n+/**\r\n+ * Factory class for the DatatypeLibrary class.\r\n+ * \r\n+ * <p>\r\n+ * The datatype library should provide the implementation of\r\n+ * this interface if it wants to be found by the schema processors.\r\n+ * The implementor also have to place a file in your jar file.\r\n+ * See the reference datatype library implementation for detail.\r\n+ * \r\n+ * @author <a href=\"mailto:jjc@jclark.com\">James Clark</a>\r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public interface DatatypeLibraryFactory\r\n+{\r\n+\t/**\r\n+\t * Creates a new instance of a DatatypeLibrary that supports \r\n+\t * the specified namespace URI.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\t<code>null</code> if the specified namespace URI is not\r\n+\t *\t\tsupported.\t\r\n+\t */\r\n+\tDatatypeLibrary createDatatypeLibrary( String namespaceURI );\r\n+}\r"}, {"sha": "9952057314878dbf6a6a3c2804a667bdb2f4cde9", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/DatatypeStreamingValidator.java", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeStreamingValidator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeStreamingValidator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FDatatypeStreamingValidator.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,46 @@\n+package org.relaxng.datatype;\r\n+\r\n+/**\r\n+ * Datatype streaming validator.\r\n+ * \r\n+ * <p>\r\n+ * The streaming validator is an optional feature that is useful for\r\n+ * certain Datatypes. It allows the caller to incrementally provide\r\n+ * the literal.\r\n+ * \r\n+ * @author <a href=\"mailto:jjc@jclark.com\">James Clark</a>\r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public interface DatatypeStreamingValidator {\r\n+\t\r\n+\t/**\r\n+\t * Passes an additional fragment of the literal.\r\n+\t * \r\n+\t * <p>\r\n+\t * The application can call this method several times, then call\r\n+\t * the isValid method (or the checkValid method) to check the validity\r\n+\t * of the accumulated characters.\r\n+\t */\r\n+\tvoid addCharacters( char[] buf, int start, int len );\r\n+\t\r\n+\t/**\r\n+\t * Tells if the accumulated literal is valid with respect to\r\n+\t * the underlying Datatype.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\tTrue if it is valid. False if otherwise.\r\n+\t */\r\n+\tboolean isValid();\r\n+\t\r\n+\t/**\r\n+\t * Similar to the isValid method, but this method throws\r\n+\t * Exception (with possibly diagnostic information), instead of\r\n+\t * returning false.\r\n+\t * \r\n+\t * @exception DatatypeException\r\n+\t *\t\tIf the callee supports the diagnosis and the accumulated\r\n+\t *\t\tliteral is invalid, then this exception that possibly\r\n+\t *\t\tcontains diagnosis information is thrown.\r\n+\t */\r\n+\tvoid checkValid() throws DatatypeException;\r\n+}\r"}, {"sha": "61e38f28d29ffe79729784e72388a6ce053bb548", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/ValidationContext.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FValidationContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FValidationContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2FValidationContext.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,66 @@\n+package org.relaxng.datatype;\r\n+\r\n+/**\r\n+ * An interface that must be implemented by caller to\r\n+ * provide context information that is necessary to \r\n+ * perform validation of some Datatypes.\r\n+ * \r\n+ * @author <a href=\"mailto:jjc@jclark.com\">James Clark</a>\r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public interface ValidationContext {\r\n+\t\r\n+\t/**\r\n+\t * Resolves a namespace prefix to the corresponding namespace URI.\r\n+\t * \r\n+\t * This method is used for validating the QName type, for example.\r\n+\t *\r\n+\t * <p>\r\n+\t * If the prefix is \"\" (empty string), it indicates\r\n+\t * an unprefixed value. The callee\r\n+\t * should resolve it as for an unprefixed\r\n+\t * element, rather than for an unprefixed attribute.\r\n+\t * \r\n+\t * <p>\r\n+\t * If the prefix is \"xml\", then the callee must resolve\r\n+\t * this prefix into \"http://www.w3.org/XML/1998/namespace\",\r\n+\t * as defined in the XML Namespaces Recommendation.\r\n+\t * \r\n+\t * @return\r\n+\t *\t\tnamespace URI of this prefix.\r\n+\t *\t\tIf the specified prefix is not declared,\r\n+\t *\t\tthe implementation must return null.\r\n+\t */\r\n+\tString resolveNamespacePrefix( String prefix );\r\n+\r\n+\t/**\r\n+\t * Returns the base URI of the context.  The null string may be returned\r\n+\t * if no base URI is known.\r\n+\t */\r\n+\tString getBaseUri();\r\n+\r\n+\t/**\r\n+\t * Checks if an unparsed entity is declared with the\r\n+\t * specified name.\r\n+\t * \r\n+\t * @return\r\n+\t *  true\r\n+\t *\t\tif the DTD has an unparsed entity declaration for\r\n+\t *\t\tthe specified name.\r\n+\t *  false\r\n+\t *\t\totherwise.\r\n+\t */\r\n+\tboolean isUnparsedEntity( String entityName );\r\n+\r\n+\t/**\r\n+\t * Checks if a notation is declared with the\r\n+\t * specified name.\r\n+\t * \r\n+\t * @return\r\n+\t *  true\r\n+\t *\t\tif the DTD has a notation declaration for the specified name.\r\n+\t *  false\r\n+\t *\t\totherwise.\r\n+\t */\r\n+\tboolean isNotation( String notationName );\r\n+}\r"}, {"sha": "43c44382f9cdddb95d63793b5474b9b14e552ae8", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/helpers/DatatypeLibraryLoader.java", "status": "added", "additions": 262, "deletions": 0, "changes": 262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FDatatypeLibraryLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FDatatypeLibraryLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FDatatypeLibraryLoader.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,262 @@\n+/**\r\n+ * Copyright (c) 2001, Thai Open Source Software Center Ltd\r\n+ * All rights reserved.\r\n+ * \r\n+ * Redistribution and use in source and binary forms, with or without\r\n+ * modification, are permitted provided that the following conditions are\r\n+ * met:\r\n+ * \r\n+ *     Redistributions of source code must retain the above copyright\r\n+ *     notice, this list of conditions and the following disclaimer.\r\n+ * \r\n+ *     Redistributions in binary form must reproduce the above copyright\r\n+ *     notice, this list of conditions and the following disclaimer in\r\n+ *     the documentation and/or other materials provided with the\r\n+ *     distribution.\r\n+ * \r\n+ *     Neither the name of the Thai Open Source Software Center Ltd nor\r\n+ *     the names of its contributors may be used to endorse or promote\r\n+ *     products derived from this software without specific prior written\r\n+ *     permission.\r\n+ * \r\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n+ * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR\r\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n+ */\r\n+package org.relaxng.datatype.helpers;\r\n+\r\n+import org.relaxng.datatype.DatatypeLibraryFactory;\r\n+import org.relaxng.datatype.DatatypeLibrary;\r\n+import java.util.Enumeration;\r\n+import java.util.NoSuchElementException;\r\n+import java.util.Vector;\r\n+import java.io.Reader;\r\n+import java.io.InputStream;\r\n+import java.io.InputStreamReader;\r\n+import java.io.BufferedReader;\r\n+import java.io.IOException;\r\n+import java.io.UnsupportedEncodingException;\r\n+import java.net.URL;\r\n+\r\n+/**\r\n+ * Discovers the datatype library implementation from the classpath.\r\n+ * \r\n+ * <p>\r\n+ * The call of the createDatatypeLibrary method finds an implementation\r\n+ * from a given datatype library URI at run-time.\r\n+ */\r\n+public class DatatypeLibraryLoader implements DatatypeLibraryFactory {\r\n+  private final Service service = new Service(DatatypeLibraryFactory.class);\r\n+\r\n+  public DatatypeLibrary createDatatypeLibrary(String uri) {\r\n+    for (Enumeration e = service.getProviders();\r\n+\t e.hasMoreElements();) {\r\n+      DatatypeLibraryFactory factory\r\n+\t= (DatatypeLibraryFactory)e.nextElement();\r\n+      DatatypeLibrary library = factory.createDatatypeLibrary(uri);\r\n+      if (library != null)\r\n+\treturn library;\r\n+    }\r\n+    return null;\r\n+  }\r\n+\r\n+\tprivate static class Service {\r\n+\t  private final Class serviceClass;\r\n+\t  private final Enumeration configFiles;\r\n+\t  private Enumeration classNames = null;\r\n+\t  private final Vector providers = new Vector();\r\n+\t  private Loader loader;\r\n+\r\n+\t  private class ProviderEnumeration implements Enumeration {\r\n+\t    private int nextIndex = 0;\r\n+\r\n+\t    public boolean hasMoreElements() {\r\n+\t      return nextIndex < providers.size() || moreProviders();\r\n+\t    }\r\n+\r\n+\t    public Object nextElement() {\r\n+\t      try {\r\n+\t\treturn providers.elementAt(nextIndex++);\r\n+\t      }\r\n+\t      catch (ArrayIndexOutOfBoundsException e) {\r\n+\t\tthrow new NoSuchElementException();\r\n+\t      }\r\n+\t    }\r\n+\t  }\r\n+\r\n+\t  private static class Singleton implements Enumeration {\r\n+\t    private Object obj;\r\n+\t    private Singleton(Object obj) {\r\n+\t      this.obj = obj;\r\n+\t    }\r\n+\r\n+\t    public boolean hasMoreElements() {\r\n+\t      return obj != null;\r\n+\t    }\r\n+\r\n+\t    public Object nextElement() {\r\n+\t      if (obj == null)\r\n+\t\tthrow new NoSuchElementException();\r\n+\t      Object tem = obj;\r\n+\t      obj = null;\r\n+\t      return tem;\r\n+\t    }\r\n+\t  }\r\n+\r\n+\t  // JDK 1.1\r\n+\t  private static class Loader {\r\n+\t    Enumeration getResources(String resName) {\r\n+\t      ClassLoader cl = Loader.class.getClassLoader();\r\n+\t      URL url;\r\n+\t      if (cl == null)\r\n+\t\turl = ClassLoader.getSystemResource(resName);\r\n+\t      else\r\n+\t\turl = cl.getResource(resName);\r\n+\t      return new Singleton(url);\r\n+\t    }\r\n+\r\n+\t    Class loadClass(String name) throws ClassNotFoundException {\r\n+\t      return Class.forName(name);\r\n+\t    }\r\n+\t  }\r\n+\r\n+\t  // JDK 1.2+\r\n+\t  private static class Loader2 extends Loader {\r\n+\t    private ClassLoader cl;\r\n+\r\n+\t    Loader2() {\r\n+\t      cl = Loader2.class.getClassLoader();\r\n+\t      // If the thread context class loader has the class loader\r\n+\t      // of this class as an ancestor, use the thread context class\r\n+\t      // loader.  Otherwise, the thread context class loader\r\n+\t      // probably hasn't been set up properly, so don't use it.\r\n+\t      ClassLoader clt = Thread.currentThread().getContextClassLoader();\r\n+\t      for (ClassLoader tem = clt; tem != null; tem = tem.getParent())\r\n+\t\tif (tem == cl) {\r\n+\t\t  cl = clt;\r\n+\t\t  break;\r\n+\t\t}\r\n+\t    }\r\n+\r\n+\t    Enumeration getResources(String resName) {\r\n+\t      try {\r\n+\t\treturn cl.getResources(resName);\r\n+\t      }\r\n+\t      catch (IOException e) {\r\n+\t\treturn new Singleton(null);\r\n+\t      }\r\n+\t    }\r\n+\r\n+\t    Class loadClass(String name) throws ClassNotFoundException {\r\n+\t      return Class.forName(name, true, cl);\r\n+\t    }\r\n+\t  }\r\n+\r\n+\t  public Service(Class cls) {\r\n+\t    try {\r\n+\t      loader = new Loader2();\r\n+\t    }\r\n+\t    catch (NoSuchMethodError e) {\r\n+\t      loader = new Loader();\r\n+\t    }\r\n+\t    serviceClass = cls;\r\n+\t    String resName = \"META-INF/services/\" + serviceClass.getName();\r\n+\t    configFiles = loader.getResources(resName);\r\n+\t  }\r\n+\r\n+\t  public Enumeration getProviders() {\r\n+\t    return new ProviderEnumeration();\r\n+\t  }\r\n+\r\n+\t  synchronized private boolean moreProviders() {\r\n+\t    for (;;) {\r\n+\t      while (classNames == null) {\r\n+\t\tif (!configFiles.hasMoreElements())\r\n+\t\t  return false;\r\n+\t\tclassNames = parseConfigFile((URL)configFiles.nextElement());\r\n+\t      }\r\n+\t      while (classNames.hasMoreElements()) {\r\n+\t\tString className = (String)classNames.nextElement();\r\n+\t\ttry {\r\n+\t\t  Class cls = loader.loadClass(className);\r\n+\t\t  Object obj = cls.newInstance();\r\n+\t\t  if (serviceClass.isInstance(obj)) {\r\n+\t\t    providers.addElement(obj);\r\n+\t\t    return true;\r\n+\t\t  }\r\n+\t\t}\r\n+\t\tcatch (ClassNotFoundException e) { }\r\n+\t\tcatch (InstantiationException e) { }\r\n+\t\tcatch (IllegalAccessException e) { }\r\n+\t\tcatch (LinkageError e) { }\r\n+\t      }\r\n+\t      classNames = null;\r\n+\t    }\r\n+\t  }\r\n+\r\n+\t  private static final int START = 0;\r\n+\t  private static final int IN_NAME = 1;\r\n+\t  private static final int IN_COMMENT = 2;\r\n+\r\n+\t  private static Enumeration parseConfigFile(URL url) {\r\n+\t    try {\r\n+\t      InputStream in = url.openStream();\r\n+\t      Reader r;\r\n+\t      try {\r\n+\t\tr = new InputStreamReader(in, \"UTF-8\");\r\n+\t      }\r\n+\t      catch (UnsupportedEncodingException e) {\r\n+\t\tr = new InputStreamReader(in, \"UTF8\");\r\n+\t      }\r\n+\t      r = new BufferedReader(r);\r\n+\t      Vector tokens = new Vector();\r\n+\t      StringBuffer tokenBuf = new StringBuffer();\r\n+\t      int state = START;\r\n+\t      for (;;) {\r\n+\t\tint n = r.read();\r\n+\t\tif (n < 0)\r\n+\t\t  break;\r\n+\t\tchar c = (char)n;\r\n+\t\tswitch (c) {\r\n+\t\tcase '\\r':\r\n+\t\tcase '\\n':\r\n+\t\t  state = START;\r\n+\t\t  break;\r\n+\t\tcase ' ':\r\n+\t\tcase '\\t':\r\n+\t\t  break;\r\n+\t\tcase '#':\r\n+\t\t  state = IN_COMMENT;\r\n+\t\t  break;\r\n+\t\tdefault:\r\n+\t\t  if (state != IN_COMMENT) {\r\n+\t\t    state = IN_NAME;\r\n+\t\t    tokenBuf.append(c);\r\n+\t\t  }\r\n+\t\t  break;\r\n+\t\t}\r\n+\t\tif (tokenBuf.length() != 0 && state != IN_NAME) {\r\n+\t\t  tokens.addElement(tokenBuf.toString());\r\n+\t\t  tokenBuf.setLength(0);\r\n+\t\t}\r\n+\t      }\r\n+\t      if (tokenBuf.length() != 0)\r\n+\t\ttokens.addElement(tokenBuf.toString());\r\n+\t      return tokens.elements();\r\n+\t    }\r\n+\t    catch (IOException e) {\r\n+\t      return null;\r\n+\t    }\r\n+\t  }\r\n+\t}\r\n+  \r\n+}\r\n+\r"}, {"sha": "1f571978f7cc0f28b9490ef0554f488f10cc07c1", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/helpers/ParameterlessDatatypeBuilder.java", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FParameterlessDatatypeBuilder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FParameterlessDatatypeBuilder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FParameterlessDatatypeBuilder.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,42 @@\n+package org.relaxng.datatype.helpers;\r\n+\r\n+import org.relaxng.datatype.*;\r\n+\r\n+/**\r\n+ * Dummy implementation of {@link DatatypeBuilder}.\r\n+ * \r\n+ * This implementation can be used for Datatypes which have no parameters.\r\n+ * Any attempt to add parameters will be rejected.\r\n+ * \r\n+ * <p>\r\n+ * Typical usage would be:\r\n+ * <PRE><XMP>\r\n+ * class MyDatatypeLibrary implements DatatypeLibrary {\r\n+ *     ....\r\n+ *     DatatypeBuilder createDatatypeBuilder( String typeName ) {\r\n+ *         return new ParameterleessDatatypeBuilder(createDatatype(typeName));\r\n+ *     }\r\n+ *     ....\r\n+ * }\r\n+ * </XMP></PRE>\r\n+ * \r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public final class ParameterlessDatatypeBuilder implements DatatypeBuilder {\r\n+\r\n+\t/** This type object is returned for the derive method. */\r\n+\tprivate final Datatype baseType;\r\n+\t\r\n+\tpublic ParameterlessDatatypeBuilder( Datatype baseType ) {\r\n+\t\tthis.baseType = baseType;\r\n+\t}\r\n+\t\r\n+\tpublic void addParameter( String name, String strValue, ValidationContext context )\r\n+\t\t\tthrows DatatypeException {\r\n+\t\tthrow new DatatypeException();\r\n+\t}\r\n+\t\r\n+\tpublic Datatype createDatatype() throws DatatypeException {\r\n+\t\treturn baseType;\r\n+\t}\r\n+}\r"}, {"sha": "6368670657636399b2f8e1580edfb143e1175da3", "filename": "libjava/classpath/external/relaxngDatatype/org/relaxng/datatype/helpers/StreamingValidatorImpl.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FStreamingValidatorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FStreamingValidatorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2Forg%2Frelaxng%2Fdatatype%2Fhelpers%2FStreamingValidatorImpl.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,55 @@\n+package org.relaxng.datatype.helpers;\r\n+\r\n+import org.relaxng.datatype.*;\r\n+\r\n+/**\r\n+ * Dummy implementation of {@link DatatypeStreamingValidator}.\r\n+ * \r\n+ * <p>\r\n+ * This implementation can be used as a quick hack when the performance\r\n+ * of streaming validation is not important. And this implementation\r\n+ * also shows you how to implement the DatatypeStreamingValidator interface.\r\n+ * \r\n+ * <p>\r\n+ * Typical usage would be:\r\n+ * <PRE><XMP>\r\n+ * class MyDatatype implements Datatype {\r\n+ *     ....\r\n+ *     public DatatypeStreamingValidator createStreamingValidator( ValidationContext context ) {\r\n+ *         return new StreamingValidatorImpl(this,context);\r\n+ *     }\r\n+ *     ....\r\n+ * }\r\n+ * </XMP></PRE>\r\n+ * \r\n+ * @author <a href=\"mailto:kohsuke.kawaguchi@sun.com\">Kohsuke KAWAGUCHI</a>\r\n+ */\r\n+public final class StreamingValidatorImpl implements DatatypeStreamingValidator {\r\n+\t\r\n+\t/** This buffer accumulates characters. */\r\n+\tprivate final StringBuffer buffer = new StringBuffer();\r\n+\t\r\n+\t/** Datatype obejct that creates this streaming validator. */\r\n+\tprivate final Datatype baseType;\r\n+\t\r\n+\t/** The current context. */\r\n+\tprivate final ValidationContext context;\r\n+\t\r\n+\tpublic void addCharacters( char[] buf, int start, int len ) {\r\n+\t\t// append characters to the current buffer.\r\n+\t\tbuffer.append(buf,start,len);\r\n+\t}\r\n+\t\r\n+\tpublic boolean isValid() {\r\n+\t\treturn baseType.isValid(buffer.toString(),context);\r\n+\t}\r\n+\t\r\n+\tpublic void checkValid() throws DatatypeException {\r\n+\t\tbaseType.checkValid(buffer.toString(),context);\r\n+\t}\r\n+\t\r\n+\tpublic StreamingValidatorImpl( Datatype baseType, ValidationContext context ) {\r\n+\t\tthis.baseType = baseType;\r\n+\t\tthis.context = context;\r\n+\t}\r\n+}\r"}, {"sha": "7f34c886a5c4285e830a29885a8dbcecaefad7b7", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -71,13 +71,16 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\n CLASSPATH_MODULE = @CLASSPATH_MODULE@\n+COLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n+CREATE_COLLECTIONS_FALSE = @CREATE_COLLECTIONS_FALSE@\n+CREATE_COLLECTIONS_TRUE = @CREATE_COLLECTIONS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n@@ -108,6 +111,7 @@ EGREP = @EGREP@\n ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n+FASTJAR = @FASTJAR@\n FIND = @FIND@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n@@ -119,6 +123,8 @@ FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n+FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n+FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n GJDOC = @GJDOC@\n@@ -169,6 +175,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n QT_CFLAGS = @QT_CFLAGS@\n QT_LIBS = @QT_LIBS@"}, {"sha": "30cebac5e667ab2e98c715cc3a6bfebbbb64cc7a", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -71,13 +71,16 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CLASSPATH_INCLUDES = @CLASSPATH_INCLUDES@\n CLASSPATH_MODULE = @CLASSPATH_MODULE@\n+COLLECTIONS_PREFIX = @COLLECTIONS_PREFIX@\n CP = @CP@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CREATE_ALSA_LIBRARIES_FALSE = @CREATE_ALSA_LIBRARIES_FALSE@\n CREATE_ALSA_LIBRARIES_TRUE = @CREATE_ALSA_LIBRARIES_TRUE@\n CREATE_API_DOCS_FALSE = @CREATE_API_DOCS_FALSE@\n CREATE_API_DOCS_TRUE = @CREATE_API_DOCS_TRUE@\n+CREATE_COLLECTIONS_FALSE = @CREATE_COLLECTIONS_FALSE@\n+CREATE_COLLECTIONS_TRUE = @CREATE_COLLECTIONS_TRUE@\n CREATE_CORE_JNI_LIBRARIES_FALSE = @CREATE_CORE_JNI_LIBRARIES_FALSE@\n CREATE_CORE_JNI_LIBRARIES_TRUE = @CREATE_CORE_JNI_LIBRARIES_TRUE@\n CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n@@ -108,6 +111,7 @@ EGREP = @EGREP@\n ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n+FASTJAR = @FASTJAR@\n FIND = @FIND@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n@@ -119,6 +123,8 @@ FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n+FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n+FREETYPE2_LIBS = @FREETYPE2_LIBS@\n GCJ = @GCJ@\n GCJX = @GCJX@\n GJDOC = @GJDOC@\n@@ -169,6 +175,7 @@ PACKAGE_VERSION = @PACKAGE_VERSION@\n PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n+PERL = @PERL@\n PKG_CONFIG = @PKG_CONFIG@\n QT_CFLAGS = @QT_CFLAGS@\n QT_LIBS = @QT_LIBS@"}, {"sha": "917e19832896c648cedf26294162d1122a207f1e", "filename": "libjava/classpath/gnu/CORBA/IOR.java", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -140,6 +140,27 @@ public String toString()\n         b.append(' ');\n         return b.toString();\n       }\n+      \n+      /**\n+       * Get a better formatted multiline string representation.\n+       */\n+      public String toStringFormatted()\n+      {\n+        StringBuffer b = new StringBuffer();\n+        b.append(\"\\n  Native set \" + name(native_set));\n+        if (conversion != null && conversion.length > 0)\n+          {\n+            b.append(\"\\n  Other supported sets:\\n    \");\n+            for (int i = 0; i < conversion.length; i++)\n+              {\n+                b.append(name(conversion[i]));\n+                b.append(' ');\n+              }\n+          }\n+        b.append(\"\\n\");\n+        return b.toString();\n+      }\n+      \n \n       /**\n        * Write into CDR stream.\n@@ -590,6 +611,39 @@ public String toString()\n \n     return b.toString();\n   }\n+  \n+  /**\n+   * Returns a multiline formatted human readable string representation of \n+   * this IOR object.\n+   */\n+  public String toStringFormatted()\n+  {\n+    StringBuffer b = new StringBuffer();\n+    b.append(\"\\nObject Id:\\n  \");\n+    b.append(Id);\n+    b.append(\"\\nObject is accessible at:\\n  \");\n+    b.append(Internet);\n+\n+    if (Big_Endian)\n+      b.append(\"\\n  Big endian encoding\");\n+    else\n+      b.append(\"\\n  Little endian encoding.\");      \n+\n+    b.append(\"\\nObject Key\\n  \");\n+\n+    for (int i = 0; i < key.length; i++)\n+      {\n+        b.append(Integer.toHexString(key[i] & 0xFF));\n+      }\n+\n+    b.append(\"\\nSupported code sets:\");\n+    b.append(\"\\n Wide:\");\n+    b.append(Internet.CodeSets.wide.toStringFormatted());\n+    b.append(\" Narrow:\");\n+    b.append(Internet.CodeSets.wide.toStringFormatted());\n+\n+    return b.toString();\n+  }  \n \n   /**\n    * Returs a stringified reference."}, {"sha": "f4e940ea90772951f5e1aa659c613906ed2a62aa", "filename": "libjava/classpath/gnu/CORBA/NamingService/NamingMap.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingMap.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -58,19 +58,19 @@\n   /**\n    * The actual map.\n    */\n-  private final TreeMap map;\n+  protected final TreeMap map;\n \n   /**\n    * Creates an instance of the naming map, intialising the comparator\n-   * to the {@link cmpNameComparator}.\n+   * to the {@link NameComponentComparator}.\n    */\n   public NamingMap()\n   {\n     map = new TreeMap(NameComponentComparator.singleton);\n   }\n \n   /**\n-   * Put the given CORBA object, specifying the given name as a key.\n+   * Put the given GIOP object, specifying the given name as a key.\n    * If the entry with the given name already exists, or if the given\n    * object is already mapped under another name, the\n    * {@link AlreadyBound} exception will be thrown.\n@@ -93,8 +93,11 @@ public void bind(NameComponent name, org.omg.CORBA.Object object)\n     else\n       {\n         if (containsValue(object))\n-          throw new AlreadyBound(\"Tha object has another name\");\n+          throw new AlreadyBound(\"The object has another name\");\n       }\n+    \n+    // There are no restrictions in binding the object.\n+    rebind(name, object);\n   }\n \n   /**\n@@ -141,7 +144,7 @@ public org.omg.CORBA.Object get(NameComponent name)\n   }\n \n   /**\n-   * Put the given CORBA object, specifying the given name as a key.\n+   * Put the given GIOP object, specifying the given name as a key.\n    * Remove all pre - existing mappings for the given name and object.\n    *\n    * @param name the name."}, {"sha": "3669879f22aa61e2ff53094a650eaa5bca5848f7", "filename": "libjava/classpath/gnu/CORBA/NamingService/NamingServiceTransient.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -136,7 +136,7 @@ public static void main(String[] args)\n         System.out.println(\"GNU Classpath transient naming service \"\n           + \"started at \" + iorr.Internet.host + \":\" + iorr.Internet.port\n           + \" key 'NameService'.\\n\\n\"\n-          + \"Copyright (C) 2005 Free Software Foundation\\n\"\n+          + \"Copyright (C) 2006 Free Software Foundation\\n\"\n           + \"This tool comes with ABSOLUTELY NO WARRANTY. \"\n           + \"This is free software, and you are\\nwelcome to \"\n           + \"redistribute it under conditions, defined in \""}, {"sha": "c2d8275e001aeb675b7256454d33c76fc9ce0f36", "filename": "libjava/classpath/gnu/CORBA/NamingService/TransientContext.java", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FTransientContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FTransientContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FTransientContext.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -59,7 +59,7 @@\n \n /**\n  * This class implements the transient naming service, defined by\n- * {@link NamingContex}. The 'transient' means that the service does\n+ * {@link NamingContext}. The 'transient' means that the service does\n  * not store its state into the persistent memory. If the service is\n  * restarted, the named objects must be re-registered again.\n  *\n@@ -71,15 +71,40 @@\n   extends _NamingContextImplBase\n   implements NamingContext, NamingContextOperations\n {\n+  /**\n+   * Use serial version UID for interoperability.\n+   */\n+  private static final long serialVersionUID = 2;\n+  \n   /**\n    * The already named contexts.\n    */\n-  protected final NamingMap named_contexts = new NamingMap();\n+  protected final NamingMap named_contexts;\n \n   /**\n    * The already named objects.\n    */\n-  protected final NamingMap named_objects = new NamingMap();\n+  protected final NamingMap named_objects;\n+  \n+  /**\n+   * Create the naming conetxt with default (transient) naming maps.\n+   */\n+  public TransientContext()\n+  {\n+    this(new NamingMap(), new NamingMap());\n+  }\n+  \n+  /**\n+   * Create the naming conetxt with the two provided naming maps.\n+   * \n+   * @param context_map the map for contexts\n+   * @param object_map the map for objectss\n+   */\n+  public TransientContext(NamingMap context_map, NamingMap object_map)\n+  {\n+    named_contexts = context_map;\n+    named_objects = object_map;\n+  }\n \n   /**\n    * Gives the object a name, valid in this context.\n@@ -376,7 +401,7 @@ private NameComponent[] getSuffix(NameComponent[] a_name)\n   /**\n    * Create a binding.\n    *\n-   * @param entry the entry, defining the bound object.\n+   * @param an_entry the entry, defining the bound object.\n    * @param type the binding type.\n    * @return the created binding.\n    */\n@@ -396,7 +421,7 @@ private Binding mkBinding(java.lang.Object an_entry, BindingType type)\n    * name, and pass the remainder (without the first node)\n    * of the name for that context to resolve.\n    *\n-   * @param name the name to resolve.\n+   * @param a_name the name to resolve.\n    *\n    * @return the resolved context\n    */"}, {"sha": "122a79c96eddf6ece00edc9b10396c20d21fac36", "filename": "libjava/classpath/gnu/classpath/ServiceFactory.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -282,7 +282,7 @@ public static Iterator lookupProviders(Class spi)\n    * An iterator over service providers that are listed in service\n    * provider configuration files, which get passed as an Enumeration\n    * of URLs. This is a helper class for {@link\n-   * ServiceFactory#lookupProviders}.\n+   * ServiceFactory#lookupProviders(Class, ClassLoader)}.\n    *\n    * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n    */\n@@ -314,7 +314,8 @@ public static Iterator lookupProviders(Class spi)\n      * The security context used when loading and initializing service\n      * providers. We want to load and initialize all plug-in service\n      * providers under the same security context, namely the one that\n-     * was active when {@link #lookupProviders} has been called.\n+     * was active when {@link #lookupProviders(Class, ClassLoader)} has\n+     * been called.\n      */\n     private final AccessControlContext securityContext;\n \n@@ -527,7 +528,7 @@ private void advanceReader()\n    * framework. This call returns very quickly if no log message will\n    * be produced, so there is not much overhead in the standard case.\n    *\n-   * @param the severity of the message, for instance {@link\n+   * @param level the severity of the message, for instance {@link\n    * Level#WARNING}.\n    *\n    * @param msg the log message, for instance <code>&#x201c;Could not"}, {"sha": "9f9dc51cb682320e75667cac09bae976490a24a0", "filename": "libjava/classpath/gnu/classpath/ServiceProviderLoadingAction.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceProviderLoadingAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceProviderLoadingAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceProviderLoadingAction.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -48,9 +48,9 @@\n  * <code>PriviledgedAction</code> in order to restrict the loaded\n  * service providers to the {@link java.security.AccessControlContext}\n  * that was active when {@link\n- * gnu.classpath.ServiceFactory#lookupProviders} was called, even\n- * though the actual loading is delayed to the time when the provider\n- * is actually needed.\n+ * gnu.classpath.ServiceFactory#lookupProviders(Class, ClassLoader)} was\n+ * called, even though the actual loading is delayed to the time when the\n+ * provider is actually needed.\n  *\n  * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n  */"}, {"sha": "af030ed277247146a6905fc3721c6cb4cdfd7a14", "filename": "libjava/classpath/gnu/classpath/debug/Component.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -89,9 +89,9 @@ public final class Component extends Level\n   public static final Component SSL_HANDSHAKE = new Component (\"SSL HANDSHAKE\", 0);\n \n   /**\n-   * Traces the application messages during SSL communications.\n+   * Traces record layer messages during SSL communications.\n    */\n-  public static final Component SSL_APPLICATION = new Component (\"SSL APPLICATION\", 1);\n+  public static final Component SSL_RECORD_LAYER = new Component (\"SSL RECORD LAYER\", 1);\n \n   /**\n    * Trace details about the SSL key exchange."}, {"sha": "0bdf22a1950d27a2abb9e05208a627cad2b05bae", "filename": "libjava/classpath/gnu/classpath/debug/Simple1LineFormatter.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSimple1LineFormatter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSimple1LineFormatter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FSimple1LineFormatter.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,153 @@\n+/* Simple1LineFormatter.java -- A simple 1-line logging formatter\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.debug;\n+\n+import gnu.classpath.SystemProperties;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.text.DateFormat;\n+import java.text.DecimalFormat;\n+import java.text.NumberFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.logging.Formatter;\n+import java.util.logging.LogRecord;\n+\n+/**\n+ * A simple 1-line formatter to use instead of the 2-line SimpleFormatter used\n+ * by default in the JDK logging handlers.\n+ * <p>\n+ * The fixed format of this formatter is as follows:\n+ * <p>\n+ * <ol>\n+ *   <li>Date: As a yyyy-MM-dd string.</li>\n+ *   <li>Time: As a HH:mm:ss.SSSS Z string.</li>\n+ *   <li>Thread identifier, right-justified, and framed in an 11-digit field.</li>\n+ *   <li>Class name, without its package name, left-justified, and framed in a\n+ *   32-character field.</li>\n+ *   <li>Method name, left-justified, and framed in a 32-character field.</li>\n+ *   <li>Level name, left-justified, and framed in a 6-character field.</li>\n+ *   <li>User message and arguments.</li>\n+ *   <li>Platform-dependent line-separator.</li>\n+ *   <li>Optionally, if the log-record contains a thrown exception, that\n+ *   exception's stack trace is appended to the output.</li>\n+ * </ol>\n+ * <p>\n+ * Here is an example of the output generated by this formatter:\n+ * <p>\n+ * <pre>\n+ * 2006-02-27 21:59:12.0881 +1100 -1343151280 EncodedKeyFactory                engineGeneratePublic()           FINER - ENTRY java.security.spec.X509EncodedKeySpec@b00d7fc0\n+ * 2006-02-27 21:59:12.0887 +1100 -1343151280 EncodedKeyFactory                engineGeneratePublic()           FINE  - Exception in DSSPublicKey.valueOf(). Ignore\n+ * java.security.InvalidParameterException: Unexpected OID: 1.2.840.113549.1.1.1\n+ *    at gnu.java.security.key.dss.DSSKeyPairX509Codec.decodePublicKey (DSSKeyPairX509Codec.java:205)\n+ *    at gnu.java.security.key.dss.DSSPublicKey.valueOf (DSSPublicKey.java:136)\n+ *    at gnu.java.security.jce.sig.EncodedKeyFactory.engineGeneratePublic (EncodedKeyFactory.java:218)\n+ *    at java.security.KeyFactory.generatePublic (KeyFactory.java:219)\n+ *    at gnu.java.security.x509.X509Certificate.parse (X509Certificate.java:657)\n+ *    at gnu.java.security.x509.X509Certificate.<init> (X509Certificate.java:163)\n+ *    ...\n+ * 2006-02-27 21:59:12.0895 +1100 -1343151280 RSAKeyPairX509Codec              decodePublicKey()                FINER - ENTRY [B@b00d7fd0\n+ * 2006-02-27 21:59:12.0897 +1100 -1343151280 RSAKeyPairX509Codec              decodePublicKey()                FINER - RETURN gnu.java.security.key.rsa.GnuRSAPublicKey@b00fb940\n+ * </pre>\n+ */\n+public class Simple1LineFormatter\n+    extends Formatter\n+{\n+  private static final String DAT_PATTERN = \"yyyy-MM-dd HH:mm:ss.SSSS Z \";\n+  private static final DateFormat DAT_FORMAT = new SimpleDateFormat(DAT_PATTERN);\n+  private static final String THREAD_PATTERN = \" #########0;-#########0\";\n+  private static final NumberFormat THREAD_FORMAT = new DecimalFormat(THREAD_PATTERN);\n+  private static final String SPACES_32 = \"                                \";\n+  private static final String SPACES_6 = \"      \";\n+  private static final String LS = SystemProperties.getProperty(\"line.separator\");\n+\n+  // default 0-arguments constructor\n+\n+  public String format(LogRecord record)\n+  {\n+    StringBuffer sb = new StringBuffer(180)\n+        .append(DAT_FORMAT.format(new Date(record.getMillis())))\n+        .append(THREAD_FORMAT.format(record.getThreadID()))\n+        .append(\" \");\n+    String s = record.getSourceClassName();\n+    if (s == null)\n+      sb.append(SPACES_32);\n+    else\n+      {\n+        s = s.trim();\n+        int i = s.lastIndexOf(\".\");\n+        if (i != - 1)\n+          s = s.substring(i + 1);\n+\n+        s = (s + SPACES_32).substring(0, 32);\n+      }\n+\n+    sb.append(s).append(\" \");\n+    s = record.getSourceMethodName();\n+    if (s == null)\n+      sb.append(SPACES_32);\n+    else\n+      {\n+        s = s.trim();\n+        if (s.endsWith(\"()\"))\n+          s = (s.trim() + SPACES_32).substring(0, 32);\n+        else\n+          s = (s.trim() + \"()\" + SPACES_32).substring(0, 32);\n+      }\n+\n+    sb.append(s).append(\" \");\n+    s = String.valueOf(record.getLevel());\n+    if (s == null)\n+      sb.append(SPACES_6);\n+    else\n+      s = (s.trim() + SPACES_6).substring(0, 6);\n+\n+    sb.append(s).append(\" - \").append(formatMessage(record)).append(LS);\n+    Throwable cause = record.getThrown();\n+    if (cause != null)\n+      {\n+        StringWriter sw = new StringWriter();\n+        cause.printStackTrace(new PrintWriter(sw, true));\n+        sb.append(sw.toString());\n+      }\n+\n+    return sb.toString();\n+  }\n+}"}, {"sha": "f73e0961027e09dd5971bb6a079b460047345a48", "filename": "libjava/classpath/gnu/classpath/jdwp/Jdwp.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2FJdwp.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* Jdwp.java -- Virtual machine to JDWP back-end programming interface\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -159,7 +159,7 @@ public void run ()\n \t{\n \t  AccessController.doPrivileged (_packetProcessor);\n \t}\n-      });\n+      }, \"packet processor\");\n     _ppThread.start ();\n   }\n \n@@ -258,7 +258,7 @@ private void _enforceSuspendPolicy (byte suspendPolicy)\n \tbreak;\n \n       case EventRequest.SUSPEND_THREAD:\n-\tVMVirtualMachine.suspendThread (this);\n+\tVMVirtualMachine.suspendThread (Thread.currentThread ());\n \tbreak;\n \n       case EventRequest.SUSPEND_ALL:"}, {"sha": "6c2acf3c4e5ccbded108f4ac4ff0d1e4482b3666", "filename": "libjava/classpath/gnu/classpath/jdwp/event/EventRequest.java", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FEventRequest.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* EventRequest.java -- an event request from the debugger\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -44,8 +44,9 @@\n import gnu.classpath.jdwp.exception.JdwpIllegalArgumentException;\n import gnu.classpath.jdwp.id.*;\n \n+import java.util.Collection;\n+import java.util.Iterator;\n import java.util.LinkedList;\n-import java.util.ListIterator;\n \n /**\n  * A class which represents a request by the debugger for an event\n@@ -319,6 +320,14 @@ else if (clazz == ThreadOnlyFilter.class)\n     _filters.add (filter);\n   }\n \n+  /**\n+   * Returns the filters attached to this request\n+   */\n+  public Collection getFilters ()\n+  {\n+    return _filters;\n+  }\n+\n   /**\n    * Returns the suspend policy for this request\n    */\n@@ -363,7 +372,7 @@ public boolean matches (Event theEvent)\n     // Loop through filters; all must match\n     // Note that we must allow EVERY filter to evaluate. This way\n     // things like CountFilter will work.\n-    ListIterator iter = _filters.listIterator ();\n+    Iterator iter = _filters.iterator ();\n     while (iter.hasNext ())\n       {\n \tIEventFilter filter = (IEventFilter) iter.next ();"}, {"sha": "472650de8686b04d1de506da2dd906766b7ebc92", "filename": "libjava/classpath/gnu/classpath/jdwp/id/JdwpId.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* JdwpId.java -- base class for all object ID types\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -50,6 +50,11 @@\n  */\n public abstract class JdwpId\n {\n+  /**\n+   * The size of an ID. The default is 8 bytes (a long).\n+   */\n+   public static final int SIZE = 8;\n+\n   /**\n    * ID assigned to this object\n    */\n@@ -121,11 +126,6 @@ public boolean equals (JdwpId id)\n     return (id.getId () == getId ());\n   }\n \n-  /**\n-   * Returns size of this type (used by IDSizes)\n-   */\n-  public abstract int size ();\n-\n   /**\n    * Writes the contents of this type to the <code>DataOutputStream</code>\n    * @param  outStream    the <code>DataOutputStream</code> to use"}, {"sha": "a4a37fd1312d71b8de5d3785ff902195fcde82b9", "filename": "libjava/classpath/gnu/classpath/jdwp/id/ObjectId.java", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* ObjectId.java -- object IDs\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -82,14 +82,6 @@ public ObjectId (byte tag)\n     super (tag);\n   }\n \n-  /**\n-   * Returns the size of this id type\n-   */\n-  public int size ()\n-  {\n-    return 8;\n-  }\n-\n   /**\n    * Returns the object referred to by this ID\n    *"}, {"sha": "b82acf34ab1ffe284280bf0259a3bf5b1769e6a7", "filename": "libjava/classpath/gnu/classpath/jdwp/id/ReferenceTypeId.java", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* ReferenceTypeId.java -- a base class for all reference type IDs\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -61,14 +61,6 @@ public ReferenceTypeId (byte tag)\n     super (tag);\n   }\n \n-  /**\n-   * Returns the size of this ID type\n-   */\n-  public int size ()\n-  {\n-    return 8;\n-  }\n-\n   /**\n    * Gets the class associated with this ID\n    *"}, {"sha": "a7edb287a56fa0866241ab0380d9f58af738d64e", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/VirtualMachineCommandSet.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,6 +1,6 @@\n /* VirtualMachineCommandSet.java -- class to implement the VirtualMachine\n    Command Set\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2006 Free Software Foundation\n  \n This file is part of GNU Classpath.\n \n@@ -40,6 +40,7 @@\n package gnu.classpath.jdwp.processor;\n \n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMFrame;\n import gnu.classpath.jdwp.VMVirtualMachine;\n import gnu.classpath.jdwp.exception.JdwpException;\n import gnu.classpath.jdwp.exception.JdwpInternalErrorException;\n@@ -298,12 +299,11 @@ private void executeDispose(ByteBuffer bb, DataOutputStream os)\n   private void executeIDsizes(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ObjectId oid = new ObjectId();\n-    os.writeInt(oid.size()); // fieldId\n-    os.writeInt(oid.size()); // methodId\n-    os.writeInt(oid.size()); // objectId\n-    os.writeInt(new ReferenceTypeId((byte) 0x00).size()); // referenceTypeId\n-    os.writeInt(oid.size()); // frameId\n+    os.writeInt(ObjectId.SIZE); // fieldId FIXME\n+    os.writeInt(ObjectId.SIZE); // methodId FIXME\n+    os.writeInt(ObjectId.SIZE); // objectId\n+    os.writeInt(ReferenceTypeId.SIZE); // referenceTypeId\n+    os.writeInt(VMFrame.SIZE); // frameId\n   }\n \n   private void executeSuspend(ByteBuffer bb, DataOutputStream os)"}, {"sha": "daaa143d03b41755e024a7a4211951c106053553", "filename": "libjava/classpath/gnu/java/awt/peer/GLightweightPeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -229,9 +229,9 @@ public void print(Graphics graphics) {}\n \n   public void repaint(long tm, int x, int y, int width, int height)\n   {\n-    Component p = comp.getParent ();\n-    if(p != null)\n-      p.repaint(tm,x+comp.getX(),y+comp.getY(),width,height);\n+    Component p = comp.getParent();\n+    if (p != null)\n+      p.repaint(tm, x + comp.getX(), y + comp.getY(), width, height);\n   }\n \n   public void requestFocus() {}"}, {"sha": "63d9cd48715ca6e1610b8efae663e096eee3377e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkButtonPeer.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkButtonPeer.java -- Implements ButtonPeer with GTK\n-   Copyright (C) 1998, 1999, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2004, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -57,7 +57,10 @@ public class GtkButtonPeer extends GtkComponentPeer\n \n   public native void connectSignals ();\n \n-  native void gtkWidgetModifyFont (String name, int style, int size);\n+  /**\n+   * Overridden to set Font of Label inside Button inside EventBox.\n+   */\n+  protected native void gtkWidgetModifyFont(String name, int style, int size);\n   native void gtkSetLabel (String label);\n   native void gtkWidgetSetForeground (int red, int green, int blue);\n   native void gtkWidgetSetBackground (int red, int green, int blue);"}, {"sha": "be9247e8d868bf37486da2dea57ddf4499e5b4e9", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxMenuItemPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkCheckboxMenuItemPeer.java -- Implements CheckboxMenuItemPeer with GTK+\n-   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,7 +46,7 @@\n public class GtkCheckboxMenuItemPeer extends GtkMenuItemPeer\n   implements CheckboxMenuItemPeer\n {\n-  native void create (String label);\n+  protected native void create (String label);\n \n   public GtkCheckboxMenuItemPeer (CheckboxMenuItem menu)\n   {\n@@ -56,6 +56,11 @@ public GtkCheckboxMenuItemPeer (CheckboxMenuItem menu)\n \n   public native void setState(boolean t);\n \n+  /**\n+   * Called from the signal handler of the gtk widget.  Posts a\n+   * ItemEvent to indicate a state changed, then calls super to post\n+   * an ActionEvent.\n+   */\n   protected void postMenuActionEvent ()\n   {\n     CheckboxMenuItem item = (CheckboxMenuItem)awtWidget;"}, {"sha": "094aa3c03918249cc798ff977f0edf50920bc341", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java", "status": "modified", "additions": 28, "deletions": 29, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkCheckboxPeer.java -- Implements CheckboxPeer with GTK\n-   Copyright (C) 1998, 1999, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2003, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,19 +42,24 @@\n import java.awt.CheckboxGroup;\n import java.awt.peer.CheckboxPeer;\n \n+import java.awt.event.ItemEvent;\n+\n public class GtkCheckboxPeer extends GtkComponentPeer\n   implements CheckboxPeer\n {\n   // Group from last time it was set.\n   public GtkCheckboxGroupPeer old_group;\n   // The current state of the GTK checkbox.\n   private boolean currentState;  \n-  private boolean changing = false;\n \n   public native void create (GtkCheckboxGroupPeer group);\n   public native void nativeSetCheckboxGroup (GtkCheckboxGroupPeer group);\n   public native void connectSignals ();\n-  native void gtkWidgetModifyFont (String name, int style, int size);\n+\n+  /**\n+   * Overridden to set Font of label inside button.\n+   */\n+  protected native void gtkWidgetModifyFont(String name, int style, int size);\n   native void gtkButtonSetLabel (String label);\n   native void gtkToggleButtonSetActive (boolean is_active);\n \n@@ -71,23 +76,24 @@ public void create ()\n     CheckboxGroup g = checkbox.getCheckboxGroup ();\n     old_group = GtkCheckboxGroupPeer.getCheckboxGroupPeer (g);\n     create (old_group);\n-    gtkToggleButtonSetActive (checkbox.getState ());\n+    currentState = checkbox.getState();\n+    gtkToggleButtonSetActive(currentState);\n     gtkButtonSetLabel (checkbox.getLabel ());\n   }\n \n-  public void setState (boolean state)\n+  /**\n+   * Sets native GtkCheckButton is state is different from current\n+   * state.  Will set currentState to state to prevent posting an\n+   * event since events should only be posted for user initiated\n+   * clicks on the GtkCheckButton.\n+   */\n+  synchronized public void setState (boolean state)\n   {\n-    // prevent item_toggled_cb -> postItemEvent ->\n-    // awtComponent.setState -> this.setState ->\n-    // gtkToggleButtonSetActive self-deadlock on the GDK lock.\n-    if (changing && Thread.currentThread() == GtkToolkit.mainThread)\n+    if (currentState != state)\n       {\n-        changing = false;\n-        return;\n+\tcurrentState = state;\n+\tgtkToggleButtonSetActive(state);\n       }\n-\n-    if (currentState != state)\n-      gtkToggleButtonSetActive (state);\n   }\n \n   public void setLabel (String label)\n@@ -111,22 +117,15 @@ public void setCheckboxGroup (CheckboxGroup group)\n   // Override the superclass postItemEvent so that the peer doesn't\n   // need information that we have.\n   // called back by native side: item_toggled_cb\n-  public void postItemEvent (Object item, int stateChange)\n+  synchronized public void postItemEvent(Object item, boolean state)\n   {\n-    Checkbox currentCheckBox = ((Checkbox)awtComponent);\n-    // A firing of the event is only desired if the state has changed due to a \n-    // button press. The currentCheckBox's state must be different from the \n-    // one that the stateChange is changing to. \n-    // stateChange = 1 if it goes from false -> true\n-    // stateChange = 2 if it goes from true -> false\n-    if (( !currentCheckBox.getState() && stateChange == 1)\n-        || (currentCheckBox.getState() && stateChange == 2))\n-    {\n-      super.postItemEvent (awtComponent, stateChange);\n-      currentState = !currentCheckBox.getState();\n-      changing = true;\n-      currentCheckBox.setState(currentState);\n-    }\n+    // Only fire event is state actually changed.\n+    if (currentState != state)\n+      {\n+\tcurrentState = state;\n+\tsuper.postItemEvent(awtComponent,\n+\t\t\t    state ? ItemEvent.SELECTED : ItemEvent.DESELECTED);\n+      }\n   }\n \n   public void dispose ()"}, {"sha": "821183927b0e5a976867179aff3709edc38dc075", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 82, "deletions": 75, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,6 @@\n /* GtkComponentPeer.java -- Implements ComponentPeer with GTK\n-   Copyright (C) 1998, 1999, 2002, 2004, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,10 +47,10 @@\n import java.awt.Container;\n import java.awt.Cursor;\n import java.awt.Dimension;\n+import java.awt.EventQueue;\n import java.awt.Font;\n import java.awt.FontMetrics;\n import java.awt.Graphics;\n-import java.awt.Graphics2D;\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n import java.awt.Insets;\n@@ -87,8 +88,6 @@ public class GtkComponentPeer extends GtkGenericPeer\n \n   boolean isInRepaint;\n \n-  static final Timer repaintTimer = new Timer (true);\n-\n   /* this isEnabled differs from Component.isEnabled, in that it\n      knows if a parent is disabled.  In that case Component.isEnabled \n      may return true, but our isEnabled will always return false */\n@@ -146,12 +145,7 @@ protected GtkComponentPeer (Component awtComponent)\n \n     Component parent = awtComponent.getParent ();\n \n-    // Only set our parent on the GTK side if our parent on the AWT\n-    // side is not showing.  Otherwise the gtk peer will be shown\n-    // before we've had a chance to position and size it properly.\n-    if (awtComponent instanceof Window\n-        || (parent != null && ! parent.isShowing ()))\n-      setParentAndBounds ();\n+    setParentAndBounds ();\n \n     setNativeEventMask ();\n \n@@ -202,11 +196,6 @@ void endNativeRepaint ()\n   void setComponentBounds ()\n   {\n     Rectangle bounds = awtComponent.getBounds ();\n-\n-    if (bounds.x == 0 && bounds.y == 0\n-        && bounds.width == 0 && bounds.height == 0)\n-      return;\n-\n     setBounds (bounds.x, bounds.y, bounds.width, bounds.height);\n   }\n \n@@ -303,29 +292,29 @@ public void handleEvent (AWTEvent event)\n       {\n       case PaintEvent.PAINT:\n       case PaintEvent.UPDATE:\n-        {\n-          try \n-            {\n-              Graphics g = getGraphics ();\n-          \n-              // Some peers like GtkFileDialogPeer are repainted by Gtk itself\n-              if (g == null)\n-                break;\n-\n-              g.setClip (((PaintEvent) event).getUpdateRect());\n-\n-              if (id == PaintEvent.PAINT)\n-                awtComponent.paint (g);\n-              else\n-                awtComponent.update (g);\n-\n-              g.dispose ();\n-            }\n-          catch (InternalError e)\n-            {\n-              System.err.println (e);\n-            }\n-        }\n+      {\n+        try\n+          {\n+            Graphics g = getGraphics();\n+\n+            if (!awtComponent.isShowing()  || awtComponent.getWidth() < 1 \n+                || awtComponent.getHeight() < 1 || g == null)\n+              break; \n+\n+            g.setClip(((PaintEvent) event).getUpdateRect());\n+\n+            if (id == PaintEvent.PAINT)\n+              awtComponent.paint(g);\n+            else\n+              awtComponent.update(g);\n+                \n+            g.dispose();\n+          }\n+        catch (InternalError e)\n+          {\n+            System.err.println(e);\n+          }\n+      }\n         break;\n       case KeyEvent.KEY_PRESSED:\n         ke = (KeyEvent) event;\n@@ -383,26 +372,43 @@ public void repaint (long tm, int x, int y, int width, int height)\n     if (x == 0 && y == 0 && width == 0 && height == 0)\n       return;\n \n-    repaintTimer.schedule(new RepaintTimerTask(x, y, width, height), tm);\n+    if (tm <= 0)\n+      q().postEvent(new PaintEvent(awtComponent, PaintEvent.UPDATE,\n+\t\t\t\t   new Rectangle(x, y, width, height)));\n+    else\n+      RepaintTimerTask.schedule(tm, x, y, width, height, awtComponent);\n   }\n \n-  private class RepaintTimerTask extends TimerTask\n+  /**\n+   * Used for scheduling delayed paint updates on the event queue.\n+   */\n+  private static class RepaintTimerTask extends TimerTask\n   {\n+    private static final Timer repaintTimer = new Timer(true);\n+\n     private int x, y, width, height;\n+    private Component awtComponent;\n \n-    RepaintTimerTask(int x, int y, int width, int height)\n+    RepaintTimerTask(Component c, int x, int y, int width, int height)\n     {\n       this.x = x;\n       this.y = y;\n       this.width = width;\n       this.height = height;\n+      this.awtComponent = c;\n     }\n \n     public void run()\n     {\n       q().postEvent (new PaintEvent (awtComponent, PaintEvent.UPDATE,\n                                      new Rectangle (x, y, width, height)));\n     }\n+\n+    static void schedule(long tm, int x, int y, int width, int height,\n+\t\t\t Component c)\n+    {\n+      repaintTimer.schedule(new RepaintTimerTask(c, x, y, width, height), tm);\n+    }\n   }\n \n   public void requestFocus ()\n@@ -429,8 +435,7 @@ public void setBounds (int x, int y, int width, int height)\n     int new_y = y;\n \n     Component parent = awtComponent.getParent ();\n-    Component next_parent;\n-\n+    \n     // Heavyweight components that are children of one or more\n     // lightweight containers have to be handled specially.  Because\n     // calls to GLightweightPeer.setBounds do nothing, GTK has no\n@@ -441,33 +446,19 @@ public void setBounds (int x, int y, int width, int height)\n     // so we need to continue adding offsets until we reach a\n     // container whose position GTK knows -- that is, the first\n     // non-lightweight.\n-    boolean lightweightChild = false;\n-    Insets i;\n-    while (parent.isLightweight ())\n+    Insets i;    \n+    while (parent.isLightweight())\n       {\n-\tlightweightChild = true;\n-\n-        next_parent = parent.getParent ();\n-\n-\ti = ((Container) parent).getInsets ();\n-\n-        if (next_parent instanceof Window)\n-          {\n-            new_x += i.left;\n-            new_y += i.top;\n-          }\n-        else\n-          {\n-            new_x += parent.getX () + i.left;\n-            new_y += parent.getY () + i.top;\n-          }\n-\n-\tparent = next_parent;\n+        i = ((Container) parent).getInsets();\n+        \n+        new_x += parent.getX() + i.left;\n+        new_y += parent.getY() + i.top;\n+        \n+        parent = parent.getParent();\n       }\n-\n     // We only need to convert from Java to GTK coordinates if we're\n     // placing a heavyweight component in a Window.\n-    if (parent instanceof Window && !lightweightChild)\n+    if (parent instanceof Window)\n       {\n         GtkWindowPeer peer = (GtkWindowPeer) parent.getPeer ();\n         // important: we want the window peer's insets here, not the\n@@ -479,12 +470,17 @@ public void setBounds (int x, int y, int width, int height)\n         int menuBarHeight = 0;\n         if (peer instanceof GtkFramePeer)\n           menuBarHeight = ((GtkFramePeer) peer).getMenuBarHeight ();\n-\n-        new_x = x - insets.left;\n-        new_y = y - insets.top + menuBarHeight;\n+        \n+        new_x -= insets.left;\n+        new_y -= insets.top;\n+        new_y += menuBarHeight;\n       }\n \n     setNativeBounds (new_x, new_y, width, height);\n+\n+    // If the height or width were (or are now) smaller than zero\n+    // then we want to adjust the visibility.\n+    setVisible(awtComponent.isVisible());\n   }\n \n   void setCursor ()\n@@ -535,6 +531,13 @@ public Color getBackground ()\n \n   public void setVisible (boolean b)\n   {\n+    // Only really set visible when component is bigger than zero pixels.\n+    if (b)\n+      {\n+        Rectangle bounds = awtComponent.getBounds();\n+\tb = (bounds.width > 0) && (bounds.height > 0);\n+      }\n+\n     if (Thread.currentThread() == GtkToolkit.mainThread)\n       setVisibleNativeUnlocked (b);\n     else\n@@ -571,6 +574,8 @@ protected void postKeyEvent (int id, long when, int mods,\n     KeyEvent keyEvent = new KeyEvent (awtComponent, id, when, mods,\n                                       keyCode, keyChar, keyLocation);\n \n+    EventQueue q = q();\n+\n     // Also post a KEY_TYPED event if keyEvent is a key press that\n     // doesn't represent an action or modifier key.\n     if (keyEvent.getID () == KeyEvent.KEY_PRESSED\n@@ -579,15 +584,17 @@ protected void postKeyEvent (int id, long when, int mods,\n             && keyCode != KeyEvent.VK_CONTROL\n             && keyCode != KeyEvent.VK_ALT))\n       {\n-        synchronized (q)\n-          {\n-            q().postEvent (keyEvent);\n-            q().postEvent (new KeyEvent (awtComponent, KeyEvent.KEY_TYPED, when, mods,\n-                                        KeyEvent.VK_UNDEFINED, keyChar, keyLocation));\n+        synchronized(q)\n+\t  {\n+\t    q.postEvent(keyEvent);\n+\t    keyEvent = new KeyEvent(awtComponent, KeyEvent.KEY_TYPED, when,\n+\t\t\t\t    mods, KeyEvent.VK_UNDEFINED, keyChar,\n+\t\t\t\t    keyLocation);\n+\t    q.postEvent(keyEvent);\n           }\n       }\n     else\n-      q().postEvent (keyEvent);\n+      q.postEvent(keyEvent);\n   }\n \n   protected void postFocusEvent (int id, boolean temporary)"}, {"sha": "23737b0b0a08e79e5ddba326a2efff0330e96080", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkContainerPeer.java", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkContainerPeer.java -- Implements ContainerPeer with GTK\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -65,29 +65,6 @@ public void beginValidate ()\n \n   public void endValidate ()\n   {\n-    Component parent = awtComponent.getParent ();\n-\n-    // Only set our parent on the GTK side if our parent on the AWT\n-    // side is not showing.  Otherwise the gtk peer will be shown\n-    // before we've had a chance to position and size it properly.\n-    if (parent != null && parent.isShowing ())\n-      {\n-        Component[] components = ((Container) awtComponent).getComponents ();\n-        int ncomponents = components.length;\n-\n-        for (int i = 0; i < ncomponents; i++)\n-          {\n-            ComponentPeer peer = components[i].getPeer ();\n-\n-            // Skip lightweight peers.\n-            if (peer instanceof GtkComponentPeer)\n-              ((GtkComponentPeer) peer).setParentAndBounds ();\n-          }\n-\n-        // GTK windows don't have parents.\n-        if (!(awtComponent instanceof Window))\n-          setParentAndBounds ();\n-      }\n   }\n \n   public Insets getInsets() "}, {"sha": "a0ae9e9eef57fe13bdeded087d4b786f294a5456", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkFileDialogPeer.java", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -41,8 +41,6 @@\n import java.awt.Dialog;\n import java.awt.FileDialog;\n import java.awt.Graphics;\n-import java.awt.Window;\n-import java.awt.event.ComponentEvent;\n import java.awt.peer.FileDialogPeer;\n import java.io.File;\n import java.io.FilenameFilter;\n@@ -68,7 +66,8 @@ public void create()\n            ((FileDialog) awtComponent).getMode());\n \n     FileDialog fd = (FileDialog) awtComponent;\n-\n+    \n+    nativeSetDirectory(System.getProperty(\"user.dir\"));\n     setDirectory(fd.getDirectory());\n     setFile(fd.getFile());\n \n@@ -117,13 +116,9 @@ public void setFile (String fileName)\n     // is not absolute, let's construct it based on current directory.\n     currentFile = fileName;\n     if (fileName.indexOf(FS) == 0)\n-      {\n-        nativeSetFile (fileName);\n-      }\n+      nativeSetFile(fileName);\n     else\n-      {\n-        nativeSetFile (nativeGetDirectory() + FS + fileName);\n-      }\n+      nativeSetFile(nativeGetDirectory() + FS + fileName);\n   }\n \n   public void setDirectory (String directory)\n@@ -132,18 +127,24 @@ public void setDirectory (String directory)\n        the only way we have to set the directory in FileDialog is by\n        calling its setDirectory which will call us back. */\n     if ((directory == null && currentDirectory == null)\n-        || (directory != null && directory.equals (currentDirectory)))\n+        || (directory != null && directory.equals(currentDirectory)))\n       return;\n \n-    if (directory == null || directory.equals (\"\"))\n+    if (directory == null || directory.equals(\"\"))\n       {\n         currentDirectory = FS;\n-        nativeSetFile (FS);\n-\treturn;\n+        nativeSetDirectory(FS);\n+        return;\n       }\n-      \n+    \n+    // GtkFileChooser requires absolute directory names. If the given directory\n+    // name is not absolute, construct it based on current directory if it is not\n+    // null. Otherwise, use FS.\n     currentDirectory = directory;\n-    nativeSetDirectory (directory);\n+    if (directory.indexOf(FS) == 0)\n+      nativeSetDirectory(directory);\n+    else\n+      nativeSetDirectory(nativeGetDirectory() + FS + directory);\n   }\n \n   public void setFilenameFilter (FilenameFilter filter)"}, {"sha": "f59e781c2a4dc7a0949275ad0a98c38e3c64b45a", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -43,10 +43,7 @@\n import java.awt.Image;\n import java.awt.MenuBar;\n import java.awt.Rectangle;\n-import java.awt.Window;\n-import java.awt.event.ComponentEvent;\n import java.awt.event.PaintEvent;\n-import java.awt.image.ColorModel;\n import java.awt.peer.FramePeer;\n import java.awt.peer.MenuBarPeer;\n \n@@ -77,7 +74,10 @@ public void setMenuBar (MenuBar bar)\n         removeMenuBarPeer ();\n         insets.top -= menuBarHeight;\n         menuBarHeight = 0;\n-        awtComponent.validate ();\n+        // if component has already been validated, we need to revalidate.\n+        // otherwise, it will be validated when it is shown.\n+        if (awtComponent.isValid())\n+          awtComponent.validate ();\n         gtkFixedSetVisible (true);\n       }\n     else if (bar != null && menuBar == null)\n@@ -92,7 +92,10 @@ else if (bar != null && menuBar == null)\n           setMenuBarWidth (menuBar, menuBarWidth);\n         menuBarHeight = getMenuBarHeight ();\n         insets.top += menuBarHeight;\n-        awtComponent.validate ();\n+        // if component has already been validated, we need to revalidate.\n+        // otherwise, it will be validated when it is shown.\n+        if (awtComponent.isValid())\n+          awtComponent.validate ();\n         gtkFixedSetVisible (true);\n       }\n     else if (bar != null && menuBar != null)"}, {"sha": "468c46dc4af7c7c8b18521d2ca872fa39672989e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkGenericPeer.java", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkGenericPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkGenericPeer.java - Has a hashcode.  Yuck.\n-   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,23 +39,28 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.EventQueue;\n+import java.awt.Font;\n import java.awt.Toolkit;\n import java.awt.event.ActionEvent;\n \n public class GtkGenericPeer\n {\n+  // Used by Native State Association (NSA) functions to map\n+  // gtk_widget to peer object.\n   final int native_state = getUniqueInteger ();\n \n   // Next native state value we will assign.\n   private static int next_native_state = 0;\n \n   // The widget or other java-side object we wrap.\n-  protected Object awtWidget;\n-\n-  // Global event queue.\n-  protected static EventQueue q = null;\n-\n-  // Dispose of our native state.\n+  protected final Object awtWidget;\n+\n+  /**\n+   * Dispose of our native state.  Calls gtk_widget_destroy on the\n+   * native widget and removes the awtWidget from the native state\n+   * tables. Should be overridden by subclasses if this is not (all)\n+   * that needs to be done.\n+   */\n   public native void dispose ();\n \n   static EventQueue q ()\n@@ -68,12 +73,6 @@ protected GtkGenericPeer (Object awtWidget)\n     this.awtWidget = awtWidget;\n   }\n \n-  public static void enableQueue (EventQueue sq) \n-  {\n-    if (q == null)\n-      q = sq;\n-  }\n-\n   protected void postActionEvent (String command, int mods) \n   {\n     q().postEvent (new ActionEvent (awtWidget, ActionEvent.ACTION_PERFORMED, \n@@ -88,8 +87,20 @@ static synchronized int getUniqueInteger ()\n     // Let's assume this will never wrap.\n     return next_native_state++;\n   }\n+  \n+  /**\n+   * Helper method to set Font for Gtk Widget.\n+   */\n+  protected void gtkWidgetModifyFont(Font f)\n+  {\n+    gtkWidgetModifyFont(f.getName(), f.getStyle(), f.getSize());\n+  }\n \n-  native void gtkWidgetModifyFont (String name, int style, int size);\n+  /**\n+   * Sets font for this Gtk Widget. Should be overridden by peers which\n+   * are composed of different widgets or are contained in bins.\n+   */\n+  protected native void gtkWidgetModifyFont(String name, int style, int size);\n \n   static void printCurrentThread ()\n   {"}, {"sha": "b48a2049e2775d527cb4c9fc5bcaa551c98ebebc", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkImage.java", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkImage.java\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -329,6 +329,24 @@ private GtkImage (GtkImage src, int width, int height, int hints)\n     props = new Hashtable();\n   }\n \n+  // The singleton GtkImage that is returned on errors by GtkToolkit.\n+  private static GtkImage errorImage;\n+\n+  /**\n+   * Returns an empty GtkImage with the errorLoading flag set.\n+   * Called from GtkToolKit when some error occured, but an image needs\n+   * to be returned anyway.\n+   */\n+  static synchronized GtkImage getErrorImage()\n+  {\n+    if (errorImage == null)\n+      {\n+\terrorImage = new GtkImage();\n+\terrorImage.errorLoading = true;\n+      }\n+    return errorImage;\n+  }\n+\n   /**\n    * Native helper function for constructor that takes a pixbuf Pointer.\n    */"}, {"sha": "bbf4230b3ca10155860c5e4f69435753f70dc2f8", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkLabelPeer.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkLabelPeer.java -- Implements LabelPeer with GTK\n-   Copyright (C) 1998, 1999, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,12 @@ public class GtkLabelPeer extends GtkComponentPeer\n     implements LabelPeer\n {\n   native void create (String text, float alignment);\n-  native void gtkWidgetModifyFont (String name, int style, int size);\n+\n+  /**\n+   * Overridden to set the Font of the label inside the gtk_event_box.\n+   */\n+  protected native void gtkWidgetModifyFont(String name, int style, int size);\n+\n   native void nativeSetAlignment (float alignment);\n \n   public native void setText(String text);"}, {"sha": "285f79416f3cba91f148b7f37a53a8f315780aec", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkListPeer.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkListPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkListPeer.java -- Implements ListPeer with GTK\n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -59,7 +59,12 @@ void create ()\n \n   native void create (int rows);\n   native void connectSignals ();\n-  native void gtkWidgetModifyFont (String name, int style, int size);\n+\n+  /**\n+   * Overridden to set the Font of the text insode the gtk_scrolled_window.\n+   */\n+  protected native void gtkWidgetModifyFont (String name, int style, int size);\n+\n   native void gtkWidgetRequestFocus ();\n \n   native void getSize (int rows, int visibleRows, int dims[]);"}, {"sha": "d203b437f3836131305fe3071dd398e810057f0f", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuBarPeer.java", "status": "modified", "additions": 55, "deletions": 24, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkMenuBarPeer.java -- Implements MenuBarPeer with GTK+\n-   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,38 +48,69 @@\n public class GtkMenuBarPeer extends GtkMenuComponentPeer\n   implements MenuBarPeer\n {\n-\n-  native void create ();\n-  native void addMenu (MenuPeer menu);\n-\n-  public GtkMenuBarPeer (MenuBar target)\n+  /** Whether we already have an help menu set on this peer. */\n+  private boolean hasHelpMenu;\n+\n+  /**\n+   * Creates the gtk+ widget for this peer and puts it in the nsa\n+   * table. Called from the (super class) constructor.\n+   */\n+  protected native void create();\n+\n+  /**\n+   * Adds a new GtkMenuPeer to the end of the GtkMenuBarPeer.\n+   */\n+  private native void addMenu(GtkMenuPeer menu);\n+\n+  /**\n+   * Creates a new GtkMenuBarPeer associated with the given MenuBar.\n+   */\n+  public GtkMenuBarPeer(MenuBar menubar)\n   {\n-    super (target);\n+    super(menubar);\n   }\n \n-  void setFont ()\n-  {\n-    MenuComponent mc = (MenuComponent) awtWidget;\n-    Font f = mc.getFont ();\n-\n-    if (f == null)\n-      mc.setFont (new Font (\"Dialog\", Font.PLAIN, 12));\n-  }\n-\n-  // FIXME: remove this method or replace it with one that does\n-  // something useful.\n-  /* In Gnome, help menus are no longer right flushed. */\n-  native void nativeSetHelpMenu(MenuPeer menuPeer);\n-\n+  /**\n+   * Adds a help menu to this MenuBar. Gnome styleguides say the help\n+   * menu is just the last item in the menubar (they are NOT right\n+   * justified).\n+   */\n   public void addHelpMenu (Menu menu)\n   {\n-    // nativeSetHelpMenu((MenuPeer) menu.getPeer());\n+    if (hasHelpMenu)\n+      {\n+\t// Remove the (help) menu, which is after all the other items.\n+\tdelMenu(((MenuBar) awtWidget).getMenuCount());\n+\thasHelpMenu = false;\n+      }\n+\n+    if (menu != null)\n+      {\n+\taddMenu(menu);\n+\thasHelpMenu = true;\n+      }\n   }\n \n+  /**\n+   * Deletes the menu at (zero-based) index from this GtkMenuBar.\n+   */\n   public native void delMenu(int index);\n \n-  public void addMenu (Menu m)\n+  /**\n+   * Adds the GtkMenuPeer associated with the Menu to this\n+   * GtkMenuBarPeer. Makes sure that any help menus keep the last menu\n+   * on the bar.\n+   */\n+  public void addMenu(Menu m)\n   {\n-    // FIXME: implement\n+    // Make sure the help menu is the last one.\n+    if (hasHelpMenu)\n+      {\n+\taddHelpMenu(null);\n+\taddMenu((GtkMenuPeer) m.getPeer());\n+\taddHelpMenu(((MenuBar) awtWidget).getHelpMenu());\n+      }\n+    else\n+      addMenu((GtkMenuPeer) m.getPeer());\n   }\n }"}, {"sha": "55b95a18d0f9e1edc99083cb628ad2d600a8e65a", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java", "status": "modified", "additions": 47, "deletions": 12, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkMenuComponentPeer.java -- Implements MenuComponentPeer with GTK+\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,31 +39,66 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Font;\n+import java.awt.MenuComponent;\n+import java.awt.MenuContainer;\n import java.awt.peer.MenuComponentPeer;\n \n-public class GtkMenuComponentPeer extends GtkGenericPeer\n+public abstract class GtkMenuComponentPeer extends GtkGenericPeer\n   implements MenuComponentPeer\n {\n-  void create ()\n-  {\n-    throw new RuntimeException ();\n-  }\n+  /**\n+   * Creates the associated gtk+ widget and stores it in the nsa table\n+   * for this peer. Called by the constructor.\n+   */\n+  protected abstract void create ();\n \n-  void setFont ()\n+  /**\n+   * Sets font based on MenuComponent font, or containing menu(bar)\n+   * parent font.\n+   */\n+  private void setFont()\n   {\n+    MenuComponent mc = ((MenuComponent) awtWidget);\n+    Font f = mc.getFont();\n+    \n+    if (f == null)\n+      {\n+        MenuContainer parent = mc.getParent ();\n+\t// Submenus inherit the font of their containing Menu(Bar).\n+\tif (parent instanceof MenuComponent)\n+\t  f = parent.getFont ();\n+      }\n+\n+    setFont(f);\n   }\n \n-  public GtkMenuComponentPeer (Object awtWidget)\n+  /**\n+   * Will call the abstract <code>create()</code> that needs to be\n+   * overridden by subclasses, to create the MenuComponent. It will\n+   * then correctly setup the font for the component based on the\n+   * component and/or its containing parent component.\n+   */\n+  public GtkMenuComponentPeer(MenuComponent component)\n   {\n-    super (awtWidget);\n-    create ();\n-    setFont ();\n+    super(component);\n+    create();\n+    setFont();\n   }\n \n+  /**\n+   * Removes the awtWidget components from the native state tables.\n+   * Subclasses should call <code>super.dispose()</code> if they don't\n+   * remove these themselves.\n+   */\n   public native void dispose();\n \n+  /**\n+   * Sets the font for this particular MenuComponent only (not any\n+   * containing items, if any).\n+   */\n   public void setFont(Font font)\n   {\n-  // FIXME: implement  \n+    if (font != null)\n+      gtkWidgetModifyFont(font);\n   }\n }"}, {"sha": "251bab233d7c17646e51065357056357328d7bdd", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuItemPeer.java", "status": "modified", "additions": 50, "deletions": 49, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkMenuItemPeer.java -- Implements MenuItemPeer with GTK+\n-   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,70 +49,71 @@\n public class GtkMenuItemPeer extends GtkMenuComponentPeer\n   implements MenuItemPeer\n {\n-  native void create (String label);\n-  native void connectSignals ();\n-  native void gtkWidgetModifyFont (String name, int style, int size);\n-\n-  void create ()\n+  /**\n+   * Creates the associated gtk+ widget and stores it in the nsa table\n+   * for this peer. Called by the create() method with the label name\n+   * of the associated MenuItem. Needs to be overridden my subclasses\n+   * that want to create a different gtk+ widget.\n+   */\n+  protected native void create (String label);\n+\n+  /**\n+   * Called from constructor to enable signals from an item. If a\n+   * subclass needs different (or no) signals connected this method\n+   * should be overridden.\n+   */\n+  protected native void connectSignals ();\n+\n+  /**\n+   * Overridden to set font on menu item label.\n+   */\n+  protected native void gtkWidgetModifyFont(String name, int style, int size);\n+\n+  /**\n+   * Creates the associated gtk+ widget and stores it in the nsa table\n+   * for this peer. Called by the (super class) constructor.\n+   * Overridden to get the label if the assiociated MenuItem and to\n+   * call create(String).\n+   */\n+  protected void create()\n   {\n     create (((MenuItem) awtWidget).getLabel());\n   }\n \n-  public GtkMenuItemPeer (MenuItem item)\n-  {\n-    super (item);\n-    setEnabled (item.isEnabled ());\n-    setParent (item);\n-\n-    if (item.getParent() instanceof Menu && ! (item instanceof Menu))\n-      connectSignals();\n-  }\n-\n-  void setFont ()\n+  /**\n+   * Creates a new GtkMenuItemPeer associated with the given MenuItem.\n+   * It will call create(), setFont(), setEnabled() and\n+   * connectSignals() in that order.\n+   */\n+  public GtkMenuItemPeer(MenuItem item)\n   {\n-    MenuComponent mc = ((MenuComponent) awtWidget);\n-    Font f = mc.getFont ();\n-\n-    if (f == null)\n-      {\n-        MenuComponent parent = (MenuComponent) mc.getParent ();\n-        Font pf = parent.getFont ();\n-        gtkWidgetModifyFont (pf.getName (), pf.getStyle (), pf.getSize ());\n-      }\n-    else\n-      gtkWidgetModifyFont(f.getName(), f.getStyle(), f.getSize());\n+    super(item);\n+    setEnabled (item.isEnabled());\n+    connectSignals();\n   }\n \n-  void setParent (MenuItem item)\n+  /**\n+   * Calls setEnabled(false).\n+   */\n+  public void disable()\n   {\n-    // add ourself differently, based on what type of parent we have\n-    // yes, the typecasting here is nasty.\n-    Object parent = item.getParent ();\n-    if (parent instanceof MenuBar)\n-      {\n-\t((GtkMenuBarPeer)((MenuBar)parent).getPeer ()).addMenu ((MenuPeer) this);\n-      }\n-    else // parent instanceof Menu\n-      {\n-\t((GtkMenuPeer)((Menu)parent).getPeer ()).addItem (this, \n-\t\t\t\t\t\t\t  item.getShortcut ());\n-      }\n+    setEnabled(false);\n   }\n \n-  public void disable ()\n+  /**\n+   * Calls setEnabled(true).\n+   */\n+  public void enable()\n   {\n-    setEnabled (false);\n-  }\n-\n-  public void enable ()\n-  {\n-    setEnabled (true);\n+    setEnabled(true);\n   }\n \n   public native void setEnabled(boolean b);\n-\n   public native void setLabel(String label);\n \n+  /**\n+   * Callback setup through connectSignals().\n+   */\n   protected void postMenuActionEvent ()\n   {\n     postActionEvent (((MenuItem)awtWidget).getActionCommand (), 0);"}, {"sha": "1d581c1a15c085989e796eda46aa8a5304186b96", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuPeer.java", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkMenuPeer.java -- Implements MenuPeer with GTK+\n-   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -49,10 +49,28 @@\n public class GtkMenuPeer extends GtkMenuItemPeer\n   implements MenuPeer\n {\n-  native void create (String label);\n-  native void addItem (MenuItemPeer item, int key, boolean shiftModifier);\n+  /**\n+   * Creates the associated gtk+ widget and stores it in the nsa table\n+   * for this peer. Called by the create() method with the label name\n+   * of the associated MenuItem. Overridden to greate a Menu widget.\n+   */\n+  protected native void create (String label);\n+\n+  private native void addItem(MenuItemPeer item, int key,\n+\t\t\t      boolean shiftModifier);\n+\n+  /** XXX - Document this and the override in GtkPopupMenuPeer. */\n   native void setupAccelGroup (GtkGenericPeer container);\n-  native void addTearOff ();\n+\n+  private native void addTearOff ();\n+\n+  /**\n+   * Overridden to not connect any signals.\n+   */\n+  protected void connectSignals()\n+  {\n+    // No signals to connect.\n+  }\n \n   public GtkMenuPeer (Menu menu)\n   {\n@@ -63,11 +81,11 @@ public GtkMenuPeer (Menu menu)\n \n     MenuContainer parent = menu.getParent ();\n     if (parent instanceof Menu)\n-      setupAccelGroup ((GtkGenericPeer)((Menu)parent).getPeer ());\n+      setupAccelGroup ((GtkMenuPeer)((Menu)parent).getPeer ());\n     else if (parent instanceof Component)\n-      setupAccelGroup ((GtkGenericPeer)((Component)parent).getPeer ());\n+      setupAccelGroup ((GtkComponentPeer)((Component)parent).getPeer ());\n     else\n-      setupAccelGroup (null);\n+      setupAccelGroup (null); // XXX, should we warn about unknown parent?\n   }\n \n   public void addItem (MenuItem item)"}, {"sha": "88bb715694dd656df676cdb97b134f611fcb3bf6", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkPanelPeer.java", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPanelPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -39,8 +39,11 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.AWTEvent;\n+import java.awt.Graphics;\n import java.awt.Panel;\n+import java.awt.event.ComponentEvent;\n import java.awt.event.MouseEvent;\n+import java.awt.event.PaintEvent;\n import java.awt.peer.PanelPeer;\n \n public class GtkPanelPeer extends GtkContainerPeer\n@@ -53,17 +56,39 @@ public GtkPanelPeer (Panel p)\n     super (p);\n   }\n \n-  public void handleEvent (AWTEvent event)\n+  public void handleEvent(AWTEvent event)\n   {\n     int id = event.getID();\n-\n     switch (id)\n       {\n       case MouseEvent.MOUSE_PRESSED:\n-        awtComponent.requestFocusInWindow ();\n+        awtComponent.requestFocusInWindow();\n         break;\n+      case PaintEvent.UPDATE:\n+      case PaintEvent.PAINT:\n+      {\n+        try\n+          {\n+            Graphics g = getGraphics();\n+            if (! awtComponent.isShowing() || awtComponent.getWidth() < 1\n+                || awtComponent.getHeight() < 1 || g == null)\n+              return;\n+\n+            g.setClip(((PaintEvent) event).getUpdateRect());\n+\n+            // Do not want to clear anything before painting.);\n+            awtComponent.paint(g);\n+\n+            g.dispose();\n+            return;\n+          }\n+        catch (InternalError e)\n+          {\n+            System.err.println(e);\n+          }\n+      }\n       }\n-    super.handleEvent (event);\n+    super.handleEvent(event);\n   }\n \n   native void connectSignals ();"}, {"sha": "525a910bc1bcc1d5401ea3836cdb1cecb6f3ae00", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkPopupMenuPeer.java", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPopupMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPopupMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkPopupMenuPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkPopupMenuPeer.java -- Implements PopupMenuPeer with GTK+\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -55,11 +55,6 @@ public GtkPopupMenuPeer (PopupMenu menu)\n \n   native void setupAccelGroup (GtkGenericPeer container);\n \n-  void setParent (MenuItem item)\n-  {\n-    // we don't need to \"add\" ourselves to our parent\n-  }\n-\n   native void show (int x, int y, long time);\n   public void show (Component origin, int x, int y)\n   {"}, {"sha": "9b31a7390e0134390faa91d38482264fae1933ce", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkScrollbarPeer.java", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkScrollbarPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* GtkScrollbarPeer.java -- Implements ScrollbarPeer with GTK+\n-   Copyright (C) 1998, 1999, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,6 +39,7 @@\n package gnu.java.awt.peer.gtk;\n \n import java.awt.Adjustable;\n+import java.awt.EventQueue;\n import java.awt.Scrollbar;\n import java.awt.event.AdjustmentEvent;\n import java.awt.peer.ScrollbarPeer;\n@@ -69,12 +70,25 @@ public GtkScrollbarPeer (Scrollbar s)\n \n   public native void setLineIncrement(int amount);\n   public native void setPageIncrement(int amount);\n-  public native void setValues(int value, int visible, int min, int max);\n \n+  public void setValues(int value, int visible, int min, int max)\n+  {\n+    Scrollbar sb = (Scrollbar) awtComponent;\n+    if (!sb.getValueIsAdjusting())\n+      setBarValues(value, visible, min, max);\n+  }\n+\n+  private native void setBarValues(int value, int visible, int min, int max);\n+\n+  /**\n+   * Called from the native site when the scrollbar changed.\n+   * Posts a \"user generated\" AdjustmentEvent to the queue.\n+   */\n   protected void postAdjustmentEvent (int type, int value)\n   {\n-    q().postEvent (new AdjustmentEvent ((Adjustable)awtComponent, \n+    Scrollbar bar = (Scrollbar) awtComponent;\n+    q().postEvent(new AdjustmentEvent(bar, \n \t\t\t\t      AdjustmentEvent.ADJUSTMENT_VALUE_CHANGED,\n-\t\t\t\t      type, value));\n+\t\t\t\t      type, value, true));\n   }\n }"}, {"sha": "5d9be1aec63388a28fe0162cd67fe272c2b37e10", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkTextAreaPeer.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -55,7 +55,11 @@ public class GtkTextAreaPeer extends GtkComponentPeer\n \n   native void create (int width, int height, int scrollbarVisibility);\n \n-  native void gtkWidgetModifyFont (String name, int style, int size);\n+  /**\n+   * Overridden to set Font for text widget inside scrolled window.\n+   */\n+  protected native void gtkWidgetModifyFont(String name, int style, int size);\n+\n   native void gtkWidgetRequestFocus ();\n \n   public native void connectSignals ();"}, {"sha": "763304864e0e83b4c4a025d550867cf49cb73e15", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkTextFieldPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -112,8 +112,6 @@ void create ()\n \n   native int gtkEntryGetBorderWidth ();\n \n-  native void gtkWidgetModifyFont (String name, int style, int size);\n-\n   public GtkTextFieldPeer (TextField tf)\n   {\n     super (tf);"}, {"sha": "70e25a31957934be5b03d94f6477898a597d447e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 63, "deletions": 107, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,6 @@\n /* GtkToolkit.java -- Implements an AWT Toolkit using GTK for peers\n-   Copyright (C) 1998, 1999, 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2003, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -159,137 +160,93 @@ public int checkImage (Image image, int width, int height,\n   }\n \n   /** \n-   * A helper class to return to clients in cases where a BufferedImage is\n-   * desired but its construction fails.\n+   * Helper to return either a Image -- the argument -- or a\n+   * GtkImage with the errorLoading flag set if the argument is null.\n    */\n-  private class GtkErrorImage extends Image\n-  {\n-    public GtkErrorImage()\n-    {\n-    }\n-\n-    public int getWidth(ImageObserver observer)\n-    {\n-      return -1;\n-    }\n-\n-    public int getHeight(ImageObserver observer)\n-    {\n-      return -1;\n-    }\n-\n-    public ImageProducer getSource()\n-    {\n-\n-      return new ImageProducer() \n-        {          \n-          HashSet consumers = new HashSet();          \n-          public void addConsumer(ImageConsumer ic)\n-          {\n-            consumers.add(ic);\n-          }\n-\n-          public boolean isConsumer(ImageConsumer ic)\n-          {\n-            return consumers.contains(ic);\n-          }\n-\n-          public void removeConsumer(ImageConsumer ic)\n-          {\n-            consumers.remove(ic);\n-          }\n-\n-          public void startProduction(ImageConsumer ic)\n-          {\n-            consumers.add(ic);\n-            Iterator i = consumers.iterator();\n-            while(i.hasNext())\n-              {\n-                ImageConsumer c = (ImageConsumer) i.next();\n-                c.imageComplete(ImageConsumer.IMAGEERROR);\n-              }\n-          }\n-          public void requestTopDownLeftRightResend(ImageConsumer ic)\n-          {\n-            startProduction(ic);\n-          }        \n-        };\n-    }\n-\n-    public Graphics getGraphics() \n-    { \n-      return null; \n-    }\n-\n-    public Object getProperty(String name, ImageObserver observer)\n-    {\n-      return null;\n-    }\n-    public Image getScaledInstance(int width, int height, int flags)\n-    {\n-      return new GtkErrorImage();\n-    }\n-\n-    public void flush() \n-    {\n-    }\n-  }\n-\n-\n-  /** \n-   * Helper to return either a BufferedImage -- the argument -- or a\n-   * GtkErrorImage if the argument is null.\n-   */\n-\n-  private Image bufferedImageOrError(BufferedImage b)\n+  private Image imageOrError(Image b)\n   {\n     if (b == null) \n-      return new GtkErrorImage();\n+      return GtkImage.getErrorImage();\n     else\n       return b;\n   }\n \n-\n   public Image createImage (String filename)\n   {\n     if (filename.length() == 0)\n       return new GtkImage ();\n-\n-    if (useGraphics2D())\n-      return bufferedImageOrError(GdkPixbufDecoder.createBufferedImage (filename));\n-    else\n-      return new GtkImage (filename);\n+    \n+    Image image;\n+    try\n+      {\n+\tif (useGraphics2D())\n+\t  image = GdkPixbufDecoder.createBufferedImage(filename);\n+\telse\n+\t  image = new GtkImage(filename);\n+      }\n+    catch (IllegalArgumentException iae)\n+      {\n+\timage = null;\n+      }\n+    return imageOrError(image);\n   }\n \n   public Image createImage (URL url)\n   {\n-    if (useGraphics2D())\n-      return bufferedImageOrError(GdkPixbufDecoder.createBufferedImage (url));\n-    else\n-      return new GtkImage (url);\n+    Image image;\n+    try\n+      {\n+\tif (useGraphics2D())\n+\t  image = GdkPixbufDecoder.createBufferedImage(url);\n+\telse\n+\t  image = new GtkImage(url);\n+      }\n+    catch (IllegalArgumentException iae)\n+      {\n+\timage = null;\n+      }\n+    return imageOrError(image);\n   }\n \n   public Image createImage (ImageProducer producer) \n   {\n-    if (useGraphics2D())\n-      return bufferedImageOrError(GdkPixbufDecoder.createBufferedImage (producer));\n-    else\n-      return new GtkImage (producer);\n+    Image image;\n+    try\n+      {\n+\tif (useGraphics2D())\n+\t  image = GdkPixbufDecoder.createBufferedImage(producer);\n+\telse\n+\t  image = new GtkImage(producer);\n+      }\n+    catch (IllegalArgumentException iae)\n+      {\n+\timage = null;\n+      }\n+    return imageOrError(image);\n   }\n \n   public Image createImage (byte[] imagedata, int imageoffset,\n \t\t\t    int imagelength)\n   {\n-    if (useGraphics2D())\n-      return bufferedImageOrError(GdkPixbufDecoder.createBufferedImage (imagedata,\n-                                                   imageoffset, \n-                                                                        imagelength));\n-    else\n+    Image image;\n+    try\n+      {\n+\tif (useGraphics2D())\n+\t  image = GdkPixbufDecoder.createBufferedImage(imagedata,\n+\t\t\t\t\t\t       imageoffset, \n+\t\t\t\t\t\t       imagelength);\n+\telse\n+\t  {\n+\t    byte[] datacopy = new byte[imagelength];\n+\t    System.arraycopy(imagedata, imageoffset, datacopy, 0, imagelength);\n+\t    return new GtkImage(datacopy);\n+\t  }\n+      }\n+    catch (IllegalArgumentException iae)\n       {\n-        byte[] datacopy = new byte[imagelength];\n-        System.arraycopy (imagedata, imageoffset, datacopy, 0, imagelength);\n-        return new GtkImage (datacopy);\n+\timage = null;\n       }\n+    return imageOrError(image);\n   }\n   \n   /**\n@@ -608,7 +565,6 @@ protected EventQueue getSystemEventQueueImpl()\n         if (q == null)\n           {\n             q = new EventQueue();\n-            GtkGenericPeer.enableQueue (q);\n           }\n       }    \n     return q;"}, {"sha": "6cc1390ea39eb80d2a51a1497b55aa8f1c5c446f", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 48, "deletions": 6, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -38,9 +38,12 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import java.awt.AWTEvent;\n import java.awt.Component;\n import java.awt.Frame;\n+import java.awt.Graphics;\n import java.awt.Window;\n+import java.awt.event.PaintEvent;\n import java.awt.event.WindowEvent;\n import java.awt.peer.WindowPeer;\n \n@@ -123,7 +126,23 @@ public GtkWindowPeer (Window window)\n \n   native void nativeSetBounds (int x, int y, int width, int height);\n   native void nativeSetBoundsUnlocked (int x, int y, int width, int height);\n+  native void nativeSetLocation (int x, int y);\n+  native void nativeSetLocationUnlocked (int x, int y);\n \n+  public void setLocation (int x, int y)\n+  {\n+    // prevent window_configure_cb -> awtComponent.setSize ->\n+    // peer.setBounds -> nativeSetBounds self-deadlock on GDK lock.\n+    if (Thread.currentThread() == GtkToolkit.mainThread)\n+      return;\n+    nativeSetLocation (x, y);\n+  }\n+\n+  public void setLocationUnlocked (int x, int y)\n+  {\n+    nativeSetLocationUnlocked (x, y);\n+  }\n+  \n   public void setBounds (int x, int y, int width, int height)\n   {\n     // prevent window_configure_cb -> awtComponent.setSize ->\n@@ -192,12 +211,7 @@ protected void postConfigureEvent (int x, int y, int width, int height)\n \n   public void show ()\n   {\n-    // Prevent the window manager from automatically placing this\n-    // window when it is shown.\n-    setBounds (awtComponent.getX(),\n-\t       awtComponent.getY(),\n-\t       awtComponent.getWidth(),\n-\t       awtComponent.getHeight());\n+    setLocation(awtComponent.getX(), awtComponent.getY());\n     setVisible (true);\n   }\n \n@@ -235,4 +249,32 @@ public boolean requestWindowFocus()\n     // TODO Auto-generated method stub\n     return false;\n   }\n+  \n+  public void handleEvent(AWTEvent event)\n+  {\n+    int id = event.getID();\n+    if (id == PaintEvent.UPDATE || id == PaintEvent.PAINT)\n+      {\n+        try\n+          {\n+            Graphics g = getGraphics();\n+            if (! awtComponent.isShowing() || awtComponent.getWidth() < 1\n+                || awtComponent.getHeight() < 1 || g == null)\n+              return;\n+\n+            g.setClip(((PaintEvent) event).getUpdateRect());\n+\n+            // Do not want to clear anything before painting.\n+            awtComponent.paint(g);\n+\n+            g.dispose();\n+            return;\n+          }\n+        catch (InternalError e)\n+          {\n+            System.err.println(e);\n+          }\n+      }\n+    super.handleEvent(event);\n+  }\n }"}, {"sha": "2357fcbfb0d195de927550a65f05b632e22b925a", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingButtonPeer.java", "status": "added", "additions": 224, "deletions": 0, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingButtonPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,224 @@\n+/* SwingButtonPeer.java -- A Swing based peer for AWT buttons\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Button;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.peer.ButtonPeer;\n+\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+\n+/**\n+ * A Swing based peer for the AWT button.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingButtonPeer\n+  extends SwingComponentPeer\n+  implements ButtonPeer\n+{\n+\n+  /**\n+   * A specialized Swing button to be used as AWT button.\n+   *\n+   * @author Roman Kennke (kennke@aicas.com)\n+   */\n+  class SwingButton\n+    extends JButton\n+    implements SwingComponent\n+  {\n+    /**\n+     * Overridden so that this method returns the correct value even without a\n+     * peer.\n+     *\n+     * @return the screen location of the button\n+     */\n+    public Point getLocationOnScreen()\n+    {\n+      return SwingButtonPeer.this.getLocationOnScreen();\n+    }\n+\n+    /**\n+     * Overridden so that the isShowing method returns the correct value for the\n+     * swing button, even if it has no peer on its own.\n+     *\n+     * @return <code>true</code> if the button is currently showing,\n+     *         <code>false</code> otherwise\n+     */\n+    public boolean isShowing()\n+    {\n+      boolean retVal = false;\n+      if (SwingButtonPeer.this.awtComponent != null)\n+        retVal = SwingButtonPeer.this.awtComponent.isShowing();\n+      return retVal;\n+    }\n+\n+    /**\n+     * Overridden, so that the Swing button can create an Image without its\n+     * own peer.\n+     *\n+     * @param w the width of the image\n+     * @param h the height of the image\n+     *\n+     * @return an image\n+     */\n+    public Image createImage(int w, int h)\n+    {\n+      return SwingButtonPeer.this.createImage(w, h);\n+    }\n+\n+    /**\n+     * Overridden, so that the Swing button can create a Graphics without its\n+     * own peer.\n+     *\n+     * @return a graphics instance for the button\n+     */\n+    public Graphics getGraphics()\n+    {\n+      return SwingButtonPeer.this.getGraphics();\n+    }\n+\n+    /**\n+     * Returns this button.\n+     *\n+     * @return this button\n+     */\n+    public JComponent getJComponent()\n+    {\n+      return this;\n+    }\n+\n+    /**\n+     * Handles mouse events by forwarding it to\n+     * <code>processMouseEvent()</code> after having retargetted it to this\n+     * button.\n+     *\n+     * @param ev the mouse event\n+     */\n+    public void handleMouseEvent(MouseEvent ev)\n+    {\n+      ev.setSource(this);\n+      processMouseEvent(ev);\n+    }\n+\n+    /**\n+     * Handles mouse motion events by forwarding it to\n+     * <code>processMouseMotionEvent()</code> after having retargetted it to\n+     * this button.\n+     *\n+     * @param ev the mouse motion event\n+     */\n+    public void handleMouseMotionEvent(MouseEvent ev)\n+    {\n+      ev.setSource(this);\n+      processMouseMotionEvent(ev);\n+    }\n+\n+    /**\n+     * Handles key events by forwarding it to\n+     * <code>processKeyEvent()</code> after having retargetted it to this\n+     * button.\n+     *\n+     * @param ev the mouse event\n+     */\n+    public void handleKeyEvent(KeyEvent ev)\n+    {\n+      ev.setSource(this);\n+      processKeyEvent(ev);\n+    }\n+  }\n+\n+  /**\n+   * Listens for ActionEvents on the Swing button and triggers corresponding\n+   * ActionEvents on the AWT button.\n+   *\n+   * @author Roman Kennke (kennke@aicas.com)\n+   */\n+  class SwingButtonListener implements ActionListener\n+  {\n+\n+    /**\n+     * Receives notification when an action was performend on the button.\n+     *\n+     * @param event the action event\n+     */\n+    public void actionPerformed(ActionEvent event)\n+    {\n+      Button b = (Button) SwingButtonPeer.this.awtComponent;\n+      ActionListener[] l = b.getActionListeners();\n+      if (l.length == 0)\n+        return;\n+      ActionEvent ev = new ActionEvent(b, ActionEvent.ACTION_PERFORMED,\n+                                       b.getActionCommand());\n+      for (int i = 0; i < l.length; ++i)\n+        l[i].actionPerformed(ev);\n+    }\n+    \n+  }\n+\n+  /**\n+   * Constructs a new SwingButtonPeer.\n+   *\n+   * @param theButton the AWT button for this peer\n+   */\n+  public SwingButtonPeer(Button theButton)\n+  {\n+    SwingButton button = new SwingButton();\n+    button.setText(theButton.getLabel());\n+    button.addActionListener(new SwingButtonListener());\n+    init(theButton, button);\n+  }\n+\n+  /**\n+   * Sets the label of the button. This call is forwarded to the setText method\n+   * of the managed Swing button.\n+   *\n+   * @param label the label to set\n+   */\n+  public void setLabel(String label)\n+  {\n+    ((SwingButton) swingComponent).setText(label);\n+  }\n+}"}, {"sha": "abef9ef12d108bb9795cf3e4aeb9fbaae3550728", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingCanvasPeer.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingCanvasPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingCanvasPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingCanvasPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,64 @@\n+/* SwingCanvasPeer.java -- A canvas peer based on Swing\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Canvas;\n+import java.awt.peer.CanvasPeer;\n+import java.awt.peer.LightweightPeer;\n+\n+/**\n+ * A CanvasPeer to be used together with the Swing peers.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingCanvasPeer\n+  extends SwingComponentPeer\n+  implements LightweightPeer, CanvasPeer\n+{\n+\n+  /**\n+   * Creates a new <code>SwingCanvasPeer</code> for the specified Canvas.\n+   *\n+   * @param canvas the canvas.\n+   */\n+  public SwingCanvasPeer(Canvas canvas)\n+  {\n+    init(canvas, null);\n+  }\n+}"}, {"sha": "04ca7294f78d8fd4f057a77be4155b9085b10617", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingComponent.java", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponent.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,89 @@\n+/* SwingComponent.java -- An interface that defines a Swing component for peers\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+\n+import javax.swing.JComponent;\n+\n+/**\n+ * Defines some additional methods that the Swing components must implement\n+ * in order to work with the Swing peers. This is usually achieved by\n+ * subclassing a Swing component and forwarding the method calls to some\n+ * protected JComponent method.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public interface SwingComponent\n+{\n+\n+  /**\n+   * Returns the actual swing compenent.\n+   *\n+   * @return the actual swing compenent\n+   */\n+  JComponent getJComponent();\n+\n+  /**\n+   * Handles a mouse event. This is usually forwarded to\n+   * {@link Component#processMouseMotionEvent(MouseEvent)} of the swing\n+   * component.\n+   *\n+   * @param ev the mouse event\n+   */\n+  void handleMouseEvent(MouseEvent ev);\n+\n+  /**\n+   * Handles a mouse motion event. This is usually forwarded to\n+   * {@link Component#processMouseEvent(MouseEvent)} of the swing\n+   * component.\n+   *\n+   * @param ev the mouse motion event\n+   */\n+  void handleMouseMotionEvent(MouseEvent ev);\n+\n+  /**\n+   * Handles a key event. This is usually forwarded to\n+   * {@link Component#processKeyEvent(KeyEvent)} of the swing\n+   * component.\n+   *\n+   * @param ev the key event\n+   */\n+  void handleKeyEvent(KeyEvent ev);\n+}"}, {"sha": "5e34bc9dd217396cd3c0a723aeb871f60d3614a7", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingComponentPeer.java", "status": "added", "additions": 994, "deletions": 0, "changes": 994, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingComponentPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,994 @@\n+/* SwingComponentPeer.java -- An abstract base class for Swing based peers\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.AWTEvent;\n+import java.awt.AWTException;\n+import java.awt.BufferCapabilities;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Cursor;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Toolkit;\n+import java.awt.BufferCapabilities.FlipContents;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.PaintEvent;\n+import java.awt.image.ColorModel;\n+import java.awt.image.ImageObserver;\n+import java.awt.image.ImageProducer;\n+import java.awt.image.VolatileImage;\n+import java.awt.peer.ComponentPeer;\n+import java.awt.peer.ContainerPeer;\n+\n+/**\n+ * The base class for Swing based component peers. This provides the basic\n+ * functionality needed for Swing based component peers. Many methods are\n+ * implemented to forward to the Swing component. Others however forward\n+ * to the component's parent and expect the toplevel component peer to provide\n+ * a real implementation of it. These are for example the key methods\n+ * {@link #getGraphics()} and {@link #createImage(int, int)}, as well as\n+ * {@link #getLocationOnScreen()}.\n+ *\n+ * This class also provides the necesary hooks into the Swing painting and\n+ * event handling system. In order to achieve this, it traps paint, mouse and\n+ * key events in {@link #handleEvent(AWTEvent)} and calls some special methods\n+ * ({@link #peerPaint(Graphics)}, {@link #handleKeyEvent(KeyEvent)},\n+ * {@link #handleMouseEvent(MouseEvent)} and\n+ * {@link #handleMouseMotionEvent(MouseEvent)}) that call the corresponding\n+ * Swing methods.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingComponentPeer\n+  implements ComponentPeer\n+{\n+\n+  /**\n+   * The AWT component for this peer.\n+   */\n+  protected Component awtComponent;\n+\n+  /**\n+   * The Swing component for this peer.\n+   */\n+  protected SwingComponent swingComponent;\n+\n+  /**\n+   * Creates a SwingComponentPeer instance. Subclasses are expected to call\n+   * this constructor and thereafter call {@link #init(Component, JComponent)}\n+   * in order to setup the AWT and Swing components properly.\n+   */\n+  protected SwingComponentPeer()\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * Initializes the AWT and Swing component for this peer. It is expected that\n+   * subclasses call this from within their constructor.\n+   *\n+   * @param awtComp the AWT component for this peer\n+   * @param swingComp the Swing component for this peer\n+   */\n+  protected void init(Component awtComp, SwingComponent swingComp)\n+  {\n+    awtComponent = awtComp;\n+    swingComponent = swingComp;\n+  }\n+\n+  /**\n+   * Returns the construction status of the specified image. This is called\n+   * by {@link Component#checkImage(Image, int, int, ImageObserver)}.\n+   *\n+   * @param img the image\n+   * @param width the width of the image\n+   * @param height the height of the image\n+   * @param ob the image observer to be notified of updates of the status\n+   *\n+   * @return a bitwise ORed set of ImageObserver flags\n+   */\n+  public int checkImage(Image img, int width, int height, ImageObserver ob)\n+  {\n+    return Toolkit.getDefaultToolkit().checkImage(img, width, height, ob);\n+  }\n+\n+  /**\n+   * Creates an image by starting the specified image producer. This is called\n+   * by {@link Component#createImage(ImageProducer)}.\n+   *\n+   * @param prod the image producer to be used to create the image\n+   *\n+   * @return the created image\n+   */\n+  public Image createImage(ImageProducer prod)\n+  {\n+    Image image = Toolkit.getDefaultToolkit().createImage(prod);\n+\treturn image;\n+  }\n+\n+  /**\n+   * Creates an empty image with the specified <code>width</code> and\n+   * <code>height</code>.\n+   *\n+   * This is implemented to let the parent component create the image. This\n+   * eventually goes up to the top-level component peer, which is then expected\n+   * to deliver the image.\n+   *\n+   * @param width the width of the image to be created\n+   * @param height the height of the image to be created\n+   *\n+   * @return the created image\n+   */\n+  public Image createImage(int width, int height)\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    return parentPeer.createImage(width, height);\n+  }\n+\n+  /**\n+   * Disables the component. This is called by {@link Component#disable()}.\n+   */\n+  public void disable()\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setEnabled(false);\n+  }\n+\n+  /**\n+   * Disposes the component peer. This should release all resources held by the\n+   * peer. This is called when the component is no longer in use.\n+   */\n+  public void dispose()\n+  {\n+    awtComponent = null;\n+    swingComponent = null;\n+  }\n+\n+  /**\n+   * Enables the component. This is called by {@link Component#enable()}.\n+   */\n+  public void enable()\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setEnabled(true);\n+  }\n+\n+  /**\n+   * Returns the color model of the component. This is currently not used.\n+   *\n+   * @return the color model of the component\n+   */\n+  public ColorModel getColorModel()\n+  {\n+    // FIXME: When this peer method will be used, we need to provide an\n+    // implementation of this, probably forwarding to the toplevel peer, like\n+    // in the other methods.\n+    return null;\n+  }\n+\n+  /**\n+   * Returns the font metrics for the specified font. This is called by\n+   * {@link Component#getFontMetrics(Font)}.\n+   *\n+   * This is implemented to query the font metrics from the parent component.\n+   * This will eventually call the top-level component peer, which is then\n+   * expected to deliver a font metrics object.\n+   *\n+   * @param f the font for which to query the font metrics\n+   *\n+   * @return the font metrics for the specified font\n+   */\n+  public FontMetrics getFontMetrics(Font f)\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    return parentPeer.getFontMetrics(f);\n+  }\n+\n+  /**\n+   * Returns a {@link Graphics} object suitable for drawing on this component.\n+   * This is called by {@link Component#getGraphics()}.\n+   *\n+   * This is implemented to query the graphics from the parent component and\n+   * adjust the clip and translation to match this component.\n+   * This will eventually call the top-level component peer, which is then\n+   * expected to deliver a graphics object.\n+   *\n+   * @return a graphics object suitable for drawing on this component\n+   */\n+  public Graphics getGraphics()\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    Graphics g = parentPeer.getGraphics();\n+    g.translate(awtComponent.getX(), awtComponent.getY());\n+    g.setClip(0, 0, awtComponent.getWidth(), awtComponent.getHeight());\n+    return g;\n+  }\n+\n+  /**\n+   * Returns the location of this component in screen coordinates. This is\n+   * called by {@link Component#getLocationOnScreen()}.\n+   *\n+   * This is implemented to query the parent component peer for its screen\n+   * location and adds the offset of this component to it. This will eventually\n+   * call the top-level component's peer, which is then expected to provide\n+   * it's screen location.\n+   *\n+   * @return the location of this component in screen coordinates\n+   */\n+  public Point getLocationOnScreen()\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    Point location = parentPeer.getLocationOnScreen();\n+    location.x += awtComponent.getX();\n+    location.y += awtComponent.getY();\n+    return location;\n+  }\n+\n+  /**\n+   * Returns the minimum size for the component. This is called by\n+   * {@link Component#getMinimumSize()}.\n+   *\n+   * This is implemented to return the Swing component's minimum size.\n+   *\n+   * @return the minimum size for the component\n+   */\n+  public Dimension getMinimumSize()\n+  {\n+    Dimension retVal;\n+    if (swingComponent != null)\n+      retVal = swingComponent.getJComponent().getMinimumSize();\n+    else\n+      retVal = new Dimension(0, 0);\n+    return retVal;\n+  }\n+\n+  /**\n+   * Returns the preferred size for the component. This is called by\n+   * {@link Component#getPreferredSize()}.\n+   *\n+   * This is implemented to return the Swing component's preferred size.\n+   *\n+   * @return the preferred size for the component\n+   */\n+  public Dimension getPreferredSize()\n+  {\n+    Dimension retVal;\n+    if (swingComponent != null)\n+      retVal = swingComponent.getJComponent().getPreferredSize();\n+    else\n+      retVal = new Dimension(0, 0);\n+    return retVal;\n+  }\n+\n+  /**\n+   * Returns the toolkit that created this peer.\n+   *\n+   * @return the toolkit that created this peer\n+   */\n+  public Toolkit getToolkit()\n+  {\n+    return Toolkit.getDefaultToolkit();\n+  }\n+\n+  /**\n+   * Handles the given event. This is called from\n+   * {@link Component#dispatchEvent(AWTEvent)} to give the peer a chance to \n+   * react to events for the component.\n+   *\n+   * @param e the event\n+   */\n+  public void handleEvent(AWTEvent e)\n+  {\n+    switch (e.getID())\n+    {\n+      case PaintEvent.UPDATE:\n+      case PaintEvent.PAINT:\n+        Graphics g = getGraphics();\n+        Rectangle clip = ((PaintEvent)e).getUpdateRect();\n+        g.clipRect(clip.x, clip.y, clip.width, clip.height);\n+        //if (this instanceof LightweightPeer)\n+        //  {\n+            if (e.getID() == PaintEvent.UPDATE)\n+              awtComponent.update(g);\n+            else\n+              awtComponent.paint(g);\n+        //  }\n+        // We paint the 'heavyweights' at last, so that they appear on top of\n+        // everything else.\n+        peerPaint(g);\n+\n+        g.dispose();\n+        break;\n+      case MouseEvent.MOUSE_PRESSED:\n+      case MouseEvent.MOUSE_RELEASED:\n+      case MouseEvent.MOUSE_CLICKED:\n+      case MouseEvent.MOUSE_ENTERED:\n+      case MouseEvent.MOUSE_EXITED:\n+        handleMouseEvent((MouseEvent) e);\n+        break;\n+      case MouseEvent.MOUSE_MOVED:\n+      case MouseEvent.MOUSE_DRAGGED:\n+        handleMouseMotionEvent((MouseEvent) e);\n+        break;\n+      case KeyEvent.KEY_PRESSED:\n+      case KeyEvent.KEY_RELEASED:\n+      case KeyEvent.KEY_TYPED:\n+        handleKeyEvent((KeyEvent) e);\n+        break;\n+      default:\n+        // Other event types are not handled here.\n+        break;\n+    }\n+  }\n+\n+  /**\n+   * Makes the component invisible. This is called from\n+   * {@link Component#hide()}.\n+   *\n+   * This is implemented to call setVisible(false) on the Swing component.\n+   */\n+  public void hide()\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setVisible(false);\n+  }\n+\n+  /**\n+   * Returns <code>true</code> if the component can receive keyboard input\n+   * focus. This is called from {@link Component#isFocusTraversable()}.\n+   * \n+   * This is implemented to return isFocusable() from the Swing component.\n+   *\n+   * @specnote Part of the earlier 1.1 API, replaced by isFocusable().\n+   */\n+  public boolean isFocusTraversable()\n+  {\n+    return swingComponent != null ?\n+             swingComponent.getJComponent().isFocusable() : false;\n+  }\n+\n+  /**\n+   * Returns <code>true</code> if the component can receive keyboard input\n+   * focus. This is called from {@link Component#isFocusable()}.\n+   *\n+   * This is implemented to return isFocusable() from the Swing component.\n+   */\n+  public boolean isFocusable()\n+  {\n+    return swingComponent != null ?\n+             swingComponent.getJComponent().isFocusable() : false;\n+  }\n+\n+  /**\n+   * Returns the minimum size for the component. This is called by\n+   * {@link Component#minimumSize()}.\n+   *\n+   * This is implemented to return the Swing component's minimum size.\n+   *\n+   * @return the minimum size for the component\n+   */\n+  public Dimension minimumSize()\n+  {\n+    Dimension retVal;\n+    if (swingComponent != null)\n+      retVal = swingComponent.getJComponent().getMinimumSize();\n+    else\n+      retVal = new Dimension(0, 0);\n+    return retVal;\n+  }\n+\n+  /**\n+   * Returns the preferred size for the component. This is called by\n+   * {@link Component#getPreferredSize()}.\n+   *\n+   * This is implemented to return the Swing component's preferred size.\n+   *\n+   * @return the preferred size for the component\n+   */\n+  public Dimension preferredSize()\n+  {\n+    Dimension retVal;\n+    if (swingComponent != null)\n+      retVal = swingComponent.getJComponent().getPreferredSize();\n+    else\n+      retVal = new Dimension(0, 0);\n+    return retVal;\n+  }\n+\n+  /**\n+   * Prepares an image for rendering on this component. This is called by\n+   * {@link Component#prepareImage(Image, int, int, ImageObserver)}.\n+   *\n+   * @param img the image to prepare\n+   * @param width the desired width of the rendered image\n+   * @param height the desired height of the rendered image\n+   * @param ob the image observer to be notified of updates in the preparation\n+   *        process\n+   *\n+   * @return <code>true</code> if the image has been fully prepared,\n+   *         <code>false</code> otherwise (in which case the image observer\n+   *         receives updates)\n+   */\n+  public void paint(Graphics graphics)\n+  {\n+    // FIXME: I don't know what this method is supposed to do.\n+  }\n+\n+  /**\n+   * Prepares an image for rendering on this component. This is called by\n+   * {@link Component#prepareImage(Image, int, int, ImageObserver)}.\n+   *\n+   * @param img the image to prepare\n+   * @param width the desired width of the rendered image\n+   * @param height the desired height of the rendered image\n+   * @param ob the image observer to be notified of updates in the preparation\n+   *        process\n+   *\n+   * @return <code>true</code> if the image has been fully prepared,\n+   *         <code>false</code> otherwise (in which case the image observer\n+   *         receives updates)\n+   */\n+  public boolean prepareImage(Image img, int width, int height, ImageObserver ob)\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    return parentPeer.prepareImage(img, width, height, ob);\n+  }\n+\n+  public void print(Graphics graphics)\n+  {\n+    // FIXME: I don't know what this method is supposed to do.\n+  }\n+\n+  /**\n+   * Repaints the specified rectangle of this component. This is called from\n+   * {@link Component#repaint(long, int, int, int, int)}.\n+   *\n+   * This is implemented to call repaint() on the Swing component.\n+   *\n+   * @param tm number of milliseconds to wait with repainting\n+   * @param x the X coordinate of the upper left corner of the damaged rectangle\n+   * @param y the Y coordinate of the upper left corner of the damaged rectangle\n+   * @param width the width of the damaged rectangle\n+   * @param height the height of the damaged rectangle\n+   */\n+  public void repaint(long tm, int x, int y, int width, int height)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().repaint(tm, x, y, width, height);\n+    else\n+      {\n+        PaintEvent ev = new PaintEvent(awtComponent, PaintEvent.UPDATE,\n+                                       new Rectangle(x, y, width, height));\n+        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(ev);\n+      }\n+  }\n+\n+  /**\n+   * Requests that this component receives the focus. This is called from\n+   * {@link Component#requestFocus()}.\n+   * \n+   * This calls requestFocus() on the Swing component.\n+   *\n+   * @specnote Part of the earlier 1.1 API, apparently replaced by argument \n+   *           form of the same method.\n+   */\n+  public void requestFocus()\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().requestFocus();\n+  }\n+\n+  /**\n+   * Requests that this component receives the focus. This is called from\n+   * {@link Component#requestFocus()}.\n+   *\n+   * This calls requestFocus() on the Swing component.\n+   *\n+   * @param source TODO\n+   * @param bool1 TODO\n+   * @param bool2 TODO\n+   * @param x TODO\n+   *\n+   * @return TODO\n+   */\n+  public boolean requestFocus(Component source, boolean bool1, boolean bool2, long x)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().requestFocus();\n+    return swingComponent != null;\n+  }\n+\n+  /**\n+   * Notifies the peer that the bounds of this component have changed. This\n+   * is called by {@link Component#reshape(int, int, int, int)}.\n+   *\n+   * This is implemented to call setBounds() on the Swing component.\n+   *\n+   * @param x the X coordinate of the upper left corner of the component\n+   * @param y the Y coordinate of the upper left corner of the component\n+   * @param width the width of the component\n+   * @param height the height of the component\n+   */\n+  public void reshape(int x, int y, int width, int height)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setBounds(x, y, width, height);\n+  }\n+\n+  /**\n+   * Sets the background color of the component. This is called by\n+   * {@link Component#setBackground(Color)}.\n+   *\n+   * This is implemented to call setBackground() on the Swing component.\n+   *\n+   * @param color the background color to set\n+   */\n+  public void setBackground(Color color)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setBackground(color);\n+  }\n+\n+  /**\n+   * Notifies the peer that the bounds of this component have changed. This\n+   * is called by {@link Component#setBounds(int, int, int, int)}.\n+   *\n+   * This is implemented to call setBounds() on the Swing component.\n+   *\n+   * @param x the X coordinate of the upper left corner of the component\n+   * @param y the Y coordinate of the upper left corner of the component\n+   * @param width the width of the component\n+   * @param height the height of the component\n+   */\n+  public void setBounds(int x, int y, int width, int height)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setBounds(x, y, width, height);\n+  }\n+\n+  /**\n+   * Sets the cursor of the component. This is called by\n+   * {@link Component#setCursor(Cursor)}.\n+   *\n+   * This is implemented to call setCursor() on the Swing component.\n+   *\n+   * @specnote Part of the earlier 1.1 API, apparently no longer needed.\n+   */\n+  public void setCursor(Cursor cursor)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setCursor(cursor);\n+  }\n+\n+  /**\n+   * Sets the enabled/disabled state of this component. This is called by\n+   * {@link Component#setEnabled(boolean)}.\n+   *\n+   * This is implemented to call setEnabled() on the Swing component.\n+   *\n+   * @param enabled <code>true</code> to enable the component,\n+   *        <code>false</code> to disable it\n+   */\n+  public void setEnabled(boolean enabled)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setEnabled(enabled);\n+  }\n+\n+  /**\n+   * Sets the font of the component. This is called by\n+   * {@link Component#setFont(Font)}.\n+   *\n+   * This is implemented to call setFont() on the Swing component.\n+   *\n+   * @param font the font to set\n+   */\n+  public void setFont(Font font)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setFont(font);\n+  }\n+\n+  /**\n+   * Sets the foreground color of the component. This is called by\n+   * {@link Component#setForeground(Color)}.\n+   *\n+   * This is implemented to call setForeground() on the Swing component.\n+   *\n+   * @param color the foreground color to set\n+   */\n+  public void setForeground(Color color)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setForeground(color);\n+  }\n+\n+  /**\n+   * Sets the visibility state of the component. This is called by\n+   * {@link Component#setVisible(boolean)}.\n+   *\n+   * This is implemented to call setVisible() on the Swing component.\n+   *\n+   * @param visible <code>true</code> to make the component visible,\n+   *        <code>false</code> to make it invisible\n+   */\n+  public void setVisible(boolean visible)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setVisible(visible);\n+  }\n+\n+  /**\n+   * Makes the component visible. This is called by {@link Component#show()}.\n+   *\n+   * This is implemented to call setVisible(true) on the Swing component.\n+   */\n+  public void show()\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setVisible(true);\n+  }\n+\n+  /** \n+   * Get the graphics configuration of the component. The color model\n+   * of the component can be derived from the configuration.\n+   *\n+   * This is implemented to return the GraphicsConfiguration of the parent\n+   * component. This will eventually call the toplevel component peer, which\n+   * is expected to provide a real implementation.\n+   *\n+   * @return the graphics configuration of the component\n+   */\n+  public GraphicsConfiguration getGraphicsConfiguration()\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    return parentPeer.getGraphicsConfiguration();\n+  }\n+\n+  /**\n+   * Part of an older API, no longer needed.\n+   */\n+  public void setEventMask(long mask)\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * Returns <code>true</code> if this component has been obscured,\n+   * <code>false</code> otherwise. This will only work if\n+   * {@link #canDetermineObscurity()} also returns <code>true</code>.\n+   *\n+   * This is not yet implemented.\n+   *\n+   * @return <code>true</code> if this component has been obscured,\n+   *         <code>false</code> otherwise.\n+   */\n+  public boolean isObscured()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Returns <code>true</code> if this component peer can determine if the\n+   * component has been obscured, <code>false</code> otherwise.\n+   *\n+   * This is not yet implemented.\n+   *\n+   * @return <code>true</code> if this component peer can determine if the\n+   *         component has been obscured, <code>false</code> otherwise\n+   */\n+  public boolean canDetermineObscurity()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Coalesces the specified paint event.\n+   *\n+   * @param e the paint event\n+   */\n+  public void coalescePaintEvent(PaintEvent e)\n+  {\n+    // Nothing to do here yet.\n+  }\n+\n+  /**\n+   * Updates the cursor. This is not yet implemented.\n+   */\n+  public void updateCursorImmediately()\n+  {\n+    // Nothing to do here yet.\n+  }\n+\n+  /**\n+   * Returns true, if this component can handle wheel scrolling,\n+   * <code>false</code> otherwise.\n+   *\n+   * This is not yet implemented and returns <code>false</code>. \n+   *\n+   * @return true, if this component can handle wheel scrolling,\n+   *         <code>false</code> otherwise\n+   */\n+  public boolean handlesWheelScrolling()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * A convenience method that creates a volatile image.  The volatile\n+   * image is created on the screen device on which this component is\n+   * displayed, in the device's current graphics configuration.\n+   *\n+   * This is implemented to let the parent component peer create an image.\n+   * This eventually ends up in the toplevel component peer, which is then\n+   * responsible for creating the real image.\n+   *\n+   * @param width width of the image\n+   * @param height height of the image\n+   *\n+   * @see VolatileImage\n+   *\n+   * @since 1.2\n+   */\n+  public VolatileImage createVolatileImage(int width, int height)\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    return parentPeer.createVolatileImage(width, height);\n+  }\n+\n+  /**\n+   * Create a number of image buffers that implement a buffering\n+   * strategy according to the given capabilities.\n+   *\n+   * This is implemented to forward to the parent component peer. Eventually\n+   * this ends up in the top level component peer, which is then responsible\n+   * for doing the real work.\n+   *\n+   * @param numBuffers the number of buffers\n+   * @param caps the buffering capabilities\n+   *\n+   * @throws AWTException if the specified buffering strategy is not\n+   * implemented\n+   *\n+   * @since 1.2\n+   */\n+  public void createBuffers(int numBuffers, BufferCapabilities caps) throws AWTException\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    parentPeer.createBuffers(numBuffers, caps);\n+  }\n+\n+  /**\n+   * Return the back buffer of this component.\n+   *\n+   * This is implemented to forward to the parent. Eventually this ends\n+   * up in the toplevel component, which is then responsible for providing\n+   * a back buffer.\n+   *\n+   * @return the back buffer of this component.\n+   *\n+   * @since 1.2\n+   */\n+  public Image getBackBuffer()\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    return parentPeer.getBackBuffer();\n+  }\n+\n+  /**\n+   * Perform a page flip, leaving the contents of the back buffer in\n+   * the specified state.\n+   *\n+   * This is implemented to forward to the parent. Eventually this ends\n+   * up in the toplevel component, which is then responsible for doing the real\n+   * work.\n+   *\n+   * @param contents the state in which to leave the back buffer\n+   *\n+   * @since 1.2\n+   */\n+  public void flip(FlipContents contents)\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    parentPeer.flip(contents);\n+  }\n+\n+  /**\n+   * Destroy the resources created by createBuffers.\n+   *\n+   * This is implemented to forward to the parent component peer. Eventually\n+   * this ends up in the top level component peer, which is then responsible\n+   * for doing the real work.\n+   *\n+   * @since 1.2\n+   */\n+  public void destroyBuffers()\n+  {\n+    Component parent = awtComponent.getParent();\n+    ComponentPeer parentPeer = parent.getPeer();\n+    parentPeer.destroyBuffers();\n+  }\n+\n+  /**\n+   * Get the bounds of this component peer.\n+   *\n+   * This is implemented to forward to the Swing component.\n+   *\n+   * @return component peer bounds\n+   * @since 1.5\n+   */\n+  public Rectangle getBounds()\n+  {\n+    Rectangle retVal;\n+    if (swingComponent != null)\n+      retVal = swingComponent.getJComponent().getBounds();\n+    else\n+      retVal = new Rectangle();\n+    return retVal;\n+  }\n+\n+  /**\n+   * Reparent this component under another container.\n+   * \n+   * @param parent\n+   * @since 1.5\n+   */\n+  public void reparent(ContainerPeer parent)\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * Set the bounds of this component peer.\n+   *\n+   * This is implemented to forward to the swing component.\n+   *\n+   * @param x the new x co-ordinate\n+   * @param y the new y co-ordinate\n+   * @param width the new width\n+   * @param height the new height\n+   * @param z the new stacking level\n+   * @since 1.5\n+   */\n+  public void setBounds(int x, int y, int width, int height, int z)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().setBounds(x, y, width, height);\n+    // FIXME: Somehow handle the Z order.\n+  }\n+\n+  /**\n+   * Check if this component supports being reparented.\n+   * \n+   * @return true if this component can be reparented,\n+   * false otherwise.\n+   * @since 1.5\n+   */\n+  public boolean isReparentSupported()\n+  {\n+    return true;\n+  }\n+\n+\n+  /**\n+   * Layout this component peer.\n+   *\n+   * @since 1.5\n+   */\n+  public void layout()\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().doLayout();\n+  }\n+\n+  /**\n+   * Triggers 'heavyweight' painting of the components. This usually calls\n+   * paint() on the Swing component.\n+   *\n+   * @param g the graphics context to use for painting\n+   */\n+  protected void peerPaint(Graphics g)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.getJComponent().paint(g);\n+  }\n+\n+  /**\n+   * Handles mouse events on the component. This is usually forwarded to the\n+   * SwingComponent's processMouseEvent() method.\n+   *\n+   * @param e the mouse event\n+   */\n+  protected void handleMouseEvent(MouseEvent e)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.handleMouseEvent(e);\n+  }\n+\n+  /**\n+   * Handles mouse motion events on the component. This is usually forwarded\n+   * to the SwingComponent's processMouseMotionEvent() method.\n+   *\n+   * @param e the mouse motion event\n+   */\n+  protected void handleMouseMotionEvent(MouseEvent e)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.handleMouseMotionEvent(e);\n+  }\n+\n+  /**\n+   * Handles key events on the component. This is usually forwarded to the\n+   * SwingComponent's processKeyEvent() method.\n+   *\n+   * @param e the key event\n+   */\n+  protected void handleKeyEvent(KeyEvent e)\n+  {\n+    if (swingComponent != null)\n+      swingComponent.handleKeyEvent(e);\n+  }\n+\n+  /**\n+   * Returns the AWT component for this peer.\n+   *\n+   * @return the AWT component for this peer\n+   */\n+  public Component getComponent()\n+  {\n+    return awtComponent;\n+  }\n+}"}, {"sha": "37bea751f8680e7bbcaa5e385b9afc76c4a1c962", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingContainerPeer.java", "status": "added", "additions": 241, "deletions": 0, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingContainerPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,241 @@\n+/* SwingContainerPeer.java -- A Swing based peer for AWT containers\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Shape;\n+import java.awt.event.MouseEvent;\n+import java.awt.peer.ComponentPeer;\n+import java.awt.peer.ContainerPeer;\n+\n+/**\n+ * A peer for Container to be used with the Swing based AWT peers.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingContainerPeer\n+  extends SwingComponentPeer\n+  implements ContainerPeer\n+{\n+\n+  /**\n+   * Creates a new SwingContainerPeer.\n+   *\n+   * @param awtCont\n+   */\n+  public SwingContainerPeer(Container awtCont)\n+  {\n+    init(awtCont, null);\n+  }\n+\n+  /**\n+   * Returns the insets of the container.\n+   *\n+   * This is implemented to return the insets of the Swing container.\n+   *\n+   * @return the insets of the container\n+   */\n+  public Insets insets()\n+  {\n+    Insets retVal;\n+    if (swingComponent != null)\n+      retVal = swingComponent.getJComponent().getInsets();\n+    else\n+      retVal = new Insets(0, 0, 0, 0);\n+    return retVal;\n+  }\n+\n+  /**\n+   * Returns the insets of the container.\n+   *\n+   * This is implemented to return the insets of the Swing container.\n+   *\n+   * @return the insets of the container\n+   */\n+  public Insets getInsets()\n+  {\n+    Insets retVal;\n+    if (swingComponent != null)\n+      retVal = swingComponent.getJComponent().getInsets();\n+    else\n+      retVal = new Insets(0, 0, 0, 0);\n+    return retVal;\n+  }\n+\n+  /**\n+   * Called before the validation of this containers begins.\n+   */\n+  public void beginValidate()\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * Called after the validation of this containers ended.\n+   */\n+  public void endValidate()\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * Called before the layout of this containers begins.\n+   */\n+  public void beginLayout()\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * Called after the layout of this containers ended.\n+   */\n+  public void endLayout()\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * Returns <code>false</code> unconditionally. This method is not used at\n+   * the moment.\n+   *\n+   * @return <code>false</code>\n+   */\n+  public boolean isPaintPending()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Returns <code>false</code> unconditionally. This method is not used at\n+   * the moment.\n+   *\n+   * @return <code>false</code>\n+   */\n+  public boolean isRestackSupported()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * This method is not used at the moment.\n+   */\n+  public void cancelPendingPaint(int x, int y, int width, int height)\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * This method is not used at the moment.\n+   */\n+  public void restack()\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  /**\n+   * Triggers painting of a component. This calls peerPaint on all the child\n+   * components of this container.\n+   *\n+   * @param g the graphics context to paint to\n+   */\n+  protected void peerPaint(Graphics g)\n+  {\n+    Container c = (Container) awtComponent;\n+    Component[] children = c.getComponents();\n+    for (int i = children.length - 1; i >= 0; --i)\n+      {\n+        Component child = children[i];\n+        ComponentPeer peer = child.getPeer();\n+        boolean translated = false;\n+        boolean clipped = false;\n+        Shape oldClip = g.getClip();\n+        try\n+        {\n+          g.translate(child.getX(), child.getY());\n+          translated = true;\n+          g.setClip(0, 0, child.getWidth(), child.getHeight());\n+          clipped = true;\n+          if (peer instanceof SwingComponentPeer)\n+            ((SwingComponentPeer) peer).peerPaint(g);\n+        }\n+        finally\n+        {\n+          if (translated)\n+            g.translate(- child.getX(), - child.getY());\n+          if (clipped)\n+            g.setClip(oldClip);\n+        }\n+      }\n+  }\n+\n+  /**\n+   * Handles mouse events by dispatching it to the correct component.\n+   *\n+   * @param ev the mouse event\n+   */\n+  protected void handleMouseEvent(MouseEvent ev)\n+  {\n+    Component comp = awtComponent.getComponentAt(ev.getPoint());\n+    ComponentPeer peer = comp.getPeer();\n+    if (awtComponent != comp && !comp.isLightweight() && peer instanceof SwingComponentPeer)\n+      {\n+        ev.translatePoint(comp.getX(), comp.getY());\n+        ev.setSource(comp);\n+        ((SwingComponentPeer) peer).handleMouseEvent(ev);\n+      }\n+  }\n+\n+  /**\n+   * Handles mouse events by dispatching it to the correct component.\n+   *\n+   * @param ev the mouse event\n+   */\n+  protected void handleMouseMotionEvent(MouseEvent ev)\n+  {\n+    Component comp = awtComponent.getComponentAt(ev.getPoint());\n+    ComponentPeer peer = comp.getPeer();\n+    if (awtComponent != comp && !comp.isLightweight() && peer instanceof SwingComponentPeer)\n+      {\n+        ev.translatePoint(comp.getX(), comp.getY());\n+        ((SwingComponentPeer) peer).handleMouseMotionEvent(ev);\n+      }\n+  }\n+}"}, {"sha": "fea1b504a6a9cb3a3ad000808ddc4317340db87c", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingFramePeer.java", "status": "added", "additions": 196, "deletions": 0, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingFramePeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,196 @@\n+/* SwingFramePeer.java -- An abstract Swing based peer for AWT frames\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.MenuBar;\n+import java.awt.Point;\n+import java.awt.event.MouseEvent;\n+import java.awt.peer.FramePeer;\n+\n+/**\n+ * An abstract base class for FramePeer implementations based on Swing.\n+ * This class provides the ability to display and handle AWT MenuBars that\n+ * are based on Swing.\n+ *\n+ * As a minimum, a subclass must implement all the remaining abstract methods\n+ * as well as the following methods:\n+ * <ul>\n+ * <li>{@link ComponentPeer#getLocationOnScreen()}</li>\n+ * <li>{@link ComponentPeer#getGraphics()}</li>\n+ * <li>{@link ComponentPeer#createImage(int, int)}</li>\n+ * </ul>\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public abstract class SwingFramePeer\n+  extends SwingWindowPeer\n+  implements FramePeer\n+{\n+  /**\n+   * The menu bar to display.\n+   */\n+  SwingMenuBarPeer menuBar = null;\n+\n+  /**\n+   * Creates a new SwingFramePeer.\n+   *\n+   * @param frame the frame\n+   */\n+  public SwingFramePeer(Frame frame)\n+  {\n+    super(frame);\n+  }\n+\n+  /**\n+   * Sets the menu bar to display in this frame.\n+   *\n+   * @param mb the menu bar to set\n+   */\n+  public void setMenuBar(MenuBar mb)\n+  {\n+    menuBar = (SwingMenuBarPeer) mb.getPeer();\n+    menuBar.setFramePeer(this);\n+    menuBar.setWidth(awtComponent.getWidth());\n+  }\n+\n+  /**\n+   * Triggers 'heavyweight' painting of the frame. This will paint a menu bar\n+   * if present as well as the child components of this frame.\n+   *\n+   * @param g the graphics context to use for painting\n+   */\n+  protected void peerPaint(Graphics g)\n+  {\n+    super.peerPaint(g);\n+    if (menuBar != null)\n+      menuBar.peerPaint(g);\n+  }\n+\n+  /**\n+   * Sets the size and location of this frame. This resizes the menubar to fit\n+   * within the frame.\n+   *\n+   * @param x the X coordinate of the screen location\n+   * @param y the Y coordinate of the screen location\n+   * @param w the width of the frame\n+   * @param h the height of the frame\n+   */\n+  public void setBounds(int x, int y, int w, int h)\n+  {\n+    super.setBounds(x, y, w, h);\n+    if (menuBar != null)\n+      menuBar.setWidth(w);\n+  }\n+\n+  /**\n+   * Calculates the insets of this frame peer. This fetches the insets\n+   * from the superclass and adds the insets of the menubar if one is present.\n+   *\n+   * @return the insets of the frame\n+   */\n+  public Insets getInsets()\n+  {\n+    Insets insets = super.getInsets();\n+    if (menuBar != null)\n+      insets.top += menuBar.getHeight();\n+    return insets;\n+  }\n+\n+  /**\n+   * Returns the location of the menu on the screen. This is needed internally\n+   * by the {@link SwingMenuBarPeer} in order to determine its screen location.\n+   *\n+   * @return the location of the menu on the screen\n+   */\n+  public Point getMenuLocationOnScreen()\n+  {\n+    Insets i = super.getInsets();\n+    return new Point(i.top, i.left);\n+  }\n+\n+  /**\n+   * Overridden to provide the ability to handle menus.\n+   *\n+   * @param ev the mouse event\n+   */\n+  protected void handleMouseEvent(MouseEvent ev)\n+  {\n+    Point p = ev.getPoint();\n+    Insets i = super.getInsets();\n+    if (menuBar != null)\n+      {\n+        int menuHeight = menuBar.getHeight();\n+        if (p.y >= i.top && p.y <= i.top + menuHeight)\n+          menuBar.handleMouseEvent(ev);\n+        else\n+          {\n+            ev.translatePoint(0, -menuHeight);\n+            super.handleMouseMotionEvent(ev);\n+          }\n+      }\n+\n+    super.handleMouseEvent(ev);\n+  }\n+\n+  /**\n+   * Overridden to provide the ability to handle menus.\n+   *\n+   * @param ev the mouse event\n+   */\n+  protected void handleMouseMotionEvent(MouseEvent ev)\n+  {\n+    Point p = ev.getPoint();\n+    Insets i = super.getInsets();\n+    if (menuBar != null)\n+      {\n+        int menuHeight = menuBar.getHeight();\n+        if (p.y >= i.top && p.y <= i.top + menuHeight)\n+          menuBar.handleMouseMotionEvent(ev);\n+        else\n+          {\n+            ev.translatePoint(0, -menuHeight);\n+            super.handleMouseMotionEvent(ev);\n+          }\n+      }\n+\n+    super.handleMouseMotionEvent(ev);\n+  }\n+}"}, {"sha": "dd86fff2d1088562c40d8966f454120ee4da9a3d", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingLabelPeer.java", "status": "added", "additions": 196, "deletions": 0, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingLabelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingLabelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingLabelPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,196 @@\n+/* SwingLabelPeer.java -- A Swing based peer for AWT labels\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Image;\n+import java.awt.Label;\n+import java.awt.Point;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.peer.LabelPeer;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JLabel;\n+\n+\n+/**\n+ * A Label peer based on {@link JLabel}.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingLabelPeer\n+  extends SwingComponentPeer\n+  implements LabelPeer\n+{\n+\n+  /**\n+   * A spezialized Swing label used to paint the label for the AWT Label. \n+   *\n+   * @author Roman Kennke (kennke@aicas.com)\n+   */\n+  private class SwingLabel\n+    extends JLabel\n+    implements SwingComponent\n+  {\n+\n+    /**\n+     * Returns this label.\n+     *\n+     * @return <code>this</code>\n+     */\n+    public JComponent getJComponent()\n+    {\n+      return this;\n+    }\n+\n+    /**\n+     * Handles mouse events by forwarding it to\n+     * <code>processMouseEvent()</code>.\n+     *\n+     * @param ev the mouse event\n+     */\n+    public void handleMouseEvent(MouseEvent ev)\n+    {\n+      processMouseEvent(ev);\n+    }\n+\n+    /**\n+     * Handles mouse motion events by forwarding it to\n+     * <code>processMouseMotionEvent()</code>.\n+     *\n+     * @param ev the mouse motion event\n+     */\n+    public void handleMouseMotionEvent(MouseEvent ev)\n+    {\n+      processMouseMotionEvent(ev);\n+    }\n+\n+    /**\n+     * Handles key events by forwarding it to <code>processKeyEvent()</code>.\n+     *\n+     * @param ev the mouse event\n+     */\n+    public void handleKeyEvent(KeyEvent ev)\n+    {\n+      processKeyEvent(ev);\n+    }\n+\n+    /**\n+     * Overridden so that this method returns the correct value even without a\n+     * peer.\n+     *\n+     * @return the screen location of the button\n+     */\n+    public Point getLocationOnScreen()\n+    {\n+      return SwingLabelPeer.this.getLocationOnScreen();\n+    }\n+\n+    /**\n+     * Overridden so that the isShowing method returns the correct value for the\n+     * swing button, even if it has no peer on its own.\n+     *\n+     * @return <code>true</code> if the button is currently showing,\n+     *         <code>false</code> otherwise\n+     */\n+    public boolean isShowing()\n+    {\n+      boolean retVal = false;\n+      if (SwingLabelPeer.this.awtComponent != null)\n+        retVal = SwingLabelPeer.this.awtComponent.isShowing();\n+      return retVal;\n+    }\n+\n+    /**\n+     * Overridden, so that the Swing button can create an Image without its\n+     * own peer.\n+     *\n+     * @param w the width of the image\n+     * @param h the height of the image\n+     *\n+     * @return an image\n+     */\n+    public Image createImage(int w, int h)\n+    {\n+      return SwingLabelPeer.this.createImage(w, h);\n+    }\n+    \n+  }\n+\n+  /**\n+   * Creates a new <code>SwingLabelPeer</code> for the specified AWT label.\n+   *\n+   * @param label the AWT label\n+   */\n+  public SwingLabelPeer(Label label)\n+  {\n+    super();\n+    SwingLabel swingLabel = new SwingLabel();\n+    swingLabel.setText(label.getText());\n+    swingLabel.setHorizontalAlignment(label.getAlignment());\n+    swingLabel.setOpaque(true);\n+    init(label, swingLabel);\n+  }\n+\n+  /**\n+   * Sets the text of the label. This is implemented to set the text on the\n+   * Swing label.\n+   *\n+   * @param text the text to be set\n+   */\n+  public void setText(String text)\n+  {\n+    ((JLabel) swingComponent.getJComponent()).setText(text);\n+  }\n+\n+  /**\n+   * Sets the horizontal alignment of the label. This is implemented to\n+   * set the alignment on the Swing label.\n+   *\n+   * @param alignment the horizontal alignment\n+   *\n+   * @see Label#LEFT\n+   * @see Label#RIGHT\n+   * @see Label#CENTER\n+   */\n+  public void setAlignment(int alignment)\n+  {\n+    ((JLabel) swingComponent.getJComponent()).setHorizontalAlignment(alignment);\n+  }\n+\n+}"}, {"sha": "bd9dcd77aaa3a63f4a9fa1aa0579ede8fc88031b", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingMenuBarPeer.java", "status": "added", "additions": 295, "deletions": 0, "changes": 295, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuBarPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,295 @@\n+/* SwingMenuBarPeer.java -- A Swing based peer for AWT menu bars\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Container;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.Point;\n+import java.awt.event.MouseEvent;\n+import java.awt.peer.MenuBarPeer;\n+\n+import javax.swing.JMenuBar;\n+\n+/**\n+ * A Swing based peer for the AWT menu bar. This is a little bit different from\n+ * the other peers, since the AWT MenuBar is not derived from the AWT\n+ * component.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingMenuBarPeer\n+  implements MenuBarPeer\n+{\n+\n+  /**\n+   * The AWT menu bar.\n+   */\n+  MenuBar awtMenuBar;\n+\n+  /**\n+   * The Swing menu bar.\n+   */\n+  SwingMenuBar menuBar;\n+\n+  /**\n+   * The peer of the frame that contains this menu bar.\n+   */\n+  SwingFramePeer framePeer;\n+\n+  /**\n+   * A specialized JMenuBar that can be used as 'backend' for AWT MenuBars.\n+   *\n+   * @author Roman Kennke (kennke@aicas.com)\n+   */\n+  private class SwingMenuBar\n+    extends JMenuBar\n+  {\n+    /**\n+     * Overridden in order to provide a parent frame for this menu bar. The\n+     * menu bar still is not inside the component hierarchy, we are faking\n+     * here.\n+     */\n+    public Container getParent()\n+    {\n+      Container result = null;\n+      if (framePeer != null)\n+        result = (Container) framePeer.awtComponent;\n+      return result;\n+    }\n+\n+    /**\n+     * Unconditionally returns <code>true</code>, since we assume that when the\n+     * menubar has a peer, it must be showing.\n+     *\n+     * @return <code>true</code>\n+     */\n+    public boolean isShowing()\n+    {\n+      // FIXME: This might be wrong. Maybe find a better way to do that.\n+      return true;\n+    }\n+\n+    /**\n+     * Handles mouse events by forwarding it to\n+     * <code>processMouseEvent()</code>.\n+     *\n+     * @param ev the mouse event\n+     */\n+    public void handleMouseEvent(MouseEvent ev)\n+    {\n+      ev.setSource(this);\n+      processMouseEvent(ev);\n+    }\n+\n+    /**\n+     * Determines the menubar's screen location by asking the SwingFramePeer\n+     * for it.\n+     *\n+     * @return the screen location of the menu bar\n+     */\n+    public Point getLocationOnScreen()\n+    {\n+      return framePeer.getMenuLocationOnScreen();\n+    }\n+  }\n+\n+  /**\n+   * Creates a new <code>SwingMenuBarPeer</code> instance.\n+   *\n+   * @param awtMenuBar the AWT menu bar\n+   */\n+  public SwingMenuBarPeer(MenuBar awtMenuBar)\n+  {\n+    this.awtMenuBar = awtMenuBar;\n+    menuBar = new SwingMenuBar();\n+    menuBar.setDoubleBuffered(false);\n+    // Add all the menus that are already in the MenuBar.\n+    for (int i = 0; i < awtMenuBar.getMenuCount(); i++)\n+      {\n+        Menu menu = awtMenuBar.getMenu(i);\n+        menu.addNotify();\n+        addMenu(awtMenuBar.getMenu(i));\n+      }\n+  }\n+\n+  /**\n+   * Sets the <code>SwingFramePeer</code> of the frame that holds this menu.\n+   *\n+   * @param peer the <code>SwingFramePeer</code> to set\n+   */\n+  public void setFramePeer(SwingFramePeer peer)\n+  {\n+    framePeer = peer;\n+  }\n+\n+  /**\n+   * Adds a menu to the menu bar.\n+   *\n+   * @param m the menu to add\n+   */\n+  public void addMenu(Menu m)\n+  {\n+    SwingMenuPeer menuPeer = (SwingMenuPeer) m.getPeer();\n+    menuBar.add(menuPeer.menu);\n+  }\n+\n+  /**\n+   * Adds a help menu to the menu bar.\n+   *\n+   * @param m the menu to add\n+   */\n+  public void addHelpMenu(Menu menu)\n+  {\n+    // FIXME: We should manage the help menu differently, so that it always\n+    // appears at the rightmost position.\n+    SwingMenuPeer menuPeer = (SwingMenuPeer) menu.getPeer();\n+    menuBar.add(menuPeer.menu);\n+  }\n+\n+  /**\n+   * Removes the menu with the specified index.\n+   *\n+   * @param index the index of the menu to remove\n+   */\n+  public void delMenu(int index)\n+  {\n+    menuBar.remove(index);\n+  }\n+\n+  /**\n+   * Disposes this peer. This releases any reference to the AWT and Swing\n+   * components.\n+   */\n+  public void dispose()\n+  {\n+    menuBar = null;\n+    awtMenuBar = null;\n+  }\n+\n+  /**\n+   * Sets a font for the menu bar.\n+   *\n+   * @param font the font to set\n+   */\n+  public void setFont(Font font)\n+  {\n+    menuBar.setFont(font);\n+  }\n+\n+  /**\n+   * Sets the width of the menu bar. This is called from the top level\n+   * component peers to adjust the width of the menubar when their sizes\n+   * change.\n+   *\n+   * @param w the width to set\n+   */\n+  public void setWidth(int w)\n+  {\n+    menuBar.setSize(w, menuBar.getPreferredSize().height);\n+    menuBar.doLayout();\n+  }\n+\n+  /**\n+   * Paints the menu bar.\n+   *\n+   * @param g the graphics context to use for painting\n+   */\n+  public void peerPaint(Graphics g)\n+  {\n+    menuBar.paint(g);\n+  }\n+\n+  /**\n+   * Determines the height of the menubar.\n+   *\n+   * @return the height of the menu bar\n+   */\n+  public int getHeight()\n+  {\n+    return menuBar.getPreferredSize().height;\n+  }\n+\n+  /**\n+   * Handles mouse events.\n+   *\n+   * @param ev the mouse event\n+   */\n+  public void handleMouseEvent(MouseEvent ev)\n+  {\n+    Point point = ev.getPoint();\n+    for (int i = 0; i < awtMenuBar.getMenuCount(); i++)\n+      {\n+        Menu menu = awtMenuBar.getMenu(i);\n+        SwingMenuPeer peer = (SwingMenuPeer) menu.getPeer();\n+        int x1 = peer.getX();\n+        int x2 = x1 + peer.getWidth();\n+        if (point.x >= x1 && point.x <= x2)\n+          {\n+            ev.translatePoint(peer.getX(), peer.getY());\n+            peer.handleMouseEvent(ev);\n+            break;\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Handles mouse motion events.\n+   *\n+   * @param ev the mouse motion event\n+   */\n+  public void handleMouseMotionEvent(MouseEvent ev)\n+  {\n+    Point point = ev.getPoint();\n+    for (int i = 0; i < awtMenuBar.getMenuCount(); i++)\n+      {\n+        Menu menu = awtMenuBar.getMenu(i);\n+        SwingMenuPeer peer = (SwingMenuPeer) menu.getPeer();\n+        int x1 = peer.getX();\n+        int x2 = x1 + peer.getWidth();\n+        if (point.x >= x1 && point.x <= x2)\n+          {\n+            ev.translatePoint(peer.getX(), peer.getY());\n+            peer.handleMouseMotionEvent(ev);\n+            break;\n+          }\n+      }\n+  }\n+}"}, {"sha": "8b9d47ec01507dd155104347d036dbec0dcb450c", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingMenuItemPeer.java", "status": "added", "additions": 157, "deletions": 0, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuItemPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,157 @@\n+/* SwingMenuItemPeer.java -- A Swing based peer for AWT menu items\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Font;\n+import java.awt.MenuItem;\n+import java.awt.Toolkit;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.peer.MenuItemPeer;\n+\n+import javax.swing.JMenuItem;\n+\n+/**\n+ * A Swing based peer for the AWT MenuItem.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingMenuItemPeer\n+  implements MenuItemPeer\n+{\n+  /**\n+   * The AWT menu item.\n+   */\n+  MenuItem awtMenuItem;\n+\n+  /**\n+   * The Swing menu item.\n+   */\n+  JMenuItem menuItem;\n+\n+  /**\n+   * Receives ActionEvents from the Swing menu item and forwards them\n+   * to the ActionListeners of the AWT MenuItem.\n+   *\n+   * @author Roman Kennke (kennke@aicas.com)\n+   */\n+  private class SwingMenuItemListener implements ActionListener\n+  {\n+\n+    /**\n+     * Receives notification when the action has been performed.\n+     *\n+     * @param event the action event\n+     */\n+    public void actionPerformed(ActionEvent event)\n+    {\n+      event.setSource(awtMenuItem);\n+      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(event);\n+    }\n+    \n+  }\n+\n+  /**\n+   * Creates a new instance of <code>SwingMenuItemPeer</code>.\n+   *\n+   * @param awtMenuItem the AWT menu item\n+   */\n+  public SwingMenuItemPeer(MenuItem awtMenuItem)\n+  {\n+    this.awtMenuItem = awtMenuItem;\n+    menuItem = new JMenuItem(awtMenuItem.getLabel());\n+    menuItem.addActionListener(new SwingMenuItemListener());\n+  }\n+\n+  /**\n+   * Disables the menu item.\n+   */\n+  public void disable()\n+  {\n+    menuItem.setEnabled(false);\n+  }\n+\n+  /**\n+   * Enables the menu item.\n+   */\n+  public void enable()\n+  {\n+    menuItem.setEnabled(true);\n+  }\n+\n+  /**\n+   * Sets the enabled state to <code>enabled</code>.\n+   *\n+   * @param enabled if the menu item should be enabled or not\n+   */\n+  public void setEnabled(boolean enabled)\n+  {\n+    menuItem.setEnabled(enabled);\n+  }\n+\n+  /**\n+   * Sets the label for the menu item.\n+   *\n+   * @param text the label to set\n+   */\n+  public void setLabel(String text)\n+  {\n+    menuItem.setText(text);\n+  }\n+\n+  /**\n+   * Disposes the menu item. This releases any reference to the Swing and AWT\n+   * menu item.\n+   */\n+  public void dispose()\n+  {\n+    menuItem = null;\n+    awtMenuItem = null;\n+  }\n+\n+  /**\n+   * Sets the font for this menu item.\n+   *\n+   * @param font the font to set\n+   */\n+  public void setFont(Font font)\n+  {\n+    menuItem.setFont(font);\n+  }\n+\n+}"}, {"sha": "ecb54a524793b19cf50c144e1419e96e0800e1bd", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingMenuPeer.java", "status": "added", "additions": 284, "deletions": 0, "changes": 284, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,284 @@\n+/* SwingMenuPeer.java -- A Swing based peer for AWT menus\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Font;\n+import java.awt.Menu;\n+import java.awt.MenuItem;\n+import java.awt.Point;\n+import java.awt.event.MouseEvent;\n+import java.awt.peer.MenuPeer;\n+\n+import javax.swing.JMenu;\n+\n+/**\n+ * A Swing based peer for the AWT menu.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingMenuPeer\n+  implements MenuPeer\n+{\n+\n+  /**\n+   * The AWT menu.\n+   */\n+  Menu awtMenu;\n+\n+  /**\n+   * The Swing menu.\n+   */\n+  SwingMenu menu;\n+\n+  /**\n+   * A specialized JMenu that can be used as 'backend' for an AWT menu.\n+   *\n+   * @author Roman Kennke (kennke@aicas.com)\n+   */\n+  private class SwingMenu\n+    extends JMenu\n+  {\n+\n+    /**\n+     * Unconditionally returns <code>true</code>, since we assume that when the\n+     * menu has a peer, it must be showing.\n+     *\n+     * @return <code>true</code>\n+     */\n+    public boolean isShowing()\n+    {\n+      // FIXME: This might be wrong. Maybe find a better way to do that.\n+      return true;\n+    }\n+\n+    /**\n+     * Overridden so that we can provide a location even without a real peer\n+     * attached.\n+     *\n+     * @return the screen location of this menu\n+     */\n+    public Point getLocationOnScreen()\n+    {\n+      Point parentLoc = getParent().getLocationOnScreen();\n+      parentLoc.x += getX();\n+      parentLoc.y += getY();\n+      return parentLoc;\n+    }\n+\n+    /**\n+     * Handles mouse events by forwarding them to\n+     * <code>processMouseEvent()</code>.\n+     *\n+     * @param ev the mouse event\n+     */\n+    public void handleMouseEvent(MouseEvent ev)\n+    {\n+      ev.setSource(this);\n+      processMouseEvent(ev);\n+    }\n+\n+    /**\n+     * Handles mouse events by forwarding them to\n+     * <code>processMouseMotionEvent()</code>.\n+     *\n+     * @param ev the mouse event\n+     */\n+    public void handleMouseMotionEvent(MouseEvent ev)\n+    {\n+      ev.setSource(this);\n+      processMouseMotionEvent(ev);\n+    }\n+  }\n+\n+  /**\n+   * Creates a new <code>SwingMenuPeer</code> instance.\n+   *\n+   * @param awtMenu the AWT menu\n+   */\n+  public SwingMenuPeer(Menu awtMenu)\n+  {\n+    this.awtMenu = awtMenu;\n+    menu = new SwingMenu();\n+    menu.setDoubleBuffered(false);\n+    menu.setText(awtMenu.getLabel());\n+    for (int i = 0; i < awtMenu.getItemCount(); i++)\n+      {\n+        MenuItem item = awtMenu.getItem(i);\n+        item.addNotify();\n+        SwingMenuItemPeer peer = (SwingMenuItemPeer) item.getPeer(); \n+        menu.add(peer.menuItem);\n+      }\n+  }\n+\n+  /**\n+   * Adds a menu item to this menu.\n+   *\n+   * @param item the menu item to add\n+   */\n+  public void addItem(MenuItem item)\n+  {\n+    SwingMenuItemPeer menuItemPeer = (SwingMenuItemPeer) item.getPeer();\n+    menu.add(menuItemPeer.menuItem);\n+  }\n+\n+  /**\n+   * Adds a separator to the menu.\n+   */\n+  public void addSeparator()\n+  {\n+    menu.addSeparator();\n+  }\n+\n+  /**\n+   * Removes a menu item from the menu.\n+   *\n+   * @param index the index of the menu item to remove\n+   */\n+  public void delItem(int index)\n+  {\n+    menu.remove(index);\n+  }\n+\n+  /**\n+   * Disables the menu.\n+   */\n+  public void disable()\n+  {\n+    menu.setEnabled(false);\n+  }\n+\n+  /**\n+   * Enables the menu.\n+   */\n+  public void enable()\n+  {\n+    menu.setEnabled(true);\n+  }\n+\n+  /**\n+   * Sets the enabled state of the menu to <code>enabled</code>.\n+   *\n+   * @param enabled if the menu should be enabled or not\n+   */\n+  public void setEnabled(boolean enabled)\n+  {\n+    menu.setEnabled(enabled);\n+  }\n+\n+  /**\n+   * Sets the label of the menu.\n+   *\n+   * @param text the label to set\n+   */\n+  public void setLabel(String text)\n+  {\n+    menu.setText(text);\n+  }\n+\n+  /**\n+   * Releases any reference to the AWT and Swing menu instances.\n+   */\n+  public void dispose()\n+  {\n+    menu = null;\n+    awtMenu = null;\n+  }\n+\n+  /**\n+   * Sets the font for the menu.\n+   *\n+   * @param font the font to set\n+   */\n+  public void setFont(Font font)\n+  {\n+    menu.setFont(font);\n+  }\n+\n+  /**\n+   * Handles mouse events by forwarding them to the Swing menu.\n+   *\n+   * @param ev the mouse event\n+   */\n+  public void handleMouseEvent(MouseEvent ev)\n+  {\n+    menu.handleMouseEvent(ev);\n+  }\n+\n+  /**\n+   * Handles mouse motion events by forwarding them to the Swing menu.\n+   *\n+   * @param ev the mouse event\n+   */\n+  public void handleMouseMotionEvent(MouseEvent ev)\n+  {\n+    menu.handleMouseMotionEvent(ev);\n+  }\n+\n+  /**\n+   * Returns the X coordinate of the upper left corner of the menu. This is\n+   * used internally by the SwingMenuBarPeer.\n+   *\n+   * @return the X coordinate of the upper left corner of the menu\n+   */\n+  int getX()\n+  {\n+    return menu.getX();\n+  }\n+\n+  /**\n+   * Returns the width of the menu. This is used internally by the\n+   * SwingMenuBarPeer.\n+   *\n+   * @return the X coordinate of the upper left corner of the menu\n+   */\n+  int getWidth()\n+  {\n+    return menu.getWidth();\n+  }\n+\n+  /**\n+   * Returns the Y coordinate of the upper left corner of the menu. This is\n+   * used internally by the SwingMenuBarPeer.\n+   *\n+   * @return the X coordinate of the upper left corner of the menu\n+   */\n+  public int getY()\n+  {\n+    return menu.getY();\n+  }\n+}"}, {"sha": "0a0f20fe82666b4acd78847b2a016e426f7d066c", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingPanelPeer.java", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingPanelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingPanelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingPanelPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,67 @@\n+/* SwingPanelPeer.java -- A PanelPeer based on Swing\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Panel;\n+import java.awt.peer.LightweightPeer;\n+import java.awt.peer.PanelPeer;\n+\n+/**\n+ * A panel peer based on Swing.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+// TODO: Maybe base implementation on JPanel. However, this doesn't seem\n+// necessary, but might be good for more consistend Look.\n+public class SwingPanelPeer\n+  extends SwingContainerPeer\n+  implements PanelPeer, LightweightPeer\n+{\n+\n+  /**\n+   * Creates a new instance of <code>SwingPanelPeer</code> for the specified\n+   * AWT panel.\n+   *\n+   * @param panel the AWT panel\n+   */\n+  public SwingPanelPeer(Panel panel)\n+  {\n+    super(panel);\n+  }\n+}"}, {"sha": "a4c6d82d2cd78f6d33e45c7e2e3b9d9439f1bb94", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingTextFieldPeer.java", "status": "added", "additions": 367, "deletions": 0, "changes": 367, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextFieldPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,367 @@\n+/* SwingTextFieldPeer.java -- A Swing based peer for AWT textfields\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Dimension;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.TextField;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.im.InputMethodRequests;\n+import java.awt.peer.TextFieldPeer;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JTextField;\n+\n+/**\n+ * A TextFieldPeer based on Swing JTextField.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class SwingTextFieldPeer\n+  extends SwingComponentPeer\n+  implements TextFieldPeer\n+{\n+\n+  /**\n+   * A specialized Swing textfield for use in the peer.\n+   *\n+   * @author Roman Kennke (kennke@aicas.com)\n+   */\n+  private class SwingTextField\n+    extends JTextField\n+    implements SwingComponent\n+  {\n+\n+    /**\n+     * Overridden to provide normal behaviour even without a real peer\n+     * attached.\n+     *\n+     * @return the location of the textfield on screen\n+     */\n+    public Point getLocationOnScreen()\n+    {\n+      return SwingTextFieldPeer.this.getLocationOnScreen();\n+    }\n+\n+    /**\n+     * Overridden so that the isShowing method returns the correct value for the\n+     * swing button, even if it has no peer on its own.\n+     *\n+     * @return <code>true</code> if the button is currently showing,\n+     *         <code>false</code> otherwise\n+     */\n+    public boolean isShowing()\n+    {\n+      boolean retVal = false;\n+      if (SwingTextFieldPeer.this.awtComponent != null)\n+        retVal = SwingTextFieldPeer.this.awtComponent.isShowing();\n+      return retVal;\n+    }\n+\n+    /**\n+     * Overridden, so that the Swing button can create an Image without its\n+     * own peer.\n+     *\n+     * @param w the width of the image\n+     * @param h the height of the image\n+     *\n+     * @return an image\n+     */\n+    public Image createImage(int w, int h)\n+    {\n+      return SwingTextFieldPeer.this.createImage(w, h);\n+    }\n+\n+    /**\n+     * Returns this textfield.\n+     *\n+     * @return <code>this</code>\n+     */\n+    public JComponent getJComponent()\n+    {\n+      return this;\n+    }\n+\n+    /**\n+     * Handles mouse events by forwarding it to the swing textfield.\n+     *\n+     * @param ev the mouse event\n+     */\n+    public void handleMouseEvent(MouseEvent ev)\n+    {\n+      ev.setSource(this);\n+      processMouseEvent(ev);\n+    }\n+\n+    /**\n+     * Handles mouse motion events by forwarding it to the swing textfield.\n+     *\n+     * @param ev the mouse motion event\n+     */\n+    public void handleMouseMotionEvent(MouseEvent ev)\n+    {\n+      ev.setSource(this);\n+      processMouseMotionEvent(ev);\n+    }\n+\n+    /**\n+     * Handles key events by forwarding it to the swing textfield.\n+     *\n+     * @param ev the key event\n+     */\n+    public void handleKeyEvent(KeyEvent ev)\n+    {\n+      ev.setSource(this);\n+      processKeyEvent(ev);\n+    }\n+    \n+  }\n+\n+  /**\n+   * Creates a new <code>SwingTextFieldPeer</code> instance for the specified\n+   * AWT textfield.\n+   *\n+   * @param textField the AWT textfield\n+   */\n+  public SwingTextFieldPeer(TextField textField)\n+  {\n+    SwingTextField swingTextField = new SwingTextField();\n+    swingTextField.setText(textField.getText());\n+    init(textField, swingTextField);\n+  }\n+\n+  /**\n+   * Returns the minimum size of the textfield.\n+   *\n+   * @param len not used here\n+   *\n+   * @return the minimum size of the textfield\n+   */\n+  public Dimension minimumSize(int len)\n+  {\n+    return swingComponent.getJComponent().getMinimumSize();\n+  }\n+\n+  /**\n+   * Returns the preferred size of the textfield.\n+   *\n+   * @param len not used here\n+   *\n+   * @return the preferred size of the textfield\n+   */\n+  public Dimension preferredSize(int len)\n+  {\n+    return swingComponent.getJComponent().getPreferredSize();\n+  }\n+\n+  /**\n+   * Returns the minimum size of the textfield.\n+   *\n+   * @param len not used here\n+   *\n+   * @return the minimum size of the textfield\n+   */\n+  public Dimension getMinimumSize(int len)\n+  {\n+    return swingComponent.getJComponent().getMinimumSize();\n+  }\n+\n+  /**\n+   * Returns the preferred size of the textfield.\n+   *\n+   * @param len not used here\n+   *\n+   * @return the preferred size of the textfield\n+   */\n+  public Dimension getPreferredSize(int len)\n+  {\n+    return swingComponent.getJComponent().getPreferredSize();\n+  }\n+\n+  /**\n+   * Sets the echo character.\n+   *\n+   * @param echoChar the echo character to be set\n+   */\n+  public void setEchoChar(char echoChar)\n+  {\n+    // TODO: Must be implemented.\n+  }\n+\n+  /**\n+   * Sets the echo character.\n+   *\n+   * @param echoChar the echo character to be set\n+   */\n+  public void setEchoCharacter(char echoChar)\n+  {\n+    // TODO: Must be implemented.\n+  }\n+\n+  /**\n+   * Returns the end index of the current selection.\n+   *\n+   * @return the end index of the current selection\n+   */\n+  public int getSelectionEnd()\n+  {\n+    // TODO: Must be implemented.\n+    return 0;\n+  }\n+\n+  /**\n+   * Returns the start index of the current selection.\n+   *\n+   * @return the start index of the current selection\n+   */\n+  public int getSelectionStart()\n+  {\n+    // TODO: Must be implemented.\n+    return 0;\n+  }\n+\n+  /**\n+   * Returns the current content of the textfield.\n+   *\n+   * @return the current content of the textfield\n+   */\n+  public String getText()\n+  {\n+    return ((JTextField) swingComponent.getJComponent()).getText();\n+  }\n+\n+  /**\n+   * Sets the content of the textfield.\n+   *\n+   * @param text the text to set\n+   */\n+  public void setText(String text)\n+  {\n+    ((JTextField) swingComponent.getJComponent()).setText(text);\n+  }\n+\n+  /**\n+   * Sets the current selection.\n+   *\n+   * @param startPos the start index of the selection\n+   * @param endPos the start index of the selection\n+   */\n+  public void select(int start_pos, int endPos)\n+  {\n+    // TODO: Must be implemented.\n+  }\n+\n+  /**\n+   * Sets the editable flag of the text field.\n+   *\n+   * @param editable <code>true</code> to make the textfield editable,\n+   *        <code>false</code> to make it uneditable\n+   */\n+  public void setEditable(boolean editable)\n+  {\n+    ((JTextField) swingComponent.getJComponent()).setEditable(editable);\n+  }\n+\n+  /**\n+   * Returns the current caret position.\n+   *\n+   * @return the current caret position\n+   */\n+  public int getCaretPosition()\n+  {\n+    return ((JTextField) swingComponent.getJComponent()).getCaret().getDot();\n+  }\n+\n+  /**\n+   * Sets the current caret position.\n+   *\n+   * @param pos the caret position to set\n+   */\n+  public void setCaretPosition(int pos)\n+  {\n+    ((JTextField) swingComponent.getJComponent()).getCaret().setDot(pos);\n+  }\n+\n+  /**\n+   * Returns the index of the character at the specified location.\n+   *\n+   * @param x the X coordinate of the point to query\n+   * @param y the Y coordinate of the point to query\n+   *\n+   * @return the index of the character at the specified location\n+   */\n+  public int getIndexAtPoint(int x, int y)\n+  {\n+    // TODO: Must be implemented.\n+    return 0;\n+  }\n+\n+  /**\n+   * Returns the bounds of the character at the specified index.\n+   *\n+   * @param pos the index of the character\n+   *\n+   * @return the bounds of the character at the specified index\n+   */\n+  public Rectangle getCharacterBounds(int pos)\n+  {\n+    // TODO: Must be implemented.\n+    return null;\n+  }\n+\n+  /**\n+   * Not used.\n+   */\n+  public long filterEvents(long filter)\n+  {\n+    // TODO: Must be implemented.\n+    return 0;\n+  }\n+\n+  /**\n+   * Not used.\n+   */\n+  public InputMethodRequests getInputMethodRequests()\n+  {\n+    // TODO: Must be implemented.\n+    return null;\n+  }\n+\n+}"}, {"sha": "166e1f47b6f125fd68e5b09fdbd03c9f7926db6d", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingToolkit.java", "status": "added", "additions": 165, "deletions": 0, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingToolkit.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,165 @@\n+/* SwingToolkit.java -- A base toolkit for Swing peers\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Button;\n+import java.awt.Canvas;\n+import java.awt.Label;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.Panel;\n+import java.awt.TextField;\n+import java.awt.peer.ButtonPeer;\n+import java.awt.peer.CanvasPeer;\n+import java.awt.peer.LabelPeer;\n+import java.awt.peer.MenuBarPeer;\n+import java.awt.peer.MenuItemPeer;\n+import java.awt.peer.MenuPeer;\n+import java.awt.peer.PanelPeer;\n+import java.awt.peer.TextFieldPeer;\n+\n+import gnu.java.awt.ClasspathToolkit;\n+\n+/**\n+ * A base implementation for {@link java.awt.Toolkit} that provides the\n+ * Swing based widgets. Concrete implementations still must provide the\n+ * remaining abstract methods.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public abstract class SwingToolkit extends ClasspathToolkit\n+{\n+\n+  /**\n+   * Creates a SwingButtonPeer.\n+   *\n+   * @param button the AWT button\n+   *\n+   * @return the Swing button peer\n+   */\n+  protected ButtonPeer createButton(Button button)\n+  {\n+    return new SwingButtonPeer(button);\n+  }\n+\n+  /**\n+   * Creates a SwingCanvasPeer.\n+   *\n+   * @param canvas the AWT canvas\n+   *\n+   * @return the Swing canvas peer\n+   */\n+  protected CanvasPeer createCanvas(Canvas canvas)\n+  {\n+    return new SwingCanvasPeer(canvas);\n+  }\n+\n+  /**\n+   * Creates a SwingLabelPeer.\n+   *\n+   * @param label the AWT label\n+   *\n+   * @return the Swing label peer\n+   */\n+  protected LabelPeer createLabel(Label label)\n+  {\n+    return new SwingLabelPeer(label);\n+  }\n+\n+  /**\n+   * Creates a SwingMenuPeer.\n+   *\n+   * @param menu the AWT menu\n+   *\n+   * @return the Swing menu peer\n+   */\n+  protected MenuPeer createMenu(Menu menu)\n+  {\n+    return new SwingMenuPeer(menu);\n+  }\n+\n+  /**\n+   * Creates a SwingMenuBarPeer.\n+   *\n+   * @param menuBar the AWT menubar\n+   *\n+   * @return the Swing menu bar peer\n+   */\n+  protected MenuBarPeer createMenuBar(MenuBar menuBar)\n+  {\n+    return new SwingMenuBarPeer(menuBar);\n+  }\n+\n+  /**\n+   * Creates a SwingMenuItemPeer.\n+   *\n+   * @param menuItem the AWT menu item\n+   *\n+   * @return the Swing menu item peer\n+   */\n+  protected MenuItemPeer createMenuItem(MenuItem menuItem)\n+  {\n+    return new SwingMenuItemPeer(menuItem);\n+  }\n+\n+  /**\n+   * Creates a SwingPanelPeer.\n+   *\n+   * @param panel the AWT panel\n+   *\n+   * @return the Swing panel peer\n+   */\n+  protected PanelPeer createPanel(Panel panel)\n+  {\n+    return new SwingPanelPeer(panel);\n+  }\n+\n+  /**\n+   * Creates a SwingTextFieldPeer.\n+   *\n+   * @param textField the AWT text field\n+   *\n+   * @return the Swing text field peer\n+   */\n+  protected TextFieldPeer createTextField(TextField textField)\n+  {\n+    return new SwingTextFieldPeer(textField);\n+  }\n+}"}, {"sha": "2f89795ca4f8102564ebe543074974bae14158b9", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingWindowPeer.java", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingWindowPeer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,72 @@\n+/* SwingWindowPeer.java -- An abstract base for Swing based window peers\n+   Copyright (C)  2006  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.peer.swing;\n+\n+import java.awt.Window;\n+import java.awt.peer.WindowPeer;\n+\n+/**\n+ * An abstract base class for Swing based WindowPeer implementation. Concrete\n+ * implementations of WindowPeers should subclass this class in order to get\n+ * the correct behaviour.\n+ *\n+ * As a minimum, a subclass must implement all the remaining abstract methods\n+ * as well as the following methods:\n+ * <ul>\n+ * <li>{@link ComponentPeer#getLocationOnScreen()}</li>\n+ * <li>{@link ComponentPeer#getGraphics()}</li>\n+ * <li>{@link ComponentPeer#createImage(int, int)}</li>\n+ * </ul>\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public abstract class SwingWindowPeer\n+  extends SwingContainerPeer\n+  implements WindowPeer\n+{\n+\n+  /**\n+   * Creates a new instance of WindowPeer.\n+   *\n+   * @param window the AWT window\n+   */\n+  public SwingWindowPeer(Window window)\n+  {\n+    super(window);\n+  }\n+}"}, {"sha": "506eda883e4fda0bcd6d1a5dc8bc52722434fd8a", "filename": "libjava/classpath/gnu/java/awt/peer/swing/package.html", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2Fpackage.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2Fpackage.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2Fpackage.html?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,71 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n+<!-- package.html - describes classes in gnu.java.awt.peer.swing package.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. -->\n+\n+<html>\n+  <head>\n+    <title>Swing based AWT peers</title>\n+  </head>\n+  <body>\n+  <h1>Swing based AWT peers.</h1>\n+  <p>This package defines an abstract set of AWT peers that is based on Swing\n+    widgets. This can be used as an implementation base for peer implementors\n+    who don't have access to native widgets or who want to build a quick\n+    prototype of a peer set without implementing all of the AWT widgets.\n+  </p>\n+  <p>An actual implementation would have to provide the following:\n+  <ul>\n+  <li>A concrete implementation of {@link java.awt.Toolkit}, possibly based\n+    on {@link SwingToolkit}. This implementation must provide all the missing\n+    methods of the <code>SwingToolkit</code>.</li>\n+  <li>Concrete implementations of {@link java.awt.peer.DialogPeer},\n+    {@link java.awt.peer.FramePeer} and {@link java.awt.peer.WindowPeer},\n+    ideally based on their <code>SwingXXXPeer</code> counterparts.\n+    Some methods must be specially\n+    overridden in those peers to provide useful functionality, like\n+    <code>getLocationOnScreen()</code>. See the API documentation for more\n+    details</li>\n+  <li>An implementation of {@link java.awt.Image}. These must be provided by\n+    the toplevel component peers.</li>\n+  <li>An implementation of {@link java.awt.Graphics}. This must also be\n+    provided by the toplevel peers.</li>\n+  <li>An implementation of {@link java.awt.Font}. This must be\n+    provided by the toolkit.</li>\n+  </ul>\n+  </p>\n+  </body>\n+</html>"}, {"sha": "42b31fae808cc4537e85315d7df86178d5c85714", "filename": "libjava/classpath/gnu/java/beans/DefaultExceptionListener.java", "status": "renamed", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2FDefaultExceptionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2FDefaultExceptionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fbeans%2FDefaultExceptionListener.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* gnu.java.beans.DefaultExceptionListener\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,23 +35,32 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package gnu.java.beans.decoder;\n+package gnu.java.beans;\n \n import java.beans.ExceptionListener;\n \n-/** The DefaultExceptionListener is the default implementation of the ExceptionListener\n- * interface. An instance of this class is used whenever the user provided no\n- * ExceptionListener instance on its own.\n+/** The DefaultExceptionListener is the default implementation of the\n+ * {@link ExceptionListener} interface. An instance of\n+ * this class is used whenever the user provided no\n+ * <code>ExceptionListener</code> instance on its own.\n  *\n- * <p>The implementation just writes the exception's message to <code>System.err</code>.</p>\n+ * <p>The implementation just writes the exception's message\n+ * to <code>System.err</code> and is used by the {@link java.beans.Encoder}\n+ * and the {@link java.beans.XMLDecoder}.\n+ * </p>\n  *\n- * @author Robert Schuster\n+ * @author Robert Schuster (robertschuster@fsfe.org)\n  */\n public class DefaultExceptionListener implements ExceptionListener\n {\n+  public final static DefaultExceptionListener INSTANCE\n+    = new DefaultExceptionListener();\n+  \n   public void exceptionThrown(Exception e)\n   {\n-    System.err.println(\"non-critical exception: \" + e + \" - message: \"\n+    System.err.println(\"exception thrown: \"\n+                       + e + \" - message: \"\n                        + e.getMessage());\n   }\n+  \n }", "previous_filename": "libjava/classpath/gnu/java/beans/decoder/DefaultExceptionListener.java"}, {"sha": "a84d94da21f5c19ece6ad545d698f4b6237f05e7", "filename": "libjava/classpath/gnu/java/lang/CharData.java", "status": "modified", "additions": 1466, "deletions": 762, "changes": 2228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FCharData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FCharData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FCharData.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "ac3482679c57832bff665a48b4dc705b5bfb7129", "filename": "libjava/classpath/gnu/java/net/CRLFInputStream.java", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FCRLFInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FCRLFInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FCRLFInputStream.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* CRLFInputStream.java --\n-   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,7 +39,6 @@\n package gnu.java.net;\n \n import java.io.BufferedInputStream;\n-import java.io.FilterInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n \n@@ -49,7 +48,7 @@\n  * @author Chris Burdess (dog@gnu.org)\n  */\n public class CRLFInputStream\n-  extends FilterInputStream\n+  extends InputStream\n {\n   /**\n    * The CR octet.\n@@ -61,6 +60,11 @@\n    */\n   public static final int LF = 10;\n \n+  /**\n+   * The underlying input stream.\n+   */\n+  protected InputStream in;\n+  \n   private boolean doReset;\n \n   /**\n@@ -69,7 +73,7 @@\n    */\n   public CRLFInputStream(InputStream in)\n   {\n-    super(in.markSupported() ? in : new BufferedInputStream(in));\n+    this.in = in.markSupported() ? in : new BufferedInputStream(in);\n   }\n \n   /**\n@@ -145,13 +149,14 @@ private int indexOfCRLF(byte[] b, int off, int len)\n     throws IOException\n   {\n     doReset = false;\n-    int lm1 = len - 1;\n-    for (int i = off; i < len; i++)\n+    int end = off + len;\n+    int em1 = end - 1;\n+    for (int i = off; i < end; i++)\n       {\n         if (b[i] == CR)\n           {\n             int d;\n-            if (i == lm1)\n+            if (i == em1)\n               {\n                 d = in.read();\n                 doReset = true;"}, {"sha": "da307dbddf204271f4fde0d86d3cf10a178b754d", "filename": "libjava/classpath/gnu/java/net/LineInputStream.java", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FLineInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FLineInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2FLineInputStream.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* LineInputStream.java --\n-   Copyright (C) 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,7 +40,6 @@\n \n import java.io.BufferedInputStream;\n import java.io.ByteArrayOutputStream;\n-import java.io.FilterInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n \n@@ -50,8 +49,14 @@\n  * @author Chris Burdess (dog@gnu.org)\n  */\n public class LineInputStream\n-  extends FilterInputStream\n+  extends InputStream\n {\n+\n+  /**\n+   * The underlying input stream.\n+   */\n+  protected InputStream in;\n+  \n   /*\n    * Line buffer.\n    */\n@@ -88,14 +93,32 @@ public LineInputStream(InputStream in)\n    */\n   public LineInputStream(InputStream in, String encoding)\n   {\n-    super(in);\n+    this.in = in;\n     buf = new ByteArrayOutputStream();\n     this.encoding = encoding;\n     eof = false;\n     // If it is already buffered, additional buffering gains nothing.\n     blockReads = !(in instanceof BufferedInputStream) && in.markSupported();\n   }\n \n+  public int read()\n+    throws IOException\n+  {\n+    return in.read();\n+  }\n+\n+  public int read(byte[] buf)\n+    throws IOException\n+  {\n+    return in.read(buf);\n+  }\n+  \n+  public int read(byte[] buf, int off, int len)\n+    throws IOException\n+  {\n+    return in.read(buf, off, len);\n+  }\n+\n   /**\n    * Read a line of input.\n    */"}, {"sha": "f7253b0935be028810af3be0028d3bb52aba7b7f", "filename": "libjava/classpath/gnu/java/net/protocol/file/Connection.java", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -135,21 +135,18 @@ public Connection(URL url)\n    * @exception MalformedURLException If the given string contains invalid\n    * escape sequences.\n    *\n-   * Sadly the same as URI.unquote, but there's nothing we can do to\n-   * make it accessible.\n-   *\n    */\n   public static String unquote(String str) throws MalformedURLException\n   {\n     if (str == null)\n       return null;\n-    byte[] buf = new byte[str.length()];\n+\n+    final int MAX_BYTES_PER_UTF_8_CHAR = 3;\n+    byte[] buf = new byte[str.length()*MAX_BYTES_PER_UTF_8_CHAR];\n     int pos = 0;\n     for (int i = 0; i < str.length(); i++)\n       {\n \tchar c = str.charAt(i);\n-\tif (c > 127)\n-\t  throw new MalformedURLException(str + \" : Invalid character\");\n \tif (c == '%')\n \t  {\n \t    if (i + 2 >= str.length())\n@@ -160,6 +157,15 @@ public static String unquote(String str) throws MalformedURLException\n \t      throw new MalformedURLException(str + \" : Invalid quoted character\");\n \t    buf[pos++] = (byte) (hi * 16 + lo);\n \t  }\n+ \telse if (c > 127) {\n+\t    try {\n+\t\tbyte [] c_as_bytes = Character.toString(c).getBytes(\"utf-8\");\n+\t\tSystem.arraycopy(c_as_bytes, 0, buf, pos, c_as_bytes.length);\n+\t    }\n+\t    catch (java.io.UnsupportedEncodingException x2) {\n+\t\tthrow (Error) new InternalError().initCause(x2);\n+\t    }\n+\t}    \n \telse\n \t  buf[pos++] = (byte) c;\n       }"}, {"sha": "aa3c412b6a13dce88c19fc21db6e0ff56da47fb1", "filename": "libjava/classpath/gnu/java/net/protocol/ftp/ActiveModeDTP.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FActiveModeDTP.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FActiveModeDTP.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FActiveModeDTP.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -84,6 +84,7 @@\n       }\n     this.connectionTimeout = connectionTimeout;\n     acceptThread = new Thread(this, \"ActiveModeDTP\");\n+    acceptThread.setDaemon(true);\n     acceptThread.start();\n   }\n "}, {"sha": "f937e51f6065932b8a67331fc3717b3238d4790b", "filename": "libjava/classpath/gnu/java/net/protocol/ftp/FTPURLConnection.java", "status": "modified", "additions": 9, "deletions": 36, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FFTPURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FFTPURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FFTPURLConnection.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* FTPURLConnection.java --\n-   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,10 +38,9 @@\n \n package gnu.java.net.protocol.ftp;\n \n+import gnu.classpath.SystemProperties;\n import gnu.java.net.GetLocalHostAction;\n-import gnu.java.security.action.GetPropertyAction;\n \n-import java.io.FileNotFoundException;\n import java.io.FilterInputStream;\n import java.io.FilterOutputStream;\n import java.io.IOException;\n@@ -51,7 +50,6 @@\n import java.net.URL;\n import java.net.URLConnection;\n import java.security.AccessController;\n-import java.security.PrivilegedAction;\n import java.util.HashMap;\n import java.util.Map;\n \n@@ -113,11 +111,9 @@ public void connect()\n     else\n       {\n         username = \"anonymous\";\n-        PrivilegedAction a = new GetPropertyAction(\"user.name\");\n-        String systemUsername =(String) AccessController.doPrivileged(a);\n-        a = new GetLocalHostAction();\n+        GetLocalHostAction a = new GetLocalHostAction();\n         InetAddress localhost =(InetAddress) AccessController.doPrivileged(a);\n-        password = systemUsername + \"@\" +\n+        password = SystemProperties.getProperty(\"user.name\") + \"@\" +\n           ((localhost == null) ? \"localhost\" : localhost.getHostName());\n       }\n     connection = new FTPConnection(host, port);\n@@ -167,24 +163,13 @@ public InputStream getInputStream()\n         connect();\n       }\n     String path = url.getPath();\n-    String filename = null;\n-    int lsi = path.lastIndexOf('/');\n-    if (lsi != -1)\n+    if (connection.changeWorkingDirectory(path))\n       {\n-        filename = path.substring(lsi + 1);\n-        path = path.substring(0, lsi);\n-        if (!connection.changeWorkingDirectory(path))\n-          {\n-            throw new FileNotFoundException(path);\n-          }\n-      }\n-    if (filename != null && filename.length() > 0)\n-      {\n-        return this.new ClosingInputStream(connection.retrieve(filename));\n+        return this.new ClosingInputStream(connection.list(null));\n       }\n     else\n       {\n-        return this.new ClosingInputStream(connection.list(null));\n+        return this.new ClosingInputStream(connection.retrieve(path));\n       }\n   }\n   \n@@ -198,20 +183,8 @@ public OutputStream getOutputStream()\n       {\n         connect();\n       }\n-    String dir = url.getPath();\n-    String filename = url.getFile();\n-    if (!connection.changeWorkingDirectory(dir))\n-      {\n-        throw new FileNotFoundException(dir);\n-      }\n-    if (filename != null)\n-      {\n-        return this.new ClosingOutputStream(connection.store(filename));\n-      }\n-    else\n-      {\n-        throw new FileNotFoundException(filename);\n-      }\n+    String path = url.getPath();\n+    return this.new ClosingOutputStream(connection.store(path));\n   }\n \n   public String getRequestProperty(String key)"}, {"sha": "9870412f2daf192f1f235fe6b10962fef74531a1", "filename": "libjava/classpath/gnu/java/net/protocol/http/ChunkedInputStream.java", "status": "modified", "additions": 78, "deletions": 24, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* ChunkedInputStream.java --\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,28 +38,46 @@\n \n package gnu.java.net.protocol.http;\n \n-import java.io.FilterInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.ProtocolException;\n \n+\n+//\n+// Note that we rely on the implemtation of skip() in the super class\n+// (InputStream) calling our read methods to account for chunk headers\n+// while skipping.\n+//\n+\n+\n /**\n  * Input stream wrapper for the \"chunked\" transfer-coding.\n  *\n  * @author Chris Burdess (dog@gnu.org)\n  */\n public class ChunkedInputStream\n-  extends FilterInputStream\n+  extends InputStream\n {\n \n   private static final byte CR = 0x0d;\n   private static final byte LF = 0x0a;\n \n+  Headers headers;\n+\n+  /** The underlying stream. */\n+  private InputStream in;\n+\n+  /** Size of the chunk we're reading.  */\n   int size;\n+  /** Number of bytes we've read in this chunk.  */\n   int count;\n+  /**\n+   * True when we should read meta-information, false when we should\n+   * read data.\n+   */\n   boolean meta;\n+  /** True when we've hit EOF.  */\n   boolean eof;\n-  Headers headers;\n \n   /**\n    * Constructor.\n@@ -68,7 +86,7 @@\n    */\n   public ChunkedInputStream(InputStream in, Headers headers)\n   {\n-    super(in);\n+    this.in = in;\n     this.headers = headers;\n     size = -1;\n     count = 0;\n@@ -84,21 +102,10 @@ public int read()\n       {\n         return -1;\n       }\n-    int ret = (int) buf[0];\n-    if (ret < 0)\n-      {\n-        ret += 0x100;\n-      }\n-    return ret;\n-  }\n-\n-  public int read(byte[] buffer)\n-    throws IOException\n-  {\n-    return read(buffer, 0, buffer.length);\n+    return 0xff & buf[0];\n   }\n \n-  public int read(byte[] buffer, int offset, int length)\n+  public synchronized int read(byte[] buffer, int offset, int length)\n     throws IOException\n   {\n     if (eof)\n@@ -120,7 +127,18 @@ public int read(byte[] buffer, int offset, int length)\n               }\n             else if (c == 0x0a && last == 0x0d) // CRLF\n               {\n-                size = Integer.parseInt(buf.toString(), 16);\n+                try\n+                  {\n+                    size = Integer.parseInt(buf.toString(), 16);\n+                  }\n+                catch (NumberFormatException nfe)\n+                  {\n+                    IOException ioe = new IOException(\"Bad chunk header\");\n+                    ioe.initCause(nfe);\n+                    // Unrecoverable.  Don't try to read more.\n+                    in.close();\n+                    throw ioe;\n+                  }\n                 break;\n               }\n             else if (!seenSemi && c >= 0x30)\n@@ -142,17 +160,22 @@ else if (!seenSemi && c >= 0x30)\n       }\n     else\n       {\n-        int diff = length - offset;\n-        int max = size - count;\n-        max = (diff < max) ? diff : max;\n-        int len = (max > 0) ? in.read(buffer, offset, max) : 0;\n+\tint canRead = Math.min(size - count, length);\n+\tint len = in.read(buffer, offset, canRead);\n+\tif (len == -1)\n+\t  {\n+\t    // This is an error condition but it isn't clear what we\n+\t    // should do with it.\n+\t    eof = true;\n+\t    return -1;\n+\t  }\n         count += len;\n         if (count == size)\n           {\n             // Read CRLF\n             int c1 = in.read();\n             int c2 = in.read();\n-            if (c1 == -1 && c2 == -1)\n+            if (c1 == -1 || c2 == -1)\n               {\n                 // EOF before CRLF: bad, but ignore\n                 eof = true;\n@@ -167,6 +190,37 @@ else if (!seenSemi && c >= 0x30)\n         return len;\n       }\n   }\n+\n+  /**\n+   * This method returns the number of bytes that can be read from\n+   * this stream before a read might block.  Even if the underlying\n+   * InputStream has data available past the end of the current chunk,\n+   * we have no way of knowing how large the next chunk header will\n+   * be. So we cannot report available data past the current chunk.\n+   *\n+   * @return The number of bytes that can be read before a read might\n+   * block\n+   *\n+   * @exception IOException If an error occurs\n+   */\n+  public int available() throws IOException\n+  {\n+    if (meta)\n+      return 0;\n+    \n+    return Math.min(in.available(), size - count);\n+  }\n+\n+  /**\n+   * This method closes the ChunkedInputStream by closing the underlying\n+   * InputStream.\n+   * \n+   * @exception IOException If an error occurs\n+   */\n+  public void close() throws IOException\n+  {\n+    in.close();\n+  }\n   \n }\n "}, {"sha": "33d9756aa0c39bea92457deb6b642ad07cf05f64", "filename": "libjava/classpath/gnu/java/net/protocol/http/HTTPConnection.java", "status": "modified", "additions": 235, "deletions": 39, "changes": 274, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* HTTPConnection.java --\n-   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,7 +38,6 @@\n \n package gnu.java.net.protocol.http;\n \n-import gnu.classpath.Configuration;\n import gnu.classpath.SystemProperties;\n import gnu.java.net.EmptyX509TrustManager;\n \n@@ -53,8 +52,9 @@\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.Iterator;\n-import java.util.LinkedHashMap;\n+import java.util.LinkedList;\n import java.util.List;\n+import java.util.ListIterator;\n import java.util.Map;\n \n import javax.net.ssl.HandshakeCompletedListener;\n@@ -164,7 +164,7 @@\n   /**\n    * The pool that this connection is a member of (if any).\n    */\n-  private LinkedHashMap pool;\n+  private Pool pool;\n \n   /**\n    * Creates a new HTTP connection.\n@@ -266,7 +266,8 @@ public boolean isSecure()\n \n   /**\n    * Returns the HTTP version string supported by this connection.\n-   * @see #version\n+   * @see #majorVersion\n+   * @see #minorVersion\n    */\n   public String getVersion()\n   {\n@@ -330,28 +331,228 @@ public CookieManager getCookieManager()\n     return cookieManager;\n   }\n \n+  /**\n+   * Manages a pool of HTTPConections.  The pool will have a maximum\n+   * size determined by the value of the maxConn parameter passed to\n+   * the {@link #get} method.  This value inevitably comes from the\n+   * http.maxConnections system property.  If the\n+   * classpath.net.http.keepAliveTTL system property is set, that will\n+   * be the maximum time (in seconds) that an idle connection will be\n+   * maintained.\n+   */\n+  static class Pool\n+  {\n+    /**\n+     * Singleton instance of the pool.\n+     */\n+    static Pool instance = new Pool();\n+\n+    /**\n+     * The pool\n+     */\n+    final LinkedList connectionPool = new LinkedList();\n+\n+    /**\n+     * Maximum size of the pool.\n+     */\n+    int maxConnections;\n+\n+    /**\n+     * If greater than zero, the maximum time a connection will remain\n+     * int the pool.\n+     */\n+    int connectionTTL;\n+\n+    /**\n+     * A thread that removes connections older than connectionTTL.\n+     */\n+    class Reaper\n+      implements Runnable\n+    {\n+      public void run()\n+      {\n+        synchronized (Pool.this)\n+          {\n+            try\n+              {\n+                do\n+                  {\n+                    while (connectionPool.size() > 0)\n+                      {\n+                        long currentTime = System.currentTimeMillis();\n+\n+                        HTTPConnection c =\n+                          (HTTPConnection)connectionPool.getFirst();\n+\n+                        long waitTime = c.timeLastUsed\n+                          + connectionTTL - currentTime;\n+\n+                        if (waitTime <= 0)\n+                          removeOldest();\n+                        else\n+                          try\n+                            {\n+                              Pool.this.wait(waitTime);\n+                            }\n+                          catch (InterruptedException _)\n+                            {\n+                              // Ignore the interrupt.\n+                            }\n+                      }\n+                    // After the pool is empty, wait TTL to see if it\n+                    // is used again.  This is because in the\n+                    // situation where a single thread is making HTTP\n+                    // requests to the same server it can remove the\n+                    // connection from the pool before the Reaper has\n+                    // a chance to start.  This would cause the Reaper\n+                    // to exit if it were not for this extra delay.\n+                    // The result would be starting a Reaper thread\n+                    // for each HTTP request.  With the delay we get\n+                    // at most one Reaper created each TTL.\n+                    try\n+                      {\n+                        Pool.this.wait(connectionTTL);\n+                      }\n+                    catch (InterruptedException _)\n+                      {\n+                        // Ignore the interrupt.\n+                      }\n+                  }\n+                while (connectionPool.size() > 0);\n+              }\n+            finally\n+              {\n+                reaper = null;\n+              }\n+          }\n+      }\n+    }\n+\n+    Reaper reaper;\n+\n+    /**\n+     * Private constructor to ensure singleton.\n+     */\n+    private Pool()\n+    {\n+    }\n+\n+    /**\n+     * Tests for a matching connection.\n+     *\n+     * @param c connection to match.\n+     * @param h the host name.\n+     * @param p the port.\n+     * @param sec true if using https.\n+     *\n+     * @return true if c matches h, p, and sec.\n+     */\n+    private static boolean matches(HTTPConnection c,\n+                                   String h, int p, boolean sec)\n+    {\n+      return h.equals(c.hostname) && (p == c.port) && (sec == c.secure);\n+    }\n+\n+    /**\n+     * Get a pooled HTTPConnection.  If there is an existing idle\n+     * connection to the requested server it is returned.  Otherwise a\n+     * new connection is created.\n+     *\n+     * @param host the name of the host to connect to\n+     * @param port the port on the host to connect to\n+     * @param secure whether to use a secure connection\n+     *\n+     * @return the HTTPConnection.\n+     */\n+    synchronized HTTPConnection get(String host,\n+                                    int port,\n+                                    boolean secure)\n+    {\n+      String ttl =\n+        SystemProperties.getProperty(\"classpath.net.http.keepAliveTTL\");\n+      connectionTTL = (ttl != null && ttl.length() > 0) ?\n+        1000 * Math.max(1, Integer.parseInt(ttl)) : 10000;\n+\n+      String mc = SystemProperties.getProperty(\"http.maxConnections\");\n+      maxConnections = (mc != null && mc.length() > 0) ?\n+        Math.max(Integer.parseInt(mc), 1) : 5;\n+      if (maxConnections < 1)\n+        maxConnections =  1;\n+\n+      HTTPConnection c = null;\n+      \n+      ListIterator it = connectionPool.listIterator(0);\n+      while (it.hasNext())\n+        {\n+          HTTPConnection cc = (HTTPConnection)it.next();\n+          if (matches(cc, host, port, secure))\n+            {\n+              c = cc;\n+              it.remove();\n+              break;\n+            }\n+        }\n+      if (c == null)\n+        {\n+          c = new HTTPConnection(host, port, secure);\n+          c.setPool(this);\n+        }\n+      return c;\n+    }\n+\n+    /**\n+     * Put an idle HTTPConnection back into the pool.  If this causes\n+     * the pool to be come too large, the oldest connection is removed\n+     * and closed.\n+     *\n+     */\n+    synchronized void put(HTTPConnection c)\n+    {\n+      c.timeLastUsed = System.currentTimeMillis();\n+      connectionPool.addLast(c);\n+\n+      // maxConnections must always be >= 1\n+      while (connectionPool.size() >= maxConnections)\n+        removeOldest();\n+\n+      if (connectionTTL > 0 && null == reaper) {\n+        // If there is a connectionTTL, then the reaper has removed\n+        // any stale connections, so we don't have to check for stale\n+        // now.  We do have to start a reaper though, as there is not\n+        // one running now.\n+        reaper = new Reaper();\n+        Thread t = new Thread(reaper, \"HTTPConnection.Reaper\");\n+        t.setDaemon(true);\n+        t.start();\n+      }\n+    }\n+\n+    /**\n+     * Remove the oldest connection from the pool and close it.\n+     */\n+    void removeOldest()\n+    {\n+      HTTPConnection cx = (HTTPConnection)connectionPool.removeFirst();\n+      try\n+        {\n+          cx.closeConnection();\n+        }\n+      catch (IOException ioe)\n+        {\n+          // Ignore it.  We are just cleaning up.\n+        }\n+    }\n+  }\n+  \n   /**\n    * The number of times this HTTPConnection has be used via keep-alive.\n    */\n   int useCount;\n \n   /**\n-   * Generates a key for connections in the connection pool.\n-   *\n-   * @param h the host name.\n-   * @param p the port.\n-   * @param sec true if using https.\n-   *\n-   * @return the key.\n+   * If this HTTPConnection is in the pool, the time it was put there.\n    */\n-  static Object getPoolKey(String h, int p, boolean sec)\n-  {\n-    StringBuilder buf = new StringBuilder(sec ? \"https://\" : \"http://\");\n-    buf.append(h);\n-    buf.append(':');\n-    buf.append(p);\n-    return buf.toString();\n-  }\n+  long timeLastUsed;\n \n   /**\n    * Set the connection pool that this HTTPConnection is a member of.\n@@ -360,7 +561,7 @@ static Object getPoolKey(String h, int p, boolean sec)\n    *\n    * @param p the pool.\n    */\n-  void setPool(LinkedHashMap p)\n+  void setPool(Pool p)\n   {\n     pool = p;\n   }\n@@ -374,25 +575,20 @@ void release()\n   {\n     if (pool != null)\n       {\n-        synchronized (pool)\n+        useCount++;\n+        pool.put(this);\n+        \n+      }\n+    else\n+      {\n+        // If there is no pool, just close.\n+        try\n           {\n-            useCount++;\n-            Object key = HTTPConnection.getPoolKey(hostname, port, secure);\n-            pool.put(key, this);\n-            while (pool.size() >= HTTPURLConnection.maxConnections)\n-              {\n-                // maxConnections must always be >= 1\n-                Object lru = pool.keySet().iterator().next();\n-                HTTPConnection c = (HTTPConnection)pool.remove(lru);\n-                try\n-                  {\n-                    c.closeConnection();\n-                  }\n-                catch (IOException ioe)\n-                  {\n-                      // Ignore it.  We are just cleaning up.\n-                  }\n-              }\n+            closeConnection();\n+          }\n+        catch (IOException ioe)\n+          {\n+            // Ignore it.  We are just cleaning up.\n           }\n       }\n   }"}, {"sha": "5c2af9eb7f66cc13a4c1065669eb27d3fd2af1c4", "filename": "libjava/classpath/gnu/java/net/protocol/http/HTTPURLConnection.java", "status": "modified", "additions": 73, "deletions": 113, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPURLConnection.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* HTTPURLConnection.java --\n-   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,18 +38,20 @@\n \n package gnu.java.net.protocol.http;\n \n+import gnu.classpath.SystemProperties;\n+\n import java.io.ByteArrayOutputStream;\n import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.net.ProtocolException;\n import java.net.URL;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n import java.security.cert.Certificate;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.Map;\n@@ -70,13 +72,6 @@\n   extends HttpsURLConnection\n   implements HandshakeCompletedListener\n {\n-\n-  /**\n-   * Pool of reusable connections, used if keepAlive is true.\n-   */\n-  private static final LinkedHashMap connectionPool = new LinkedHashMap();\n-  static int maxConnections;\n-\n   /*\n    * The underlying connection.\n    */\n@@ -108,38 +103,23 @@ public HTTPURLConnection(URL url)\n   {\n     super(url);\n     requestHeaders = new Headers();\n-    AccessController.doPrivileged(this.new GetHTTPPropertiesAction());\n-  }\n-\n-  class GetHTTPPropertiesAction\n-    implements PrivilegedAction\n-  {\n-\n-    public Object run()\n-    {\n-      proxyHostname = System.getProperty(\"http.proxyHost\");\n-      if (proxyHostname != null && proxyHostname.length() > 0)\n-        {\n-          String port = System.getProperty(\"http.proxyPort\");\n-          if (port != null && port.length() > 0)\n-            {\n-              proxyPort = Integer.parseInt(port);\n-            }\n-          else\n-            {\n-              proxyHostname = null;\n-              proxyPort = -1;\n-            }\n-        }\n-      agent = System.getProperty(\"http.agent\");\n-      String ka = System.getProperty(\"http.keepAlive\");\n-      keepAlive = !(ka != null && \"false\".equals(ka));\n-      String mc = System.getProperty(\"http.maxConnections\");\n-      maxConnections = (mc != null && mc.length() > 0) ?\n-        Math.max(Integer.parseInt(mc), 1) : 5;\n-      return null;\n-    }\n-\n+    proxyHostname = SystemProperties.getProperty(\"http.proxyHost\");\n+    if (proxyHostname != null && proxyHostname.length() > 0)\n+      {\n+        String port = SystemProperties.getProperty(\"http.proxyPort\");\n+        if (port != null && port.length() > 0)\n+          {\n+            proxyPort = Integer.parseInt(port);\n+          }\n+        else\n+          {\n+            proxyHostname = null;\n+            proxyPort = -1;\n+          }\n+      }\n+    agent = SystemProperties.getProperty(\"http.agent\");\n+    String ka = SystemProperties.getProperty(\"http.keepAlive\");\n+    keepAlive = !(ka != null && \"false\".equals(ka));\n   }\n \n   public void connect()\n@@ -254,8 +234,24 @@ public Credentials getCredentials(String realm, int attempts)\n               }\n           }\n         \n-        if (response.getCodeClass() == 3 && getInstanceFollowRedirects())\n+        if (response.isRedirect() && getInstanceFollowRedirects())\n           {\n+\t    // Read the response body, if there is one.  If the\n+\t    // redirect points us back at the same server, we will use\n+\t    // the cached connection, so we must make sure there is no\n+\t    // pending data in it.\n+            InputStream body = response.getBody();\n+\t    if (body != null)\n+\t      {\n+\t\tbyte[] ignore = new byte[1024];\n+\t\twhile (true)\n+\t\t  {\n+\t\t    int n = body.read(ignore, 0, ignore.length);\n+\t\t    if (n == -1)\n+\t\t      break;\n+\t\t  }\n+\t      }\n+\n             // Follow redirect\n             String location = response.getHeader(\"Location\");\n \t    if (location != null)\n@@ -333,16 +329,13 @@ else if (location.length() > 0)\n           {\n             responseSink = response.getBody();\n             \n-            if (response.getCode() == 404)\n-\t      {\n-\t\terrorSink = responseSink;\n-\t\tthrow new FileNotFoundException(url.toString());\n-\t      }\n+            if (response.isError())\n+\t      errorSink = responseSink;\n           }\n       }\n     while (retry);\n     connected = true;\n-  }\n+  }  \n \n   /**\n    * Returns a connection, from the pool if necessary.\n@@ -353,16 +346,7 @@ HTTPConnection getConnection(String host, int port, boolean secure)\n     HTTPConnection connection;\n     if (keepAlive)\n       {\n-        Object key = HTTPConnection.getPoolKey(host, port, secure);\n-        synchronized (connectionPool)\n-          {\n-            connection = (HTTPConnection) connectionPool.remove(key);\n-            if (connection == null)\n-              {\n-                connection = new HTTPConnection(host, port, secure);\n-                connection.setPool(connectionPool);\n-              }\n-          }\n+        connection = HTTPConnection.Pool.instance.get(host, port, secure);\n       }\n     else\n       {\n@@ -427,30 +411,32 @@ public void setRequestMethod(String method)\n \n   public String getRequestProperty(String key)\n   {\n+    if (key == null)\n+      return null;\n+    \n     return requestHeaders.getValue(key);\n   }\n \n   public Map getRequestProperties()\n   {\n-    return requestHeaders;\n+    if (connected)\n+      throw new IllegalStateException(\"Already connected\");\n+    \n+    Map m = requestHeaders.getAsMap();\n+    return Collections.unmodifiableMap(m);\n   }\n \n   public void setRequestProperty(String key, String value)\n   {\n+    super.setRequestProperty(key, value);\n+    \n     requestHeaders.put(key, value);\n   }\n \n   public void addRequestProperty(String key, String value)\n   {\n-    String old = requestHeaders.getValue(key);\n-    if (old == null)\n-      {\n-        requestHeaders.put(key, value);\n-      }\n-    else\n-      {\n-        requestHeaders.put(key, old + \",\" + value);\n-      }\n+    super.addRequestProperty(key, value);\n+    requestHeaders.addValue(key, value);\n   }\n \n   public OutputStream getOutputStream()\n@@ -493,6 +479,17 @@ public InputStream getInputStream()\n       {\n         throw new ProtocolException(\"doInput is false\");\n       }\n+    \n+    if (response.isError())\n+      {\n+        int code = response.getCode();\n+        if (code == 404 || code == 410)\n+          throw new FileNotFoundException(url.toString());\n+      \n+        throw new IOException(\"Server returned HTTP response code \" + code\n+                              + \" for URL \" + url.toString());\n+      }\n+    \n     return responseSink;\n   }\n \n@@ -514,17 +511,9 @@ public Map getHeaderFields()\n             return null;\n           }\n       }\n-    Headers headers = response.getHeaders();\n-    LinkedHashMap ret = new LinkedHashMap();\n-    ret.put(null, Collections.singletonList(getStatusLine(response)));\n-    for (Iterator i = headers.entrySet().iterator(); i.hasNext(); )\n-      {\n-        Map.Entry entry = (Map.Entry) i.next();\n-        String key = (String) entry.getKey();\n-        String value = (String) entry.getValue();\n-        ret.put(key, Collections.singletonList(value));\n-      }\n-    return Collections.unmodifiableMap(ret);\n+    Map m = response.getHeaders().getAsMap();\n+    m.put(null, Collections.singletonList(getStatusLine(response)));\n+    return Collections.unmodifiableMap(m);\n   }\n \n   String getStatusLine(Response response)\n@@ -552,20 +541,7 @@ public String getHeaderField(int index)\n       {\n         return getStatusLine(response);\n       }\n-    Iterator i = response.getHeaders().entrySet().iterator();\n-    Map.Entry entry;\n-    int count = 1;\n-    do\n-      {\n-        if (!i.hasNext())\n-          {\n-            return null;\n-          }\n-        entry = (Map.Entry) i.next();\n-        count++;\n-      }\n-    while (count <= index);\n-    return (String) entry.getValue();\n+    return response.getHeaders().getHeaderValue(index - 1);\n   }\n \n   public String getHeaderFieldKey(int index)\n@@ -581,24 +557,8 @@ public String getHeaderFieldKey(int index)\n             return null;\n           }\n       }\n-    if (index == 0)\n-      {\n-        return null;\n-      }\n-    Iterator i = response.getHeaders().entrySet().iterator();\n-    Map.Entry entry;\n-    int count = 1;\n-    do\n-      {\n-        if (!i.hasNext())\n-          {\n-            return null;\n-          }\n-        entry = (Map.Entry) i.next();\n-        count++;\n-      }\n-    while (count <= index);\n-    return (String) entry.getKey();\n+    // index of zero is the status line.\n+    return response.getHeaders().getHeaderName(index - 1);\n   }\n \n   public String getHeaderField(String name)\n@@ -614,7 +574,7 @@ public String getHeaderField(String name)\n             return null;\n           }\n       }\n-    return (String) response.getHeader(name);\n+    return response.getHeader(name);\n   }\n \n   public long getHeaderFieldDate(String name, long def)"}, {"sha": "b42faaa315de21e81ac2e8025a5105653d0ff017", "filename": "libjava/classpath/gnu/java/net/protocol/http/Headers.java", "status": "modified", "additions": 158, "deletions": 125, "changes": 283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* Headers.java --\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,125 +44,75 @@\n import java.io.InputStream;\n import java.text.DateFormat;\n import java.text.ParseException;\n-import java.util.Collection;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n-import java.util.LinkedHashSet;\n import java.util.Map;\n import java.util.Set;\n \n /**\n- * A collection of HTTP header names and associated values.\n- * Retrieval of values is case insensitive. An iteration over the keys\n+ * A collection of HTTP header names and associated values.  The\n+ * values are {@link ArrayList ArrayLists} of Strings.  Retrieval of\n+ * values is case insensitive. An iteration over the collection\n  * returns the header names in the order they were received.\n  *\n  * @author Chris Burdess (dog@gnu.org)\n+ * @author David Daney (ddaney@avtrex.com)\n  */\n-public class Headers\n-  extends LinkedHashMap\n+class Headers\n {\n-\n+  /**\n+   * A list of HeaderElements\n+   *\n+   */\n+  private final ArrayList headers = new ArrayList();\n+  \n   static final DateFormat dateFormat = new HTTPDateFormat();\n \n-  static class Header\n+  static class HeaderElement\n   {\n+    String name;\n+    String value;\n \n-    final String name;\n-\n-    Header(String name)\n+    HeaderElement(String name, String value)\n     {\n-      if (name == null || name.length() == 0)\n-        {\n-          throw new IllegalArgumentException(name);\n-        }\n       this.name = name;\n+      this.value = value;\n     }\n-\n-    public int hashCode()\n-    {\n-      return name.toLowerCase().hashCode();\n-    }\n-\n-    public boolean equals(Object other)\n-    {\n-      if (other instanceof Header)\n-        {\n-          return ((Header) other).name.equalsIgnoreCase(name);\n-        }\n-      return false;\n-    }\n-\n-    public String toString()\n-    {\n-      return name;\n-    }\n-    \n-  }\n-\n-  static class HeaderEntry\n-    implements Map.Entry\n-  {\n-\n-    final Map.Entry entry;\n-\n-    HeaderEntry(Map.Entry entry)\n-    {\n-      this.entry = entry;\n-    }\n-\n-    public Object getKey()\n-    {\n-      return ((Header) entry.getKey()).name;\n-    }\n-\n-    public Object getValue()\n-    {\n-      return entry.getValue();\n-    }\n-\n-    public Object setValue(Object value)\n-    {\n-      return entry.setValue(value);\n-    }\n-\n-    public int hashCode()\n-    {\n-      return entry.hashCode();\n-    }\n-\n-    public boolean equals(Object other)\n-    {\n-      return entry.equals(other);\n-    }\n-\n-    public String toString()\n-    {\n-      return getKey().toString() + \"=\" + getValue();\n-    }\n-    \n   }\n \n   public Headers()\n   {\n   }\n \n-  public boolean containsKey(Object key)\n-  {\n-    return super.containsKey(new Header((String) key));\n-  }\n-\n-  public Object get(Object key)\n+  /**\n+   * Return an Iterator over this collection of headers.\n+   * Iterator.getNext() returns objects of type {@link HeaderElement}.\n+   *\n+   * @return the Iterator.\n+   */\n+  Iterator iterator()\n   {\n-    return super.get(new Header((String) key));\n+    return headers.iterator();\n   }\n-\n+  \n   /**\n-   * Returns the value of the specified header as a string.\n+   * Returns the value of the specified header as a string.  If\n+   * multiple values are present, the last one is returned.\n    */\n   public String getValue(String header)\n   {\n-    return (String) super.get(new Header(header));\n+    for (int i = headers.size() - 1; i >= 0; i--)\n+      {\n+        HeaderElement e = (HeaderElement)headers.get(i);\n+        if (e.name.equalsIgnoreCase(header))\n+          {\n+            return e.value;\n+          }\n+      }\n+    return null;\n   }\n \n   /**\n@@ -228,51 +178,62 @@ public Date getDateValue(String header)\n       }\n   }\n \n-  public Object put(Object key, Object value)\n-  {\n-    return super.put(new Header((String) key), value);\n-  }\n-\n-  public Object remove(Object key)\n+  /**\n+   * Add a header to this set of headers.  If there is an existing\n+   * header with the same name, it is discarded.\n+   *\n+   * @param name the header name\n+   * @param value the header value\n+   *\n+   * @see #addValue\n+   */\n+  public void put(String name, String value)\n   {\n-    return super.remove(new Header((String) key));\n+    remove(name);\n+    headers.add(headers.size(), new HeaderElement(name, value));\n   }\n \n-  public void putAll(Map t)\n+  /**\n+   * Add all headers from a set of headers to this set.  If any of the\n+   * headers to be added have the same name as existing headers, the\n+   * existing headers will be discarded.\n+   *\n+   * @param o the headers to be added\n+   */\n+  public void putAll(Headers o)\n   {\n-    for (Iterator i = t.keySet().iterator(); i.hasNext(); )\n+    for (Iterator it = o.iterator(); it.hasNext(); )\n       {\n-        String key = (String) i.next();\n-        String value = (String) t.get(key);\n-        put(key, value);\n+        HeaderElement e = (HeaderElement)it.next();\n+        remove(e.name);\n       }\n-  }\n-  \n-  public Set keySet()\n-  {\n-    Set keys = super.keySet();\n-    Set ret = new LinkedHashSet();\n-    for (Iterator i = keys.iterator(); i.hasNext(); )\n+    for (Iterator it = o.iterator(); it.hasNext(); )\n       {\n-        ret.add(((Header) i.next()).name);\n+        HeaderElement e = (HeaderElement)it.next();\n+        addValue(e.name, e.value);\n       }\n-    return ret;\n   }\n \n-  public Set entrySet()\n+  /**\n+   * Remove a header from this set of headers.  If there is more than\n+   * one instance of a header of the given name, they are all removed.\n+   *\n+   * @param name the header name\n+   */\n+  public void remove(String name)\n   {\n-    Set entries = super.entrySet();\n-    Set ret = new LinkedHashSet();\n-    for (Iterator i = entries.iterator(); i.hasNext(); )\n+    for (Iterator it = headers.iterator(); it.hasNext(); )\n       {\n-        Map.Entry entry = (Map.Entry) i.next();\n-        ret.add(new HeaderEntry(entry));\n+        HeaderElement e = (HeaderElement)it.next();\n+        if (e.name.equalsIgnoreCase(name))\n+          it.remove();\n       }\n-    return ret;\n   }\n \n   /**\n-   * Parse the specified input stream, adding headers to this collection.\n+   * Parse the specified InputStream, adding headers to this collection.\n+   *\n+   * @param in the InputStream.\n    */\n   public void parse(InputStream in)\n     throws IOException\n@@ -334,18 +295,90 @@ public void parse(InputStream in)\n       }\n   }\n   \n-  private void addValue(String name, String value)\n+\n+  /**\n+   * Add a header to this set of headers.  If there is an existing\n+   * header with the same name, it is not effected.\n+   *\n+   * @param name the header name\n+   * @param value the header value\n+   *\n+   * @see #put\n+   */\n+  public void addValue(String name, String value)\n+  {\n+    headers.add(headers.size(), new HeaderElement(name, value));\n+  }\n+\n+  /**\n+   * Get a new Map containing all the headers.  The keys of the Map\n+   * are Strings (the header names).  The values of the Map are\n+   * unmodifiable Lists containing Strings (the header values).\n+   *\n+   * <p>\n+   * \n+   * The returned map is modifiable.  Changing it will not effect this\n+   * collection of Headers in any way.\n+   *\n+   * @return a Map containing all the headers.\n+   */\n+  public Map getAsMap()\n   {\n-    Header key = new Header(name);\n-    String old = (String) super.get(key);\n-    if (old == null)\n+    LinkedHashMap m = new LinkedHashMap();\n+    for (Iterator it = headers.iterator(); it.hasNext(); )\n       {\n-        super.put(key, value);\n+        HeaderElement e = (HeaderElement)it.next();\n+        ArrayList l = (ArrayList)m.get(e.name);\n+        if (l == null)\n+          {\n+            l = new ArrayList(1);\n+            l.add(e.value);\n+            m.put(e.name, l);\n+          }\n+        else\n+          l.add(0, e.value);\n       }\n-    else\n+    for (Iterator it = m.entrySet().iterator(); it.hasNext(); )\n       {\n-        super.put(key, old + \", \" + value);\n+        Map.Entry me = (Map.Entry)it.next();\n+        ArrayList l = (ArrayList)me.getValue();\n+        me.setValue(Collections.unmodifiableList(l));\n       }\n+    return m;\n+  }\n+  \n+  /**\n+   * Get the name of the Nth header.\n+   *\n+   * @param i the header index.\n+   *\n+   * @return the header name.\n+   *\n+   * @see #getHeaderValue\n+   */\n+  public String getHeaderName(int i)\n+  {\n+    if (i >= headers.size() || i < 0)\n+      return null;\n+    \n+    return ((HeaderElement)headers.get(i)).name;\n+  }\n+\n+  /**\n+   * Get the value of the Nth header.\n+   *\n+   * @param i the header index.\n+   *\n+   * @return the header value.\n+   *\n+   * @see #getHeaderName\n+   */\n+  public String getHeaderValue(int i)\n+  {\n+    if (i >= headers.size() || i < 0)\n+      return null;\n+    \n+    return ((HeaderElement)headers.get(i)).value;\n   }\n   \n }"}, {"sha": "e15ec4182a4ea4235d6a18433a25d27e22922b8a", "filename": "libjava/classpath/gnu/java/net/protocol/http/Request.java", "status": "modified", "additions": 16, "deletions": 42, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* Request.java --\n-   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -93,11 +93,6 @@\n    */\n   protected RequestBodyWriter requestBodyWriter;\n \n-  /**\n-   * Request body negotiation threshold for 100-continue expectations.\n-   */\n-  protected int requestBodyNegotiationThreshold;\n-\n   /**\n    * Map of response header handlers.\n    */\n@@ -127,7 +122,6 @@ protected Request(HTTPConnection connection, String method,\n     this.path = path;\n     requestHeaders = new Headers();\n     responseHeaderHandlers = new HashMap();\n-    requestBodyNegotiationThreshold = 4096;\n   }\n \n   /**\n@@ -250,21 +244,6 @@ public void setAuthenticator(Authenticator authenticator)\n     this.authenticator = authenticator;\n   }\n \n-  /**\n-   * Sets the request body negotiation threshold.\n-   * If this is set, it determines the maximum size that the request body\n-   * may be before body negotiation occurs(via the\n-   * <code>100-continue</code> expectation). This ensures that a large\n-   * request body is not sent when the server wouldn't have accepted it\n-   * anyway.\n-   * @param threshold the body negotiation threshold, or &lt;=0 to disable\n-   * request body negotation entirely\n-   */\n-  public void setRequestBodyNegotiationThreshold(int threshold)\n-  {\n-    requestBodyNegotiationThreshold = threshold;\n-  }\n-\n   /**\n    * Dispatches this request.\n    * A request can only be dispatched once; calling this method a second\n@@ -291,10 +270,10 @@ public Response dispatch()\n     if (requestBodyWriter != null)\n       {\n         contentLength = requestBodyWriter.getContentLength();\n-        if (contentLength > requestBodyNegotiationThreshold)\n+        String expect = getHeader(\"Expect\");\n+        if (expect != null && expect.equals(\"100-continue\"))\n           {\n             expectingContinue = true;\n-            setHeader(\"Expect\", \"100-continue\");\n           }\n         else\n           {\n@@ -323,12 +302,10 @@ public Response dispatch()\n             String line = method + ' ' + requestUri + ' ' + version + CRLF;\n             out.write(line.getBytes(US_ASCII));\n             // Request headers\n-            for (Iterator i = requestHeaders.keySet().iterator();\n-                 i.hasNext(); )\n+            for (Iterator i = requestHeaders.iterator(); i.hasNext(); )\n               {\n-                String name =(String) i.next();\n-                String value =(String) requestHeaders.get(name);\n-                line = name + HEADER_SEP + value + CRLF;\n+                Headers.HeaderElement elt = (Headers.HeaderElement)i.next();\n+                line = elt.name + HEADER_SEP + elt.value + CRLF;\n                 out.write(line.getBytes(US_ASCII));\n               }\n             out.write(CRLF.getBytes(US_ASCII));\n@@ -459,23 +436,17 @@ Response readResponse(InputStream in)\n \n   void notifyHeaderHandlers(Headers headers)\n   {\n-    for (Iterator i = headers.entrySet().iterator(); i.hasNext(); )\n+    for (Iterator i = headers.iterator(); i.hasNext(); )\n       {\n-        Map.Entry entry = (Map.Entry) i.next();\n-        String name =(String) entry.getKey();\n+        Headers.HeaderElement entry = (Headers.HeaderElement) i.next();\n         // Handle Set-Cookie\n-        if (\"Set-Cookie\".equalsIgnoreCase(name))\n-          {\n-            String value = (String) entry.getValue();\n-            handleSetCookie(value);\n-          }\n+        if (\"Set-Cookie\".equalsIgnoreCase(entry.name))\n+            handleSetCookie(entry.value);\n+\n         ResponseHeaderHandler handler =\n-          (ResponseHeaderHandler) responseHeaderHandlers.get(name);\n+          (ResponseHeaderHandler) responseHeaderHandlers.get(entry.name);\n         if (handler != null)\n-          {\n-            String value = (String) entry.getValue();\n-            handler.setValue(value);\n-          }\n+            handler.setValue(entry.value);\n       }\n   }\n \n@@ -528,6 +499,9 @@ else if (\"deflate\".equals(contentCoding))\n             throw new ProtocolException(\"Unsupported Content-Encoding: \" +\n                                         contentCoding);\n           }\n+\t// Remove the Content-Encoding header because the content is\n+\t// no longer compressed.\n+\tresponseHeaders.remove(\"Content-Encoding\");\n       }\n     return in;\n   }"}, {"sha": "76fac9344f564e380e6707ff031d0a41cb229437", "filename": "libjava/classpath/gnu/java/net/protocol/http/Response.java", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponse.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponse.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponse.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* Response.java --\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -188,6 +188,28 @@ public Date getDateHeader(String name)\n   {\n     return headers.getDateValue(name);\n   }\n+  \n+  /**\n+   * Tests whether this response indicates a redirection.\n+   * \n+   * @return <code>true</code> if, <code>false</code> otherwise.\n+   */\n+  public boolean isRedirect()\n+  {\n+    return (code != 304 && getCodeClass() == 3);\n+  }\n+  \n+  /**\n+   * Tests whether this response indicates an error.\n+   * Errors are the response codes <code>4xx</code> - Client error and\n+   * <code>5xx</code> - Server error.\n+   * \n+   * @return <code>true</code> if, <code>false</code> otherwise.\n+   */\n+  public boolean isError()\n+  {\n+    return (getCodeClass() == 4 || getCodeClass() == 5);\n+  }\n \n   /**\n    * Returns an InputStream that returns the body of the response."}, {"sha": "4c5261da160a73f1a865743fac1bfb635a3fad1a", "filename": "libjava/classpath/gnu/java/net/protocol/http/ResponseHeaderHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponseHeaderHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponseHeaderHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FResponseHeaderHandler.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Callback interface for objects that wish to be notified of response\n  * header values.\n- * @see Request#setHeaderHandler(String)\n+ * @see Request#setResponseHeaderHandler(String, ResponseHeaderHandler)\n  *\n  * @author Chris Burdess (dog@gnu.org)\n  */"}, {"sha": "41c5d6dcf6934433d7854069eb6e2d4788fbadb9", "filename": "libjava/classpath/gnu/java/net/protocol/jar/Connection.java", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* Connection - jar url connection for java.net\n-   Copyright (C) 1999, 2002, 2003, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2002, 2003, 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,6 +39,7 @@\n package gnu.java.net.protocol.jar;\n \n import java.io.File;\n+import java.io.FileNotFoundException;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -145,7 +146,7 @@ public synchronized void connect() throws IOException\n         jar_entry = (JarEntry) jar_file.getEntry (entry_name);\n \n         if(jar_entry == null)\n-          throw new IOException (\"No entry for \" + entry_name + \" exists.\");\n+          throw new FileNotFoundException(\"No entry for \" + entry_name + \" exists.\");\n       }\n \n     connected = true;\n@@ -159,9 +160,6 @@ public InputStream getInputStream() throws IOException\n     if (! doInput)\n       throw new ProtocolException(\"Can't open InputStream if doInput is false\");\n     \n-    if (jar_entry == null)\n-      throw new IOException (jar_url + \" couldn't be found.\");\n-    \n     return jar_file.getInputStream (jar_entry);\n   }\n "}, {"sha": "671ae5bb15f79d092fa870b4ca31d1d5e5a5ef28", "filename": "libjava/classpath/gnu/java/nio/channels/FileChannelImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -527,7 +527,7 @@ public FileChannel position (long newPosition)\n     throws IOException\n   {\n     if (newPosition < 0)\n-      throw new IllegalArgumentException (\"newPostition: \" + newPosition);\n+      throw new IllegalArgumentException (\"newPosition: \" + newPosition);\n \n     if (!isOpen ())\n       throw new ClosedChannelException ();"}, {"sha": "ad3b1da84719573e2eb98d959a0f145f447cd6c9", "filename": "libjava/classpath/gnu/java/nio/charset/Provider.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -81,7 +81,8 @@ public final class Provider extends CharsetProvider\n    */\n   private boolean extendedLoaded;\n \n-  private Provider ()\n+  // Package private to avoid an accessor method in PrivilegedAction below.\n+  Provider ()\n   {\n     extendedLoaded = false;\n     canonicalNames = new HashMap ();"}, {"sha": "f76d3fd5e1aa0070a4e15ff5e359de8950ad958a", "filename": "libjava/classpath/gnu/java/nio/charset/iconv/IconvDecoder.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvDecoder.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -44,7 +44,6 @@\n import java.nio.CharBuffer;\n import java.nio.charset.Charset;\n import java.nio.charset.CharsetDecoder;\n-import java.nio.charset.CharsetEncoder;\n import java.nio.charset.CoderResult;\n \n final class IconvDecoder extends CharsetDecoder"}, {"sha": "47446f98fd4993e38842e8e32487692b9b90eff4", "filename": "libjava/classpath/gnu/java/nio/charset/iconv/IconvEncoder.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvEncoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvEncoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvEncoder.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -43,7 +43,6 @@\n import java.nio.ByteBuffer;\n import java.nio.CharBuffer;\n import java.nio.charset.Charset;\n-import java.nio.charset.CharsetDecoder;\n import java.nio.charset.CharsetEncoder;\n import java.nio.charset.CoderResult;\n "}, {"sha": "cf9fc56a2f57a4922560ec8e2ed6beeef1092a6c", "filename": "libjava/classpath/gnu/java/nio/charset/iconv/IconvProvider.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvProvider.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -40,8 +40,6 @@\n \n import java.nio.charset.Charset;\n import java.nio.charset.spi.CharsetProvider;\n-import java.util.Collections;\n-import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Vector;\n "}, {"sha": "a7bc0940ed0841900d0d076446a48fb8aa0a3e78", "filename": "libjava/classpath/gnu/java/rmi/dgc/DGCImpl.java", "status": "modified", "additions": 127, "deletions": 51, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fdgc%2FDGCImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fdgc%2FDGCImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fdgc%2FDGCImpl.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -8,7 +8,7 @@\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n- \n+\n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n@@ -49,70 +49,146 @@\n import java.util.Hashtable;\n \n /**\n-  * I let DGCImpl to extend UnicastServerRef, but not \n-  * UnicastRemoteObject, because UnicastRemoteObject must\n-  * exportObject automatically.\n-  */\n+ * The DGC implementation is used for the server side during the distributed\n+ * garbage collection. This interface contains the two methods: dirty and clean.\n+ * A dirty call is made when a remote reference is unmarshaled in a client. A\n+ * corresponding clean call is made by client it no longer uses that remote\n+ * reference. A reference to a remote object is also automatically released\n+ * after so called lease period that starts after the dirty call is received. It\n+ * is the client's responsibility to renew the leases, by making additional\n+ * dirty calls before such leases expire.\n+ */\n public class DGCImpl\n-    extends UnicastServerRef implements DGC {\n-\n-    private static final long LEASE_VALUE = 600000L;\n-    // leaseCache caches a LeaseRecord associated with a vmid\n-    private Hashtable leaseCache = new Hashtable();\n-\n-public DGCImpl() throws RemoteException {\n-    \tsuper(new ObjID(ObjID.DGC_ID), 0, RMISocketFactory.getSocketFactory());\n-}\n-\n-public Lease dirty(ObjID[] ids, long sequenceNum, Lease lease) throws RemoteException {\n-\tVMID vmid = lease.getVMID();\n-    \tif (vmid == null)\n-    \t    vmid = new VMID();\n-    \tlong leaseValue = LEASE_VALUE;\n-    \t//long leaseValue = lease.getValue();\n+    extends UnicastServerRef\n+    implements DGC\n+{\n+  /*\n+   * The DGCImpl extends UnicastServerRef and not UnicastRemoteObject, because\n+   * UnicastRemoteObject must exportObject automatically.\n+   */\n+  \n+  /**\n+   * This defauld lease value is used if the lease value, passed to the\n+   * {@link #dirty} is equal to zero.\n+   */\n+  static final long LEASE_VALUE = 600000L;\n+\n+  // leaseCache caches a LeaseRecord associated with a vmid\n+  Hashtable leaseCache = new Hashtable();\n+\n+  public DGCImpl() throws RemoteException\n+  {\n+    super(new ObjID(ObjID.DGC_ID), 0, RMISocketFactory.getSocketFactory());\n+  }\n+\n+  /**\n+   * Mark the given objects referecnes as used on the client side.\n+   * \n+   * @param ids the ids of the used objects.\n+   * @param sequenceNum the number of the call (used to detect and discard late\n+   *          calls).\n+   * @param lease the requested lease\n+   * @return the granted lease\n+   */\n+  public Lease dirty(ObjID[] ids, long sequenceNum, Lease lease)\n+      throws RemoteException\n+  {\n+    VMID vmid = lease.getVMID();\n+    if (vmid == null)\n+      vmid = new VMID();\n+\n+    long leaseValue = lease.getValue();\n+    if (leaseValue <= 0)\n+      leaseValue = LEASE_VALUE;\n+\n     lease = new Lease(vmid, leaseValue);\n-        synchronized(leaseCache){\n-            LeaseRecord lr = (LeaseRecord)leaseCache.get(vmid);\n-            if (lr != null)\n-                lr.reset(leaseValue);\n-            else{\n-                lr = new LeaseRecord(vmid, leaseValue);\n-                leaseCache.put(vmid, lr);\n-            }\n-        }\n-        \n-\treturn (lease);\n-}\n-\n-public void clean(ObjID[] ids, long sequenceNum, VMID vmid, boolean strong) throws RemoteException {\n-  // Not implemented\n-}\n+    LeaseRecord lr = (LeaseRecord) leaseCache.get(vmid);\n+    if (lr != null)\n+      lr.reset(leaseValue);\n+    else\n+      {\n+        lr = new LeaseRecord(vmid, leaseValue, ids);\n+        leaseCache.put(vmid, lr);\n+      }\n     \n+    return (lease);\n+  }\n+\n+  /**\n+   * Mark the given objects as no longer used on the client side.\n+   * \n+   * @param ids the ids of the objects that are no longer used.\n+   * @param sequenceNum the number of the call (used to detect and discard late\n+   *          calls)\n+   * @param vmid the VMID of the client.\n+   * @param strong make the \"strong\" clean call.\n+   */\n+  public void clean(ObjID[] ids, long sequenceNum, VMID vmid, boolean strong)\n+      throws RemoteException\n+  {\n+    // Not implemented\n+    // TODO implement\n+  }\n+\n   /**\n    * LeaseRecord associates a vmid to expireTime.\n    */\n-  private static class LeaseRecord{\n-    private VMID vmid;\n-    private long expireTime;\n+  static class LeaseRecord\n+  {\n+    /**\n+     * The lease id.\n+     */\n+    final VMID vmid;\n+\n+    /**\n+     * The lease expiration time.\n+     */ \n+    long expireTime;\n     \n-    LeaseRecord(VMID vmid, long leaseValue){\n+    /**\n+     * The array of ObjeID's that must be protected from being garbage\n+     * collected.\n+     */\n+    final ObjID [] objects;\n+\n+    /**\n+     * Create the new lease record.\n+     * \n+     * @param vmid lease id.\n+     * @param leaseValue lease value\n+     */\n+    LeaseRecord(VMID vmid, long leaseValue, ObjID [] an_objects)\n+    {\n       this.vmid = vmid;\n       reset(leaseValue);\n+      objects = an_objects;\n     }\n-    \n-    // reset expireTime\n-    void reset(long leaseValue){\n+\n+    /**\n+     * Prolong the expiration time till current time + passed value\n+     * \n+     * @param leaseValue the value after that (since the current moment)\n+     * the lease should expire in the future.\n+     */\n+    void reset(long leaseValue)\n+    {\n       long l = System.currentTimeMillis();\n       expireTime = l + leaseValue;\n     }\n-\n-    boolean isExpired(){\n+    \n+    /**\n+     * Check if the lease has been expired.\n+     * \n+     * @return true if the lease has been expired, false if it is still valid.\n+     */\n+    boolean isExpired()\n+    {\n       long l = System.currentTimeMillis();\n-      if ( l > expireTime)\n-\treturn true;\n+      if (l > expireTime)\n+        return true;\n       return false;\n     }\n-        \n-  } //End of LeaseRecord\n \n-} //End of DGCImpl\n+  } // End of LeaseRecord\n+\n+} // End of DGCImpl"}, {"sha": "7dcca612ab2436947c44f0b5f13f8f8fd5357dab", "filename": "libjava/classpath/gnu/java/rmi/registry/RegistryImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fregistry%2FRegistryImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fregistry%2FRegistryImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fregistry%2FRegistryImpl.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -111,7 +111,7 @@ public static void version() {\n \t\t\t   + System.getProperty(\"java.vm.name\")\n \t\t\t   + \") \"\n \t\t\t   + System.getProperty(\"java.vm.version\"));\n-\tSystem.out.println(\"Copyright 2005 Free Software Foundation, Inc.\");\n+\tSystem.out.println(\"Copyright 2006 Free Software Foundation, Inc.\");\n \tSystem.out.println(\"This is free software; see the source for copying conditions.  There is NO\");\n \tSystem.out.println(\"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\");\n \tSystem.exit(0);"}, {"sha": "3d2e37d537751f77b30dfbd49855debc01b05c4a", "filename": "libjava/classpath/gnu/java/rmi/server/CombinedClassLoader.java", "status": "added", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FCombinedClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FCombinedClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FCombinedClassLoader.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,149 @@\n+/* CombinedClassLoader.java -- Multiple class loader support for proxy.\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.rmi.server;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Collection;\n+import java.util.Enumeration;\n+import java.util.Iterator;\n+import java.util.ArrayList;\n+\n+/**\n+ * This class supports the multiple class loaders to load the resources. It is\n+ * used for constructing proxy classes that implement interfaces, loaded by\n+ * the several different class loaders.\n+ * \n+ * @author Audrius Meskauskas (AudriusA@Bioinformatics.org) \n+ */\n+public class CombinedClassLoader extends ClassLoader\n+{\n+  /**\n+   * The class loader array.\n+   */\n+  ClassLoader[] loaders;\n+  \n+  /**\n+   * Create a new combined class loader that uses the given collection of\n+   * loaders to load the classes and resources. The loader order is equal to\n+   * the order, returned by the collection interator. The duplicate loaders\n+   * are discarded and the system class loader is added as the last loader.\n+   * \n+   * @param a_loaders the loadery collection (may contain duplicate instances\n+   * that will be discarded.\n+   */\n+  public CombinedClassLoader(Collection a_loaders)\n+  {\n+    ArrayList sLoaders = new ArrayList(a_loaders.size());\n+    \n+    Iterator iter = a_loaders.iterator();\n+    Object cl;\n+    while (iter.hasNext())\n+      {\n+        cl = iter.next();\n+        if (!sLoaders.contains(cl))\n+          sLoaders.add(iter.next());\n+      }\n+    \n+    loaders = new ClassLoader[sLoaders.size()];\n+\n+    for (int i = 0; i < loaders.length; i++)\n+      loaders[i] = (ClassLoader) sLoaders.get(i);\n+  }\n+\n+  /**\n+   * Find the class with the given name.\n+   */\n+  protected Class findClass(String name) throws ClassNotFoundException\n+  {\n+    for (int i = 0; i < loaders.length; i++)\n+      {\n+        try\n+          {\n+            return findClass(name);\n+          }\n+        catch (ClassNotFoundException e)\n+          {\n+            // try another.\n+          }\n+      }\n+    return super.findClass(name);\n+  }\n+\n+  /**\n+   * Find the library with the given name\n+   */\n+  protected String findLibrary(String name)\n+  {\n+    for (int i = 0; i < loaders.length; i++)\n+      {\n+        String lib = findLibrary(name);\n+        if (lib != null)\n+          return lib;\n+      }\n+    return super.findLibrary(name);\n+  }\n+\n+  /**\n+   * Find resource with the given name.\n+   */\n+  protected URL findResource(String name)\n+  {\n+    for (int i = 0; i < loaders.length; i++)\n+      {\n+        URL resource = findResource(name);\n+        if (resource != null)\n+          return resource;\n+      }\n+    return super.findResource(name);\n+  }\n+\n+  /**\n+   * Find resources with the given name.\n+   */\n+  protected Enumeration findResources(String name) throws IOException\n+  {\n+    for (int i = 0; i < loaders.length; i++)\n+      {\n+        Enumeration resource = findResources(name);\n+        if (resource != null)\n+          return resource;\n+      }\n+    return super.findResources(name);  }\n+}"}, {"sha": "e76535447be9a7984a98d5663f38b89732d7ab2e", "filename": "libjava/classpath/gnu/java/rmi/server/RMIObjectInputStream.java", "status": "modified", "additions": 44, "deletions": 20, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -46,6 +46,7 @@\n import java.lang.reflect.Proxy;\n import java.net.MalformedURLException;\n import java.rmi.server.RMIClassLoader;\n+import java.util.ArrayList;\n \n public class RMIObjectInputStream\n \textends ObjectInputStream {\n@@ -76,28 +77,51 @@ protected Object getAnnotation()\n     return readObject();\n }\n \t\n-protected Class resolveProxyClass(String intfs[])\n-        throws IOException, ClassNotFoundException\n-{\n-    String annotation = (String)getAnnotation();\n-\t\n+\n+  protected Class resolveProxyClass(String intfs[]) throws IOException,\n+      ClassNotFoundException\n+  {\n+    String annotation = (String) getAnnotation();\n+\n     Class clss[] = new Class[intfs.length];\n-    if(annotation == null)\n-        clss[0] = RMIClassLoader.loadClass(intfs[0]);\n-    else\n-        clss[0] = RMIClassLoader.loadClass(annotation, intfs[0]);\n-    \n-    //assume all interfaces can be loaded by the same classloader\n-    ClassLoader loader = clss[0].getClassLoader();\n+\n     for (int i = 0; i < intfs.length; i++)\n-        clss[i] = Class.forName(intfs[i], false, loader);\n-        \n-    try {\n-    return Proxy.getProxyClass(loader, clss);\n-\t} catch (IllegalArgumentException e) {\n-\t    throw new ClassNotFoundException(null, e);\n-\t}  \n-}\n+      {\n+        if (annotation == null)\n+          clss[i] = RMIClassLoader.loadClass(intfs[i]);\n+        else\n+          clss[i] = RMIClassLoader.loadClass(annotation, intfs[i]);\n+      }\n+    \n+    ClassLoader loader;\n+    \n+    if (clss.length > 0)\n+      {\n+        // Chain all class loaders (they may differ).\n+        ArrayList loaders = new ArrayList(intfs.length);\n+        ClassLoader cx;\n+        for (int i = 0; i < clss.length; i++)\n+          {\n+            cx = clss[i].getClassLoader();\n+            if (!loaders.contains(cx))\n+              {\n+                loaders.add(0, cx);\n+              }\n+          }\n+        loader = new CombinedClassLoader(loaders);\n+      }\n+    else\n+       loader = ClassLoader.getSystemClassLoader();\n+\n+    try\n+      {\n+        return Proxy.getProxyClass(loader, clss);\n+      }\n+    catch (IllegalArgumentException e)\n+      {\n+        throw new ClassNotFoundException(null, e);\n+      }\n+  }\n \n protected Object readValue(Class valueClass) throws IOException, ClassNotFoundException {\n     if(valueClass.isPrimitive()){"}, {"sha": "dcb12a53b82e05a1baf365cbc7d8fe2a74222ae7", "filename": "libjava/classpath/gnu/java/rmi/server/UnicastServerRef.java", "status": "modified", "additions": 410, "deletions": 240, "changes": 650, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServerRef.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServerRef.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FUnicastServerRef.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -1,5 +1,5 @@\n /* UnicastServerRef.java --\n-   Copyright (c) 1996, 1997, 1998, 1999, 2002, 2003, 2004\n+   Copyright (c) 1996, 1997, 1998, 1999, 2002, 2003, 2004, 2006\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -43,263 +43,433 @@\n import java.lang.reflect.Constructor;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n import java.rmi.Remote;\n import java.rmi.RemoteException;\n import java.rmi.server.ObjID;\n import java.rmi.server.RMIServerSocketFactory;\n+import java.rmi.server.RemoteObjectInvocationHandler;\n import java.rmi.server.RemoteRef;\n import java.rmi.server.RemoteServer;\n import java.rmi.server.RemoteStub;\n import java.rmi.server.ServerNotActiveException;\n-import java.rmi.server.ServerRef;\n import java.rmi.server.Skeleton;\n+import java.util.HashSet;\n import java.util.Hashtable;\n+import java.util.Iterator;\n \n public class UnicastServerRef\n-\textends UnicastRef \n-\timplements ServerRef{ //SHOULD implement ServerRef\n+    extends UnicastRef\n+{ \n+\n+  /**\n+   * Use GNU Classpath v 0.20 SVUID for interoperability\n+   */\n+  private static final long serialVersionUID = - 5585608108300801246L;\n+  \n+  /**\n+   * The class array, defining parameters of the jdk 1.2 RMI stub constructor. \n+   */\n+  private static final Class[] stubprototype = new Class[] { RemoteRef.class };\n+  \n+  /**\n+   * The exported remote object itself.\n+   */\n+  Remote myself; // save the remote object itself\n+  \n+  /**\n+   * The skeleton (if any), associated with the exported remote object.\n+   */\n+  private Skeleton skel;\n+  \n+  /**\n+   * The stub, associated with the exported remote object (may be proxy class).\n+   */\n+  private Remote stub;\n+  \n+  /**\n+   * The method table (RMI hash code to method) of the methods of the \n+   * exported object.\n+   */\n+  private Hashtable methods = new Hashtable();\n+\n+  /**\n+   * Used by serialization.\n+   */\n+  UnicastServerRef()\n+  {\n+  }\n+\n+  public UnicastServerRef(ObjID id, int port, RMIServerSocketFactory ssf)\n+      throws RemoteException\n+  {\n+    super(id);\n+    manager = UnicastConnectionManager.getInstance(port, ssf);\n+  }\n+  \n+  /**\n+   * Export the object and return its remote stub. The method tries to locate\n+   * existing stubs and skeletons. If this fails, the method instantiates the\n+   * proxy stub class.\n+   * \n+   * Stubs and skeletons are always ignored (even if present) if the \n+   * java.rmi.server.ignoreStubClasses property is set to true.\n+   * \n+   * @param obj the object being exported.\n+   * @return the stub (existing class or proxy) of the exported object.\n+   * @throws RemoteException if the export failed due any reason\n+   */\n+  public Remote exportObject(Remote obj) throws RemoteException\n+  {\n+    if (myself == null)\n+      {\n+        myself = obj;\n+        // Save it to server manager, to let client calls in the same VM to\n+        // issue\n+        // local call\n+        manager.serverobj = obj;\n+\n+        String ignoreStubs;\n+        \n+        ClassLoader loader =obj.getClass().getClassLoader(); \n+        \n+        // Stubs are always searched for the bootstrap classes that may have\n+        // obsolete pattern and may still need also skeletons.\n+        if (loader==null)\n+          ignoreStubs = \"false\";\n+        else\n+          ignoreStubs = System.getProperty(\"java.rmi.server.ignoreStubClasses\", \n+                                           \"false\");\n+        \n+        if (! ignoreStubs.equals(\"true\"))\n+          {\n+            // Find and install the stub\n+            Class cls = obj.getClass();\n+\n+            // where ist the _Stub? (check superclasses also)\n+            Class expCls = expCls = findStubSkelClass(cls);\n+\n+            if (expCls != null)\n+              {\n+                stub = (RemoteStub) getHelperClass(expCls, \"_Stub\");\n+                // Find and install the skeleton (if there is one)\n+                skel = (Skeleton) getHelperClass(expCls, \"_Skel\");\n+              }\n+          }\n+\n+        if (stub == null)\n+          stub = createProxyStub(obj.getClass(), this);\n+\n+        // Build hash of methods which may be called.\n+        buildMethodHash(obj.getClass(), true);\n+\n+        // Export it.\n+        UnicastServer.exportObject(this);\n+      }\n \n-final static private Class[] stubprototype = new Class[] { RemoteRef.class };\n-\n-Remote myself; //save the remote object itself\n-private Skeleton skel;\n-private RemoteStub stub;\n-private Hashtable methods = new Hashtable();\n-\n-/**\n- * Used by serialization.\n- */\n-UnicastServerRef()\n-{\n-}\n-\n-public UnicastServerRef(ObjID id, int port, RMIServerSocketFactory ssf) throws RemoteException {\n-\tsuper(id);\n-\tmanager = UnicastConnectionManager.getInstance(port, ssf);\n-}\n-\n-public RemoteStub exportObject(Remote obj) throws RemoteException {\n-\tif (myself == null) {\n-\t\tmyself = obj;\n-\t\t// Save it to server manager, to let client calls in the same VM to issue\n-\t\t//  local call\n-\t\tmanager.serverobj = obj;\n-\n-\t\t// Find and install the stub\n-\t\tClass cls = obj.getClass();\n-\t\tClass expCls;\n-\t\ttry {\n-\t\t\t// where ist the _Stub? (check superclasses also)\n-\t\t\texpCls = findStubSkelClass(cls); \n-\t\t} catch (Exception ex) {\n-\t\t\tthrow new RemoteException(\"can not find stubs for class: \" + cls, ex);\n-\t\t}\n-\n-\t\tstub = (RemoteStub)getHelperClass(expCls, \"_Stub\");\n-\t\tif (stub == null) {\n-\t\t\tthrow new RemoteException(\"failed to export: \" + cls);\n-\t\t}\n-\n-\t\t// Find and install the skeleton (if there is one)\n-\t\tskel = (Skeleton)getHelperClass(expCls, \"_Skel\");\n-\n-\t\t// Build hash of methods which may be called.\n-\t\tbuildMethodHash(obj.getClass(), true);\n-\n-\t\t// Export it.\n-\t\tUnicastServer.exportObject(this);\n-\t}\n-\n-\treturn (stub);\n-}\n-\n-public RemoteStub exportObject(Remote remote, Object obj)\n-        throws RemoteException\n-{\n-    //FIX ME\n-\treturn exportObject(remote);\n-}\n-\n-public RemoteStub getStub(){\n     return stub;\n-}\n-\n-\n-public boolean unexportObject(Remote obj, boolean force) {\n+  }\n+  \n+  /**\n+   * Get the stub (actual class or proxy) of the exported remote object.\n+   * \n+   * @return the remote stub (null if exportObject has not been called).\n+   */\n+  public Remote getStub()\n+  {\n+    return stub;\n+  }\n+  \n+  /**\n+   * Unexport the object (remove methods from the method hashcode table \n+   * and call UnicastServer.unexportObject.\n+   * \n+   * @param obj the object being unexported\n+   * @param force passed to the UnicastServer.unexportObject.\n+   * @return value, returned by the UnicastServer.unexportObject.\n+   */\n+  public boolean unexportObject(Remote obj, boolean force)\n+  {\n     // Remove all hashes of methods which may be called.\n     buildMethodHash(obj.getClass(), false);\n     return UnicastServer.unexportObject(this, force);\n-}\n-\n-/**\n-*\n-*  The Subs/Skels might not there for the actual class, but maybe \n-*  for one of the superclasses.\n-*\n-*/\n-private Class findStubSkelClass(Class startCls) throws Exception {\n-\tClass cls = startCls;\n-\n-\twhile (true) {\n-\t\ttry {\n-\t\t\tString stubClassname = cls.getName() + \"_Stub\";\n-\t\t\tClassLoader cl = cls.getClassLoader();\n-\t\t\tClass scls = cl == null ? Class.forName(stubClassname)\n-\t\t\t\t\t\t: cl.loadClass(stubClassname);\n-\t\t\treturn cls; // found it\n-\t\t} catch (ClassNotFoundException e) {\n-\t\t\tClass superCls = cls.getSuperclass();\n-\t\t\tif (superCls == null \n-\t\t\t\t|| superCls == java.rmi.server.UnicastRemoteObject.class) \n-\t\t\t{\n-\t\t\t\tthrow new Exception(\"Neither \" + startCls \n-\t\t\t\t\t+ \" nor one of their superclasses (like\" + cls + \")\" \n-\t\t\t\t\t+ \" has a _Stub\");\n-\t\t\t}\n-\t\t\tcls = superCls;\n-\t\t}\n-\t}\n-}\n-\n-\n-\n-private Object getHelperClass(Class cls, String type) {\n-\ttry {   \n-\t    String classname = cls.getName();\n-\t\tClassLoader cl = cls.getClassLoader();\n-\t\tClass scls = cl == null ? Class.forName(classname + type)\n-\t\t\t\t\t: cl.loadClass(classname + type);\n-\t\tif (type.equals(\"_Stub\")) {\n-\t\t\ttry {\n-\t\t\t\t// JDK 1.2 stubs\n-\t\t\t\tConstructor con = scls.getConstructor(stubprototype);\n-\t\t\t\treturn (con.newInstance(new Object[]{this}));\n-\t\t\t}\n-\t\t\tcatch (NoSuchMethodException e) {\n-\t\t\t}\n-\t\t\tcatch (InstantiationException e) {\n-\t\t\t}\n-\t\t\tcatch (IllegalAccessException e) {\n-\t\t\t}\n-\t\t\tcatch (IllegalArgumentException e) {\n-\t\t\t}\n-\t\t\tcatch (InvocationTargetException e) {\n-\t\t\t}\n-\t\t\t// JDK 1.1 stubs\n-\t\t\tRemoteStub stub = (RemoteStub)scls.newInstance();\n-\t\t\tUnicastRemoteStub.setStubRef(stub, this);\n-\t\t\treturn (stub);\n-\t\t}\n-\t\telse {\n-\t\t\t// JDK 1.1 skel\n-\t\t\treturn (scls.newInstance());\n-\t\t}\n-\t}\n-\tcatch (ClassNotFoundException e) {\n-\t}\n-\tcatch (InstantiationException e) {\n-\t}\n-\tcatch (IllegalAccessException e) {\n-\t}\n-\treturn (null);\n-}\n-\n-\n-\n-public String getClientHost() throws ServerNotActiveException {\n-\treturn RemoteServer.getClientHost();\n-}\n-\n-private void buildMethodHash(Class cls, boolean build) {\n-\tMethod[] meths = cls.getMethods();\n-\tfor (int i = 0; i < meths.length; i++) {\n-\t\t/* Don't need to include any java.xxx related stuff */\n-\t\tif (meths[i].getDeclaringClass().getName().startsWith(\"java.\")) {\n-\t\t\tcontinue;\n-\t\t}\n-\t\tlong hash = RMIHashes.getMethodHash(meths[i]);\n-\t\tif(build)\n-\t\t    methods.put(new Long (hash), meths[i]);\n-\t\telse\n-\t\t    methods.remove(new Long (hash));\n-//System.out.println(\"meth = \" + meths[i] + \", hash = \" + hash);\n-\t}\n-}\n-\n-Class getMethodReturnType(int method, long hash) throws Exception\n-{\n-    if (method == -1) {\n-        Method meth = (Method)methods.get(new Long (hash));\n+  }\n+\n+  /**\n+   * Return the class in the hierarchy for that the stub class is defined.\n+   * The Subs/Skels might not there for the actual class, but maybe for one of\n+   * the superclasses.\n+   * \n+   * @return the class having stub defined, null if none.\n+   */\n+  private Class findStubSkelClass(Class startCls)\n+  {\n+    Class cls = startCls;\n+\n+    while (true)\n+      {\n+        try\n+          {\n+            String stubClassname = cls.getName() + \"_Stub\";\n+            ClassLoader cl = cls.getClassLoader();\n+            Class scls = cl == null ? Class.forName(stubClassname)\n+                                   : cl.loadClass(stubClassname);\n+            return cls; // found it\n+          }\n+        catch (ClassNotFoundException e)\n+          {\n+            Class superCls = cls.getSuperclass();\n+            if (superCls == null\n+                || superCls == java.rmi.server.UnicastRemoteObject.class)\n+              {\n+                return null;\n+              }\n+            cls = superCls;\n+          }\n+      }\n+  }\n+  \n+  /**\n+   * Get the helper (assisting) class with the given type. \n+   * \n+   * @param cls the class, for that the helper class is requested. This class\n+   * and the requested helper class must share the same class loader.\n+   * \n+   * @param type the type of the assisting helper. The only currently supported\n+   * non deprecated value is \"_Stub\" (load jdk 1.1 or 1.2 RMI stub). Another\n+   * (deprecated) value is \"_Skel\" (load skeleton).\n+   * \n+   * @return the instantiated instance of the helper class or null if the\n+   * helper class cannot be found or instantiated.\n+   */\n+  private Object getHelperClass(Class cls, String type)\n+  {\n+    try\n+      {\n+        String classname = cls.getName();\n+        ClassLoader cl = cls.getClassLoader();\n+        Class scls = cl == null ? Class.forName(classname + type)\n+                               : cl.loadClass(classname + type);\n+        if (type.equals(\"_Stub\"))\n+          {\n+            try\n+              {\n+                // JDK 1.2 stubs\n+                Constructor con = scls.getConstructor(stubprototype);\n+                return (con.newInstance(new Object[] { this }));\n+              }\n+            catch (NoSuchMethodException e)\n+              {\n+              }\n+            catch (InstantiationException e)\n+              {\n+              }\n+            catch (IllegalAccessException e)\n+              {\n+              }\n+            catch (IllegalArgumentException e)\n+              {\n+              }\n+            catch (InvocationTargetException e)\n+              {\n+              }\n+            // JDK 1.1 stubs\n+            RemoteStub stub = (RemoteStub) scls.newInstance();\n+            UnicastRemoteStub.setStubRef(stub, this);\n+            return (stub);\n+          }\n+        else\n+          {\n+            // JDK 1.1 skel\n+            return (scls.newInstance());\n+          }\n+      }\n+    catch (ClassNotFoundException e)\n+      {\n+      }\n+    catch (InstantiationException e)\n+      {\n+      }\n+    catch (IllegalAccessException e)\n+      {\n+      }\n+    return (null);\n+  }\n+\n+  public String getClientHost() throws ServerNotActiveException\n+  {\n+    return RemoteServer.getClientHost();\n+  }\n+  \n+  /**\n+   * Build the method has code table and put it into {@link #methods}\n+   * (mapping RMI hashcode tos method). The same method is used to remove\n+   * the table.\n+   * \n+   * @param cls the class for that the method table is built. \n+   * @param build if true, the class methods are added to the table. If \n+   * false, they are removed from the table.\n+   */\n+  private void buildMethodHash(Class cls, boolean build)\n+  {\n+    Method[] meths = cls.getMethods();\n+    for (int i = 0; i < meths.length; i++)\n+      {\n+        /* Don't need to include any java.xxx related stuff */\n+        if (meths[i].getDeclaringClass().getName().startsWith(\"java.\"))\n+          {\n+            continue;\n+          }\n+        long hash = RMIHashes.getMethodHash(meths[i]);\n+        if (build)\n+          methods.put(new Long(hash), meths[i]);\n+        else\n+          methods.remove(new Long(hash));\n+        // System.out.println(\"meth = \" + meths[i] + \", hash = \" + hash);\n+      }\n+  }\n+\n+  Class getMethodReturnType(int method, long hash) throws Exception\n+  {\n+    if (method == - 1)\n+      {\n+        Method meth = (Method) methods.get(new Long(hash));\n         return meth.getReturnType();\n-    }else\n-        return null;\n-}\n-\n-public Object incomingMessageCall(UnicastConnection conn, int method, long hash) throws Exception {\n-//System.out.println(\"method = \" + method + \", hash = \" + hash);\n-\t// If method is -1 then this is JDK 1.2 RMI - so use the hash\n-\t// to locate the method\n-\tif (method == -1) {\n-\t\tMethod meth = (Method)methods.get(new Long (hash));\n-//System.out.println(\"class = \" + myself.getClass() + \", meth = \" + meth);\n-\t\tif (meth == null) {\n-\t\t\tthrow new NoSuchMethodException();\n-\t\t}\n-\n-\t\tObjectInputStream in = conn.getObjectInputStream();\n-\t\tint nrargs = meth.getParameterTypes().length;\n-\t\tObject[] args = new Object[nrargs];\n-\t\tfor (int i = 0; i < nrargs; i++) {\n-\t\t\t/** \n-\t\t\t * For debugging purposes - we don't handle CodeBases\n-\t\t\t * quite right so we don't always find the stubs.  This\n-\t\t\t * lets us know that.\n-\t\t\t */\n-\t\t\ttry {\n-\t\t\t\t// need to handle primitive types\n-\t\t\t\targs[i] = ((RMIObjectInputStream)in).readValue(meth.getParameterTypes()[i]);\n-\t\t\t\t\n-\t\t\t}\n-\t\t\tcatch (Exception t) {\n-\t\t\t\tt.printStackTrace();\n-\t\t\t\tthrow t;\n-\t\t\t}\n-\t\t}\n-\t\t//We must reinterpret the exception thrown by meth.invoke()\n-\t\t//return (meth.invoke(myself, args));\n-\t\tObject ret = null;\n-\t\ttry{\n-\t\t    ret = meth.invoke(myself, args);\n-\t\t}catch(InvocationTargetException e){\n-                    Throwable cause = e.getTargetException();\n-                    if (cause instanceof Exception) {\n-                        throw (Exception)cause;\n-                    }\n-                    else if (cause instanceof Error) {\n-                        throw (Error)cause;\n-                    }\n-                    else {\n-                        throw new Error(\"The remote method threw a java.lang.Throwable that is neither java.lang.Exception nor java.lang.Error.\", e);\n-                    }\n-\t\t}\n-\t\treturn ret;\n-\t}\n-\t// Otherwise this is JDK 1.1 style RMI - we find the skeleton\n-\t// and invoke it using the method number.  We wrap up our\n-\t// connection system in a UnicastRemoteCall so it appears in a\n-\t// way the Skeleton can handle.\n-\telse {\n-\t\tif (skel == null) {\n-\t\t\tthrow new NoSuchMethodException();\n-\t\t}\n-\t\tUnicastRemoteCall call = new UnicastRemoteCall(conn);\n-\t\tskel.dispatch(myself, call, method, hash);\t\t  \n-\t\tif (!call.isReturnValue())\n-\t\t  return RMIVoidValue.INSTANCE;\n-\t\telse\n-\t\t  return (call.returnValue());\n-\t}\n-}\n+      }\n+    else\n+      return null;\n+  }\n+\n+  public Object incomingMessageCall(UnicastConnection conn, int method,\n+                                    long hash) throws Exception\n+  {\n+    // System.out.println(\"method = \" + method + \", hash = \" + hash);\n+    // If method is -1 then this is JDK 1.2 RMI - so use the hash\n+    // to locate the method\n+    if (method == - 1)\n+      {\n+        Method meth = (Method) methods.get(new Long(hash));\n+        // System.out.println(\"class = \" + myself.getClass() + \", meth = \" +\n+        // meth);\n+        if (meth == null)\n+          {\n+            throw new NoSuchMethodException();\n+          }\n+\n+        ObjectInputStream in = conn.getObjectInputStream();\n+        int nrargs = meth.getParameterTypes().length;\n+        Object[] args = new Object[nrargs];\n+        for (int i = 0; i < nrargs; i++)\n+          {\n+            /**\n+             * For debugging purposes - we don't handle CodeBases quite right so\n+             * we don't always find the stubs. This lets us know that.\n+             */\n+            try\n+              {\n+                // need to handle primitive types\n+                args[i] = ((RMIObjectInputStream) in)\n+                  .readValue(meth.getParameterTypes()[i]);\n+\n+              }\n+            catch (Exception t)\n+              {\n+                t.printStackTrace();\n+                throw t;\n+              }\n+          }\n+        //We must reinterpret the exception thrown by meth.invoke()\n+        //return (meth.invoke(myself, args));\n+        Object ret = null;\n+        try\n+          {\n+            ret = meth.invoke(myself, args);\n+          }\n+        catch (InvocationTargetException e)\n+          {\n+            Throwable cause = e.getTargetException();\n+            if (cause instanceof Exception)\n+              {\n+                throw (Exception) cause;\n+              }\n+            else if (cause instanceof Error)\n+              {\n+                throw (Error) cause;\n+              }\n+            else\n+              {\n+                throw new Error(\n+                  \"The remote method threw a java.lang.Throwable that\"+\n+                  \" is neither java.lang.Exception nor java.lang.Error.\",\n+                  e);\n+              }\n+          }\n+        return ret;\n+      }\n+    // Otherwise this is JDK 1.1 style RMI - we find the skeleton\n+    // and invoke it using the method number.  We wrap up our\n+    // connection system in a UnicastRemoteCall so it appears in a\n+    // way the Skeleton can handle.\n+    else\n+      {\n+        if (skel == null)\n+          {\n+            throw new NoSuchMethodException();\n+          }\n+        UnicastRemoteCall call = new UnicastRemoteCall(conn);\n+        skel.dispatch(myself, call, method, hash);\n+        if (! call.isReturnValue())\n+          return RMIVoidValue.INSTANCE;\n+        else\n+          return (call.returnValue());\n+      }\n+  }\n+  \n+  /**\n+   * Create the 1.2 proxy stub in the case when the pre-generated stub is not\n+   * available of the system is explicitly instructed to use proxy stubs.\n+   * \n+   * @param stubFor the class for that the proxy class must be constructed.\n+   * @param reference the remote reference, used to find the given object\n+   * \n+   * @return the applicable proxy stub.\n+   * \n+   * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n+   */\n+  Remote createProxyStub(Class stubFor, RemoteRef reference)\n+  {\n+    // Collect all interfaces, implemented by stubFor and derived from\n+    // Remote (also Remote itself):\n+    HashSet interfaces = new HashSet();\n+    Class c = stubFor;\n+    Class[] intfs;\n+\n+    while (c != null)\n+      {\n+        intfs = c.getInterfaces();\n+        for (int i = 0; i < intfs.length; i++)\n+          {\n+            if (Remote.class.isAssignableFrom(intfs[i]))\n+              interfaces.add(intfs[i]);\n+          }\n+        c = c.getSuperclass();\n+      }\n+\n+    intfs = new Class[interfaces.size()];\n+    Iterator it = interfaces.iterator();\n+\n+    for (int i = 0; i < intfs.length; i++)\n+      intfs[i] = (Class) it.next();\n+    \n+    RemoteObjectInvocationHandler handler = \n+      new RemoteObjectInvocationHandler(reference);\n+    \n+    Object proxy = \n+      Proxy.newProxyInstance(stubFor.getClassLoader(), intfs, handler);\n+\n+    return (Remote) proxy;\n+  }\n+  \n \n }\n "}, {"sha": "813888c20a8fb7860ffe2abf59c95c636ab5cafb", "filename": "libjava/classpath/gnu/java/security/Properties.java", "status": "added", "additions": 374, "deletions": 0, "changes": 374, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FProperties.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FProperties.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FProperties.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,374 @@\n+/* Properties.java -- run-time configuration properties.\n+   Copyright (C) 2003, 2004, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.HashMap;\n+import java.util.PropertyPermission;\n+\n+/**\n+ * <p>A global object containing build-specific properties that affect the\n+ * behaviour of the generated binaries from this library.</p>\n+ */\n+public final class Properties\n+{\n+\n+  // Debugging methods and variables\n+  // -------------------------------------------------------------------------\n+\n+  private static final String NAME = \"Properties\";\n+\n+  private static final boolean DEBUG = false;\n+\n+  //   private static final int debuglevel = 9;\n+  private static final PrintWriter err = new PrintWriter(System.out, true);\n+\n+  private static void debug(final String s)\n+  {\n+    err.println(\">>> \" + NAME + \": \" + s);\n+  }\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  public static final String VERSION = \"gnu.crypto.version\";\n+\n+  public static final String PROPERTIES_FILE = \"gnu.crypto.properties.file\";\n+\n+  public static final String REPRODUCIBLE_PRNG = \"gnu.crypto.with.reproducible.prng\";\n+\n+  public static final String CHECK_WEAK_KEYS = \"gnu.crypto.with.check.for.weak.keys\";\n+\n+  public static final String DO_RSA_BLINDING = \"gnu.crypto.with.rsa.blinding\";\n+\n+  private static final String TRUE = Boolean.TRUE.toString();\n+\n+  private static final String FALSE = Boolean.FALSE.toString();\n+\n+  private static final HashMap props = new HashMap();\n+\n+  private static Properties singleton = null;\n+\n+  private boolean reproducible = false;\n+\n+  private boolean checkForWeakKeys = true;\n+\n+  private boolean doRSABlinding = true;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Trivial constructor to enforce Singleton pattern. */\n+  private Properties()\n+  {\n+    super();\n+    init();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * <p>Returns the string representation of the library global configuration\n+   * property with the designated <code>key</code>.</p>\n+   *\n+   * @param key the case-insensitive, non-null and non-empty name of a\n+   * configuration property.\n+   * @return the string representation of the designated property, or\n+   * <code>null</code> if such property is not yet set, or <code>key</code> is\n+   * empty.\n+   */\n+  public static final synchronized String getProperty(String key)\n+  {\n+    if (key == null)\n+      return null;\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new PropertyPermission(key, \"read\"));\n+    key = key.trim().toLowerCase();\n+    if (\"\".equals(key))\n+      return null;\n+    return (String) props.get(key);\n+  }\n+\n+  /**\n+   * <p>Sets the value of a designated library global configuration property,\n+   * to a string representation of what should be a legal value.</p>\n+   *\n+   * @param key the case-insensitive, non-null and non-empty name of a\n+   * configuration property.\n+   * @param value the non-null, non-empty string representation of a legal\n+   * value of the configuration property named by <code>key</code>.\n+   */\n+  public static final synchronized void setProperty(String key, String value)\n+  {\n+    if (key == null || value == null)\n+      return;\n+    key = key.trim().toLowerCase();\n+    if (\"\".equals(key))\n+      return;\n+    if (key.equals(VERSION))\n+      return;\n+    value = value.trim();\n+    if (\"\".equals(value))\n+      return;\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new PropertyPermission(key, \"write\"));\n+    if (key.equals(REPRODUCIBLE_PRNG)\n+        && (value.equalsIgnoreCase(TRUE) || value.equalsIgnoreCase(FALSE)))\n+      setReproducible(Boolean.valueOf(value).booleanValue());\n+    else if (key.equals(CHECK_WEAK_KEYS)\n+             && (value.equalsIgnoreCase(TRUE) || value.equalsIgnoreCase(FALSE)))\n+      setCheckForWeakKeys(Boolean.valueOf(value).booleanValue());\n+    else if (key.equals(DO_RSA_BLINDING)\n+             && (value.equalsIgnoreCase(TRUE) || value.equalsIgnoreCase(FALSE)))\n+      setDoRSABlinding(Boolean.valueOf(value).booleanValue());\n+    else\n+      props.put(key, value);\n+  }\n+\n+  /**\n+   * <p>A convenience method that returns, as a boolean, the library global\n+   * configuration property indicating if the default Pseudo Random Number\n+   * Generator produces, or not, the same bit stream when instantiated.</p>\n+   *\n+   * @return <code>true</code> if the default PRNG produces the same bit stream\n+   * with every VM instance. Returns <code>false</code> if the default PRNG is\n+   * seeded with the time of day of its first invocation.\n+   */\n+  public static final synchronized boolean isReproducible()\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new PropertyPermission(REPRODUCIBLE_PRNG, \"read\"));\n+    return instance().reproducible;\n+  }\n+\n+  /**\n+   * <p>A convenience method that returns, as a boolean, the library global\n+   * configuration property indicating if the implementations of symmetric\n+   * key block ciphers check, or not, for possible/potential weak and semi-weak\n+   * keys that may be produced in the course of generating round encryption\n+   * and/or decryption keys.</p>\n+   *\n+   * @return <code>true</code> if the cipher implementations check for weak and\n+   * semi-weak keys. Returns <code>false</code> if the cipher implementations\n+   * do not check for weak or semi-weak keys.\n+   */\n+  public static final synchronized boolean checkForWeakKeys()\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new PropertyPermission(CHECK_WEAK_KEYS, \"read\"));\n+    return instance().checkForWeakKeys;\n+  }\n+\n+  /**\n+   * <p>A convenience method that returns, as a boolean, the library global\n+   * configuration property indicating if RSA decryption (RSADP primitive),\n+   * does, or not, blinding against timing attacks.</p>\n+   *\n+   * @return <code>true</code> if the RSA decryption primitive includes a\n+   * blinding operation. Returns <code>false</code> if the RSA decryption\n+   * primitive does not include the additional blinding operation.\n+   */\n+  public static final synchronized boolean doRSABlinding()\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new PropertyPermission(DO_RSA_BLINDING, \"read\"));\n+    return instance().doRSABlinding;\n+  }\n+\n+  /**\n+   * <p>A convenience method to set the global property for reproducibility of\n+   * the default PRNG bit stream output.</p>\n+   *\n+   * @param value if <code>true</code> then the default PRNG bit stream output\n+   * is the same with every invocation of the VM.\n+   */\n+  public static final synchronized void setReproducible(final boolean value)\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new PropertyPermission(REPRODUCIBLE_PRNG, \"write\"));\n+    instance().reproducible = value;\n+    props.put(REPRODUCIBLE_PRNG, String.valueOf(value));\n+  }\n+\n+  /**\n+   * <p>A convenience method to set the global property for checking for weak\n+   * and semi-weak cipher keys.</p>\n+   *\n+   * @param value if <code>true</code> then the cipher implementations will\n+   * invoke additional checks for weak and semi-weak key values that may get\n+   * generated.\n+   */\n+  public static final synchronized void setCheckForWeakKeys(final boolean value)\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new PropertyPermission(CHECK_WEAK_KEYS, \"write\"));\n+    instance().checkForWeakKeys = value;\n+    props.put(CHECK_WEAK_KEYS, String.valueOf(value));\n+  }\n+\n+  /**\n+   * <p>A convenience method to set the global property fo adding a blinding\n+   * operation when executing the RSA decryption primitive.</p>\n+   *\n+   * @param value if <code>true</code> then the code for performing the RSA\n+   * decryption primitive will include a blinding operation.\n+   */\n+  public static final synchronized void setDoRSABlinding(final boolean value)\n+  {\n+    SecurityManager sm = System.getSecurityManager();\n+    if (sm != null)\n+      sm.checkPermission(new PropertyPermission(DO_RSA_BLINDING, \"write\"));\n+    instance().doRSABlinding = value;\n+    props.put(DO_RSA_BLINDING, String.valueOf(value));\n+  }\n+\n+  private static final synchronized Properties instance()\n+  {\n+    if (singleton == null)\n+      singleton = new Properties();\n+    return singleton;\n+  }\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+  private void init()\n+  {\n+    // default values\n+    props.put(REPRODUCIBLE_PRNG, (reproducible ? \"true\" : \"false\"));\n+    props.put(CHECK_WEAK_KEYS, (checkForWeakKeys ? \"true\" : \"false\"));\n+    props.put(DO_RSA_BLINDING, (doRSABlinding ? \"true\" : \"false\"));\n+\n+    // 1. allow site-wide override by reading a properties file\n+    String propFile = null;\n+    try\n+      {\n+        propFile = (String) AccessController.doPrivileged(new PrivilegedAction()\n+        {\n+          public Object run()\n+          {\n+            return System.getProperty(PROPERTIES_FILE);\n+          }\n+        });\n+      }\n+    catch (SecurityException se)\n+      {\n+        if (DEBUG)\n+          debug(\"Reading property \" + PROPERTIES_FILE\n+                + \" not allowed. Ignored.\");\n+      }\n+    if (propFile != null)\n+      {\n+        try\n+          {\n+            final java.util.Properties temp = new java.util.Properties();\n+            final FileInputStream fin = new FileInputStream(propFile);\n+            temp.load(fin);\n+            temp.list(System.out);\n+            props.putAll(temp);\n+          }\n+        catch (IOException ioe)\n+          {\n+            if (DEBUG)\n+              debug(\"IO error reading \" + propFile + \": \" + ioe.getMessage());\n+          }\n+        catch (SecurityException se)\n+          {\n+            if (DEBUG)\n+              debug(\"Security error reading \" + propFile + \": \"\n+                    + se.getMessage());\n+          }\n+      }\n+\n+    // 2. allow vm-specific override by allowing -D options in launcher\n+    handleBooleanProperty(REPRODUCIBLE_PRNG);\n+    handleBooleanProperty(CHECK_WEAK_KEYS);\n+    handleBooleanProperty(DO_RSA_BLINDING);\n+\n+    // re-sync the 'known' properties\n+    reproducible = new Boolean((String) props.get(REPRODUCIBLE_PRNG)).booleanValue();\n+    checkForWeakKeys = new Boolean((String) props.get(CHECK_WEAK_KEYS)).booleanValue();\n+    doRSABlinding = new Boolean((String) props.get(DO_RSA_BLINDING)).booleanValue();\n+\n+    // This does not change.\n+    props.put(VERSION, Registry.VERSION_STRING);\n+  }\n+\n+  private void handleBooleanProperty(final String name)\n+  {\n+    String s = null;\n+    try\n+      {\n+        s = System.getProperty(name);\n+      }\n+    catch (SecurityException x)\n+      {\n+        if (DEBUG)\n+          debug(\"SecurityManager forbids reading system properties. Ignored\");\n+      }\n+    if (s != null)\n+      {\n+        s = s.trim().toLowerCase();\n+        // we have to test for explicit \"true\" or \"false\".  anything else may\n+        // hide valid value set previously\n+        if (s.equals(TRUE) || s.equals(FALSE))\n+          {\n+            if (DEBUG)\n+              debug(\"Setting \" + name + \" to '\" + s + \"'\");\n+            props.put(name, s);\n+          }\n+        else\n+          {\n+            if (DEBUG)\n+              debug(\"Invalid value for -D\" + name + \": \" + s + \". Ignored\");\n+          }\n+      }\n+  }\n+}"}, {"sha": "efb54e71470faae01acee8f285d48e96d4aa455c", "filename": "libjava/classpath/gnu/java/security/Registry.java", "status": "added", "additions": 455, "deletions": 0, "changes": 455, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FRegistry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FRegistry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FRegistry.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,455 @@\n+/* Registry.java -- \n+   Copyright (C) 2001, 2002, 2003, 2004, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security;\n+\n+/**\n+ * A placeholder for <i>names</i> and <i>literals</i> used throughout this\n+ * library.\n+ */\n+public interface Registry\n+{\n+\n+  // Constants\n+  // -------------------------------------------------------------------------\n+\n+  /** The name of our Providers. */\n+  String GNU_SECURITY = \"GNU\";\n+  String GNU_CRYPTO = \"GNU-CRYPTO\";\n+  String GNU_SASL = \"GNU-SASL\";\n+\n+  /** Our version number. */\n+  String VERSION_STRING = \"2.1.0\";\n+\n+  // Names of properties to use in Maps when initialising primitives .........\n+\n+  // Symmetric block cipher algorithms and synonyms...........................\n+\n+  String ANUBIS_CIPHER = \"anubis\";\n+\n+  String BLOWFISH_CIPHER = \"blowfish\";\n+\n+  String DES_CIPHER = \"des\";\n+\n+  String KHAZAD_CIPHER = \"khazad\";\n+\n+  String RIJNDAEL_CIPHER = \"rijndael\";\n+\n+  String SERPENT_CIPHER = \"serpent\";\n+\n+  String SQUARE_CIPHER = \"square\";\n+\n+  String TRIPLEDES_CIPHER = \"tripledes\";\n+\n+  String TWOFISH_CIPHER = \"twofish\";\n+\n+  String CAST5_CIPHER = \"cast5\";\n+\n+  String NULL_CIPHER = \"null\";\n+\n+  /** AES is synonymous to Rijndael for 128-bit block size only. */\n+  String AES_CIPHER = \"aes\";\n+\n+  /** TripleDES is also known as DESede. */\n+  String DESEDE_CIPHER = \"desede\";\n+\n+  /** CAST5 is also known as CAST-128. */\n+  String CAST128_CIPHER = \"cast128\";\n+\n+  String CAST_128_CIPHER = \"cast-128\";\n+\n+  // Message digest algorithms and synonyms...................................\n+\n+  String WHIRLPOOL_HASH = \"whirlpool\";\n+\n+  String RIPEMD128_HASH = \"ripemd128\";\n+\n+  String RIPEMD160_HASH = \"ripemd160\";\n+\n+  String SHA160_HASH = \"sha-160\";\n+\n+  String SHA256_HASH = \"sha-256\";\n+\n+  String SHA384_HASH = \"sha-384\";\n+\n+  String SHA512_HASH = \"sha-512\";\n+\n+  String TIGER_HASH = \"tiger\";\n+\n+  String HAVAL_HASH = \"haval\";\n+\n+  String MD5_HASH = \"md5\";\n+\n+  String MD4_HASH = \"md4\";\n+\n+  String MD2_HASH = \"md2\";\n+\n+  /** RIPEMD-128 is synonymous to RIPEMD128. */\n+  String RIPEMD_128_HASH = \"ripemd-128\";\n+\n+  /** RIPEMD-160 is synonymous to RIPEMD160. */\n+  String RIPEMD_160_HASH = \"ripemd-160\";\n+\n+  /** SHA-1 is synonymous to SHA-160. */\n+  String SHA_1_HASH = \"sha-1\";\n+\n+  /** SHA1 is synonymous to SHA-160. */\n+  String SHA1_HASH = \"sha1\";\n+\n+  /** SHA is synonymous to SHA-160. */\n+  String SHA_HASH = \"sha\";\n+\n+  // Symmetric block cipher modes of operations...............................\n+\n+  /** Electronic CodeBook mode. */\n+  String ECB_MODE = \"ecb\";\n+\n+  /** Counter (NIST) mode. */\n+  String CTR_MODE = \"ctr\";\n+\n+  /** Integer Counter Mode (David McGrew). */\n+  String ICM_MODE = \"icm\";\n+\n+  /** Output Feedback Mode (NIST). */\n+  String OFB_MODE = \"ofb\";\n+\n+  /** Cipher block chaining mode (NIST). */\n+  String CBC_MODE = \"cbc\";\n+\n+  /** Cipher feedback mode (NIST). */\n+  String CFB_MODE = \"cfb\";\n+\n+  /** Authenticated-Encrypted mode. */\n+  String EAX_MODE = \"eax\";\n+\n+  // Padding scheme names and synonyms........................................\n+\n+  /** PKCS#7 padding scheme. */\n+  String PKCS7_PAD = \"pkcs7\";\n+\n+  /** Trailing Bit Complement padding scheme. */\n+  String TBC_PAD = \"tbc\";\n+\n+  /** EME-PKCS1-v1_5 padding as described in section 7.2 in RFC-3447. */\n+  String EME_PKCS1_V1_5_PAD = \"eme-pkcs1-v1.5\";\n+\n+  /** SSLv3 padding scheme. */\n+  String SSL3_PAD = \"ssl3\";\n+\n+  /** TLSv1 padding scheme. */\n+  String TLS1_PAD = \"tls1\";\n+\n+  // Pseudo-random number generators..........................................\n+\n+  /** (Apparently) RC4 keystream PRNG. */\n+  String ARCFOUR_PRNG = \"arcfour\";\n+\n+  /** We use \"rc4\" as an alias for \"arcfour\". */\n+  String RC4_PRNG = \"rc4\";\n+\n+  /** PRNG based on David McGrew's Integer Counter Mode. */\n+  String ICM_PRNG = \"icm\";\n+\n+  /** PRNG based on a designated hash function. */\n+  String MD_PRNG = \"md\";\n+\n+  /** PRNG based on UMAC's Key Derivation Function. */\n+  String UMAC_PRNG = \"umac-kdf\";\n+\n+  /**\n+   * PRNG based on PBKDF2 from PKCS #5 v.2. This is suffixed with the name\n+   * of a MAC to be used as a PRF.\n+   */\n+  String PBKDF2_PRNG_PREFIX = \"pbkdf2-\";\n+\n+  /** The continuously-seeded pseudo-random number generator. */\n+  String CSPRNG_PRNG = \"csprng\";\n+\n+  /** The Fortuna PRNG. */\n+  String FORTUNA_PRNG = \"fortuna\";\n+\n+  /** The Fortuna generator PRNG. */\n+  String FORTUNA_GENERATOR_PRNG = \"fortuna-generator\";\n+\n+  // Asymmetric keypair generators............................................\n+\n+  String DSS_KPG = \"dss\";\n+\n+  String RSA_KPG = \"rsa\";\n+\n+  String DH_KPG = \"dh\";\n+\n+  String SRP_KPG = \"srp\";\n+\n+  /** DSA is synonymous to DSS. */\n+  String DSA_KPG = \"dsa\";\n+\n+  // Signature-with-appendix schemes..........................................\n+\n+  String DSS_SIG = \"dss\";\n+\n+  String RSA_SIG_PREFIX = \"rsa-\";\n+\n+  String RSA_PSS_ENCODING = \"pss\";\n+\n+  String RSA_PSS_SIG = RSA_SIG_PREFIX + RSA_PSS_ENCODING;\n+\n+  String RSA_PKCS1_V1_5_ENCODING = \"pkcs1-v1.5\";\n+\n+  String RSA_PKCS1_V1_5_SIG = RSA_SIG_PREFIX + RSA_PKCS1_V1_5_ENCODING;\n+\n+  /** DSA is synonymous to DSS. */\n+  String DSA_SIG = \"dsa\";\n+\n+  // Key agreement protocols .................................................\n+\n+  String DH_KA = \"dh\";\n+\n+  String ELGAMAL_KA = \"elgamal\";\n+\n+  String SRP6_KA = \"srp6\";\n+\n+  String SRP_SASL_KA = \"srp-sasl\";\n+\n+  String SRP_TLS_KA = \"srp-tls\";\n+\n+  // Keyed-Hash Message Authentication Code ..................................\n+\n+  /** Name prefix of every HMAC implementation. */\n+  String HMAC_NAME_PREFIX = \"hmac-\";\n+\n+  // Other MAC algorithms ....................................................\n+\n+  /** The One-key CBC MAC. */\n+  String OMAC_PREFIX = \"omac-\";\n+\n+  /** Message Authentication Code using Universal Hashing (Ted Krovetz). */\n+  String UHASH32 = \"uhash32\";\n+\n+  String UMAC32 = \"umac32\";\n+\n+  /** The Truncated Multi-Modular Hash Function -v1 (David McGrew). */\n+  String TMMH16 = \"tmmh16\";\n+\n+  //   String TMMH32 = \"tmmh32\";\n+\n+  // Format IDs used to identify how we externalise asymmetric keys ..........\n+  // fully-qualified names of the supported codecs\n+  String RAW_ENCODING = \"gnu.crypto.raw.format\";\n+  String X509_ENCODING = \"gnu.crypto.x509.format\";\n+  String PKCS8_ENCODING = \"gnu.crypto.pkcs8.format\";\n+  String ASN1_ENCODING = \"gnu.crypto.asn1.format\";\n+\n+  // short names of the same.  used by JCE adapters\n+  String RAW_ENCODING_SHORT_NAME = \"RAW\";\n+  String X509_ENCODING_SORT_NAME = \"X.509\";\n+  String PKCS8_ENCODING_SHORT_NAME = \"PKCS#8\";\n+  String ASN1_ENCODING_SHORT_NAME = \"ASN.1\";\n+\n+  // unique identifiers of the same\n+  int RAW_ENCODING_ID = 1;\n+  int X509_ENCODING_ID = 2;\n+  int PKCS8_ENCODING_ID = 3;\n+  int ASN1_ENCODING_ID = 4;\n+\n+  // OID strings used in encoding/decoding keys\n+  String DSA_OID_STRING = \"1.2.840.10040.4.1\";\n+  String RSA_OID_STRING = \"1.2.840.113549.1.1.1\";\n+  String DH_OID_STRING =  \"1.2.840.10046.2.1\";\n+\n+  // Magic bytes we generate/expect in externalised asymmetric keys ..........\n+  // the four bytes represent G (0x47) for GNU, 1 (0x01) for Raw format,\n+  // D (0x44) for DSS, R (0x52) for RSA, H (0x48) for Diffie-Hellman, or S\n+  // (0x53) for SRP-6, and finally P (0x50) for Public, p (0x70) for private,\n+  // or S (0x53) for signature.\n+  byte[] MAGIC_RAW_DSS_PUBLIC_KEY = new byte[] { 0x47, RAW_ENCODING_ID, 0x44,\n+                                                0x50 };\n+\n+  byte[] MAGIC_RAW_DSS_PRIVATE_KEY = new byte[] { 0x47, RAW_ENCODING_ID, 0x44,\n+                                                 0x70 };\n+\n+  byte[] MAGIC_RAW_DSS_SIGNATURE = new byte[] { 0x47, RAW_ENCODING_ID, 0x44,\n+                                               0x53 };\n+\n+  byte[] MAGIC_RAW_RSA_PUBLIC_KEY = new byte[] { 0x47, RAW_ENCODING_ID, 0x52,\n+                                                0x50 };\n+\n+  byte[] MAGIC_RAW_RSA_PRIVATE_KEY = new byte[] { 0x47, RAW_ENCODING_ID, 0x52,\n+                                                 0x70 };\n+\n+  byte[] MAGIC_RAW_RSA_PSS_SIGNATURE = new byte[] { 0x47, RAW_ENCODING_ID,\n+                                                   0x52, 0x53 };\n+\n+  byte[] MAGIC_RAW_RSA_PKCS1V1_5_SIGNATURE = new byte[] { 0x47, RAW_ENCODING_ID,\n+                                                          0x52, 0x54 };\n+\n+  byte[] MAGIC_RAW_DH_PUBLIC_KEY = new byte[] { 0x47, RAW_ENCODING_ID, 0x48,\n+                                               0x50 };\n+\n+  byte[] MAGIC_RAW_DH_PRIVATE_KEY = new byte[] { 0x47, RAW_ENCODING_ID, 0x48,\n+                                                0x70 };\n+\n+  byte[] MAGIC_RAW_SRP_PUBLIC_KEY = new byte[] { 0x47, RAW_ENCODING_ID, 0x53,\n+                                                0x50 };\n+\n+  byte[] MAGIC_RAW_SRP_PRIVATE_KEY = new byte[] { 0x47, RAW_ENCODING_ID, 0x53,\n+                                                 0x70 };\n+\n+  // SASL Property names .....................................................\n+\n+  String SASL_PREFIX = \"gnu.crypto.sasl\";\n+\n+  /** Name of username property. */\n+  String SASL_USERNAME = SASL_PREFIX + \".username\";\n+\n+  /** Name of password property. */\n+  String SASL_PASSWORD = SASL_PREFIX + \".password\";\n+\n+  /** Name of authentication information provider packages. */\n+  String SASL_AUTH_INFO_PROVIDER_PKGS = SASL_PREFIX\n+                                        + \".auth.info.provider.pkgs\";\n+\n+  /** SASL authorization ID. */\n+  String SASL_AUTHORISATION_ID = SASL_PREFIX + \".authorisation.ID\";\n+\n+  /** SASL protocol. */\n+  String SASL_PROTOCOL = SASL_PREFIX + \".protocol\";\n+\n+  /** SASL Server name. */\n+  String SASL_SERVER_NAME = SASL_PREFIX + \".server.name\";\n+\n+  /** SASL Callback handler. */\n+  String SASL_CALLBACK_HANDLER = SASL_PREFIX + \".callback.handler\";\n+\n+  /** SASL channel binding. */\n+  String SASL_CHANNEL_BINDING = SASL_PREFIX + \".channel.binding\";\n+\n+  // SASL data element size limits ...........................................\n+\n+  /** The size limit, in bytes, of a SASL OS (Octet Sequence) element. */\n+  int SASL_ONE_BYTE_MAX_LIMIT = 255;\n+\n+  /**\n+   * The size limit, in bytes, of both a SASL MPI (Multi-Precision Integer)\n+   * element and a SASL Text element.\n+   */\n+  int SASL_TWO_BYTE_MAX_LIMIT = 65535;\n+\n+  /** The size limit, in bytes, of a SASL EOS (Extended Octet Sequence) element. */\n+  int SASL_FOUR_BYTE_MAX_LIMIT = 2147483383;\n+\n+  /** The size limit, in bytes, of a SASL Buffer. */\n+  int SASL_BUFFER_MAX_LIMIT = 2147483643;\n+\n+  // Canonical names of SASL mechanisms ......................................\n+\n+  String SASL_ANONYMOUS_MECHANISM = \"ANONYMOUS\";\n+\n+  String SASL_CRAM_MD5_MECHANISM = \"CRAM-MD5\";\n+\n+  String SASL_PLAIN_MECHANISM = \"PLAIN\";\n+\n+  String SASL_SRP_MECHANISM = \"SRP\";\n+\n+  // Canonical names of Integrity Protection algorithms ......................\n+\n+  String SASL_HMAC_MD5_IALG = \"HMACwithMD5\";\n+\n+  String SASL_HMAC_SHA_IALG = \"HMACwithSHA\";\n+\n+  // Quality Of Protection string representations ............................\n+\n+  /** authentication only. */\n+  String QOP_AUTH = \"auth\";\n+\n+  /** authentication plus integrity protection. */\n+  String QOP_AUTH_INT = \"auth-int\";\n+\n+  /** authentication plus integrity and confidentiality protection. */\n+  String QOP_AUTH_CONF = \"auth-conf\";\n+\n+  // SASL mechanism strength string representation ...........................\n+\n+  String STRENGTH_HIGH = \"high\";\n+\n+  String STRENGTH_MEDIUM = \"medium\";\n+\n+  String STRENGTH_LOW = \"low\";\n+\n+  // SASL Server Authentication requirement ..................................\n+\n+  /** Server must authenticate to the client. */\n+  String SERVER_AUTH_TRUE = \"true\";\n+\n+  /** Server does not need to, or cannot, authenticate to the client. */\n+  String SERVER_AUTH_FALSE = \"false\";\n+\n+  // SASL mechanism reuse capability .........................................\n+\n+  String REUSE_TRUE = \"true\";\n+\n+  String REUSE_FALSE = \"false\";\n+\n+  // Keyrings  ...............................................................\n+\n+  byte[] GKR_MAGIC = new byte[] { 0x47, 0x4b, 0x52, 0x01 };\n+\n+  // Ring usage fields.\n+  int GKR_PRIVATE_KEYS = 1 << 0;\n+\n+  int GKR_PUBLIC_CREDENTIALS = 1 << 1;\n+\n+  int GKR_CERTIFICATES = 1 << 2;\n+\n+  // HMac types.\n+  int GKR_HMAC_MD5_128 = 0;\n+\n+  int GKR_HMAC_SHA_160 = 1;\n+\n+  int GKR_HMAC_MD5_96 = 2;\n+\n+  int GKR_HMAC_SHA_96 = 3;\n+\n+  // Cipher types.\n+  int GKR_CIPHER_AES_128_OFB = 0;\n+\n+  int GKR_CIPHER_AES_128_CBC = 1;\n+\n+  // Methods\n+  // -------------------------------------------------------------------------\n+}"}, {"sha": "d98ce78ec5584c32a9702e324bad2c8d18aaeeac", "filename": "libjava/classpath/gnu/java/security/der/DERValue.java", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERValue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERValue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERValue.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.der;\n \n+import gnu.java.security.x509.Util;\n+\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n \n@@ -108,7 +110,9 @@ public int getLength()\n           }\n         catch (IOException ioe)\n           {\n-            encoded = new byte[0];\n+            IllegalArgumentException iae = new IllegalArgumentException ();\n+            iae.initCause (ioe);\n+            throw iae;\n           }\n       }\n     return length;\n@@ -138,7 +142,9 @@ public byte[] getEncoded()\n           }\n         catch (IOException ioe)\n           {\n-            encoded = new byte[0];\n+            IllegalArgumentException iae = new IllegalArgumentException ();\n+            iae.initCause (ioe);\n+            throw iae;\n           }\n       }\n     return (byte[]) encoded.clone();\n@@ -156,15 +162,28 @@ public int getEncodedLength()\n           }\n         catch (IOException ioe)\n           {\n-            encoded = new byte[0];\n+            IllegalArgumentException iae = new IllegalArgumentException ();\n+            iae.initCause (ioe);\n+            throw iae;\n           }\n       }\n     return encoded.length;\n   }\n \n   public String toString()\n   {\n-    return \"DERValue [ tag=\" + tag + \", class=\" + tagClass + \", constructed=\"\n-      + constructed + \", value=\" + value + \" ]\";\n+    String start = \"DERValue ( [\";\n+    if (tagClass == DER.UNIVERSAL) \n+      start = start + \"UNIVERSAL \";\n+    else if (tagClass == DER.PRIVATE) \n+      start = start + \"PRIVATE \";\n+    else if (tagClass == DER.APPLICATION) \n+      start = start + \"APPLICATION \";\n+    start = start + tag + \"] constructed=\" + constructed + \", value=\";\n+    if (constructed)\n+     start = start + \"\\n\" + Util.hexDump(getEncoded(), \"\\t\");\n+    else\n+     start = start + value;\n+    return start + \" )\";\n   }\n }"}, {"sha": "0c26336053cfd693118acbab8fce7c72c6a5479a", "filename": "libjava/classpath/gnu/java/security/der/DERWriter.java", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERWriter.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -84,6 +84,12 @@ private DERWriter()\n   public static int write(OutputStream out, DERValue object)\n     throws IOException\n   {\n+    if (DER.CONSTRUCTED_VALUE.equals (object.getValue ()))\n+      {\n+        out.write (object.getEncoded ());\n+        return object.getLength ();\n+      }\n+\n     out.write(object.getExternalTag());\n     Object value = object.getValue();\n     if (value == null)\n@@ -216,10 +222,10 @@ private static int writeBitString(OutputStream out, BitString bs)\n     throws IOException\n   {\n     byte[] buf = bs.getShiftedByteArray();\n-    out.write(buf.length + 1);\n+    writeLength(out, buf.length + 1);\n     out.write(bs.getIgnoredBits());\n     out.write(buf);\n-    return buf.length;\n+    return buf.length + 1;\n   }\n \n   private static int writeString(OutputStream out, int tag, String str)"}, {"sha": "720b835392ab406a39fdf74204b1c52df0ae1766", "filename": "libjava/classpath/gnu/java/security/hash/BaseHash.java", "status": "added", "additions": 206, "deletions": 0, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FBaseHash.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FBaseHash.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FBaseHash.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,206 @@\n+/* BaseHash.java -- \n+   Copyright (C) 2001, 2002, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+/**\n+ * <p>A base abstract class to facilitate hash implementations.</p>\n+ */\n+public abstract class BaseHash implements IMessageDigest\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  /** The canonical name prefix of the hash. */\n+  protected String name;\n+\n+  /** The hash (output) size in bytes. */\n+  protected int hashSize;\n+\n+  /** The hash (inner) block size in bytes. */\n+  protected int blockSize;\n+\n+  /** Number of bytes processed so far. */\n+  protected long count;\n+\n+  /** Temporary input buffer. */\n+  protected byte[] buffer;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * <p>Trivial constructor for use by concrete subclasses.</p>\n+   *\n+   * @param name the canonical name prefix of this instance.\n+   * @param hashSize the block size of the output in bytes.\n+   * @param blockSize the block size of the internal transform.\n+   */\n+  protected BaseHash(String name, int hashSize, int blockSize)\n+  {\n+    super();\n+\n+    this.name = name;\n+    this.hashSize = hashSize;\n+    this.blockSize = blockSize;\n+    this.buffer = new byte[blockSize];\n+\n+    resetContext();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // IMessageDigest interface implementation ---------------------------------\n+\n+  public String name()\n+  {\n+    return name;\n+  }\n+\n+  public int hashSize()\n+  {\n+    return hashSize;\n+  }\n+\n+  public int blockSize()\n+  {\n+    return blockSize;\n+  }\n+\n+  public void update(byte b)\n+  {\n+    // compute number of bytes still unhashed; ie. present in buffer\n+    int i = (int) (count % blockSize);\n+    count++;\n+    buffer[i] = b;\n+    if (i == (blockSize - 1))\n+      {\n+        transform(buffer, 0);\n+      }\n+  }\n+\n+  public void update(byte[] b)\n+  {\n+    update(b, 0, b.length);\n+  }\n+\n+  public void update(byte[] b, int offset, int len)\n+  {\n+    int n = (int) (count % blockSize);\n+    count += len;\n+    int partLen = blockSize - n;\n+    int i = 0;\n+\n+    if (len >= partLen)\n+      {\n+        System.arraycopy(b, offset, buffer, n, partLen);\n+        transform(buffer, 0);\n+        for (i = partLen; i + blockSize - 1 < len; i += blockSize)\n+          {\n+            transform(b, offset + i);\n+          }\n+        n = 0;\n+      }\n+\n+    if (i < len)\n+      {\n+        System.arraycopy(b, offset + i, buffer, n, len - i);\n+      }\n+  }\n+\n+  public byte[] digest()\n+  {\n+    byte[] tail = padBuffer(); // pad remaining bytes in buffer\n+    update(tail, 0, tail.length); // last transform of a message\n+    byte[] result = getResult(); // make a result out of context\n+\n+    reset(); // reset this instance for future re-use\n+\n+    return result;\n+  }\n+\n+  public void reset()\n+  { // reset this instance for future re-use\n+    count = 0L;\n+    for (int i = 0; i < blockSize;)\n+      {\n+        buffer[i++] = 0;\n+      }\n+\n+    resetContext();\n+  }\n+\n+  // methods to be implemented by concrete subclasses ------------------------\n+\n+  public abstract Object clone();\n+\n+  public abstract boolean selfTest();\n+\n+  /**\n+   * <p>Returns the byte array to use as padding before completing a hash\n+   * operation.</p>\n+   *\n+   * @return the bytes to pad the remaining bytes in the buffer before\n+   * completing a hash operation.\n+   */\n+  protected abstract byte[] padBuffer();\n+\n+  /**\n+   * <p>Constructs the result from the contents of the current context.</p>\n+   *\n+   * @return the output of the completed hash operation.\n+   */\n+  protected abstract byte[] getResult();\n+\n+  /** Resets the instance for future re-use. */\n+  protected abstract void resetContext();\n+\n+  /**\n+   * <p>The block digest transformation per se.</p>\n+   *\n+   * @param in the <i>blockSize</i> long block, as an array of bytes to digest.\n+   * @param offset the index where the data to digest is located within the\n+   * input buffer.\n+   */\n+  protected abstract void transform(byte[] in, int offset);\n+}"}, {"sha": "e520921236506419ee77771b48bd34e91ecc2cc7", "filename": "libjava/classpath/gnu/java/security/hash/HashFactory.java", "status": "added", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHashFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHashFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHashFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,178 @@\n+/* HashFactory.java -- \n+   Copyright (C) 2001, 2002, 2003, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * <p>A <i>Factory</i> to instantiate message digest algorithm instances.</p>\n+ */\n+public class HashFactory\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Trivial constructor to enforce <i>Singleton</i> pattern. */\n+  private HashFactory()\n+  {\n+    super();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * <p>Return an instance of a hash algorithm given its name.</p>\n+   *\n+   * @param name the name of the hash algorithm.\n+   * @return an instance of the hash algorithm, or null if none found.\n+   * @exception InternalError if the implementation does not pass its self-\n+   * test.\n+   */\n+  public static IMessageDigest getInstance(String name)\n+  {\n+    if (name == null)\n+      {\n+        return null;\n+      }\n+\n+    name = name.trim();\n+    IMessageDigest result = null;\n+    if (name.equalsIgnoreCase(Registry.WHIRLPOOL_HASH))\n+      {\n+        result = new Whirlpool();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.RIPEMD128_HASH)\n+             || name.equalsIgnoreCase(Registry.RIPEMD_128_HASH))\n+      {\n+        result = new RipeMD128();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.RIPEMD160_HASH)\n+             || name.equalsIgnoreCase(Registry.RIPEMD_160_HASH))\n+      {\n+        result = new RipeMD160();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.SHA160_HASH)\n+             || name.equalsIgnoreCase(Registry.SHA_1_HASH)\n+             || name.equalsIgnoreCase(Registry.SHA1_HASH)\n+             || name.equalsIgnoreCase(Registry.SHA_HASH))\n+      {\n+        result = new Sha160();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.SHA256_HASH))\n+      {\n+        result = new Sha256();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.SHA384_HASH))\n+      {\n+        result = new Sha384();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.SHA512_HASH))\n+      {\n+        result = new Sha512();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.TIGER_HASH))\n+      {\n+        result = new Tiger();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.HAVAL_HASH))\n+      {\n+        result = new Haval();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.MD5_HASH))\n+      {\n+        result = new MD5();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.MD4_HASH))\n+      {\n+        result = new MD4();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.MD2_HASH))\n+      {\n+        result = new MD2();\n+      }\n+    else if (name.equalsIgnoreCase(Registry.HAVAL_HASH))\n+      {\n+        result = new Haval();\n+      }\n+\n+    if (result != null && !result.selfTest())\n+      {\n+        throw new InternalError(result.name());\n+      }\n+\n+    return result;\n+  }\n+\n+  /**\n+   * <p>Returns a {@link Set} of names of hash algorithms supported by this\n+   * <i>Factory</i>.</p>\n+   *\n+   * @return a {@link Set} of hash names (Strings).\n+   */\n+  public static final Set getNames()\n+  {\n+    HashSet hs = new HashSet();\n+    hs.add(Registry.WHIRLPOOL_HASH);\n+    hs.add(Registry.RIPEMD128_HASH);\n+    hs.add(Registry.RIPEMD160_HASH);\n+    hs.add(Registry.SHA160_HASH);\n+    hs.add(Registry.SHA256_HASH);\n+    hs.add(Registry.SHA384_HASH);\n+    hs.add(Registry.SHA512_HASH);\n+    hs.add(Registry.TIGER_HASH);\n+    hs.add(Registry.HAVAL_HASH);\n+    hs.add(Registry.MD5_HASH);\n+    hs.add(Registry.MD4_HASH);\n+    hs.add(Registry.MD2_HASH);\n+\n+    return Collections.unmodifiableSet(hs);\n+  }\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+}"}, {"sha": "f9f3282f27858cf862a0864cb9382468b79dcbf1", "filename": "libjava/classpath/gnu/java/security/hash/Haval.java", "status": "added", "additions": 759, "deletions": 0, "changes": 759, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHaval.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHaval.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FHaval.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,759 @@\n+/* Haval.java -- \n+   Copyright (C) 2003, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>The <i>HAVAL</i> message-digest algorithm is a variable output length,\n+ * with variable number of rounds. By default, this implementation allows\n+ * <i>HAVAL</i> to be used as a drop-in replacement for <i>MD5</i>.</p>\n+ *\n+ * <p>References:</p>\n+ *\n+ * <ol>\n+ *    <li>HAVAL - A One-Way Hashing Algorithm with Variable Length of Output<br>\n+ *    Advances in Cryptology - AUSCRYPT'92, Lecture Notes in Computer Science,<br>\n+ *    Springer-Verlag, 1993; <br>\n+ *    Y. Zheng, J. Pieprzyk and J. Seberry.</li>\n+ * </ol>\n+ */\n+public class Haval extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  public static final int HAVAL_VERSION = 1;\n+\n+  public static final int HAVAL_128_BIT = 16;\n+\n+  public static final int HAVAL_160_BIT = 20;\n+\n+  public static final int HAVAL_192_BIT = 24;\n+\n+  public static final int HAVAL_224_BIT = 28;\n+\n+  public static final int HAVAL_256_BIT = 32;\n+\n+  public static final int HAVAL_3_ROUND = 3;\n+\n+  public static final int HAVAL_4_ROUND = 4;\n+\n+  public static final int HAVAL_5_ROUND = 5;\n+\n+  private static final int BLOCK_SIZE = 128; // inner block size in bytes\n+\n+  private static final String DIGEST0 = \"C68F39913F901F3DDF44C707357A7D70\";\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  /**\n+   * Number of HAVAL rounds. Allowed values are integers in the range <code>3\n+   * .. 5</code>. The default is <code>3</code>.\n+   */\n+  private int rounds = HAVAL_3_ROUND;\n+\n+  /** 128-bit interim result. */\n+  private int h0, h1, h2, h3, h4, h5, h6, h7;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * <p>Calls the constructor with two argument using {@link #HAVAL_128_BIT} as\n+   * the value for the output size (i.e. <code>128</code> bits, and\n+   * {@link #HAVAL_3_ROUND} for the value of number of rounds.</p>\n+   */\n+  public Haval()\n+  {\n+    this(HAVAL_128_BIT, HAVAL_3_ROUND);\n+  }\n+\n+  /**\n+   * <p>Calls the constructor with two arguments using the designated output\n+   * size, and {@link #HAVAL_3_ROUND} for the value of number of rounds.</p>\n+   *\n+   * @param size the output size in bytes of this instance.\n+   * @throws IllegalArgumentException if the designated output size is invalid.\n+   * @see #HAVAL_128_BIT\n+   * @see #HAVAL_160_BIT\n+   * @see #HAVAL_192_BIT\n+   * @see #HAVAL_224_BIT\n+   * @see #HAVAL_256_BIT\n+   */\n+  public Haval(int size)\n+  {\n+    this(size, HAVAL_3_ROUND);\n+  }\n+\n+  /**\n+   * <p>Constructs a <code>Haval</code> instance with the designated output\n+   * size (in bytes).  Valid output <code>size</code> values are <code>16</code>,\n+   * <code>20</code>, <code>24</code>, <code>28</code> and <code>32</code>.\n+   * Valid values for <code>rounds</code> are in the range <code>3..5</code>\n+   * inclusive.</p>\n+   *\n+   * @param size the output size in bytes of this instance.\n+   * @param rounds the number of rounds to apply when transforming data.\n+   * @throws IllegalArgumentException if the designated output size is invalid,\n+   * or if the number of rounds is invalid.\n+   * @see #HAVAL_128_BIT\n+   * @see #HAVAL_160_BIT\n+   * @see #HAVAL_192_BIT\n+   * @see #HAVAL_224_BIT\n+   * @see #HAVAL_256_BIT\n+   * @see #HAVAL_3_ROUND\n+   * @see #HAVAL_4_ROUND\n+   * @see #HAVAL_5_ROUND\n+   */\n+  public Haval(int size, int rounds)\n+  {\n+    super(Registry.HAVAL_HASH, size, BLOCK_SIZE);\n+\n+    if (size != HAVAL_128_BIT && size != HAVAL_160_BIT && size != HAVAL_192_BIT\n+        && size != HAVAL_224_BIT && size != HAVAL_256_BIT)\n+      {\n+        throw new IllegalArgumentException(\"Invalid HAVAL output size\");\n+      }\n+\n+    if (rounds != HAVAL_3_ROUND && rounds != HAVAL_4_ROUND\n+        && rounds != HAVAL_5_ROUND)\n+      {\n+        throw new IllegalArgumentException(\"Invalid HAVAL number of rounds\");\n+      }\n+\n+    this.rounds = rounds;\n+  }\n+\n+  /**\n+   * <p>Private constructor for cloning purposes.</p>\n+   *\n+   * @param md the instance to clone.\n+   */\n+  private Haval(Haval md)\n+  {\n+    this(md.hashSize, md.rounds);\n+\n+    this.h0 = md.h0;\n+    this.h1 = md.h1;\n+    this.h2 = md.h2;\n+    this.h3 = md.h3;\n+    this.h4 = md.h4;\n+    this.h5 = md.h5;\n+    this.h6 = md.h6;\n+    this.h7 = md.h7;\n+    this.count = md.count;\n+    this.buffer = (byte[]) md.buffer.clone();\n+  }\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return new Haval(this);\n+  }\n+\n+  // Implementation of concrete methods in BaseHash --------------------------\n+\n+  protected synchronized void transform(byte[] in, int i)\n+  {\n+    int X0 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X1 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X2 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X3 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X4 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X5 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X6 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X7 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X8 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X9 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | (in[i++] & 0xFF) << 24;\n+    int X10 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X11 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X12 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X13 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X14 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X15 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X16 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X17 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X18 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X19 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X20 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X21 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X22 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X23 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X24 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X25 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X26 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X27 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X28 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X29 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X30 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+    int X31 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | (in[i++] & 0xFF) << 24;\n+\n+    int t0 = h0, t1 = h1, t2 = h2, t3 = h3, t4 = h4, t5 = h5, t6 = h6, t7 = h7;\n+\n+    // Pass 1\n+    t7 = FF1(t7, t6, t5, t4, t3, t2, t1, t0, X0);\n+    t6 = FF1(t6, t5, t4, t3, t2, t1, t0, t7, X1);\n+    t5 = FF1(t5, t4, t3, t2, t1, t0, t7, t6, X2);\n+    t4 = FF1(t4, t3, t2, t1, t0, t7, t6, t5, X3);\n+    t3 = FF1(t3, t2, t1, t0, t7, t6, t5, t4, X4);\n+    t2 = FF1(t2, t1, t0, t7, t6, t5, t4, t3, X5);\n+    t1 = FF1(t1, t0, t7, t6, t5, t4, t3, t2, X6);\n+    t0 = FF1(t0, t7, t6, t5, t4, t3, t2, t1, X7);\n+\n+    t7 = FF1(t7, t6, t5, t4, t3, t2, t1, t0, X8);\n+    t6 = FF1(t6, t5, t4, t3, t2, t1, t0, t7, X9);\n+    t5 = FF1(t5, t4, t3, t2, t1, t0, t7, t6, X10);\n+    t4 = FF1(t4, t3, t2, t1, t0, t7, t6, t5, X11);\n+    t3 = FF1(t3, t2, t1, t0, t7, t6, t5, t4, X12);\n+    t2 = FF1(t2, t1, t0, t7, t6, t5, t4, t3, X13);\n+    t1 = FF1(t1, t0, t7, t6, t5, t4, t3, t2, X14);\n+    t0 = FF1(t0, t7, t6, t5, t4, t3, t2, t1, X15);\n+\n+    t7 = FF1(t7, t6, t5, t4, t3, t2, t1, t0, X16);\n+    t6 = FF1(t6, t5, t4, t3, t2, t1, t0, t7, X17);\n+    t5 = FF1(t5, t4, t3, t2, t1, t0, t7, t6, X18);\n+    t4 = FF1(t4, t3, t2, t1, t0, t7, t6, t5, X19);\n+    t3 = FF1(t3, t2, t1, t0, t7, t6, t5, t4, X20);\n+    t2 = FF1(t2, t1, t0, t7, t6, t5, t4, t3, X21);\n+    t1 = FF1(t1, t0, t7, t6, t5, t4, t3, t2, X22);\n+    t0 = FF1(t0, t7, t6, t5, t4, t3, t2, t1, X23);\n+\n+    t7 = FF1(t7, t6, t5, t4, t3, t2, t1, t0, X24);\n+    t6 = FF1(t6, t5, t4, t3, t2, t1, t0, t7, X25);\n+    t5 = FF1(t5, t4, t3, t2, t1, t0, t7, t6, X26);\n+    t4 = FF1(t4, t3, t2, t1, t0, t7, t6, t5, X27);\n+    t3 = FF1(t3, t2, t1, t0, t7, t6, t5, t4, X28);\n+    t2 = FF1(t2, t1, t0, t7, t6, t5, t4, t3, X29);\n+    t1 = FF1(t1, t0, t7, t6, t5, t4, t3, t2, X30);\n+    t0 = FF1(t0, t7, t6, t5, t4, t3, t2, t1, X31);\n+\n+    // Pass 2\n+    t7 = FF2(t7, t6, t5, t4, t3, t2, t1, t0, X5, 0x452821E6);\n+    t6 = FF2(t6, t5, t4, t3, t2, t1, t0, t7, X14, 0x38D01377);\n+    t5 = FF2(t5, t4, t3, t2, t1, t0, t7, t6, X26, 0xBE5466CF);\n+    t4 = FF2(t4, t3, t2, t1, t0, t7, t6, t5, X18, 0x34E90C6C);\n+    t3 = FF2(t3, t2, t1, t0, t7, t6, t5, t4, X11, 0xC0AC29B7);\n+    t2 = FF2(t2, t1, t0, t7, t6, t5, t4, t3, X28, 0xC97C50DD);\n+    t1 = FF2(t1, t0, t7, t6, t5, t4, t3, t2, X7, 0x3F84D5B5);\n+    t0 = FF2(t0, t7, t6, t5, t4, t3, t2, t1, X16, 0xB5470917);\n+\n+    t7 = FF2(t7, t6, t5, t4, t3, t2, t1, t0, X0, 0x9216D5D9);\n+    t6 = FF2(t6, t5, t4, t3, t2, t1, t0, t7, X23, 0x8979FB1B);\n+    t5 = FF2(t5, t4, t3, t2, t1, t0, t7, t6, X20, 0xD1310BA6);\n+    t4 = FF2(t4, t3, t2, t1, t0, t7, t6, t5, X22, 0x98DFB5AC);\n+    t3 = FF2(t3, t2, t1, t0, t7, t6, t5, t4, X1, 0x2FFD72DB);\n+    t2 = FF2(t2, t1, t0, t7, t6, t5, t4, t3, X10, 0xD01ADFB7);\n+    t1 = FF2(t1, t0, t7, t6, t5, t4, t3, t2, X4, 0xB8E1AFED);\n+    t0 = FF2(t0, t7, t6, t5, t4, t3, t2, t1, X8, 0x6A267E96);\n+\n+    t7 = FF2(t7, t6, t5, t4, t3, t2, t1, t0, X30, 0xBA7C9045);\n+    t6 = FF2(t6, t5, t4, t3, t2, t1, t0, t7, X3, 0xF12C7F99);\n+    t5 = FF2(t5, t4, t3, t2, t1, t0, t7, t6, X21, 0x24A19947);\n+    t4 = FF2(t4, t3, t2, t1, t0, t7, t6, t5, X9, 0xB3916CF7);\n+    t3 = FF2(t3, t2, t1, t0, t7, t6, t5, t4, X17, 0x0801F2E2);\n+    t2 = FF2(t2, t1, t0, t7, t6, t5, t4, t3, X24, 0x858EFC16);\n+    t1 = FF2(t1, t0, t7, t6, t5, t4, t3, t2, X29, 0x636920D8);\n+    t0 = FF2(t0, t7, t6, t5, t4, t3, t2, t1, X6, 0x71574E69);\n+\n+    t7 = FF2(t7, t6, t5, t4, t3, t2, t1, t0, X19, 0xA458FEA3);\n+    t6 = FF2(t6, t5, t4, t3, t2, t1, t0, t7, X12, 0xF4933D7E);\n+    t5 = FF2(t5, t4, t3, t2, t1, t0, t7, t6, X15, 0x0D95748F);\n+    t4 = FF2(t4, t3, t2, t1, t0, t7, t6, t5, X13, 0x728EB658);\n+    t3 = FF2(t3, t2, t1, t0, t7, t6, t5, t4, X2, 0x718BCD58);\n+    t2 = FF2(t2, t1, t0, t7, t6, t5, t4, t3, X25, 0x82154AEE);\n+    t1 = FF2(t1, t0, t7, t6, t5, t4, t3, t2, X31, 0x7B54A41D);\n+    t0 = FF2(t0, t7, t6, t5, t4, t3, t2, t1, X27, 0xC25A59B5);\n+\n+    // Pass 3\n+    t7 = FF3(t7, t6, t5, t4, t3, t2, t1, t0, X19, 0x9C30D539);\n+    t6 = FF3(t6, t5, t4, t3, t2, t1, t0, t7, X9, 0x2AF26013);\n+    t5 = FF3(t5, t4, t3, t2, t1, t0, t7, t6, X4, 0xC5D1B023);\n+    t4 = FF3(t4, t3, t2, t1, t0, t7, t6, t5, X20, 0x286085F0);\n+    t3 = FF3(t3, t2, t1, t0, t7, t6, t5, t4, X28, 0xCA417918);\n+    t2 = FF3(t2, t1, t0, t7, t6, t5, t4, t3, X17, 0xB8DB38EF);\n+    t1 = FF3(t1, t0, t7, t6, t5, t4, t3, t2, X8, 0x8E79DCB0);\n+    t0 = FF3(t0, t7, t6, t5, t4, t3, t2, t1, X22, 0x603A180E);\n+\n+    t7 = FF3(t7, t6, t5, t4, t3, t2, t1, t0, X29, 0x6C9E0E8B);\n+    t6 = FF3(t6, t5, t4, t3, t2, t1, t0, t7, X14, 0xB01E8A3E);\n+    t5 = FF3(t5, t4, t3, t2, t1, t0, t7, t6, X25, 0xD71577C1);\n+    t4 = FF3(t4, t3, t2, t1, t0, t7, t6, t5, X12, 0xBD314B27);\n+    t3 = FF3(t3, t2, t1, t0, t7, t6, t5, t4, X24, 0x78AF2FDA);\n+    t2 = FF3(t2, t1, t0, t7, t6, t5, t4, t3, X30, 0x55605C60);\n+    t1 = FF3(t1, t0, t7, t6, t5, t4, t3, t2, X16, 0xE65525F3);\n+    t0 = FF3(t0, t7, t6, t5, t4, t3, t2, t1, X26, 0xAA55AB94);\n+\n+    t7 = FF3(t7, t6, t5, t4, t3, t2, t1, t0, X31, 0x57489862);\n+    t6 = FF3(t6, t5, t4, t3, t2, t1, t0, t7, X15, 0x63E81440);\n+    t5 = FF3(t5, t4, t3, t2, t1, t0, t7, t6, X7, 0x55CA396A);\n+    t4 = FF3(t4, t3, t2, t1, t0, t7, t6, t5, X3, 0x2AAB10B6);\n+    t3 = FF3(t3, t2, t1, t0, t7, t6, t5, t4, X1, 0xB4CC5C34);\n+    t2 = FF3(t2, t1, t0, t7, t6, t5, t4, t3, X0, 0x1141E8CE);\n+    t1 = FF3(t1, t0, t7, t6, t5, t4, t3, t2, X18, 0xA15486AF);\n+    t0 = FF3(t0, t7, t6, t5, t4, t3, t2, t1, X27, 0x7C72E993);\n+\n+    t7 = FF3(t7, t6, t5, t4, t3, t2, t1, t0, X13, 0xB3EE1411);\n+    t6 = FF3(t6, t5, t4, t3, t2, t1, t0, t7, X6, 0x636FBC2A);\n+    t5 = FF3(t5, t4, t3, t2, t1, t0, t7, t6, X21, 0x2BA9C55D);\n+    t4 = FF3(t4, t3, t2, t1, t0, t7, t6, t5, X10, 0x741831F6);\n+    t3 = FF3(t3, t2, t1, t0, t7, t6, t5, t4, X23, 0xCE5C3E16);\n+    t2 = FF3(t2, t1, t0, t7, t6, t5, t4, t3, X11, 0x9B87931E);\n+    t1 = FF3(t1, t0, t7, t6, t5, t4, t3, t2, X5, 0xAFD6BA33);\n+    t0 = FF3(t0, t7, t6, t5, t4, t3, t2, t1, X2, 0x6C24CF5C);\n+\n+    if (rounds >= 4)\n+      {\n+        t7 = FF4(t7, t6, t5, t4, t3, t2, t1, t0, X24, 0x7A325381);\n+        t6 = FF4(t6, t5, t4, t3, t2, t1, t0, t7, X4, 0x28958677);\n+        t5 = FF4(t5, t4, t3, t2, t1, t0, t7, t6, X0, 0x3B8F4898);\n+        t4 = FF4(t4, t3, t2, t1, t0, t7, t6, t5, X14, 0x6B4BB9AF);\n+        t3 = FF4(t3, t2, t1, t0, t7, t6, t5, t4, X2, 0xC4BFE81B);\n+        t2 = FF4(t2, t1, t0, t7, t6, t5, t4, t3, X7, 0x66282193);\n+        t1 = FF4(t1, t0, t7, t6, t5, t4, t3, t2, X28, 0x61D809CC);\n+        t0 = FF4(t0, t7, t6, t5, t4, t3, t2, t1, X23, 0xFB21A991);\n+        t7 = FF4(t7, t6, t5, t4, t3, t2, t1, t0, X26, 0x487CAC60);\n+        t6 = FF4(t6, t5, t4, t3, t2, t1, t0, t7, X6, 0x5DEC8032);\n+        t5 = FF4(t5, t4, t3, t2, t1, t0, t7, t6, X30, 0xEF845D5D);\n+        t4 = FF4(t4, t3, t2, t1, t0, t7, t6, t5, X20, 0xE98575B1);\n+        t3 = FF4(t3, t2, t1, t0, t7, t6, t5, t4, X18, 0xDC262302);\n+        t2 = FF4(t2, t1, t0, t7, t6, t5, t4, t3, X25, 0xEB651B88);\n+        t1 = FF4(t1, t0, t7, t6, t5, t4, t3, t2, X19, 0x23893E81);\n+        t0 = FF4(t0, t7, t6, t5, t4, t3, t2, t1, X3, 0xD396ACC5);\n+\n+        t7 = FF4(t7, t6, t5, t4, t3, t2, t1, t0, X22, 0x0F6D6FF3);\n+        t6 = FF4(t6, t5, t4, t3, t2, t1, t0, t7, X11, 0x83F44239);\n+        t5 = FF4(t5, t4, t3, t2, t1, t0, t7, t6, X31, 0x2E0B4482);\n+        t4 = FF4(t4, t3, t2, t1, t0, t7, t6, t5, X21, 0xA4842004);\n+        t3 = FF4(t3, t2, t1, t0, t7, t6, t5, t4, X8, 0x69C8F04A);\n+        t2 = FF4(t2, t1, t0, t7, t6, t5, t4, t3, X27, 0x9E1F9B5E);\n+        t1 = FF4(t1, t0, t7, t6, t5, t4, t3, t2, X12, 0x21C66842);\n+        t0 = FF4(t0, t7, t6, t5, t4, t3, t2, t1, X9, 0xF6E96C9A);\n+        t7 = FF4(t7, t6, t5, t4, t3, t2, t1, t0, X1, 0x670C9C61);\n+        t6 = FF4(t6, t5, t4, t3, t2, t1, t0, t7, X29, 0xABD388F0);\n+        t5 = FF4(t5, t4, t3, t2, t1, t0, t7, t6, X5, 0x6A51A0D2);\n+        t4 = FF4(t4, t3, t2, t1, t0, t7, t6, t5, X15, 0xD8542F68);\n+        t3 = FF4(t3, t2, t1, t0, t7, t6, t5, t4, X17, 0x960FA728);\n+        t2 = FF4(t2, t1, t0, t7, t6, t5, t4, t3, X10, 0xAB5133A3);\n+        t1 = FF4(t1, t0, t7, t6, t5, t4, t3, t2, X16, 0x6EEF0B6C);\n+        t0 = FF4(t0, t7, t6, t5, t4, t3, t2, t1, X13, 0x137A3BE4);\n+\n+        if (rounds == 5)\n+          {\n+            t7 = FF5(t7, t6, t5, t4, t3, t2, t1, t0, X27, 0xBA3BF050);\n+            t6 = FF5(t6, t5, t4, t3, t2, t1, t0, t7, X3, 0x7EFB2A98);\n+            t5 = FF5(t5, t4, t3, t2, t1, t0, t7, t6, X21, 0xA1F1651D);\n+            t4 = FF5(t4, t3, t2, t1, t0, t7, t6, t5, X26, 0x39AF0176);\n+            t3 = FF5(t3, t2, t1, t0, t7, t6, t5, t4, X17, 0x66CA593E);\n+            t2 = FF5(t2, t1, t0, t7, t6, t5, t4, t3, X11, 0x82430E88);\n+            t1 = FF5(t1, t0, t7, t6, t5, t4, t3, t2, X20, 0x8CEE8619);\n+            t0 = FF5(t0, t7, t6, t5, t4, t3, t2, t1, X29, 0x456F9FB4);\n+\n+            t7 = FF5(t7, t6, t5, t4, t3, t2, t1, t0, X19, 0x7D84A5C3);\n+            t6 = FF5(t6, t5, t4, t3, t2, t1, t0, t7, X0, 0x3B8B5EBE);\n+            t5 = FF5(t5, t4, t3, t2, t1, t0, t7, t6, X12, 0xE06F75D8);\n+            t4 = FF5(t4, t3, t2, t1, t0, t7, t6, t5, X7, 0x85C12073);\n+            t3 = FF5(t3, t2, t1, t0, t7, t6, t5, t4, X13, 0x401A449F);\n+            t2 = FF5(t2, t1, t0, t7, t6, t5, t4, t3, X8, 0x56C16AA6);\n+            t1 = FF5(t1, t0, t7, t6, t5, t4, t3, t2, X31, 0x4ED3AA62);\n+            t0 = FF5(t0, t7, t6, t5, t4, t3, t2, t1, X10, 0x363F7706);\n+\n+            t7 = FF5(t7, t6, t5, t4, t3, t2, t1, t0, X5, 0x1BFEDF72);\n+            t6 = FF5(t6, t5, t4, t3, t2, t1, t0, t7, X9, 0x429B023D);\n+            t5 = FF5(t5, t4, t3, t2, t1, t0, t7, t6, X14, 0x37D0D724);\n+            t4 = FF5(t4, t3, t2, t1, t0, t7, t6, t5, X30, 0xD00A1248);\n+            t3 = FF5(t3, t2, t1, t0, t7, t6, t5, t4, X18, 0xDB0FEAD3);\n+            t2 = FF5(t2, t1, t0, t7, t6, t5, t4, t3, X6, 0x49F1C09B);\n+            t1 = FF5(t1, t0, t7, t6, t5, t4, t3, t2, X28, 0x075372C9);\n+            t0 = FF5(t0, t7, t6, t5, t4, t3, t2, t1, X24, 0x80991B7B);\n+\n+            t7 = FF5(t7, t6, t5, t4, t3, t2, t1, t0, X2, 0x25D479D8);\n+            t6 = FF5(t6, t5, t4, t3, t2, t1, t0, t7, X23, 0xF6E8DEF7);\n+            t5 = FF5(t5, t4, t3, t2, t1, t0, t7, t6, X16, 0xE3FE501A);\n+            t4 = FF5(t4, t3, t2, t1, t0, t7, t6, t5, X22, 0xB6794C3B);\n+            t3 = FF5(t3, t2, t1, t0, t7, t6, t5, t4, X4, 0x976CE0BD);\n+            t2 = FF5(t2, t1, t0, t7, t6, t5, t4, t3, X1, 0x04C006BA);\n+            t1 = FF5(t1, t0, t7, t6, t5, t4, t3, t2, X25, 0xC1A94FB6);\n+            t0 = FF5(t0, t7, t6, t5, t4, t3, t2, t1, X15, 0x409F60C4);\n+          }\n+      }\n+\n+    h7 += t7;\n+    h6 += t6;\n+    h5 += t5;\n+    h4 += t4;\n+    h3 += t3;\n+    h2 += t2;\n+    h1 += t1;\n+    h0 += t0;\n+  }\n+\n+  protected byte[] padBuffer()\n+  {\n+    // pad out to 118 mod 128.  other 10 bytes have special use.\n+    int n = (int) (count % BLOCK_SIZE);\n+    int padding = (n < 118) ? (118 - n) : (246 - n);\n+    byte[] result = new byte[padding + 10];\n+    result[0] = (byte) 0x01;\n+\n+    // save the version number (LSB 3), the number of rounds (3 bits in the\n+    // middle), the fingerprint length (MSB 2 bits and next byte) and the\n+    // number of bits in the unpadded message.\n+    int bl = hashSize * 8;\n+    result[padding++] = (byte) (((bl & 0x03) << 6) | ((rounds & 0x07) << 3) | (HAVAL_VERSION & 0x07));\n+    result[padding++] = (byte) (bl >>> 2);\n+\n+    // save number of bits, casting the long to an array of 8 bytes\n+    long bits = count << 3;\n+    result[padding++] = (byte) bits;\n+    result[padding++] = (byte) (bits >>> 8);\n+    result[padding++] = (byte) (bits >>> 16);\n+    result[padding++] = (byte) (bits >>> 24);\n+    result[padding++] = (byte) (bits >>> 32);\n+    result[padding++] = (byte) (bits >>> 40);\n+    result[padding++] = (byte) (bits >>> 48);\n+    result[padding] = (byte) (bits >>> 56);\n+\n+    return result;\n+  }\n+\n+  protected byte[] getResult()\n+  {\n+    tailorDigestBits(); // tailor context for the designated output size\n+    // cast enough top context values into an array of hashSize bytes\n+    byte[] result = new byte[hashSize];\n+    if (hashSize >= HAVAL_256_BIT)\n+      {\n+        result[31] = (byte) (h7 >>> 24);\n+        result[30] = (byte) (h7 >>> 16);\n+        result[29] = (byte) (h7 >>> 8);\n+        result[28] = (byte) h7;\n+      }\n+    if (hashSize >= HAVAL_224_BIT)\n+      {\n+        result[27] = (byte) (h6 >>> 24);\n+        result[26] = (byte) (h6 >>> 16);\n+        result[25] = (byte) (h6 >>> 8);\n+        result[24] = (byte) h6;\n+      }\n+    if (hashSize >= HAVAL_192_BIT)\n+      {\n+        result[23] = (byte) (h5 >>> 24);\n+        result[22] = (byte) (h5 >>> 16);\n+        result[21] = (byte) (h5 >>> 8);\n+        result[20] = (byte) h5;\n+      }\n+    if (hashSize >= HAVAL_160_BIT)\n+      {\n+        result[19] = (byte) (h4 >>> 24);\n+        result[18] = (byte) (h4 >>> 16);\n+        result[17] = (byte) (h4 >>> 8);\n+        result[16] = (byte) h4;\n+      }\n+    result[15] = (byte) (h3 >>> 24);\n+    result[14] = (byte) (h3 >>> 16);\n+    result[13] = (byte) (h3 >>> 8);\n+    result[12] = (byte) h3;\n+    result[11] = (byte) (h2 >>> 24);\n+    result[10] = (byte) (h2 >>> 16);\n+    result[9] = (byte) (h2 >>> 8);\n+    result[8] = (byte) h2;\n+    result[7] = (byte) (h1 >>> 24);\n+    result[6] = (byte) (h1 >>> 16);\n+    result[5] = (byte) (h1 >>> 8);\n+    result[4] = (byte) h1;\n+    result[3] = (byte) (h0 >>> 24);\n+    result[2] = (byte) (h0 >>> 16);\n+    result[1] = (byte) (h0 >>> 8);\n+    result[0] = (byte) h0;\n+\n+    return result;\n+  }\n+\n+  protected void resetContext()\n+  {\n+    h0 = 0x243F6A88;\n+    h1 = 0x85A308D3;\n+    h2 = 0x13198A2E;\n+    h3 = 0x03707344;\n+    h4 = 0xA4093822;\n+    h5 = 0x299F31D0;\n+    h6 = 0x082EFA98;\n+    h7 = 0xEC4E6C89;\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        valid = new Boolean(DIGEST0.equals(Util.toString(new Haval().digest())));\n+      }\n+    return valid.booleanValue();\n+  }\n+\n+  // helper methods ----------------------------------------------------------\n+\n+  /** Tailors the last output. */\n+  private void tailorDigestBits()\n+  {\n+    int t;\n+    switch (hashSize)\n+      {\n+      case HAVAL_128_BIT:\n+        t = (h7 & 0x000000FF) | (h6 & 0xFF000000) | (h5 & 0x00FF0000)\n+            | (h4 & 0x0000FF00);\n+        h0 += t >>> 8 | t << 24;\n+        t = (h7 & 0x0000FF00) | (h6 & 0x000000FF) | (h5 & 0xFF000000)\n+            | (h4 & 0x00FF0000);\n+        h1 += t >>> 16 | t << 16;\n+        t = (h7 & 0x00FF0000) | (h6 & 0x0000FF00) | (h5 & 0x000000FF)\n+            | (h4 & 0xFF000000);\n+        h2 += t >>> 24 | t << 8;\n+        t = (h7 & 0xFF000000) | (h6 & 0x00FF0000) | (h5 & 0x0000FF00)\n+            | (h4 & 0x000000FF);\n+        h3 += t;\n+        break;\n+      case HAVAL_160_BIT:\n+        t = (h7 & 0x3F) | (h6 & (0x7F << 25)) | (h5 & (0x3F << 19));\n+        h0 += t >>> 19 | t << 13;\n+        t = (h7 & (0x3F << 6)) | (h6 & 0x3F) | (h5 & (0x7F << 25));\n+        h1 += t >>> 25 | t << 7;\n+        t = (h7 & (0x7F << 12)) | (h6 & (0x3F << 6)) | (h5 & 0x3F);\n+        h2 += t;\n+        t = (h7 & (0x3F << 19)) | (h6 & (0x7F << 12)) | (h5 & (0x3F << 6));\n+        h3 += (t >>> 6);\n+        t = (h7 & (0x7F << 25)) | (h6 & (0x3F << 19)) | (h5 & (0x7F << 12));\n+        h4 += (t >>> 12);\n+        break;\n+      case HAVAL_192_BIT:\n+        t = (h7 & 0x1F) | (h6 & (0x3F << 26));\n+        h0 += t >>> 26 | t << 6;\n+        t = (h7 & (0x1F << 5)) | (h6 & 0x1F);\n+        h1 += t;\n+        t = (h7 & (0x3F << 10)) | (h6 & (0x1F << 5));\n+        h2 += (t >>> 5);\n+        t = (h7 & (0x1F << 16)) | (h6 & (0x3F << 10));\n+        h3 += (t >>> 10);\n+        t = (h7 & (0x1F << 21)) | (h6 & (0x1F << 16));\n+        h4 += (t >>> 16);\n+        t = (h7 & (0x3F << 26)) | (h6 & (0x1F << 21));\n+        h5 += (t >>> 21);\n+        break;\n+      case HAVAL_224_BIT:\n+        h0 += ((h7 >>> 27) & 0x1F);\n+        h1 += ((h7 >>> 22) & 0x1F);\n+        h2 += ((h7 >>> 18) & 0x0F);\n+        h3 += ((h7 >>> 13) & 0x1F);\n+        h4 += ((h7 >>> 9) & 0x0F);\n+        h5 += ((h7 >>> 4) & 0x1F);\n+        h6 += (h7 & 0x0F);\n+      }\n+  }\n+\n+  /**\n+   * Permutations phi_{i,j}, i=3,4,5, j=1,...,i.\n+   *\n+   * rounds = 3:   6 5 4 3 2 1 0\n+   *               | | | | | | | (replaced by)\n+   *  phi_{3,1}:   1 0 3 5 6 2 4\n+   *  phi_{3,2}:   4 2 1 0 5 3 6\n+   *  phi_{3,3}:   6 1 2 3 4 5 0\n+   *\n+   * rounds = 4:   6 5 4 3 2 1 0\n+   *               | | | | | | | (replaced by)\n+   *  phi_{4,1}:   2 6 1 4 5 3 0\n+   *  phi_{4,2}:   3 5 2 0 1 6 4\n+   *  phi_{4,3}:   1 4 3 6 0 2 5\n+   *  phi_{4,4}:   6 4 0 5 2 1 3\n+   *\n+   * rounds = 5:   6 5 4 3 2 1 0\n+   *               | | | | | | | (replaced by)\n+   *  phi_{5,1}:   3 4 1 0 5 2 6\n+   *  phi_{5,2}:   6 2 1 0 3 4 5\n+   *  phi_{5,3}:   2 6 0 4 3 1 5\n+   *  phi_{5,4}:   1 5 3 2 0 4 6\n+   *  phi_{5,5}:   2 5 0 6 4 3 1\n+   */\n+  private int FF1(int x7, int x6, int x5, int x4, int x3, int x2, int x1,\n+                  int x0, int w)\n+  {\n+    int t;\n+    switch (rounds)\n+      {\n+      case 3:\n+        t = f1(x1, x0, x3, x5, x6, x2, x4);\n+        break;\n+      case 4:\n+        t = f1(x2, x6, x1, x4, x5, x3, x0);\n+        break;\n+      default:\n+        t = f1(x3, x4, x1, x0, x5, x2, x6);\n+      }\n+    return (t >>> 7 | t << 25) + (x7 >>> 11 | x7 << 21) + w;\n+  }\n+\n+  private int FF2(int x7, int x6, int x5, int x4, int x3, int x2, int x1,\n+                  int x0, int w, int c)\n+  {\n+    int t;\n+    switch (rounds)\n+      {\n+      case 3:\n+        t = f2(x4, x2, x1, x0, x5, x3, x6);\n+        break;\n+      case 4:\n+        t = f2(x3, x5, x2, x0, x1, x6, x4);\n+        break;\n+      default:\n+        t = f2(x6, x2, x1, x0, x3, x4, x5);\n+      }\n+    return (t >>> 7 | t << 25) + (x7 >>> 11 | x7 << 21) + w + c;\n+  }\n+\n+  private int FF3(int x7, int x6, int x5, int x4, int x3, int x2, int x1,\n+                  int x0, int w, int c)\n+  {\n+    int t;\n+    switch (rounds)\n+      {\n+      case 3:\n+        t = f3(x6, x1, x2, x3, x4, x5, x0);\n+        break;\n+      case 4:\n+        t = f3(x1, x4, x3, x6, x0, x2, x5);\n+        break;\n+      default:\n+        t = f3(x2, x6, x0, x4, x3, x1, x5);\n+      }\n+    return (t >>> 7 | t << 25) + (x7 >>> 11 | x7 << 21) + w + c;\n+  }\n+\n+  private int FF4(int x7, int x6, int x5, int x4, int x3, int x2, int x1,\n+                  int x0, int w, int c)\n+  {\n+    int t;\n+    switch (rounds)\n+      {\n+      case 4:\n+        t = f4(x6, x4, x0, x5, x2, x1, x3);\n+        break;\n+      default:\n+        t = f4(x1, x5, x3, x2, x0, x4, x6);\n+      }\n+    return (t >>> 7 | t << 25) + (x7 >>> 11 | x7 << 21) + w + c;\n+  }\n+\n+  private int FF5(int x7, int x6, int x5, int x4, int x3, int x2, int x1,\n+                  int x0, int w, int c)\n+  {\n+    int t = f5(x2, x5, x0, x6, x4, x3, x1);\n+    return (t >>> 7 | t << 25) + (x7 >>> 11 | x7 << 21) + w + c;\n+  }\n+\n+  private int f1(int x6, int x5, int x4, int x3, int x2, int x1, int x0)\n+  {\n+    return x1 & (x0 ^ x4) ^ x2 & x5 ^ x3 & x6 ^ x0;\n+  }\n+\n+  private int f2(int x6, int x5, int x4, int x3, int x2, int x1, int x0)\n+  {\n+    return x2 & (x1 & ~x3 ^ x4 & x5 ^ x6 ^ x0) ^ x4 & (x1 ^ x5) ^ x3 & x5 ^ x0;\n+  }\n+\n+  private int f3(int x6, int x5, int x4, int x3, int x2, int x1, int x0)\n+  {\n+    return x3 & (x1 & x2 ^ x6 ^ x0) ^ x1 & x4 ^ x2 & x5 ^ x0;\n+  }\n+\n+  private int f4(int x6, int x5, int x4, int x3, int x2, int x1, int x0)\n+  {\n+    return x4 & (x5 & ~x2 ^ x3 & ~x6 ^ x1 ^ x6 ^ x0) ^ x3 & (x1 & x2 ^ x5 ^ x6)\n+           ^ x2 & x6 ^ x0;\n+  }\n+\n+  private int f5(int x6, int x5, int x4, int x3, int x2, int x1, int x0)\n+  {\n+    return x0 & (x1 & x2 & x3 ^ ~x5) ^ x1 & x4 ^ x2 & x5 ^ x3 & x6;\n+  }\n+}"}, {"sha": "b3d7f69ca2ed1eaa4d32af4731ca390ab2084943", "filename": "libjava/classpath/gnu/java/security/hash/IMessageDigest.java", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FIMessageDigest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FIMessageDigest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FIMessageDigest.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,135 @@\n+/* IMessageDigest.java -- \n+   Copyright (C) 2001, 2002, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+/**\n+ * <p>The basic visible methods of any hash algorithm.</p>\n+ *\n+ * <p>A hash (or message digest) algorithm produces its output by iterating a\n+ * basic compression function on blocks of data.</p>\n+ */\n+public interface IMessageDigest extends Cloneable\n+{\n+\n+  // Constants\n+  // -------------------------------------------------------------------------\n+\n+  // Methods\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * <p>Returns the canonical name of this algorithm.</p>\n+   *\n+   * @return the canonical name of this instance.\n+   */\n+  String name();\n+\n+  /**\n+   * <p>Returns the output length in bytes of this message digest algorithm.</p>\n+   *\n+   * @return the output length in bytes of this message digest algorithm.\n+   */\n+  int hashSize();\n+\n+  /**\n+   * <p>Returns the algorithm's (inner) block size in bytes.</p>\n+   *\n+   * @return the algorithm's inner block size in bytes.\n+   */\n+  int blockSize();\n+\n+  /**\n+   * <p>Continues a message digest operation using the input byte.</p>\n+   *\n+   * @param b the input byte to digest.\n+   */\n+  void update(byte b);\n+\n+  /**\n+   * <p>Continues a message digest operation, by filling the buffer, processing\n+   * data in the algorithm's HASH_SIZE-bit block(s), updating the context and\n+   * count, and buffering the remaining bytes in buffer for the next\n+   * operation.</p>\n+   *\n+   * @param in the input block.\n+   */\n+  void update(byte[] in);\n+\n+  /**\n+   * <p>Continues a message digest operation, by filling the buffer, processing\n+   * data in the algorithm's HASH_SIZE-bit block(s), updating the context and\n+   * count, and buffering the remaining bytes in buffer for the next\n+   * operation.</p>\n+   *\n+   * @param in the input block.\n+   * @param offset start of meaningful bytes in input block.\n+   * @param length number of bytes, in input block, to consider.\n+   */\n+  void update(byte[] in, int offset, int length);\n+\n+  /**\n+   * <p>Completes the message digest by performing final operations such as\n+   * padding and resetting the instance.</p>\n+   *\n+   * @return the array of bytes representing the hash value.\n+   */\n+  byte[] digest();\n+\n+  /**\n+   * <p>Resets the current context of this instance clearing any eventually cached\n+   * intermediary values.</p>\n+   */\n+  void reset();\n+\n+  /**\n+   * <p>A basic test. Ensures that the digest of a pre-determined message is equal\n+   * to a known pre-computed value.</p>\n+   *\n+   * @return <tt>true</tt> if the implementation passes a basic self-test.\n+   * Returns <tt>false</tt> otherwise.\n+   */\n+  boolean selfTest();\n+\n+  /**\n+   * <p>Returns a clone copy of this instance.</p>\n+   *\n+   * @return a clone copy of this instance.\n+   */\n+  Object clone();\n+}"}, {"sha": "41e876983bd0d5daa75edcdf5e892481c0c94eea", "filename": "libjava/classpath/gnu/java/security/hash/MD2.java", "status": "added", "additions": 301, "deletions": 0, "changes": 301, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD2.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,301 @@\n+/* MD2.java -- \n+   Copyright (C) 2001, 2002, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>An implementation of the MD2 message digest algorithm.</p>\n+ *\n+ * <p>MD2 is not widely used. Unless it is needed for compatibility with\n+ * existing systems, it is not recommended for use in new applications.</p>\n+ *\n+ * <p>References:</p>\n+ *\n+ * <ol>\n+ *    <li>The <a href=\"http://www.ietf.org/rfc/rfc1319.txt\">MD2</a>\n+ *    Message-Digest Algorithm.<br>\n+ *    B. Kaliski.</li>\n+ *    <li>The <a href=\"http://www.rfc-editor.org/errata.html\">RFC ERRATA PAGE</a>\n+ *    under section RFC 1319.</li>\n+ * </ol>\n+ */\n+public class MD2 extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  /** An MD2 message digest is always 128-bits long, or 16 bytes. */\n+  private static final int DIGEST_LENGTH = 16;\n+\n+  /** The MD2 algorithm operates on 128-bit blocks, or 16 bytes. */\n+  private static final int BLOCK_LENGTH = 16;\n+\n+  /** 256 byte \"random\" permutation of the digits of pi. */\n+  private static final byte[] PI = { 41, 46, 67, -55, -94, -40, 124, 1, 61, 54,\n+                                    84, -95, -20, -16, 6, 19, 98, -89, 5, -13,\n+                                    -64, -57, 115, -116, -104, -109, 43, -39,\n+                                    -68, 76, -126, -54, 30, -101, 87, 60, -3,\n+                                    -44, -32, 22, 103, 66, 111, 24, -118, 23,\n+                                    -27, 18, -66, 78, -60, -42, -38, -98, -34,\n+                                    73, -96, -5, -11, -114, -69, 47, -18, 122,\n+                                    -87, 104, 121, -111, 21, -78, 7, 63, -108,\n+                                    -62, 16, -119, 11, 34, 95, 33, -128, 127,\n+                                    93, -102, 90, -112, 50, 39, 53, 62, -52,\n+                                    -25, -65, -9, -105, 3, -1, 25, 48, -77, 72,\n+                                    -91, -75, -47, -41, 94, -110, 42, -84, 86,\n+                                    -86, -58, 79, -72, 56, -46, -106, -92, 125,\n+                                    -74, 118, -4, 107, -30, -100, 116, 4, -15,\n+                                    69, -99, 112, 89, 100, 113, -121, 32, -122,\n+                                    91, -49, 101, -26, 45, -88, 2, 27, 96, 37,\n+                                    -83, -82, -80, -71, -10, 28, 70, 97, 105,\n+                                    52, 64, 126, 15, 85, 71, -93, 35, -35, 81,\n+                                    -81, 58, -61, 92, -7, -50, -70, -59, -22,\n+                                    38, 44, 83, 13, 110, -123, 40, -124, 9,\n+                                    -45, -33, -51, -12, 65, -127, 77, 82, 106,\n+                                    -36, 55, -56, 108, -63, -85, -6, 36, -31,\n+                                    123, 8, 12, -67, -79, 74, 120, -120, -107,\n+                                    -117, -29, 99, -24, 109, -23, -53, -43, -2,\n+                                    59, 0, 29, 57, -14, -17, -73, 14, 102, 88,\n+                                    -48, -28, -90, 119, 114, -8, -21, 117, 75,\n+                                    10, 49, 68, 80, -76, -113, -19, 31, 26,\n+                                    -37, -103, -115, 51, -97, 17, -125, 20 };\n+\n+  /** The output of this message digest when no data has been input. */\n+  private static final String DIGEST0 = \"8350E5A3E24C153DF2275C9F80692773\";\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  /** The checksum computed so far. */\n+  private byte[] checksum;\n+\n+  /**\n+   * Work array needed by encrypt method. First <code>BLOCK_LENGTH</code> bytes\n+   * are also used to store the running digest.\n+   */\n+  private byte[] work;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Creates a new MD2 digest ready for use. */\n+  public MD2()\n+  {\n+    super(Registry.MD2_HASH, DIGEST_LENGTH, BLOCK_LENGTH);\n+  }\n+\n+  /**\n+   * <p>Private constructor used for cloning.</p>\n+   *\n+   * @param md2 the instance to clone.\n+   */\n+  private MD2(MD2 md2)\n+  {\n+    this();\n+\n+    // superclass field\n+    this.count = md2.count;\n+    this.buffer = (byte[]) md2.buffer.clone();\n+\n+    // private field\n+    this.checksum = (byte[]) md2.checksum.clone();\n+    this.work = (byte[]) md2.work.clone();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return new MD2(this);\n+  }\n+\n+  // Implementation of abstract methods in BaseHash --------------------------\n+\n+  protected byte[] getResult()\n+  {\n+    byte[] result = new byte[DIGEST_LENGTH];\n+\n+    // Encrypt checksum as last block.\n+    encryptBlock(checksum, 0);\n+\n+    for (int i = 0; i < BLOCK_LENGTH; i++)\n+      {\n+        result[i] = work[i];\n+      }\n+\n+    return result;\n+  }\n+\n+  protected void resetContext()\n+  {\n+    checksum = new byte[BLOCK_LENGTH];\n+    work = new byte[BLOCK_LENGTH * 3];\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        valid = new Boolean(DIGEST0.equals(Util.toString(new MD2().digest())));\n+      }\n+    return valid.booleanValue();\n+  }\n+\n+  /**\n+   * <p>Generates an array of padding bytes. The padding is defined as\n+   * <code>i</code> bytes of value <code>i</code>, where <code>i</code> is the\n+   * number of bytes to fill the last block of the message to\n+   * <code>BLOCK_LENGTH</code> bytes (or <code>BLOCK_LENGTH</code> bytes when\n+   * the last block was completely full).</p>\n+   *\n+   * @return the bytes to pad the remaining bytes in the buffer before\n+   * completing a hash operation.\n+   */\n+  protected byte[] padBuffer()\n+  {\n+    int length = BLOCK_LENGTH - (int) (count % BLOCK_LENGTH);\n+    if (length == 0)\n+      {\n+        length = BLOCK_LENGTH;\n+      }\n+    byte[] pad = new byte[length];\n+    for (int i = 0; i < length; i++)\n+      {\n+        pad[i] = (byte) length;\n+      }\n+    return pad;\n+  }\n+\n+  /**\n+   * <p>Adds <code>BLOCK_LENGTH</code> bytes to the running digest.</p>\n+   *\n+   * @param in the byte array to take the <code>BLOCK_LENGTH</code> bytes from.\n+   * @param off the offset to start from in the given byte array.\n+   */\n+  protected void transform(byte[] in, int off)\n+  {\n+    // encryptBlock(in, off);\n+    // updateCheckSum(in, off);\n+    updateCheckSumAndEncryptBlock(in, off);\n+  }\n+\n+  // Private instance methods ------------------------------------------------\n+\n+  /**\n+   * Updates the checksum with the <code>BLOCK_LENGTH</code> bytes from the\n+   * given array starting at <code>off</code>.\n+   */\n+  /*\n+   private void updateCheckSum(byte[] in, int off) {\n+   byte l = checksum[BLOCK_LENGTH-1];\n+   for (int i = 0; i < BLOCK_LENGTH; i++) {\n+   byte b = in[off+i];\n+   //         l = (byte)((checksum[i] & 0xFF) ^ (PI[((b & 0xFF) ^ (l & 0xFF))] & 0xFF));\n+   l = (byte)(checksum[i] ^ PI[(b ^ l) & 0xFF]);\n+   checksum[i] = l;\n+   }\n+   }\n+   */\n+  /**\n+   * Adds a new block (<code>BLOCK_LENGTH</code> bytes) to the running digest\n+   * from the given byte array starting from the given offset.\n+   */\n+  private void encryptBlock(byte[] in, int off)\n+  {\n+    for (int i = 0; i < BLOCK_LENGTH; i++)\n+      {\n+        byte b = in[off + i];\n+        work[BLOCK_LENGTH + i] = b;\n+        work[BLOCK_LENGTH * 2 + i] = (byte) (work[i] ^ b);\n+      }\n+\n+    byte t = 0;\n+    for (int i = 0; i < 18; i++)\n+      {\n+        for (int j = 0; j < 3 * BLOCK_LENGTH; j++)\n+          {\n+            //            t = (byte)((work[j] & 0xFF) ^ (PI[t & 0xFF] & 0xFF));\n+            t = (byte) (work[j] ^ PI[t & 0xFF]);\n+            work[j] = t;\n+          }\n+        //         t = (byte)((t + i) & 0xFF);\n+        t = (byte) (t + i);\n+      }\n+  }\n+\n+  /**\n+   * Optimized method that combines a checksum update and encrypt of a block.\n+   */\n+  private void updateCheckSumAndEncryptBlock(byte[] in, int off)\n+  {\n+    byte l = checksum[BLOCK_LENGTH - 1];\n+    for (int i = 0; i < BLOCK_LENGTH; i++)\n+      {\n+        byte b = in[off + i];\n+        work[BLOCK_LENGTH + i] = b;\n+        //         work[BLOCK_LENGTH*2+i] = (byte)((work[i] & 0xFF) ^ (b & 0xFF));\n+        work[BLOCK_LENGTH * 2 + i] = (byte) (work[i] ^ b);\n+        //         l = (byte)((checksum[i] & 0xFF) ^ (PI[((b & 0xFF) ^ (l & 0xFF))] & 0xFF));\n+        l = (byte) (checksum[i] ^ PI[(b ^ l) & 0xFF]);\n+        checksum[i] = l;\n+      }\n+\n+    byte t = 0;\n+    for (int i = 0; i < 18; i++)\n+      {\n+        for (int j = 0; j < 3 * BLOCK_LENGTH; j++)\n+          {\n+            //            t = (byte)((work[j] & 0xFF) ^ (PI[t & 0xFF] & 0xFF));\n+            t = (byte) (work[j] ^ PI[t & 0xFF]);\n+            work[j] = t;\n+          }\n+        //         t = (byte)((t + i) & 0xFF);\n+        t = (byte) (t + i);\n+      }\n+  }\n+}"}, {"sha": "54dda358b110c3b75370649b4a130efb1e2b78bb", "filename": "libjava/classpath/gnu/java/security/hash/MD4.java", "status": "added", "additions": 328, "deletions": 0, "changes": 328, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD4.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD4.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD4.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,328 @@\n+/* MD4.java -- \n+   Copyright (C) 2001, 2002, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>An implementation of Ron Rivest's MD4 message digest algorithm.</p>\n+ *\n+ * <p>MD4 was the precursor to the stronger {@link gnu.crypto.hash.MD5}\n+ * algorithm, and while not considered cryptograpically secure itself, MD4 is\n+ * in use in various applications. It is slightly faster than MD5.</p>\n+ *\n+ * <p>References:</p>\n+ *\n+ * <ol>\n+ *    <li>The <a href=\"http://www.ietf.org/rfc/rfc1320.txt\">MD4</a>\n+ *    Message-Digest Algorithm.<br>\n+ *    R. Rivest.</li>\n+ * </ol>\n+ *\n+ * @author Casey Marshall (rsdio@metastatic.org)\n+ */\n+public class MD4 extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  /** An MD4 message digest is always 128-bits long, or 16 bytes. */\n+  private static final int DIGEST_LENGTH = 16;\n+\n+  /** The MD4 algorithm operates on 512-bit blocks, or 64 bytes. */\n+  private static final int BLOCK_LENGTH = 64;\n+\n+  private static final int A = 0x67452301;\n+\n+  private static final int B = 0xefcdab89;\n+\n+  private static final int C = 0x98badcfe;\n+\n+  private static final int D = 0x10325476;\n+\n+  /** The output of this message digest when no data has been input. */\n+  private static final String DIGEST0 = \"31D6CFE0D16AE931B73C59D7E0C089C0\";\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  private int a, b, c, d;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /**\n+   * <p>Public constructor. Initializes the chaining variables, sets the byte\n+   * count to <code>0</code>, and creates a new block of <code>512</code> bits.\n+   * </p>\n+   */\n+  public MD4()\n+  {\n+    super(Registry.MD4_HASH, DIGEST_LENGTH, BLOCK_LENGTH);\n+  }\n+\n+  /**\n+   * <p>Trivial private constructor for cloning purposes.</p>\n+   *\n+   * @param that the instance to clone.\n+   */\n+  private MD4(MD4 that)\n+  {\n+    this();\n+\n+    this.a = that.a;\n+    this.b = that.b;\n+    this.c = that.c;\n+    this.d = that.d;\n+    this.count = that.count;\n+    this.buffer = (byte[]) that.buffer.clone();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return new MD4(this);\n+  }\n+\n+  // Implementation of abstract methods in BashHash --------------------------\n+\n+  protected byte[] getResult()\n+  {\n+    byte[] digest = { (byte) a, (byte) (a >>> 8), (byte) (a >>> 16),\n+                     (byte) (a >>> 24), (byte) b, (byte) (b >>> 8),\n+                     (byte) (b >>> 16), (byte) (b >>> 24), (byte) c,\n+                     (byte) (c >>> 8), (byte) (c >>> 16), (byte) (c >>> 24),\n+                     (byte) d, (byte) (d >>> 8), (byte) (d >>> 16),\n+                     (byte) (d >>> 24) };\n+    return digest;\n+  }\n+\n+  protected void resetContext()\n+  {\n+    a = A;\n+    b = B;\n+    c = C;\n+    d = D;\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        valid = new Boolean(DIGEST0.equals(Util.toString(new MD4().digest())));\n+      }\n+    return valid.booleanValue();\n+  }\n+\n+  protected byte[] padBuffer()\n+  {\n+    int n = (int) (count % BLOCK_LENGTH);\n+    int padding = (n < 56) ? (56 - n) : (120 - n);\n+    byte[] pad = new byte[padding + 8];\n+\n+    pad[0] = (byte) 0x80;\n+    long bits = count << 3;\n+    pad[padding++] = (byte) bits;\n+    pad[padding++] = (byte) (bits >>> 8);\n+    pad[padding++] = (byte) (bits >>> 16);\n+    pad[padding++] = (byte) (bits >>> 24);\n+    pad[padding++] = (byte) (bits >>> 32);\n+    pad[padding++] = (byte) (bits >>> 40);\n+    pad[padding++] = (byte) (bits >>> 48);\n+    pad[padding] = (byte) (bits >>> 56);\n+\n+    return pad;\n+  }\n+\n+  protected void transform(byte[] in, int i)\n+  {\n+    int X0 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X1 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X2 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X3 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X4 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X5 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X6 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X7 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X8 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X9 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X10 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X11 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X12 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X13 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X14 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X15 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i] << 24;\n+\n+    int aa, bb, cc, dd;\n+\n+    aa = a;\n+    bb = b;\n+    cc = c;\n+    dd = d;\n+\n+    aa += ((bb & cc) | ((~bb) & dd)) + X0;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += ((aa & bb) | ((~aa) & cc)) + X1;\n+    dd = dd << 7 | dd >>> -7;\n+    cc += ((dd & aa) | ((~dd) & bb)) + X2;\n+    cc = cc << 11 | cc >>> -11;\n+    bb += ((cc & dd) | ((~cc) & aa)) + X3;\n+    bb = bb << 19 | bb >>> -19;\n+    aa += ((bb & cc) | ((~bb) & dd)) + X4;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += ((aa & bb) | ((~aa) & cc)) + X5;\n+    dd = dd << 7 | dd >>> -7;\n+    cc += ((dd & aa) | ((~dd) & bb)) + X6;\n+    cc = cc << 11 | cc >>> -11;\n+    bb += ((cc & dd) | ((~cc) & aa)) + X7;\n+    bb = bb << 19 | bb >>> -19;\n+    aa += ((bb & cc) | ((~bb) & dd)) + X8;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += ((aa & bb) | ((~aa) & cc)) + X9;\n+    dd = dd << 7 | dd >>> -7;\n+    cc += ((dd & aa) | ((~dd) & bb)) + X10;\n+    cc = cc << 11 | cc >>> -11;\n+    bb += ((cc & dd) | ((~cc) & aa)) + X11;\n+    bb = bb << 19 | bb >>> -19;\n+    aa += ((bb & cc) | ((~bb) & dd)) + X12;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += ((aa & bb) | ((~aa) & cc)) + X13;\n+    dd = dd << 7 | dd >>> -7;\n+    cc += ((dd & aa) | ((~dd) & bb)) + X14;\n+    cc = cc << 11 | cc >>> -11;\n+    bb += ((cc & dd) | ((~cc) & aa)) + X15;\n+    bb = bb << 19 | bb >>> -19;\n+\n+    aa += ((bb & (cc | dd)) | (cc & dd)) + X0 + 0x5a827999;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += ((aa & (bb | cc)) | (bb & cc)) + X4 + 0x5a827999;\n+    dd = dd << 5 | dd >>> -5;\n+    cc += ((dd & (aa | bb)) | (aa & bb)) + X8 + 0x5a827999;\n+    cc = cc << 9 | cc >>> -9;\n+    bb += ((cc & (dd | aa)) | (dd & aa)) + X12 + 0x5a827999;\n+    bb = bb << 13 | bb >>> -13;\n+    aa += ((bb & (cc | dd)) | (cc & dd)) + X1 + 0x5a827999;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += ((aa & (bb | cc)) | (bb & cc)) + X5 + 0x5a827999;\n+    dd = dd << 5 | dd >>> -5;\n+    cc += ((dd & (aa | bb)) | (aa & bb)) + X9 + 0x5a827999;\n+    cc = cc << 9 | cc >>> -9;\n+    bb += ((cc & (dd | aa)) | (dd & aa)) + X13 + 0x5a827999;\n+    bb = bb << 13 | bb >>> -13;\n+    aa += ((bb & (cc | dd)) | (cc & dd)) + X2 + 0x5a827999;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += ((aa & (bb | cc)) | (bb & cc)) + X6 + 0x5a827999;\n+    dd = dd << 5 | dd >>> -5;\n+    cc += ((dd & (aa | bb)) | (aa & bb)) + X10 + 0x5a827999;\n+    cc = cc << 9 | cc >>> -9;\n+    bb += ((cc & (dd | aa)) | (dd & aa)) + X14 + 0x5a827999;\n+    bb = bb << 13 | bb >>> -13;\n+    aa += ((bb & (cc | dd)) | (cc & dd)) + X3 + 0x5a827999;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += ((aa & (bb | cc)) | (bb & cc)) + X7 + 0x5a827999;\n+    dd = dd << 5 | dd >>> -5;\n+    cc += ((dd & (aa | bb)) | (aa & bb)) + X11 + 0x5a827999;\n+    cc = cc << 9 | cc >>> -9;\n+    bb += ((cc & (dd | aa)) | (dd & aa)) + X15 + 0x5a827999;\n+    bb = bb << 13 | bb >>> -13;\n+\n+    aa += (bb ^ cc ^ dd) + X0 + 0x6ed9eba1;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += (aa ^ bb ^ cc) + X8 + 0x6ed9eba1;\n+    dd = dd << 9 | dd >>> -9;\n+    cc += (dd ^ aa ^ bb) + X4 + 0x6ed9eba1;\n+    cc = cc << 11 | cc >>> -11;\n+    bb += (cc ^ dd ^ aa) + X12 + 0x6ed9eba1;\n+    bb = bb << 15 | bb >>> -15;\n+    aa += (bb ^ cc ^ dd) + X2 + 0x6ed9eba1;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += (aa ^ bb ^ cc) + X10 + 0x6ed9eba1;\n+    dd = dd << 9 | dd >>> -9;\n+    cc += (dd ^ aa ^ bb) + X6 + 0x6ed9eba1;\n+    cc = cc << 11 | cc >>> -11;\n+    bb += (cc ^ dd ^ aa) + X14 + 0x6ed9eba1;\n+    bb = bb << 15 | bb >>> -15;\n+    aa += (bb ^ cc ^ dd) + X1 + 0x6ed9eba1;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += (aa ^ bb ^ cc) + X9 + 0x6ed9eba1;\n+    dd = dd << 9 | dd >>> -9;\n+    cc += (dd ^ aa ^ bb) + X5 + 0x6ed9eba1;\n+    cc = cc << 11 | cc >>> -11;\n+    bb += (cc ^ dd ^ aa) + X13 + 0x6ed9eba1;\n+    bb = bb << 15 | bb >>> -15;\n+    aa += (bb ^ cc ^ dd) + X3 + 0x6ed9eba1;\n+    aa = aa << 3 | aa >>> -3;\n+    dd += (aa ^ bb ^ cc) + X11 + 0x6ed9eba1;\n+    dd = dd << 9 | dd >>> -9;\n+    cc += (dd ^ aa ^ bb) + X7 + 0x6ed9eba1;\n+    cc = cc << 11 | cc >>> -11;\n+    bb += (cc ^ dd ^ aa) + X15 + 0x6ed9eba1;\n+    bb = bb << 15 | bb >>> -15;\n+\n+    a += aa;\n+    b += bb;\n+    c += cc;\n+    d += dd;\n+  }\n+}"}, {"sha": "463292984dde945be0627bbddbe452fc46c8a8bb", "filename": "libjava/classpath/gnu/java/security/hash/MD5.java", "status": "added", "additions": 365, "deletions": 0, "changes": 365, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD5.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD5.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FMD5.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,365 @@\n+/* MD5.java -- \n+   Copyright (C) 2001, 2002, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>The MD5 message-digest algorithm takes as input a message of arbitrary\n+ * length and produces as output a 128-bit \"fingerprint\" or \"message digest\" of\n+ * the input. It is conjectured that it is computationally infeasible to\n+ * produce two messages having the same message digest, or to produce any\n+ * message having a given prespecified target message digest.</p>\n+ *\n+ * <p>References:</p>\n+ *\n+ * <ol>\n+ *    <li>The <a href=\"http://www.ietf.org/rfc/rfc1321.txt\">MD5</a> Message-\n+ *    Digest Algorithm.<br>\n+ *    R. Rivest.</li>\n+ * </ol>\n+ */\n+public class MD5 extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  private static final int BLOCK_SIZE = 64; // inner block size in bytes\n+\n+  private static final String DIGEST0 = \"D41D8CD98F00B204E9800998ECF8427E\";\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  /** 128-bit interim result. */\n+  private int h0, h1, h2, h3;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Trivial 0-arguments constructor. */\n+  public MD5()\n+  {\n+    super(Registry.MD5_HASH, 16, BLOCK_SIZE);\n+  }\n+\n+  /**\n+   * <p>Private constructor for cloning purposes.</p>\n+   *\n+   * @param md the instance to clone.\n+   */\n+  private MD5(MD5 md)\n+  {\n+    this();\n+\n+    this.h0 = md.h0;\n+    this.h1 = md.h1;\n+    this.h2 = md.h2;\n+    this.h3 = md.h3;\n+    this.count = md.count;\n+    this.buffer = (byte[]) md.buffer.clone();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return new MD5(this);\n+  }\n+\n+  // Implementation of concrete methods in BaseHash --------------------------\n+\n+  protected synchronized void transform(byte[] in, int i)\n+  {\n+    int X0 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X1 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X2 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X3 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X4 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X5 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X6 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X7 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X8 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X9 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+             | in[i++] << 24;\n+    int X10 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X11 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X12 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X13 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X14 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i++] << 24;\n+    int X15 = (in[i++] & 0xFF) | (in[i++] & 0xFF) << 8 | (in[i++] & 0xFF) << 16\n+              | in[i] << 24;\n+\n+    int A = h0;\n+    int B = h1;\n+    int C = h2;\n+    int D = h3;\n+\n+    // hex constants are from md5.c in FSF Gnu Privacy Guard 0.9.2\n+    // round 1\n+    A += ((B & C) | (~B & D)) + X0 + 0xD76AA478;\n+    A = B + (A << 7 | A >>> -7);\n+    D += ((A & B) | (~A & C)) + X1 + 0xE8C7B756;\n+    D = A + (D << 12 | D >>> -12);\n+    C += ((D & A) | (~D & B)) + X2 + 0x242070DB;\n+    C = D + (C << 17 | C >>> -17);\n+    B += ((C & D) | (~C & A)) + X3 + 0xC1BDCEEE;\n+    B = C + (B << 22 | B >>> -22);\n+\n+    A += ((B & C) | (~B & D)) + X4 + 0xF57C0FAF;\n+    A = B + (A << 7 | A >>> -7);\n+    D += ((A & B) | (~A & C)) + X5 + 0x4787C62A;\n+    D = A + (D << 12 | D >>> -12);\n+    C += ((D & A) | (~D & B)) + X6 + 0xA8304613;\n+    C = D + (C << 17 | C >>> -17);\n+    B += ((C & D) | (~C & A)) + X7 + 0xFD469501;\n+    B = C + (B << 22 | B >>> -22);\n+\n+    A += ((B & C) | (~B & D)) + X8 + 0x698098D8;\n+    A = B + (A << 7 | A >>> -7);\n+    D += ((A & B) | (~A & C)) + X9 + 0x8B44F7AF;\n+    D = A + (D << 12 | D >>> -12);\n+    C += ((D & A) | (~D & B)) + X10 + 0xFFFF5BB1;\n+    C = D + (C << 17 | C >>> -17);\n+    B += ((C & D) | (~C & A)) + X11 + 0x895CD7BE;\n+    B = C + (B << 22 | B >>> -22);\n+\n+    A += ((B & C) | (~B & D)) + X12 + 0x6B901122;\n+    A = B + (A << 7 | A >>> -7);\n+    D += ((A & B) | (~A & C)) + X13 + 0xFD987193;\n+    D = A + (D << 12 | D >>> -12);\n+    C += ((D & A) | (~D & B)) + X14 + 0xA679438E;\n+    C = D + (C << 17 | C >>> -17);\n+    B += ((C & D) | (~C & A)) + X15 + 0x49B40821;\n+    B = C + (B << 22 | B >>> -22);\n+\n+    // round 2\n+    A += ((B & D) | (C & ~D)) + X1 + 0xF61E2562;\n+    A = B + (A << 5 | A >>> -5);\n+    D += ((A & C) | (B & ~C)) + X6 + 0xC040B340;\n+    D = A + (D << 9 | D >>> -9);\n+    C += ((D & B) | (A & ~B)) + X11 + 0x265E5A51;\n+    C = D + (C << 14 | C >>> -14);\n+    B += ((C & A) | (D & ~A)) + X0 + 0xE9B6C7AA;\n+    B = C + (B << 20 | B >>> -20);\n+\n+    A += ((B & D) | (C & ~D)) + X5 + 0xD62F105D;\n+    A = B + (A << 5 | A >>> -5);\n+    D += ((A & C) | (B & ~C)) + X10 + 0x02441453;\n+    D = A + (D << 9 | D >>> -9);\n+    C += ((D & B) | (A & ~B)) + X15 + 0xD8A1E681;\n+    C = D + (C << 14 | C >>> -14);\n+    B += ((C & A) | (D & ~A)) + X4 + 0xE7D3FBC8;\n+    B = C + (B << 20 | B >>> -20);\n+\n+    A += ((B & D) | (C & ~D)) + X9 + 0x21E1CDE6;\n+    A = B + (A << 5 | A >>> -5);\n+    D += ((A & C) | (B & ~C)) + X14 + 0xC33707D6;\n+    D = A + (D << 9 | D >>> -9);\n+    C += ((D & B) | (A & ~B)) + X3 + 0xF4D50D87;\n+    C = D + (C << 14 | C >>> -14);\n+    B += ((C & A) | (D & ~A)) + X8 + 0x455A14ED;\n+    B = C + (B << 20 | B >>> -20);\n+\n+    A += ((B & D) | (C & ~D)) + X13 + 0xA9E3E905;\n+    A = B + (A << 5 | A >>> -5);\n+    D += ((A & C) | (B & ~C)) + X2 + 0xFCEFA3F8;\n+    D = A + (D << 9 | D >>> -9);\n+    C += ((D & B) | (A & ~B)) + X7 + 0x676F02D9;\n+    C = D + (C << 14 | C >>> -14);\n+    B += ((C & A) | (D & ~A)) + X12 + 0x8D2A4C8A;\n+    B = C + (B << 20 | B >>> -20);\n+\n+    // round 3\n+    A += (B ^ C ^ D) + X5 + 0xFFFA3942;\n+    A = B + (A << 4 | A >>> -4);\n+    D += (A ^ B ^ C) + X8 + 0x8771F681;\n+    D = A + (D << 11 | D >>> -11);\n+    C += (D ^ A ^ B) + X11 + 0x6D9D6122;\n+    C = D + (C << 16 | C >>> -16);\n+    B += (C ^ D ^ A) + X14 + 0xFDE5380C;\n+    B = C + (B << 23 | B >>> -23);\n+\n+    A += (B ^ C ^ D) + X1 + 0xA4BEEA44;\n+    A = B + (A << 4 | A >>> -4);\n+    D += (A ^ B ^ C) + X4 + 0x4BDECFA9;\n+    D = A + (D << 11 | D >>> -11);\n+    C += (D ^ A ^ B) + X7 + 0xF6BB4B60;\n+    C = D + (C << 16 | C >>> -16);\n+    B += (C ^ D ^ A) + X10 + 0xBEBFBC70;\n+    B = C + (B << 23 | B >>> -23);\n+\n+    A += (B ^ C ^ D) + X13 + 0x289B7EC6;\n+    A = B + (A << 4 | A >>> -4);\n+    D += (A ^ B ^ C) + X0 + 0xEAA127FA;\n+    D = A + (D << 11 | D >>> -11);\n+    C += (D ^ A ^ B) + X3 + 0xD4EF3085;\n+    C = D + (C << 16 | C >>> -16);\n+    B += (C ^ D ^ A) + X6 + 0x04881D05;\n+    B = C + (B << 23 | B >>> -23);\n+\n+    A += (B ^ C ^ D) + X9 + 0xD9D4D039;\n+    A = B + (A << 4 | A >>> -4);\n+    D += (A ^ B ^ C) + X12 + 0xE6DB99E5;\n+    D = A + (D << 11 | D >>> -11);\n+    C += (D ^ A ^ B) + X15 + 0x1FA27CF8;\n+    C = D + (C << 16 | C >>> -16);\n+    B += (C ^ D ^ A) + X2 + 0xC4AC5665;\n+    B = C + (B << 23 | B >>> -23);\n+\n+    // round 4\n+    A += (C ^ (B | ~D)) + X0 + 0xF4292244;\n+    A = B + (A << 6 | A >>> -6);\n+    D += (B ^ (A | ~C)) + X7 + 0x432AFF97;\n+    D = A + (D << 10 | D >>> -10);\n+    C += (A ^ (D | ~B)) + X14 + 0xAB9423A7;\n+    C = D + (C << 15 | C >>> -15);\n+    B += (D ^ (C | ~A)) + X5 + 0xFC93A039;\n+    B = C + (B << 21 | B >>> -21);\n+\n+    A += (C ^ (B | ~D)) + X12 + 0x655B59C3;\n+    A = B + (A << 6 | A >>> -6);\n+    D += (B ^ (A | ~C)) + X3 + 0x8F0CCC92;\n+    D = A + (D << 10 | D >>> -10);\n+    C += (A ^ (D | ~B)) + X10 + 0xFFEFF47D;\n+    C = D + (C << 15 | C >>> -15);\n+    B += (D ^ (C | ~A)) + X1 + 0x85845dd1;\n+    B = C + (B << 21 | B >>> -21);\n+\n+    A += (C ^ (B | ~D)) + X8 + 0x6FA87E4F;\n+    A = B + (A << 6 | A >>> -6);\n+    D += (B ^ (A | ~C)) + X15 + 0xFE2CE6E0;\n+    D = A + (D << 10 | D >>> -10);\n+    C += (A ^ (D | ~B)) + X6 + 0xA3014314;\n+    C = D + (C << 15 | C >>> -15);\n+    B += (D ^ (C | ~A)) + X13 + 0x4E0811A1;\n+    B = C + (B << 21 | B >>> -21);\n+\n+    A += (C ^ (B | ~D)) + X4 + 0xF7537E82;\n+    A = B + (A << 6 | A >>> -6);\n+    D += (B ^ (A | ~C)) + X11 + 0xBD3AF235;\n+    D = A + (D << 10 | D >>> -10);\n+    C += (A ^ (D | ~B)) + X2 + 0x2AD7D2BB;\n+    C = D + (C << 15 | C >>> -15);\n+    B += (D ^ (C | ~A)) + X9 + 0xEB86D391;\n+    B = C + (B << 21 | B >>> -21);\n+\n+    h0 += A;\n+    h1 += B;\n+    h2 += C;\n+    h3 += D;\n+  }\n+\n+  protected byte[] padBuffer()\n+  {\n+    int n = (int) (count % BLOCK_SIZE);\n+    int padding = (n < 56) ? (56 - n) : (120 - n);\n+    byte[] result = new byte[padding + 8];\n+\n+    // padding is always binary 1 followed by binary 0s\n+    result[0] = (byte) 0x80;\n+\n+    // save number of bits, casting the long to an array of 8 bytes\n+    long bits = count << 3;\n+    result[padding++] = (byte) bits;\n+    result[padding++] = (byte) (bits >>> 8);\n+    result[padding++] = (byte) (bits >>> 16);\n+    result[padding++] = (byte) (bits >>> 24);\n+    result[padding++] = (byte) (bits >>> 32);\n+    result[padding++] = (byte) (bits >>> 40);\n+    result[padding++] = (byte) (bits >>> 48);\n+    result[padding] = (byte) (bits >>> 56);\n+\n+    return result;\n+  }\n+\n+  protected byte[] getResult()\n+  {\n+    byte[] result = new byte[] { (byte) h0, (byte) (h0 >>> 8),\n+                                (byte) (h0 >>> 16), (byte) (h0 >>> 24),\n+                                (byte) h1, (byte) (h1 >>> 8),\n+                                (byte) (h1 >>> 16), (byte) (h1 >>> 24),\n+                                (byte) h2, (byte) (h2 >>> 8),\n+                                (byte) (h2 >>> 16), (byte) (h2 >>> 24),\n+                                (byte) h3, (byte) (h3 >>> 8),\n+                                (byte) (h3 >>> 16), (byte) (h3 >>> 24) };\n+\n+    return result;\n+  }\n+\n+  protected void resetContext()\n+  {\n+    // magic MD5/RIPEMD128 initialisation constants\n+    h0 = 0x67452301;\n+    h1 = 0xEFCDAB89;\n+    h2 = 0x98BADCFE;\n+    h3 = 0x10325476;\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        valid = new Boolean(DIGEST0.equals(Util.toString(new MD5().digest())));\n+      }\n+    return valid.booleanValue();\n+  }\n+}"}, {"sha": "83e8f25044d179923e071e887c7bdd9c7c8410fd", "filename": "libjava/classpath/gnu/java/security/hash/RipeMD128.java", "status": "added", "additions": 291, "deletions": 0, "changes": 291, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD128.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD128.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD128.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,291 @@\n+/* RipeMD128.java -- \n+   Copyright (C) 2001, 2002, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>RIPEMD-128 is a 128-bit message digest.</p>\n+ *\n+ * <p>References:</p>\n+ *\n+ * <ol>\n+ *    <li><a href=\"http://www.esat.kuleuven.ac.be/~bosselae/ripemd160.html\">\n+ *    RIPEMD160</a>: A Strengthened Version of RIPEMD.<br>\n+ *    Hans Dobbertin, Antoon Bosselaers and Bart Preneel.</li>\n+ * </ol>\n+ */\n+public class RipeMD128 extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  private static final int BLOCK_SIZE = 64; // inner block size in bytes\n+\n+  private static final String DIGEST0 = \"CDF26213A150DC3ECB610F18F6B38B46\";\n+\n+  /** Constants for the transform method. */\n+  // selection of message word\n+  private static final int[] R = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n+                                  13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0,\n+                                  9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8,\n+                                  1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10,\n+                                  0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2 };\n+\n+  private static final int[] Rp = { 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1,\n+                                   10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14,\n+                                   15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14,\n+                                   6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4,\n+                                   1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14 };\n+\n+  // amount for rotate left (rol)\n+  private static final int[] S = { 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15,\n+                                  6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12,\n+                                  15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9,\n+                                  13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12,\n+                                  14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5,\n+                                  12 };\n+\n+  private static final int[] Sp = { 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11,\n+                                   14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11,\n+                                   7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8,\n+                                   6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15,\n+                                   5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5,\n+                                   15, 8 };\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  /** 128-bit h0, h1, h2, h3 (interim result) */\n+  private int h0, h1, h2, h3;\n+\n+  /** 512 bits work buffer = 16 x 32-bit words */\n+  private int[] X = new int[16];\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Trivial 0-arguments constructor. */\n+  public RipeMD128()\n+  {\n+    super(Registry.RIPEMD128_HASH, 16, BLOCK_SIZE);\n+  }\n+\n+  /**\n+   * <p>Private constructor for cloning purposes.</p>\n+   *\n+   * @param md the instance to clone.\n+   */\n+  private RipeMD128(RipeMD128 md)\n+  {\n+    this();\n+\n+    this.h0 = md.h0;\n+    this.h1 = md.h1;\n+    this.h2 = md.h2;\n+    this.h3 = md.h3;\n+    this.count = md.count;\n+    this.buffer = (byte[]) md.buffer.clone();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return new RipeMD128(this);\n+  }\n+\n+  // Implementation of concrete methods in BaseHash --------------------------\n+\n+  protected void transform(byte[] in, int offset)\n+  {\n+    int A, B, C, D, Ap, Bp, Cp, Dp, T, s, i;\n+\n+    // encode 64 bytes from input block into an array of 16 unsigned\n+    // integers.\n+    for (i = 0; i < 16; i++)\n+      {\n+        X[i] = (in[offset++] & 0xFF) | (in[offset++] & 0xFF) << 8\n+               | (in[offset++] & 0xFF) << 16 | in[offset++] << 24;\n+      }\n+\n+    A = Ap = h0;\n+    B = Bp = h1;\n+    C = Cp = h2;\n+    D = Dp = h3;\n+\n+    for (i = 0; i < 16; i++)\n+      { // rounds 0...15\n+        s = S[i];\n+        T = A + (B ^ C ^ D) + X[i];\n+        A = D;\n+        D = C;\n+        C = B;\n+        B = T << s | T >>> (32 - s);\n+\n+        s = Sp[i];\n+        T = Ap + ((Bp & Dp) | (Cp & ~Dp)) + X[Rp[i]] + 0x50A28BE6;\n+        Ap = Dp;\n+        Dp = Cp;\n+        Cp = Bp;\n+        Bp = T << s | T >>> (32 - s);\n+      }\n+\n+    for (; i < 32; i++)\n+      { // rounds 16...31\n+        s = S[i];\n+        T = A + ((B & C) | (~B & D)) + X[R[i]] + 0x5A827999;\n+        A = D;\n+        D = C;\n+        C = B;\n+        B = T << s | T >>> (32 - s);\n+\n+        s = Sp[i];\n+        T = Ap + ((Bp | ~Cp) ^ Dp) + X[Rp[i]] + 0x5C4DD124;\n+        Ap = Dp;\n+        Dp = Cp;\n+        Cp = Bp;\n+        Bp = T << s | T >>> (32 - s);\n+      }\n+\n+    for (; i < 48; i++)\n+      { // rounds 32...47\n+        s = S[i];\n+        T = A + ((B | ~C) ^ D) + X[R[i]] + 0x6ED9EBA1;\n+        A = D;\n+        D = C;\n+        C = B;\n+        B = T << s | T >>> (32 - s);\n+\n+        s = Sp[i];\n+        T = Ap + ((Bp & Cp) | (~Bp & Dp)) + X[Rp[i]] + 0x6D703EF3;\n+        Ap = Dp;\n+        Dp = Cp;\n+        Cp = Bp;\n+        Bp = T << s | T >>> (32 - s);\n+      }\n+\n+    for (; i < 64; i++)\n+      { // rounds 48...63\n+        s = S[i];\n+        T = A + ((B & D) | (C & ~D)) + X[R[i]] + 0x8F1BBCDC;\n+        A = D;\n+        D = C;\n+        C = B;\n+        B = T << s | T >>> (32 - s);\n+\n+        s = Sp[i];\n+        T = Ap + (Bp ^ Cp ^ Dp) + X[Rp[i]];\n+        Ap = Dp;\n+        Dp = Cp;\n+        Cp = Bp;\n+        Bp = T << s | T >>> (32 - s);\n+      }\n+\n+    T = h1 + C + Dp;\n+    h1 = h2 + D + Ap;\n+    h2 = h3 + A + Bp;\n+    h3 = h0 + B + Cp;\n+    h0 = T;\n+  }\n+\n+  protected byte[] padBuffer()\n+  {\n+    int n = (int) (count % BLOCK_SIZE);\n+    int padding = (n < 56) ? (56 - n) : (120 - n);\n+    byte[] result = new byte[padding + 8];\n+\n+    // padding is always binary 1 followed by binary 0s\n+    result[0] = (byte) 0x80;\n+\n+    // save number of bits, casting the long to an array of 8 bytes\n+    long bits = count << 3;\n+    result[padding++] = (byte) bits;\n+    result[padding++] = (byte) (bits >>> 8);\n+    result[padding++] = (byte) (bits >>> 16);\n+    result[padding++] = (byte) (bits >>> 24);\n+    result[padding++] = (byte) (bits >>> 32);\n+    result[padding++] = (byte) (bits >>> 40);\n+    result[padding++] = (byte) (bits >>> 48);\n+    result[padding] = (byte) (bits >>> 56);\n+\n+    return result;\n+  }\n+\n+  protected byte[] getResult()\n+  {\n+    byte[] result = new byte[] { (byte) h0, (byte) (h0 >>> 8),\n+                                (byte) (h0 >>> 16), (byte) (h0 >>> 24),\n+                                (byte) h1, (byte) (h1 >>> 8),\n+                                (byte) (h1 >>> 16), (byte) (h1 >>> 24),\n+                                (byte) h2, (byte) (h2 >>> 8),\n+                                (byte) (h2 >>> 16), (byte) (h2 >>> 24),\n+                                (byte) h3, (byte) (h3 >>> 8),\n+                                (byte) (h3 >>> 16), (byte) (h3 >>> 24) };\n+\n+    return result;\n+  }\n+\n+  protected void resetContext()\n+  {\n+    // magic RIPEMD128 initialisation constants\n+    h0 = 0x67452301;\n+    h1 = 0xEFCDAB89;\n+    h2 = 0x98BADCFE;\n+    h3 = 0x10325476;\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        valid = new Boolean\n+          (DIGEST0.equals(Util.toString(new RipeMD128().digest())));\n+      }\n+    return valid.booleanValue();\n+  }\n+}"}, {"sha": "73ecc5161d71df0f8649de3a11b0afc2d73b067c", "filename": "libjava/classpath/gnu/java/security/hash/RipeMD160.java", "status": "added", "additions": 328, "deletions": 0, "changes": 328, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD160.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD160.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FRipeMD160.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,328 @@\n+/* RipeMD160.java -- \n+   Copyright (C) 2001, 2002, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>RIPEMD-160 is a 160-bit message digest.</p>\n+ *\n+ * <p>References:</p>\n+ *\n+ * <ol>\n+ *    <li><a href=\"http://www.esat.kuleuven.ac.be/~bosselae/ripemd160.html\">\n+ *    RIPEMD160</a>: A Strengthened Version of RIPEMD.<br>\n+ *    Hans Dobbertin, Antoon Bosselaers and Bart Preneel.</li>\n+ * </ol>\n+ */\n+public class RipeMD160 extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  private static final int BLOCK_SIZE = 64; // inner block size in bytes\n+\n+  private static final String DIGEST0 = \"9C1185A5C5E9FC54612808977EE8F548B2258D31\";\n+\n+  // selection of message word\n+  private static final int[] R = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n+                                  13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0,\n+                                  9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8,\n+                                  1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10,\n+                                  0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0,\n+                                  5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15,\n+                                  13 };\n+\n+  private static final int[] Rp = { 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1,\n+                                   10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14,\n+                                   15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14,\n+                                   6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4,\n+                                   1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n+                                   12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0,\n+                                   3, 9, 11 };\n+\n+  // amount for rotate left (rol)\n+  private static final int[] S = { 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15,\n+                                  6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12,\n+                                  15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9,\n+                                  13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12,\n+                                  14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5,\n+                                  12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13,\n+                                  14, 11, 8, 5, 6 };\n+\n+  private static final int[] Sp = { 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11,\n+                                   14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11,\n+                                   7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8,\n+                                   6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15,\n+                                   5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5,\n+                                   15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6,\n+                                   5, 15, 13, 11, 11 };\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  /** 160-bit h0, h1, h2, h3, h4 (interim result) */\n+  private int h0, h1, h2, h3, h4;\n+\n+  /** 512 bits work buffer = 16 x 32-bit words */\n+  private int[] X = new int[16];\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Trivial 0-arguments constructor. */\n+  public RipeMD160()\n+  {\n+    super(Registry.RIPEMD160_HASH, 20, BLOCK_SIZE);\n+  }\n+\n+  /**\n+   * <p>Private constructor for cloning purposes.</p>\n+   *\n+   * @param md the instance to clone.\n+   */\n+  private RipeMD160(RipeMD160 md)\n+  {\n+    this();\n+\n+    this.h0 = md.h0;\n+    this.h1 = md.h1;\n+    this.h2 = md.h2;\n+    this.h3 = md.h3;\n+    this.h4 = md.h4;\n+    this.count = md.count;\n+    this.buffer = (byte[]) md.buffer.clone();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return (new RipeMD160(this));\n+  }\n+\n+  // Implementation of concrete methods in BaseHash --------------------------\n+\n+  protected void transform(byte[] in, int offset)\n+  {\n+    int A, B, C, D, E, Ap, Bp, Cp, Dp, Ep, T, s, i;\n+\n+    // encode 64 bytes from input block into an array of 16 unsigned integers\n+    for (i = 0; i < 16; i++)\n+      {\n+        X[i] = (in[offset++] & 0xFF) | (in[offset++] & 0xFF) << 8\n+               | (in[offset++] & 0xFF) << 16 | in[offset++] << 24;\n+      }\n+\n+    A = Ap = h0;\n+    B = Bp = h1;\n+    C = Cp = h2;\n+    D = Dp = h3;\n+    E = Ep = h4;\n+\n+    for (i = 0; i < 16; i++)\n+      { // rounds 0...15\n+        s = S[i];\n+        T = A + (B ^ C ^ D) + X[i];\n+        A = E;\n+        E = D;\n+        D = C << 10 | C >>> 22;\n+        C = B;\n+        B = (T << s | T >>> (32 - s)) + A;\n+\n+        s = Sp[i];\n+        T = Ap + (Bp ^ (Cp | ~Dp)) + X[Rp[i]] + 0x50A28BE6;\n+        Ap = Ep;\n+        Ep = Dp;\n+        Dp = Cp << 10 | Cp >>> 22;\n+        Cp = Bp;\n+        Bp = (T << s | T >>> (32 - s)) + Ap;\n+      }\n+\n+    for (; i < 32; i++)\n+      { // rounds 16...31\n+        s = S[i];\n+        T = A + ((B & C) | (~B & D)) + X[R[i]] + 0x5A827999;\n+        A = E;\n+        E = D;\n+        D = C << 10 | C >>> 22;\n+        C = B;\n+        B = (T << s | T >>> (32 - s)) + A;\n+\n+        s = Sp[i];\n+        T = Ap + ((Bp & Dp) | (Cp & ~Dp)) + X[Rp[i]] + 0x5C4DD124;\n+        Ap = Ep;\n+        Ep = Dp;\n+        Dp = Cp << 10 | Cp >>> 22;\n+        Cp = Bp;\n+        Bp = (T << s | T >>> (32 - s)) + Ap;\n+      }\n+\n+    for (; i < 48; i++)\n+      { // rounds 32...47\n+        s = S[i];\n+        T = A + ((B | ~C) ^ D) + X[R[i]] + 0x6ED9EBA1;\n+        A = E;\n+        E = D;\n+        D = C << 10 | C >>> 22;\n+        C = B;\n+        B = (T << s | T >>> (32 - s)) + A;\n+\n+        s = Sp[i];\n+        T = Ap + ((Bp | ~Cp) ^ Dp) + X[Rp[i]] + 0x6D703EF3;\n+        Ap = Ep;\n+        Ep = Dp;\n+        Dp = Cp << 10 | Cp >>> 22;\n+        Cp = Bp;\n+        Bp = (T << s | T >>> (32 - s)) + Ap;\n+      }\n+\n+    for (; i < 64; i++)\n+      { // rounds 48...63\n+        s = S[i];\n+        T = A + ((B & D) | (C & ~D)) + X[R[i]] + 0x8F1BBCDC;\n+        A = E;\n+        E = D;\n+        D = C << 10 | C >>> 22;\n+        C = B;\n+        B = (T << s | T >>> (32 - s)) + A;\n+\n+        s = Sp[i];\n+        T = Ap + ((Bp & Cp) | (~Bp & Dp)) + X[Rp[i]] + 0x7A6D76E9;\n+        Ap = Ep;\n+        Ep = Dp;\n+        Dp = Cp << 10 | Cp >>> 22;\n+        Cp = Bp;\n+        Bp = (T << s | T >>> (32 - s)) + Ap;\n+      }\n+\n+    for (; i < 80; i++)\n+      { // rounds 64...79\n+        s = S[i];\n+        T = A + (B ^ (C | ~D)) + X[R[i]] + 0xA953FD4E;\n+        A = E;\n+        E = D;\n+        D = C << 10 | C >>> 22;\n+        C = B;\n+        B = (T << s | T >>> (32 - s)) + A;\n+\n+        s = Sp[i];\n+        T = Ap + (Bp ^ Cp ^ Dp) + X[Rp[i]];\n+        Ap = Ep;\n+        Ep = Dp;\n+        Dp = Cp << 10 | Cp >>> 22;\n+        Cp = Bp;\n+        Bp = (T << s | T >>> (32 - s)) + Ap;\n+      }\n+\n+    T = h1 + C + Dp;\n+    h1 = h2 + D + Ep;\n+    h2 = h3 + E + Ap;\n+    h3 = h4 + A + Bp;\n+    h4 = h0 + B + Cp;\n+    h0 = T;\n+  }\n+\n+  protected byte[] padBuffer()\n+  {\n+    int n = (int) (count % BLOCK_SIZE);\n+    int padding = (n < 56) ? (56 - n) : (120 - n);\n+    byte[] result = new byte[padding + 8];\n+\n+    // padding is always binary 1 followed by binary 0s\n+    result[0] = (byte) 0x80;\n+\n+    // save number of bits, casting the long to an array of 8 bytes\n+    long bits = count << 3;\n+    result[padding++] = (byte) bits;\n+    result[padding++] = (byte) (bits >>> 8);\n+    result[padding++] = (byte) (bits >>> 16);\n+    result[padding++] = (byte) (bits >>> 24);\n+    result[padding++] = (byte) (bits >>> 32);\n+    result[padding++] = (byte) (bits >>> 40);\n+    result[padding++] = (byte) (bits >>> 48);\n+    result[padding] = (byte) (bits >>> 56);\n+\n+    return result;\n+  }\n+\n+  protected byte[] getResult()\n+  {\n+    byte[] result = new byte[] { (byte) h0, (byte) (h0 >>> 8),\n+                                (byte) (h0 >>> 16), (byte) (h0 >>> 24),\n+                                (byte) h1, (byte) (h1 >>> 8),\n+                                (byte) (h1 >>> 16), (byte) (h1 >>> 24),\n+                                (byte) h2, (byte) (h2 >>> 8),\n+                                (byte) (h2 >>> 16), (byte) (h2 >>> 24),\n+                                (byte) h3, (byte) (h3 >>> 8),\n+                                (byte) (h3 >>> 16), (byte) (h3 >>> 24),\n+                                (byte) h4, (byte) (h4 >>> 8),\n+                                (byte) (h4 >>> 16), (byte) (h4 >>> 24) };\n+\n+    return result;\n+  }\n+\n+  protected void resetContext()\n+  {\n+    // magic RIPEMD160 initialisation constants\n+    h0 = 0x67452301;\n+    h1 = 0xEFCDAB89;\n+    h2 = 0x98BADCFE;\n+    h3 = 0x10325476;\n+    h4 = 0xC3D2E1F0;\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        valid = new Boolean\n+          (DIGEST0.equals(Util.toString(new RipeMD160().digest())));\n+      }\n+    return valid.booleanValue();\n+  }\n+}"}, {"sha": "bf5f45652a15613566d98bc7f41b819fa97234cb", "filename": "libjava/classpath/gnu/java/security/hash/Sha160.java", "status": "added", "additions": 308, "deletions": 0, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha160.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha160.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha160.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,308 @@\n+/* Sha160.java -- \n+   Copyright (C) 2001, 2002, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>The Secure Hash Algorithm (SHA-1) is required for use with the Digital\n+ * Signature Algorithm (DSA) as specified in the Digital Signature Standard\n+ * (DSS) and whenever a secure hash algorithm is required for federal\n+ * applications. For a message of length less than 2^64 bits, the SHA-1\n+ * produces a 160-bit condensed representation of the message called a message\n+ * digest. The message digest is used during generation of a signature for the\n+ * message. The SHA-1 is also used to compute a message digest for the received\n+ * version of the message during the process of verifying the signature. Any\n+ * change to the message in transit will, with very high probability, result in\n+ * a different message digest, and the signature will fail to verify.</p>\n+ *\n+ * <p>The SHA-1 is designed to have the following properties: it is\n+ * computationally infeasible to find a message which corresponds to a given\n+ * message digest, or to find two different messages which produce the same\n+ * message digest.</p>\n+ *\n+ * <p>References:</p>\n+ *\n+ * <ol>\n+ *    <li><a href=\"http://www.itl.nist.gov/fipspubs/fip180-1.htm\">SECURE HASH\n+ *    STANDARD</a><br>\n+ *    Federal Information, Processing Standards Publication 180-1, 1995 April 17.\n+ *    </li>\n+ * </ol>\n+ */\n+public class Sha160 extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  private static final int BLOCK_SIZE = 64; // inner block size in bytes\n+\n+  private static final String DIGEST0 = \"A9993E364706816ABA3E25717850C26C9CD0D89D\";\n+\n+  private static final int[] w = new int[80];\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  /** 160-bit interim result. */\n+  private int h0, h1, h2, h3, h4;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Trivial 0-arguments constructor. */\n+  public Sha160()\n+  {\n+    super(Registry.SHA160_HASH, 20, BLOCK_SIZE);\n+  }\n+\n+  /**\n+   * <p>Private constructor for cloning purposes.</p>\n+   *\n+   * @param md the instance to clone.\n+   */\n+  private Sha160(Sha160 md)\n+  {\n+    this();\n+\n+    this.h0 = md.h0;\n+    this.h1 = md.h1;\n+    this.h2 = md.h2;\n+    this.h3 = md.h3;\n+    this.h4 = md.h4;\n+    this.count = md.count;\n+    this.buffer = (byte[]) md.buffer.clone();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  public static final int[] G(int hh0, int hh1, int hh2, int hh3, int hh4,\n+                              byte[] in, int offset)\n+  {\n+    //      int[] w = new int[80];\n+    //      int i, T;\n+    //      for (i = 0; i < 16; i++) {\n+    //         w[i] = in[offset++]         << 24 |\n+    //               (in[offset++] & 0xFF) << 16 |\n+    //               (in[offset++] & 0xFF) <<  8 |\n+    //               (in[offset++] & 0xFF);\n+    //      }\n+    //      for (i = 16; i < 80; i++) {\n+    //         T = w[i-3] ^ w[i-8] ^ w[i-14] ^ w[i-16];\n+    //         w[i] = T << 1 | T >>> 31;\n+    //      }\n+\n+    //      return sha(hh0, hh1, hh2, hh3, hh4, in, offset, w);\n+    return sha(hh0, hh1, hh2, hh3, hh4, in, offset);\n+  }\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return new Sha160(this);\n+  }\n+\n+  // Implementation of concrete methods in BaseHash --------------------------\n+\n+  protected void transform(byte[] in, int offset)\n+  {\n+    //      int i, T;\n+    //      for (i = 0; i < 16; i++) {\n+    //         W[i] = in[offset++]         << 24 |\n+    //               (in[offset++] & 0xFF) << 16 |\n+    //               (in[offset++] & 0xFF) <<  8 |\n+    //               (in[offset++] & 0xFF);\n+    //      }\n+    //      for (i = 16; i < 80; i++) {\n+    //         T = W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16];\n+    //         W[i] = T << 1 | T >>> 31;\n+    //      }\n+\n+    //      int[] result = sha(h0, h1, h2, h3, h4, in, offset, W);\n+    int[] result = sha(h0, h1, h2, h3, h4, in, offset);\n+\n+    h0 = result[0];\n+    h1 = result[1];\n+    h2 = result[2];\n+    h3 = result[3];\n+    h4 = result[4];\n+  }\n+\n+  protected byte[] padBuffer()\n+  {\n+    int n = (int) (count % BLOCK_SIZE);\n+    int padding = (n < 56) ? (56 - n) : (120 - n);\n+    byte[] result = new byte[padding + 8];\n+\n+    // padding is always binary 1 followed by binary 0s\n+    result[0] = (byte) 0x80;\n+\n+    // save number of bits, casting the long to an array of 8 bytes\n+    long bits = count << 3;\n+    result[padding++] = (byte) (bits >>> 56);\n+    result[padding++] = (byte) (bits >>> 48);\n+    result[padding++] = (byte) (bits >>> 40);\n+    result[padding++] = (byte) (bits >>> 32);\n+    result[padding++] = (byte) (bits >>> 24);\n+    result[padding++] = (byte) (bits >>> 16);\n+    result[padding++] = (byte) (bits >>> 8);\n+    result[padding] = (byte) bits;\n+\n+    return result;\n+  }\n+\n+  protected byte[] getResult()\n+  {\n+    byte[] result = new byte[] { (byte) (h0 >>> 24), (byte) (h0 >>> 16),\n+                                (byte) (h0 >>> 8), (byte) h0,\n+                                (byte) (h1 >>> 24), (byte) (h1 >>> 16),\n+                                (byte) (h1 >>> 8), (byte) h1,\n+                                (byte) (h2 >>> 24), (byte) (h2 >>> 16),\n+                                (byte) (h2 >>> 8), (byte) h2,\n+                                (byte) (h3 >>> 24), (byte) (h3 >>> 16),\n+                                (byte) (h3 >>> 8), (byte) h3,\n+                                (byte) (h4 >>> 24), (byte) (h4 >>> 16),\n+                                (byte) (h4 >>> 8), (byte) h4 };\n+\n+    return result;\n+  }\n+\n+  protected void resetContext()\n+  {\n+    // magic SHA-1/RIPEMD160 initialisation constants\n+    h0 = 0x67452301;\n+    h1 = 0xEFCDAB89;\n+    h2 = 0x98BADCFE;\n+    h3 = 0x10325476;\n+    h4 = 0xC3D2E1F0;\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        Sha160 md = new Sha160();\n+        md.update((byte) 0x61); // a\n+        md.update((byte) 0x62); // b\n+        md.update((byte) 0x63); // c\n+        String result = Util.toString(md.digest());\n+        valid = new Boolean(DIGEST0.equals(result));\n+      }\n+    return valid.booleanValue();\n+  }\n+\n+  // SHA specific methods ----------------------------------------------------\n+\n+  private static final synchronized int[]\n+  //   sha(int hh0, int hh1, int hh2, int hh3, int hh4, byte[] in, int offset, int[] w) {\n+  sha(int hh0, int hh1, int hh2, int hh3, int hh4, byte[] in, int offset)\n+  {\n+    int A = hh0;\n+    int B = hh1;\n+    int C = hh2;\n+    int D = hh3;\n+    int E = hh4;\n+    int r, T;\n+\n+    for (r = 0; r < 16; r++)\n+      {\n+        w[r] = in[offset++] << 24 | (in[offset++] & 0xFF) << 16\n+               | (in[offset++] & 0xFF) << 8 | (in[offset++] & 0xFF);\n+      }\n+    for (r = 16; r < 80; r++)\n+      {\n+        T = w[r - 3] ^ w[r - 8] ^ w[r - 14] ^ w[r - 16];\n+        w[r] = T << 1 | T >>> 31;\n+      }\n+\n+    // rounds 0-19\n+    for (r = 0; r < 20; r++)\n+      {\n+        T = (A << 5 | A >>> 27) + ((B & C) | (~B & D)) + E + w[r] + 0x5A827999;\n+        E = D;\n+        D = C;\n+        C = B << 30 | B >>> 2;\n+        B = A;\n+        A = T;\n+      }\n+\n+    // rounds 20-39\n+    for (r = 20; r < 40; r++)\n+      {\n+        T = (A << 5 | A >>> 27) + (B ^ C ^ D) + E + w[r] + 0x6ED9EBA1;\n+        E = D;\n+        D = C;\n+        C = B << 30 | B >>> 2;\n+        B = A;\n+        A = T;\n+      }\n+\n+    // rounds 40-59\n+    for (r = 40; r < 60; r++)\n+      {\n+        T = (A << 5 | A >>> 27) + (B & C | B & D | C & D) + E + w[r]\n+            + 0x8F1BBCDC;\n+        E = D;\n+        D = C;\n+        C = B << 30 | B >>> 2;\n+        B = A;\n+        A = T;\n+      }\n+\n+    // rounds 60-79\n+    for (r = 60; r < 80; r++)\n+      {\n+        T = (A << 5 | A >>> 27) + (B ^ C ^ D) + E + w[r] + 0xCA62C1D6;\n+        E = D;\n+        D = C;\n+        C = B << 30 | B >>> 2;\n+        B = A;\n+        A = T;\n+      }\n+\n+    return new int[] { hh0 + A, hh1 + B, hh2 + C, hh3 + D, hh4 + E };\n+  }\n+}"}, {"sha": "9ef70a1a6a34992bb565c551529710368cc6d508", "filename": "libjava/classpath/gnu/java/security/hash/Sha256.java", "status": "added", "additions": 278, "deletions": 0, "changes": 278, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha256.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha256.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha256.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,278 @@\n+/* Sha256.java -- \n+   Copyright (C) 2003, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>Implementation of SHA2-1 [SHA-256] per the IETF Draft Specification.</p>\n+ *\n+ * <p>References:</p>\n+ * <ol>\n+ *    <li><a href=\"http://ftp.ipv4.heanet.ie/pub/ietf/internet-drafts/draft-ietf-ipsec-ciph-aes-cbc-03.txt\">\n+ *    Descriptions of SHA-256, SHA-384, and SHA-512</a>,</li>\n+ *    <li>http://csrc.nist.gov/cryptval/shs/sha256-384-512.pdf</li>\n+ * </ol>\n+ */\n+public class Sha256 extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+  private static final int[] k = { 0x428a2f98, 0x71374491, 0xb5c0fbcf,\n+                                  0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n+                                  0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n+                                  0x12835b01, 0x243185be, 0x550c7dc3,\n+                                  0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n+                                  0xc19bf174, 0xe49b69c1, 0xefbe4786,\n+                                  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f,\n+                                  0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n+                                  0x983e5152, 0xa831c66d, 0xb00327c8,\n+                                  0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n+                                  0x06ca6351, 0x14292967, 0x27b70a85,\n+                                  0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n+                                  0x650a7354, 0x766a0abb, 0x81c2c92e,\n+                                  0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n+                                  0xc24b8b70, 0xc76c51a3, 0xd192e819,\n+                                  0xd6990624, 0xf40e3585, 0x106aa070,\n+                                  0x19a4c116, 0x1e376c08, 0x2748774c,\n+                                  0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n+                                  0x5b9cca4f, 0x682e6ff3, 0x748f82ee,\n+                                  0x78a5636f, 0x84c87814, 0x8cc70208,\n+                                  0x90befffa, 0xa4506ceb, 0xbef9a3f7,\n+                                  0xc67178f2 };\n+\n+  private static final int BLOCK_SIZE = 64; // inner block size in bytes\n+\n+  private static final String DIGEST0 = \"BA7816BF8F01CFEA414140DE5DAE2223B00361A396177A9CB410FF61F20015AD\";\n+\n+  private static final int[] w = new int[64];\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  /** 256-bit interim result. */\n+  private int h0, h1, h2, h3, h4, h5, h6, h7;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Trivial 0-arguments constructor. */\n+  public Sha256()\n+  {\n+    super(Registry.SHA256_HASH, 32, BLOCK_SIZE);\n+  }\n+\n+  /**\n+   * <p>Private constructor for cloning purposes.</p>\n+   *\n+   * @param md the instance to clone.\n+   */\n+  private Sha256(Sha256 md)\n+  {\n+    this();\n+\n+    this.h0 = md.h0;\n+    this.h1 = md.h1;\n+    this.h2 = md.h2;\n+    this.h3 = md.h3;\n+    this.h4 = md.h4;\n+    this.h5 = md.h5;\n+    this.h6 = md.h6;\n+    this.h7 = md.h7;\n+    this.count = md.count;\n+    this.buffer = (byte[]) md.buffer.clone();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  public static final int[] G(int hh0, int hh1, int hh2, int hh3, int hh4,\n+                              int hh5, int hh6, int hh7, byte[] in, int offset)\n+  {\n+    return sha(hh0, hh1, hh2, hh3, hh4, hh5, hh6, hh7, in, offset);\n+  }\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return new Sha256(this);\n+  }\n+\n+  // Implementation of concrete methods in BaseHash --------------------------\n+\n+  protected void transform(byte[] in, int offset)\n+  {\n+    int[] result = sha(h0, h1, h2, h3, h4, h5, h6, h7, in, offset);\n+\n+    h0 = result[0];\n+    h1 = result[1];\n+    h2 = result[2];\n+    h3 = result[3];\n+    h4 = result[4];\n+    h5 = result[5];\n+    h6 = result[6];\n+    h7 = result[7];\n+  }\n+\n+  protected byte[] padBuffer()\n+  {\n+    int n = (int) (count % BLOCK_SIZE);\n+    int padding = (n < 56) ? (56 - n) : (120 - n);\n+    byte[] result = new byte[padding + 8];\n+\n+    // padding is always binary 1 followed by binary 0s\n+    result[0] = (byte) 0x80;\n+\n+    // save number of bits, casting the long to an array of 8 bytes\n+    long bits = count << 3;\n+    result[padding++] = (byte) (bits >>> 56);\n+    result[padding++] = (byte) (bits >>> 48);\n+    result[padding++] = (byte) (bits >>> 40);\n+    result[padding++] = (byte) (bits >>> 32);\n+    result[padding++] = (byte) (bits >>> 24);\n+    result[padding++] = (byte) (bits >>> 16);\n+    result[padding++] = (byte) (bits >>> 8);\n+    result[padding] = (byte) bits;\n+\n+    return result;\n+  }\n+\n+  protected byte[] getResult()\n+  {\n+    return new byte[] { (byte) (h0 >>> 24), (byte) (h0 >>> 16),\n+                       (byte) (h0 >>> 8), (byte) h0, (byte) (h1 >>> 24),\n+                       (byte) (h1 >>> 16), (byte) (h1 >>> 8), (byte) h1,\n+                       (byte) (h2 >>> 24), (byte) (h2 >>> 16),\n+                       (byte) (h2 >>> 8), (byte) h2, (byte) (h3 >>> 24),\n+                       (byte) (h3 >>> 16), (byte) (h3 >>> 8), (byte) h3,\n+                       (byte) (h4 >>> 24), (byte) (h4 >>> 16),\n+                       (byte) (h4 >>> 8), (byte) h4, (byte) (h5 >>> 24),\n+                       (byte) (h5 >>> 16), (byte) (h5 >>> 8), (byte) h5,\n+                       (byte) (h6 >>> 24), (byte) (h6 >>> 16),\n+                       (byte) (h6 >>> 8), (byte) h6, (byte) (h7 >>> 24),\n+                       (byte) (h7 >>> 16), (byte) (h7 >>> 8), (byte) h7 };\n+  }\n+\n+  protected void resetContext()\n+  {\n+    // magic SHA-256 initialisation constants\n+    h0 = 0x6a09e667;\n+    h1 = 0xbb67ae85;\n+    h2 = 0x3c6ef372;\n+    h3 = 0xa54ff53a;\n+    h4 = 0x510e527f;\n+    h5 = 0x9b05688c;\n+    h6 = 0x1f83d9ab;\n+    h7 = 0x5be0cd19;\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        Sha256 md = new Sha256();\n+        md.update((byte) 0x61); // a\n+        md.update((byte) 0x62); // b\n+        md.update((byte) 0x63); // c\n+        String result = Util.toString(md.digest());\n+        valid = new Boolean(DIGEST0.equals(result));\n+      }\n+\n+    return valid.booleanValue();\n+  }\n+\n+  // SHA specific methods ----------------------------------------------------\n+\n+  private static final synchronized int[] sha(int hh0, int hh1, int hh2,\n+                                              int hh3, int hh4, int hh5,\n+                                              int hh6, int hh7, byte[] in,\n+                                              int offset)\n+  {\n+    int A = hh0;\n+    int B = hh1;\n+    int C = hh2;\n+    int D = hh3;\n+    int E = hh4;\n+    int F = hh5;\n+    int G = hh6;\n+    int H = hh7;\n+    int r, T, T2;\n+\n+    for (r = 0; r < 16; r++)\n+      {\n+        w[r] = (in[offset++] << 24 | (in[offset++] & 0xFF) << 16\n+                | (in[offset++] & 0xFF) << 8 | (in[offset++] & 0xFF));\n+      }\n+    for (r = 16; r < 64; r++)\n+      {\n+        T = w[r - 2];\n+        T2 = w[r - 15];\n+        w[r] = ((((T >>> 17) | (T << 15)) ^ ((T >>> 19) | (T << 13)) ^ (T >>> 10))\n+                + w[r - 7]\n+                + (((T2 >>> 7) | (T2 << 25)) ^ ((T2 >>> 18) | (T2 << 14)) ^ (T2 >>> 3))\n+                + w[r - 16]);\n+      }\n+\n+    for (r = 0; r < 64; r++)\n+      {\n+        T = (H\n+             + (((E >>> 6) | (E << 26)) ^ ((E >>> 11) | (E << 21)) ^ ((E >>> 25) | (E << 7)))\n+             + ((E & F) ^ (~E & G)) + k[r] + w[r]);\n+        T2 = ((((A >>> 2) | (A << 30)) ^ ((A >>> 13) | (A << 19)) ^ ((A >>> 22) | (A << 10)))\n+              + ((A & B) ^ (A & C) ^ (B & C)));\n+        H = G;\n+        G = F;\n+        F = E;\n+        E = D + T;\n+        D = C;\n+        C = B;\n+        B = A;\n+        A = T + T2;\n+      }\n+\n+    return new int[] { hh0 + A, hh1 + B, hh2 + C, hh3 + D, hh4 + E, hh5 + F,\n+                       hh6 + G, hh7 + H };\n+  }\n+}"}, {"sha": "2f619dc984dadb0145d1d6847d0e4f1240a37409", "filename": "libjava/classpath/gnu/java/security/hash/Sha384.java", "status": "added", "additions": 322, "deletions": 0, "changes": 322, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha384.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha384.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha384.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "patch": "@@ -0,0 +1,322 @@\n+/* Sha384.java -- \n+   Copyright (C) 2003, 2006 Free Software Foundation, Inc.\n+\n+This file is a part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or (at\n+your option) any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; if not, write to the Free Software\n+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301\n+USA\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version.  */\n+\n+\n+package gnu.java.security.hash;\n+\n+import gnu.java.security.Registry;\n+import gnu.java.security.util.Util;\n+\n+/**\n+ * <p>Implementation of SHA2-2 [SHA-384] per the IETF Draft Specification.</p>\n+ *\n+ * <p>References:</p>\n+ * <ol>\n+ *    <li><a href=\"http://ftp.ipv4.heanet.ie/pub/ietf/internet-drafts/draft-ietf-ipsec-ciph-aes-cbc-03.txt\">\n+ *    Descriptions of SHA-256, SHA-384, and SHA-512</a>,</li>\n+ *    <li>http://csrc.nist.gov/cryptval/shs/sha256-384-512.pdf</li>\n+ * </ol>\n+ */\n+public class Sha384 extends BaseHash\n+{\n+\n+  // Constants and variables\n+  // -------------------------------------------------------------------------\n+\n+  private static final long[] k = { 0x428a2f98d728ae22L, 0x7137449123ef65cdL,\n+                                   0xb5c0fbcfec4d3b2fL, 0xe9b5dba58189dbbcL,\n+                                   0x3956c25bf348b538L, 0x59f111f1b605d019L,\n+                                   0x923f82a4af194f9bL, 0xab1c5ed5da6d8118L,\n+                                   0xd807aa98a3030242L, 0x12835b0145706fbeL,\n+                                   0x243185be4ee4b28cL, 0x550c7dc3d5ffb4e2L,\n+                                   0x72be5d74f27b896fL, 0x80deb1fe3b1696b1L,\n+                                   0x9bdc06a725c71235L, 0xc19bf174cf692694L,\n+                                   0xe49b69c19ef14ad2L, 0xefbe4786384f25e3L,\n+                                   0x0fc19dc68b8cd5b5L, 0x240ca1cc77ac9c65L,\n+                                   0x2de92c6f592b0275L, 0x4a7484aa6ea6e483L,\n+                                   0x5cb0a9dcbd41fbd4L, 0x76f988da831153b5L,\n+                                   0x983e5152ee66dfabL, 0xa831c66d2db43210L,\n+                                   0xb00327c898fb213fL, 0xbf597fc7beef0ee4L,\n+                                   0xc6e00bf33da88fc2L, 0xd5a79147930aa725L,\n+                                   0x06ca6351e003826fL, 0x142929670a0e6e70L,\n+                                   0x27b70a8546d22ffcL, 0x2e1b21385c26c926L,\n+                                   0x4d2c6dfc5ac42aedL, 0x53380d139d95b3dfL,\n+                                   0x650a73548baf63deL, 0x766a0abb3c77b2a8L,\n+                                   0x81c2c92e47edaee6L, 0x92722c851482353bL,\n+                                   0xa2bfe8a14cf10364L, 0xa81a664bbc423001L,\n+                                   0xc24b8b70d0f89791L, 0xc76c51a30654be30L,\n+                                   0xd192e819d6ef5218L, 0xd69906245565a910L,\n+                                   0xf40e35855771202aL, 0x106aa07032bbd1b8L,\n+                                   0x19a4c116b8d2d0c8L, 0x1e376c085141ab53L,\n+                                   0x2748774cdf8eeb99L, 0x34b0bcb5e19b48a8L,\n+                                   0x391c0cb3c5c95a63L, 0x4ed8aa4ae3418acbL,\n+                                   0x5b9cca4f7763e373L, 0x682e6ff3d6b2b8a3L,\n+                                   0x748f82ee5defb2fcL, 0x78a5636f43172f60L,\n+                                   0x84c87814a1f0ab72L, 0x8cc702081a6439ecL,\n+                                   0x90befffa23631e28L, 0xa4506cebde82bde9L,\n+                                   0xbef9a3f7b2c67915L, 0xc67178f2e372532bL,\n+                                   0xca273eceea26619cL, 0xd186b8c721c0c207L,\n+                                   0xeada7dd6cde0eb1eL, 0xf57d4f7fee6ed178L,\n+                                   0x06f067aa72176fbaL, 0x0a637dc5a2c898a6L,\n+                                   0x113f9804bef90daeL, 0x1b710b35131c471bL,\n+                                   0x28db77f523047d84L, 0x32caab7b40c72493L,\n+                                   0x3c9ebe0a15c9bebcL, 0x431d67c49c100d4cL,\n+                                   0x4cc5d4becb3e42b6L, 0x597f299cfc657e2aL,\n+                                   0x5fcb6fab3ad6faecL, 0x6c44198c4a475817L };\n+\n+  private static final int BLOCK_SIZE = 128; // inner block size in bytes\n+\n+  private static final String DIGEST0 = \"CB00753F45A35E8BB5A03D699AC65007272C32AB0EDED1631A8B605A43FF5BED\"\n+                                        + \"8086072BA1E7CC2358BAECA134C825A7\";\n+\n+  private static final long[] w = new long[80];\n+\n+  /** caches the result of the correctness test, once executed. */\n+  private static Boolean valid;\n+\n+  /** 512-bit interim result. */\n+  private long h0, h1, h2, h3, h4, h5, h6, h7;\n+\n+  // Constructor(s)\n+  // -------------------------------------------------------------------------\n+\n+  /** Trivial 0-arguments constructor. */\n+  public Sha384()\n+  {\n+    super(Registry.SHA384_HASH, 48, BLOCK_SIZE);\n+  }\n+\n+  /**\n+   * <p>Private constructor for cloning purposes.</p>\n+   *\n+   * @param md the instance to clone.\n+   */\n+  private Sha384(Sha384 md)\n+  {\n+    this();\n+\n+    this.h0 = md.h0;\n+    this.h1 = md.h1;\n+    this.h2 = md.h2;\n+    this.h3 = md.h3;\n+    this.h4 = md.h4;\n+    this.h5 = md.h5;\n+    this.h6 = md.h6;\n+    this.h7 = md.h7;\n+    this.count = md.count;\n+    this.buffer = (byte[]) md.buffer.clone();\n+  }\n+\n+  // Class methods\n+  // -------------------------------------------------------------------------\n+\n+  public static final long[] G(long hh0, long hh1, long hh2, long hh3,\n+                               long hh4, long hh5, long hh6, long hh7,\n+                               byte[] in, int offset)\n+  {\n+    return sha(hh0, hh1, hh2, hh3, hh4, hh5, hh6, hh7, in, offset);\n+  }\n+\n+  // Instance methods\n+  // -------------------------------------------------------------------------\n+\n+  // java.lang.Cloneable interface implementation ----------------------------\n+\n+  public Object clone()\n+  {\n+    return new Sha384(this);\n+  }\n+\n+  // Implementation of concrete methods in BaseHash --------------------------\n+\n+  protected void transform(byte[] in, int offset)\n+  {\n+    long[] result = sha(h0, h1, h2, h3, h4, h5, h6, h7, in, offset);\n+\n+    h0 = result[0];\n+    h1 = result[1];\n+    h2 = result[2];\n+    h3 = result[3];\n+    h4 = result[4];\n+    h5 = result[5];\n+    h6 = result[6];\n+    h7 = result[7];\n+  }\n+\n+  protected byte[] padBuffer()\n+  {\n+    int n = (int) (count % BLOCK_SIZE);\n+    int padding = (n < 112) ? (112 - n) : (240 - n);\n+    byte[] result = new byte[padding + 16];\n+\n+    // padding is always binary 1 followed by binary 0s\n+    result[0] = (byte) 0x80;\n+\n+    // save number of bits, casting the long to an array of 8 bytes\n+    // TODO: FIX Only ~35 bits of 128 bit counter usable this way\n+    long bits = count << 3;\n+    padding += 8;\n+    result[padding++] = (byte) (bits >>> 56);\n+    result[padding++] = (byte) (bits >>> 48);\n+    result[padding++] = (byte) (bits >>> 40);\n+    result[padding++] = (byte) (bits >>> 32);\n+    result[padding++] = (byte) (bits >>> 24);\n+    result[padding++] = (byte) (bits >>> 16);\n+    result[padding++] = (byte) (bits >>> 8);\n+    result[padding] = (byte) bits;\n+\n+    return result;\n+  }\n+\n+  protected byte[] getResult()\n+  {\n+    return new byte[] { (byte) (h0 >>> 56), (byte) (h0 >>> 48),\n+                       (byte) (h0 >>> 40), (byte) (h0 >>> 32),\n+                       (byte) (h0 >>> 24), (byte) (h0 >>> 16),\n+                       (byte) (h0 >>> 8), (byte) h0, (byte) (h1 >>> 56),\n+                       (byte) (h1 >>> 48), (byte) (h1 >>> 40),\n+                       (byte) (h1 >>> 32), (byte) (h1 >>> 24),\n+                       (byte) (h1 >>> 16), (byte) (h1 >>> 8), (byte) h1,\n+                       (byte) (h2 >>> 56), (byte) (h2 >>> 48),\n+                       (byte) (h2 >>> 40), (byte) (h2 >>> 32),\n+                       (byte) (h2 >>> 24), (byte) (h2 >>> 16),\n+                       (byte) (h2 >>> 8), (byte) h2, (byte) (h3 >>> 56),\n+                       (byte) (h3 >>> 48), (byte) (h3 >>> 40),\n+                       (byte) (h3 >>> 32), (byte) (h3 >>> 24),\n+                       (byte) (h3 >>> 16), (byte) (h3 >>> 8), (byte) h3,\n+                       (byte) (h4 >>> 56), (byte) (h4 >>> 48),\n+                       (byte) (h4 >>> 40), (byte) (h4 >>> 32),\n+                       (byte) (h4 >>> 24), (byte) (h4 >>> 16),\n+                       (byte) (h4 >>> 8), (byte) h4, (byte) (h5 >>> 56),\n+                       (byte) (h5 >>> 48), (byte) (h5 >>> 40),\n+                       (byte) (h5 >>> 32), (byte) (h5 >>> 24),\n+                       (byte) (h5 >>> 16), (byte) (h5 >>> 8), (byte) h5\n+    //         (byte)(h6 >>> 56), (byte)(h6 >>> 48), (byte)(h6 >>> 40), (byte)(h6 >>> 32),\n+    //         (byte)(h6 >>> 24), (byte)(h6 >>> 16), (byte)(h6 >>>  8), (byte) h6,\n+    //         (byte)(h7 >>> 56), (byte)(h7 >>> 48), (byte)(h7 >>> 40), (byte)(h7 >>> 32),\n+    //         (byte)(h7 >>> 24), (byte)(h7 >>> 16), (byte)(h7 >>>  8), (byte) h7\n+    };\n+  }\n+\n+  protected void resetContext()\n+  {\n+    // magic SHA-384 initialisation constants\n+    h0 = 0xcbbb9d5dc1059ed8L;\n+    h1 = 0x629a292a367cd507L;\n+    h2 = 0x9159015a3070dd17L;\n+    h3 = 0x152fecd8f70e5939L;\n+    h4 = 0x67332667ffc00b31L;\n+    h5 = 0x8eb44a8768581511L;\n+    h6 = 0xdb0c2e0d64f98fa7L;\n+    h7 = 0x47b5481dbefa4fa4L;\n+  }\n+\n+  public boolean selfTest()\n+  {\n+    if (valid == null)\n+      {\n+        Sha384 md = new Sha384();\n+        md.update((byte) 0x61); // a\n+        md.update((byte) 0x62); // b\n+        md.update((byte) 0x63); // c\n+        String result = Util.toString(md.digest());\n+        valid = new Boolean(DIGEST0.equals(result));\n+      }\n+    return valid.booleanValue();\n+  }\n+\n+  // SHA specific methods ----------------------------------------------------\n+\n+  private static final synchronized long[] sha(long hh0, long hh1, long hh2,\n+                                               long hh3, long hh4, long hh5,\n+                                               long hh6, long hh7, byte[] in,\n+                                               int offset)\n+  {\n+    long A = hh0;\n+    long B = hh1;\n+    long C = hh2;\n+    long D = hh3;\n+    long E = hh4;\n+    long F = hh5;\n+    long G = hh6;\n+    long H = hh7;\n+    long T, T2;\n+    int r;\n+\n+    for (r = 0; r < 16; r++)\n+      {\n+        w[r] = (long) in[offset++] << 56 | ((long) in[offset++] & 0xFF) << 48\n+               | ((long) in[offset++] & 0xFF) << 40\n+               | ((long) in[offset++] & 0xFF) << 32\n+               | ((long) in[offset++] & 0xFF) << 24\n+               | ((long) in[offset++] & 0xFF) << 16\n+               | ((long) in[offset++] & 0xFF) << 8\n+               | ((long) in[offset++] & 0xFF);\n+      }\n+    for (r = 16; r < 80; r++)\n+      {\n+        T = w[r - 2];\n+        T2 = w[r - 15];\n+        w[r] = (((T >>> 19) | (T << 45)) ^ ((T >>> 61) | (T << 3)) ^ (T >>> 6))\n+               + w[r - 7]\n+               + (((T2 >>> 1) | (T2 << 63)) ^ ((T2 >>> 8) | (T2 << 56)) ^ (T2 >>> 7))\n+               + w[r - 16];\n+      }\n+\n+    for (r = 0; r < 80; r++)\n+      {\n+\n+        T = H\n+            + (((E >>> 14) | (E << 50)) ^ ((E >>> 18) | (E << 46)) ^ ((E >>> 41) | (E << 23)))\n+            + ((E & F) ^ ((~E) & G)) + k[r] + w[r];\n+        // T IS INCORRECT SOMEHOW\n+        T2 = (((A >>> 28) | (A << 36)) ^ ((A >>> 34) | (A << 30)) ^ ((A >>> 39) | (A << 25)))\n+             + ((A & B) ^ (A & C) ^ (B & C));\n+        H = G;\n+        G = F;\n+        F = E;\n+        E = D + T;\n+        D = C;\n+        C = B;\n+        B = A;\n+        A = T + T2;\n+      }\n+\n+    return new long[] { hh0 + A, hh1 + B, hh2 + C, hh3 + D, hh4 + E, hh5 + F,\n+                       hh6 + G, hh7 + H };\n+  }\n+}"}, {"sha": "798b34dfc1d504bd093b44dfd9cc59aacf06bd46", "filename": "libjava/classpath/gnu/java/security/hash/Sha512.java", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha512.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha512.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FSha512.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "f39fed30d627e971462fa1f89420a54bbfb20c13", "filename": "libjava/classpath/gnu/java/security/hash/Tiger.java", "status": "added", "additions": 943, "deletions": 0, "changes": 943, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FTiger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FTiger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FTiger.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "8c5d9f360d046c7b12a6bcf6d5cfd99b207061d5", "filename": "libjava/classpath/gnu/java/security/hash/Whirlpool.java", "status": "added", "additions": 626, "deletions": 0, "changes": 626, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "e127779efb4a16551d385d40d726a8ba7495d024", "filename": "libjava/classpath/gnu/java/security/jce/hash/HavalSpi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FHavalSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FHavalSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FHavalSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "5b6b0e1e1d7be3ef1fd9bd70ad42e88565856496", "filename": "libjava/classpath/gnu/java/security/jce/hash/MD2Spi.java", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD2Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD2Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD2Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "8be44993400f721b896b76f8524cb8a2d71b21a2", "filename": "libjava/classpath/gnu/java/security/jce/hash/MD4Spi.java", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD4Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD4Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD4Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "92fb6ab38646618644f966b603198c5501dcebd2", "filename": "libjava/classpath/gnu/java/security/jce/hash/MD5Spi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD5Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD5Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMD5Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "9b8a73d55fd91a9cf8cfddc0c772b709e96531fa", "filename": "libjava/classpath/gnu/java/security/jce/hash/MessageDigestAdapter.java", "status": "added", "additions": 147, "deletions": 0, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMessageDigestAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMessageDigestAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FMessageDigestAdapter.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "b8e90d4bfb46d0e07b0b563d042004c4b891d211", "filename": "libjava/classpath/gnu/java/security/jce/hash/RipeMD128Spi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD128Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD128Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD128Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "49615e2fcc8f25800a7f177a910d18597e02f531", "filename": "libjava/classpath/gnu/java/security/jce/hash/RipeMD160Spi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD160Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD160Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FRipeMD160Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "a9b72634d781c946e344f311ae14926a1d2fcd63", "filename": "libjava/classpath/gnu/java/security/jce/hash/Sha160Spi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha160Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha160Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha160Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "9eeaebdeaeca3efbfde1ddb6436e19a78f0a1d07", "filename": "libjava/classpath/gnu/java/security/jce/hash/Sha256Spi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha256Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha256Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha256Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "96e1e6eb0abdabed7d6370f4553f668076e02cd8", "filename": "libjava/classpath/gnu/java/security/jce/hash/Sha384Spi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha384Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha384Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha384Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "75c617046fc25122df5389d13ce37d2b78f6ff3e", "filename": "libjava/classpath/gnu/java/security/jce/hash/Sha512Spi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha512Spi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha512Spi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FSha512Spi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "b355d78d05c3d6e86839187498c95db98ff6424e", "filename": "libjava/classpath/gnu/java/security/jce/hash/TigerSpi.java", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FTigerSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FTigerSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FTigerSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "e42e74ddb36ce78bdc3ed25005751cef970a167d", "filename": "libjava/classpath/gnu/java/security/jce/hash/WhirlpoolSpi.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FWhirlpoolSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FWhirlpoolSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fhash%2FWhirlpoolSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "0c39a37fd1baf8a18b0916644d9453cc2655ee10", "filename": "libjava/classpath/gnu/java/security/jce/prng/HavalRandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FHavalRandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FHavalRandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FHavalRandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "72a7f4873e4e802b92c29585b70e6ee1279d773c", "filename": "libjava/classpath/gnu/java/security/jce/prng/MD2RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD2RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD2RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD2RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "f5f98f8f39b7c0b91527feeee8834a42a82d7f6a", "filename": "libjava/classpath/gnu/java/security/jce/prng/MD4RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD4RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD4RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD4RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "0181247bc5ebe6f7c2753f976c0d18feb49a1c8e", "filename": "libjava/classpath/gnu/java/security/jce/prng/MD5RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD5RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD5RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FMD5RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "5580716a4913ca49bd6d88f9dbb53c5c5ab87ea5", "filename": "libjava/classpath/gnu/java/security/jce/prng/RipeMD128RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD128RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD128RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD128RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "734fe824a4cfb46d54024812afe8ade753b968e3", "filename": "libjava/classpath/gnu/java/security/jce/prng/RipeMD160RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD160RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD160RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FRipeMD160RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "e7cb720910335a80dae6d8965831f924438ded31", "filename": "libjava/classpath/gnu/java/security/jce/prng/SecureRandomAdapter.java", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSecureRandomAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSecureRandomAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSecureRandomAdapter.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c93b02d3fb819174b0e01f8ea1345dc4d75a18d5", "filename": "libjava/classpath/gnu/java/security/jce/prng/Sha160RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha160RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha160RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha160RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "736996430e191d6d888539089ec97f4db1c90290", "filename": "libjava/classpath/gnu/java/security/jce/prng/Sha256RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha256RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha256RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha256RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "afbf19303c80e5a3a07797615dd89e8bfc365a80", "filename": "libjava/classpath/gnu/java/security/jce/prng/Sha384RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha384RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha384RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha384RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "b2b33776008220a01f2f2a0d1e8f2f1920a97d0e", "filename": "libjava/classpath/gnu/java/security/jce/prng/Sha512RandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha512RandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha512RandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FSha512RandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "b4795b98ecce70e319b0221297d14026c16ae47c", "filename": "libjava/classpath/gnu/java/security/jce/prng/TigerRandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FTigerRandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FTigerRandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FTigerRandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "f327f9df2c7341747c188603e23d425180ab570c", "filename": "libjava/classpath/gnu/java/security/jce/prng/WhirlpoolRandomSpi.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FWhirlpoolRandomSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FWhirlpoolRandomSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fprng%2FWhirlpoolRandomSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "bb4d85c899d8784416531399ba1ce52399d356cd", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSKeyFactory.java", "status": "added", "additions": 238, "deletions": 0, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "97e9594f6a5ba7b6649a000b4d19a69f5f9f2eaf", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSKeyPairGeneratorSpi.java", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyPairGeneratorSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyPairGeneratorSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSKeyPairGeneratorSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "ba1f414faea18b7c70f4b6f4f21ef3ea2f345a7f", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSParameters.java", "status": "added", "additions": 220, "deletions": 0, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "09c13861042d597366d3895cf1df2056843d0fed", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSParametersGenerator.java", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParametersGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParametersGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParametersGenerator.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "16e4ddd4edcf63f4f271c380758d8488a31cf37f", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSRawSignatureSpi.java", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSRawSignatureSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSRawSignatureSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSRawSignatureSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "60152c279faf195ade573cd54565dde5ebd653a0", "filename": "libjava/classpath/gnu/java/security/jce/sig/EncodedKeyFactory.java", "status": "added", "additions": 453, "deletions": 0, "changes": 453, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FEncodedKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FEncodedKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FEncodedKeyFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "60268299188a03a9e82e94c214ec87b27fdf4e08", "filename": "libjava/classpath/gnu/java/security/jce/sig/KeyPairGeneratorAdapter.java", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FKeyPairGeneratorAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FKeyPairGeneratorAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FKeyPairGeneratorAdapter.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "353be218555f09ae0c2893974ecfc9ad90a49a24", "filename": "libjava/classpath/gnu/java/security/jce/sig/MD2withRSA.java", "status": "renamed", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FMD2withRSA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FMD2withRSA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FMD2withRSA.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "previous_filename": "libjava/classpath/gnu/java/security/provider/MD2withRSA.java"}, {"sha": "42c481b0a6d882eac03edf96e50e8c64edaef4e7", "filename": "libjava/classpath/gnu/java/security/jce/sig/MD5withRSA.java", "status": "renamed", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FMD5withRSA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FMD5withRSA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FMD5withRSA.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc", "previous_filename": "libjava/classpath/gnu/java/security/provider/MD5withRSA.java"}, {"sha": "fecf54cb8e91a63cdbad42c65b200772637b611f", "filename": "libjava/classpath/gnu/java/security/jce/sig/RSAKeyFactory.java", "status": "added", "additions": 265, "deletions": 0, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "24dc7c50177478ee079645ce4d723b7b567c39d1", "filename": "libjava/classpath/gnu/java/security/jce/sig/RSAKeyPairGeneratorSpi.java", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyPairGeneratorSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyPairGeneratorSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAKeyPairGeneratorSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "e44b8adf14d20b8e18731f184463c223a2a3cc58", "filename": "libjava/classpath/gnu/java/security/jce/sig/RSAPSSRawSignatureSpi.java", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAPSSRawSignatureSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAPSSRawSignatureSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FRSAPSSRawSignatureSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c55139f465812c2d5483ed8c2e0e3d3ee8ca771a", "filename": "libjava/classpath/gnu/java/security/jce/sig/SHA160withDSS.java", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA160withDSS.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA160withDSS.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA160withDSS.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "d3b2054e0eabf692d96448ce45d13e715244092f", "filename": "libjava/classpath/gnu/java/security/jce/sig/SHA160withRSA.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA160withRSA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA160withRSA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA160withRSA.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "d21888b5993421e7e63f4a19fc37f8d37be33d5a", "filename": "libjava/classpath/gnu/java/security/jce/sig/SHA256withRSA.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA256withRSA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA256withRSA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA256withRSA.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "5495ec1caa07cb10f752d303770b54cc1d512d22", "filename": "libjava/classpath/gnu/java/security/jce/sig/SHA384withRSA.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA384withRSA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA384withRSA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA384withRSA.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "f7632290ab681dcae56f4061e58e5b91cf89ba1c", "filename": "libjava/classpath/gnu/java/security/jce/sig/SHA512withRSA.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA512withRSA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA512withRSA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSHA512withRSA.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "6cb7c7c7128c60e660b53cd3d7fa8758979ff4f3", "filename": "libjava/classpath/gnu/java/security/jce/sig/SignatureAdapter.java", "status": "added", "additions": 263, "deletions": 0, "changes": 263, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSignatureAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSignatureAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FSignatureAdapter.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c64f928574b1195789a65bc26b70d629c14dea89", "filename": "libjava/classpath/gnu/java/security/key/IKeyPairCodec.java", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairCodec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "219863d33eb025680d54981142f396fc6bbaf938", "filename": "libjava/classpath/gnu/java/security/key/IKeyPairGenerator.java", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FIKeyPairGenerator.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "1a8b8aa03887ab824d84770927c4aa67d4d47048", "filename": "libjava/classpath/gnu/java/security/key/KeyPairCodecFactory.java", "status": "added", "additions": 362, "deletions": 0, "changes": 362, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairCodecFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairCodecFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairCodecFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "edcc186e2c7aa282b6243a912e6caaa025cf76b3", "filename": "libjava/classpath/gnu/java/security/key/KeyPairGeneratorFactory.java", "status": "added", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairGeneratorFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairGeneratorFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2FKeyPairGeneratorFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "428cab1e78ef4a8204f73f949722b1a72919f14d", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKey.java", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "5aa746147eb2c1a1dab27802bd6a5656a9c64a2f", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKeyPairGenerator.java", "status": "added", "additions": 445, "deletions": 0, "changes": 445, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairGenerator.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "30e30bd144d4285266bef53de77c631c1b6711c3", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKeyPairPKCS8Codec.java", "status": "added", "additions": 235, "deletions": 0, "changes": 235, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairPKCS8Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairPKCS8Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairPKCS8Codec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "86e5b0bef7e591c2b1364c29dee483dd21919188", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKeyPairRawCodec.java", "status": "added", "additions": 383, "deletions": 0, "changes": 383, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairRawCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairRawCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairRawCodec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "516ef92afd58ff84f3f6f8a443e60934eb090f94", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKeyPairX509Codec.java", "status": "added", "additions": 248, "deletions": 0, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairX509Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairX509Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKeyPairX509Codec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c81eb93b078e09af313891e5dd67af0eae898cff", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSPrivateKey.java", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "93bb64022030c115643c7747dd242c4f48658fbb", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSPublicKey.java", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "74be626f58e2462106513d97a92c8334dd1ac9af", "filename": "libjava/classpath/gnu/java/security/key/dss/FIPS186.java", "status": "added", "additions": 296, "deletions": 0, "changes": 296, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "72cd808d43bddd611b5e16a179cf1c583b404a58", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAKey.java", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "f8acaa50df742908aa9553f370e0d51f9ccc6290", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAPrivateKey.java", "status": "added", "additions": 299, "deletions": 0, "changes": 299, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "f49027ca62126df9c8f30eba03f5f4655a2f1982", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAPublicKey.java", "status": "added", "additions": 185, "deletions": 0, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "9c7338f662a59b39a71d24b60032b0c12ef281cb", "filename": "libjava/classpath/gnu/java/security/key/rsa/RSAKeyPairGenerator.java", "status": "added", "additions": 264, "deletions": 0, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairGenerator.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "a7f65b610126a1f7b0797a68b879845f29ab3936", "filename": "libjava/classpath/gnu/java/security/key/rsa/RSAKeyPairPKCS8Codec.java", "status": "added", "additions": 284, "deletions": 0, "changes": 284, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairPKCS8Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairPKCS8Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairPKCS8Codec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "fb7cea99edd1603752313283e70cc8352b022ba9", "filename": "libjava/classpath/gnu/java/security/key/rsa/RSAKeyPairRawCodec.java", "status": "added", "additions": 332, "deletions": 0, "changes": 332, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairRawCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairRawCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairRawCodec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "1c362784b3554d392aa4b9c9fc6a89f9e273910c", "filename": "libjava/classpath/gnu/java/security/key/rsa/RSAKeyPairX509Codec.java", "status": "added", "additions": 248, "deletions": 0, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairX509Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairX509Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FRSAKeyPairX509Codec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "fe815d7004ea4832b1a35cc0ae5884eef96d6a1f", "filename": "libjava/classpath/gnu/java/security/prng/BasePRNG.java", "status": "added", "additions": 199, "deletions": 0, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FBasePRNG.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FBasePRNG.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FBasePRNG.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "260c668f8dfe793294f1de4b5f59fc63c3e72363", "filename": "libjava/classpath/gnu/java/security/prng/EntropySource.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FEntropySource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FEntropySource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FEntropySource.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "2c89e7ad56ff8700a23c643437810a865b0eb278", "filename": "libjava/classpath/gnu/java/security/prng/IRandom.java", "status": "added", "additions": 180, "deletions": 0, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FIRandom.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FIRandom.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FIRandom.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "2fd8bfa7fd14e44fcf6be4ae24bd3ed3e9ddfa69", "filename": "libjava/classpath/gnu/java/security/prng/LimitReachedException.java", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FLimitReachedException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FLimitReachedException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FLimitReachedException.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "255647d1c5fb98fcdc6ac6abf0d683cc62e78d3f", "filename": "libjava/classpath/gnu/java/security/prng/MDGenerator.java", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FMDGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FMDGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FMDGenerator.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "8b5141456e66b57ce73d8ae8e3b91196d8124b64", "filename": "libjava/classpath/gnu/java/security/prng/PRNGFactory.java", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FPRNGFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FPRNGFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FPRNGFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c07062125dc42e8405043281f3ce15ea1e61d66b", "filename": "libjava/classpath/gnu/java/security/prng/RandomEvent.java", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEvent.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "1dc14619fe9d1ba73f2294189fbc930c7f36b717", "filename": "libjava/classpath/gnu/java/security/prng/RandomEventListener.java", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEventListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEventListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprng%2FRandomEventListener.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "7e154e2747331329557a48fd86d2cf1900056add", "filename": "libjava/classpath/gnu/java/security/provider/DSAKeyFactory.java", "status": "removed", "additions": 0, "deletions": 134, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyFactory.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "ddd1800a717d2a8783c66785e037dd3abc67772a", "filename": "libjava/classpath/gnu/java/security/provider/DSAKeyPairGenerator.java", "status": "removed", "additions": 0, "deletions": 194, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "77d648956ee3f62e4190659b178dc7f2e326cab6", "filename": "libjava/classpath/gnu/java/security/provider/DSAParameters.java", "status": "removed", "additions": 0, "deletions": 150, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAParameters.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "1d3875d28e37fa077321488ad0bc31f75a2fafa0", "filename": "libjava/classpath/gnu/java/security/provider/DSASignature.java", "status": "removed", "additions": 0, "deletions": 251, "changes": 251, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSASignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSASignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSASignature.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "591fc688cc0ede80f7cf719106e1c0862df44f2d", "filename": "libjava/classpath/gnu/java/security/provider/DiffieHellmanKeyFactoryImpl.java", "status": "removed", "additions": 0, "deletions": 123, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyFactoryImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyFactoryImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDiffieHellmanKeyFactoryImpl.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "2bf0fff809e6704aed6645903d0703c59c776480", "filename": "libjava/classpath/gnu/java/security/provider/EncodedKeyFactory.java", "status": "removed", "additions": 0, "deletions": 303, "changes": 303, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FEncodedKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FEncodedKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FEncodedKeyFactory.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "06135664427bc462dd4b0754368491b9c5235e05", "filename": "libjava/classpath/gnu/java/security/provider/Gnu.java", "status": "modified", "additions": 172, "deletions": 76, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnu.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "aac2faab22949ff4bfb039b1b6077543e3cd7d01", "filename": "libjava/classpath/gnu/java/security/provider/GnuDSAPrivateKey.java", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuDSAPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuDSAPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuDSAPrivateKey.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "41195fa992c6bf14e27562c4255dd8ac44669cfb", "filename": "libjava/classpath/gnu/java/security/provider/GnuDSAPublicKey.java", "status": "removed", "additions": 0, "deletions": 137, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuDSAPublicKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuDSAPublicKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuDSAPublicKey.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "b09fc88bc5c3110dd22493da5c25b9af1d5a8694", "filename": "libjava/classpath/gnu/java/security/provider/GnuRSAPrivateKey.java", "status": "removed", "additions": 0, "deletions": 164, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuRSAPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuRSAPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FGnuRSAPrivateKey.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "1534eb91089d11ad2fd3a9fc0d6b47f39ad8c5c6", "filename": "libjava/classpath/gnu/java/security/provider/MD5.java", "status": "removed", "additions": 0, "deletions": 338, "changes": 338, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FMD5.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FMD5.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FMD5.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "880163731f158b7b76ced9c2bf6114e701acb49e", "filename": "libjava/classpath/gnu/java/security/provider/PKIXCertPathValidatorImpl.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c3cfbbf79f1a546d41fdb48b4b96d8aa0a9e7f85", "filename": "libjava/classpath/gnu/java/security/provider/RSA.java", "status": "removed", "additions": 0, "deletions": 311, "changes": 311, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FRSA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FRSA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FRSA.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "d13cbe510a17fdfcada7f93428c94b1beac3bdc3", "filename": "libjava/classpath/gnu/java/security/provider/RSAKeyFactory.java", "status": "removed", "additions": 0, "deletions": 181, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FRSAKeyFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FRSAKeyFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FRSAKeyFactory.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "e3b09bc5603c1fa558b03d3f99307c5eeecd65e7", "filename": "libjava/classpath/gnu/java/security/provider/SHA.java", "status": "removed", "additions": 0, "deletions": 242, "changes": 242, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "e4058e3079b696edbd4f333771d9215fdef503b8", "filename": "libjava/classpath/gnu/java/security/provider/SHA1PRNG.java", "status": "removed", "additions": 0, "deletions": 137, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA1PRNG.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27079765d00123f8e53d0e1ef7f9d46559266e6d/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA1PRNG.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA1PRNG.java?ref=27079765d00123f8e53d0e1ef7f9d46559266e6d"}, {"sha": "dd964d4819d2463aa29d3813328e9aa858198d3c", "filename": "libjava/classpath/gnu/java/security/sig/BaseSignature.java", "status": "added", "additions": 261, "deletions": 0, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FBaseSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FBaseSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FBaseSignature.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "77653ee37220a370ef81ecf39378a19861349379", "filename": "libjava/classpath/gnu/java/security/sig/ISignature.java", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignature.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "119eca5fd0d3adb42c9005f653e85cc817e2b512", "filename": "libjava/classpath/gnu/java/security/sig/ISignatureCodec.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignatureCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignatureCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FISignatureCodec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c5b2ccd4bc8127c2174c64920c9096a277a1491e", "filename": "libjava/classpath/gnu/java/security/sig/SignatureCodecFactory.java", "status": "added", "additions": 226, "deletions": 0, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureCodecFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureCodecFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureCodecFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "d5bd728ad8a031862a6c21ed977faa29a26944d5", "filename": "libjava/classpath/gnu/java/security/sig/SignatureFactory.java", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2FSignatureFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "6bedfaefa3a633ac11963047d066ba7699745857", "filename": "libjava/classpath/gnu/java/security/sig/dss/DSSSignature.java", "status": "added", "additions": 347, "deletions": 0, "changes": 347, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignature.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "02f6b1ddc419479cb4593569083a4963f5a50788", "filename": "libjava/classpath/gnu/java/security/sig/dss/DSSSignatureRawCodec.java", "status": "added", "additions": 191, "deletions": 0, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureRawCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureRawCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureRawCodec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "0fdb754a9828a1b736384d4e9d78016f0c990dfd", "filename": "libjava/classpath/gnu/java/security/sig/dss/DSSSignatureX509Codec.java", "status": "added", "additions": 193, "deletions": 0, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureX509Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureX509Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Fdss%2FDSSSignatureX509Codec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "efe580d51675befb11b40b6e2c717e893d53454f", "filename": "libjava/classpath/gnu/java/security/sig/rsa/EME_PKCS1_V1_5.java", "status": "added", "additions": 306, "deletions": 0, "changes": 306, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEME_PKCS1_V1_5.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEME_PKCS1_V1_5.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEME_PKCS1_V1_5.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "2ea8a304a9cc2eb81545023857f91cbb934eb2c9", "filename": "libjava/classpath/gnu/java/security/sig/rsa/EMSA_PKCS1_V1_5.java", "status": "added", "additions": 299, "deletions": 0, "changes": 299, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEMSA_PKCS1_V1_5.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEMSA_PKCS1_V1_5.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEMSA_PKCS1_V1_5.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "d11a861b52e88759113f8a3a2cae0ac019904d74", "filename": "libjava/classpath/gnu/java/security/sig/rsa/EMSA_PSS.java", "status": "added", "additions": 432, "deletions": 0, "changes": 432, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEMSA_PSS.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEMSA_PSS.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FEMSA_PSS.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "7d1707e195deda84decc581d37bc35b3542ee04b", "filename": "libjava/classpath/gnu/java/security/sig/rsa/RSA.java", "status": "added", "additions": 356, "deletions": 0, "changes": 356, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSA.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "d4b69a7a18f648c096489292f8c2bc0e935a84ea", "filename": "libjava/classpath/gnu/java/security/sig/rsa/RSAPKCS1V1_5Signature.java", "status": "added", "additions": 247, "deletions": 0, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5Signature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5Signature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5Signature.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "68c1edaa6b1c69941bbc09f2b425c6e908546484", "filename": "libjava/classpath/gnu/java/security/sig/rsa/RSAPKCS1V1_5SignatureRawCodec.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5SignatureRawCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5SignatureRawCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5SignatureRawCodec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "3cb375602a03c623550e1cc028056149325dde4a", "filename": "libjava/classpath/gnu/java/security/sig/rsa/RSAPKCS1V1_5SignatureX509Codec.java", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5SignatureX509Codec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5SignatureX509Codec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPKCS1V1_5SignatureX509Codec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "95a6653f393804c863b598b9a911c587268c471e", "filename": "libjava/classpath/gnu/java/security/sig/rsa/RSAPSSSignature.java", "status": "added", "additions": 348, "deletions": 0, "changes": 348, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPSSSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPSSSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPSSSignature.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "64a972ca3660e53526df7b6f0b27de27555fcaee", "filename": "libjava/classpath/gnu/java/security/sig/rsa/RSAPSSSignatureRawCodec.java", "status": "added", "additions": 159, "deletions": 0, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPSSSignatureRawCodec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPSSSignatureRawCodec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSAPSSSignatureRawCodec.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "b8e12caf769e5548ba6fcbf7506662f7a6ab677e", "filename": "libjava/classpath/gnu/java/security/sig/rsa/RSASignatureFactory.java", "status": "added", "additions": 176, "deletions": 0, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSASignatureFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSASignatureFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fsig%2Frsa%2FRSASignatureFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "f9998c38f480487d03a576a544c3421012c61450", "filename": "libjava/classpath/gnu/java/security/util/Base64.java", "status": "added", "additions": 396, "deletions": 0, "changes": 396, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FBase64.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FBase64.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FBase64.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "26232ba9843181984a3e3f300703459b1eabe37d", "filename": "libjava/classpath/gnu/java/security/util/DerUtil.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FDerUtil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FDerUtil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FDerUtil.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "2d4452015afed5b00de28315bdc6dbc4f4494f04", "filename": "libjava/classpath/gnu/java/security/util/ExpirableObject.java", "status": "added", "additions": 172, "deletions": 0, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FExpirableObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FExpirableObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FExpirableObject.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "eed669cc3a44720795edb3df077735e9534db5a8", "filename": "libjava/classpath/gnu/java/security/util/FormatUtil.java", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FFormatUtil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FFormatUtil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FFormatUtil.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "138cc6bcb0c79112f8263a79290e592cffe900ca", "filename": "libjava/classpath/gnu/java/security/util/PRNG.java", "status": "added", "additions": 156, "deletions": 0, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FPRNG.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FPRNG.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FPRNG.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "6e46f5fcadc96c629eaba8492a94295405496c9e", "filename": "libjava/classpath/gnu/java/security/util/Prime2.java", "status": "added", "additions": 417, "deletions": 0, "changes": 417, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FPrime2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FPrime2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FPrime2.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "5edc7942ef9166bab3bd8e6846ed02709986b171", "filename": "libjava/classpath/gnu/java/security/util/Sequence.java", "status": "added", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FSequence.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FSequence.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FSequence.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "b2525c4b8e2fd84b0fd8c31f781a985fb790f4ee", "filename": "libjava/classpath/gnu/java/security/util/SimpleList.java", "status": "added", "additions": 171, "deletions": 0, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FSimpleList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FSimpleList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FSimpleList.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "53f8e3c2cca2e7db44a9fe22efd18fadf7f3495d", "filename": "libjava/classpath/gnu/java/security/util/Util.java", "status": "added", "additions": 692, "deletions": 0, "changes": 692, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FUtil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FUtil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FUtil.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "cf0161701cc23ce9e602ff3012da22d29e16a48a", "filename": "libjava/classpath/gnu/java/security/x509/X509Certificate.java", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FX509Certificate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FX509Certificate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FX509Certificate.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "dae94cd9f356a998e77fea83f587d99b7c984f0f", "filename": "libjava/classpath/gnu/java/security/x509/ext/GeneralNames.java", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FGeneralNames.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FGeneralNames.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2Fext%2FGeneralNames.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "feabe4dce5165b8409bb7e7170226a91136aa27e", "filename": "libjava/classpath/gnu/java/util/prefs/EventDispatcher.java", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FEventDispatcher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FEventDispatcher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FEventDispatcher.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "e5f24efa3a039ad1f10db4b21ca77418a89c36e7", "filename": "libjava/classpath/gnu/java/util/prefs/FileBasedFactory.java", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FFileBasedFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FFileBasedFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FFileBasedFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "f7566dddddf7e0a4c644e6206cecce79c77c6f21", "filename": "libjava/classpath/gnu/java/util/prefs/FileBasedPreferences.java", "status": "added", "additions": 273, "deletions": 0, "changes": 273, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FFileBasedPreferences.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FFileBasedPreferences.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FFileBasedPreferences.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "275b8796ec64dfeecafc87c225ec37056795c8ea", "filename": "libjava/classpath/gnu/java/util/prefs/MemoryBasedFactory.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FMemoryBasedFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FMemoryBasedFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FMemoryBasedFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "cccb9bf2fc27c00d6802e8fbe65f0513c6c7b9a6", "filename": "libjava/classpath/gnu/java/util/prefs/MemoryBasedPreferences.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FMemoryBasedPreferences.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FMemoryBasedPreferences.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FMemoryBasedPreferences.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c3cf8e8188a89198fb3bb8dcaed7b38d9c5bd5da", "filename": "libjava/classpath/gnu/java/util/prefs/NodeWriter.java", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeWriter.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "1d70eff87f4424383abfce1d955c536e45ae010f", "filename": "libjava/classpath/gnu/javax/crypto/assembly/Assembly.java", "status": "added", "additions": 298, "deletions": 0, "changes": 298, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FAssembly.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FAssembly.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FAssembly.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "20cd3de9d880d440794dbacfbd8f0fba04749b06", "filename": "libjava/classpath/gnu/javax/crypto/assembly/Cascade.java", "status": "added", "additions": 405, "deletions": 0, "changes": 405, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascade.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascade.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascade.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "71a8b178ff123053c1f32a1b885df0a33cb54214", "filename": "libjava/classpath/gnu/javax/crypto/assembly/CascadeStage.java", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascadeStage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascadeStage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascadeStage.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "325571dcddcfabdd66811fcba35dedb4f8a59d16", "filename": "libjava/classpath/gnu/javax/crypto/assembly/CascadeTransformer.java", "status": "added", "additions": 139, "deletions": 0, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascadeTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascadeTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FCascadeTransformer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "35328a6c1dcec1e93b5d73e82372c3bc903f42cd", "filename": "libjava/classpath/gnu/javax/crypto/assembly/DeflateTransformer.java", "status": "added", "additions": 233, "deletions": 0, "changes": 233, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FDeflateTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FDeflateTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FDeflateTransformer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "2e8ef1145a4c50d23d58a18c2ba10236ecde08e4", "filename": "libjava/classpath/gnu/javax/crypto/assembly/Direction.java", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FDirection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FDirection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FDirection.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "62791264f962ef288e8d06cd3c0eb5c1be3ce524", "filename": "libjava/classpath/gnu/javax/crypto/assembly/LoopbackTransformer.java", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FLoopbackTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FLoopbackTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FLoopbackTransformer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "1cd8fd9154e6d0150030f56d7fb6385d594b5d21", "filename": "libjava/classpath/gnu/javax/crypto/assembly/ModeStage.java", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FModeStage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FModeStage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FModeStage.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "2646e1f3301bbcdf7a06befa19d4220ce29ae5cb", "filename": "libjava/classpath/gnu/javax/crypto/assembly/Operation.java", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FOperation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FOperation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FOperation.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "8af46a72a9529c21d27c4a869bf70d86808b397a", "filename": "libjava/classpath/gnu/javax/crypto/assembly/PaddingTransformer.java", "status": "added", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FPaddingTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FPaddingTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FPaddingTransformer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "e44985534b7967fd5fc9f8e758eb66d199e1d0f1", "filename": "libjava/classpath/gnu/javax/crypto/assembly/Stage.java", "status": "added", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FStage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FStage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FStage.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "c62c4677ffbdca587cf49e4e76811ebba80dc1c6", "filename": "libjava/classpath/gnu/javax/crypto/assembly/Transformer.java", "status": "added", "additions": 460, "deletions": 0, "changes": 460, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformer.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "412f0f0f18300be0e12326f1b4a688c1417a1e03", "filename": "libjava/classpath/gnu/javax/crypto/assembly/TransformerException.java", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformerException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformerException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformerException.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "63b97ce4e08179690da5b4423d597f1ca50556f8", "filename": "libjava/classpath/gnu/javax/crypto/cipher/Anubis.java", "status": "added", "additions": 583, "deletions": 0, "changes": 583, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FAnubis.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FAnubis.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FAnubis.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "9d62311ed58a60a31cf62d4e90332145d3861442", "filename": "libjava/classpath/gnu/javax/crypto/cipher/BaseCipher.java", "status": "added", "additions": 304, "deletions": 0, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBaseCipher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBaseCipher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBaseCipher.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "5cb958ee47b44f03a9c3b7b642288f7f459f0ed7", "filename": "libjava/classpath/gnu/javax/crypto/cipher/Blowfish.java", "status": "added", "additions": 749, "deletions": 0, "changes": 749, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBlowfish.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBlowfish.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBlowfish.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "cbdfe61f5b16392c4b5f5e003cd7afec11a44724", "filename": "libjava/classpath/gnu/javax/crypto/cipher/Cast5.java", "status": "added", "additions": 1391, "deletions": 0, "changes": 1391, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FCast5.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FCast5.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FCast5.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "082bfb8fa2d9061dedab85f5f409a720885fb766", "filename": "libjava/classpath/gnu/javax/crypto/cipher/CipherFactory.java", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FCipherFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FCipherFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FCipherFactory.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "8b7627ceaf8a32c0e25ca10ec7ea649e648dd35e", "filename": "libjava/classpath/gnu/javax/crypto/cipher/DES.java", "status": "added", "additions": 894, "deletions": 0, "changes": 894, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FDES.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FDES.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FDES.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "238ee280f83f3e719594bdbae5e4a18c3e0cd0f7", "filename": "libjava/classpath/gnu/javax/crypto/cipher/IBlockCipher.java", "status": "added", "additions": 205, "deletions": 0, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FIBlockCipher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FIBlockCipher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FIBlockCipher.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "6fe07ca7f509a79752a2196a6c7e489d91245ee9", "filename": "libjava/classpath/gnu/javax/crypto/cipher/IBlockCipherSpi.java", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FIBlockCipherSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FIBlockCipherSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FIBlockCipherSpi.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "b6c27833eb8aea04131b9e4b0fab6a091cce9f31", "filename": "libjava/classpath/gnu/javax/crypto/cipher/Khazad.java", "status": "added", "additions": 521, "deletions": 0, "changes": 521, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FKhazad.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FKhazad.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FKhazad.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "09252db90635f4c4d731893dc66e7b546d30d71f", "filename": "libjava/classpath/gnu/javax/crypto/cipher/NullCipher.java", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FNullCipher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FNullCipher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FNullCipher.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}, {"sha": "058c8b3466dc3e871550d054abefab32e5ec5c6c", "filename": "libjava/classpath/gnu/javax/crypto/cipher/Rijndael.java", "status": "added", "additions": 859, "deletions": 0, "changes": 859, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FRijndael.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa540d2f783474d1d2e06f16744bf67b9c1facc/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FRijndael.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FRijndael.java?ref=8aa540d2f783474d1d2e06f16744bf67b9c1facc"}]}