{"sha": "76e048a8c04e282b8eca52dedf529073ce235f38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZlMDQ4YThjMDRlMjgyYjhlY2E1MmRlZGY1MjkwNzNjZTIzNWYzOA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-05-19T08:43:17Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-05-19T08:43:17Z"}, "message": "[calls.c] Remove #ifdef checks on STACK_GROWS_DOWNWARD\n\n\t* calls.c: Always define STACK_GROWS_DOWNWARD as 0 or 1.\n\t(mem_overlaps_already_clobbered_arg_p): Rewrite ifdef\n\tSTACK_GROWS_DOWNWARD as normal if.\n\t(expand_call): Likewise.\n\nFrom-SVN: r223347", "tree": {"sha": "914852f060e72baf1683626faed452c35fad360e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/914852f060e72baf1683626faed452c35fad360e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76e048a8c04e282b8eca52dedf529073ce235f38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e048a8c04e282b8eca52dedf529073ce235f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76e048a8c04e282b8eca52dedf529073ce235f38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e048a8c04e282b8eca52dedf529073ce235f38/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0ae0f51fa0dfc1f8dfbc9ea4e51e3389460568c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ae0f51fa0dfc1f8dfbc9ea4e51e3389460568c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ae0f51fa0dfc1f8dfbc9ea4e51e3389460568c"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "66b01411ce8346f722202c78013a322a1d63f87a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76e048a8c04e282b8eca52dedf529073ce235f38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76e048a8c04e282b8eca52dedf529073ce235f38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76e048a8c04e282b8eca52dedf529073ce235f38", "patch": "@@ -1,3 +1,10 @@\n+2015-05-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* calls.c: Always define STACK_GROWS_DOWNWARD as 0 or 1.\n+\t(mem_overlaps_already_clobbered_arg_p): Rewrite ifdef\n+\tSTACK_GROWS_DOWNWARD as normal if.\n+\t(expand_call): Likewise. \n+\n 2015-05-19  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/54236"}, {"sha": "d631cc0165e254fc172bb9175ac8ba6568693e37", "filename": "gcc/calls.c", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76e048a8c04e282b8eca52dedf529073ce235f38/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76e048a8c04e282b8eca52dedf529073ce235f38/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=76e048a8c04e282b8eca52dedf529073ce235f38", "patch": "@@ -81,6 +81,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-chkp.h\"\n #include \"rtl-chkp.h\"\n \n+\n+/* Redefine STACK_GROWS_DOWNWARD in terms of 0 or 1.  */\n+#ifdef STACK_GROWS_DOWNWARD\n+# undef STACK_GROWS_DOWNWARD\n+# define STACK_GROWS_DOWNWARD 1\n+#else\n+# define STACK_GROWS_DOWNWARD 0\n+#endif\n+\n /* Like PREFERRED_STACK_BOUNDARY but in units of bytes, not bits.  */\n #define STACK_BYTES (PREFERRED_STACK_BOUNDARY / BITS_PER_UNIT)\n \n@@ -1980,11 +1989,12 @@ mem_overlaps_already_clobbered_arg_p (rtx addr, unsigned HOST_WIDE_INT size)\n     return true;\n   else\n     i = INTVAL (val);\n-#ifdef STACK_GROWS_DOWNWARD\n-  i -= crtl->args.pretend_args_size;\n-#else\n-  i += crtl->args.pretend_args_size;\n-#endif\n+\n+  if (STACK_GROWS_DOWNWARD)\n+    i -= crtl->args.pretend_args_size;\n+  else\n+    i += crtl->args.pretend_args_size;\n+\n \n   if (ARGS_GROW_DOWNWARD)\n     i = -i - size;\n@@ -2914,12 +2924,13 @@ expand_call (tree exp, rtx target, int ignore)\n       if (pass == 0)\n \t{\n \t  argblock = crtl->args.internal_arg_pointer;\n-\t  argblock\n-#ifdef STACK_GROWS_DOWNWARD\n-\t    = plus_constant (Pmode, argblock, crtl->args.pretend_args_size);\n-#else\n-\t    = plus_constant (Pmode, argblock, -crtl->args.pretend_args_size);\n-#endif\n+\t  if (STACK_GROWS_DOWNWARD)\n+\t    argblock\n+\t      = plus_constant (Pmode, argblock, crtl->args.pretend_args_size);\n+\t  else\n+\t    argblock\n+\t      = plus_constant (Pmode, argblock, -crtl->args.pretend_args_size);\n+\n \t  stored_args_map = sbitmap_alloc (args_size.constant);\n \t  bitmap_clear (stored_args_map);\n \t}"}]}