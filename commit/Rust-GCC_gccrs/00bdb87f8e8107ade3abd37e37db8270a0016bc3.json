{"sha": "00bdb87f8e8107ade3abd37e37db8270a0016bc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBiZGI4N2Y4ZTgxMDdhZGUzYWJkMzdlMzdkYjgyNzBhMDAxNmJjMw==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2004-07-27T15:47:10Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2004-07-27T15:47:10Z"}, "message": "re PR c++/14429 (valid template template argument rejected)\n\n\tPR c++/14429\n\t* pt.c (coerce_template_template_parms) <PARM_DECL case>: Only check\n\twhen the type of ARG is not dependent.\n\n\t* g++.dg/template/ttp11.C: New test.\n\nFrom-SVN: r85222", "tree": {"sha": "f8e0486ef514e91ec9dffab97caca820bcbf2f22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8e0486ef514e91ec9dffab97caca820bcbf2f22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00bdb87f8e8107ade3abd37e37db8270a0016bc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00bdb87f8e8107ade3abd37e37db8270a0016bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00bdb87f8e8107ade3abd37e37db8270a0016bc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00bdb87f8e8107ade3abd37e37db8270a0016bc3/comments", "author": null, "committer": null, "parents": [{"sha": "18d7916e393bbc7f8213f07a31a7220cdbbb284b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18d7916e393bbc7f8213f07a31a7220cdbbb284b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18d7916e393bbc7f8213f07a31a7220cdbbb284b"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "3a270bc3fd9f68022e4df1035c3d1cdf753528c1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=00bdb87f8e8107ade3abd37e37db8270a0016bc3", "patch": "@@ -1,3 +1,9 @@\n+2004-07-27  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/14429\n+\t* pt.c (coerce_template_template_parms) <PARM_DECL case>: Only check\n+\twhen the type of ARG is not dependent.\n+\n 2004-07-26  Geoffrey Keating  <geoffk@apple.com>\n \n \t* g++spec.c (LIBSTDCXX_PROFILE): Default to LIBSTDCXX."}, {"sha": "7ae18f8f120cdfef1442486b06a835e9900a3ff1", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=00bdb87f8e8107ade3abd37e37db8270a0016bc3", "patch": "@@ -3639,11 +3639,16 @@ coerce_template_template_parms (tree parm_parms,\n \n \tcase PARM_DECL:\n \t  /* The tsubst call is used to handle cases such as\n-\t       template <class T, template <T> class TT> class D;  \n+\n+\t       template <int> class C {};\n+\t       template <class T, template <T> class TT> class D {};\n+\t       D<int, C> d;\n+\n \t     i.e. the parameter list of TT depends on earlier parameters.  */\n-\t  if (!same_type_p\n-\t      (tsubst (TREE_TYPE (parm), outer_args, complain, in_decl),\n-\t       TREE_TYPE (arg)))\n+\t  if (!dependent_type_p (TREE_TYPE (arg))\n+\t      && !same_type_p\n+\t\t    (tsubst (TREE_TYPE (parm), outer_args, complain, in_decl),\n+\t\t\t     TREE_TYPE (arg)))\n \t    return 0;\n \t  break;\n \t  "}, {"sha": "bc4bea228675dd537c7b817860cedcabac5c3ccf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00bdb87f8e8107ade3abd37e37db8270a0016bc3", "patch": "@@ -1,3 +1,8 @@\n+2004-07-27  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/14429\n+\t* g++.dg/template/ttp11.C: New test.\n+\n 2004-07-27  Diego Novillo  <dnovillo@redhat.com>\n \n \t* gcc.c-torture/compile/20040727-1.c: New test."}, {"sha": "84867e1073e94086bea49f29e04e6f21afbd452f", "filename": "gcc/testsuite/g++.dg/template/ttp11.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp11.C?ref=00bdb87f8e8107ade3abd37e37db8270a0016bc3", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile }\n+\n+// Origin: heinlein@informatik.uni-ulm.de\n+\n+// PR c++/14429: Matching of template template parameter containing\n+// non-type parameter with type that depends on earlier parameter.\n+\n+template <template <typename U, U* p> class T>\n+struct X {};\n+\n+template <template <typename U, U* p> class T>\n+struct Y {\n+    X<T> x;\n+};"}, {"sha": "554738bf49b4864eb1b18da203a6a48a9702b504", "filename": "gcc/testsuite/g++.dg/template/ttp12.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00bdb87f8e8107ade3abd37e37db8270a0016bc3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp12.C?ref=00bdb87f8e8107ade3abd37e37db8270a0016bc3", "patch": "@@ -0,0 +1,19 @@\n+// Copyright (C) 2004 Free Software Foundation\n+// Contributed by Kriang Lerdsuwanakij <lerdsuwa@users.sourceforge.net>\n+// { dg-do compile }\n+\n+// Check the type of non-type parameter in template template parameter\n+// only if it is dependent.\n+\n+template <template <int* p> class T>\n+struct X {};\n+\n+template <typename U, template <U* p> class T>\n+struct Y {\n+    X<T> x;\n+};\n+\n+template <int* p> struct Z {};\n+\n+Y<int, Z> y1;\n+Y<char, Z> y2;\t\t// { dg-error \"mismatch|expected|invalid\" }"}]}