{"sha": "a28cc94a27529b3108ea85be9ef5557a3c95791d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI4Y2M5NGEyNzUyOWIzMTA4ZWE4NWJlOWVmNTU1N2EzYzk1NzkxZA==", "commit": {"author": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2021-03-12T16:32:42Z"}, "committer": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2021-03-23T08:48:01Z"}, "message": "cprop_hardreg: Ensure replacement reg has compatible mode [PR99221]\n\nIn addition to the existing check also ask the target whether a\nreplacement register may be accessed in a different mode than it was set\nbefore.\n\ngcc/ChangeLog:\n\n\t* regcprop.c (find_oldest_value_reg): Ask target whether\n\t  different mode is fine for replacement register.", "tree": {"sha": "8d29ffd18dc26f9ac50d6c44516c64a3a4af587f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d29ffd18dc26f9ac50d6c44516c64a3a4af587f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a28cc94a27529b3108ea85be9ef5557a3c95791d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a28cc94a27529b3108ea85be9ef5557a3c95791d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a28cc94a27529b3108ea85be9ef5557a3c95791d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a28cc94a27529b3108ea85be9ef5557a3c95791d/comments", "author": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e54da1b6b39baadded02a28382bb6efb70e687c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54da1b6b39baadded02a28382bb6efb70e687c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54da1b6b39baadded02a28382bb6efb70e687c1"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "02753a12510787bb87c02ea6757096654cf2ba70", "filename": "gcc/regcprop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a28cc94a27529b3108ea85be9ef5557a3c95791d/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a28cc94a27529b3108ea85be9ef5557a3c95791d/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=a28cc94a27529b3108ea85be9ef5557a3c95791d", "patch": "@@ -474,7 +474,8 @@ find_oldest_value_reg (enum reg_class cl, rtx reg, struct value_data *vd)\n \t(set (...) (reg:DI r9))\n      Replacing r9 with r11 is invalid.  */\n   if (mode != vd->e[regno].mode\n-      && REG_NREGS (reg) > hard_regno_nregs (regno, vd->e[regno].mode))\n+      && (REG_NREGS (reg) > hard_regno_nregs (regno, vd->e[regno].mode)\n+\t  || !REG_CAN_CHANGE_MODE_P (regno, mode, vd->e[regno].mode)))\n     return NULL_RTX;\n \n   for (i = vd->e[regno].oldest_regno; i != regno; i = vd->e[i].next_regno)"}]}