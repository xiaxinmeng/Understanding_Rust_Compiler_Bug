{"sha": "ab23f7879dbd2a9e5f102d001791335f1cf2e938", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIyM2Y3ODc5ZGJkMmE5ZTVmMTAyZDAwMTc5MTMzNWYxY2YyZTkzOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-12-12T06:20:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-12-12T06:20:32Z"}, "message": "decl2.c (comdat_linkage): Also set DECL_COMDAT.\n\n\t* decl2.c (comdat_linkage): Also set DECL_COMDAT.\n\t(finish_file): Check DECL_COMDAT instead of weak|one_only.\n\t(import_export_vtable): Use make_decl_one_only instead of\n \tcomdat_linkage for win32 tweak.\n\t(import_export_decl): Likewise.\n\t* pt.c (mark_decl_instantiated): Likewise.\n\nFix libgcc with -O3.\n\nFrom-SVN: r17056", "tree": {"sha": "dd00ebd90f5ad9f7d621a203a00c652f0af8b833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd00ebd90f5ad9f7d621a203a00c652f0af8b833"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab23f7879dbd2a9e5f102d001791335f1cf2e938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab23f7879dbd2a9e5f102d001791335f1cf2e938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab23f7879dbd2a9e5f102d001791335f1cf2e938", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab23f7879dbd2a9e5f102d001791335f1cf2e938/comments", "author": null, "committer": null, "parents": [{"sha": "74d7ab557f039cde838e431c610535c57b2476df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74d7ab557f039cde838e431c610535c57b2476df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74d7ab557f039cde838e431c610535c57b2476df"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "c532a87747b01e72b5ae8f53aa03b0b93ea4641c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab23f7879dbd2a9e5f102d001791335f1cf2e938/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab23f7879dbd2a9e5f102d001791335f1cf2e938/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ab23f7879dbd2a9e5f102d001791335f1cf2e938", "patch": "@@ -1,3 +1,14 @@\n+Thu Dec 11 22:18:37 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl2.c (comdat_linkage): Also set DECL_COMDAT.\n+\t(finish_file): Check DECL_COMDAT instead of weak|one_only.\n+\t(import_export_vtable): Use make_decl_one_only instead of\n+ \tcomdat_linkage for win32 tweak.\n+\t(import_export_decl): Likewise.\n+\t* pt.c (mark_decl_instantiated): Likewise.\n+\n+\t* decl2.c (finish_file): Lose handling of templates in pending_statics.\n+\n Thu Dec 11 21:12:09 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl2.c (finish_file): Lose call to expand_builtin_throw."}, {"sha": "347feed55b94f8d8633dc88b76f707ebc7122a1a", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab23f7879dbd2a9e5f102d001791335f1cf2e938/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab23f7879dbd2a9e5f102d001791335f1cf2e938/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=ab23f7879dbd2a9e5f102d001791335f1cf2e938", "patch": "@@ -2499,6 +2499,9 @@ comdat_linkage (decl)\n     make_decl_one_only (decl);\n   else\n     TREE_PUBLIC (decl) = 0;\n+\n+  if (DECL_LANG_SPECIFIC (decl))\n+    DECL_COMDAT (decl) = 1;\n }\n \n /* Set TREE_PUBLIC and/or DECL_EXTERN on the vtable DECL,\n@@ -2533,7 +2536,7 @@ import_export_vtable (decl, type, final)\n \t linkonce sections.  */\n       if (CLASSTYPE_EXPLICIT_INSTANTIATION (type)\n \t  && supports_one_only () && ! SUPPORTS_WEAK)\n-\tcomdat_linkage (decl);\n+\tmake_decl_one_only (decl);\n     }\n   else\n     {\n@@ -2810,7 +2813,7 @@ import_export_decl (decl)\n \t     linkonce sections.  */\n \t  if (CLASSTYPE_EXPLICIT_INSTANTIATION (ctype)\n \t      && supports_one_only () && ! SUPPORTS_WEAK)\n-\t    comdat_linkage (decl);\n+\t    make_decl_one_only (decl);\n \t}\n       else if (TYPE_BUILT_IN (ctype) && ctype == TYPE_MAIN_VARIANT (ctype))\n \tDECL_NOT_REALLY_EXTERN (decl) = 0;\n@@ -2963,18 +2966,6 @@ finish_file ()\n   walk_vtables ((void (*) PROTO ((tree, tree))) 0,\n \t\tfinish_prevtable_vardecl);\n \n-  for (vars = pending_statics; vars; vars = TREE_CHAIN (vars))\n-    {\n-      tree decl = TREE_VALUE (vars);\n-\n-      if (DECL_TEMPLATE_INSTANTIATION (decl)\n-\t  && ! DECL_IN_AGGR_P (decl))\n-\t{\n-\t  import_export_decl (decl);\n-\t  DECL_EXTERNAL (decl) = ! DECL_NOT_REALLY_EXTERN (decl);\n-\t}\n-    }\n-\n   for (vars = static_aggregates; vars; vars = TREE_CHAIN (vars))\n     if (! TREE_ASM_WRITTEN (TREE_VALUE (vars)))\n       rest_of_decl_compilation (TREE_VALUE (vars), 0, 1, 1);\n@@ -3255,8 +3246,7 @@ finish_file ()\n \t      *p = TREE_CHAIN (*p);\n \t    else if (DECL_INITIAL (decl) == 0)\n \t      p = &TREE_CHAIN (*p);\n-\t    else if ((TREE_PUBLIC (decl) && ! DECL_WEAK (decl)\n-\t\t      && ! DECL_ONE_ONLY (decl))\n+\t    else if ((TREE_PUBLIC (decl) && ! DECL_COMDAT (decl))\n \t\t     || TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl))\n \t\t     || flag_keep_inline_functions)\n \t      {"}, {"sha": "644370cf50271dc1d8499b764c2480bc98892f0a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab23f7879dbd2a9e5f102d001791335f1cf2e938/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab23f7879dbd2a9e5f102d001791335f1cf2e938/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ab23f7879dbd2a9e5f102d001791335f1cf2e938", "patch": "@@ -4025,7 +4025,7 @@ mark_decl_instantiated (result, extern_p)\n       /* For WIN32 we also want to put explicit instantiations in\n \t linkonce sections.  */\n       if (supports_one_only () && ! SUPPORTS_WEAK)\n-\tcomdat_linkage (result);\n+\tmake_decl_one_only (result);\n     }\n   else if (TREE_CODE (result) == FUNCTION_DECL)\n     mark_inline_for_output (result);"}]}