{"sha": "3a9debbd7660bafbd7658c9e843eddbac8980188", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E5ZGViYmQ3NjYwYmFmYmQ3NjU4YzllODQzZWRkYmFjODk4MDE4OA==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2019-06-08T08:24:43Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2019-06-08T08:24:43Z"}, "message": "init_1.c: Remove options -O2 -fno-schedule-insns and instead pass -O.\n\n2019-06-08  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\t* gcc.target/aarch64/sve/init_1.c: Remove options\n\t-O2 -fno-schedule-insns and instead pass -O.\n\tUpdate assembly in comments. \n\t* gcc.target/aarch64/sve/init_2.c: Likewise.\n\t* gcc.target/aarch64/sve/init_3.c: Likewise.\n\t* gcc.target/aarch64/sve/init_4.c: Likewise.\n\t* gcc.target/aarch64/sve/init_5.c: Likewise and additionally\n\tadjust dg-scan.\n\t* gcc.target/aarch64/sve/init_6.c: Likewise.\n\t* gcc.target/aarch64/sve/init_7.c: Likewise.\n\t* gcc.target/aarch64/sve/init_8.c: Likewise.\n\t* gcc.target/aarch64/sve/init_9.c: Likewise.\n\t* gcc.target/aarch64/sve/init_10.c: Likewise.\n\t* gcc.target/aarch64/sve/init_11.c: Likewise.\n\t* gcc.target/aarch64/sve/init_12.c: Likewise.\n\nFrom-SVN: r272073", "tree": {"sha": "5b7b984c924011ec6b115871a59d551e82e98e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b7b984c924011ec6b115871a59d551e82e98e7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a9debbd7660bafbd7658c9e843eddbac8980188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9debbd7660bafbd7658c9e843eddbac8980188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9debbd7660bafbd7658c9e843eddbac8980188", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9debbd7660bafbd7658c9e843eddbac8980188/comments", "author": null, "committer": null, "parents": [{"sha": "a5edb3fa224d547bbc372ba1105aff3b667a0a63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5edb3fa224d547bbc372ba1105aff3b667a0a63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5edb3fa224d547bbc372ba1105aff3b667a0a63"}], "stats": {"total": 79, "additions": 44, "deletions": 35}, "files": [{"sha": "372b06bc1af6d4ebcaf2778d3be3f2e8f4ea3b2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,3 +1,21 @@\n+2019-06-08  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\t* gcc.target/aarch64/sve/init_1.c: Remove options\n+\t-O2 -fno-schedule-insns and instead pass -O.\n+\tUpdate assembly in comments. \n+\t* gcc.target/aarch64/sve/init_2.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_3.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_4.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_5.c: Likewise and additionally\n+\tadjust dg-scan.\n+\t* gcc.target/aarch64/sve/init_6.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_7.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_8.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_9.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_10.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_11.c: Likewise.\n+\t* gcc.target/aarch64/sve/init_12.c: Likewise.\n+\n 2019-06-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/77747"}, {"sha": "14abc22e2cb7dbec93c7365b7ec2d59a0c7cd018", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_1.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 1.1: Trailing constants with stepped sequence.  */\n \n@@ -17,7 +17,6 @@ vnx4si foo(int a, int b)\n foo:\n .LFB0:\n         .cfi_startproc\n-        ptrue   p0.s, vl8\n         index   z0.s, #1, #1\n         insr    z0.s, w1\n         insr    z0.s, w0"}, {"sha": "c83debe4dac89c18e78ee504fb9e5fa0ef2edd7f", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_10.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_10.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 5.4: Interleaved repeating elements and non-repeating elements.  */\n \n@@ -17,13 +17,12 @@ vnx4si foo(int a, int b, int c, int f)\n foo:\n .LFB0:\n         .cfi_startproc\n-        mov     z0.s, w2\n         mov     z1.s, w3\n+        mov     z0.s, w2\n         insr    z0.s, w1\n-        ptrue   p0.s, vl8\n         insr    z0.s, w0\n         zip1    z0.s, z0.s, z1.s\n         ret\n */\n \n-/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w3\\n\\tmov\\t(z[0-9]+\\.s), w2\\n.*\\n\\tinsr\\t\\2, w1\\n\\tinsr\\t\\2, w0\\n\\tzip1\\t\\2, \\2, \\1} } } */\n+/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w3\\n\\tmov\\t(z[0-9]+\\.s), w2\\n\\tinsr\\t\\2, w1\\n\\tinsr\\t\\2, w0\\n\\tzip1\\t\\2, \\2, \\1} } } */"}, {"sha": "90627b44efc7362a606275da4d8f22304d0be83e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_11.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_11.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 5.5: Interleaved repeating elements and trailing same elements.  */\n \n@@ -18,11 +18,10 @@ vnx4si foo(int a, int b, int f)\n .LFB0:\n         .cfi_startproc\n         mov     z0.s, w1\n-        mov     z1.s, w2\n         insr    z0.s, w0\n-        ptrue   p0.s, vl8\n+        mov     z1.s, w2\n         zip1    z0.s, z0.s, z1.s\n         ret\n */\n \n-/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w1\\n\\tmov\\t(z[0-9]+\\.s), w2\\n\\tinsr\\t\\1, w0\\n.*\\tzip1\\t\\1, \\1, \\2} } } */\n+/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w1\\n\\tinsr\\t\\1, w0\\n\\tmov\\t(z[0-9]+\\.s), w2\\n\\tzip1\\t\\1, \\1, \\2} } } */"}, {"sha": "dc20e86c02cf52f67c36c78b3796db25662d5758", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_12.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_12.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 5.5: Interleaved repeating elements and trailing same elements.  */\n \n@@ -17,14 +17,13 @@ vnx4si foo(int a, int b, int f)\n foo:\n .LFB0:\n         .cfi_startproc\n-        mov     z0.s, w0\n         mov     z1.s, w2\n+        mov     z0.s, w0\n         insr    z0.s, w1\n-        ptrue   p0.s, vl8\n         insr    z0.s, w1\n         insr    z0.s, w1\n         zip1    z0.s, z0.s, z1.s\n         ret\n */\n \n-/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w2\\n\\tmov\\t(z[0-9]+\\.s), w0\\n.*\\n\\tinsr\\t\\2, w1\\n\\tinsr\\t\\2, w1\\n\\tinsr\\t\\2, w1\\n\\tzip1\\t\\2, \\2, \\1} } } */\n+/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w2\\n\\tmov\\t(z[0-9]+\\.s), w0\\n\\tinsr\\t\\2, w1\\n\\tinsr\\t\\2, w1\\n\\tinsr\\t\\2, w1\\n\\tzip1\\t\\2, \\2, \\1} } } */"}, {"sha": "5b4ba105af26ef975d5b6b222540e94f95c17bd2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_2.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 1.2: Trailing constants with repeating sequence.  */\n "}, {"sha": "28d218cd768eea9ffe25e4bfa3a9242d686b6ee8", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_3.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 2.1: Leading constants with stepped sequence.  */\n \n@@ -17,7 +17,6 @@ vnx4si foo(int a, int b)\n foo:\n .LFB0:\n         .cfi_startproc\n-        ptrue   p0.s, vl8\n         index   z0.s, #6, #-1\n         insr    z0.s, w0\n         insr    z0.s, w1"}, {"sha": "94484b1a4e66b7e877bc5cb474df9583ac246cf5", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_4.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 2.2: Leading constants with stepped sequence.  */\n "}, {"sha": "a43dd7a4ac7ceb49a134e2759fc8de57370a0d30", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_5.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_5.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 3: Trailing same element.  */ \n \n@@ -18,10 +18,9 @@ vnx4si foo(int a, int b, int c)\n .LFB0:\n         .cfi_startproc\n         mov     z0.s, w2\n-        ptrue   p0.s, vl8\n         insr    z0.s, w1\n         insr    z0.s, w0\n         ret\n */\n \n-/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w2\\n.*\\tinsr\\t\\1, w1\\n\\tinsr\\t\\1, w0} } } */\n+/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w2\\n\\tinsr\\t\\1, w1\\n\\tinsr\\t\\1, w0} } } */"}, {"sha": "b8e30fb72ebd10a949ed91163613f8f7cdfd17a3", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_6.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_6.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 3: Trailing same element.  */ \n \n@@ -18,11 +18,10 @@ vnx4si foo(int a, int b, int c)\n .LFB0:\n         .cfi_startproc\n         mov     z0.s, w2\n-        ptrue   p0.s, vl8\n         insr    z0.s, w1\n         insr    z0.s, w0\n         rev     z0.s, z0.s\n         ret\n */\n \n-/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w2\\n.*\\tinsr\\t\\1, w1\\n\\tinsr\\t\\1, w0\\n\\trev\\t\\1, \\1} } } */\n+/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w2\\n\\tinsr\\t\\1, w1\\n\\tinsr\\t\\1, w0\\n\\trev\\t\\1, \\1} } } */"}, {"sha": "dd27978faf7e676bd1859f9347a7b1b038694c29", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_7.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_7.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 5.1: All elements.  */ \n \n@@ -18,7 +18,6 @@ vnx4si foo(int a, int b, int c, int d, int e, int f, int g, int h)\n .LFB0:\n         .cfi_startproc\n         mov     z0.s, w7\n-        ptrue   p0.s, vl8\n         insr    z0.s, w6\n         insr    z0.s, w5\n         insr    z0.s, w4\n@@ -29,4 +28,4 @@ vnx4si foo(int a, int b, int c, int d, int e, int f, int g, int h)\n         ret\n */\n \n-/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w7\\n.*\\tinsr\\t\\1, w6\\n\\tinsr\\t\\1, w5\\n\\tinsr\\t\\1, w4\\n\\tinsr\\t\\1, w3\\n\\tinsr\\t\\1, w2\\n\\tinsr\\t\\1, w1\\n\\tinsr\\t\\1, w0} } } */\n+/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w7\\n\\tinsr\\t\\1, w6\\n\\tinsr\\t\\1, w5\\n\\tinsr\\t\\1, w4\\n\\tinsr\\t\\1, w3\\n\\tinsr\\t\\1, w2\\n\\tinsr\\t\\1, w1\\n\\tinsr\\t\\1, w0} } } */"}, {"sha": "73f7aba3df3d8fa973cbf35c268f8c45760d817a", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_8.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 5.2: Interleaved elements and constants.  */ \n \n@@ -18,15 +18,15 @@ vnx4si foo(int a, int b, int c, int d)\n .LFB0:\n         .cfi_startproc\n         ptrue   p0.s, vl8\n+        adrp    x4, .LANCHOR0\n+        add     x4, x4, :lo12:.LANCHOR0\n+        ld1w    z1.s, p0/z, [x4]\n         mov     z0.s, w3\n-        adrp    x3, .LANCHOR0\n         insr    z0.s, w2\n-        add     x3, x3, :lo12:.LANCHOR0\n         insr    z0.s, w1\n-        ld1w    z1.s, p0/z, [x3]\n         insr    z0.s, w0\n         zip1    z0.s, z0.s, z1.s\n         ret\n */\n \n-/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w3\\n\\tadrp\\t(x[0-9]+), \\.LANCHOR0\\n\\tinsr\\t\\1, w2\\n\\tadd\\t\\2, \\2, :lo12:\\.LANCHOR0\\n\\tinsr\\t\\1, w1\\n\\tld1w\\t(z[0-9]+\\.s), p[0-9]+/z, \\[\\2\\]\\n\\tinsr\\t\\1, w0\\n\\tzip1\\t\\1, \\1, \\3} } } */\n+/* { dg-final { scan-assembler {\\tld1w\\t(z[0-9]+\\.s), p[0-9]+/z, \\[x[0-9]+\\]\\n\\tmov\\t(z[0-9]+\\.s), w3\\n\\tinsr\\t\\2, w2\\n\\tinsr\\t\\2, w1\\n\\tinsr\\t\\2, w0\\n\\tzip1\\t\\2, \\2, \\1} } } */"}, {"sha": "2cc564a5a8395b06b8b0ad12c53524e5ac704fe6", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_9.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9debbd7660bafbd7658c9e843eddbac8980188/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_9.c?ref=3a9debbd7660bafbd7658c9e843eddbac8980188", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do assemble { target aarch64_asm_sve_ok } } */\n-/* { dg-options \"-O2 -fno-schedule-insns -msve-vector-bits=256 --save-temps\" } */\n+/* { dg-options \"-O -msve-vector-bits=256 --save-temps\" } */\n \n /* Case 5.3: Repeated elements.  */ \n \n@@ -19,9 +19,8 @@ vnx4si foo(int a, int b)\n         .cfi_startproc\n         mov     z0.s, w0\n         mov     z1.s, w1\n-        ptrue   p0.s, vl8\n         zip1    z0.s, z0.s, z1.s\n         ret\n */\n \n-/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w0\\n\\tmov\\t(z[0-9]+\\.s), w1\\n.*\\tzip1\\t\\1, \\1, \\2} } } */\n+/* { dg-final { scan-assembler {\\tmov\\t(z[0-9]+\\.s), w0\\n\\tmov\\t(z[0-9]+\\.s), w1\\n\\tzip1\\t\\1, \\1, \\2} } } */"}]}