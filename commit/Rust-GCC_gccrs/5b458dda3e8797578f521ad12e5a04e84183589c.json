{"sha": "5b458dda3e8797578f521ad12e5a04e84183589c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI0NThkZGEzZTg3OTc1NzhmNTIxYWQxMmU1YTA0ZTg0MTgzNTg5Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-01-25T19:14:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-25T19:14:32Z"}, "message": "go-test.exp (go-gc-tests): Handle a few more test lines.\n\n\t* go.test/go-test.exp (go-gc-tests): Handle a few more test\n\tlines.\n\nFrom-SVN: r183533", "tree": {"sha": "08fa54c1192c45d5e53e1676f2c1b64900aab621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08fa54c1192c45d5e53e1676f2c1b64900aab621"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b458dda3e8797578f521ad12e5a04e84183589c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b458dda3e8797578f521ad12e5a04e84183589c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b458dda3e8797578f521ad12e5a04e84183589c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b458dda3e8797578f521ad12e5a04e84183589c/comments", "author": null, "committer": null, "parents": [{"sha": "e906c889182f1385ef48374e87e8ae7323b58848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e906c889182f1385ef48374e87e8ae7323b58848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e906c889182f1385ef48374e87e8ae7323b58848"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "4518441880ac4b24d2c4138702462fd2a642f441", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b458dda3e8797578f521ad12e5a04e84183589c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b458dda3e8797578f521ad12e5a04e84183589c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b458dda3e8797578f521ad12e5a04e84183589c", "patch": "@@ -1,3 +1,8 @@\n+2012-01-25  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go.test/go-test.exp (go-gc-tests): Handle a few more test\n+\tlines.\n+\n 2012-01-25  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51995"}, {"sha": "13e801b73f82254375d987defa5a6b3bb31ed246", "filename": "gcc/testsuite/go.test/go-test.exp", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b458dda3e8797578f521ad12e5a04e84183589c/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b458dda3e8797578f521ad12e5a04e84183589c/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp?ref=5b458dda3e8797578f521ad12e5a04e84183589c", "patch": "@@ -448,6 +448,7 @@ proc go-gc-tests { } {\n \t    go-torture-execute $test\n \t    file delete core [glob -nocomplain core.*]\n \t} elseif { $test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out 2>&1 | cmp - \\$D/\\$F.out\" \\\n+\t\t       || $test_line == \"// \\$G \\$F.go && \\$L \\$F.\\$A && ./\\$A.out 2>&1 | cmp - \\$D/\\$F.out\" \\\n \t\t       || $test_line == \"// (\\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out 2>&1 | cmp - \\$D/\\$F.out)\" } {\n \t    # This is an execution test for which we need to check the\n \t    # program output.\n@@ -493,7 +494,8 @@ proc go-gc-tests { } {\n \t\t   || [string match \"// \\$G \\$F.go || echo BUG*\" \\\n \t\t\t   $test_line] \\\n \t\t   || [string match \"// ! \\$G \\$D/\\$F.go && echo BUG*\" \\\n-\t\t\t   $test_line] } {\n+\t\t\t   $test_line] \\\n+\t\t   || $test_line == \"// echo bug395 is broken  # takes 90+ seconds to break\" } {\n \t    # This is a vanilla compile test.\n \t    set dg-do-what-default \"assemble\"\n \t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n@@ -854,11 +856,17 @@ proc go-gc-tests { } {\n \t    }\n \t    file delete $ofile0 $ofile1 $ofile2 $output_file\n \t    set runtests $hold_runtests\n-\t} elseif { $test_line == \"// \\$G \\$D/import2.go && \\$G \\$D/\\$F\\.go\" } {\n+\t} elseif { $test_line == \"// \\$G \\$D/import2.go && \\$G \\$D/\\$F\\.go\" \\\n+\t\t       || $test_line == \"// \\$G \\$D/recursive1.go && \\$G \\$D/\\$F.go\" } {\n+\t    if { $test_line == \"// \\$G \\$D/import2.go && \\$G \\$D/\\$F\\.go\" } {\n+\t\tset name1 \"import2.go\"\n+\t    } elseif { $test_line == \"// \\$G \\$D/recursive1.go && \\$G \\$D/\\$F.go\" } {\n+\t\tset name1 \"recursive1.go\"\n+\t    }\n \t    set hold_runtests $runtests\n \t    set runtests \"go-test.exp\"\n \t    set dg-do-what-default \"assemble\"\n-\t    regsub \"/\\[^/\\]*$\" $test \"/import2.go\" file1\n+\t    regsub \"/\\[^/\\]*$\" $test \"/${name1}\" file1\n \t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n \t    set ofile1 \"[file rootname [file tail $file1]].o\"\n \t    dg-test $test \"-O\" \"-w $DEFAULT_GOCFLAGS\""}]}