{"sha": "af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYzMGY3OTNjOTVlYWNkMzA3ZWQxYzUyMzU0YjY0YjRmOWFhMWRjNg==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2005-01-22T18:23:43Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-01-22T18:23:43Z"}, "message": "gfortran.h (gfc_check_access): Add prototype.\n\n2005-01-22  Paul Brook  <paul@codesourcery.com>\n\n\t* gfortran.h (gfc_check_access): Add prototype.\n\t* match.c (gfc_match_namelist): Remove TODO.\n\t* module.c (check_access): Rename ...\n\t(gfc_check_access): ... to this.  Boolify.  Update callers.\n\t* resolve.c (resolve_symbol): Check for private objects in public\n\tnamelists.\ntestsuite/\n\t* namelist_1.f90: New test.\n\nFrom-SVN: r94073", "tree": {"sha": "741a6404b43521797001c198018498d7589d9458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/741a6404b43521797001c198018498d7589d9458"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/comments", "author": null, "committer": null, "parents": [{"sha": "d7f3fc19903a41f07d22b0b7b38d06e16cff55b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f3fc19903a41f07d22b0b7b38d06e16cff55b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f3fc19903a41f07d22b0b7b38d06e16cff55b8"}], "stats": {"total": 83, "additions": 58, "deletions": 25}, "files": [{"sha": "434a23ba93ddb17c9fcaec8cc30cea997f363e03", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "patch": "@@ -1,3 +1,12 @@\n+2005-01-22  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gfortran.h (gfc_check_access): Add prototype.\n+\t* match.c (gfc_match_namelist): Remove TODO.\n+\t* module.c (check_access): Rename ...\n+\t(gfc_check_access): ... to this.  Boolify.  Update callers.\n+\t* resolve.c (resolve_symbol): Check for private objects in public\n+\tnamelists.\n+\n 2005-01-22  Paul Brook  <paul@codesourcery.com>\n \n \t* primary.c (gfc_match_rvalue): Only apply implicit type if variable"}, {"sha": "c68f5af5ad52d101c31f2b3401cc3252d77f4440", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "patch": "@@ -1802,6 +1802,7 @@ try gfc_resolve_dt (gfc_dt *);\n void gfc_module_init_2 (void);\n void gfc_module_done_2 (void);\n void gfc_dump_module (const char *, int);\n+bool gfc_check_access (gfc_access, gfc_access);\n \n /* primary.c */\n symbol_attribute gfc_variable_attr (gfc_expr *, gfc_typespec *);"}, {"sha": "abd8ef89acb14c66e2db2c91bcd9f25b63495027", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "patch": "@@ -2418,9 +2418,6 @@ gfc_match_namelist (void)\n \t      && gfc_add_in_namelist (&sym->attr, NULL) == FAILURE)\n \t    goto error;\n \n-\t  /* TODO: worry about PRIVATE members of a PUBLIC namelist\n-             group.  */\n-\n \t  nl = gfc_get_namelist ();\n \t  nl->sym = sym;\n "}, {"sha": "3670a3a49adf6c4088b03bc51519b9cd04c168c3", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "patch": "@@ -3136,29 +3136,23 @@ read_module (void)\n \n \n /* Given an access type that is specific to an entity and the default\n-   access, return nonzero if we should write the entity.  */\n+   access, return nonzero if the entity is publicly accessible.  */\n \n-static int\n-check_access (gfc_access specific_access, gfc_access default_access)\n+bool\n+gfc_check_access (gfc_access specific_access, gfc_access default_access)\n {\n \n   if (specific_access == ACCESS_PUBLIC)\n-    return 1;\n+    return TRUE;\n   if (specific_access == ACCESS_PRIVATE)\n-    return 0;\n+    return FALSE;\n \n   if (gfc_option.flag_module_access_private)\n-    {\n-      if (default_access == ACCESS_PUBLIC)\n-\treturn 1;\n-    }\n+    return default_access == ACCESS_PUBLIC;\n   else\n-    {\n-      if (default_access != ACCESS_PRIVATE)\n-\treturn 1;\n-    }\n+    return default_access != ACCESS_PRIVATE;\n \n-  return 0;\n+  return FALSE;\n }\n \n \n@@ -3230,7 +3224,7 @@ write_symbol0 (gfc_symtree * st)\n       && !sym->attr.subroutine && !sym->attr.function)\n     return;\n \n-  if (!check_access (sym->attr.access, sym->ns->default_access))\n+  if (!gfc_check_access (sym->attr.access, sym->ns->default_access))\n     return;\n \n   p = get_pointer (sym);\n@@ -3289,7 +3283,7 @@ write_operator (gfc_user_op * uop)\n   static char nullstring[] = \"\";\n \n   if (uop->operator == NULL\n-      || !check_access (uop->access, uop->ns->default_access))\n+      || !gfc_check_access (uop->access, uop->ns->default_access))\n     return;\n \n   mio_symbol_interface (uop->name, nullstring, &uop->operator);\n@@ -3303,7 +3297,7 @@ write_generic (gfc_symbol * sym)\n {\n \n   if (sym->generic == NULL\n-      || !check_access (sym->attr.access, sym->ns->default_access))\n+      || !gfc_check_access (sym->attr.access, sym->ns->default_access))\n     return;\n \n   mio_symbol_interface (sym->name, sym->module, &sym->generic);\n@@ -3317,7 +3311,7 @@ write_symtree (gfc_symtree * st)\n   pointer_info *p;\n \n   sym = st->n.sym;\n-  if (!check_access (sym->attr.access, sym->ns->default_access)\n+  if (!gfc_check_access (sym->attr.access, sym->ns->default_access)\n       || (sym->attr.flavor == FL_PROCEDURE && sym->attr.generic\n \t  && !sym->attr.subroutine && !sym->attr.function))\n     return;\n@@ -3348,8 +3342,8 @@ write_module (void)\n       if (i == INTRINSIC_USER)\n \tcontinue;\n \n-      mio_interface (check_access (gfc_current_ns->operator_access[i],\n-\t\t\t\t   gfc_current_ns->default_access)\n+      mio_interface (gfc_check_access (gfc_current_ns->operator_access[i],\n+\t\t\t\t       gfc_current_ns->default_access)\n \t\t     ? &gfc_current_ns->operator[i] : NULL);\n     }\n "}, {"sha": "442b205b7bc4ef8469fb2d5e61531e1d90aeba44", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "patch": "@@ -3881,7 +3881,7 @@ resolve_symbol (gfc_symbol * sym)\n   int formal_ns_save, check_constant, mp_flag;\n   int i;\n   const char *whynot;\n-\n+  gfc_namelist *nl;\n \n   if (sym->attr.flavor == FL_UNKNOWN)\n     {\n@@ -4043,8 +4043,9 @@ resolve_symbol (gfc_symbol * sym)\n \t}\n     }\n \n-  if (sym->attr.flavor == FL_VARIABLE)\n+  switch (sym->attr.flavor)\n     {\n+    case FL_VARIABLE:\n       /* Can the sybol have an initializer?  */\n       whynot = NULL;\n       if (sym->attr.allocatable)\n@@ -4084,6 +4085,25 @@ resolve_symbol (gfc_symbol * sym)\n       /* Assign default initializer.  */\n       if (sym->ts.type == BT_DERIVED && !(sym->value || whynot))\n \tsym->value = gfc_default_initializer (&sym->ts);\n+      break;\n+\n+    case FL_NAMELIST:\n+      /* Reject PRIVATE objects in a PUBLIC namelist.  */\n+      if (gfc_check_access(sym->attr.access, sym->ns->default_access))\n+\t{\n+\t  for (nl = sym->namelist; nl; nl = nl->next)\n+\t    {\n+\t      if (!gfc_check_access(nl->sym->attr.access,\n+\t\t\t\t    nl->sym->ns->default_access))\n+\t\tgfc_error (\"PRIVATE symbol '%s' cannot be member of \"\n+\t\t\t   \"PUBLIC namelist at %L\", nl->sym->name,\n+\t\t\t   &sym->declared_at);\n+\t    }\n+\t}\n+      break;\n+\n+    default:\n+      break;\n     }\n \n "}, {"sha": "7115b358a4bd29142277fb55e1ccb2c099722d38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "patch": "@@ -1,3 +1,7 @@\n+2005-01-22  Paul Brook  <paul@codesourcery.com>\n+\n+\t* namelist_1.f90: New test.\n+\n 2005-01-22  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR tree-optimization/19484"}, {"sha": "9bebe773b6775af25c79652c70be77f4f756f7f9", "filename": "gcc/testsuite/gfortran.dg/namelist_1.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af30f793c95eacd307ed1c52354b64b4f9aa1dc6/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_1.f90?ref=af30f793c95eacd307ed1c52354b64b4f9aa1dc6", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! Check that public entities in private namelists are rejected\n+module namelist_1\n+  public\n+  integer,private :: x\n+  namelist /n/ x ! { dg-error \"cannot be member of PUBLIC namelist\" \"\" }\n+end module\n+"}]}