{"sha": "64463c2a7b08a07e8592f587563856c60409309f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ0NjNjMmE3YjA4YTA3ZTg1OTJmNTg3NTYzODU2YzYwNDA5MzA5Zg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-03-31T01:05:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-03-31T01:05:27Z"}, "message": "c-parse.in (cast_expr): Move change from March 21 into c-parse.in since it is used to generate c-parse.y.\n\n        * c-parse.in (cast_expr): Move change from March 21 into c-parse.in\n        since it is used to generate c-parse.y.\n        * objc-parse.c, objc-parse.y: Regenerated.\n\nFrom-SVN: r32840", "tree": {"sha": "b023d49db07ada6ed8acdd43a455feda9aa960cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b023d49db07ada6ed8acdd43a455feda9aa960cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64463c2a7b08a07e8592f587563856c60409309f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64463c2a7b08a07e8592f587563856c60409309f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64463c2a7b08a07e8592f587563856c60409309f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64463c2a7b08a07e8592f587563856c60409309f/comments", "author": null, "committer": null, "parents": [{"sha": "64ea4a5e272df56ba687556bfe01f2a5ea9d50d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ea4a5e272df56ba687556bfe01f2a5ea9d50d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ea4a5e272df56ba687556bfe01f2a5ea9d50d8"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "d83f200a0aa699ff62ba156d797308dffaa295d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64463c2a7b08a07e8592f587563856c60409309f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64463c2a7b08a07e8592f587563856c60409309f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64463c2a7b08a07e8592f587563856c60409309f", "patch": "@@ -13,6 +13,10 @@ Thu Mar 30 06:32:51 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n Thu Mar 30 13:30:40 2000  Jeffrey A Law  (law@cygnus.com)\n \n+\t* c-parse.in (cast_expr): Move change from March 21 into c-parse.in\n+\tsince it is used to generate c-parse.y.\n+\t* objc-parse.c, objc-parse.y: Regenerated.\n+\n \t* function.c (expand_function_end): Pass alignment argument to\n \temit_block_move in bits, not bytes.\n "}, {"sha": "3db3089293f95b5964518ff882e1f0685ffc7ab1", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64463c2a7b08a07e8592f587563856c60409309f/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64463c2a7b08a07e8592f587563856c60409309f/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=64463c2a7b08a07e8592f587563856c60409309f", "patch": "@@ -533,7 +533,7 @@ cast_expr:\n \t\t  else\n \t\t    name = \"\";\n \t\t  $$ = result;\n-\t\t  if (TREE_CODE (type) == ARRAY_TYPE && TYPE_SIZE (type) == 0)\n+\t\t  if (TREE_CODE (type) == ARRAY_TYPE && !COMPLETE_TYPE_P (type))\n \t\t    {\n \t\t      int failure = complete_array_type (type, $$, 1);\n \t\t      if (failure)"}, {"sha": "d83adf26b305c5172a553d81fd2f7bba1472d585", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64463c2a7b08a07e8592f587563856c60409309f/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64463c2a7b08a07e8592f587563856c60409309f/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=64463c2a7b08a07e8592f587563856c60409309f", "patch": "@@ -1754,7 +1754,7 @@ static const short yycheck[] = {    56,\n     50,    51,    52,    53,    54,    55,    56,    57\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n /* This file comes from bison-1.27.  */\n \n /* Skeleton output parser for bison,\n@@ -1968,7 +1968,7 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #endif\n #endif\n \f\n-#line 216 \"/usr/share/bison.simple\"\n+#line 216 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2589,7 +2589,7 @@ case 65:\n \t\t  else\n \t\t    name = \"\";\n \t\t  yyval.ttype = result;\n-\t\t  if (TREE_CODE (type) == ARRAY_TYPE && TYPE_SIZE (type) == 0)\n+\t\t  if (TREE_CODE (type) == ARRAY_TYPE && !COMPLETE_TYPE_P (type))\n \t\t    {\n \t\t      int failure = complete_array_type (type, yyval.ttype, 1);\n \t\t      if (failure)\n@@ -5091,7 +5091,7 @@ case 570:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 542 \"/usr/share/bison.simple\"\n+#line 542 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;"}, {"sha": "29359e96fab5f34837fd478adad9334a9ac39451", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64463c2a7b08a07e8592f587563856c60409309f/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64463c2a7b08a07e8592f587563856c60409309f/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=64463c2a7b08a07e8592f587563856c60409309f", "patch": "@@ -514,7 +514,7 @@ cast_expr:\n \t\t  else\n \t\t    name = \"\";\n \t\t  $$ = result;\n-\t\t  if (TREE_CODE (type) == ARRAY_TYPE && TYPE_SIZE (type) == 0)\n+\t\t  if (TREE_CODE (type) == ARRAY_TYPE && !COMPLETE_TYPE_P (type))\n \t\t    {\n \t\t      int failure = complete_array_type (type, $$, 1);\n \t\t      if (failure)"}]}