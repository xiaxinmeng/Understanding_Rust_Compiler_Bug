{"sha": "8d6fffc4bcd4afa0beb0efad4f3b95394aa15618", "node_id": "C_kwDOANBUbNoAKDhkNmZmZmM0YmNkNGFmYTBiZWIwZWZhZDRmM2I5NTM5NGFhMTU2MTg", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-04T17:30:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-04T17:30:59Z"}, "message": "rs6000: Fix up -D_FORTIFY_SOURCE* with -mabi=ieeelongdouble [PR104380]\n\nThe following testcase FAILs when configured with\n--with-long-double-format=ieee .  Only happens in the -std=c* modes, not the\nGNU modes; while the glibc headers have __asm redirects of\nvsnprintf and __vsnprinf_chk to __vsnprintfieee128 and\n__vsnprintf_chkieee128, the vsnprintf fortification extern inline gnu_inline\nalways_inline wrapper calls __builtin_vsnprintf_chk and we actually emit\na call to __vsnprinf_chk (i.e. with IBM extended long double) instead of\n__vsnprintf_chkieee128.\n\nrs6000_mangle_decl_assembler_name already had cases for *printf and *scanf,\nso this just adds another case for *printf_chk.  *scanf_chk doesn't exist.\n__ prefixing isn't done because *printf_chk already starts with __.\n\n2022-02-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/104380\n\t* config/rs6000/rs6000.cc (rs6000_mangle_decl_assembler_name): Also\n\tadjust mangling of __builtin*printf_chk.\n\n\t* gcc.dg/pr104380.c: New test.", "tree": {"sha": "2da01478bcc60232f7bc6e6cecce6d81f60673ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2da01478bcc60232f7bc6e6cecce6d81f60673ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d6fffc4bcd4afa0beb0efad4f3b95394aa15618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6fffc4bcd4afa0beb0efad4f3b95394aa15618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d6fffc4bcd4afa0beb0efad4f3b95394aa15618", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6fffc4bcd4afa0beb0efad4f3b95394aa15618/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f722e35ab3805de6eeace770508a9085944e93e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f722e35ab3805de6eeace770508a9085944e93e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f722e35ab3805de6eeace770508a9085944e93e"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "d9fc67d5d29f723f37294df8ac3e49eae52d3894", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6fffc4bcd4afa0beb0efad4f3b95394aa15618/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6fffc4bcd4afa0beb0efad4f3b95394aa15618/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=8d6fffc4bcd4afa0beb0efad4f3b95394aa15618", "patch": "@@ -28069,6 +28069,7 @@ rs6000_mangle_decl_assembler_name (tree decl, tree id)\n \t{\n \t  size_t printf_len = strlen (\"printf\");\n \t  size_t scanf_len = strlen (\"scanf\");\n+\t  size_t printf_chk_len = strlen (\"printf_chk\");\n \n \t  if (len >= printf_len\n \t      && strcmp (name + len - printf_len, \"printf\") == 0)\n@@ -28078,6 +28079,10 @@ rs6000_mangle_decl_assembler_name (tree decl, tree id)\n \t\t   && strcmp (name + len - scanf_len, \"scanf\") == 0)\n \t    newname = xasprintf (\"__isoc99_%sieee128\", name);\n \n+\t  else if (len >= printf_chk_len\n+\t\t   && strcmp (name + len - printf_chk_len, \"printf_chk\") == 0)\n+\t    newname = xasprintf (\"%sieee128\", name);\n+\n \t  else if (name[len - 1] == 'l')\n \t    {\n \t      bool uses_ieee128_p = false;"}, {"sha": "54b2a87cf4453987c744233cb0116e33bb854556", "filename": "gcc/testsuite/gcc.dg/pr104380.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6fffc4bcd4afa0beb0efad4f3b95394aa15618/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104380.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6fffc4bcd4afa0beb0efad4f3b95394aa15618/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104380.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104380.c?ref=8d6fffc4bcd4afa0beb0efad4f3b95394aa15618", "patch": "@@ -0,0 +1,32 @@\n+/* PR target/104380 */\n+/* This test needs runtime that provides __*_chk functions.  */\n+/* { dg-do run { target *-*-linux* *-*-gnu* *-*-uclinux* } } */\n+/* { dg-options \"-O2 -std=c99\" } */\n+\n+#define FORTIFY_SOURCE 2\n+#include <stdio.h>\n+#include <stdarg.h>\n+\n+static char buf[4096];\n+static char gfmt[] = \"%Lg\";\n+\n+static int __attribute__ ((noipa))\n+foo (char *str, const char *fmt, ...)\n+{\n+  int ret;\n+  va_list ap;\n+  va_start (ap, fmt);\n+  ret = vsnprintf (str, 4096, fmt, ap);\n+  va_end (ap);\n+  return ret;\n+}\n+\n+int\n+main ()\n+{\n+  long double dval = 128.0L;\n+  int ret = foo (buf, gfmt, dval);\n+  if (ret != 3 || __builtin_strcmp (buf, \"128\") != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}