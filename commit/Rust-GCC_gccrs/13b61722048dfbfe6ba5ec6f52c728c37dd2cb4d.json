{"sha": "13b61722048dfbfe6ba5ec6f52c728c37dd2cb4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNiNjE3MjIwNDhkZmJmZTZiYTVlYzZmNTJjNzI4YzM3ZGQyY2I0ZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-26T21:06:06Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-26T21:06:06Z"}, "message": "compiler: Don't make type fns for private fields in other packages.\n\nFrom-SVN: r183579", "tree": {"sha": "1dc815d906c2a6224fda22da5ff59aab9a3d6ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dc815d906c2a6224fda22da5ff59aab9a3d6ba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13b61722048dfbfe6ba5ec6f52c728c37dd2cb4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b61722048dfbfe6ba5ec6f52c728c37dd2cb4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13b61722048dfbfe6ba5ec6f52c728c37dd2cb4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b61722048dfbfe6ba5ec6f52c728c37dd2cb4d/comments", "author": null, "committer": null, "parents": [{"sha": "e02ed81e1bb3c1c8292448f6af7366a400ec3526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02ed81e1bb3c1c8292448f6af7366a400ec3526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e02ed81e1bb3c1c8292448f6af7366a400ec3526"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "e94090bcd01da6abafcb47799be412e6191a3730", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13b61722048dfbfe6ba5ec6f52c728c37dd2cb4d/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13b61722048dfbfe6ba5ec6f52c728c37dd2cb4d/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=13b61722048dfbfe6ba5ec6f52c728c37dd2cb4d", "patch": "@@ -1205,22 +1205,34 @@ Specific_type_functions::type(Type* t)\n     {\n     case Type::TYPE_NAMED:\n       {\n+\tNamed_type* nt = t->named_type();\n \tif (!t->compare_is_identity(this->gogo_) && t->is_comparable())\n-\t  t->type_functions(this->gogo_, t->named_type(), NULL, NULL, &hash_fn,\n-\t\t\t    &equal_fn);\n+\t  t->type_functions(this->gogo_, nt, NULL, NULL, &hash_fn, &equal_fn);\n \n \t// If this is a struct type, we don't want to make functions\n \t// for the unnamed struct.\n-\tType* rt = t->named_type()->real_type();\n+\tType* rt = nt->real_type();\n \tif (rt->struct_type() == NULL)\n \t  {\n \t    if (Type::traverse(rt, this) == TRAVERSE_EXIT)\n \t      return TRAVERSE_EXIT;\n \t  }\n \telse\n \t  {\n-\t    if (rt->struct_type()->traverse_field_types(this) == TRAVERSE_EXIT)\n-\t      return TRAVERSE_EXIT;\n+\t    // If this type is defined in another package, then we don't\n+\t    // need to worry about the unexported fields.\n+\t    bool is_defined_elsewhere = nt->named_object()->package() != NULL;\n+\t    const Struct_field_list* fields = rt->struct_type()->fields();\n+\t    for (Struct_field_list::const_iterator p = fields->begin();\n+\t\t p != fields->end();\n+\t\t ++p)\n+\t      {\n+\t\tif (is_defined_elsewhere\n+\t\t    && Gogo::is_hidden_name(p->field_name()))\n+\t\t  continue;\n+\t\tif (Type::traverse(p->type(), this) == TRAVERSE_EXIT)\n+\t\t  return TRAVERSE_EXIT;\n+\t      }\n \t  }\n \n \treturn TRAVERSE_SKIP_COMPONENTS;"}]}