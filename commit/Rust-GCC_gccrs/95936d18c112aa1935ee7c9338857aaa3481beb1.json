{"sha": "95936d18c112aa1935ee7c9338857aaa3481beb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5MzZkMThjMTEyYWExOTM1ZWU3YzkzMzg4NTdhYWEzNDgxYmViMQ==", "commit": {"author": {"name": "John Carr", "email": "jfc@mit.edu", "date": "1998-02-02T16:44:24Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-02-02T16:44:24Z"}, "message": "Patch from John Carr to fix some 32/64 bit cross compiler bugs.\n\n\t* mips.md: Change gen_rtx (CONST_INT) to GEN_INT.\n\nFrom-SVN: r17601", "tree": {"sha": "a6999685b373a8878380d9860672fef3da18bd2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6999685b373a8878380d9860672fef3da18bd2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95936d18c112aa1935ee7c9338857aaa3481beb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95936d18c112aa1935ee7c9338857aaa3481beb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95936d18c112aa1935ee7c9338857aaa3481beb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95936d18c112aa1935ee7c9338857aaa3481beb1/comments", "author": {"login": "VoxSciurorum", "id": 60116679, "node_id": "MDQ6VXNlcjYwMTE2Njc5", "avatar_url": "https://avatars.githubusercontent.com/u/60116679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VoxSciurorum", "html_url": "https://github.com/VoxSciurorum", "followers_url": "https://api.github.com/users/VoxSciurorum/followers", "following_url": "https://api.github.com/users/VoxSciurorum/following{/other_user}", "gists_url": "https://api.github.com/users/VoxSciurorum/gists{/gist_id}", "starred_url": "https://api.github.com/users/VoxSciurorum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VoxSciurorum/subscriptions", "organizations_url": "https://api.github.com/users/VoxSciurorum/orgs", "repos_url": "https://api.github.com/users/VoxSciurorum/repos", "events_url": "https://api.github.com/users/VoxSciurorum/events{/privacy}", "received_events_url": "https://api.github.com/users/VoxSciurorum/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5b699cfe1c8e12469e1f902110d26ece5457242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b699cfe1c8e12469e1f902110d26ece5457242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b699cfe1c8e12469e1f902110d26ece5457242"}], "stats": {"total": 108, "additions": 56, "deletions": 52}, "files": [{"sha": "f54e31ee091b8f2d92508456f74b19a6b280c234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95936d18c112aa1935ee7c9338857aaa3481beb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95936d18c112aa1935ee7c9338857aaa3481beb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95936d18c112aa1935ee7c9338857aaa3481beb1", "patch": "@@ -1,3 +1,7 @@\n+Mon Feb  2 16:43:10 1998  John Carr  <jfc@mit.edu>\n+\n+\t* mips.md: Change gen_rtx (CONST_INT) to GEN_INT.\n+\n Mon Feb  2 13:06:47 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* vmsconfig.com: Remove bytecode references."}, {"sha": "eaf80efacb95a3918613a0a08d49b325704716f4", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95936d18c112aa1935ee7c9338857aaa3481beb1/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95936d18c112aa1935ee7c9338857aaa3481beb1/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=95936d18c112aa1935ee7c9338857aaa3481beb1", "patch": "@@ -3332,7 +3332,7 @@ move\\\\t%0,%z4\\\\n\\\\\n     {\n       rtx op1   = gen_lowpart (DImode, operands[1]);\n       rtx temp  = gen_reg_rtx (DImode);\n-      rtx shift = gen_rtx (CONST_INT, VOIDmode, 32);\n+      rtx shift = GEN_INT (32);\n \n       emit_insn (gen_ashldi3 (temp, op1, shift));\n       emit_insn (gen_lshrdi3 (operands[0], temp, shift));\n@@ -3609,7 +3609,7 @@ move\\\\t%0,%z4\\\\n\\\\\n     {\n       rtx op1   = gen_lowpart (DImode, operands[1]);\n       rtx temp  = gen_reg_rtx (DImode);\n-      rtx shift = gen_rtx (CONST_INT, VOIDmode, 48);\n+      rtx shift = GEN_INT (48);\n \n       emit_insn (gen_ashldi3 (temp, op1, shift));\n       emit_insn (gen_ashrdi3 (operands[0], temp, shift));\n@@ -3639,7 +3639,7 @@ move\\\\t%0,%z4\\\\n\\\\\n     {\n       rtx op1   = gen_lowpart (SImode, operands[1]);\n       rtx temp  = gen_reg_rtx (SImode);\n-      rtx shift = gen_rtx (CONST_INT, VOIDmode, 16);\n+      rtx shift = GEN_INT (16);\n \n       emit_insn (gen_ashlsi3 (temp, op1, shift));\n       emit_insn (gen_ashrsi3 (operands[0], temp, shift));\n@@ -3670,7 +3670,7 @@ move\\\\t%0,%z4\\\\n\\\\\n       rtx op0   = gen_lowpart (SImode, operands[0]);\n       rtx op1   = gen_lowpart (SImode, operands[1]);\n       rtx temp  = gen_reg_rtx (SImode);\n-      rtx shift = gen_rtx (CONST_INT, VOIDmode, 24);\n+      rtx shift = GEN_INT (24);\n \n       emit_insn (gen_ashlsi3 (temp, op1, shift));\n       emit_insn (gen_ashrsi3 (op0, temp, shift));\n@@ -3701,7 +3701,7 @@ move\\\\t%0,%z4\\\\n\\\\\n     {\n       rtx op1   = gen_lowpart (SImode, operands[1]);\n       rtx temp  = gen_reg_rtx (SImode);\n-      rtx shift = gen_rtx (CONST_INT, VOIDmode, 24);\n+      rtx shift = GEN_INT (24);\n \n       emit_insn (gen_ashlsi3 (temp, op1, shift));\n       emit_insn (gen_ashrsi3 (operands[0], temp, shift));\n@@ -3731,7 +3731,7 @@ move\\\\t%0,%z4\\\\n\\\\\n     {\n       rtx op1   = gen_lowpart (DImode, operands[1]);\n       rtx temp  = gen_reg_rtx (DImode);\n-      rtx shift = gen_rtx (CONST_INT, VOIDmode, 56);\n+      rtx shift = GEN_INT (56);\n \n       emit_insn (gen_ashldi3 (temp, op1, shift));\n       emit_insn (gen_ashrdi3 (operands[0], temp, shift));\n@@ -3983,7 +3983,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n       emit_label (label1);\n       emit_move_insn (reg2, gen_rtx (MINUS, DFmode, operands[1], reg1));\n-      emit_move_insn (reg3, gen_rtx (CONST_INT, VOIDmode, 0x80000000));\n+      emit_move_insn (reg3, GEN_INT (0x80000000));\n \n       emit_insn (gen_fix_truncdfsi2 (operands[0], reg2));\n       emit_insn (gen_iorsi3 (operands[0], operands[0], reg3));\n@@ -4026,7 +4026,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n       emit_label (label1);\n       emit_move_insn (reg2, gen_rtx (MINUS, DFmode, operands[1], reg1));\n-      emit_move_insn (reg3, gen_rtx (CONST_INT, VOIDmode, 0x80000000));\n+      emit_move_insn (reg3, GEN_INT (0x80000000));\n       emit_insn (gen_ashldi3 (reg3, reg3, GEN_INT (32)));\n \n       emit_insn (gen_fix_truncdfdi2 (operands[0], reg2));\n@@ -4070,7 +4070,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n       emit_label (label1);\n       emit_move_insn (reg2, gen_rtx (MINUS, SFmode, operands[1], reg1));\n-      emit_move_insn (reg3, gen_rtx (CONST_INT, VOIDmode, 0x80000000));\n+      emit_move_insn (reg3, GEN_INT (0x80000000));\n \n       emit_insn (gen_fix_truncsfsi2 (operands[0], reg2));\n       emit_insn (gen_iorsi3 (operands[0], operands[0], reg3));\n@@ -4113,7 +4113,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n       emit_label (label1);\n       emit_move_insn (reg2, gen_rtx (MINUS, SFmode, operands[1], reg1));\n-      emit_move_insn (reg3, gen_rtx (CONST_INT, VOIDmode, 0x80000000));\n+      emit_move_insn (reg3, GEN_INT (0x80000000));\n       emit_insn (gen_ashldi3 (reg3, reg3, GEN_INT (32)));\n \n       emit_insn (gen_fix_truncsfdi2 (operands[0], reg2));\n@@ -4697,8 +4697,8 @@ move\\\\t%0,%z4\\\\n\\\\\n \t\t(match_dup 3)))]\n   \"\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) & 0xffff0000);\n-  operands[3] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) & 0x0000ffff);\n+  operands[2] = GEN_INT (INTVAL (operands[1]) & 0xffff0000);\n+  operands[3] = GEN_INT (INTVAL (operands[1]) & 0x0000ffff);\n }\")\n \n ;; Unlike most other insns, the move insns can't be split with\n@@ -5882,7 +5882,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"*\n {\n   if (GET_CODE (operands[2]) == CONST_INT)\n-    operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n \n   return \\\"sll\\\\t%0,%1,%2\\\";\n }\"\n@@ -5901,7 +5901,7 @@ move\\\\t%0,%z4\\\\n\\\\\n     return \\\"sll\\\\t%0,%2\\\";\n \n   if (GET_CODE (operands[2]) == CONST_INT)\n-    operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n \n   return \\\"sll\\\\t%0,%1,%2\\\";\n }\"\n@@ -6016,7 +6016,7 @@ move\\\\t%0,%z4\\\\n\\\\\n    && (INTVAL (operands[2]) & 32) != 0\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\n+  operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n   operands[4] = const0_rtx;\n   return \\\"sll\\\\t%M0,%L1,%2\\;move\\\\t%L0,%z4\\\";\n }\"\n@@ -6039,7 +6039,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (subreg:SI (match_dup 0) 1) (ashift:SI (subreg:SI (match_dup 1) 0) (match_dup 2)))\n    (set (subreg:SI (match_dup 0) 0) (const_int 0))]\n \n-  \"operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\")\n+  \"operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\")\n \n \n (define_split\n@@ -6056,7 +6056,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (subreg:SI (match_dup 0) 0) (ashift:SI (subreg:SI (match_dup 1) 1) (match_dup 2)))\n    (set (subreg:SI (match_dup 0) 1) (const_int 0))]\n \n-  \"operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\")\n+  \"operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\")\n \n \n (define_insn \"ashldi3_internal3\"\n@@ -6071,9 +6071,9 @@ move\\\\t%0,%z4\\\\n\\\\\n {\n   int amount = INTVAL (operands[2]);\n \n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n   operands[4] = const0_rtx;\n-  operands[5] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[5] = GEN_INT (((-amount) & 31));\n \n   return \\\"sll\\\\t%M0,%M1,%2\\;srl\\\\t%3,%L1,%5\\;or\\\\t%M0,%M0,%3\\;sll\\\\t%L0,%L1,%2\\\";\n }\"\n@@ -6112,8 +6112,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\n {\n   int amount = INTVAL (operands[2]);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n+  operands[4] = GEN_INT (((-amount) & 31));\n }\")\n \n \n@@ -6147,8 +6147,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\n {\n   int amount = INTVAL (operands[2]);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n+  operands[4] = GEN_INT (((-amount) & 31));\n }\")\n \n \n@@ -6264,7 +6264,7 @@ move\\\\t%0,%z4\\\\n\\\\\n     return \\\"sra\\\\t%0,%2\\\";\n \n   if (GET_CODE (operands[2]) == CONST_INT)\n-    operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n \n   return \\\"sra\\\\t%0,%1,%2\\\";\n }\"\n@@ -6375,7 +6375,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"!TARGET_64BIT && !TARGET_DEBUG_G_MODE && (INTVAL (operands[2]) & 32) != 0\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\n+  operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n   return \\\"sra\\\\t%L0,%M1,%2\\;sra\\\\t%M0,%M1,31\\\";\n }\"\n   [(set_attr \"type\"\t\"darith\")\n@@ -6396,7 +6396,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (subreg:SI (match_dup 0) 0) (ashiftrt:SI (subreg:SI (match_dup 1) 1) (match_dup 2)))\n    (set (subreg:SI (match_dup 0) 1) (ashiftrt:SI (subreg:SI (match_dup 1) 1) (const_int 31)))]\n \n-  \"operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\")\n+  \"operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\")\n \n \n (define_split\n@@ -6412,7 +6412,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (subreg:SI (match_dup 0) 1) (ashiftrt:SI (subreg:SI (match_dup 1) 0) (match_dup 2)))\n    (set (subreg:SI (match_dup 0) 0) (ashiftrt:SI (subreg:SI (match_dup 1) 0) (const_int 31)))]\n \n-  \"operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\")\n+  \"operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\")\n \n \n (define_insn \"ashrdi3_internal3\"\n@@ -6427,8 +6427,8 @@ move\\\\t%0,%z4\\\\n\\\\\n {\n   int amount = INTVAL (operands[2]);\n \n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n+  operands[4] = GEN_INT (((-amount) & 31));\n \n   return \\\"srl\\\\t%L0,%L1,%2\\;sll\\\\t%3,%M1,%4\\;or\\\\t%L0,%L0,%3\\;sra\\\\t%M0,%M1,%2\\\";\n }\"\n@@ -6467,8 +6467,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\n {\n   int amount = INTVAL (operands[2]);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n+  operands[4] = GEN_INT (((-amount) & 31));\n }\")\n \n \n@@ -6502,8 +6502,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\n {\n   int amount = INTVAL (operands[2]);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n+  operands[4] = GEN_INT (((-amount) & 31));\n }\")\n \n \n@@ -6596,7 +6596,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"*\n {\n   if (GET_CODE (operands[2]) == CONST_INT)\n-    operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n \n   return \\\"srl\\\\t%0,%1,%2\\\";\n }\"\n@@ -6615,7 +6615,7 @@ move\\\\t%0,%z4\\\\n\\\\\n     return \\\"srl\\\\t%0,%2\\\";\n \n   if (GET_CODE (operands[2]) == CONST_INT)\n-    operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n \n   return \\\"srl\\\\t%0,%1,%2\\\";\n }\"\n@@ -6759,7 +6759,7 @@ move\\\\t%0,%z4\\\\n\\\\\n    && (INTVAL (operands[2]) & 32) != 0\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\n+  operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n   operands[4] = const0_rtx;\n   return \\\"srl\\\\t%L0,%M1,%2\\;move\\\\t%M0,%z4\\\";\n }\"\n@@ -6782,7 +6782,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (subreg:SI (match_dup 0) 0) (lshiftrt:SI (subreg:SI (match_dup 1) 1) (match_dup 2)))\n    (set (subreg:SI (match_dup 0) 1) (const_int 0))]\n \n-  \"operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\")\n+  \"operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\")\n \n \n (define_split\n@@ -6799,7 +6799,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (subreg:SI (match_dup 0) 1) (lshiftrt:SI (subreg:SI (match_dup 1) 0) (match_dup 2)))\n    (set (subreg:SI (match_dup 0) 0) (const_int 0))]\n \n-  \"operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2]) & 0x1f);\")\n+  \"operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\")\n \n \n (define_insn \"lshrdi3_internal3\"\n@@ -6814,8 +6814,8 @@ move\\\\t%0,%z4\\\\n\\\\\n {\n   int amount = INTVAL (operands[2]);\n \n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n+  operands[4] = GEN_INT (((-amount) & 31));\n \n   return \\\"srl\\\\t%L0,%L1,%2\\;sll\\\\t%3,%M1,%4\\;or\\\\t%L0,%L0,%3\\;srl\\\\t%M0,%M1,%2\\\";\n }\"\n@@ -6854,8 +6854,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\n {\n   int amount = INTVAL (operands[2]);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n+  operands[4] = GEN_INT (((-amount) & 31));\n }\")\n \n \n@@ -6889,8 +6889,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\n {\n   int amount = INTVAL (operands[2]);\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, (amount & 31));\n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, ((-amount) & 31));\n+  operands[2] = GEN_INT ((amount & 31));\n+  operands[4] = GEN_INT (((-amount) & 31));\n }\")\n \n \n@@ -7924,7 +7924,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"!TARGET_MIPS16 && INTVAL (operands[2]) < 32767\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2])+1);\n+  operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \\\"slt\\\\t%0,%1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")\n@@ -7938,7 +7938,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_MIPS16 && INTVAL (operands[2]) < 32767\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2])+1);\n+  operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \\\"slt\\\\t%1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")\n@@ -7954,7 +7954,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_64BIT && !TARGET_MIPS16 && INTVAL (operands[2]) < 32767\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2])+1);\n+  operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \\\"slt\\\\t%0,%1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")\n@@ -7968,7 +7968,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_64BIT && TARGET_MIPS16 && INTVAL (operands[2]) < 32767\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2])+1);\n+  operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \\\"slt\\\\t%1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")\n@@ -8264,7 +8264,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"!TARGET_MIPS16 && INTVAL (operands[2]) < 32767\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2])+1);\n+  operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \\\"sltu\\\\t%0,%1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")\n@@ -8278,7 +8278,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_MIPS16 && INTVAL (operands[2]) < 32767\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2])+1);\n+  operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \\\"sltu\\\\t%1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")\n@@ -8294,7 +8294,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_64BIT && !TARGET_MIPS16 && INTVAL (operands[2]) < 32767\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2])+1);\n+  operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \\\"sltu\\\\t%0,%1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")\n@@ -8308,7 +8308,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"TARGET_64BIT && TARGET_MIPS16 && INTVAL (operands[2]) < 32767\"\n   \"*\n {\n-  operands[2] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[2])+1);\n+  operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \\\"sltu\\\\t%1,%2\\\";\n }\"\n   [(set_attr \"type\"\t\"arith\")"}]}