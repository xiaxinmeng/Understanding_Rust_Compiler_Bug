{"sha": "d7ab349c44f30bed90b03b45865f6c7c5de1dfd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdhYjM0OWM0NGYzMGJlZDkwYjAzYjQ1ODY1ZjZjN2M1ZGUxZGZkOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-17T14:45:18Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-17T14:47:16Z"}, "message": "preprocessor: Fix profiled bootstrap warning [pr97858]\n\nAs Jakub points out, we only ever pass a single variadic parm (if at\nall), so just an optional arg is fine.\n\n\tPR preprocessor/97858\n\tlibcpp/\n\t* mkdeps.c (munge): Drop varadic args, we only ever use one.", "tree": {"sha": "ae35ce87d2fc38c62899a7fbb71c26ac111fe06f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae35ce87d2fc38c62899a7fbb71c26ac111fe06f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7ab349c44f30bed90b03b45865f6c7c5de1dfd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ab349c44f30bed90b03b45865f6c7c5de1dfd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ab349c44f30bed90b03b45865f6c7c5de1dfd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ab349c44f30bed90b03b45865f6c7c5de1dfd8/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afa6adbd6c83eeef6d75655140f7c0c9a02a479e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa6adbd6c83eeef6d75655140f7c0c9a02a479e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afa6adbd6c83eeef6d75655140f7c0c9a02a479e"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "a989ed355facb974d8d7757a6cbdb608ebdaa1fb", "filename": "libcpp/mkdeps.c", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ab349c44f30bed90b03b45865f6c7c5de1dfd8/libcpp%2Fmkdeps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ab349c44f30bed90b03b45865f6c7c5de1dfd8/libcpp%2Fmkdeps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmkdeps.c?ref=d7ab349c44f30bed90b03b45865f6c7c5de1dfd8", "patch": "@@ -105,23 +105,20 @@ class mkdeps\n   unsigned short quote_lwm;\n };\n \n-/* Apply Make quoting to STR, TRAIL etc.  Note that it's not possible\n-   to quote all such characters - e.g. \\n, %, *, ?, [, \\ (in some\n+/* Apply Make quoting to STR, TRAIL.  Note that it's not possible to\n+   quote all such characters - e.g. \\n, %, *, ?, [, \\ (in some\n    contexts), and ~ are not properly handled.  It isn't possible to\n    get this right in any current version of Make.  (??? Still true?\n    Old comment referred to 3.76.1.)  */\n \n static const char *\n-munge (const char *str, const char *trail = NULL, ...)\n+munge (const char *str, const char *trail = nullptr)\n {\n   static unsigned alloc;\n   static char *buf;\n   unsigned dst = 0;\n-  va_list args;\n-  if (trail)\n-    va_start (args, trail);\n \n-  for (bool first = true; str; first = false)\n+  for (; str; str = trail, trail = nullptr)\n     {\n       unsigned slashes = 0;\n       char c;\n@@ -169,14 +166,7 @@ munge (const char *str, const char *trail = NULL, ...)\n \n \t  buf[dst++] = c;\n \t}\n-\n-      if (first)\n-\tstr = trail;\n-      else\n-\tstr = va_arg (args, const char *);\n     }\n-  if (trail)\n-    va_end (args);\n \n   buf[dst] = 0;\n   return buf;\n@@ -332,7 +322,7 @@ make_write_name (const char *name, FILE *fp, unsigned col, unsigned colmax,\n \t\t bool quote = true, const char *trail = NULL)\n {\n   if (quote)\n-    name = munge (name, trail, NULL);\n+    name = munge (name, trail);\n   unsigned size = strlen (name);\n \n   if (col)"}]}