{"sha": "6a4825bda18b76ef8b0f979ef439e0007a440b8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE0ODI1YmRhMThiNzZlZjhiMGY5NzllZjQzOWUwMDA3YTQ0MGI4Zg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-07-16T17:51:56Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-07-16T17:51:56Z"}, "message": "tree.c (build_common_builtin_nodes): Use build_function_type_list instead of build_function_type.\n\n\t* tree.c (build_common_builtin_nodes): Use build_function_type_list\n\tinstead of build_function_type.\n\t* tree-ssa-loop-prefetch.c (tree_ssa_prefetch_arrays): Likewise.\n\t* cgraphunit.c (cgraph_build_static_cdtor): Likewise.\n\nFrom-SVN: r162264", "tree": {"sha": "b6c3c56877a471af09eccb6a32c2a8ca5b700d9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6c3c56877a471af09eccb6a32c2a8ca5b700d9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a4825bda18b76ef8b0f979ef439e0007a440b8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4825bda18b76ef8b0f979ef439e0007a440b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4825bda18b76ef8b0f979ef439e0007a440b8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4825bda18b76ef8b0f979ef439e0007a440b8f/comments", "author": null, "committer": null, "parents": [{"sha": "c5af628dbe90df6244b33bd7c6a89fbd124068b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5af628dbe90df6244b33bd7c6a89fbd124068b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5af628dbe90df6244b33bd7c6a89fbd124068b8"}], "stats": {"total": 101, "additions": 46, "deletions": 55}, "files": [{"sha": "d824c3d379e531d53aa1d0100d7be7959d402b38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4825bda18b76ef8b0f979ef439e0007a440b8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4825bda18b76ef8b0f979ef439e0007a440b8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a4825bda18b76ef8b0f979ef439e0007a440b8f", "patch": "@@ -1,3 +1,10 @@\n+2010-07-16  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree.c (build_common_builtin_nodes): Use build_function_type_list\n+\tinstead of build_function_type.\n+\t* tree-ssa-loop-prefetch.c (tree_ssa_prefetch_arrays): Likewise.\n+\t* cgraphunit.c (cgraph_build_static_cdtor): Likewise.\n+\n 2010-07-16  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_sISEL): Let rs6000_emit_int_cmove"}, {"sha": "7dce8e96799a547947e3330d51bb94fc1896e47f", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4825bda18b76ef8b0f979ef439e0007a440b8f/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4825bda18b76ef8b0f979ef439e0007a440b8f/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=6a4825bda18b76ef8b0f979ef439e0007a440b8f", "patch": "@@ -2017,7 +2017,7 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n   name = get_file_function_name (which_buf);\n \n   decl = build_decl (input_location, FUNCTION_DECL, name,\n-\t\t     build_function_type (void_type_node, void_list_node));\n+\t\t     build_function_type_list (void_type_node, NULL_TREE));\n   current_function_decl = decl;\n \n   resdecl = build_decl (input_location,"}, {"sha": "1932d05c366e074f9879e9671b5017e543948192", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4825bda18b76ef8b0f979ef439e0007a440b8f/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4825bda18b76ef8b0f979ef439e0007a440b8f/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=6a4825bda18b76ef8b0f979ef439e0007a440b8f", "patch": "@@ -1903,10 +1903,8 @@ tree_ssa_prefetch_arrays (void)\n \n   if (!built_in_decls[BUILT_IN_PREFETCH])\n     {\n-      tree type = build_function_type (void_type_node,\n-\t\t\t\t       tree_cons (NULL_TREE,\n-\t\t\t\t\t\t  const_ptr_type_node,\n-\t\t\t\t\t\t  NULL_TREE));\n+      tree type = build_function_type_list (void_type_node,\n+\t\t\t\t\t    const_ptr_type_node, NULL_TREE);\n       tree decl = add_builtin_function (\"__builtin_prefetch\", type,\n \t\t\t\t\tBUILT_IN_PREFETCH, BUILT_IN_NORMAL,\n \t\t\t\t\tNULL, NULL_TREE);"}, {"sha": "aab4cfe86e8242e7ad23a2fc2fa3888888213ff1", "filename": "gcc/tree.c", "status": "modified", "additions": 36, "deletions": 50, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4825bda18b76ef8b0f979ef439e0007a440b8f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4825bda18b76ef8b0f979ef439e0007a440b8f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6a4825bda18b76ef8b0f979ef439e0007a440b8f", "patch": "@@ -9149,15 +9149,14 @@ local_define_builtin (const char *name, tree type, enum built_in_function code,\n void\n build_common_builtin_nodes (void)\n {\n-  tree tmp, tmp2, ftype;\n+  tree tmp, ftype;\n \n   if (built_in_decls[BUILT_IN_MEMCPY] == NULL\n       || built_in_decls[BUILT_IN_MEMMOVE] == NULL)\n     {\n-      tmp = tree_cons (NULL_TREE, size_type_node, void_list_node);\n-      tmp = tree_cons (NULL_TREE, const_ptr_type_node, tmp);\n-      tmp = tree_cons (NULL_TREE, ptr_type_node, tmp);\n-      ftype = build_function_type (ptr_type_node, tmp);\n+      ftype = build_function_type_list (ptr_type_node,\n+\t\t\t\t\tptr_type_node, const_ptr_type_node,\n+\t\t\t\t\tsize_type_node, NULL_TREE);\n \n       if (built_in_decls[BUILT_IN_MEMCPY] == NULL)\n \tlocal_define_builtin (\"__builtin_memcpy\", ftype, BUILT_IN_MEMCPY,\n@@ -9169,28 +9168,26 @@ build_common_builtin_nodes (void)\n \n   if (built_in_decls[BUILT_IN_MEMCMP] == NULL)\n     {\n-      tmp = tree_cons (NULL_TREE, size_type_node, void_list_node);\n-      tmp = tree_cons (NULL_TREE, const_ptr_type_node, tmp);\n-      tmp = tree_cons (NULL_TREE, const_ptr_type_node, tmp);\n-      ftype = build_function_type (integer_type_node, tmp);\n+      ftype = build_function_type_list (integer_type_node, const_ptr_type_node,\n+\t\t\t\t\tconst_ptr_type_node, size_type_node,\n+\t\t\t\t\tNULL_TREE);\n       local_define_builtin (\"__builtin_memcmp\", ftype, BUILT_IN_MEMCMP,\n \t\t\t    \"memcmp\", ECF_PURE | ECF_NOTHROW);\n     }\n \n   if (built_in_decls[BUILT_IN_MEMSET] == NULL)\n     {\n-      tmp = tree_cons (NULL_TREE, size_type_node, void_list_node);\n-      tmp = tree_cons (NULL_TREE, integer_type_node, tmp);\n-      tmp = tree_cons (NULL_TREE, ptr_type_node, tmp);\n-      ftype = build_function_type (ptr_type_node, tmp);\n+      ftype = build_function_type_list (ptr_type_node,\n+\t\t\t\t\tptr_type_node, integer_type_node,\n+\t\t\t\t\tsize_type_node, NULL_TREE);\n       local_define_builtin (\"__builtin_memset\", ftype, BUILT_IN_MEMSET,\n \t\t\t    \"memset\", ECF_NOTHROW);\n     }\n \n   if (built_in_decls[BUILT_IN_ALLOCA] == NULL)\n     {\n-      tmp = tree_cons (NULL_TREE, size_type_node, void_list_node);\n-      ftype = build_function_type (ptr_type_node, tmp);\n+      ftype = build_function_type_list (ptr_type_node,\n+\t\t\t\t\tsize_type_node, NULL_TREE);\n       local_define_builtin (\"__builtin_alloca\", ftype, BUILT_IN_ALLOCA,\n \t\t\t    \"alloca\", ECF_MALLOC | ECF_NOTHROW);\n     }\n@@ -9199,60 +9196,53 @@ build_common_builtin_nodes (void)\n   if (flag_stack_check)\n     TREE_NOTHROW (built_in_decls[BUILT_IN_ALLOCA]) = 0;\n \n-  tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n-  tmp = tree_cons (NULL_TREE, ptr_type_node, tmp);\n-  tmp = tree_cons (NULL_TREE, ptr_type_node, tmp);\n-  ftype = build_function_type (void_type_node, tmp);\n+  ftype = build_function_type_list (void_type_node,\n+\t\t\t\t    ptr_type_node, ptr_type_node,\n+\t\t\t\t    ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_init_trampoline\", ftype,\n \t\t\tBUILT_IN_INIT_TRAMPOLINE,\n \t\t\t\"__builtin_init_trampoline\", ECF_NOTHROW);\n \n-  tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n-  ftype = build_function_type (ptr_type_node, tmp);\n+  ftype = build_function_type_list (ptr_type_node, ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_adjust_trampoline\", ftype,\n \t\t\tBUILT_IN_ADJUST_TRAMPOLINE,\n \t\t\t\"__builtin_adjust_trampoline\",\n \t\t\tECF_CONST | ECF_NOTHROW);\n \n-  tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n-  tmp = tree_cons (NULL_TREE, ptr_type_node, tmp);\n-  ftype = build_function_type (void_type_node, tmp);\n+  ftype = build_function_type_list (void_type_node,\n+\t\t\t\t    ptr_type_node, ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_nonlocal_goto\", ftype,\n \t\t\tBUILT_IN_NONLOCAL_GOTO,\n \t\t\t\"__builtin_nonlocal_goto\",\n \t\t\tECF_NORETURN | ECF_NOTHROW);\n \n-  tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n-  tmp = tree_cons (NULL_TREE, ptr_type_node, tmp);\n-  ftype = build_function_type (void_type_node, tmp);\n+  ftype = build_function_type_list (void_type_node,\n+\t\t\t\t    ptr_type_node, ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_setjmp_setup\", ftype,\n \t\t\tBUILT_IN_SETJMP_SETUP,\n \t\t\t\"__builtin_setjmp_setup\", ECF_NOTHROW);\n \n-  tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n-  ftype = build_function_type (ptr_type_node, tmp);\n+  ftype = build_function_type_list (ptr_type_node, ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_setjmp_dispatcher\", ftype,\n \t\t\tBUILT_IN_SETJMP_DISPATCHER,\n \t\t\t\"__builtin_setjmp_dispatcher\",\n \t\t\tECF_PURE | ECF_NOTHROW);\n \n-  tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n-  ftype = build_function_type (void_type_node, tmp);\n+  ftype = build_function_type_list (void_type_node, ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_setjmp_receiver\", ftype,\n \t\t\tBUILT_IN_SETJMP_RECEIVER,\n \t\t\t\"__builtin_setjmp_receiver\", ECF_NOTHROW);\n \n-  ftype = build_function_type (ptr_type_node, void_list_node);\n+  ftype = build_function_type_list (ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_stack_save\", ftype, BUILT_IN_STACK_SAVE,\n \t\t\t\"__builtin_stack_save\", ECF_NOTHROW);\n \n-  tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n-  ftype = build_function_type (void_type_node, tmp);\n+  ftype = build_function_type_list (void_type_node, ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_stack_restore\", ftype,\n \t\t\tBUILT_IN_STACK_RESTORE,\n \t\t\t\"__builtin_stack_restore\", ECF_NOTHROW);\n \n-  ftype = build_function_type (void_type_node, void_list_node);\n+  ftype = build_function_type_list (void_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_profile_func_enter\", ftype,\n \t\t\tBUILT_IN_PROFILE_FUNC_ENTER, \"profile_func_enter\", 0);\n   local_define_builtin (\"__builtin_profile_func_exit\", ftype,\n@@ -9262,14 +9252,13 @@ build_common_builtin_nodes (void)\n     alternate __cxa_end_cleanup node used to resume from C++ and Java.  */\n   if (targetm.arm_eabi_unwinder)\n     {\n-      ftype = build_function_type (void_type_node, void_list_node);\n+      ftype = build_function_type_list (void_type_node, NULL_TREE);\n       local_define_builtin (\"__builtin_cxa_end_cleanup\", ftype,\n \t\t\t    BUILT_IN_CXA_END_CLEANUP,\n \t\t\t    \"__cxa_end_cleanup\", ECF_NORETURN);\n     }\n \n-  tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n-  ftype = build_function_type (void_type_node, tmp);\n+  ftype = build_function_type_list (void_type_node, ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_unwind_resume\", ftype,\n \t\t\tBUILT_IN_UNWIND_RESUME,\n \t\t\t(USING_SJLJ_EXCEPTIONS\n@@ -9282,19 +9271,19 @@ build_common_builtin_nodes (void)\n      landing pad.  These functions are PURE instead of CONST to prevent\n      them from being hoisted past the exception edge that will initialize\n      its value in the landing pad.  */\n-  tmp = tree_cons (NULL_TREE, integer_type_node, void_list_node);\n-  ftype = build_function_type (ptr_type_node, tmp);\n+  ftype = build_function_type_list (ptr_type_node,\n+\t\t\t\t    integer_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_eh_pointer\", ftype, BUILT_IN_EH_POINTER,\n \t\t\t\"__builtin_eh_pointer\", ECF_PURE | ECF_NOTHROW);\n \n-  tmp2 = lang_hooks.types.type_for_mode (targetm.eh_return_filter_mode (), 0);\n-  ftype = build_function_type (tmp2, tmp);\n+  tmp = lang_hooks.types.type_for_mode (targetm.eh_return_filter_mode (), 0);\n+  ftype = build_function_type_list (tmp, integer_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_eh_filter\", ftype, BUILT_IN_EH_FILTER,\n \t\t\t\"__builtin_eh_filter\", ECF_PURE | ECF_NOTHROW);\n \n-  tmp = tree_cons (NULL_TREE, integer_type_node, void_list_node);\n-  tmp = tree_cons (NULL_TREE, integer_type_node, tmp);\n-  ftype = build_function_type (void_type_node, tmp);\n+  ftype = build_function_type_list (void_type_node,\n+\t\t\t\t    integer_type_node, integer_type_node,\n+\t\t\t\t    NULL_TREE);\n   local_define_builtin (\"__builtin_eh_copy_values\", ftype,\n \t\t\tBUILT_IN_EH_COPY_VALUES,\n \t\t\t\"__builtin_eh_copy_values\", ECF_NOTHROW);\n@@ -9318,11 +9307,8 @@ build_common_builtin_nodes (void)\n \t  continue;\n \tinner_type = TREE_TYPE (type);\n \n-\ttmp = tree_cons (NULL_TREE, inner_type, void_list_node);\n-\ttmp = tree_cons (NULL_TREE, inner_type, tmp);\n-\ttmp = tree_cons (NULL_TREE, inner_type, tmp);\n-\ttmp = tree_cons (NULL_TREE, inner_type, tmp);\n-\tftype = build_function_type (type, tmp);\n+\tftype = build_function_type_list (type, inner_type, inner_type,\n+\t\t\t\t\t  inner_type, inner_type, NULL_TREE);\n \n         mcode = ((enum built_in_function)\n \t\t (BUILT_IN_COMPLEX_MUL_MIN + mode - MIN_MODE_COMPLEX_FLOAT));"}]}