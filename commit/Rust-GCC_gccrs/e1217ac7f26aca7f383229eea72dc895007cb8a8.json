{"sha": "e1217ac7f26aca7f383229eea72dc895007cb8a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEyMTdhYzdmMjZhY2E3ZjM4MzIyOWVlYTcyZGM4OTUwMDdjYjhhOA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2014-10-14T20:01:39Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2014-10-14T20:01:39Z"}, "message": "Missed bit of previous commit.\n\nFrom-SVN: r216221", "tree": {"sha": "c94d725f3481d8765bbdcc11e86fc86d8605905e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c94d725f3481d8765bbdcc11e86fc86d8605905e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1217ac7f26aca7f383229eea72dc895007cb8a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1217ac7f26aca7f383229eea72dc895007cb8a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1217ac7f26aca7f383229eea72dc895007cb8a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1217ac7f26aca7f383229eea72dc895007cb8a8/comments", "author": null, "committer": null, "parents": [{"sha": "78a7c3172fe2e6cd959abb8bfc69f6b0dc747d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a7c3172fe2e6cd959abb8bfc69f6b0dc747d49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a7c3172fe2e6cd959abb8bfc69f6b0dc747d49"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "c0fcde7604977f9040c6f6446e3caf8f00545e66", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1217ac7f26aca7f383229eea72dc895007cb8a8/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1217ac7f26aca7f383229eea72dc895007cb8a8/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=e1217ac7f26aca7f383229eea72dc895007cb8a8", "patch": "@@ -891,22 +891,23 @@ c_cpp_builtins (cpp_reader *pfile)\n   builtin_define_type_max (\"__PTRDIFF_MAX__\", ptrdiff_type_node);\n   builtin_define_type_max (\"__SIZE_MAX__\", size_type_node);\n \n-  for (i = 0; i < NUM_INT_N_ENTS; i ++)\n-    if (int_n_enabled_p[i])\n-      {\n-\tchar buf[35+20+20];\n+  if (c_dialect_cxx ())\n+    for (i = 0; i < NUM_INT_N_ENTS; i ++)\n+      if (int_n_enabled_p[i])\n+\t{\n+\t  char buf[35+20+20];\n \n-\t/* These are used to configure the C++ library.  */\n+\t  /* These are used to configure the C++ library.  */\n \n-\tif (!flag_iso || int_n_data[i].bitsize == POINTER_SIZE)\n-\t  {\n-\t    sprintf (buf, \"__GLIBCXX_TYPE_INT_N_%d=__int%d\", i, int_n_data[i].bitsize);\n-\t    cpp_define (parse_in, buf);\n+\t  if (!flag_iso || int_n_data[i].bitsize == POINTER_SIZE)\n+\t    {\n+\t      sprintf (buf, \"__GLIBCXX_TYPE_INT_N_%d=__int%d\", i, int_n_data[i].bitsize);\n+\t      cpp_define (parse_in, buf);\n \n-\t    sprintf (buf, \"__GLIBCXX_BITSIZE_INT_N_%d=%d\", i, int_n_data[i].bitsize);\n-\t    cpp_define (parse_in, buf);\n-\t  }\n-      }\n+\t      sprintf (buf, \"__GLIBCXX_BITSIZE_INT_N_%d=%d\", i, int_n_data[i].bitsize);\n+\t      cpp_define (parse_in, buf);\n+\t    }\n+\t}\n \n   /* stdint.h and the testsuite need to know these.  */\n   builtin_define_stdint_macros ();"}]}