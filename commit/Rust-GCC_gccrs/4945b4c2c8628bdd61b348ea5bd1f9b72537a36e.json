{"sha": "4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk0NWI0YzJjODYyOGJkZDYxYjM0OGVhNWJkMWY5YjcyNTM3YTM2ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-26T07:01:41Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-26T07:02:43Z"}, "message": "Allow ChangeLog entries for ignored location.\n\nWe should be able to generate ChangeLog entries for\ncommits like b3d566f570f4416299240b51654b70c74f6cba6a.\nI'm going to install the patch.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Parse changelog entries for\n\tignored locations.\n\t* gcc-changelog/test_email.py: Add new test for it.\n\t* gcc-changelog/test_patches.txt: Likewise.", "tree": {"sha": "495bf6fee75c983302016e664ee3940d04546242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/495bf6fee75c983302016e664ee3940d04546242"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7MvyUACgkQTcGC3A+n\nN4VFXAf/ZeXwlSH1Gq65tvs+fSEbgGqSSLlh7e45G4qrqwX1/zvGrezUBC7IFM6k\n5WYxPnRNSQrQhKcBexH6+EIyRjBsBaX3BeVReI2qI2TXeFO2XrLebyMLvWxvyYss\nC0NG7jcTpLQw0g685Fu1TTkjPBSQXxD75WkPWuqzSUSyb4VICUk3UQPcXeKel7NJ\nIY7+5WZwSVgBeyKoQDSKce65QN1oPkvm5IcdmWYj0QRdKdHxxxGz3sI+aOUJdzr8\n0bx8Ll7EBjtBdsc3ExKEl4ejUhAfC/2mxA4Vq0Q8D2/FYvMPcpmSladgNGTieLNW\nBY2j6YJhh97Msmkv50WEuWz8dppnRg==\n=+4Uy\n-----END PGP SIGNATURE-----", "payload": "tree 495bf6fee75c983302016e664ee3940d04546242\nparent b3d566f570f4416299240b51654b70c74f6cba6a\nauthor Martin Liska <mliska@suse.cz> 1590476501 +0200\ncommitter Martin Liska <mliska@suse.cz> 1590476563 +0200\n\nAllow ChangeLog entries for ignored location.\n\nWe should be able to generate ChangeLog entries for\ncommits like b3d566f570f4416299240b51654b70c74f6cba6a.\nI'm going to install the patch.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Parse changelog entries for\n\tignored locations.\n\t* gcc-changelog/test_email.py: Add new test for it.\n\t* gcc-changelog/test_patches.txt: Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3d566f570f4416299240b51654b70c74f6cba6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3d566f570f4416299240b51654b70c74f6cba6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3d566f570f4416299240b51654b70c74f6cba6a"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "edd8834b898c8cab26928d739735adc8ce08c7b4", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "patch": "@@ -233,8 +233,9 @@ def __init__(self, hexsha, date, author, body, modified_files,\n \n         project_files = [f for f in self.modified_files\n                          if self.is_changelog_filename(f[0])\n-                         or f[0] in misc_files\n-                         or self.in_ignored_location(f[0])]\n+                         or f[0] in misc_files]\n+        ignored_files = [f for f in self.modified_files\n+                         if self.in_ignored_location(f[0])]\n         if len(project_files) == len(self.modified_files):\n             # All modified files are only MISC files\n             return\n@@ -244,7 +245,9 @@ def __init__(self, hexsha, date, author, body, modified_files,\n                                      'separately from normal commits'))\n             return\n \n-        self.parse_lines()\n+        all_are_ignored = (len(project_files) + len(ignored_files)\n+                           == len(self.modified_files))\n+        self.parse_lines(all_are_ignored)\n         if self.changes:\n             self.parse_changelog()\n             self.deduce_changelog_locations()\n@@ -292,7 +295,7 @@ def parse_git_name_status(cls, string):\n                 modified_files.append((parts[2], 'A'))\n         return modified_files\n \n-    def parse_lines(self):\n+    def parse_lines(self, all_are_ignored):\n         body = self.lines\n \n         for i, b in enumerate(body):\n@@ -303,8 +306,9 @@ def parse_lines(self):\n                     or dr_regex.match(b) or author_line_regex.match(b)):\n                 self.changes = body[i:]\n                 return\n-        self.errors.append(Error('cannot find a ChangeLog location in '\n-                                 'message'))\n+        if not all_are_ignored:\n+            self.errors.append(Error('cannot find a ChangeLog location in '\n+                                     'message'))\n \n     def parse_changelog(self):\n         last_entry = None"}, {"sha": "bf028a3d40a4f82f45ea6a0060393a808aa3709a", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "patch": "@@ -280,3 +280,8 @@ def test_dr_entry(self):\n     def test_changes_only_in_ignored_location(self):\n         email = self.from_patch_glob('0001-go-in-ignored-location.patch')\n         assert not email.errors\n+\n+    def test_changelog_for_ignored_location(self):\n+        email = self.from_patch_glob('0001-Update-merge.sh-to-reflect.patch')\n+        assert (email.changelog_entries[0].lines[0]\n+                == '\\t* LOCAL_PATCHES: Use git hash instead of SVN id.')"}, {"sha": "84d4b81d818571fd1c6d5370751226d4e141fbed", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "patch": "@@ -2611,3 +2611,43 @@ index 00000000000..2609cc49ae7\n \n -- \n 2.27.0.rc0.183.gde8f92d652-goog\n+=== 0001-Update-merge.sh-to-reflect.patch  ===\n+From b3d566f570f4416299240b51654b70c74f6cba6a Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Mon, 25 May 2020 20:55:29 +0200\n+Subject: [PATCH] Update merge.sh to reflect usage of git.\n+\n+After switching to GIT, we should use it in libsanitizer\n+merge script. I'll do merge from master as soon as\n+PR95311 gets fixed.\n+\n+I'm going to install the patch.\n+\n+libsanitizer/ChangeLog:\n+\n+\t* LOCAL_PATCHES: Use git hash instead of SVN id.\n+\t* merge.sh: Use git instead of VCS.  Update paths\n+\trelative to upstream git repository.\n+---\n+ libsanitizer/LOCAL_PATCHES |  2 +-\n+ libsanitizer/merge.sh      | 10 ++++------\n+ 2 files changed, 5 insertions(+), 7 deletions(-)\n+\n+diff --git a/libsanitizer/LOCAL_PATCHES b/libsanitizer/LOCAL_PATCHES\n+index 292b7a6e489..7732de3d436 100644\n+--- a/libsanitizer/LOCAL_PATCHES\n++++ b/libsanitizer/LOCAL_PATCHES\n+@@ -1 +1,2 @@\n+\n++\n+diff --git a/libsanitizer/merge.sh b/libsanitizer/merge.sh\n+index dfa7bf3d196..3f4f1629a22 100755\n+--- a/libsanitizer/merge.sh\n++++ b/libsanitizer/merge.sh\n+@@ -1 +1,2 @@\n+\n++\n+ \n+-- \n+2.26.2\n+"}]}