{"sha": "2ad1dda01864af57bf0ab806ded518305082ebec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFkMWRkYTAxODY0YWY1N2JmMGFiODA2ZGVkNTE4MzA1MDgyZWJlYw==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-01-03T22:41:22Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-01-03T22:41:22Z"}, "message": "re PR rtl-optimization/41862 (-fgcse-sm causes bootstrap-debug comparison failures)\n\n\tPR rtl-optimization/41862\n\t* store-motion.c (store_killed_in_insn, compute_store_table,\n\tremove_reachable_equiv_notes, replace_store_insn,\n\tbuild_store_vectors): Ignore all DEBUG_INSNs.\n\nFrom-SVN: r155596", "tree": {"sha": "8bc6bd7654e415bab5f759cd6c8e90f790220ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bc6bd7654e415bab5f759cd6c8e90f790220ccc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ad1dda01864af57bf0ab806ded518305082ebec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad1dda01864af57bf0ab806ded518305082ebec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad1dda01864af57bf0ab806ded518305082ebec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad1dda01864af57bf0ab806ded518305082ebec/comments", "author": null, "committer": null, "parents": [{"sha": "5e87f30e991fdbb47def4441a7e1359a79339f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e87f30e991fdbb47def4441a7e1359a79339f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e87f30e991fdbb47def4441a7e1359a79339f2c"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "203039f25a2ac5e3345c8fdffd22b3dddd9928e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1dda01864af57bf0ab806ded518305082ebec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1dda01864af57bf0ab806ded518305082ebec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ad1dda01864af57bf0ab806ded518305082ebec", "patch": "@@ -1,3 +1,10 @@\n+2009-01-03  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR rtl-optimization/41862\n+\t* store-motion.c (store_killed_in_insn, compute_store_table,\n+\tremove_reachable_equiv_notes, replace_store_insn,\n+\tbuild_store_vectors): Ignore all DEBUG_INSNs.\n+\n 2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR lto/41564"}, {"sha": "8cb75d7ac2734f351dc25aadf4ad8da9df7f3fb6", "filename": "gcc/store-motion.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad1dda01864af57bf0ab806ded518305082ebec/gcc%2Fstore-motion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad1dda01864af57bf0ab806ded518305082ebec/gcc%2Fstore-motion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstore-motion.c?ref=2ad1dda01864af57bf0ab806ded518305082ebec", "patch": "@@ -398,7 +398,7 @@ store_killed_in_insn (const_rtx x, const_rtx x_regs, const_rtx insn, int after)\n {\n   const_rtx reg, base, note, pat;\n \n-  if (!INSN_P (insn))\n+  if (! NONDEBUG_INSN_P (insn))\n     return false;\n \n   if (CALL_P (insn))\n@@ -667,7 +667,7 @@ compute_store_table (void)\n       FOR_BB_INSNS (bb, insn)\n \t{\n \n-\t  if (! INSN_P (insn))\n+\t  if (! NONDEBUG_INSN_P (insn))\n \t    continue;\n \n \t  for (def_rec = DF_INSN_DEFS (insn); *def_rec; def_rec++)\n@@ -678,7 +678,7 @@ compute_store_table (void)\n       memset (already_set, 0, sizeof (int) * max_gcse_regno);\n       FOR_BB_INSNS (bb, insn)\n \t{\n-\t  if (! INSN_P (insn))\n+\t  if (! NONDEBUG_INSN_P (insn))\n \t    continue;\n \n \t  for (def_rec = DF_INSN_DEFS (insn); *def_rec; def_rec++)\n@@ -897,7 +897,7 @@ remove_reachable_equiv_notes (basic_block bb, struct st_expr *smexpr)\n \tlast = NEXT_INSN (BB_END (bb));\n \n       for (insn = BB_HEAD (bb); insn != last; insn = NEXT_INSN (insn))\n-\tif (INSN_P (insn))\n+\tif (NONDEBUG_INSN_P (insn))\n \t  {\n \t    note = find_reg_equal_equiv_note (insn);\n \t    if (!note || !exp_equiv_p (XEXP (note, 0), mem, 0, true))\n@@ -963,7 +963,7 @@ replace_store_insn (rtx reg, rtx del, basic_block bb, struct st_expr *smexpr)\n      they are no longer accurate provided that they are reached by this\n      definition, so drop them.  */\n   for (; insn != NEXT_INSN (BB_END (bb)); insn = NEXT_INSN (insn))\n-    if (INSN_P (insn))\n+    if (NONDEBUG_INSN_P (insn))\n       {\n \tset = single_set (insn);\n \tif (!set)\n@@ -1070,7 +1070,7 @@ build_store_vectors (void)\n       memset (regs_set_in_block, 0, sizeof (int) * max_gcse_regno);\n \n       FOR_BB_INSNS (bb, insn)\n-\tif (INSN_P (insn))\n+\tif (NONDEBUG_INSN_P (insn))\n \t  {\n \t    df_ref *def_rec;\n \t    for (def_rec = DF_INSN_DEFS (insn); *def_rec; def_rec++)"}]}