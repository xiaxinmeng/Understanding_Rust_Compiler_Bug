{"sha": "1fd5b9687e85f766de4bda06834a5a0852c3ea01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZkNWI5Njg3ZTg1Zjc2NmRlNGJkYTA2ODM0YTVhMDg1MmMzZWEwMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-09T18:07:43Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-09T18:07:43Z"}, "message": "os: Fix Solaris stat functions.\n\nFrom Rainer Orth.\n\nFrom-SVN: r184065", "tree": {"sha": "f986043b26d8b01bdb5893a679455533ed1ddc1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f986043b26d8b01bdb5893a679455533ed1ddc1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fd5b9687e85f766de4bda06834a5a0852c3ea01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd5b9687e85f766de4bda06834a5a0852c3ea01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fd5b9687e85f766de4bda06834a5a0852c3ea01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd5b9687e85f766de4bda06834a5a0852c3ea01/comments", "author": null, "committer": null, "parents": [{"sha": "16e0be9b8e67554b4c43b7bbd57978fb6e9f4611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e0be9b8e67554b4c43b7bbd57978fb6e9f4611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e0be9b8e67554b4c43b7bbd57978fb6e9f4611"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "93b698c3c4c5288a46c13174bb91fb7ff458a584", "filename": "libgo/go/os/stat_solaris.go", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fd5b9687e85f766de4bda06834a5a0852c3ea01/libgo%2Fgo%2Fos%2Fstat_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fd5b9687e85f766de4bda06834a5a0852c3ea01/libgo%2Fgo%2Fos%2Fstat_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fstat_solaris.go?ref=1fd5b9687e85f766de4bda06834a5a0852c3ea01", "patch": "@@ -9,18 +9,18 @@ import (\n \t\"time\"\n )\n \n-func sameFile(fs1, fs2 *FileStat) bool {\n-\tsys1 := fs1.Sys.(*syscall.Stat_t)\n-\tsys2 := fs2.Sys.(*syscall.Stat_t)\n-\treturn sys1.Dev == sys2.Dev && sys1.Ino == sys2.Ino\n+func sameFile(sys1, sys2 interface{}) bool {\n+\tstat1 := sys1.(*syscall.Stat_t)\n+\tstat2 := sys2.(*syscall.Stat_t)\n+\treturn stat1.Dev == stat2.Dev && stat1.Ino == stat2.Ino\n }\n \n func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {\n-\tfs := &FileStat{\n+\tfs := &fileStat{\n \t\tname:    basename(name),\n \t\tsize:    int64(st.Size),\n \t\tmodTime: timestrucToTime(st.Mtime),\n-\t\tSys:     st,\n+\t\tsys:     st,\n \t}\n \tfs.mode = FileMode(st.Mode & 0777)\n \tswitch st.Mode & syscall.S_IFMT {\n@@ -52,5 +52,5 @@ func timestrucToTime(ts syscall.Timestruc) time.Time {\n \n // For testing.\n func atime(fi FileInfo) time.Time {\n-\treturn timestrucToTime(fi.(*FileStat).Sys.(*syscall.Stat_t).Atime)\n+\treturn timestrucToTime(fi.(*fileStat).Sys().(*syscall.Stat_t).Atime)\n }"}]}