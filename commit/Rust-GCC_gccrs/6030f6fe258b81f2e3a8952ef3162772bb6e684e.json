{"sha": "6030f6fe258b81f2e3a8952ef3162772bb6e684e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzMGY2ZmUyNThiODFmMmUzYTg5NTJlZjMxNjI3NzJiYjZlNjg0ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-02-28T09:43:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-28T09:43:10Z"}, "message": "re PR c++/83871 (wrong code for attribute const and pure on distinct template specializations)\n\n\tPR c++/83871\n\tPR c++/83503\n\t* g++.dg/ext/attr-warning.C: Remove -fdump-tree-optimized from\n\tdg-options.\n\t* g++.dg/ext/attr-nonnull.C: Likewise.\n\t* g++.dg/ext/attr-noinline.C: Fix syntax in scan-tree-dump-not directives.\n\t* g++.dg/ext/attr-noinline-2.C: Likewise.\n\t* g++.dg/ext/attr-noreturn-2.C: Use -fdump-tree-optimized instead of\n\t-fdump-tree-eh in dg-options.\n\nFrom-SVN: r258059", "tree": {"sha": "e8b18fa20b08aca8e5e53459b1984b774627a07d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8b18fa20b08aca8e5e53459b1984b774627a07d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6030f6fe258b81f2e3a8952ef3162772bb6e684e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6030f6fe258b81f2e3a8952ef3162772bb6e684e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6030f6fe258b81f2e3a8952ef3162772bb6e684e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6030f6fe258b81f2e3a8952ef3162772bb6e684e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1299a9e287563624e2f0ec71877163b80e49045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1299a9e287563624e2f0ec71877163b80e49045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1299a9e287563624e2f0ec71877163b80e49045"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "c036308c6e53caec6a793f33370829b1667221e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6030f6fe258b81f2e3a8952ef3162772bb6e684e", "patch": "@@ -1,3 +1,15 @@\n+2018-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/83871\n+\tPR c++/83503\n+\t* g++.dg/ext/attr-warning.C: Remove -fdump-tree-optimized from\n+\tdg-options.\n+\t* g++.dg/ext/attr-nonnull.C: Likewise.\n+\t* g++.dg/ext/attr-noinline.C: Fix syntax in scan-tree-dump-not directives.\n+\t* g++.dg/ext/attr-noinline-2.C: Likewise.\n+\t* g++.dg/ext/attr-noreturn-2.C: Use -fdump-tree-optimized instead of\n+\t-fdump-tree-eh in dg-options.\n+\n 2018-02-28  Alan Modra  <amodra@gmail.com>\n \n \t* lib/prune.exp (prune_gcc_output): Match lower case \"in function\""}, {"sha": "b56a1344afd5f70b8ec538868a93da315ac1a409", "filename": "gcc/testsuite/g++.dg/ext/attr-noinline-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noinline-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noinline-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noinline-2.C?ref=6030f6fe258b81f2e3a8952ef3162772bb6e684e", "patch": "@@ -69,5 +69,5 @@ void test_elim_special_2 (void)\n {\n   // Should be inlined.\n   fnoinline_always_inline<Special>();\n-// { dg-final { scan-tree-dump-not \"fnoinline_always_inline<Special> *\\\\(\\\\);\" optimized\" } }\n+// { dg-final { scan-tree-dump-not \"fnoinline_always_inline<Special> *\\\\(\\\\);\" \"optimized\" } }\n }"}, {"sha": "54f69d580ea362b43fe1414ad4e833e82bf79b5c", "filename": "gcc/testsuite/g++.dg/ext/attr-noinline.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noinline.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noinline.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noinline.C?ref=6030f6fe258b81f2e3a8952ef3162772bb6e684e", "patch": "@@ -94,7 +94,7 @@ void test_keep_primary_3 (void)\n void test_elim_special_3 (void)\n {\n   fnone_always_inline<Special>();\n-// { dg-final { scan-tree-dump-not \"fnone_always_inline<Special> *\\\\(\\\\);\" optimized\" } }\n+// { dg-final { scan-tree-dump-not \"fnone_always_inline<Special> *\\\\(\\\\);\" \"optimized\" } }\n }\n \n \n@@ -124,5 +124,5 @@ void test_keep_primary_4 (void)\n void test_elim_special_4 (void)\n {\n   fnoinline_always_inline<Special>();\n-// { dg-final { scan-tree-dump-not \"fnoinline_always_inline<Special> *\\\\(\\\\);\" optimized\" } }\n+// { dg-final { scan-tree-dump-not \"fnoinline_always_inline<Special> *\\\\(\\\\);\" \"optimized\" } }\n }"}, {"sha": "5ef754ee37737538a83c8afafc121c6b5477ef4c", "filename": "gcc/testsuite/g++.dg/ext/attr-nonnull.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-nonnull.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-nonnull.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-nonnull.C?ref=6030f6fe258b81f2e3a8952ef3162772bb6e684e", "patch": "@@ -4,7 +4,7 @@\n // does not \"inherit\" attribute nonnull from an argument declared with\n // one in the primary template.\n // { dg-do compile }\n-// { dg-options \"-O -Wall -fdump-tree-optimized\" }\n+// { dg-options \"-O -Wall\" }\n \n template <class T>\n void __attribute__ ((nonnull (1)))"}, {"sha": "b35245cc9cca8a1088836d227c85a6d3bbb4a0b3", "filename": "gcc/testsuite/g++.dg/ext/attr-noreturn-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noreturn-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noreturn-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-noreturn-2.C?ref=6030f6fe258b81f2e3a8952ef3162772bb6e684e", "patch": "@@ -3,7 +3,7 @@\n     Test to verify that attributes noreturn on multiple declarations of\n     the same function are merged.\n     { dg-do compile }\n-    { dg-options \"-O -fdump-tree-eh\" } */\n+    { dg-options \"-O -fdump-tree-optimized\" } */\n \n int __attribute__ ((noreturn)) fnoreturn ();\n "}, {"sha": "6478efa8b831a2a1c931058af801a5ff8598ed5d", "filename": "gcc/testsuite/g++.dg/ext/attr-warning.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-warning.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6030f6fe258b81f2e3a8952ef3162772bb6e684e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-warning.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattr-warning.C?ref=6030f6fe258b81f2e3a8952ef3162772bb6e684e", "patch": "@@ -4,7 +4,7 @@\n // \"inherit\" attribute warning from a primary template declared with\n // it.\n // { dg-do compile }\n-// { dg-options \"-Wall -fdump-tree-optimized\" }\n+// { dg-options \"-Wall\" }\n \n struct Special;\n "}]}