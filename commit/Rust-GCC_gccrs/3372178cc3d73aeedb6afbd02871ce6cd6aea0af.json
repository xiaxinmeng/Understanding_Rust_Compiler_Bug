{"sha": "3372178cc3d73aeedb6afbd02871ce6cd6aea0af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM3MjE3OGNjM2Q3M2FlZWRiNmFmYmQwMjg3MWNlNmNkNmFlYTBhZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-08-10T08:36:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-08-10T08:36:13Z"}, "message": "mips.c (mips_no_mips16_string): Remove.\n\n\t* config/mips/mips.c (mips_no_mips16_string): Remove.\n\t(override_options): Don't handle -mips16 as part of -mipsN.\n\t* config/mips/mips.h (mips_no_mips16_string): Remove declaration.\n\t(TARGET_SWITCHES): Add -mips16 and -mno-mips16 entries.\n\t(TARGET_OPTIONS): Remove -mno-mips16.\n\nFrom-SVN: r70287", "tree": {"sha": "aa40f106abdc4e2e17e0d800bc7111ba97ac5961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa40f106abdc4e2e17e0d800bc7111ba97ac5961"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3372178cc3d73aeedb6afbd02871ce6cd6aea0af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3372178cc3d73aeedb6afbd02871ce6cd6aea0af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3372178cc3d73aeedb6afbd02871ce6cd6aea0af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3372178cc3d73aeedb6afbd02871ce6cd6aea0af/comments", "author": null, "committer": null, "parents": [{"sha": "1d5565cdf26d8af5d3b722f4058ebe13b601c4d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5565cdf26d8af5d3b722f4058ebe13b601c4d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d5565cdf26d8af5d3b722f4058ebe13b601c4d5"}], "stats": {"total": 62, "additions": 28, "deletions": 34}, "files": [{"sha": "5d2d0a6786743ce45e4c9469b73fc8a495b0caae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3372178cc3d73aeedb6afbd02871ce6cd6aea0af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3372178cc3d73aeedb6afbd02871ce6cd6aea0af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3372178cc3d73aeedb6afbd02871ce6cd6aea0af", "patch": "@@ -1,3 +1,11 @@\n+2003-08-10  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_no_mips16_string): Remove.\n+\t(override_options): Don't handle -mips16 as part of -mipsN.\n+\t* config/mips/mips.h (mips_no_mips16_string): Remove declaration.\n+\t(TARGET_SWITCHES): Add -mips16 and -mno-mips16 entries.\n+\t(TARGET_OPTIONS): Remove -mno-mips16.\n+\n 2003-08-10  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips-protos.h (coprocessor_operand): Remove declaration."}, {"sha": "18a7954c3845cff8f58b065d8a3a164c854e6159", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 16, "deletions": 31, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3372178cc3d73aeedb6afbd02871ce6cd6aea0af/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3372178cc3d73aeedb6afbd02871ce6cd6aea0af/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=3372178cc3d73aeedb6afbd02871ce6cd6aea0af", "patch": "@@ -503,11 +503,6 @@ const char *mips_tune_string;   /* for -mtune=<xxx> */\n const char *mips_isa_string;\t/* for -mips{1,2,3,4} */\n const char *mips_abi_string;\t/* for -mabi={32,n32,64,eabi} */\n \n-/* This variable is set by -mno-mips16.  We only care whether\n-   -mno-mips16 appears or not, and using a string in this fashion is\n-   just a way to avoid using up another bit in target_flags.  */\n-const char *mips_no_mips16_string;\n-\n /* Whether we are generating mips16 hard float code.  In mips16 mode\n    we always set TARGET_SOFT_FLOAT; this variable is nonzero if\n    -msoft-float was not specified by the user, which means that we\n@@ -4701,32 +4696,22 @@ override_options ()\n   if (mips_isa_string != 0)\n     {\n       /* Handle -mipsN.  */\n-\n-      if (strcmp (mips_isa_string, \"16\") == 0)\n-\t{\n-\t  /* -mips16 specifies an ASE rather than a processor, so don't\n-\t     change mips_arch here.  -mno-mips16 overrides -mips16.  */\n-\t  if (mips_no_mips16_string == NULL)\n-\t    target_flags |= MASK_MIPS16;\n-\t}\n-      else\n-\t{\n-\t  char *whole_isa_str = concat (\"mips\", mips_isa_string, NULL);\n-\t  const struct mips_cpu_info *isa_info;\n-\n-\t  isa_info = mips_parse_cpu (\"-mips option\", whole_isa_str);\n-\t  free (whole_isa_str);\n-\n-\t  /* -march takes precedence over -mipsN, since it is more descriptive.\n-\t     There's no harm in specifying both as long as the ISA levels\n-\t     are the same.  */\n-\t  if (mips_arch_info != 0 && mips_isa != isa_info->isa)\n-\t    error (\"-mips%s conflicts with the other architecture options, which specify a MIPS%d processor\",\n-\t\t   mips_isa_string, mips_isa);\n-\n-\t  /* Set architecture based on the given option.  */\n-\t  mips_set_architecture (isa_info);\n-\t}\n+      char *whole_isa_str = concat (\"mips\", mips_isa_string, NULL);\n+      const struct mips_cpu_info *isa_info;\n+\n+      isa_info = mips_parse_cpu (\"-mips option\", whole_isa_str);\n+      free (whole_isa_str);\n+\n+      /* -march takes precedence over -mipsN, since it is more descriptive.\n+\t There's no harm in specifying both as long as the ISA levels\n+\t are the same.  */\n+      if (mips_arch_info != 0 && mips_isa != isa_info->isa)\n+\terror (\"-mips%s conflicts with the other architecture options, \"\n+\t       \"which specify a MIPS%d processor\",\n+\t       mips_isa_string, mips_isa);\n+\n+      /* Set architecture based on the given option.  */\n+      mips_set_architecture (isa_info);\n     }\n \n   if (mips_arch_info == 0)"}, {"sha": "f1d6fd4f2be21d4f19781a938eab9f4bdbf58994", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3372178cc3d73aeedb6afbd02871ce6cd6aea0af/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3372178cc3d73aeedb6afbd02871ce6cd6aea0af/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=3372178cc3d73aeedb6afbd02871ce6cd6aea0af", "patch": "@@ -121,7 +121,6 @@ extern const char *mips_tune_string;    /* for -mtune=<xxx> */\n extern const char *mips_isa_string;\t/* for -mips{1,2,3,4} */\n extern const char *mips_abi_string;\t/* for -mabi={32,n32,64} */\n extern const char *mips_entry_string;\t/* for -mentry */\n-extern const char *mips_no_mips16_string;/* for -mno-mips16 */\n extern const char *mips_cache_flush_func;/* for -mflush-func= and -mno-flush-func */\n extern int mips_string_length;\t\t/* length of strings for mips16 */\n extern const struct mips_cpu_info mips_cpu_info_table[];\n@@ -592,6 +591,10 @@ extern const struct mips_cpu_info *mips_tune_info;\n      N_(\"Use NewABI-style %reloc() assembly operators\")},\t\t\\\n   {\"no-explicit-relocs\", -MASK_EXPLICIT_RELOCS,\t\t\t\t\\\n      N_(\"Use assembler macros instead of relocation operators\")},\t\\\n+  {\"ips16\",\t\t  MASK_MIPS16,\t\t\t\t\t\\\n+     N_(\"Generate mips16 code\") },\t\t\t\t\t\\\n+  {\"no-mips16\",\t\t -MASK_MIPS16,\t\t\t\t\t\\\n+     N_(\"Generate normal-mode code\") },\t\t\t\t\t\\\n   {\"debug\",\t\t  MASK_DEBUG,\t\t\t\t\t\\\n      NULL},\t\t\t\t\t\t\t\t\\\n   {\"debuga\",\t\t  MASK_DEBUG_A,\t\t\t\t\t\\\n@@ -718,8 +721,6 @@ extern const struct mips_cpu_info *mips_tune_info;\n       N_(\"Specify a Standard MIPS ISA\"), 0},\t\t\t\t\\\n   { \"entry\",\t&mips_entry_string,\t\t\t\t\t\\\n       N_(\"Use mips16 entry/exit psuedo ops\"), 0},\t\t\t\\\n-  { \"no-mips16\", &mips_no_mips16_string,\t\t\t\t\\\n-      N_(\"Don't use MIPS16 instructions\"), 0},\t\t\t\t\\\n   { \"no-flush-func\", &mips_cache_flush_func,\t\t\t\t\\\n       N_(\"Don't call any cache flush functions\"), 0},\t\t\t\\\n   { \"flush-func=\", &mips_cache_flush_func,\t\t\t\t\\"}]}