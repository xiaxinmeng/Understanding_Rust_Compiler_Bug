{"sha": "4b9c045f7e3afb16f845649c04fa62634098a885", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI5YzA0NWY3ZTNhZmIxNmY4NDU2NDljMDRmYTYyNjM0MDk4YTg4NQ==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2010-06-08T09:51:27Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2010-06-08T09:51:27Z"}, "message": "dwarf2.h (enum dwarf_tag): Add DW_TAG_HP_Bliss_field and DW_TAG_HP_Bliss_field_set.\n\n2010-06-08  Tristan Gingold  <gingold@adacore.com>\n\n\t* dwarf2.h (enum dwarf_tag): Add DW_TAG_HP_Bliss_field and\n\tDW_TAG_HP_Bliss_field_set.\n\t(enum dwarf_attribute): Add DW_AT_HP_prologue, DW_AT_HP_epilogue,\n\tDW_AT_HP_unit_name, DW_AT_HP_unit_size, DW_AT_HP_widened_byte_size,\n\tDW_AT_HP_definition_points, DW_AT_HP_default_location and\n\tDW_AT_HP_is_result_param.\n\t(enum dwarf_type): Add DW_ATE_HP_VAX_float, DW_ATE_HP_VAX_float_d,\n\tDW_ATE_HP_packed_decimal, DW_ATE_HP_zoned_decimal, DW_ATE_HP_edited,\n\tDW_ATE_HP_signed_fixed, DW_ATE_HP_unsigned_fixed,\n\tDW_ATE_HP_VAX_complex_float and DW_ATE_HP_VAX_complex_float_d.\n\t(enum dwarf_line_number_x_ops): Add\n\tDW_LNE_HP_source_file_correlation.\n\t(enum dwarf_source_language): Add DW_LANG_HP_Bliss,\n\tDW_LANG_HP_Basic91, DW_LANG_HP_Pascal91, DW_LANG_HP_IMacro,\n\tDW_LANG_HP_Assembler.\n\nFrom-SVN: r160430", "tree": {"sha": "feef333f06ea89311d913c627896aa218c986cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feef333f06ea89311d913c627896aa218c986cca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b9c045f7e3afb16f845649c04fa62634098a885", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9c045f7e3afb16f845649c04fa62634098a885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9c045f7e3afb16f845649c04fa62634098a885", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9c045f7e3afb16f845649c04fa62634098a885/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "736cc331c60f5ce97001b386d5af44076549f086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736cc331c60f5ce97001b386d5af44076549f086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/736cc331c60f5ce97001b386d5af44076549f086"}], "stats": {"total": 63, "additions": 55, "deletions": 8}, "files": [{"sha": "a879adba75ca157a5b46f82a24fc0e242b60fbc3", "filename": "include/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9c045f7e3afb16f845649c04fa62634098a885/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9c045f7e3afb16f845649c04fa62634098a885/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=4b9c045f7e3afb16f845649c04fa62634098a885", "patch": "@@ -1,3 +1,21 @@\n+2010-06-08  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* dwarf2.h (enum dwarf_tag): Add DW_TAG_HP_Bliss_field and\n+\tDW_TAG_HP_Bliss_field_set.\n+\t(enum dwarf_attribute): Add DW_AT_HP_prologue, DW_AT_HP_epilogue,\n+\tDW_AT_HP_unit_name, DW_AT_HP_unit_size, DW_AT_HP_widened_byte_size,\n+\tDW_AT_HP_definition_points, DW_AT_HP_default_location and\n+\tDW_AT_HP_is_result_param.\n+\t(enum dwarf_type): Add DW_ATE_HP_VAX_float, DW_ATE_HP_VAX_float_d,\n+\tDW_ATE_HP_packed_decimal, DW_ATE_HP_zoned_decimal, DW_ATE_HP_edited,\n+\tDW_ATE_HP_signed_fixed, DW_ATE_HP_unsigned_fixed,\n+\tDW_ATE_HP_VAX_complex_float and DW_ATE_HP_VAX_complex_float_d.\n+\t(enum dwarf_line_number_x_ops): Add\n+\tDW_LNE_HP_source_file_correlation.\n+\t(enum dwarf_source_language): Add DW_LANG_HP_Bliss,\n+\tDW_LANG_HP_Basic91, DW_LANG_HP_Pascal91, DW_LANG_HP_IMacro,\n+\tDW_LANG_HP_Assembler.\n+\n 2010-06-08  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n \t* splay-tree.h: Update copyright years."}, {"sha": "85e7991c69ec4b010799d64af2682abab01c7e6c", "filename": "include/dwarf2.h", "status": "modified", "additions": 37, "deletions": 8, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9c045f7e3afb16f845649c04fa62634098a885/include%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9c045f7e3afb16f845649c04fa62634098a885/include%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.h?ref=4b9c045f7e3afb16f845649c04fa62634098a885", "patch": "@@ -206,8 +206,12 @@ enum dwarf_tag\n \n     /* SGI/MIPS Extensions.  */\n     DW_TAG_MIPS_loop = 0x4081,\n+\n     /* HP extensions.  See: ftp://ftp.hp.com/pub/lang/tools/WDB/wdb-4.0.tar.gz .  */\n     DW_TAG_HP_array_descriptor = 0x4090,\n+    DW_TAG_HP_Bliss_field      = 0x4091,\n+    DW_TAG_HP_Bliss_field_set  = 0x4092,\n+\n     /* GNU extensions.  */\n     DW_TAG_format_label = 0x4101,\t/* For FORTRAN 77 and Fortran 90.  */\n     DW_TAG_function_template = 0x4102,\t/* For C++.  */\n@@ -390,6 +394,8 @@ enum dwarf_attribute\n     /* HP extensions.  */\n     DW_AT_HP_block_index         = 0x2000,\n     DW_AT_HP_unmodifiable        = 0x2001, /* Same as DW_AT_MIPS_fde.  */\n+    DW_AT_HP_prologue            = 0x2005, /* Same as DW_AT_MIPS_loop_unroll.  */\n+    DW_AT_HP_epilogue            = 0x2008, /* Same as DW_AT_MIPS_stride.  */\n     DW_AT_HP_actuals_stmt_list   = 0x2010,\n     DW_AT_HP_proc_per_section    = 0x2011,\n     DW_AT_HP_raw_data_ptr        = 0x2012,\n@@ -402,6 +408,13 @@ enum dwarf_attribute\n     DW_AT_HP_all_variables_modifiable = 0x2019,\n     DW_AT_HP_linkage_name        = 0x201a,\n     DW_AT_HP_prof_flags          = 0x201b,  /* In comp unit of procs_info for -g.  */\n+    DW_AT_HP_unit_name           = 0x201f,\n+    DW_AT_HP_unit_size           = 0x2020,\n+    DW_AT_HP_widened_byte_size   = 0x2021,\n+    DW_AT_HP_definition_points   = 0x2022,\n+    DW_AT_HP_default_location    = 0x2023,\n+    DW_AT_HP_is_result_param     = 0x2029,\n+\n     /* GNU extensions.  */\n     DW_AT_sf_names   = 0x2101,\n     DW_AT_src_info   = 0x2102,\n@@ -646,13 +659,22 @@ enum dwarf_type\n     DW_ATE_hi_user = 0xff,\n \n     /* HP extensions.  */\n-    DW_ATE_HP_float80            = 0x80, /* Floating-point (80 bit).  */\n-    DW_ATE_HP_complex_float80    = 0x81, /* Complex floating-point (80 bit).  */\n-    DW_ATE_HP_float128           = 0x82, /* Floating-point (128 bit).  */\n-    DW_ATE_HP_complex_float128   = 0x83, /* Complex floating-point (128 bit).  */\n-    DW_ATE_HP_floathpintel       = 0x84, /* Floating-point (82 bit IA64).  */\n-    DW_ATE_HP_imaginary_float80  = 0x85,\n-    DW_ATE_HP_imaginary_float128 = 0x86\n+    DW_ATE_HP_float80             = 0x80, /* Floating-point (80 bit).  */\n+    DW_ATE_HP_complex_float80     = 0x81, /* Complex floating-point (80 bit).  */\n+    DW_ATE_HP_float128            = 0x82, /* Floating-point (128 bit).  */\n+    DW_ATE_HP_complex_float128    = 0x83, /* Complex fp (128 bit).  */\n+    DW_ATE_HP_floathpintel        = 0x84, /* Floating-point (82 bit IA64).  */\n+    DW_ATE_HP_imaginary_float80   = 0x85,\n+    DW_ATE_HP_imaginary_float128  = 0x86,\n+    DW_ATE_HP_VAX_float           = 0x88, /* F or G floating.  */\n+    DW_ATE_HP_VAX_float_d         = 0x89, /* D floating.  */\n+    DW_ATE_HP_packed_decimal      = 0x8a, /* Cobol.  */\n+    DW_ATE_HP_zoned_decimal       = 0x8b, /* Cobol.  */\n+    DW_ATE_HP_edited              = 0x8c, /* Cobol.  */\n+    DW_ATE_HP_signed_fixed        = 0x8d, /* Cobol.  */\n+    DW_ATE_HP_unsigned_fixed      = 0x8e, /* Cobol.  */\n+    DW_ATE_HP_VAX_complex_float   = 0x8f, /* F or G floating complex.  */\n+    DW_ATE_HP_VAX_complex_float_d = 0x90  /* D floating complex.  */\n   };\n \n /* Decimal sign encodings.  */\n@@ -785,6 +807,7 @@ enum dwarf_line_number_x_ops\n     DW_LNE_HP_negate_function_exit     = 0x18,\n     DW_LNE_HP_negate_front_end_logical = 0x19,\n     DW_LNE_HP_define_proc              = 0x20,\n+    DW_LNE_HP_source_file_correlation  = 0x80,\n \n     DW_LNE_lo_user = 0x80,\n     DW_LNE_hi_user = 0xff\n@@ -875,7 +898,13 @@ enum dwarf_source_language\n     /* MIPS.  */\n     DW_LANG_Mips_Assembler = 0x8001,\n     /* UPC.  */\n-    DW_LANG_Upc = 0x8765\n+    DW_LANG_Upc = 0x8765,\n+    /* HP extensions.  */\n+    DW_LANG_HP_Bliss     = 0x8003,\n+    DW_LANG_HP_Basic91   = 0x8004,\n+    DW_LANG_HP_Pascal91  = 0x8005,\n+    DW_LANG_HP_IMacro    = 0x8006,\n+    DW_LANG_HP_Assembler = 0x8007\n   };\n \n /* Names and codes for macro information.  */"}]}