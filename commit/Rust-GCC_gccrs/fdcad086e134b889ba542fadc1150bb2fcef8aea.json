{"sha": "fdcad086e134b889ba542fadc1150bb2fcef8aea", "node_id": "C_kwDOANBUbNoAKGZkY2FkMDg2ZTEzNGI4ODliYTU0MmZhZGMxMTUwYmIyZmNlZjhhZWE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-30T09:31:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-30T09:31:29Z"}, "message": "Merge #695\n\n695: Fix raw byte string parsing of zero and out of range bytes r=philberty a=CohenArthur\n\nAllow \\0 escape in raw byte string and reject non-ascii byte\r\nvalues. Change parse_partial_hex_escapes to not skip bad characters to\r\nprovide better error messages.\r\n\r\nAdd rawbytestring.rs testcase to check string, raw string, byte string\r\nand raw byte string parsing.\r\n\r\nPatch: https://code.wildebeest.org/git/user/mjw/gccrs/commit/?h=parse-raw-byte-string\r\nEmail: https://gcc.gnu.org/pipermail/gcc-rust/2021-September/000227.html\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "9e968a66f2c66220cc220a471861c416f162dc40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e968a66f2c66220cc220a471861c416f162dc40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdcad086e134b889ba542fadc1150bb2fcef8aea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhVYPxCRBK7hj4Ov3rIwAAkH4IACr/9R3B8Z9jImJEjrSpXrft\nwZUOAqQo5tjEiuCH3SZEST6UneI1etbg8gAJPW9kd0eLe9/BK/bx+mokyGwKpDsc\nBxc2+jz4cduUVlpPzXW7MMcNWH0pm3lJLXSZfgc7RT42+xqYzsUnnaXG3BIxg0JS\nSqCj3AHmZ9Nx12QtDgp6mVIQ1XLTZQPyRGY6TSchjBuANTxC4t//yP7SvsHO394z\nB4QPQPMpg35PjIY0SMhO9YrAV610DpLEn1XgcucGpu5gALevLyqCqLaDFGgi/ODh\n4vl96wBPiy6fpnVZIffQu70oTqGDjclu3u5VfMQaEsYWgMI8lIv+HimpD6pjJGQ=\n=GzAw\n-----END PGP SIGNATURE-----\n", "payload": "tree 9e968a66f2c66220cc220a471861c416f162dc40\nparent 28f527c9598339cf834a30b5ee1f14258b8ecbb2\nparent e6e1cc117e1f08dfde86f5a3b1988e4b7206a7da\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632994289 +0000\ncommitter GitHub <noreply@github.com> 1632994289 +0000\n\nMerge #695\n\n695: Fix raw byte string parsing of zero and out of range bytes r=philberty a=CohenArthur\n\nAllow \\0 escape in raw byte string and reject non-ascii byte\r\nvalues. Change parse_partial_hex_escapes to not skip bad characters to\r\nprovide better error messages.\r\n\r\nAdd rawbytestring.rs testcase to check string, raw string, byte string\r\nand raw byte string parsing.\r\n\r\nPatch: https://code.wildebeest.org/git/user/mjw/gccrs/commit/?h=parse-raw-byte-string\r\nEmail: https://gcc.gnu.org/pipermail/gcc-rust/2021-September/000227.html\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdcad086e134b889ba542fadc1150bb2fcef8aea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdcad086e134b889ba542fadc1150bb2fcef8aea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdcad086e134b889ba542fadc1150bb2fcef8aea/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28f527c9598339cf834a30b5ee1f14258b8ecbb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f527c9598339cf834a30b5ee1f14258b8ecbb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28f527c9598339cf834a30b5ee1f14258b8ecbb2"}, {"sha": "e6e1cc117e1f08dfde86f5a3b1988e4b7206a7da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6e1cc117e1f08dfde86f5a3b1988e4b7206a7da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6e1cc117e1f08dfde86f5a3b1988e4b7206a7da"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "bbddea04d0c21799a05d690f6f1c896af939e78d", "filename": "gcc/rust/lex/rust-lex.cc", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdcad086e134b889ba542fadc1150bb2fcef8aea/gcc%2Frust%2Flex%2Frust-lex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdcad086e134b889ba542fadc1150bb2fcef8aea/gcc%2Frust%2Flex%2Frust-lex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.cc?ref=fdcad086e134b889ba542fadc1150bb2fcef8aea", "patch": "@@ -1423,29 +1423,31 @@ Lexer::parse_partial_hex_escape ()\n   char hexNum[3] = {0, 0, 0};\n \n   // first hex char\n-  skip_input ();\n-  current_char = peek_input ();\n+  current_char = peek_input (1);\n   int additional_length_offset = 1;\n \n   if (!is_x_digit (current_char))\n     {\n       rust_error_at (get_current_location (),\n \t\t     \"invalid character %<\\\\x%c%> in \\\\x sequence\",\n \t\t     current_char);\n+      return std::make_pair (0, 0);\n     }\n   hexNum[0] = current_char;\n \n   // second hex char\n   skip_input ();\n-  current_char = peek_input ();\n+  current_char = peek_input (1);\n   additional_length_offset++;\n \n   if (!is_x_digit (current_char))\n     {\n       rust_error_at (get_current_location (),\n-\t\t     \"invalid character %<\\\\x%c%> in \\\\x sequence\",\n+\t\t     \"invalid character %<\\\\x%c%c%> in \\\\x sequence\", hexNum[0],\n \t\t     current_char);\n+      return std::make_pair (0, 1);\n     }\n+  skip_input ();\n   hexNum[1] = current_char;\n \n   long hexLong = std::strtol (hexNum, nullptr, 16);\n@@ -1627,7 +1629,7 @@ Lexer::parse_byte_string (Location loc)\n \t  else\n \t    length += std::get<1> (escape_length_pair);\n \n-\t  if (output_char != 0)\n+\t  if (output_char != 0 || !std::get<2> (escape_length_pair))\n \t    str += output_char;\n \n \t  continue;\n@@ -1722,6 +1724,14 @@ Lexer::parse_raw_byte_string (Location loc)\n \t    }\n \t}\n \n+      if ((unsigned char) current_char > 127)\n+\t{\n+\t  rust_error_at (get_current_location (),\n+\t\t\t \"character %<%c%> in raw byte string out of range\",\n+\t\t\t current_char);\n+\t  current_char = 0;\n+\t}\n+\n       length++;\n \n       str += current_char;"}, {"sha": "9c6b762a7fd378206a3bfe21db5b708890f5466f", "filename": "gcc/testsuite/rust/compile/rawbytestring.rs", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdcad086e134b889ba542fadc1150bb2fcef8aea/gcc%2Ftestsuite%2Frust%2Fcompile%2Frawbytestring.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdcad086e134b889ba542fadc1150bb2fcef8aea/gcc%2Ftestsuite%2Frust%2Fcompile%2Frawbytestring.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Frawbytestring.rs?ref=fdcad086e134b889ba542fadc1150bb2fcef8aea"}]}