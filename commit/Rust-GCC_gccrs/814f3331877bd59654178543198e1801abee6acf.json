{"sha": "814f3331877bd59654178543198e1801abee6acf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE0ZjMzMzE4NzdiZDU5NjU0MTc4NTQzMTk4ZTE4MDFhYmVlNmFjZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-07-13T19:09:13Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-07-13T19:09:13Z"}, "message": "lto.c (do_stream_out): Add PART parameter; open dump file.\n\n\n\t* lto.c (do_stream_out): Add PART parameter; open dump file.\n\t(stream_out): Add PART parameter; pass it to do_stream_out.\n\t(lto_wpa_write_files): Update call of stream_out.\n\n\t* lto-streamer-out.c (copy_function_or_variable): Dump info about\n\tcopying section.\n\nFrom-SVN: r262645", "tree": {"sha": "ca2651c3bc627cf7d5c6c705641b7d7b65769400", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca2651c3bc627cf7d5c6c705641b7d7b65769400"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/814f3331877bd59654178543198e1801abee6acf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/814f3331877bd59654178543198e1801abee6acf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/814f3331877bd59654178543198e1801abee6acf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/814f3331877bd59654178543198e1801abee6acf/comments", "author": null, "committer": null, "parents": [{"sha": "fb5f0c207eb0b04eb7a62a68641b0cca6d98d1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5f0c207eb0b04eb7a62a68641b0cca6d98d1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5f0c207eb0b04eb7a62a68641b0cca6d98d1a9"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "14bfd9ea69d1d2a7fd51ee7213e4b941ed710c49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/814f3331877bd59654178543198e1801abee6acf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/814f3331877bd59654178543198e1801abee6acf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=814f3331877bd59654178543198e1801abee6acf", "patch": "@@ -1,3 +1,8 @@\n+2018-07-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-streamer-out.c (copy_function_or_variable): Dump info about\n+\tcopying section.\n+\n 2018-07-13  Bill Schmidt  <wschmidt@linux.ibm.com>\n \t    Steve Munroe  <munroesj52@gmail.com>\n "}, {"sha": "78b90e7f59624bb18c45d444757e13a68a3c26fa", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/814f3331877bd59654178543198e1801abee6acf/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/814f3331877bd59654178543198e1801abee6acf/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=814f3331877bd59654178543198e1801abee6acf", "patch": "@@ -2293,6 +2293,8 @@ copy_function_or_variable (struct symtab_node *node)\n   struct lto_in_decl_state *in_state;\n   struct lto_out_decl_state *out_state = lto_get_out_decl_state ();\n \n+  if (streamer_dump_file)\n+    fprintf (streamer_dump_file, \"Copying section for %s\\n\", name);\n   lto_begin_section (section_name, false);\n   free (section_name);\n "}, {"sha": "91e8647d42a62f38f5576d5d27c1fef6e5853722", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/814f3331877bd59654178543198e1801abee6acf/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/814f3331877bd59654178543198e1801abee6acf/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=814f3331877bd59654178543198e1801abee6acf", "patch": "@@ -1,3 +1,9 @@\n+2018-07-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto.c (do_stream_out): Add PART parameter; open dump file.\n+\t(stream_out): Add PART parameter; pass it to do_stream_out.\n+\t(lto_wpa_write_files): Update call of stream_out.\n+\n 2018-07-04  Martin Liska  <mliska@suse.cz>\n \n \tPR middle-end/66240"}, {"sha": "d1add15efeb81f912cf061d00be32c3f70be1f6b", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/814f3331877bd59654178543198e1801abee6acf/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/814f3331877bd59654178543198e1801abee6acf/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=814f3331877bd59654178543198e1801abee6acf", "patch": "@@ -2326,20 +2326,27 @@ static lto_file *current_lto_file;\n /* Actually stream out ENCODER into TEMP_FILENAME.  */\n \n static void\n-do_stream_out (char *temp_filename, lto_symtab_encoder_t encoder)\n+do_stream_out (char *temp_filename, lto_symtab_encoder_t encoder, int part)\n {\n   lto_file *file = lto_obj_file_open (temp_filename, true);\n   if (!file)\n     fatal_error (input_location, \"lto_obj_file_open() failed\");\n   lto_set_current_out_file (file);\n \n+  gcc_assert (!dump_file);\n+  streamer_dump_file = dump_begin (TDI_lto_stream_out, NULL, part);\n   ipa_write_optimization_summaries (encoder);\n \n   free (CONST_CAST (char *, file->filename));\n \n   lto_set_current_out_file (NULL);\n   lto_obj_file_close (file);\n   free (file);\n+  if (streamer_dump_file)\n+    {\n+      dump_end (TDI_lto_stream_out, streamer_dump_file);\n+      streamer_dump_file = NULL;\n+    }\n }\n \n /* Wait for forked process and signal errors.  */\n@@ -2372,14 +2379,14 @@ wait_for_child ()\n \n static void\n stream_out (char *temp_filename, lto_symtab_encoder_t encoder,\n-\t    bool ARG_UNUSED (last))\n+\t    bool ARG_UNUSED (last), int part)\n {\n #ifdef HAVE_WORKING_FORK\n   static int nruns;\n \n   if (lto_parallelism <= 1)\n     {\n-      do_stream_out (temp_filename, encoder);\n+      do_stream_out (temp_filename, encoder, part);\n       return;\n     }\n \n@@ -2399,26 +2406,26 @@ stream_out (char *temp_filename, lto_symtab_encoder_t encoder,\n       if (!cpid)\n \t{\n \t  setproctitle (\"lto1-wpa-streaming\");\n-\t  do_stream_out (temp_filename, encoder);\n+\t  do_stream_out (temp_filename, encoder, part);\n \t  exit (0);\n \t}\n       /* Fork failed; lets do the job ourseleves.  */\n       else if (cpid == -1)\n-        do_stream_out (temp_filename, encoder);\n+        do_stream_out (temp_filename, encoder, part);\n       else\n \tnruns++;\n     }\n   /* Last partition; stream it and wait for all children to die.  */\n   else\n     {\n       int i;\n-      do_stream_out (temp_filename, encoder);\n+      do_stream_out (temp_filename, encoder, part);\n       for (i = 0; i < nruns; i++)\n \twait_for_child ();\n     }\n   asm_nodes_output = true;\n #else\n-  do_stream_out (temp_filename, encoder);\n+  do_stream_out (temp_filename, encoder, part);\n #endif\n }\n \n@@ -2508,7 +2515,7 @@ lto_wpa_write_files (void)\n \t}\n       gcc_checking_assert (lto_symtab_encoder_size (part->encoder) || !i);\n \n-      stream_out (temp_filename, part->encoder, i == n_sets - 1);\n+      stream_out (temp_filename, part->encoder, i == n_sets - 1, i);\n \n       part->encoder = NULL;\n "}]}