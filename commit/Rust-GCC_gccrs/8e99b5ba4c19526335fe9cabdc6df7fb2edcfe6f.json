{"sha": "8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU5OWI1YmE0YzE5NTI2MzM1ZmU5Y2FiZGM2ZGY3ZmIyZWRjZmU2Zg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-02-22T19:36:01Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-02-22T19:47:15Z"}, "message": "g++.dg/warn/Warray-bounds-10..13: Fix for 32-bit newlib targets\n\nSee gcc/config/newlib-stdint.h, where targets that have\nLONG_TYPE_SIZE == 32, get __INT32_TYPE__ defined to \"long\nint\".\n\nAll these tests have \"typedef __INT32_TYPE__ int32_t;\".\nThus the tests fail for 32-bit newlib targets due to related\nwarning messages being matched to \"aka int\" where the\nemitted message for these targets have \"aka long int\".\n\nTested cris-elf and x86_64-linux, committed as obvious.\n\ngcc/testsuite:\n\t* g++.dg/warn/Warray-bounds-10.C, g++.dg/warn/Warray-bounds-11.C,\n\tg++.dg/warn/Warray-bounds-12.C, g++.dg/warn/Warray-bounds-13.C:\n\tHandle __INT32_TYPE__ being \"long int\".", "tree": {"sha": "f0ca48703d2917cc832141b1fed4068437f5b489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0ca48703d2917cc832141b1fed4068437f5b489"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7de0ffa34a9559919b14094b804175d7d9b446f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7de0ffa34a9559919b14094b804175d7d9b446f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7de0ffa34a9559919b14094b804175d7d9b446f"}], "stats": {"total": 96, "additions": 48, "deletions": 48}, "files": [{"sha": "4deea31fae0340f4fe3bf59ae37dca176bc461e6", "filename": "gcc/testsuite/g++.dg/warn/Warray-bounds-10.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-10.C?ref=8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f", "patch": "@@ -19,9 +19,9 @@ void warn_op_new ()\n {\n   T (int32_t, 0, 0);          // { dg-warning \"array subscript 0 is outside array bounds of 'int32_t \\\\\\[0]'\" }\n                               // { dg-message \"referencing an object of size \\\\d allocated by 'void\\\\\\* operator new\\\\\\(\\(long \\)?unsigned int\\\\\\)'\" \"note\" { target *-*-* } .-1 }\n-  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n-  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n-  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n+  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n+  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n+  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n \n   T (int32_t, 4, 0);\n \n@@ -30,9 +30,9 @@ void warn_op_new ()\n   T (int32_t, 2, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 3, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 4, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n-  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n-  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n-  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n+  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n+  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n+  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n \n   T (int32_t, 8, 1);\n }\n@@ -45,9 +45,9 @@ void warn_op_array_new ()\n \n   T (int32_t, 0, 0);          // { dg-warning \"array subscript 0 is outside array bounds of 'int32_t \\\\\\[0]'\" }\n                               // { dg-message \"referencing an object of size \\\\d allocated by 'void\\\\\\* operator new \\\\\\[]\\\\\\(\\(long \\)?unsigned int\\\\\\)'\" \"note\" { target *-*-* } .-1 }\n-  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n-  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n-  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n+  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n+  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n+  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n \n   T (int32_t, 4, 0);\n \n@@ -56,9 +56,9 @@ void warn_op_array_new ()\n   T (int32_t, 2, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 3, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 4, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n-  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n-  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n-  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n+  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n+  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n+  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n \n   T (int32_t, 8, 1);\n }"}, {"sha": "45d271948e88e5d0f407a9baa1db93a2a47d1b52", "filename": "gcc/testsuite/g++.dg/warn/Warray-bounds-11.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-11.C?ref=8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f", "patch": "@@ -21,9 +21,9 @@ void warn_op_new ()\n {\n   T (int32_t, 0, 0);          // { dg-warning \"array subscript 0 is outside array bounds of 'int32_t \\\\\\[0]'\" }\n                               // { dg-message \"referencing an object of size \\\\d allocated by 'void\\\\\\* operator new\\\\\\(std::size_t, const std::nothrow_t.\\\\\\)'\" \"note\" { target *-*-* } .-1 }\n-  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n-  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n-  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n+  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n+  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n+  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n \n   T (int32_t, 4, 0);\n \n@@ -32,9 +32,9 @@ void warn_op_new ()\n   T (int32_t, 2, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 3, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 4, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n-  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n-  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n-  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n+  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n+  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n+  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n \n   T (int32_t, 8, 1);\n }\n@@ -47,9 +47,9 @@ void warn_op_array_new ()\n \n   T (int32_t, 0, 0);          // { dg-warning \"array subscript 0 is outside array bounds of 'int32_t \\\\\\[0]'\" }\n                               // { dg-message \"referencing an object of size \\\\d allocated by 'void\\\\\\* operator new \\\\\\[]\\\\\\(std::size_t, const std::nothrow_t&\\\\\\)'\" \"note\" { target *-*-* } .-1 }\n-  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n-  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n-  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n+  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n+  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n+  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n \n   T (int32_t, 4, 0);\n \n@@ -58,9 +58,9 @@ void warn_op_array_new ()\n   T (int32_t, 2, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 3, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 4, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n-  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n-  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n-  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n+  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n+  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n+  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n \n   T (int32_t, 8, 1);\n }"}, {"sha": "3f1555b9e1b1e1d81ee2b7fe79a83ff862a7b03c", "filename": "gcc/testsuite/g++.dg/warn/Warray-bounds-12.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-12.C?ref=8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f", "patch": "@@ -21,9 +21,9 @@ void warn_new ()\n {\n   T (int32_t, 0, 0);          // { dg-warning \"array subscript 0 is outside array bounds of 'int32_t \\\\\\[0]'\" }\n                               // { dg-message \"referencing an object of size \\\\d allocated by 'void\\\\\\* operator new\\\\\\(\\(long \\)?unsigned int\\\\\\)'\" \"note\" { target *-*-* } .-1 }\n-  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n-  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n-  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n+  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n+  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n+  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n \n   T (int32_t, 4, 0);\n \n@@ -32,9 +32,9 @@ void warn_new ()\n   T (int32_t, 2, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 3, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 4, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n-  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n-  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n-  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n+  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n+  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n+  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n \n   T (int32_t, 8, 1);\n }\n@@ -47,9 +47,9 @@ void warn_array_new ()\n \n   T (int32_t, 0, 0);          // { dg-warning \"array subscript 0 is outside array bounds of 'int32_t \\\\\\[0]'\" }\n                               // { dg-message \"referencing an object of size \\\\d allocated by 'void\\\\\\* operator new \\\\\\[]\\\\\\(\\(long \\)?unsigned int\\\\\\)'\" \"note\" { target *-*-* } .-1 }\n-  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n-  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n-  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n+  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n+  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n+  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n \n   T (int32_t, 4, 0);\n \n@@ -58,9 +58,9 @@ void warn_array_new ()\n   T (int32_t, 2, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 3, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 4, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n-  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n-  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n-  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n+  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n+  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n+  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n \n   T (int32_t, 8, 1);\n }"}, {"sha": "890620dc70a236cdfb4ad948c90d3d5350ce937a", "filename": "gcc/testsuite/g++.dg/warn/Warray-bounds-13.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-13.C?ref=8e99b5ba4c19526335fe9cabdc6df7fb2edcfe6f", "patch": "@@ -25,9 +25,9 @@ void warn_nothrow_new ()\n {\n   T (int32_t, 0, 0);          // { dg-warning \"array subscript 0 is outside array bounds of 'int32_t \\\\\\[0]'\" }\n                               // { dg-message \"referencing an object of size \\\\d allocated by 'void\\\\\\* operator new\\\\\\(std::size_t, const std::nothrow_t.\\\\\\)'\" \"note\" { target *-*-* } .-1 }\n-  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n-  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n-  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n+  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n+  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n+  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n \n   T (int32_t, 4, 0);\n \n@@ -36,9 +36,9 @@ void warn_nothrow_new ()\n   T (int32_t, 2, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 3, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 4, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n-  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n-  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n-  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n+  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n+  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n+  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n \n   T (int32_t, 8, 1);\n }\n@@ -51,9 +51,9 @@ void warn_nothrow_array_new ()\n \n   T (int32_t, 0, 0);          // { dg-warning \"array subscript 0 is outside array bounds of 'int32_t \\\\\\[0]'\" }\n                               // { dg-message \"referencing an object of size \\\\d allocated by 'void\\\\\\* operator new \\\\\\[]\\\\\\(std::size_t, const std::nothrow_t&\\\\\\)'\" \"note\" { target *-*-* } .-1 }\n-  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n-  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n-  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n+  T (int32_t, 1, 0);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[1]'\" }\n+  T (int32_t, 2, 0);         //  { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[2]'\" }\n+  T (int32_t, 3, 0);         // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[0]' is partly outside array bounds of 'unsigned char \\\\\\[3]'\" }\n \n   T (int32_t, 4, 0);\n \n@@ -62,9 +62,9 @@ void warn_nothrow_array_new ()\n   T (int32_t, 2, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 3, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n   T (int32_t, 4, 1);          // { dg-warning \"array subscript 1 is outside array bounds \" }\n-  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n-  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n-  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n+  T (int32_t, 5, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[5]\" }\n+  T (int32_t, 6, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[6]\" }\n+  T (int32_t, 7, 1);          // { dg-warning \"array subscript 'int32_t {aka (long )?int}\\\\\\[1]' is partly outside array bounds of 'unsigned char \\\\\\[7]\" }\n \n   T (int32_t, 8, 1);\n }"}]}