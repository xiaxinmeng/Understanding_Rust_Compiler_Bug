{"sha": "3db5d687b485630201b905fae8f54cf39c65cc6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RiNWQ2ODdiNDg1NjMwMjAxYjkwNWZhZThmNTRjZjM5YzY1Y2M2YQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-10-06T15:59:31Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-10-06T15:59:31Z"}, "message": "trans-array.c (gfc_conv_tmp_array_ref): Add factorized call to gfc_advance_se_ss_chain.\n\n2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n\n\t* trans-array.c (gfc_conv_tmp_array_ref): Add factorized call to\n\tgfc_advance_se_ss_chain.\n\t* trans-expr.c (gfc_conv_subref_array_ref, gfc_conv_procedure_call,\n\tgfc_conv_array_constructor_expr, gfc_trans_assignment_1): Remove\n\tcalls to gfc_advance_se_ss_chain after gfc_conv_tmp_array_ref.\n\t* trans-intrinsic.c (gfc_conv_intrinsic_function): Ditto.\n\t* trans-stmt.c (gfc_trans_where_assign, gfc_trans_where_3): Ditto.\n\nFrom-SVN: r165046", "tree": {"sha": "1e4489346bf74d625a3d7f75b6972c82f5b92e10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e4489346bf74d625a3d7f75b6972c82f5b92e10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3db5d687b485630201b905fae8f54cf39c65cc6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db5d687b485630201b905fae8f54cf39c65cc6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db5d687b485630201b905fae8f54cf39c65cc6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db5d687b485630201b905fae8f54cf39c65cc6a/comments", "author": null, "committer": null, "parents": [{"sha": "363aab219509999ae48a7c8e5c515e7d82f08474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363aab219509999ae48a7c8e5c515e7d82f08474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/363aab219509999ae48a7c8e5c515e7d82f08474"}], "stats": {"total": 41, "additions": 17, "deletions": 24}, "files": [{"sha": "4c8cec42321186380724fe7627e019483e7d6a23", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3db5d687b485630201b905fae8f54cf39c65cc6a", "patch": "@@ -1,3 +1,13 @@\n+2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_conv_tmp_array_ref): Add factorized call to\n+\tgfc_advance_se_ss_chain.\n+\t* trans-expr.c (gfc_conv_subref_array_ref, gfc_conv_procedure_call,\n+\tgfc_conv_array_constructor_expr, gfc_trans_assignment_1): Remove\n+\tcalls to gfc_advance_se_ss_chain after gfc_conv_tmp_array_ref.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_function): Ditto.\n+\t* trans-stmt.c (gfc_trans_where_assign, gfc_trans_where_3): Ditto.\n+\n 2010-10-06  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans.c (gfc_restore_backend_locus): New function."}, {"sha": "f70d16e0ea77bddea6e59d7f5c60873a255690d7", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=3db5d687b485630201b905fae8f54cf39c65cc6a", "patch": "@@ -2552,6 +2552,7 @@ gfc_conv_tmp_array_ref (gfc_se * se)\n {\n   se->string_length = se->ss->string_length;\n   gfc_conv_scalarized_array_ref (se, NULL);\n+  gfc_advance_se_ss_chain (se);\n }\n \n "}, {"sha": "d662d20020840121f5e9c83ed96fdbf3f2caf7c9", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=3db5d687b485630201b905fae8f54cf39c65cc6a", "patch": "@@ -2354,7 +2354,6 @@ gfc_conv_subref_array_arg (gfc_se * parmse, gfc_expr * expr, int g77,\n   gfc_conv_expr (&rse, expr);\n \n   gfc_conv_tmp_array_ref (&lse);\n-  gfc_advance_se_ss_chain (&lse);\n \n   if (intent != INTENT_OUT)\n     {\n@@ -2829,7 +2828,6 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \n \t      /* Access the previously obtained result.  */\n \t      gfc_conv_tmp_array_ref (se);\n-\t      gfc_advance_se_ss_chain (se);\n \t      return 0;\n \t    }\n \t}\n@@ -3977,7 +3975,6 @@ gfc_conv_array_constructor_expr (gfc_se * se, gfc_expr * expr)\n   gcc_assert (se->ss->expr == expr && se->ss->type == GFC_SS_CONSTRUCTOR);\n \n   gfc_conv_tmp_array_ref (se);\n-  gfc_advance_se_ss_chain (se);\n }\n \n \n@@ -5679,7 +5676,6 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n   if (l_is_temp)\n     {\n       gfc_conv_tmp_array_ref (&lse);\n-      gfc_advance_se_ss_chain (&lse);\n       if (expr2->ts.type == BT_CHARACTER)\n \tlse.string_length = string_length;\n     }\n@@ -5730,7 +5726,6 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n \t  lse.ss = lss;\n \n \t  gfc_conv_tmp_array_ref (&rse);\n-\t  gfc_advance_se_ss_chain (&rse);\n \t  gfc_conv_expr (&lse, expr1);\n \n \t  gcc_assert (lse.ss == gfc_ss_terminator"}, {"sha": "a43bfc291fa9e4d1e730d1dfd979c8805e76e605", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=3db5d687b485630201b905fae8f54cf39c65cc6a", "patch": "@@ -6089,11 +6089,8 @@ gfc_conv_intrinsic_function (gfc_se * se, gfc_expr * expr)\n \n     case GFC_ISYM_TRANSFER:\n       if (se->ss && se->ss->useflags)\n-\t{\n-\t  /* Access the previously obtained result.  */\n-\t  gfc_conv_tmp_array_ref (se);\n-\t  gfc_advance_se_ss_chain (se);\n-\t}\n+\t/* Access the previously obtained result.  */\n+\tgfc_conv_tmp_array_ref (se);\n       else\n \tgfc_conv_intrinsic_transfer (se, expr);\n       break;"}, {"sha": "12ebe4ab54b0be70597152b1595282ae220dc720", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db5d687b485630201b905fae8f54cf39c65cc6a/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=3db5d687b485630201b905fae8f54cf39c65cc6a", "patch": "@@ -3740,10 +3740,7 @@ gfc_trans_where_assign (gfc_expr *expr1, gfc_expr *expr2,\n   /* Translate the expression.  */\n   gfc_conv_expr (&rse, expr2);\n   if (lss != gfc_ss_terminator && loop.temp_ss != NULL)\n-    {\n-      gfc_conv_tmp_array_ref (&lse);\n-      gfc_advance_se_ss_chain (&lse);\n-    }\n+    gfc_conv_tmp_array_ref (&lse);\n   else\n     gfc_conv_expr (&lse, expr1);\n \n@@ -3796,7 +3793,6 @@ gfc_trans_where_assign (gfc_expr *expr1, gfc_expr *expr2,\n           lse.ss = lss;\n \n           gfc_conv_tmp_array_ref (&rse);\n-          gfc_advance_se_ss_chain (&rse);\n           gfc_conv_expr (&lse, expr1);\n \n           gcc_assert (lse.ss == gfc_ss_terminator\n@@ -4201,23 +4197,17 @@ gfc_trans_where_3 (gfc_code * cblock, gfc_code * eblock)\n \n   gfc_conv_expr (&tsse, tsrc);\n   if (tdss != gfc_ss_terminator && loop.temp_ss != NULL)\n-    {\n-      gfc_conv_tmp_array_ref (&tdse);\n-      gfc_advance_se_ss_chain (&tdse);\n-    }\n+    gfc_conv_tmp_array_ref (&tdse);\n   else\n     gfc_conv_expr (&tdse, tdst);\n \n   if (eblock)\n     {\n       gfc_conv_expr (&esse, esrc);\n       if (edss != gfc_ss_terminator && loop.temp_ss != NULL)\n-        {\n-          gfc_conv_tmp_array_ref (&edse);\n-          gfc_advance_se_ss_chain (&edse);\n-        }\n+\tgfc_conv_tmp_array_ref (&edse);\n       else\n-        gfc_conv_expr (&edse, edst);\n+\tgfc_conv_expr (&edse, edst);\n     }\n \n   tstmt = gfc_trans_scalar_assign (&tdse, &tsse, tdst->ts, false, false, true);"}]}