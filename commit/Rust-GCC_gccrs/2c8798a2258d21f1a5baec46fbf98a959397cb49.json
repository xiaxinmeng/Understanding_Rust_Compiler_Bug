{"sha": "2c8798a2258d21f1a5baec46fbf98a959397cb49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM4Nzk4YTIyNThkMjFmMWE1YmFlYzQ2ZmJmOThhOTU5Mzk3Y2I0OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-01-25T20:03:16Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-01-25T20:03:16Z"}, "message": "rtlanal.c (canonicalize_condition): Split out duplicated mode check.\n\ngcc/\n\t* rtlanal.c (canonicalize_condition): Split out duplicated mode check.\n\tHandle XOR.\n\ngcc/testsuite/\n\t* gcc.dg/unroll_1.c: Add -fenable-rtl-loop2.\n\nFrom-SVN: r207076", "tree": {"sha": "48c5d2f211d3cdf032dcde076acbd7b6b5fae7c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48c5d2f211d3cdf032dcde076acbd7b6b5fae7c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c8798a2258d21f1a5baec46fbf98a959397cb49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c8798a2258d21f1a5baec46fbf98a959397cb49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c8798a2258d21f1a5baec46fbf98a959397cb49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c8798a2258d21f1a5baec46fbf98a959397cb49/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "746cd71961feb948a9fb9ce819d2e3f6bc87a96f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/746cd71961feb948a9fb9ce819d2e3f6bc87a96f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/746cd71961feb948a9fb9ce819d2e3f6bc87a96f"}], "stats": {"total": 62, "additions": 41, "deletions": 21}, "files": [{"sha": "563642e5340cc1b8708a75692b4f621392464022", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c8798a2258d21f1a5baec46fbf98a959397cb49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c8798a2258d21f1a5baec46fbf98a959397cb49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c8798a2258d21f1a5baec46fbf98a959397cb49", "patch": "@@ -1,3 +1,8 @@\n+2014-01-25  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* rtlanal.c (canonicalize_condition): Split out duplicated mode check.\n+\tHandle XOR.\n+\n 2014-01-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* print-rtl.c (in_call_function_usage): New var."}, {"sha": "7a9efecdddac2e80814504e2cae0adc1fe1594fa", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 31, "deletions": 20, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c8798a2258d21f1a5baec46fbf98a959397cb49/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c8798a2258d21f1a5baec46fbf98a959397cb49/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=2c8798a2258d21f1a5baec46fbf98a959397cb49", "patch": "@@ -5051,23 +5051,24 @@ canonicalize_condition (rtx insn, rtx cond, int reverse, rtx *earliest,\n \n \t     ??? This mode check should perhaps look more like the mode check\n \t     in simplify_comparison in combine.  */\n-\n-\t  if ((GET_CODE (SET_SRC (set)) == COMPARE\n-\t       || (((code == NE\n-\t\t     || (code == LT\n-\t\t\t && val_signbit_known_set_p (inner_mode,\n-\t\t\t\t\t\t     STORE_FLAG_VALUE))\n+\t  if (((GET_MODE_CLASS (mode) == MODE_CC)\n+\t       != (GET_MODE_CLASS (inner_mode) == MODE_CC))\n+\t      && mode != VOIDmode\n+\t      && inner_mode != VOIDmode)\n+\t    break;\n+\t  if (GET_CODE (SET_SRC (set)) == COMPARE\n+\t      || (((code == NE\n+\t\t    || (code == LT\n+\t\t\t&& val_signbit_known_set_p (inner_mode,\n+\t\t\t\t\t\t    STORE_FLAG_VALUE))\n #ifdef FLOAT_STORE_FLAG_VALUE\n-\t\t     || (code == LT\n-\t\t\t && SCALAR_FLOAT_MODE_P (inner_mode)\n-\t\t\t && (fsfv = FLOAT_STORE_FLAG_VALUE (inner_mode),\n-\t\t\t     REAL_VALUE_NEGATIVE (fsfv)))\n+\t\t    || (code == LT\n+\t\t\t&& SCALAR_FLOAT_MODE_P (inner_mode)\n+\t\t\t&& (fsfv = FLOAT_STORE_FLAG_VALUE (inner_mode),\n+\t\t\t    REAL_VALUE_NEGATIVE (fsfv)))\n #endif\n-\t\t     ))\n-\t\t   && COMPARISON_P (SET_SRC (set))))\n-\t      && (((GET_MODE_CLASS (mode) == MODE_CC)\n-\t\t   == (GET_MODE_CLASS (inner_mode) == MODE_CC))\n-\t\t  || mode == VOIDmode || inner_mode == VOIDmode))\n+\t\t    ))\n+\t\t  && COMPARISON_P (SET_SRC (set))))\n \t    x = SET_SRC (set);\n \t  else if (((code == EQ\n \t\t     || (code == GE\n@@ -5080,15 +5081,25 @@ canonicalize_condition (rtx insn, rtx cond, int reverse, rtx *earliest,\n \t\t\t     REAL_VALUE_NEGATIVE (fsfv)))\n #endif\n \t\t     ))\n-\t\t   && COMPARISON_P (SET_SRC (set))\n-\t\t   && (((GET_MODE_CLASS (mode) == MODE_CC)\n-\t\t\t== (GET_MODE_CLASS (inner_mode) == MODE_CC))\n-\t\t       || mode == VOIDmode || inner_mode == VOIDmode))\n-\n+\t\t   && COMPARISON_P (SET_SRC (set)))\n \t    {\n \t      reverse_code = 1;\n \t      x = SET_SRC (set);\n \t    }\n+\t  else if ((code == EQ || code == NE)\n+\t\t   && GET_CODE (SET_SRC (set)) == XOR)\n+\t    /* Handle sequences like:\n+\n+\t       (set op0 (xor X Y))\n+\t       ...(eq|ne op0 (const_int 0))...\n+\n+\t       in which case:\n+\n+\t       (eq op0 (const_int 0)) reduces to (eq X Y)\n+\t       (ne op0 (const_int 0)) reduces to (ne X Y)\n+\n+\t       This is the form used by MIPS16, for example.  */\n+\t    x = SET_SRC (set);\n \t  else\n \t    break;\n \t}"}, {"sha": "957921914e9439a247ae2f01f080dccd812cbd64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c8798a2258d21f1a5baec46fbf98a959397cb49/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c8798a2258d21f1a5baec46fbf98a959397cb49/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c8798a2258d21f1a5baec46fbf98a959397cb49", "patch": "@@ -1,3 +1,7 @@\n+2014-01-25  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gcc.dg/unroll_1.c: Add -fenable-rtl-loop2.\n+\n 2014-01-25  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* gcc.dg/vect/vect-nop-move.c (main): Check for vect runtime."}, {"sha": "b1d3e7c69263761fd93d70ddde9406f6815233ef", "filename": "gcc/testsuite/gcc.dg/unroll_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c8798a2258d21f1a5baec46fbf98a959397cb49/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c8798a2258d21f1a5baec46fbf98a959397cb49/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funroll_1.c?ref=2c8798a2258d21f1a5baec46fbf98a959397cb49", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-rtl-loop2_unroll=stderr -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fdisable-tree-cunrolli -fenable-rtl-loop2_unroll\" } */\n+/* { dg-options \"-O2 -fdump-rtl-loop2_unroll=stderr -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fdisable-tree-cunrolli -fenable-rtl-loop2 -fenable-rtl-loop2_unroll\" } */\n \n unsigned a[100], b[100];\n inline void bar()"}]}