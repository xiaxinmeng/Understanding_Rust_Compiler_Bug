{"sha": "63468c37b4a0223bdb3341428790ebbc7c5bb725", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM0NjhjMzdiNGEwMjIzYmRiMzM0MTQyODc5MGViYmM3YzViYjcyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-11T19:15:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-11T19:15:46Z"}, "message": "Use `=' rather than `:=' when setting up CC, so that `gcc' can be defined as a foreign command if necessary...\n\nUse `=' rather than `:=' when setting up CC, so that `gcc' can be\ndefined as a foreign command if necessary; eliminate `set\nsymbol/scope=noGlobal' for same reason; use `=' with all other\nsymbols, for consistency; add explicit .obj extension to some lists of\nobject files passed to the linker; general cleanup of the command text\nechoed during execution.\n\nFrom-SVN: r7708", "tree": {"sha": "401404801f7401886cc0daacf16a70812a1015ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/401404801f7401886cc0daacf16a70812a1015ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63468c37b4a0223bdb3341428790ebbc7c5bb725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63468c37b4a0223bdb3341428790ebbc7c5bb725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63468c37b4a0223bdb3341428790ebbc7c5bb725", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63468c37b4a0223bdb3341428790ebbc7c5bb725/comments", "author": null, "committer": null, "parents": [{"sha": "842a1144f2cc027564f6914b0c8389f0151d5488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842a1144f2cc027564f6914b0c8389f0151d5488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842a1144f2cc027564f6914b0c8389f0151d5488"}], "stats": {"total": 69, "additions": 37, "deletions": 32}, "files": [{"sha": "5bf7066eef904110cf386d08f2d7085b296c89fc", "filename": "gcc/make-cc1.com", "status": "modified", "additions": 37, "deletions": 32, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63468c37b4a0223bdb3341428790ebbc7c5bb725/gcc%2Fmake-cc1.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63468c37b4a0223bdb3341428790ebbc7c5bb725/gcc%2Fmake-cc1.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-cc1.com?ref=63468c37b4a0223bdb3341428790ebbc7c5bb725", "patch": "@@ -3,7 +3,6 @@ $flnm = f$enviroment(\"PROCEDURE\")     ! get current procedure name\n $set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n $!\n $ v=f$verify(0)\n-$set symbol/scope=(nolocal,noglobal)\n $!\n $! CAUTION: If you want to link gcc-cc1 to the sharable image library\n $! VAXCRTL, see the notes in gcc.texinfo (or INSTALL) first.\n@@ -17,29 +16,36 @@ $!\t   After a successful build, restore those items and rebuild with gcc.\n $\n $!\tC compiler\n $!\n-$ CC\t:=\tgcc\n-$! CC\t:=\tcc\t!uncomment for VAXC\n-$ BISON\t:=\tbison\n-$ RENAME\t:=\trename/new_vers\n-$ LINK\t:=\tlink\n-$ EDIT :=\tedit\n+$ CC\t=\t\"gcc\"\n+$! CC\t=\t\"cc\"\t!uncomment for VAXC\n+$ BISON\t=\t\"bison\"\n+$ BISON_FLAGS=\t\"/Define/Verbose\"\n+$ RENAME=\t\"rename/New_Version\"\n+$ LINK\t=\t\"link\"\n+$ EDIT\t=\t\"edit\"\n+$ SEARCH=\t\"search\"\n+$ echo\t=\t\"write sys$output\"\n $!\n $!\tCompiler options\n $!\n-$ CFLAGS =\t\"/noVerbose/Debug/CC1=\"\"-mpcc-alignment\"\"\"\n+$ CFLAGS =\t\"/Debug/noVerbos/CC1=\"\"-mpcc-alignment\"\"\"\n $! CFLAGS =\t\"/noOpt\"\t\t!uncomment for VAXC\n $ CINCL1 =\t\"/Incl=[]\"\t\t\t!stage 1 -I flags\n $ CINCL2 =\t\"/Incl=([],[.ginclude])\"\t!stage 2,3,... flags\n $!\n $!\tLink options\n $!\n-$ LDFLAGS :=\t/nomap\n+$ LDFLAGS =\t\"/noMap\"\n $!\n $!\tLink libraries\n $!\n-$ LIBS :=\tgnu_cc:[000000]gcclib.olb/libr,sys$library:vaxcrtl.olb/libr\n-$! LIBS :=\talloca.obj,sys$library:vaxcrtl.olb/Libr   !uncomment for VAXC\n-$!\n+$ LIBS = \"gnu_cc:[000000]gcclib.olb/Libr,sys$library:vaxcrtl.olb/Libr\"\n+$! LIBS = \"alloca.obj,sys$library:vaxcrtl.olb/Libr\"\t!uncomment for VAXC\n+$\n+$!!!!!!!\n+$!\tNothing beyond this point should need any local configuration changes.\n+$!!!!!!!\n+$\n $!\n $!  First we figure out what needs to be done.  This is sort of like a limited\n $! make facility - the command line options specify exactly what components\n@@ -107,7 +113,6 @@ $goto loop\n $!\n $done:\n $if DO_DEFAULT.eq.1 then DO_CC1 = 1\n-$echo := write sys$Output\n $echo \"This command file will now perform the following actions:\n $if DO_LINK.eq.1 then goto link_only\n $if DO_ALL.eq.1 then echo \"   Compile all language specific object modules.\"\n@@ -173,7 +178,7 @@ $ if f$search(\"alloca.obj\").nes.\"\" then -  !does .obj exist? is it up to date?\n     if f$cvtime(f$file_attributes(\"alloca.obj\",\"RDT\")).gts.-\n        f$cvtime(f$file_attributes(\"alloca.c\",\"RDT\")) then  goto skip_alloca\n $set verify\n-$ 'CC 'CFLAGS /define=\"STACK_DIRECTION=(-1)\" alloca.c\n+$ 'CC''CFLAGS'/Define=\"STACK_DIRECTION=(-1)\" alloca.c\n $!'f$verify(0)\n $skip_alloca:\n $!\n@@ -201,8 +206,8 @@ $! First build a couple of header files from the machine description\n $! These are used by many of the source modules, so we build them now.\n $!\n $set verify\n-$ 'CC 'CFLAGS rtl.C\n-$ 'CC 'CFLAGS obstack.C\n+$ 'CC''CFLAGS' rtl.C\n+$ 'CC''CFLAGS' obstack.C\n $!'f$verify(0)\n $! Generate insn-attr.h\n $\tcall generate insn-attr.h\n@@ -212,9 +217,9 @@ $\tcall generate insn-config.h\n $!\n $call compile independent.opt \"rtl,obstack,insn-attrtab\"\n $!\n-$\tcall generate insn-attrtab.c \"rtlanal,\"\n+$\tcall generate insn-attrtab.c \"rtlanal.obj,\"\n $set verify\n-$ 'CC 'CFLAGS insn-attrtab.c\n+$ 'CC''CFLAGS' insn-attrtab.c\n $!'f$verify(0)\n $\tendif\n $!\n@@ -290,8 +295,8 @@ $! CAUTION: If you want to link gcc-cc1* to the sharable image library\n $! VAXCRTL, see the notes in gcc.texinfo (or INSTALL) first.\n $!\n $set verify\n-$ link 'LDFLAGS' /exe=gcc-'compilername'  version.opt/opt, -\n-\t  'compilername'-objs.opt/opt, independent.opt/opt, -\n+$ 'LINK''LDFLAGS'/Exe=gcc-'compilername'.exe  version.opt/Opt,-\n+\t  'compilername'-objs.opt/Opt,independent.opt/Opt,-\n \t  'LIBS'\n $!'f$verify(0)\n $goto cloop\n@@ -337,24 +342,24 @@ $\tif (f$cvtime(f$file_attributes(\"''flnm'.Y\",\"RDT\")).les. -\n \t\tthen goto no_bison\n $yes_bison:\n $set verify\n-$\t 'BISON' /define /verbose 'flnm'.y\n+$\t 'BISON''BISON_FLAGS' 'flnm'.y\n $\t 'RENAME' 'flnm'_tab.c 'flnm'.c\n $\t 'RENAME' 'flnm'_tab.h 'flnm'.h\n-$       if flnm.eqs.\"cp-parse\"\n-$       then            ! fgrep '#define YYEMPTY' cp-parse.c >>cp-parse.h\n-$               open/append jfile$ cp-parse.h\n-$               search/exact/output=jfile$ cp-parse.c \"#define YYEMPTY\"\n-$               close jfile$\n-$       endif\n $!'f$verify(0)\n+$\tif flnm.eqs.\"cp-parse\"\n+$\tthen\t\t! fgrep '#define YYEMPTY' cp-parse.c >>cp-parse.h\n+$\t\topen/Append jfile$ cp-parse.h\n+$\t\t'SEARCH'/Exact/Output=jfile$ cp-parse.c \"#define YYEMPTY\"\n+$\t\tclose jfile$\n+$\tendif\n $no_bison:\n $\t echo \" (Ignore any warning about not finding file \"\"bison.simple\"\".)\"\n $\tendif\n $!\n $if f$extract(0,5,flnm).eqs.\"insn-\" then call generate 'flnm'.c\n $!\n $set verify\n-$ 'CC 'CFLAGS 'flnm'.c\n+$ 'CC''CFLAGS' 'flnm'.c\n $!'f$verify(0)\n $goto loop1\n $!\n@@ -384,8 +389,8 @@ $\texit 1\n $\tendif\n $root1=f$parse(f$extract(5,255,p1),,,\"NAME\")\n $\tset verify\n-$ 'CC 'CFLAGS GEN'root1'.C\n-$ link 'LDFLAGS' GEN'root1',rtl,obstack,'p2' -\n+$ 'CC''CFLAGS' GEN'root1'.C\n+$ 'LINK''LDFLAGS' GEN'root1'.OBJ,rtl.obj,obstack.obj,'p2' -\n \t  'LIBS'\n $!\t'f$verify(0)\n $!\n@@ -409,8 +414,8 @@ $\texit 1\n $\tendif\n $root1=f$parse(f$extract(3,255,p1),,,\"NAME\")\n $\tset verify\n-$ 'CC 'CFLAGS BI-'root1'.C\n-$ link 'LDFLAGS' BI-'root1','p2' -\n+$ 'CC''CFLAGS' BI-'root1'.C\n+$ 'LINK''LDFLAGS' BI-'root1'.OBJ,'p2' -\n \t  'LIBS'\n $!\t'f$verify(0)\n $!"}]}