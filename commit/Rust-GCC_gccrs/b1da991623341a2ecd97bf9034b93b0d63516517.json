{"sha": "b1da991623341a2ecd97bf9034b93b0d63516517", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFkYTk5MTYyMzM0MWEyZWNkOTdiZjkwMzRiOTNiMGQ2MzUxNjUxNw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-06T00:16:43Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-06T00:16:43Z"}, "message": "Daily bump.", "tree": {"sha": "d21a501a499b3fa3688b6e325681311d4c556eaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d21a501a499b3fa3688b6e325681311d4c556eaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1da991623341a2ecd97bf9034b93b0d63516517", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1da991623341a2ecd97bf9034b93b0d63516517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1da991623341a2ecd97bf9034b93b0d63516517", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1da991623341a2ecd97bf9034b93b0d63516517/comments", "author": null, "committer": null, "parents": [{"sha": "b07dd9b0d0e501a0083da79e2bca17041c007ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07dd9b0d0e501a0083da79e2bca17041c007ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b07dd9b0d0e501a0083da79e2bca17041c007ec8"}], "stats": {"total": 173, "additions": 172, "deletions": 1}, "files": [{"sha": "be2407d055e79af8b8a314e2714c2fd75385583c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=b1da991623341a2ecd97bf9034b93b0d63516517", "patch": "@@ -1 +1 @@\n-20210405\n+20210406"}, {"sha": "68ef2aa0e1b12a62d56e692cd8f6259af67fb49d", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=b1da991623341a2ecd97bf9034b93b0d63516517", "patch": "@@ -1,3 +1,21 @@\n+2021-04-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99906\n+\t* analyzer.cc (maybe_reconstruct_from_def_stmt): Fix NULL\n+\tdereference on calls with zero arguments.\n+\t* sm-malloc.cc (malloc_state_machine::on_stmt): When handling\n+\t__attribute__((nonnull)), only call get_diagnostic_tree if the\n+\tresult will be used.\n+\n+2021-04-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99886\n+\t* diagnostic-manager.cc\n+\t(diagnostic_manager::prune_interproc_events): Use signed integers\n+\twhen subtracting one from path->num_events ().\n+\t(diagnostic_manager::consolidate_conditions): Likewise.  Convert\n+\tnext_idx to a signed int.\n+\n 2021-04-01  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic-manager.cc (diagnostic_manager::add_diagnostic): Make"}, {"sha": "85e248941ec1f02e36fcbf7636ee00dd64a19de5", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b1da991623341a2ecd97bf9034b93b0d63516517", "patch": "@@ -1,3 +1,11 @@\n+2021-04-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.c (is_simple_enum): Minor tweaks.\n+\t(dump_ada_enum_type): Add TYPE and PARENT parameters.  For non-simple\n+\tenumeral types use again the type name for the enumeration constants.\n+\t(dump_ada_node): Adjust call to dump_ada_enum_type.\n+\t(dump_nested_type): Likewise.\n+\n 2021-04-01  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/98481"}, {"sha": "54bccc1f419034155886971bb8c201e1e5faca8b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b1da991623341a2ecd97bf9034b93b0d63516517", "patch": "@@ -1,3 +1,51 @@\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96311\n+\t* typeck.c (check_return_expr): Call mark_exp_read in dependent\n+\tcase.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/98440\n+\t* typeck.c (build_reinterpret_cast_1): Don't perform\n+\ttemporary materialization.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95317\n+\t* pt.c (lookup_template_class_1): Do tsubst_enum when\n+\ttsubsting a generic lambda.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95870\n+\t* pt.c (enclosing_instantiation_of): Compare DECL_SOURCE_LOCATION if\n+\tthere is no enclosing non-lambda function.\n+\n+2021-04-05  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99380\n+\t* module.cc (name_pending_imports): Drop 'atend' parm.  Don't\n+\tquery export when not needed.\n+\t(preprocess_module, preprocessed_module): Adjust.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/99066\n+\t* pt.c (mark_decl_instantiated): Set DECL_EXTERNAL.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/99201\n+\t* pt.c (class el_data): Add visited field.\n+\t(extract_local_specs): Pass it to cp_walk_tree.\n+\t(extract_locals_r): Walk into the body of a lambda.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\t* ptree.c (cxx_print_decl): Check DECL_MODULE_IMPORT_P on\n+\ttemplate result.\n+\n 2021-04-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/99643"}, {"sha": "93ec8194685a816c79c3139579031fd7f8a06b2a", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=b1da991623341a2ecd97bf9034b93b0d63516517", "patch": "@@ -1,3 +1,43 @@\n+2021-04-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/99914\n+\t* d-lang.cc (d_init): Disable flag_weak_templates if no support for\n+\tweak or one-only symbols.\n+\t* d-tree.h (VAR_OR_FUNCTION_DECL_CHECK): New macro.\n+\t(DECL_INSTANTIATED): New macro.\n+\t(d_comdat_linkage): Remove declaration.\n+\t(d_linkonce_linkage): Remove declaration.\n+\t(set_linkage_for_decl): New declaration.\n+\t* decl.cc (DeclVisitor::visit (StructDeclaration *)): Replace call to\n+\td_linkonce_linkage with setting DECL_INSTANTIATED.\n+\t(DeclVisitor::visit (ClassDeclaration *)): Likewise.\n+\t(DeclVisitor::visit (EnumDeclaration *)): Likewise.\n+\t(DeclVisitor::visit (InterfaceDeclaration *)): Remove call to\n+\td_linkonce_linkage.\n+\t(get_symbol_decl): Call set_linkage_for_decl instead of\n+\td_linkonce_linkage.\n+\t(d_finish_decl): Call set_linkage_for_decl.\n+\t(d_comdat_linkage): Made function static.  Only set DECL_COMDAT for\n+\tDECL_INSTANTIATED decls.\n+\t(d_linkonce_linkage): Remove function.\n+\t(d_weak_linkage): New function.\n+\t(set_linkage_for_decl): New function.\n+\t* gdc.texi (Runtime Options): Rename -fno-weak to -fno-weak-templates,\n+\tupdate documentation of option.\n+\t* lang.opt (fweak): Rename option to ...\n+\t(fweak-templates): ... this.  Update help string.\n+\t* modules.cc (get_internal_fn): Add Prot parameter.  Set generated\n+\tfunction flag.\n+\t(build_internal_fn): Update call to get_internal_fn.\n+\t(build_dso_cdtor_fn): Likewise.\n+\t(register_moduleinfo): Call d_finish_decl on dso_slot_node and\n+\tdso_initialized_node.\n+\t* typeinfo.cc (TypeInfoVisitor::internal_reference): Call\n+\tset_linkage_for_decl instead of d_comdat_linkage.\n+\t(TypeInfoDeclVisitor::visit (TypeInfoDeclaration *)): Remove calls to\n+\td_linkonce_linkage and d_comdat_linkage.\n+\t(get_cpp_typeinfo_decl): Likewise.\n+\n 2021-04-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* dmd/MERGE: Merge upstream dmd 3b808e838."}, {"sha": "0a295b058d7c1ed4aa92e0394c19e8dca3a13476", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1da991623341a2ecd97bf9034b93b0d63516517/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1da991623341a2ecd97bf9034b93b0d63516517", "patch": "@@ -1,3 +1,54 @@\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96311\n+\t* g++.dg/cpp1y/lambda-generic-Wunused.C: New test.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/rv-cast6.C: Expect reinterpret_cast error.\n+\t* g++.dg/cpp0x/reinterpret_cast2.C: Adjust message.\n+\t* g++.old-deja/g++.jason/rvalue3.C: Likewise.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95317\n+\t* g++.dg/cpp1y/lambda-generic-enum1.C: New test.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95870\n+\t* g++.dg/cpp0x/lambda/lambda-nsdmi10.C: New test.\n+\n+2021-04-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99906\n+\t* gcc.dg/analyzer/pr99906.c: New test.\n+\n+2021-04-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/99886\n+\t* gcc.dg/analyzer/pr99886.c: New test.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/99066\n+\t* g++.dg/cpp0x/extern_template-6.C: New test.\n+\n+2021-04-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/99201\n+\t* g++.dg/cpp1z/constexpr-if-lambda4.C: New test.\n+\n+2021-04-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/99914\n+\t* gdc.dg/pr99914.d: New test.\n+\n+2021-04-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gcc.dg/ipa/propmalloc-4.c: Add -fdelete-null-pointer-checks.\n+\t* gcc.dg/tree-ssa/evrp11.c: Likewise.\n+\n 2021-04-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/99643"}, {"sha": "1c534603cdd6fb88e0c30f1d278dfab06386a433", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1da991623341a2ecd97bf9034b93b0d63516517/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1da991623341a2ecd97bf9034b93b0d63516517/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=b1da991623341a2ecd97bf9034b93b0d63516517", "patch": "@@ -1,3 +1,9 @@\n+2021-04-05  Florian Weimer  <fweimer@redhat.com>\n+\t    Michael Meissner   <meissner@linux.ibm.com>\n+\n+\t* config/rs6000/t-float128 (fp128_ppc_funcs): Add decimal floating\n+\tpoint functions for $(decimal_float) only.\n+\n 2021-04-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/97653"}]}