{"sha": "c079cbacb722ed8d9219a4c0518e87fdb1b70b3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA3OWNiYWNiNzIyZWQ4ZDkyMTlhNGMwNTE4ZTg3ZmRiMWI3MGIzYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-23T13:56:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-23T13:56:34Z"}, "message": "re PR tree-optimization/66636 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1590)\n\n2015-06-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66636\n\t* tree-vect-stmts.c (vectorizable_store): Properly compute the\n\tdef type for further defs for strided stores.\n\n\t* gcc.dg/vect/pr66636.c: New testcase.\n\nFrom-SVN: r224841", "tree": {"sha": "11289929086e99170604d38a936f84634840f668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11289929086e99170604d38a936f84634840f668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "224b491b09a88cff2f91b15b763fb785114655af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224b491b09a88cff2f91b15b763fb785114655af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/224b491b09a88cff2f91b15b763fb785114655af"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "bc1d0fd9ac8c75fb69bbe9b0d59150cf9adcdd0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c079cbacb722ed8d9219a4c0518e87fdb1b70b3a", "patch": "@@ -1,3 +1,9 @@\n+2015-06-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66636\n+\t* tree-vect-stmts.c (vectorizable_store): Properly compute the\n+\tdef type for further defs for strided stores.\n+\n 2015-06-23  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/nvptx/nvptx.md (sel_true<mode>, sel_false<mode>): New"}, {"sha": "65ad0c482c19e8a5e1e5dbb24d09178c1c50d5cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c079cbacb722ed8d9219a4c0518e87fdb1b70b3a", "patch": "@@ -1,3 +1,8 @@\n+2015-06-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66636\n+\t* gcc.dg/vect/pr66636.c: New testcase.\n+\n 2015-06-23  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.dg/fold-minus-4.c: New test."}, {"sha": "7e6e5f6752e5001cbd8b6fa60aad82e442c5f36b", "filename": "gcc/testsuite/gcc.dg/vect/pr66636.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66636.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66636.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr66636.c?ref=c079cbacb722ed8d9219a4c0518e87fdb1b70b3a", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-additional-options \"-mavx2\" { target avx_runtime } } */\n+\n+#include \"tree-vect.h\"\n+\n+extern void abort (void);\n+\n+struct X { double x; double y; };\n+\n+void foo (struct X *x, double px, int s)\n+{\n+  int i;\n+  for (i = 0; i < 256; ++i)\n+    {\n+      x[i*s].x = px;\n+      x[i*s].y = i + px;\n+    }\n+}\n+\n+int main()\n+{\n+  struct X x[512];\n+  int i;\n+  check_vect ();\n+  foo (x, 1., 2);\n+  if (x[0].x != 1. || x[0].y != 1.\n+      || x[510].x != 1. || x[510].y != 256.)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "cac4768af0bbfb183c3e05c2cff5babfad5a9849", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c079cbacb722ed8d9219a4c0518e87fdb1b70b3a/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=c079cbacb722ed8d9219a4c0518e87fdb1b70b3a", "patch": "@@ -5365,7 +5365,11 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t\t  if (slp)\n \t\t    vec_oprnd = vec_oprnds[j];\n \t\t  else\n-\t\t    vec_oprnd = vect_get_vec_def_for_stmt_copy (dt, vec_oprnd);\n+\t\t    {\n+\t\t      vect_is_simple_use (vec_oprnd, NULL, loop_vinfo,\n+\t\t\t\t\t  bb_vinfo, &def_stmt, &def, &dt);\n+\t\t      vec_oprnd = vect_get_vec_def_for_stmt_copy (dt, vec_oprnd);\n+\t\t    }\n \t\t}\n \n \t      for (i = 0; i < nstores; i++)"}]}