{"sha": "350c0fe7ea7052ed84d47bbb12ead214e6c8a726", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUwYzBmZTdlYTcwNTJlZDg0ZDQ3YmJiMTJlYWQyMTRlNmM4YTcyNg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2012-11-07T22:11:08Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2012-11-07T22:11:08Z"}, "message": "re PR rtl-optimization/55122 (ICE: maximum number of LRA constraint passes is achieved (15))\n\n2012-11-07  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/55122\n\t* lra-constraints.c (match_reload): Sync values for dead input\n\tpseudos.\n\n2012-11-07  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/55122\n\t* gcc.dg/pr55122.c: New test.\n\nFrom-SVN: r193310", "tree": {"sha": "6e701ababc34944ad9493d12f7ada4597675a768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e701ababc34944ad9493d12f7ada4597675a768"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/350c0fe7ea7052ed84d47bbb12ead214e6c8a726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350c0fe7ea7052ed84d47bbb12ead214e6c8a726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350c0fe7ea7052ed84d47bbb12ead214e6c8a726", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49f20f70ef24b60ceb25ac915e902700e55b9d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f20f70ef24b60ceb25ac915e902700e55b9d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49f20f70ef24b60ceb25ac915e902700e55b9d00"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "294b3a56bb43895ffdbd4b6cb40df05889f932f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=350c0fe7ea7052ed84d47bbb12ead214e6c8a726", "patch": "@@ -1,3 +1,9 @@\n+2012-11-07  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/55122\n+\t* lra-constraints.c (match_reload): Sync values for dead input\n+\tpseudos.\n+\n 2012-11-07  Richard Henderson  <rth@redhat.com>\n \n \t* trans-mem.c (pass_ipa_tm): Don't use TODO_update_ssa."}, {"sha": "bcba59094606e2b617c15d511bc5daa2fe761c6d", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=350c0fe7ea7052ed84d47bbb12ead214e6c8a726", "patch": "@@ -682,6 +682,11 @@ match_reload (signed char out, signed char *ins, enum reg_class goal_class,\n \t    new_out_reg = gen_lowpart_SUBREG (outmode, reg);\n \t  else\n \t    new_out_reg = gen_rtx_SUBREG (outmode, reg, 0);\n+\t  /* If the input reg is dying here, we can use the same hard\n+\t     register for REG and IN_RTX.  */\n+\t  if (REG_P (in_rtx)\n+\t      && find_regno_note (curr_insn, REG_DEAD, REGNO (in_rtx)))\n+\t    lra_reg_info[REGNO (reg)].val = lra_reg_info[REGNO (in_rtx)].val;\n \t}\n       else\n \t{\n@@ -698,6 +703,19 @@ match_reload (signed char out, signed char *ins, enum reg_class goal_class,\n \t     it at the end of LRA work.  */\n \t  clobber = emit_clobber (new_out_reg);\n \t  LRA_TEMP_CLOBBER_P (PATTERN (clobber)) = 1;\n+\t  if (GET_CODE (in_rtx) == SUBREG)\n+\t    {\n+\t      rtx subreg_reg = SUBREG_REG (in_rtx);\n+\t      \n+\t      /* If SUBREG_REG is dying here and sub-registers IN_RTX\n+\t\t and NEW_IN_REG are similar, we can use the same hard\n+\t\t register for REG and SUBREG_REG.  */\n+\t      if (REG_P (subreg_reg) && GET_MODE (subreg_reg) == outmode\n+\t\t  && SUBREG_BYTE (in_rtx) == SUBREG_BYTE (new_in_reg)\n+\t\t  && find_regno_note (curr_insn, REG_DEAD, REGNO (subreg_reg)))\n+\t\tlra_reg_info[REGNO (reg)].val\n+\t\t  = lra_reg_info[REGNO (subreg_reg)].val;\n+\t    }\n \t}\n     }\n   else"}, {"sha": "6ceec1f829ea61c7781801d6a4c771659fc7c851", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=350c0fe7ea7052ed84d47bbb12ead214e6c8a726", "patch": "@@ -1,3 +1,8 @@\n+2012-11-07  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/55122\n+\t* gcc.dg/pr55122.c: New test.\n+\n 2012-11-07  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.target/powerpc/pr46728-[1234578].c: Tighten regex to ignore"}, {"sha": "a290ae001a5b5f71c40bfc8ffb46ca7ef75eed3c", "filename": "gcc/testsuite/gcc.dg/pr55122.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55122.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350c0fe7ea7052ed84d47bbb12ead214e6c8a726/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55122.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55122.c?ref=350c0fe7ea7052ed84d47bbb12ead214e6c8a726", "patch": "@@ -0,0 +1,14 @@\n+/* PR rtl-optimization/55122 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+int i, a;\n+unsigned long long b;\n+\n+void f(void)\n+{\n+    for(i = 0; i < 15; i++)\n+        b *= b;\n+\n+    b *= a ? 0 : b;\n+}"}]}