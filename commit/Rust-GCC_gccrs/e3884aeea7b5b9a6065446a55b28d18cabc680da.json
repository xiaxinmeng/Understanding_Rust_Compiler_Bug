{"sha": "e3884aeea7b5b9a6065446a55b28d18cabc680da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM4ODRhZWVhN2I1YjlhNjA2NTQ0NmE1NWIyOGQxOGNhYmM2ODBkYQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@cygnus.com", "date": "1999-05-08T22:21:50Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "1999-05-08T22:21:50Z"}, "message": "DateFormat.java (computeInstance): Separate time and date styles.\n\n\t* java/text/DateFormat.java (computeInstance): Separate time\n\tand date styles.\n\t(getDateTimeInstance): Ditto.\n\t(getDateTimeInstance(int,int)): New method.\n        * Makefile.in: Rebuilt.\n\t* Makefile.am (ordinary_java_source_files): Add new classes.\n\t* java/util/PropertyResourceBundle.java: New file.\n\t* gnu/gcj/util/EnumerationChain.java: New file.\n\nFrom-SVN: r26842", "tree": {"sha": "9c426e950b4514145123e218f2d88bb529e7d72f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c426e950b4514145123e218f2d88bb529e7d72f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3884aeea7b5b9a6065446a55b28d18cabc680da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3884aeea7b5b9a6065446a55b28d18cabc680da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3884aeea7b5b9a6065446a55b28d18cabc680da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3884aeea7b5b9a6065446a55b28d18cabc680da/comments", "author": null, "committer": null, "parents": [{"sha": "81a1c8c397b596fe7cb87338b32d189aa1bce270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a1c8c397b596fe7cb87338b32d189aa1bce270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a1c8c397b596fe7cb87338b32d189aa1bce270"}], "stats": {"total": 161, "additions": 148, "deletions": 13}, "files": [{"sha": "d69c05977cd40da5791a020da572ab023dc19083", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e3884aeea7b5b9a6065446a55b28d18cabc680da", "patch": "@@ -1,3 +1,16 @@\n+1999-05-9  Anthony Green  <green@cygnus.com>\n+\n+\t* java/text/DateFormat.java (computeInstance): Separate time\n+\tand date styles.\n+\t(getDateTimeInstance): Ditto.\n+\t(getDateTimeInstance(int,int)): New method.\n+\n+        * Makefile.in: Rebuilt.\n+\t* Makefile.am (ordinary_java_source_files): Add new classes.\n+\n+\t* java/util/PropertyResourceBundle.java: New file.\n+\t* gnu/gcj/util/EnumerationChain.java: New file.\n+\n 1999-05-07  Tom Tromey  <tromey@cygnus.com>\n \n \t* acconfig.h (GCJVERSION): New undef."}, {"sha": "260baa15716aea8702679accc249818936ed7d40", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=e3884aeea7b5b9a6065446a55b28d18cabc680da", "patch": "@@ -422,6 +422,7 @@ gnu/gcj/protocol/file/Handler.java \\\n gnu/gcj/protocol/http/Connection.java \\\n gnu/gcj/protocol/http/Handler.java \\\n gnu/gcj/RawData.java \\\n+gnu/gcj/util/EnumerationChain.java \\\n java/io/BufferedInputStream.java \\\n java/io/BufferedOutputStream.java \\\n java/io/BufferedReader.java \\\n@@ -617,6 +618,7 @@ java/util/NoSuchElementException.java \\\n java/util/Observable.java \\\n java/util/Observer.java\t\\\n java/util/Properties.java \\\n+java/util/PropertyResourceBundle.java \\\n java/util/Random.java \\\n java/util/ResourceBundle.java \\\n java/util/SimpleTimeZone.java \\"}, {"sha": "e45a1e2046a7d4d6029a4adf2bcd6c6098f1b148", "filename": "libjava/Makefile.in", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=e3884aeea7b5b9a6065446a55b28d18cabc680da", "patch": "@@ -285,6 +285,7 @@ gnu/gcj/protocol/file/Handler.java \\\n gnu/gcj/protocol/http/Connection.java \\\n gnu/gcj/protocol/http/Handler.java \\\n gnu/gcj/RawData.java \\\n+gnu/gcj/util/EnumerationChain.java \\\n java/io/BufferedInputStream.java \\\n java/io/BufferedOutputStream.java \\\n java/io/BufferedReader.java \\\n@@ -480,6 +481,7 @@ java/util/NoSuchElementException.java \\\n java/util/Observable.java \\\n java/util/Observer.java\t\\\n java/util/Properties.java \\\n+java/util/PropertyResourceBundle.java \\\n java/util/Random.java \\\n java/util/ResourceBundle.java \\\n java/util/SimpleTimeZone.java \\\n@@ -671,6 +673,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/text/LocaleData_en_US.P \\\n .deps/gnu/gcj/text/SentenceBreakIterator.P \\\n .deps/gnu/gcj/text/WordBreakIterator.P \\\n+.deps/gnu/gcj/util/EnumerationChain.P \\\n .deps/java/io/BufferedInputStream.P \\\n .deps/java/io/BufferedOutputStream.P .deps/java/io/BufferedReader.P \\\n .deps/java/io/BufferedWriter.P .deps/java/io/ByteArrayInputStream.P \\\n@@ -809,12 +812,13 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/util/MissingResourceException.P \\\n .deps/java/util/NoSuchElementException.P .deps/java/util/Observable.P \\\n .deps/java/util/Observer.P .deps/java/util/Properties.P \\\n-.deps/java/util/Random.P .deps/java/util/ResourceBundle.P \\\n-.deps/java/util/SimpleTimeZone.P .deps/java/util/Stack.P \\\n-.deps/java/util/StringTokenizer.P .deps/java/util/TimeZone.P \\\n-.deps/java/util/TooManyListenersException.P .deps/java/util/Vector.P \\\n-.deps/java/util/zip/Adler32.P .deps/java/util/zip/CRC32.P \\\n-.deps/java/util/zip/Checksum.P .deps/java/util/zip/Deflater.P \\\n+.deps/java/util/PropertyResourceBundle.P .deps/java/util/Random.P \\\n+.deps/java/util/ResourceBundle.P .deps/java/util/SimpleTimeZone.P \\\n+.deps/java/util/Stack.P .deps/java/util/StringTokenizer.P \\\n+.deps/java/util/TimeZone.P .deps/java/util/TooManyListenersException.P \\\n+.deps/java/util/Vector.P .deps/java/util/zip/Adler32.P \\\n+.deps/java/util/zip/CRC32.P .deps/java/util/zip/Checksum.P \\\n+.deps/java/util/zip/Deflater.P \\\n .deps/java/util/zip/DeflaterOutputStream.P \\\n .deps/java/util/zip/InflaterInputStream.P \\\n .deps/java/util/zip/ZipConstants.P .deps/java/util/zip/ZipEntry.P \\"}, {"sha": "6828439d53071851f6e6ad227052f1a8e79f283f", "filename": "libjava/gnu/gcj/util/EnumerationChain.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2Fgnu%2Fgcj%2Futil%2FEnumerationChain.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2Fgnu%2Fgcj%2Futil%2FEnumerationChain.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Futil%2FEnumerationChain.java?ref=e3884aeea7b5b9a6065446a55b28d18cabc680da", "patch": "@@ -0,0 +1,52 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.util;\n+\n+import java.util.Enumeration;\n+import java.util.NoSuchElementException;\n+\n+public class EnumerationChain implements Enumeration\n+{\n+  private Enumeration first_;\n+  private Enumeration second_;\n+\n+  public EnumerationChain (Enumeration first, Enumeration second)\n+    {\n+      if (first == null\n+          || second == null)\n+        throw new NullPointerException();\n+\n+      first_ = first;\n+      second_ = second;\n+    }\n+\n+  public synchronized boolean hasMoreElements()\n+    {\n+      if (first_ == null)\n+        return false;\n+      else\n+        return first_.hasMoreElements();\n+    }\n+\n+  public synchronized Object nextElement() throws NoSuchElementException\n+    {\n+      while (first_ != null)\n+        {\n+          if (! first_.hasMoreElements())\n+            {\n+              first_ = second_;\n+              second_ = null;\n+            }\n+          else \n+            return first_.nextElement();\n+        }\n+      \n+      throw new NoSuchElementException();\n+    }\n+}"}, {"sha": "a84113368c3ec293a7bf5d65aa86ebec18d86274", "filename": "libjava/java/text/DateFormat.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2Fjava%2Ftext%2FDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2Fjava%2Ftext%2FDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormat.java?ref=e3884aeea7b5b9a6065446a55b28d18cabc680da", "patch": "@@ -93,6 +93,15 @@ public Calendar getCalendar ()\n   private static final DateFormat computeInstance (int style, Locale loc,\n \t\t\t\t\t\t   boolean use_date,\n \t\t\t\t\t\t   boolean use_time)\n+  {\n+    return computeInstance (style, style, loc, use_date, use_time);\n+  }\n+\n+  private static final DateFormat computeInstance (int dateStyle, \n+\t\t\t\t\t\t   int timeStyle,\n+\t\t\t\t\t\t   Locale loc,\n+\t\t\t\t\t\t   boolean use_date,\n+\t\t\t\t\t\t   boolean use_time)\n   {\n     ResourceBundle res;\n     try\n@@ -108,7 +117,7 @@ private static final DateFormat computeInstance (int style, Locale loc,\n     if (use_date)\n       {\n \tString name, def;\n-\tswitch (style)\n+\tswitch (dateStyle)\n \t  {\n \t  case FULL:\n \t    name = \"fullDateFormat\";\n@@ -147,7 +156,7 @@ private static final DateFormat computeInstance (int style, Locale loc,\n \t  pattern += \" \";\n \n \tString name, def;\n-\tswitch (style)\n+\tswitch (timeStyle)\n \t  {\n \t  case FULL:\n \t    name = \"fullTimeFormat\";\n@@ -201,23 +210,31 @@ public static final DateFormat getDateInstance (int style, Locale loc)\n \n   public static final DateFormat getDateTimeInstance ()\n   {\n-    return getDateTimeInstance (DEFAULT, Locale.getDefault());\n+    return getDateTimeInstance (DEFAULT, DEFAULT, Locale.getDefault());\n   }\n \n   public static final DateFormat getDateTimeInstance (int style)\n   {\n-    return getDateTimeInstance (style, Locale.getDefault());\n+    return getDateTimeInstance (style, style, Locale.getDefault());\n+  }\n+\n+  public static final DateFormat getDateTimeInstance (int dateStyle, \n+\t\t\t\t\t\t      int timeStyle)\n+  {\n+    return getDateTimeInstance (dateStyle, timeStyle, Locale.getDefault());\n   }\n \n-  public static final DateFormat getDateTimeInstance (int style, Locale loc)\n+  public static final DateFormat getDateTimeInstance (int dateStyle, \n+\t\t\t\t\t\t      int timeStyle, \n+\t\t\t\t\t\t      Locale loc)\n   {\n-    return computeInstance (style, loc, true, true);\n+    return computeInstance (dateStyle, timeStyle, loc, true, true);\n   }\n \n   public static final DateFormat getInstance ()\n   {\n     // JCL book says SHORT.\n-    return getDateTimeInstance (SHORT, Locale.getDefault());\n+    return getDateTimeInstance (SHORT, SHORT, Locale.getDefault());\n   }\n \n   public NumberFormat getNumberFormat ()"}, {"sha": "706e42794430e4c18467e394bbf6dcba101cef2b", "filename": "libjava/java/util/PropertyResourceBundle.java", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3884aeea7b5b9a6065446a55b28d18cabc680da/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java?ref=e3884aeea7b5b9a6065446a55b28d18cabc680da", "patch": "@@ -0,0 +1,47 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util;\n+\n+import java.io.InputStream;\n+import java.io.IOException;\n+import gnu.gcj.util.EnumerationChain;\n+\n+/**\n+ * @author Anthony Green <green@cygnus.com>\n+ * @date April 29, 1999.\n+ */\n+\n+/* Written using \"Java Class Libraries\", 2nd edition, ISBN 0-201-31002-3,\n+ * and \"The Java Language Specification\", ISBN 0-201-63451-1.  */\n+\n+public class PropertyResourceBundle extends ResourceBundle\n+{\n+  private Properties properties;\n+\n+  public PropertyResourceBundle (InputStream pstream) throws IOException\n+    {\n+      // Initialize and load our Properties.\n+      properties = new Properties();\n+      properties.load(pstream);\n+    }\n+\n+  public Enumeration getKeys()\n+    {\n+      if (parent == null)\n+        return properties.propertyNames();\n+      else\n+        return new EnumerationChain (properties.propertyNames(),\n+                                     parent.getKeys ());\n+    }\n+\n+  protected Object handleGetObject (String key)\n+    {\n+      return properties.getProperty(key);\n+    }\n+}    "}]}