{"sha": "5e961dba46a84b5c4ba5086d05db6ff449d8682f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU5NjFkYmE0NmE4NGI1YzRiYTUwODZkMDVkYjZmZjQ0OWQ4NjgyZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-14T11:07:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-14T11:52:47Z"}, "message": "libstdc++: Improve comments in std::string tests\n\nThe COW std::string does support some features of C++11 allocators, just\nnot propagation. Change some comments in the tests to be more precise\nabout that.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/21_strings/basic_string/allocator/char/copy.cc: Make\n\tcomment more precise about what isn't supported by COW strings.\n\t* testsuite/21_strings/basic_string/allocator/char/copy_assign.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/char/move.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/char/move_assign.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/char/noexcept.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/char/operator_plus.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/char/swap.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/copy.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/move.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/noexcept.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/operator_plus.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/swap.cc:\n\tLikewise.", "tree": {"sha": "d890fa24a0945a7a9d1e806cc6e91cf2c65d00ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d890fa24a0945a7a9d1e806cc6e91cf2c65d00ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e961dba46a84b5c4ba5086d05db6ff449d8682f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e961dba46a84b5c4ba5086d05db6ff449d8682f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e961dba46a84b5c4ba5086d05db6ff449d8682f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e961dba46a84b5c4ba5086d05db6ff449d8682f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ae9ddd480f97ba16b9b9d11d333e1252b820166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae9ddd480f97ba16b9b9d11d333e1252b820166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae9ddd480f97ba16b9b9d11d333e1252b820166"}], "stats": {"total": 88, "additions": 44, "deletions": 44}, "files": [{"sha": "9972cfbdc463f1714fb80652456fbceba91a0adf", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/copy.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,24 +5,24 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n- \n+\n using C = char;\n const C c = 'a';\n using traits = std::char_traits<C>;"}, {"sha": "038af4d8e059660e4a4f3dda6757800db214e7c9", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/copy_assign.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fcopy_assign.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,25 +5,25 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n #include <ext/throw_allocator.h>\n- \n+\n using C = char;\n const C c = 'a';\n using traits = std::char_traits<C>;"}, {"sha": "11afd4fce471bbb1f493398e712e721a683f6114", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/move.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -16,7 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>"}, {"sha": "6a2db79a14a56226b7c51d24409f05640f9e1c28", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/move_assign.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,24 +5,24 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n- \n+\n using C = char;\n const C c = 'a';\n using traits = std::char_traits<C>;"}, {"sha": "e194048ca75fb93cdb333c86953bbc97003b0bd3", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/noexcept.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fnoexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fnoexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fnoexcept.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,23 +5,23 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_allocator.h>\n- \n+\n using C = char;\n const C c = 'a';\n using traits = std::char_traits<C>;"}, {"sha": "eb2e89c25878f11814db8eed98c3ef3af0c6398a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/operator_plus.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Foperator_plus.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Foperator_plus.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Foperator_plus.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -17,7 +17,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>"}, {"sha": "782a13a43ce1c9eacbd87c26605e59724ece5f45", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/swap.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fswap.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,24 +5,24 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n- \n+\n using C = char;\n const C c = 'a';\n using traits = std::char_traits<C>;"}, {"sha": "2407c6716478ea20e91942f4e59a1f7934204073", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/copy.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,24 +5,24 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n- \n+\n using C = wchar_t;\n const C c = L'a';\n using traits = std::char_traits<C>;"}, {"sha": "18b79612679fe1c51fd476e465d076da1b09ed6c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fcopy_assign.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,25 +5,25 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n #include <ext/throw_allocator.h>\n- \n+\n using C = wchar_t;\n const C c = L'a';\n using traits = std::char_traits<C>;"}, {"sha": "cfc31c410adbadc2fc5794119205b52cc5294844", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/move.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -16,7 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>"}, {"sha": "f919ddb6bc0a4d9275c426bd72ae6de4f5c27b17", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,24 +5,24 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n- \n+\n using C = wchar_t;\n const C c = L'a';\n using traits = std::char_traits<C>;"}, {"sha": "27b55632d6a4471ec94b245568815dcc3b61495f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/noexcept.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fnoexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fnoexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fnoexcept.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,23 +5,23 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_allocator.h>\n- \n+\n using C = wchar_t;\n const C c = L'a';\n using traits = std::char_traits<C>;"}, {"sha": "dd7d6504ee4702c23d2996f98bd7b3df2b1da1ba", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/operator_plus.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Foperator_plus.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Foperator_plus.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Foperator_plus.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -17,7 +17,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>"}, {"sha": "44e65878ba7f201e7915dd5da0aaa6e5da3e11a4", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/swap.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e961dba46a84b5c4ba5086d05db6ff449d8682f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fswap.cc?ref=5e961dba46a84b5c4ba5086d05db6ff449d8682f", "patch": "@@ -5,24 +5,24 @@\n // terms of the GNU General Public License as published by the\n // Free Software Foundation; either version 3, or (at your option)\n // any later version.\n- \n+\n // This library is distributed in the hope that it will be useful,\n // but WITHOUT ANY WARRANTY; without even the implied warranty of\n // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n // GNU General Public License for more details.\n- \n+\n // You should have received a copy of the GNU General Public License along\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do run { target c++11 } }\n-// COW strings don't support C++11 allocators:\n+// COW strings don't support C++11 allocator propagation:\n // { dg-require-effective-target cxx11-abi }\n \n #include <string>\n #include <testsuite_hooks.h>\n #include <testsuite_allocator.h>\n- \n+\n using C = wchar_t;\n const C c = L'a';\n using traits = std::char_traits<C>;"}]}