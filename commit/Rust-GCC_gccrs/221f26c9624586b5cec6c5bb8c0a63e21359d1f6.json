{"sha": "221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "node_id": "C_kwDOANBUbNoAKDIyMWYyNmM5NjI0NTg2YjVjZWM2YzViYjhjMGE2M2UyMTM1OWQxZjY", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:20:30Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:09Z"}, "message": "RISC-V: Add vzext.vf8 C++ API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vzext_vf8-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vzext_vf8_tumu-3.C: New test.", "tree": {"sha": "c1f48cb965e731b18aab0ecdf88d890fa124dd32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1f48cb965e731b18aab0ecdf88d890fa124dd32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00c93929571619aa30f9321167f904d1cd0a73cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c93929571619aa30f9321167f904d1cd0a73cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c93929571619aa30f9321167f904d1cd0a73cf"}], "stats": {"total": 594, "additions": 594, "deletions": 0}, "files": [{"sha": "caf23bc78d9b5b5b550d3ab2c2927cef3edc1370", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8-1.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-1.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf8(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "b021b28e02b1839a51fdfcccc11e26dc4e72d4d2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8-2.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-2.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf8(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "8904ac4ed9d440991ec06c427b66f77cefb5c5a9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8-3.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8-3.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf8(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "5d96491e1436109d9480ec21609e26ef64b62528", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_mu-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-1.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_mu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_mu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_mu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_mu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "c4d24b85ab357d1eb72eec7654acbaf9f43ba3cf", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_mu-2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-2.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_mu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_mu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_mu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_mu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "74bd3ca29f1edc4ed3dc8c1bd27b39eed7ad985c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_mu-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_mu-3.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_mu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_mu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_mu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_mu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "f782835241b4f49a7b5a63cd935c6fe524b1cb01", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tu-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-1.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tu(vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tu(vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tu(vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tu(vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "9ca40128b4f4929d04ac455fc12dbaa41a280502", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tu-2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-2.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tu(vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tu(vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tu(vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tu(vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "5b8c5e448bed161e8e5227a5f94f411c0b704f5e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tu-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tu-3.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tu(vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tu(vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tu(vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tu(vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "b7538f15a49844b6449edda9a8193d61b78b367f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tum-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-1.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tum(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tum(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tum(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tum(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "10869ac00051167542db0920eaec31da3d20a7e9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tum-2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-2.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tum(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tum(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tum(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tum(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "e67a477d900be1ac51fe37ddbf9a6783f721a4d6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tum-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tum-3.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tum(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tum(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tum(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tum(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "78d14a465e640587045a7b7dbf27430058b8becf", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tumu-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-1.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tumu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tumu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tumu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tumu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "900920f9f0b441eab3a6fb12bb9ce687a9572c52", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tumu-2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-2.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tumu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tumu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tumu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tumu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "f8efb69dff0c66041c46dd3e60adae503335f9d3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vzext_vf8_tumu-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221f26c9624586b5cec6c5bb8c0a63e21359d1f6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf8_tumu-3.C?ref=221f26c9624586b5cec6c5bb8c0a63e21359d1f6", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint64m1_t test___riscv_vzext_vf8_tumu(vbool64_t mask,vuint64m1_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf8_tumu(vbool32_t mask,vuint64m2_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf8_tumu(vbool16_t mask,vuint64m4_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf8_tumu(vbool8_t mask,vuint64m8_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}]}