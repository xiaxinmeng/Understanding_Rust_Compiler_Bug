{"sha": "8bae3cefebfc940f629c0353ca345252844c0865", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJhZTNjZWZlYmZjOTQwZjYyOWMwMzUzY2EzNDUyNTI4NDRjMDg2NQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-07-16T10:13:19Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-07-16T10:13:19Z"}, "message": "re PR fortran/53956 ([F03] PROCEDURE w/ interface: Bogus \"EXTERNAL attribute conflicts with FUNCTION attribute\")\n\n2012-07-16  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/53956\n\t* gfortran.h (gfc_copy_formal_args,gfc_copy_formal_args_ppc): Modified\n\tprototypes.\n\t* symbol.c (gfc_copy_formal_args): New argument 'if_src'. Copy if_source\n\tof dummy procedures.\n\t(gfc_copy_formal_args_ppc): Ditto.\n\t* resolve.c (resolve_procedure_interface): Pass IFSRC_DECL to\n\tgfc_copy_formal_args.\n\t(resolve_fl_derived0): Pass IFSRC_DECL to gfc_copy_formal_args_ppc.\n\n\n2012-07-16  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/53956\n\t* gfortran.dg/proc_decl_28.f90: New.\n\nFrom-SVN: r189514", "tree": {"sha": "aca81c703af31857c0eb1eb8939363a1609ddc47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aca81c703af31857c0eb1eb8939363a1609ddc47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bae3cefebfc940f629c0353ca345252844c0865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bae3cefebfc940f629c0353ca345252844c0865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bae3cefebfc940f629c0353ca345252844c0865", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bae3cefebfc940f629c0353ca345252844c0865/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d923fe0f01c65cfef6e26645e01357196a634995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d923fe0f01c65cfef6e26645e01357196a634995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d923fe0f01c65cfef6e26645e01357196a634995"}], "stats": {"total": 57, "additions": 45, "deletions": 12}, "files": [{"sha": "3cfa4bab507d8c93552c1103a1ff0ae7d048a1f1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8bae3cefebfc940f629c0353ca345252844c0865", "patch": "@@ -1,3 +1,15 @@\n+2012-07-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/53956\n+\t* gfortran.h (gfc_copy_formal_args,gfc_copy_formal_args_ppc): Modified\n+\tprototypes.\n+\t* symbol.c (gfc_copy_formal_args): New argument 'if_src'. Copy if_source\n+\tof dummy procedures.\n+\t(gfc_copy_formal_args_ppc): Ditto.\n+\t* resolve.c (resolve_procedure_interface): Pass IFSRC_DECL to\n+\tgfc_copy_formal_args.\n+\t(resolve_fl_derived0): Pass IFSRC_DECL to gfc_copy_formal_args_ppc.\n+\n 2012-07-12  Tobias Burnus  <burnus@net-b.de>\n \n \t* trans-expr.c (conv_isocbinding_procedure): Generate c_f_pointer code"}, {"sha": "fa06883123e7d88fcee82d9a38efd83cc70d3057", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=8bae3cefebfc940f629c0353ca345252844c0865", "patch": "@@ -2638,9 +2638,9 @@ gfc_symbol* gfc_get_ultimate_derived_super_type (gfc_symbol*);\n bool gfc_type_is_extension_of (gfc_symbol *, gfc_symbol *);\n bool gfc_type_compatible (gfc_typespec *, gfc_typespec *);\n \n-void gfc_copy_formal_args (gfc_symbol *, gfc_symbol *);\n+void gfc_copy_formal_args (gfc_symbol *, gfc_symbol *, ifsrc);\n void gfc_copy_formal_args_intr (gfc_symbol *, gfc_intrinsic_sym *);\n-void gfc_copy_formal_args_ppc (gfc_component *, gfc_symbol *);\n+void gfc_copy_formal_args_ppc (gfc_component *, gfc_symbol *, ifsrc);\n \n void gfc_free_finalizer (gfc_finalizer *el); /* Needed in resolve.c, too  */\n "}, {"sha": "03f74df88fa1119e41dadb3c0f74f5155fe18c5d", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=8bae3cefebfc940f629c0353ca345252844c0865", "patch": "@@ -173,7 +173,7 @@ resolve_procedure_interface (gfc_symbol *sym)\n       sym->ts.interface = ifc;\n       sym->attr.function = ifc->attr.function;\n       sym->attr.subroutine = ifc->attr.subroutine;\n-      gfc_copy_formal_args (sym, ifc);\n+      gfc_copy_formal_args (sym, ifc, IFSRC_DECL);\n \n       sym->attr.allocatable = ifc->attr.allocatable;\n       sym->attr.pointer = ifc->attr.pointer;\n@@ -11790,7 +11790,7 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t      c->ts.interface = ifc;\n \t      c->attr.function = ifc->attr.function;\n \t      c->attr.subroutine = ifc->attr.subroutine;\n-\t      gfc_copy_formal_args_ppc (c, ifc);\n+\t      gfc_copy_formal_args_ppc (c, ifc, IFSRC_DECL);\n \n \t      c->attr.pure = ifc->attr.pure;\n \t      c->attr.elemental = ifc->attr.elemental;"}, {"sha": "99fa27d700e6b6d326f9851498a5b52468e59f7c", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=8bae3cefebfc940f629c0353ca345252844c0865", "patch": "@@ -4049,8 +4049,7 @@ gen_shape_param (gfc_formal_arglist **head,\n    reference to the list of formal arguments).  */\n \n static void\n-add_proc_interface (gfc_symbol *sym, ifsrc source,\n-                    gfc_formal_arglist *formal)\n+add_proc_interface (gfc_symbol *sym, ifsrc source, gfc_formal_arglist *formal)\n {\n \n   sym->formal = formal;\n@@ -4066,7 +4065,7 @@ add_proc_interface (gfc_symbol *sym, ifsrc source,\n    args based on the args of a given named interface.  */\n \n void\n-gfc_copy_formal_args (gfc_symbol *dest, gfc_symbol *src)\n+gfc_copy_formal_args (gfc_symbol *dest, gfc_symbol *src, ifsrc if_src)\n {\n   gfc_formal_arglist *head = NULL;\n   gfc_formal_arglist *tail = NULL;\n@@ -4090,7 +4089,8 @@ gfc_copy_formal_args (gfc_symbol *dest, gfc_symbol *src)\n       formal_arg->sym->attr = curr_arg->sym->attr;\n       formal_arg->sym->ts = curr_arg->sym->ts;\n       formal_arg->sym->as = gfc_copy_array_spec (curr_arg->sym->as);\n-      gfc_copy_formal_args (formal_arg->sym, curr_arg->sym);\n+      gfc_copy_formal_args (formal_arg->sym, curr_arg->sym,\n+\t\t\t    curr_arg->sym->attr.if_source);\n \n       /* If this isn't the first arg, set up the next ptr.  For the\n         last arg built, the formal_arg->next will never get set to\n@@ -4110,7 +4110,7 @@ gfc_copy_formal_args (gfc_symbol *dest, gfc_symbol *src)\n     }\n \n   /* Add the interface to the symbol.  */\n-  add_proc_interface (dest, IFSRC_DECL, head);\n+  add_proc_interface (dest, if_src, head);\n \n   /* Store the formal namespace information.  */\n   if (dest->formal != NULL)\n@@ -4183,7 +4183,7 @@ gfc_copy_formal_args_intr (gfc_symbol *dest, gfc_intrinsic_sym *src)\n \n \n void\n-gfc_copy_formal_args_ppc (gfc_component *dest, gfc_symbol *src)\n+gfc_copy_formal_args_ppc (gfc_component *dest, gfc_symbol *src, ifsrc if_src)\n {\n   gfc_formal_arglist *head = NULL;\n   gfc_formal_arglist *tail = NULL;\n@@ -4207,7 +4207,8 @@ gfc_copy_formal_args_ppc (gfc_component *dest, gfc_symbol *src)\n       formal_arg->sym->attr = curr_arg->sym->attr;\n       formal_arg->sym->ts = curr_arg->sym->ts;\n       formal_arg->sym->as = gfc_copy_array_spec (curr_arg->sym->as);\n-      gfc_copy_formal_args (formal_arg->sym, curr_arg->sym);\n+      gfc_copy_formal_args (formal_arg->sym, curr_arg->sym,\n+\t\t\t    curr_arg->sym->attr.if_source);\n \n       /* If this isn't the first arg, set up the next ptr.  For the\n         last arg built, the formal_arg->next will never get set to\n@@ -4229,7 +4230,7 @@ gfc_copy_formal_args_ppc (gfc_component *dest, gfc_symbol *src)\n   /* Add the interface to the symbol.  */\n   gfc_free_formal_arglist (dest->formal);\n   dest->formal = head;\n-  dest->attr.if_source = IFSRC_DECL;\n+  dest->attr.if_source = if_src;\n \n   /* Store the formal namespace information.  */\n   if (dest->formal != NULL)"}, {"sha": "45f45317a025546f22879a5d043cf50063eb4ee3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8bae3cefebfc940f629c0353ca345252844c0865", "patch": "@@ -1,3 +1,8 @@\n+2012-07-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/53956\n+\t* gfortran.dg/proc_decl_28.f90: New.\n+\n 2012-07-16  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.dg/torture/builtins-1.c: New testcase."}, {"sha": "b3a557b1494497fde75c67179fa80aaf427e4afd", "filename": "gcc/testsuite/gfortran.dg/proc_decl_28.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_28.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae3cefebfc940f629c0353ca345252844c0865/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_28.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_28.f90?ref=8bae3cefebfc940f629c0353ca345252844c0865", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+!\n+! PR 53956: [F03] PROCEDURE w/ interface: Bogus \"EXTERNAL attribute conflicts with FUNCTION attribute\"\n+!\n+! Contributed by James van Buskirk\n+\n+  interface\n+    subroutine sub (a)       \n+      integer, external :: a\n+    end subroutine\n+  end interface\n+\n+  procedure(sub) :: proc\n+\n+end "}]}