{"sha": "5dbae3676ba8c13f49caff3297606fc6f604805e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiYWUzNjc2YmE4YzEzZjQ5Y2FmZjMyOTc2MDZmYzZmNjA0ODA1ZQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2010-10-11T22:40:22Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2010-10-11T22:40:22Z"}, "message": "linux-atomic.c (__sync_val_compare_and_swap_4): Return actual_oldval.\n\n\t* config/pa/linux-atomic.c (__sync_val_compare_and_swap_4): Return\n\tactual_oldval.  Use __builtin_expect.\n\t(SUBWORD_VAL_CAS): Likewise.\n\nFrom-SVN: r165339", "tree": {"sha": "44b8f25b1a7be52e7999fe21e4a43f5d5a3a59e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44b8f25b1a7be52e7999fe21e4a43f5d5a3a59e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dbae3676ba8c13f49caff3297606fc6f604805e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbae3676ba8c13f49caff3297606fc6f604805e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dbae3676ba8c13f49caff3297606fc6f604805e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbae3676ba8c13f49caff3297606fc6f604805e/comments", "author": null, "committer": null, "parents": [{"sha": "a0a2a39912679f761df40e4b88fed9326398e63b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0a2a39912679f761df40e4b88fed9326398e63b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0a2a39912679f761df40e4b88fed9326398e63b"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "233f62bd7d361611f0149aad66727bd0f5df747f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbae3676ba8c13f49caff3297606fc6f604805e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbae3676ba8c13f49caff3297606fc6f604805e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dbae3676ba8c13f49caff3297606fc6f604805e", "patch": "@@ -1,3 +1,9 @@\n+2010-10-11  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* config/pa/linux-atomic.c (__sync_val_compare_and_swap_4): Return\n+\tactual_oldval.  Use __builtin_expect.\n+\t(SUBWORD_VAL_CAS): Likewise.\n+\n 2010-10-11  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* recog.c (nonmemory_operand): Call immediate_operand for"}, {"sha": "2ae2426357afbb33ef2edca7d7156de15374a255", "filename": "gcc/config/pa/linux-atomic.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbae3676ba8c13f49caff3297606fc6f604805e/gcc%2Fconfig%2Fpa%2Flinux-atomic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbae3676ba8c13f49caff3297606fc6f604805e/gcc%2Fconfig%2Fpa%2Flinux-atomic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Flinux-atomic.c?ref=5dbae3676ba8c13f49caff3297606fc6f604805e", "patch": "@@ -191,13 +191,13 @@ __sync_val_compare_and_swap_4 (int *ptr, int oldval, int newval)\n     {\n       actual_oldval = *ptr;\n \n-      if (oldval != actual_oldval)\n+      if (__builtin_expect (oldval != actual_oldval, 0))\n \treturn actual_oldval;\n \n       fail = __kernel_cmpxchg (actual_oldval, newval, ptr);\n   \n-      if (!fail)\n-\treturn oldval;\n+      if (__builtin_expect (!fail, 1))\n+\treturn actual_oldval;\n     }\n }\n \n@@ -216,17 +216,18 @@ __sync_val_compare_and_swap_4 (int *ptr, int oldval, int newval)\n       {\t\t\t\t\t\t\t\t\t\\\n \tactual_oldval = *wordptr;\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-\tif (((actual_oldval & mask) >> shift) != (unsigned int) oldval)\t\\\n-          return (actual_oldval & mask) >> shift;\t\t\t\\\n+\tif (__builtin_expect (((actual_oldval & mask) >> shift)\t\t\\\n+\t\t\t      != (unsigned int) oldval, 0))\t\t\\\n+\t  return (actual_oldval & mask) >> shift;\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \tactual_newval = (actual_oldval & ~mask)\t\t\t\t\\\n \t\t\t| (((unsigned int) newval << shift) & mask);\t\\\n \t\t\t\t\t\t\t\t\t\\\n \tfail = __kernel_cmpxchg (actual_oldval, actual_newval,\t\t\\\n \t\t\t\t wordptr);\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-\tif (!fail)\t\t\t\t\t\t\t\\\n-\t  return oldval;\t\t\t\t\t\t\\\n+\tif (__builtin_expect (!fail, 1))\t\t\t\t\\\n+\t  return (actual_oldval & mask) >> shift;\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   }\n "}]}