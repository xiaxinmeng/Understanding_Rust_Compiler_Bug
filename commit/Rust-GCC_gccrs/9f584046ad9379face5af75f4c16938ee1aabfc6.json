{"sha": "9f584046ad9379face5af75f4c16938ee1aabfc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY1ODQwNDZhZDkzNzlmYWNlNWFmNzVmNGMxNjkzOGVlMWFhYmZjNg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2015-01-15T22:17:09Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2015-01-15T22:17:09Z"}, "message": "openmp.c (check_symbol_not_pointer, [...]): Replace '%s' by %qs.\n\n2015-01-15  Tobias Burnus  <burnus@net-b.de>\n\n        * openmp.c (check_symbol_not_pointer, resolve_oacc_data_clauses,\n        resolve_oacc_deviceptr_clause, resolve_omp_clauses,\n        gfc_resolve_oacc_declare): Replace '%s' by %qs.\n\nFrom-SVN: r219694", "tree": {"sha": "3bf500e812960e204c229b9a6cee0879fa99c258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bf500e812960e204c229b9a6cee0879fa99c258"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f584046ad9379face5af75f4c16938ee1aabfc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f584046ad9379face5af75f4c16938ee1aabfc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f584046ad9379face5af75f4c16938ee1aabfc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f584046ad9379face5af75f4c16938ee1aabfc6/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "179ed8f5e2fbbb62b441d06d3550880d6b21c356", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179ed8f5e2fbbb62b441d06d3550880d6b21c356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/179ed8f5e2fbbb62b441d06d3550880d6b21c356"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "3fd3cfb5ade90499a02d529b0d1b4f342aa2aba2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f584046ad9379face5af75f4c16938ee1aabfc6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f584046ad9379face5af75f4c16938ee1aabfc6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9f584046ad9379face5af75f4c16938ee1aabfc6", "patch": "@@ -1,3 +1,9 @@\n+2015-01-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* openmp.c (check_symbol_not_pointer, resolve_oacc_data_clauses,\n+\tresolve_oacc_deviceptr_clause, resolve_omp_clauses,\n+\tgfc_resolve_oacc_declare): Replace '%s' by %qs.\n+\n 2015-01-15  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \t    James Norris  <jnorris@codesourcery.com>"}, {"sha": "422e977d089d9eb6308ad2c20ca468a35ae90d29", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f584046ad9379face5af75f4c16938ee1aabfc6/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f584046ad9379face5af75f4c16938ee1aabfc6/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=9f584046ad9379face5af75f4c16938ee1aabfc6", "patch": "@@ -1457,7 +1457,7 @@ gfc_match_oacc_routine (void)\n   if (!sym->attr.external && !sym->attr.function && !sym->attr.subroutine)\n     {\n       gfc_error (\"Syntax error in !$ACC ROUTINE ( NAME ) at %C, invalid\"\n-\t\t \" function name '%s'\", sym->name);\n+\t\t \" function name %qs\", sym->name);\n       gfc_current_locus = old_loc;\n       return MATCH_ERROR;\n     }\n@@ -2649,29 +2649,29 @@ static void\n check_symbol_not_pointer (gfc_symbol *sym, locus loc, const char *name)\n {\n   if (sym->ts.type == BT_DERIVED && sym->attr.pointer)\n-    gfc_error (\"POINTER object '%s' of derived type in %s clause at %L\",\n+    gfc_error (\"POINTER object %qs of derived type in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->ts.type == BT_DERIVED && sym->attr.cray_pointer)\n-    gfc_error (\"Cray pointer object of derived type '%s' in %s clause at %L\",\n+    gfc_error (\"Cray pointer object of derived type %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->ts.type == BT_DERIVED && sym->attr.cray_pointee)\n-    gfc_error (\"Cray pointee object of derived type '%s' in %s clause at %L\",\n+    gfc_error (\"Cray pointee object of derived type %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n \n   if ((sym->ts.type == BT_ASSUMED && sym->attr.pointer)\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.pointer))\n-    gfc_error (\"POINTER object '%s' of polymorphic type in %s clause at %L\",\n+    gfc_error (\"POINTER object %qs of polymorphic type in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if ((sym->ts.type == BT_ASSUMED && sym->attr.cray_pointer)\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.cray_pointer))\n-    gfc_error (\"Cray pointer object of polymorphic type '%s' in %s clause at %L\",\n+    gfc_error (\"Cray pointer object of polymorphic type %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if ((sym->ts.type == BT_ASSUMED && sym->attr.cray_pointee)\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.cray_pointee))\n-    gfc_error (\"Cray pointee object of polymorphic type '%s' in %s clause at %L\",\n+    gfc_error (\"Cray pointee object of polymorphic type %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n }\n \n@@ -2681,27 +2681,27 @@ static void\n check_array_not_assumed (gfc_symbol *sym, locus loc, const char *name)\n {\n   if (sym->as && sym->as->type == AS_ASSUMED_SIZE)\n-    gfc_error (\"Assumed size array '%s' in %s clause at %L\",\n+    gfc_error (\"Assumed size array %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->as && sym->as->type == AS_ASSUMED_RANK)\n-    gfc_error (\"Assumed rank array '%s' in %s clause at %L\",\n+    gfc_error (\"Assumed rank array %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->as && sym->as->type == AS_DEFERRED && sym->attr.pointer\n       && !sym->attr.contiguous)\n-    gfc_error (\"Noncontiguous deferred shape array '%s' in %s clause at %L\",\n+    gfc_error (\"Noncontiguous deferred shape array %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n }\n \n static void\n resolve_oacc_data_clauses (gfc_symbol *sym, locus loc, const char *name)\n {\n   if (sym->ts.type == BT_DERIVED && sym->attr.allocatable)\n-    gfc_error (\"ALLOCATABLE object '%s' of derived type in %s clause at %L\",\n+    gfc_error (\"ALLOCATABLE object %qs of derived type in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if ((sym->ts.type == BT_ASSUMED && sym->attr.allocatable)\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.allocatable))\n-    gfc_error (\"ALLOCATABLE object '%s' of polymorphic type \"\n+    gfc_error (\"ALLOCATABLE object %qs of polymorphic type \"\n \t       \"in %s clause at %L\", sym->name, name, &loc);\n   check_symbol_not_pointer (sym, loc, name);\n   check_array_not_assumed (sym, loc, name);\n@@ -2713,25 +2713,25 @@ resolve_oacc_deviceptr_clause (gfc_symbol *sym, locus loc, const char *name)\n   if (sym->attr.pointer\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.class_pointer))\n-    gfc_error (\"POINTER object '%s' in %s clause at %L\",\n+    gfc_error (\"POINTER object %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->attr.cray_pointer\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.cray_pointer))\n-    gfc_error (\"Cray pointer object '%s' in %s clause at %L\",\n+    gfc_error (\"Cray pointer object %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->attr.cray_pointee\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.cray_pointee))\n-    gfc_error (\"Cray pointee object '%s' in %s clause at %L\",\n+    gfc_error (\"Cray pointee object %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->attr.allocatable\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.allocatable))\n-    gfc_error (\"ALLOCATABLE object '%s' in %s clause at %L\",\n+    gfc_error (\"ALLOCATABLE object %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->attr.value)\n-    gfc_error (\"VALUE object '%s' in %s clause at %L\",\n+    gfc_error (\"VALUE object %qs in %s clause at %L\",\n \t       sym->name, name, &loc);\n   check_array_not_assumed (sym, loc, name);\n }\n@@ -3367,18 +3367,18 @@ resolve_omp_clauses (gfc_code *code, locus *where,\n \t\t      if (n->sym->attr.allocatable\n \t\t\t  || (n->sym->ts.type == BT_CLASS && CLASS_DATA (n->sym)\n \t\t\t      && CLASS_DATA (n->sym)->attr.allocatable))\n-\t\t\tgfc_error (\"ALLOCATABLE object '%s' in %s clause at %L\",\n+\t\t\tgfc_error (\"ALLOCATABLE object %qs in %s clause at %L\",\n \t\t\t\t   n->sym->name, name, where);\n \t\t      if (n->sym->attr.pointer\n \t\t\t  || (n->sym->ts.type == BT_CLASS && CLASS_DATA (n->sym)\n \t\t\t      && CLASS_DATA (n->sym)->attr.class_pointer))\n-\t\t\tgfc_error (\"POINTER object '%s' in %s clause at %L\",\n+\t\t\tgfc_error (\"POINTER object %qs in %s clause at %L\",\n \t\t\t\t   n->sym->name, name, where);\n \t\t      if (n->sym->attr.cray_pointer)\n-\t\t\tgfc_error (\"Cray pointer object '%s' in %s clause at %L\",\n+\t\t\tgfc_error (\"Cray pointer object %qs in %s clause at %L\",\n \t\t\t\t   n->sym->name, name, where);\n \t\t      if (n->sym->attr.cray_pointee)\n-\t\t\tgfc_error (\"Cray pointee object '%s' in %s clause at %L\",\n+\t\t\tgfc_error (\"Cray pointee object %qs in %s clause at %L\",\n \t\t\t\t   n->sym->name, name, where);\n \t\t      /* FALLTHRU */\n \t\t  case OMP_LIST_DEVICE_RESIDENT:\n@@ -4624,15 +4624,15 @@ gfc_resolve_oacc_declare (gfc_namespace *ns)\n       {\n \tn->sym->mark = 0;\n \tif (n->sym->attr.flavor == FL_PARAMETER)\n-\t  gfc_error (\"PARAMETER object '%s' is not allowed at %L\", n->sym->name, &loc);\n+\t  gfc_error (\"PARAMETER object %qs is not allowed at %L\", n->sym->name, &loc);\n       }\n \n   for (list = OMP_LIST_DEVICE_RESIDENT;\n        list <= OMP_LIST_DEVICE_RESIDENT; list++)\n     for (n = ns->oacc_declare_clauses->lists[list]; n; n = n->next)\n       {\n \tif (n->sym->mark)\n-\t  gfc_error (\"Symbol '%s' present on multiple clauses at %L\",\n+\t  gfc_error (\"Symbol %qs present on multiple clauses at %L\",\n \t\t     n->sym->name, &loc);\n \telse\n \t  n->sym->mark = 1;"}]}