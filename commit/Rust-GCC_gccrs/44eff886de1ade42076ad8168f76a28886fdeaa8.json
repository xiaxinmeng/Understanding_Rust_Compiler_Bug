{"sha": "44eff886de1ade42076ad8168f76a28886fdeaa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRlZmY4ODZkZTFhZGU0MjA3NmFkODE2OGY3NmEyODg4NmZkZWFhOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-01T07:56:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-01T07:56:34Z"}, "message": "tree-ssa-reassoc.c (get_rank): Simplify.\n\n2015-06-01  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-reassoc.c (get_rank): Simplify.\n\nFrom-SVN: r223914", "tree": {"sha": "3085a65351ee0a2b9037e2d812df776ea9aadd7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3085a65351ee0a2b9037e2d812df776ea9aadd7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44eff886de1ade42076ad8168f76a28886fdeaa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44eff886de1ade42076ad8168f76a28886fdeaa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44eff886de1ade42076ad8168f76a28886fdeaa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44eff886de1ade42076ad8168f76a28886fdeaa8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed98eed866d587f64cb43967de50adc107597cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed98eed866d587f64cb43967de50adc107597cc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed98eed866d587f64cb43967de50adc107597cc5"}], "stats": {"total": 47, "additions": 12, "deletions": 35}, "files": [{"sha": "22af4a9a59e00fdf4c492cf5be0aca40e04dcb22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44eff886de1ade42076ad8168f76a28886fdeaa8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44eff886de1ade42076ad8168f76a28886fdeaa8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44eff886de1ade42076ad8168f76a28886fdeaa8", "patch": "@@ -1,3 +1,7 @@\n+2015-06-01  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-reassoc.c (get_rank): Simplify.\n+\n 2015-05-31  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* configure.ac (NO_PIE_CFLAGS): Check CXXFLAGS instead of CFLAGS."}, {"sha": "8a645112c7e4b938b2cb9e6cca2773fe9272753f", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 8, "deletions": 35, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44eff886de1ade42076ad8168f76a28886fdeaa8/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44eff886de1ade42076ad8168f76a28886fdeaa8/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=44eff886de1ade42076ad8168f76a28886fdeaa8", "patch": "@@ -417,10 +417,6 @@ insert_operand_rank (tree e, long rank)\n static long\n get_rank (tree e)\n {\n-  /* Constants have rank 0.  */\n-  if (is_gimple_min_invariant (e))\n-    return 0;\n-\n   /* SSA_NAME's have the rank of the expression they are the result\n      of.\n      For globals and uninitialized values, the rank is 0.\n@@ -460,9 +456,9 @@ get_rank (tree e)\n \n   if (TREE_CODE (e) == SSA_NAME)\n     {\n+      ssa_op_iter iter;\n       gimple stmt;\n       long rank;\n-      int i, n;\n       tree op;\n \n       if (SSA_NAME_IS_DEFAULT_DEF (e))\n@@ -472,8 +468,7 @@ get_rank (tree e)\n       if (gimple_code (stmt) == GIMPLE_PHI)\n \treturn phi_rank (stmt);\n \n-      if (!is_gimple_assign (stmt)\n-\t  || gimple_vdef (stmt))\n+      if (!is_gimple_assign (stmt))\n \treturn bb_rank[gimple_bb (stmt)->index];\n \n       /* If we already have a rank for this expression, use that.  */\n@@ -484,34 +479,12 @@ get_rank (tree e)\n       /* Otherwise, find the maximum rank for the operands.  As an\n \t exception, remove the bias from loop-carried phis when propagating\n \t the rank so that dependent operations are not also biased.  */\n+      /* Simply walk over all SSA uses - this takes advatage of the\n+         fact that non-SSA operands are is_gimple_min_invariant and\n+\t thus have rank 0.  */\n       rank = 0;\n-      if (gimple_assign_single_p (stmt))\n-\t{\n-\t  tree rhs = gimple_assign_rhs1 (stmt);\n-\t  n = TREE_OPERAND_LENGTH (rhs);\n-\t  if (n == 0)\n-\t    rank = propagate_rank (rank, rhs);\n-\t  else\n-\t    {\n-\t      for (i = 0; i < n; i++)\n-\t\t{\n-\t\t  op = TREE_OPERAND (rhs, i);\n-\n-\t\t  if (op != NULL_TREE)\n-\t\t    rank = propagate_rank (rank, op);\n-\t\t}\n-\t    }\n-\t}\n-      else\n-\t{\n-\t  n = gimple_num_ops (stmt);\n-\t  for (i = 1; i < n; i++)\n-\t    {\n-\t      op = gimple_op (stmt, i);\n-\t      gcc_assert (op);\n-\t      rank = propagate_rank (rank, op);\n-\t    }\n-\t}\n+      FOR_EACH_SSA_TREE_OPERAND (op, stmt, iter, SSA_OP_USE)\n+\trank = propagate_rank (rank, op);\n \n       if (dump_file && (dump_flags & TDF_DETAILS))\n \t{\n@@ -525,7 +498,7 @@ get_rank (tree e)\n       return (rank + 1);\n     }\n \n-  /* Globals, etc,  are rank 0 */\n+  /* Constants, globals, etc., are rank 0 */\n   return 0;\n }\n "}]}