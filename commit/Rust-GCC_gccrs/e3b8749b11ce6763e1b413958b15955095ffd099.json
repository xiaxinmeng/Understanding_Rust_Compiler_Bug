{"sha": "e3b8749b11ce6763e1b413958b15955095ffd099", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiODc0OWIxMWNlNjc2M2UxYjQxMzk1OGIxNTk1NTA5NWZmZDA5OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-11-04T09:40:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-11-04T09:40:15Z"}, "message": "c-opts.c (c_common_post_options): Move LTO option processing code ...\n\n2009-11-04  Richard Guenther  <rguenther@suse.de>\n\n\t* c-opts.c (c_common_post_options): Move LTO option processing\n\tcode ...\n\t* opts.c (decode_options): ... here.\n\n\tfortran/\n\t* options.c (gfc_post_options): Rely on common code processing\n\tLTO options.  Only enable -fwhole-file here.\n\nFrom-SVN: r153889", "tree": {"sha": "4e0f40347c54926e23c511d26a4a282449a2ee8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e0f40347c54926e23c511d26a4a282449a2ee8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3b8749b11ce6763e1b413958b15955095ffd099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b8749b11ce6763e1b413958b15955095ffd099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3b8749b11ce6763e1b413958b15955095ffd099", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b8749b11ce6763e1b413958b15955095ffd099/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00ffc97dfaff36299281e8f6641c137c86ba1b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00ffc97dfaff36299281e8f6641c137c86ba1b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00ffc97dfaff36299281e8f6641c137c86ba1b42"}], "stats": {"total": 78, "additions": 35, "deletions": 43}, "files": [{"sha": "00d9025513b97ea8ab9bd1ddc0f4345c550fc77c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3b8749b11ce6763e1b413958b15955095ffd099", "patch": "@@ -1,3 +1,9 @@\n+2009-11-04  Richard Guenther  <rguenther@suse.de>\n+\n+\t* c-opts.c (c_common_post_options): Move LTO option processing\n+\tcode ...\n+\t* opts.c (decode_options): ... here.\n+\n 2009-11-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-common.c (fold_offsetof_1): Use %wd instead of"}, {"sha": "e026fd97dc754c6e9f10d7abab6b5dff127fd5da", "filename": "gcc/c-opts.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=e3b8749b11ce6763e1b413958b15955095ffd099", "patch": "@@ -1033,29 +1033,6 @@ c_common_post_options (const char **pfilename)\n   C_COMMON_OVERRIDE_OPTIONS;\n #endif\n \n-  if (flag_lto || flag_whopr)\n-    {\n-#ifdef ENABLE_LTO\n-      flag_generate_lto = 1;\n-\n-      /* When generating IL, do not operate in whole-program mode.\n-\t Otherwise, symbols will be privatized too early, causing link\n-\t errors later.  */\n-      flag_whole_program = 0;\n-\n-      /* FIXME lto.  Disable var-tracking until debug information\n-\t is properly handled in free_lang_data.  */\n-      flag_var_tracking = 0;\n-#else\n-      error (\"LTO support has not been enabled in this configuration\");\n-#endif\n-    }\n-\n-  /* Reconcile -flto and -fwhopr.  Set additional flags as appropriate and\n-     check option consistency.  */\n-  if (flag_lto && flag_whopr)\n-    error (\"-flto and -fwhopr are mutually exclusive\");\n-\n   /* Excess precision other than \"fast\" requires front-end\n      support.  */\n   if (c_dialect_cxx ())"}, {"sha": "47cfead00e0e47ca2e4b6fc983ba010fef9a2fcf", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e3b8749b11ce6763e1b413958b15955095ffd099", "patch": "@@ -1,3 +1,8 @@\n+2009-11-04  Richard Guenther  <rguenther@suse.de>\n+\n+\t* options.c (gfc_post_options): Rely on common code processing\n+\tLTO options.  Only enable -fwhole-file here.\n+\n 2009-11-03  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41907"}, {"sha": "3742addb6b11e4198df95f0cb61b7531b976b1e2", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=e3b8749b11ce6763e1b413958b15955095ffd099", "patch": "@@ -242,27 +242,9 @@ gfc_post_options (const char **pfilename)\n   if (flag_whole_program)\n     gfc_option.flag_whole_file = 1;\n \n+  /* Enable whole-file mode if LTO is in effect.  */\n   if (flag_lto || flag_whopr)\n-    {\n-#ifdef ENABLE_LTO\n-      flag_generate_lto = 1;\n-\n-      /* When generating IL, do not operate in whole-program mode.\n-\t Otherwise, symbols will be privatized too early, causing link\n-\t errors later.  */\n-      flag_whole_program = 0;\n-\n-      /* But do enable whole-file mode.  */\n-      gfc_option.flag_whole_file = 1;\n-#else\n-      error (\"LTO support has not been enabled in this configuration\");\n-#endif\n-    }\n-\n-  /* Reconcile -flto and -fwhopr.  Set additional flags as appropriate and\n-     check option consistency.  */\n-  if (flag_lto && flag_whopr)\n-    error (\"-flto and -fwhopr are mutually exclusive\");\n+    gfc_option.flag_whole_file = 1;\n \n   /* -fbounds-check is equivalent to -fcheck=bounds */\n   if (flag_bounds_check)"}, {"sha": "b2b6c4454ee647ac458ae80d25ca7ddee6577c7a", "filename": "gcc/opts.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8749b11ce6763e1b413958b15955095ffd099/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=e3b8749b11ce6763e1b413958b15955095ffd099", "patch": "@@ -1117,6 +1117,28 @@ decode_options (unsigned int argc, const char **argv)\n         PARAM_VALUE (PARAM_STACK_FRAME_GROWTH) = 40;\n     }\n \n+  if (flag_lto || flag_whopr)\n+    {\n+#ifdef ENABLE_LTO\n+      flag_generate_lto = 1;\n+\n+      /* When generating IL, do not operate in whole-program mode.\n+\t Otherwise, symbols will be privatized too early, causing link\n+\t errors later.  */\n+      flag_whole_program = 0;\n+\n+      /* FIXME lto.  Disable var-tracking until debug information\n+\t is properly handled in free_lang_data.  */\n+      flag_var_tracking = 0;\n+#else\n+      error (\"LTO support has not been enabled in this configuration\");\n+#endif\n+    }\n+\n+  /* Reconcile -flto and -fwhopr.  Set additional flags as appropriate and\n+     check option consistency.  */\n+  if (flag_lto && flag_whopr)\n+    error (\"-flto and -fwhopr are mutually exclusive\");\n }\n \n #define LEFT_COLUMN\t27"}]}