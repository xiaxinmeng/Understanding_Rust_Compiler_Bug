{"sha": "0fb2f9b1f0d3586ed128995cd54063307c8f5b84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiMmY5YjFmMGQzNTg2ZWQxMjg5OTVjZDU0MDYzMzA3YzhmNWI4NA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-08-18T22:37:03Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-08-18T22:37:03Z"}, "message": "re PR target/45327 (ICE: SIGSEGV in rtx_equal_p (rtl.c:496) with -O1 -funroll-loops -fnon-call-exceptions)\n\n\tPR target/45327\n\t* config/i386/i386.md (<any_or:code><SWI:mode>_3): Do not use\n\tix86_binary_operator_ok.\n\nFrom-SVN: r163357", "tree": {"sha": "262c641b431db490d65b13e28c6825082c5dbd93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/262c641b431db490d65b13e28c6825082c5dbd93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fb2f9b1f0d3586ed128995cd54063307c8f5b84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb2f9b1f0d3586ed128995cd54063307c8f5b84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb2f9b1f0d3586ed128995cd54063307c8f5b84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb2f9b1f0d3586ed128995cd54063307c8f5b84/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80f9522847dffe96e819ac730d7caa46ddf101fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f9522847dffe96e819ac730d7caa46ddf101fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80f9522847dffe96e819ac730d7caa46ddf101fe"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "f7e5e33069bf182ab9f487617ddfceeb2688f61b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb2f9b1f0d3586ed128995cd54063307c8f5b84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb2f9b1f0d3586ed128995cd54063307c8f5b84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fb2f9b1f0d3586ed128995cd54063307c8f5b84", "patch": "@@ -1,3 +1,9 @@\n+2010-08-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/45327\n+\t* config/i386/i386.md (<any_or:code><SWI:mode>_3): Do not use\n+\tix86_binary_operator_ok.\n+\n 2010-08-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*add<mode>_1) <TYPE_LEA>: Split insn to lea."}, {"sha": "6215f1980314a5aff1103b0fffad5effb1f123bb", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb2f9b1f0d3586ed128995cd54063307c8f5b84/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb2f9b1f0d3586ed128995cd54063307c8f5b84/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=0fb2f9b1f0d3586ed128995cd54063307c8f5b84", "patch": "@@ -8456,7 +8456,7 @@\n \t\t (const_int 0)))\n    (clobber (match_scratch:SWI 0 \"=<r>\"))]\n   \"ix86_match_ccmode (insn, CCNOmode)\n-   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+   && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"<logic>{<imodesuffix>}\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"<MODE>\")])"}]}