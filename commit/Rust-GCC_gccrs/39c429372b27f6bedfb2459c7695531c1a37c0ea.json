{"sha": "39c429372b27f6bedfb2459c7695531c1a37c0ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzljNDI5MzcyYjI3ZjZiZWRmYjI0NTljNzY5NTUzMWMxYTM3YzBlYQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-12-12T15:47:47Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-12-12T15:47:47Z"}, "message": "[libstdc++][testsuite] XFAIL tests relying on long double-to-string conversions on broken newlib\n\n    * lib/target-supports.exp\n    (check_effective_target_newlib_broken_long_double_io): New check.\n    (check_effective_target_frexpl): Likewise.\n\n    * testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc:\n    XFAIL run if newlib_broken_long_double_io.\n    * testsuite/21_strings/basic_string/numeric_conversions/wchar_t/stod.cc:\n    Likewise.\n    * testsuite/21_strings/basic_string/numeric_conversions/wchar_t/stold.cc:\n    Likewise.\n    * testsuite/27_io/basic_ostream/inserters_arithmetic/char/hexfloat.cc:\n    Likewise.\n\nFrom-SVN: r243558", "tree": {"sha": "4cbd231b103ac0ad3b9ead75370854968e39c7fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cbd231b103ac0ad3b9ead75370854968e39c7fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39c429372b27f6bedfb2459c7695531c1a37c0ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c429372b27f6bedfb2459c7695531c1a37c0ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39c429372b27f6bedfb2459c7695531c1a37c0ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c429372b27f6bedfb2459c7695531c1a37c0ea/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c43384234e73d0c88fccaf58c298db5e29540ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c43384234e73d0c88fccaf58c298db5e29540ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c43384234e73d0c88fccaf58c298db5e29540ce"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "35db8198c28a42f7e49541458a4d82bb9860c5de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c429372b27f6bedfb2459c7695531c1a37c0ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c429372b27f6bedfb2459c7695531c1a37c0ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39c429372b27f6bedfb2459c7695531c1a37c0ea", "patch": "@@ -1,3 +1,9 @@\n+2016-12-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_newlib_broken_long_double_io): New check.\n+\t(check_effective_target_frexpl): Likewise.\n+\n 2016-12-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/78716"}, {"sha": "c3110dc3d72ec34e01d87dcd3fc3b6671de9d332", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c429372b27f6bedfb2459c7695531c1a37c0ea/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c429372b27f6bedfb2459c7695531c1a37c0ea/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=39c429372b27f6bedfb2459c7695531c1a37c0ea", "patch": "@@ -6765,6 +6765,17 @@ proc check_effective_target_newlib {} {\n     }]\n }\n \n+# Some newlib versions don't provide a frexpl and instead depend\n+# on frexp to implement long double conversions in their printf-like\n+# functions.  This leads to broken results.  Detect such versions here.\n+\n+proc check_effective_target_newlib_broken_long_double_io {} {\n+  if { [is-effective-target newlib] && ![is-effective-target frexpl] } {\n+\treturn 1\n+  }\n+  return 0\n+}\n+\n # Return true if this is NOT a Bionic target.\n \n proc check_effective_target_non_bionic {} {\n@@ -7380,6 +7391,21 @@ proc check_effective_target_pow10 { } {\n     } \"-lm\" ]\n }\n \n+# Return 1 if frexpl function exists.\n+\n+proc check_effective_target_frexpl { } {\n+    return [check_runtime frexpl {\n+\t#include <math.h>\n+\tint main () {\n+\tlong double x;\n+\tint y;\n+\tx = frexpl (5.0, &y);\n+\treturn 0;\n+\t}\n+    } \"-lm\" ]\n+}\n+\n+\n # Return 1 if issignaling function exists.\n proc check_effective_target_issignaling {} {\n     return [check_runtime issignaling {"}, {"sha": "b2cd76c96bb5b7ca0a9ab7050d5910efb1014663", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=39c429372b27f6bedfb2459c7695531c1a37c0ea", "patch": "@@ -1,3 +1,14 @@\n+2016-12-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc:\n+\tXFAIL run if newlib_broken_long_double_io.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/stod.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/numeric_conversions/wchar_t/stold.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/hexfloat.cc:\n+\tLikewise.\n+\n 2016-12-12  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/experimental/filesystem/operations/is_empty.cc:"}, {"sha": "088641130075add8346948f286cfc63de6637721", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stod.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstod.cc?ref=39c429372b27f6bedfb2459c7695531c1a37c0ea", "patch": "@@ -1,5 +1,6 @@\n // { dg-do run { target c++11 } }\n // { dg-require-string-conversions \"\" }\n+// { dg-xfail-run-if \"broken long double IO\" { newlib_broken_long_double_io  }  \"*\" \"\" }\n \n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "df39a50b9c8964f70db17a07caaf0f8a48eddbcf", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/char/stold.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fchar%2Fstold.cc?ref=39c429372b27f6bedfb2459c7695531c1a37c0ea", "patch": "@@ -1,5 +1,6 @@\n // { dg-do run { target c++11 } }\n // { dg-require-string-conversions \"\" }\n+// { dg-xfail-run-if \"broken long double IO\" { newlib_broken_long_double_io  }  \"*\" \"\" }\n \n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "259dc65024833af576b5cba44942e996c41c1b0d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/wchar_t/stod.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstod.cc?ref=39c429372b27f6bedfb2459c7695531c1a37c0ea", "patch": "@@ -1,5 +1,7 @@\n // { dg-do run { target c++11 } }\n // { dg-require-string-conversions \"\" }\n+// { dg-xfail-run-if \"broken long double IO\" { newlib_broken_long_double_io  }  \"*\" \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008-2016 Free Software Foundation, Inc."}, {"sha": "3a95010945b25317619f34458905d540076a407a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/numeric_conversions/wchar_t/stold.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fnumeric_conversions%2Fwchar_t%2Fstold.cc?ref=39c429372b27f6bedfb2459c7695531c1a37c0ea", "patch": "@@ -1,5 +1,7 @@\n // { dg-do run { target c++11 } }\n // { dg-require-string-conversions \"\" }\n+// { dg-xfail-run-if \"broken long double IO\" { newlib_broken_long_double_io  }  \"*\" \"\" }\n+\n // 2008-06-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n // Copyright (C) 2008-2016 Free Software Foundation, Inc."}, {"sha": "839037917c959905a11774854bb1ceb88c5559a4", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_arithmetic/char/hexfloat.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2Fhexfloat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c429372b27f6bedfb2459c7695531c1a37c0ea/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2Fhexfloat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2Fhexfloat.cc?ref=39c429372b27f6bedfb2459c7695531c1a37c0ea", "patch": "@@ -1,6 +1,7 @@\n // { dg-do run { target c++11 } }\n // { dg-require-string-conversions \"\" }\n // { dg-xfail-run-if \"PR libstdc++/64054\" { *-*-solaris* } }\n+// { dg-xfail-run-if \"broken long double IO\" { newlib_broken_long_double_io  }  \"*\" \"\" }\n \n // 2014-03-27 R\u00fcdiger Sonderfeld\n // test the hexadecimal floating point inserters (facet num_put)"}]}