{"sha": "afe5959e11727f6ff276bc1a7c62181306157504", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZlNTk1OWUxMTcyN2Y2ZmYyNzZiYzFhN2M2MjE4MTMwNjE1NzUwNA==", "commit": {"author": {"name": "Boris Yakobowski", "email": "yakobowski@adacore.com", "date": "2021-04-21T12:49:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-05T13:09:07Z"}, "message": "[Ada] Do not catch 'N rem -1' in CodePeer_Mode\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_Op_Rem): Remove special case for rem -1\n\tin CodePeer_Mode.", "tree": {"sha": "effe3f021eaa64cda307ec29083e338f7afd4f96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/effe3f021eaa64cda307ec29083e338f7afd4f96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afe5959e11727f6ff276bc1a7c62181306157504", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe5959e11727f6ff276bc1a7c62181306157504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afe5959e11727f6ff276bc1a7c62181306157504", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe5959e11727f6ff276bc1a7c62181306157504/comments", "author": {"login": "yakobowski", "id": 4638069, "node_id": "MDQ6VXNlcjQ2MzgwNjk=", "avatar_url": "https://avatars.githubusercontent.com/u/4638069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yakobowski", "html_url": "https://github.com/yakobowski", "followers_url": "https://api.github.com/users/yakobowski/followers", "following_url": "https://api.github.com/users/yakobowski/following{/other_user}", "gists_url": "https://api.github.com/users/yakobowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/yakobowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yakobowski/subscriptions", "organizations_url": "https://api.github.com/users/yakobowski/orgs", "repos_url": "https://api.github.com/users/yakobowski/repos", "events_url": "https://api.github.com/users/yakobowski/events{/privacy}", "received_events_url": "https://api.github.com/users/yakobowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ea47850bbb38ea81a34c503533d4dd0f3391f19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea47850bbb38ea81a34c503533d4dd0f3391f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea47850bbb38ea81a34c503533d4dd0f3391f19"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "54e91b2f2e3858984ebf4d6ab086197e1cee0f6f", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe5959e11727f6ff276bc1a7c62181306157504/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe5959e11727f6ff276bc1a7c62181306157504/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=afe5959e11727f6ff276bc1a7c62181306157504", "patch": "@@ -10393,7 +10393,9 @@ package body Exp_Ch4 is\n       --  types and this is really marginal). We will just assume that we need\n       --  the test if the left operand can be negative at all.\n \n-      if Lneg and Rneg then\n+      if (Lneg and Rneg)\n+         and then not CodePeer_Mode\n+      then\n          Rewrite (N,\n            Make_If_Expression (Loc,\n              Expressions => New_List ("}]}