{"sha": "238109cd665cde1e1263eec736f2930bc0654ffb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM4MTA5Y2Q2NjVjZGUxZTEyNjNlZWM3MzZmMjkzMGJjMDY1NGZmYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-18T23:52:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-18T23:52:48Z"}, "message": "search.c (lookup_field): Call complete_type in all cases.\n\n\t* search.c (lookup_field): Call complete_type in all cases.\n\nFixes CLN problems.\n\n\t* decl.c (finish_function): Just warn about flowing off the end.\n\nFrom-SVN: r15555", "tree": {"sha": "dbd2d811f0232fd2793a995ed52d1200779efbce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbd2d811f0232fd2793a995ed52d1200779efbce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/238109cd665cde1e1263eec736f2930bc0654ffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/238109cd665cde1e1263eec736f2930bc0654ffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/238109cd665cde1e1263eec736f2930bc0654ffb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/238109cd665cde1e1263eec736f2930bc0654ffb/comments", "author": null, "committer": null, "parents": [{"sha": "6020d3605c14364b52b635a93ef2b93ac39108ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6020d3605c14364b52b635a93ef2b93ac39108ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6020d3605c14364b52b635a93ef2b93ac39108ba"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "39b7ac2ea10f3407e19a738f19fbd63b3fea5db5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/238109cd665cde1e1263eec736f2930bc0654ffb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/238109cd665cde1e1263eec736f2930bc0654ffb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=238109cd665cde1e1263eec736f2930bc0654ffb", "patch": "@@ -1,3 +1,9 @@\n+Thu Sep 18 16:47:52 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* search.c (lookup_field): Call complete_type in all cases.\n+\n+\t* decl.c (finish_function): Just warn about flowing off the end.\n+\n Wed Sep 17 10:31:25 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (grokparms): Don't bash a permanent list node if we're\n@@ -306,11 +312,12 @@ Tue Sep  2 10:27:08 1997  Richard Henderson  <rth@cygnus.com>\n \n \t* typeck.c (build_ptrmemfunc1): Clean up ptr->int cast warnings.\n \n-Mon Sep  1 13:19:04 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+Mon Sep  1 13:19:04 1997  Eugene Mamchits <eugin@ips.ras.ru>\n \n \t* call.c (add_builtin_candidate): Add missing TREE_TYPE.\n \t(compare_ics): Likewise.\n-\tFrom someone whose name I've lost (sorry).\n+\n+Mon Sep  1 13:19:04 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* call.c (joust): Warn about choosing one conversion op over\n  \tanother because of 'this' argument when the other return type is"}, {"sha": "261ec65f185e0a487bf221f53d9f3b0b32dc9b5b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/238109cd665cde1e1263eec736f2930bc0654ffb/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/238109cd665cde1e1263eec736f2930bc0654ffb/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=238109cd665cde1e1263eec736f2930bc0654ffb", "patch": "@@ -12264,7 +12264,7 @@ finish_function (lineno, call_poplevel, nested)\n \t{\n \t  /* If this function returns non-void and control can drop through,\n \t     complain.  */\n-\t  cp_pedwarn (\"control reaches end of non-void function `%D'\", fndecl);\n+\t  cp_warning (\"control reaches end of non-void function `%D'\", fndecl);\n \t}\n       /* With just -W, complain only if function returns both with\n \t and without a value.  */"}, {"sha": "c8e08064630eee42d698daee7801ec1c8f23a87e", "filename": "gcc/cp/search.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/238109cd665cde1e1263eec736f2930bc0654ffb/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/238109cd665cde1e1263eec736f2930bc0654ffb/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=238109cd665cde1e1263eec736f2930bc0654ffb", "patch": "@@ -1206,12 +1206,15 @@ lookup_field (xbasetype, name, protect, want_type)\n     }\n   else if (IS_AGGR_TYPE_CODE (TREE_CODE (xbasetype)))\n     {\n-      type = complete_type (xbasetype);\n+      type = xbasetype;\n       basetype_path = TYPE_BINFO (type);\n       BINFO_VIA_PUBLIC (basetype_path) = 1;\n       BINFO_INHERITANCE_CHAIN (basetype_path) = NULL_TREE;\n     }\n-  else my_friendly_abort (97);\n+  else\n+    my_friendly_abort (97);\n+\n+  complete_type (type);\n \n   if (CLASSTYPE_MTABLE_ENTRY (type))\n     {"}]}