{"sha": "45beef47f36e1b423ed6fefee2fe4397dd1e172d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDViZWVmNDdmMzZlMWI0MjNlZDZmZWZlZTJmZTQzOTdkZDFlMTcyZA==", "commit": {"author": {"name": "Jason Thorpe", "email": "thorpej@wasabisystems.com", "date": "2002-05-29T17:57:55Z"}, "committer": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-05-29T17:57:55Z"}, "message": "netbsd-elf.h (TARGET_OS_CPP_BUILTINS): Define.\n\n* config/i386/netbsd-elf.h (TARGET_OS_CPP_BUILTINS): Define.\n(CPP_PREDEFINES): Remove.\n(SUBTARGET_EXTRA_SPECS): Define.\n(CPP_SPEC): Use %(netbsd_cpp_spec).\n* config/i386/netbsd.h (TARGET_OS_CPP_BUILTINS): Define.\n(CPP_PREDEFINES): Remove.\n(SUBTARGET_EXTRA_SPECS): Define.\n(CPP_SPEC): Use %(netbsd_cpp_spec).\n* config/i386/netbsd64.h (TARGET_OS_CPP_BUILTINS): Define.\n(CPP_PREDEFINES, CPP_LP64_SPEC, CPP_SUBTARGET_SPEC): Remove.\n(SUBTARGET_EXTRA_SPECS): Remove cpp_lp64 and cpp_subtarget.\nAdd netbsd_cpp_spec.\n(CPP_SPEC): Remove %(cpp_subtarget), add %(netbsd_cpp_spec).\n\nFrom-SVN: r54009", "tree": {"sha": "8ba9d197f34663c8f1a0915a833715ea761fe45c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ba9d197f34663c8f1a0915a833715ea761fe45c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45beef47f36e1b423ed6fefee2fe4397dd1e172d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45beef47f36e1b423ed6fefee2fe4397dd1e172d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45beef47f36e1b423ed6fefee2fe4397dd1e172d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45beef47f36e1b423ed6fefee2fe4397dd1e172d/comments", "author": null, "committer": null, "parents": [{"sha": "cd7ab83f2d607e6be282ff65408d4efd5d1b35f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7ab83f2d607e6be282ff65408d4efd5d1b35f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7ab83f2d607e6be282ff65408d4efd5d1b35f1"}], "stats": {"total": 81, "additions": 51, "deletions": 30}, "files": [{"sha": "4fe6deb211931d8822e6f9012f39450f1c738776", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45beef47f36e1b423ed6fefee2fe4397dd1e172d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45beef47f36e1b423ed6fefee2fe4397dd1e172d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45beef47f36e1b423ed6fefee2fe4397dd1e172d", "patch": "@@ -1,3 +1,19 @@\n+2002-05-29  Jason Thorpe  <thorpej@wasabisystems.com>\n+\n+\t* config/i386/netbsd-elf.h (TARGET_OS_CPP_BUILTINS): Define.\n+\t(CPP_PREDEFINES): Remove.\n+\t(SUBTARGET_EXTRA_SPECS): Define.\n+\t(CPP_SPEC): Use %(netbsd_cpp_spec).\n+\t* config/i386/netbsd.h (TARGET_OS_CPP_BUILTINS): Define.\n+\t(CPP_PREDEFINES): Remove.\n+\t(SUBTARGET_EXTRA_SPECS): Define.\n+\t(CPP_SPEC): Use %(netbsd_cpp_spec).\n+\t* config/i386/netbsd64.h (TARGET_OS_CPP_BUILTINS): Define.\n+\t(CPP_PREDEFINES, CPP_LP64_SPEC, CPP_SUBTARGET_SPEC): Remove.\n+\t(SUBTARGET_EXTRA_SPECS): Remove cpp_lp64 and cpp_subtarget.\n+\tAdd netbsd_cpp_spec.\n+\t(CPP_SPEC): Remove %(cpp_subtarget), add %(netbsd_cpp_spec).\n+\n 2002-05-29  Neil Booth  <neil@daikokuya.demon.co.uk>\n \t    Zack Weinberg <zack@codesourcery.com>\n "}, {"sha": "b91847f7a4ad22b487ea333fe7d65089305424ba", "filename": "gcc/config/i386/netbsd-elf.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45beef47f36e1b423ed6fefee2fe4397dd1e172d/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45beef47f36e1b423ed6fefee2fe4397dd1e172d/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h?ref=45beef47f36e1b423ed6fefee2fe4397dd1e172d", "patch": "@@ -20,6 +20,13 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      NETBSD_OS_CPP_BUILTINS_ELF();\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n /* Provide a LINK_SPEC appropriate for a NetBSD/i386 ELF target.\n    This is a copy of LINK_SPEC from <netbsd-elf.h> tweaked for\n    the i386 target.  */\n@@ -38,16 +45,14 @@ Boston, MA 02111-1307, USA.  */\n       %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.elf_so}}\t\\\n     %{static:-static}}\"\n \n-/* Names to predefine in the preprocessor for this target machine.  */\n-\n-#define CPP_PREDEFINES\t\t\t\t\t\t\t\\\n-  \"-D__NetBSD__ -D__ELF__ -Asystem=unix -Asystem=NetBSD\"\n+#undef SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS\t\t\t\\\n+  { \"netbsd_cpp_spec\", NETBSD_CPP_SPEC },\n \n-/* Provide a CPP_SPEC appropriate for NetBSD.  Currently we just deal with\n-   the GCC option `-posix'.  */\n+/* Provide a CPP_SPEC appropriate for NetBSD.  */\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %(netbsd_cpp_spec)\"\n \n \n /* Make gcc agree with <machine/ansi.h> */"}, {"sha": "89dce21a311f94c26f1d5188f94e6b2a501694b4", "filename": "gcc/config/i386/netbsd.h", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45beef47f36e1b423ed6fefee2fe4397dd1e172d/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45beef47f36e1b423ed6fefee2fe4397dd1e172d/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd.h?ref=45beef47f36e1b423ed6fefee2fe4397dd1e172d", "patch": "@@ -1,16 +1,23 @@\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      NETBSD_OS_CPP_BUILTINS_AOUT();\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n #define TARGET_VERSION fprintf (stderr, \" (NetBSD/i386 a.out)\");\n \n /* This goes away when the math-emulator is fixed */\n #undef TARGET_SUBTARGET_DEFAULT\n #define TARGET_SUBTARGET_DEFAULT \\\n   (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_NO_FANCY_MATH_387)\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -D__NetBSD__ \\\n- -Asystem=unix -Asystem=bsd -Asystem=NetBSD\"\n+#undef SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS\t\t\t\\\n+  { \"netbsd_cpp_spec\", NETBSD_CPP_SPEC },\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %(netbsd_cpp_spec)\"\n \n \f\n #undef SIZE_TYPE"}, {"sha": "24448c9851586b7041ea5c6664a2db1bb43fa2fa", "filename": "gcc/config/i386/netbsd64.h", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45beef47f36e1b423ed6fefee2fe4397dd1e172d/gcc%2Fconfig%2Fi386%2Fnetbsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45beef47f36e1b423ed6fefee2fe4397dd1e172d/gcc%2Fconfig%2Fi386%2Fnetbsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd64.h?ref=45beef47f36e1b423ed6fefee2fe4397dd1e172d", "patch": "@@ -20,6 +20,14 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      NETBSD_OS_CPP_BUILTINS_ELF();\t\t\\\n+      if (TARGET_64BIT)\t\t\t\t\\\n+\tNETBSD_OS_CPP_BUILTINS_LP64();\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Provide a LINK_SPEC appropriate for a NetBSD/x86-64 ELF target.\n    This is a copy of LINK_SPEC from <netbsd-elf.h> tweaked for\n@@ -41,29 +49,14 @@ Boston, MA 02111-1307, USA.  */\n        %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.elf_so}}\t\\\n      %{static:-static}}\"\n \n-\n-/* Names to predefine in the preprocessor for this target machine.  */\n-\n-#define CPP_PREDEFINES\t\t\t\t\t\t\t\\\n-  \"-D__NetBSD__ -D__ELF__ -Asystem=unix -Asystem=NetBSD\"\n-\n-\n-/* Provide some extra CPP specs needed by NetBSD/x86_64.  */\n-#define CPP_LP64_SPEC \"%{!m32:-D_LP64}\"\n-\n-#define CPP_SUBTARGET_SPEC \"%(cpp_lp64)\"\n-\n #undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\t\\\n-  { \"cpp_lp64\", CPP_LP64_SPEC },\t\t\t\t\t\\\n-  { \"cpp_subtarget\", CPP_SUBTARGET_SPEC },\n-\n+#define SUBTARGET_EXTRA_SPECS\t\t\t\\\n+  { \"netbsd_cpp_spec\", NETBSD_CPP_SPEC },\n \n-/* Provide a CPP_SPEC appropriate for NetBSD.  Currently we deal with\n-   our subtarget specs and the GCC option `-posix'.  */\n+/* Provide a CPP_SPEC appropriate for NetBSD.  */\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %(cpp_subtarget) %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %(netbsd_cpp_spec)\"\n \n \n /* Output assembler code to FILE to call the profiler.  */"}]}