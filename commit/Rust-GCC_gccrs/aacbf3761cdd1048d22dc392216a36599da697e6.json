{"sha": "aacbf3761cdd1048d22dc392216a36599da697e6", "node_id": "C_kwDOANBUbNoAKGFhY2JmMzc2MWNkZDEwNDhkMjJkYzM5MjIxNmEzNjU5OWRhNjk3ZTY", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-03-07T13:02:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-16T08:42:04Z"}, "message": "[Ada] Fix iterated element association loop var escaping loop scope\n\nFix the escaping of the loop variable from the loop scope in both forms\nof iterated element associations (i.e. \"for J in ...\" and \"for J of\n...\"). Create a dedicated scope around the analyses of both loops. Also\ncreate a copy of the Loop_Parameter_Specification instead of analyzing\n(and modifying) the original Tree as it will be reanalyzed later.\n\ngcc/ada/\n\n\t* sem_aggr.adb (Resolve_Iterated_Association): Create scope\n\taround N_Iterated_Element_Association handling. Analyze a copy\n\tof the Loop_Parameter_Specification. Call Analyze instead\n\tAnalyze_* to be more homogeneous.\n\t(Sem_Ch5): Remove now unused package.", "tree": {"sha": "d155133e7935b1637b864ff773b131d93cfa9e35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d155133e7935b1637b864ff773b131d93cfa9e35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aacbf3761cdd1048d22dc392216a36599da697e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aacbf3761cdd1048d22dc392216a36599da697e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aacbf3761cdd1048d22dc392216a36599da697e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aacbf3761cdd1048d22dc392216a36599da697e6/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4acb82e97f8043dcd5e6b91b7d3c05d7b478b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4acb82e97f8043dcd5e6b91b7d3c05d7b478b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4acb82e97f8043dcd5e6b91b7d3c05d7b478b45"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "4796ae15ae29b5739744cbb76e7358c2d6c544d8", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aacbf3761cdd1048d22dc392216a36599da697e6/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aacbf3761cdd1048d22dc392216a36599da697e6/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=aacbf3761cdd1048d22dc392216a36599da697e6", "patch": "@@ -51,7 +51,6 @@ with Sem_Aux;        use Sem_Aux;\n with Sem_Case;       use Sem_Case;\n with Sem_Cat;        use Sem_Cat;\n with Sem_Ch3;        use Sem_Ch3;\n-with Sem_Ch5;        use Sem_Ch5;\n with Sem_Ch8;        use Sem_Ch8;\n with Sem_Ch13;       use Sem_Ch13;\n with Sem_Dim;        use Sem_Dim;\n@@ -2890,12 +2889,12 @@ package body Sem_Aggr is\n       is\n          Loc      : constant Source_Ptr := Sloc (N);\n          Choice   : Node_Id;\n+         Copy     : Node_Id;\n          Ent      : Entity_Id;\n          Expr     : Node_Id;\n          Key_Expr : Node_Id;\n          Id       : Entity_Id;\n          Id_Name  : Name_Id;\n-         Iter     : Node_Id;\n          Typ      : Entity_Id := Empty;\n \n       begin\n@@ -2906,15 +2905,29 @@ package body Sem_Aggr is\n          --  is present. In both cases a Key_Expression is present.\n \n          if Nkind (Comp) = N_Iterated_Element_Association then\n+\n+            --  Create a temporary scope to avoid some modifications from\n+            --  escaping the Analyze call below. The original Tree will be\n+            --  reanalyzed later.\n+\n+            Ent := New_Internal_Entity\n+                     (E_Loop, Current_Scope, Sloc (Comp), 'L');\n+            Set_Etype  (Ent, Standard_Void_Type);\n+            Set_Parent (Ent, Parent (Comp));\n+            Push_Scope (Ent);\n+\n             if Present (Loop_Parameter_Specification (Comp)) then\n-               Analyze_Loop_Parameter_Specification\n-                  (Loop_Parameter_Specification (Comp));\n+               Copy := Copy_Separate_Tree (Comp);\n+\n+               Analyze\n+                 (Loop_Parameter_Specification (Copy));\n+\n                Id_Name := Chars (Defining_Identifier\n                             (Loop_Parameter_Specification (Comp)));\n             else\n-               Iter := Copy_Separate_Tree (Iterator_Specification (Comp));\n-               Analyze (Iter);\n-               Typ := Etype (Defining_Identifier (Iter));\n+               Copy := Copy_Separate_Tree (Iterator_Specification (Comp));\n+               Analyze (Copy);\n+\n                Id_Name := Chars (Defining_Identifier\n                             (Iterator_Specification (Comp)));\n             end if;\n@@ -2926,12 +2939,14 @@ package body Sem_Aggr is\n \n             Key_Expr := Key_Expression (Comp);\n             Analyze_And_Resolve (New_Copy_Tree (Key_Expr), Key_Type);\n+            End_Scope;\n \n          elsif Present (Iterator_Specification (Comp)) then\n-            Iter    := Copy_Separate_Tree (Iterator_Specification (Comp));\n+            Copy    := Copy_Separate_Tree (Iterator_Specification (Comp));\n             Id_Name := Chars (Defining_Identifier (Comp));\n-            Analyze (Iter);\n-            Typ := Etype (Defining_Identifier (Iter));\n+\n+            Analyze (Copy);\n+            Typ := Etype (Defining_Identifier (Copy));\n \n          else\n             Choice := First (Discrete_Choices (Comp));\n@@ -2965,7 +2980,8 @@ package body Sem_Aggr is\n          --  analysis.\n \n          Id := Make_Defining_Identifier (Sloc (Comp), Id_Name);\n-         Ent := New_Internal_Entity (E_Loop, Current_Scope, Sloc (Comp), 'L');\n+         Ent := New_Internal_Entity (E_Loop,\n+                  Current_Scope, Sloc (Comp), 'L');\n          Set_Etype  (Ent, Standard_Void_Type);\n          Set_Parent (Ent, Parent (Comp));\n          Push_Scope (Ent);\n@@ -3000,6 +3016,8 @@ package body Sem_Aggr is\n \n       end Resolve_Iterated_Association;\n \n+   --  Start of processing for Resolve_Container_Aggregate\n+\n    begin\n       pragma Assert (Nkind (Asp) = N_Aggregate);\n "}]}