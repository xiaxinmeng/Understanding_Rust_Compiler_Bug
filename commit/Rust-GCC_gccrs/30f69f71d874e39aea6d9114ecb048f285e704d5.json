{"sha": "30f69f71d874e39aea6d9114ecb048f285e704d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmNjlmNzFkODc0ZTM5YWVhNmQ5MTE0ZWNiMDQ4ZjI4NWU3MDRkNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-06-12T22:14:08Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-06-12T22:14:08Z"}, "message": "std_sstream.h: Add allocator_type, as per DR 251.\n\n\n2001-06-12  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tlibstdc++/3142\n\t* include/bits/std_sstream.h: Add allocator_type, as per DR 251.\n\n\tlibstdc++/3141\n\t* include/bits/istream.tcc (getline, get): Fix as per DR 243.\n\n\tlibstdc++/3140\n\t* include/bits/std_bitset.h (bitset::set): Fix as per DR 186.\n\n\tlibstdc++/3139\n\t* include/bits/limits_generic.h: Fix as per DR 184.\n\nFrom-SVN: r43273", "tree": {"sha": "dde606d8d34fe8dc15778659625d906eed2228c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dde606d8d34fe8dc15778659625d906eed2228c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30f69f71d874e39aea6d9114ecb048f285e704d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f69f71d874e39aea6d9114ecb048f285e704d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f69f71d874e39aea6d9114ecb048f285e704d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f69f71d874e39aea6d9114ecb048f285e704d5/comments", "author": null, "committer": null, "parents": [{"sha": "3a08e428d3985c9bf73b49cb294b159bbb61879a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a08e428d3985c9bf73b49cb294b159bbb61879a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a08e428d3985c9bf73b49cb294b159bbb61879a"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "178a6918d8b5fd8f8001bf09a2be35ee11301b5a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=30f69f71d874e39aea6d9114ecb048f285e704d5", "patch": "@@ -1,3 +1,17 @@\n+2001-06-12  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++/3142\n+\t* include/bits/std_sstream.h: Add allocator_type, as per DR 251.\n+\n+\tlibstdc++/3141\n+\t* include/bits/istream.tcc (getline, get): Fix as per DR 243.\n+\n+\tlibstdc++/3140\n+\t* include/bits/std_bitset.h (bitset::set): Fix as per DR 186.\n+\n+\tlibstdc++/3139\n+\t* include/bits/limits_generic.h: Fix as per DR 184.\n+\n 2001-06-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/3126"}, {"sha": "3d942b2feb68e980996e64c4c18f90d307b6370a", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=30f69f71d874e39aea6d9114ecb048f285e704d5", "patch": "@@ -570,7 +570,7 @@ namespace std\n \t\t__throw_exception_again;\n \t    }\n \t}\n-      *__s = char_type(NULL);\n+      *__s = char_type();\n       if (!_M_gcount)\n \tthis->setstate(ios_base::failbit);\n       return *this;\n@@ -670,7 +670,7 @@ namespace std\n \t\t__throw_exception_again;\n \t    }\n \t}\n-      *__s = char_type(NULL);\n+      *__s = char_type();\n       if (!_M_gcount)\n \tthis->setstate(ios_base::failbit);\n       return *this;"}, {"sha": "8ad003340b0af723125c3de8cc5ea3a079547876", "filename": "libstdc++-v3/include/bits/limits_generic.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flimits_generic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flimits_generic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flimits_generic.h?ref=30f69f71d874e39aea6d9114ecb048f285e704d5", "patch": "@@ -117,8 +117,8 @@ namespace std {\n         static bool max() throw()\n         { return true; }\n \n-        static const int digits = 8;\n-        static const int digits10 = 2;\n+        static const int digits = 1;\n+        static const int digits10 = 0;\n         static const bool is_signed = false;\n         static const bool is_integer = true;\n         static const bool is_exact = true;\n@@ -148,9 +148,9 @@ namespace std {\n         static bool denorm_min() throw()\n         { return static_cast<bool>(0); }\n \n-        static const bool is_iec559 = true;\n+        static const bool is_iec559 = false;\n         static const bool is_bounded = true;\n-        static const bool is_modulo = true;\n+        static const bool is_modulo = false;\n \n         static const bool traps = false;\n         static const bool tinyness_before = false;"}, {"sha": "eee8247af725c22130e4f26453c6083e5b3d5995", "filename": "libstdc++-v3/include/bits/std_bitset.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_bitset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_bitset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_bitset.h?ref=30f69f71d874e39aea6d9114ecb048f285e704d5", "patch": "@@ -551,14 +551,7 @@ class bitset : private _Base_bitset<__BITSET_WORDS(_Nb)>\n     return *this;\n   }\n \n-  bitset<_Nb>& set(size_t __pos) {\n-    if (__pos >= _Nb)\n-      __STL_THROW(out_of_range(\"bitset\"));\n-\n-    return _Unchecked_set(__pos);\n-  }\n-\n-  bitset<_Nb>& set(size_t __pos, int __val) {\n+  bitset<_Nb>& set(size_t __pos, bool __val = true) {\n     if (__pos >= _Nb)\n       __STL_THROW(out_of_range(\"bitset\"));\n "}, {"sha": "bcae7ed2985f3336750b7aa3f3879314737d8bb6", "filename": "libstdc++-v3/include/bits/std_sstream.h", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f69f71d874e39aea6d9114ecb048f285e704d5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_sstream.h?ref=30f69f71d874e39aea6d9114ecb048f285e704d5", "patch": "@@ -48,6 +48,10 @@ namespace std\n       // Types:\n       typedef _CharT \t\t\t\t\tchar_type;\n       typedef _Traits \t\t\t\t\ttraits_type;\n+#ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n+// 251. basic_stringbuf missing allocator_type\n+      typedef _Alloc\t\t\t\t       \tallocator_type;\n+#endif\n       typedef typename traits_type::int_type \t\tint_type;\n       typedef typename traits_type::pos_type \t\tpos_type;\n       typedef typename traits_type::off_type \t\toff_type;\n@@ -194,6 +198,10 @@ namespace std\n       // Types:\n       typedef _CharT \t\t\t\t\tchar_type;\n       typedef _Traits \t\t\t\t\ttraits_type;\n+#ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n+// 251. basic_stringbuf missing allocator_type\n+      typedef _Alloc\t\t\t\t       \tallocator_type;\n+#endif\n       typedef typename traits_type::int_type \t\tint_type;\n       typedef typename traits_type::pos_type \t\tpos_type;\n       typedef typename traits_type::off_type \t\toff_type;\n@@ -245,6 +253,10 @@ namespace std\n       // Types:\n       typedef _CharT \t\t\t\t\tchar_type;\n       typedef _Traits \t\t\t\t\ttraits_type;\n+#ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n+// 251. basic_stringbuf missing allocator_type\n+      typedef _Alloc\t\t\t\t       \tallocator_type;\n+#endif\n       typedef typename traits_type::int_type \t\tint_type;\n       typedef typename traits_type::pos_type \t\tpos_type;\n       typedef typename traits_type::off_type \t\toff_type;\n@@ -296,6 +308,10 @@ namespace std\n       // Types:\n       typedef _CharT \t\t\t\t\tchar_type;\n       typedef _Traits \t\t\t\t\ttraits_type;\n+#ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n+// 251. basic_stringbuf missing allocator_type\n+      typedef _Alloc\t\t\t\t       \tallocator_type;\n+#endif\n       typedef typename traits_type::int_type \t\tint_type;\n       typedef typename traits_type::pos_type \t\tpos_type;\n       typedef typename traits_type::off_type \t\toff_type;\n@@ -349,4 +365,3 @@ namespace std\n #endif\n \n #endif\t// _CPP_SSTREAM\n-"}]}