{"sha": "59730cc567ecdd3a550d9c005dbaa63620cc0f19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk3MzBjYzU2N2VjZGQzYTU1MGQ5YzAwNWRiYWE2MzYyMGNjMGYxOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-11-20T19:43:20Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-11-20T19:43:20Z"}, "message": "re PR target/88070 (ICE in create_pre_exit, at mode-switching.c:438)\n\n\tPR target/88070\n\t* mode-switching.c (create_pre_exit): After reload, always split the\n\tfallthrough edge to the exit block.\n\ntestsuite/ChangeLog:\n\n\tPR target/88070\n\t* gcc.target/i386/pr88070.c: New test.\n\nFrom-SVN: r266326", "tree": {"sha": "5832394f439c06e0056c89a430d573aa38eaf605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5832394f439c06e0056c89a430d573aa38eaf605"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59730cc567ecdd3a550d9c005dbaa63620cc0f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59730cc567ecdd3a550d9c005dbaa63620cc0f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59730cc567ecdd3a550d9c005dbaa63620cc0f19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59730cc567ecdd3a550d9c005dbaa63620cc0f19/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "012b51cf21538e0695cbcc6b725f1140655c86b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012b51cf21538e0695cbcc6b725f1140655c86b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/012b51cf21538e0695cbcc6b725f1140655c86b7"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "2ee021c62c330dbb373c38075e94b1757f7797fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59730cc567ecdd3a550d9c005dbaa63620cc0f19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59730cc567ecdd3a550d9c005dbaa63620cc0f19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59730cc567ecdd3a550d9c005dbaa63620cc0f19", "patch": "@@ -1,3 +1,9 @@\n+2018-11-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/88070\n+\t* mode-switching.c (create_pre_exit): After reload, always split the\n+\tfallthrough edge to the exit block.\n+\n 2018-11-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-devirt.c (add_type_duplicate): Do not ICE on incomplete enums."}, {"sha": "589fbeb07425f2c9ef1eb1201cdff1277b4a49d8", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59730cc567ecdd3a550d9c005dbaa63620cc0f19/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59730cc567ecdd3a550d9c005dbaa63620cc0f19/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=59730cc567ecdd3a550d9c005dbaa63620cc0f19", "patch": "@@ -248,8 +248,22 @@ create_pre_exit (int n_entities, int *entity_map, const int *num_modes)\n \tgcc_assert (!pre_exit);\n \t/* If this function returns a value at the end, we have to\n \t   insert the final mode switch before the return value copy\n-\t   to its hard register.  */\n-\tif (EDGE_COUNT (EXIT_BLOCK_PTR_FOR_FN (cfun)->preds) == 1\n+\t   to its hard register.\n+\n+\t   x86 targets use mode-switching infrastructure to\n+\t   conditionally insert vzeroupper instruction at the exit\n+\t   from the function where there is no need to switch the\n+\t   mode before the return value copy.  The vzeroupper insertion\n+\t   pass runs after reload, so use !reload_completed as a stand-in\n+\t   for x86 to skip the search for the return value copy insn.\n+\n+\t   N.b.: the code below assumes that the return copy insn\n+\t   immediately precedes its corresponding use insn.  This\n+\t   assumption does not hold after reload, since sched1 pass\n+\t   can schedule the return copy insn away from its\n+\t   corresponding use insn.  */\n+\tif (!reload_completed\n+\t    && EDGE_COUNT (EXIT_BLOCK_PTR_FOR_FN (cfun)->preds) == 1\n \t    && NONJUMP_INSN_P ((last_insn = BB_END (src_bb)))\n \t    && GET_CODE (PATTERN (last_insn)) == USE\n \t    && GET_CODE ((ret_reg = XEXP (PATTERN (last_insn), 0))) == REG)"}, {"sha": "1915d92af3b8c38fb15ff92d798cfb84ae60e4e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59730cc567ecdd3a550d9c005dbaa63620cc0f19/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59730cc567ecdd3a550d9c005dbaa63620cc0f19/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=59730cc567ecdd3a550d9c005dbaa63620cc0f19", "patch": "@@ -1,3 +1,8 @@\n+2018-11-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/88070\n+\t* gcc.target/i386/pr88070.c: New test.\n+\n 2018-11-20  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/flogr-1.c: New test."}, {"sha": "5c545e3f77a2adc278ae0abdb22ea9d56ba35e51", "filename": "gcc/testsuite/gcc.target/i386/pr88070.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59730cc567ecdd3a550d9c005dbaa63620cc0f19/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88070.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59730cc567ecdd3a550d9c005dbaa63620cc0f19/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88070.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88070.c?ref=59730cc567ecdd3a550d9c005dbaa63620cc0f19", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/88070 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fexpensive-optimizations -fnon-call-exceptions -fschedule-insns -fno-dce -fno-dse -mavx\" } */\n+\n+typedef float vfloat2 __attribute__ ((__vector_size__ (2 * sizeof (float))));\n+\n+vfloat2\n+test1float2 (float c)\n+{\n+  vfloat2 v = { c, c };\n+  return v;\n+}"}]}