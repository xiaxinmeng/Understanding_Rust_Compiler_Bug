{"sha": "ba2eef033e59d80fde35d0cc3acf4d82f7706e60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEyZWVmMDMzZTU5ZDgwZmRlMzVkMGNjM2FjZjRkODJmNzcwNmU2MA==", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2021-06-15T07:06:02Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2021-06-15T07:12:55Z"}, "message": "c-family: Copy DECL_USER_ALIGN even if DECL_ALIGN is similar.\n\nWhen re-declaring a function with differing attributes DECL_USER_ALIGN\nis usually not merged/copied when DECL_ALIGN is similar.  On s390 this\nwill cause a warning message not to be shown.  Similarly, we warned\nabout the wrong alignment when short-circuiting an alignment initialization in\ncommon_handle_aligned_attribute ().\n\nFix this by copying DECL_USER_ALIGN even if DECL_ALIGN is similar as\nwell as getting rid of the short-circuited initialization.\n\ngcc/c-family/ChangeLog:\n\n\t* c-attribs.c (common_handle_aligned_attribute): Remove short\n\tcircuit and dead code.\n\ngcc/c/ChangeLog:\n\n\t* c-decl.c (merge_decls): Copy DECL_USER_ALIGN if DECL_ALIGN is\n\tsimilar.\n\ngcc/cp/ChangeLog:\n\n\t* decl.c (duplicate_decls): Likewise.", "tree": {"sha": "decf378f6ad15e1100d7317f31cc0bc033037980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/decf378f6ad15e1100d7317f31cc0bc033037980"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba2eef033e59d80fde35d0cc3acf4d82f7706e60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2eef033e59d80fde35d0cc3acf4d82f7706e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba2eef033e59d80fde35d0cc3acf4d82f7706e60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2eef033e59d80fde35d0cc3acf4d82f7706e60/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "327a6b55e171669f2e72588570c931cd000822d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327a6b55e171669f2e72588570c931cd000822d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327a6b55e171669f2e72588570c931cd000822d0"}], "stats": {"total": 37, "additions": 14, "deletions": 23}, "files": [{"sha": "e60fb31d8c8ea16ad1ba7e88de29f12edf9d3d93", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 7, "deletions": 23, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2eef033e59d80fde35d0cc3acf4d82f7706e60/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2eef033e59d80fde35d0cc3acf4d82f7706e60/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=ba2eef033e59d80fde35d0cc3acf4d82f7706e60", "patch": "@@ -2338,14 +2338,17 @@ common_handle_aligned_attribute (tree *node, tree name, tree args, int flags,\n       *no_add_attrs = true;\n     }\n   else if (TREE_CODE (decl) == FUNCTION_DECL\n-\t   && ((curalign = DECL_ALIGN (decl)) > bitalign\n-\t       || ((lastalign = DECL_ALIGN (last_decl)) > bitalign)))\n+\t   && (((curalign = DECL_ALIGN (decl)) > bitalign)\n+\t       | ((lastalign = DECL_ALIGN (last_decl)) > bitalign)))\n     {\n       /* Either a prior attribute on the same declaration or one\n \t on a prior declaration of the same function specifies\n \t stricter alignment than this attribute.  */\n-      bool note = lastalign != 0;\n-      if (lastalign)\n+      bool note = (lastalign > curalign\n+\t\t   || (lastalign == curalign\n+\t\t       && (DECL_USER_ALIGN (last_decl)\n+\t\t\t   > DECL_USER_ALIGN (decl))));\n+      if (note)\n \tcuralign = lastalign;\n \n       curalign /= BITS_PER_UNIT;\n@@ -2390,25 +2393,6 @@ common_handle_aligned_attribute (tree *node, tree name, tree args, int flags,\n       This formally comes from the c++11 specification but we are\n       doing it for the GNU attribute syntax as well.  */\n     *no_add_attrs = true;\n-  else if (!warn_if_not_aligned_p\n-\t   && TREE_CODE (decl) == FUNCTION_DECL\n-\t   && DECL_ALIGN (decl) > bitalign)\n-    {\n-      /* Don't warn for function alignment here if warn_if_not_aligned_p\n-\t is true.  It will be warned about later.  */\n-      if (DECL_USER_ALIGN (decl))\n-\t{\n-\t  /* Only reject attempts to relax/override an alignment\n-\t     explicitly specified previously and accept declarations\n-\t     that appear to relax the implicit function alignment for\n-\t     the target.  Both increasing and increasing the alignment\n-\t     set by -falign-functions setting is permitted.  */\n-\t  error (\"alignment for %q+D was previously specified as %d \"\n-\t\t \"and may not be decreased\", decl,\n-\t\t DECL_ALIGN (decl) / BITS_PER_UNIT);\n-\t  *no_add_attrs = true;\n-\t}\n-    }\n   else if (warn_if_not_aligned_p\n \t   && TREE_CODE (decl) == FIELD_DECL\n \t   && !DECL_C_BIT_FIELD (decl))"}, {"sha": "7cd13a593eb6b8cc3e862df309f067d34d12021f", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2eef033e59d80fde35d0cc3acf4d82f7706e60/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2eef033e59d80fde35d0cc3acf4d82f7706e60/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=ba2eef033e59d80fde35d0cc3acf4d82f7706e60", "patch": "@@ -2620,6 +2620,9 @@ merge_decls (tree newdecl, tree olddecl, tree newtype, tree oldtype)\n \t  SET_DECL_ALIGN (newdecl, DECL_ALIGN (olddecl));\n \t  DECL_USER_ALIGN (newdecl) |= DECL_USER_ALIGN (olddecl);\n \t}\n+      else if (DECL_ALIGN (olddecl) == DECL_ALIGN (newdecl)\n+\t       && DECL_USER_ALIGN (olddecl) != DECL_USER_ALIGN (newdecl))\n+\tDECL_USER_ALIGN (newdecl) = 1;\n       if (DECL_WARN_IF_NOT_ALIGN (olddecl)\n \t  > DECL_WARN_IF_NOT_ALIGN (newdecl))\n \tSET_DECL_WARN_IF_NOT_ALIGN (newdecl,"}, {"sha": "02772e94763fe524781329ce86e03a153aef7420", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba2eef033e59d80fde35d0cc3acf4d82f7706e60/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba2eef033e59d80fde35d0cc3acf4d82f7706e60/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ba2eef033e59d80fde35d0cc3acf4d82f7706e60", "patch": "@@ -2805,6 +2805,10 @@ duplicate_decls (tree newdecl, tree olddecl, bool hiding, bool was_hidden)\n       SET_DECL_ALIGN (newdecl, DECL_ALIGN (olddecl));\n       DECL_USER_ALIGN (newdecl) |= DECL_USER_ALIGN (olddecl);\n     }\n+  else if (DECL_ALIGN (olddecl) == DECL_ALIGN (newdecl)\n+      && DECL_USER_ALIGN (olddecl) != DECL_USER_ALIGN (newdecl))\n+    DECL_USER_ALIGN (newdecl) = 1;\n+\n   DECL_USER_ALIGN (olddecl) = DECL_USER_ALIGN (newdecl);\n   if (DECL_WARN_IF_NOT_ALIGN (olddecl)\n       > DECL_WARN_IF_NOT_ALIGN (newdecl))"}]}