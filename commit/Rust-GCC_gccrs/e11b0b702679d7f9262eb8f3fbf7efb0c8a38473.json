{"sha": "e11b0b702679d7f9262eb8f3fbf7efb0c8a38473", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTExYjBiNzAyNjc5ZDdmOTI2MmViOGYzZmJmN2VmYjBjOGEzODQ3Mw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2002-08-30T13:13:59Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2002-08-30T13:13:59Z"}, "message": "target.c (ffetarget_memcpy_): Don't test nonexistent HOST_BYTES_BIG_ENDIAN, HOST_BITS_BIG_ENDIAN.\n\n\t* target.c (ffetarget_memcpy_): Don't test nonexistent\n\tHOST_BYTES_BIG_ENDIAN, HOST_BITS_BIG_ENDIAN.  Check\n\tHOST_WORDS_BIG_ENDIAN against both WORDS_BIG_ENDIAN and\n\tBYTES_BIG_ENDIAN.\n\nFrom-SVN: r56683", "tree": {"sha": "589550346033352dfcce383066d65a4f7d7cd0d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/589550346033352dfcce383066d65a4f7d7cd0d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e11b0b702679d7f9262eb8f3fbf7efb0c8a38473", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11b0b702679d7f9262eb8f3fbf7efb0c8a38473", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e11b0b702679d7f9262eb8f3fbf7efb0c8a38473", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11b0b702679d7f9262eb8f3fbf7efb0c8a38473/comments", "author": null, "committer": null, "parents": [{"sha": "e194407348d9822674fcf81d116b97b61866f6b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e194407348d9822674fcf81d116b97b61866f6b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e194407348d9822674fcf81d116b97b61866f6b5"}], "stats": {"total": 29, "additions": 11, "deletions": 18}, "files": [{"sha": "dc5ce882c023c229e5e3ccbafab9c72bd54543d8", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11b0b702679d7f9262eb8f3fbf7efb0c8a38473/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11b0b702679d7f9262eb8f3fbf7efb0c8a38473/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=e11b0b702679d7f9262eb8f3fbf7efb0c8a38473", "patch": "@@ -1,3 +1,10 @@\n+2002-08-30  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* target.c (ffetarget_memcpy_): Don't test nonexistent\n+\tHOST_BYTES_BIG_ENDIAN, HOST_BITS_BIG_ENDIAN.  Check\n+\tHOST_WORDS_BIG_ENDIAN against both WORDS_BIG_ENDIAN and\n+\tBYTES_BIG_ENDIAN.\n+\n 2002-08-30  Alan Modra  <amodra@bigpond.net.au>\n \n \t* target.h (FFETARGET_32bit_longs): Don't define for powerpc64 or"}, {"sha": "1ea4fa2ec888ff03a60d53e8c7a04ef1330ab9ca", "filename": "gcc/f/target.c", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11b0b702679d7f9262eb8f3fbf7efb0c8a38473/gcc%2Ff%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11b0b702679d7f9262eb8f3fbf7efb0c8a38473/gcc%2Ff%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.c?ref=e11b0b702679d7f9262eb8f3fbf7efb0c8a38473", "patch": "@@ -2521,6 +2521,9 @@ void *\n ffetarget_memcpy_ (void *dst, void *src, size_t len)\n {\n #ifdef CROSS_COMPILE\n+  /* HOST_WORDS_BIG_ENDIAN corresponds to both WORDS_BIG_ENDIAN and\n+     BYTES_BIG_ENDIAN (i.e. there are no HOST_ macros to represent a\n+     difference in the two latter).  */\n   int host_words_big_endian =\n #ifndef HOST_WORDS_BIG_ENDIAN\n     0\n@@ -2529,22 +2532,6 @@ ffetarget_memcpy_ (void *dst, void *src, size_t len)\n #endif\n     ;\n \n-  int host_bytes_big_endian =\n-#ifndef HOST_BYTES_BIG_ENDIAN\n-    0\n-#else\n-    HOST_BYTES_BIG_ENDIAN\n-#endif\n-    ;\n-\n-  int host_bits_big_endian =\n-#ifndef HOST_BITS_BIG_ENDIAN\n-    0\n-#else\n-    HOST_BITS_BIG_ENDIAN\n-#endif\n-    ;\n-\n   /* This is just hands thrown up in the air over bits coming through this\n      function representing a number being memcpy:d as-is from host to\n      target.  We can't generally adjust endianness here since we don't\n@@ -2555,8 +2542,7 @@ ffetarget_memcpy_ (void *dst, void *src, size_t len)\n      for instance in g77.f-torture/execute/980628-[4-6].f and alpha2.f.\n      Still, we compile *some* code.  FIXME: Rewrite handling of numbers.  */\n   if (!WORDS_BIG_ENDIAN != !host_words_big_endian\n-      || !BYTES_BIG_ENDIAN != !host_bytes_big_endian\n-      || !BITS_BIG_ENDIAN != !host_bits_big_endian)\n+      || !BYTES_BIG_ENDIAN != !host_words_big_endian)\n     sorry (\"data initializer on host with different endianness\");\n \n #endif /* CROSS_COMPILE */"}]}