{"sha": "f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNiMDA0ZDhkN2ZlMjI0YzZjY2I1Yzc3M2I1MmI2N2MxZTRkOTg2Zg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-04-28T02:50:55Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-04-28T02:50:55Z"}, "message": "[multiple changes]\n\n\n2000-04-26  Nathan C. Myers  <ncm@cantrip.org>\n\n\t* bits/basic_string.h: include <bits/atomicity.h> instead\n        of <atomicity.h>, and use the uglified names.\n        * config/cpu/*/atomicity.h: replace with bits/atomicity.h;\n        uglify names, eliminate dependence on <inttypes.h>.\n        * src/Makefile.in, src/Makefile.am: refer to correct place\n        for atomicity.h header.\n\n2000-04-25 Steven King <sxking@uswest.net>\n\n        * bits/basic_string.h: Fix syntax error.\n\n2000-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4 (GLIBCPP_CHECK_MATH_SUPPORT): Improve checks for\n\tUSE_LONG_DOUBLE.\n\t(GLIBCPP_ENABLE_DEBUG): If alpha, use -gdwarf-2.\n\t* math/Makefile.am (EXTRA_LONG_DOUBLE_yes): Add all the long\n\tversions to this as copysignl is needed anyway for these targets.\n\t* math/Makefile.in: Regenerate.\n\n\t* bits/streambuf.tcc (streambuf::xsgetn): Tweak.\n\t* bits/fstream.tcc (underflow): Cast to libio types.\n\t* bits/basic_file.h (seekoff): Fixes for alpha: use __c_streamoff.\n\t* config/c_io_libio.cc (seekoff): And here.\n\nFrom-SVN: r33501", "tree": {"sha": "faf35eaea67b476c9581f054090299264a071616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faf35eaea67b476c9581f054090299264a071616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/comments", "author": null, "committer": null, "parents": [{"sha": "a649660541ce3fca70e523b27aab11d075177183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a649660541ce3fca70e523b27aab11d075177183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a649660541ce3fca70e523b27aab11d075177183"}], "stats": {"total": 610, "additions": 389, "deletions": 221}, "files": [{"sha": "f7017977fcfa8194677e721a8c9b8c3199b9b275", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -1,3 +1,30 @@\n+2000-04-26  Nathan C. Myers  <ncm@cantrip.org>\n+\n+\t* bits/basic_string.h: include <bits/atomicity.h> instead\n+        of <atomicity.h>, and use the uglified names.\n+        * config/cpu/*/atomicity.h: replace with bits/atomicity.h;\n+        uglify names, eliminate dependence on <inttypes.h>.\n+        * src/Makefile.in, src/Makefile.am: refer to correct place\n+        for atomicity.h header.\n+\n+2000-04-25 Steven King <sxking@uswest.net>\n+\n+        * bits/basic_string.h: Fix syntax error.\n+\n+2000-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCPP_CHECK_MATH_SUPPORT): Improve checks for\n+\tUSE_LONG_DOUBLE.\n+\t(GLIBCPP_ENABLE_DEBUG): If alpha, use -gdwarf-2.\n+\t* math/Makefile.am (EXTRA_LONG_DOUBLE_yes): Add all the long\n+\tversions to this as copysignl is needed anyway for these targets.\n+\t* math/Makefile.in: Regenerate.\n+\t\n+\t* bits/streambuf.tcc (streambuf::xsgetn): Tweak.\n+\t* bits/fstream.tcc (underflow): Cast to libio types.\n+\t* bits/basic_file.h (seekoff): Fixes for alpha: use __c_streamoff.\n+\t* config/c_io_libio.cc (seekoff): And here.\n+\t\n 2000-04-24  Loren J. Rittle  <ljrittle@acm.org>\n \n         * mkcheck.in: Report compiler version used for test.  Find"}, {"sha": "fbf76307f22db4e1a6ca0914111e7efa3e077883", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -137,11 +137,4 @@ AM_MAKEFLAGS = \\\n \t\"NM=$(NM)\" \\\n \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n-\t\"DESTDIR=$(DESTDIR)\"\n-\n-\n-\n-\n-\n-\n-\n+\t\"DESTDIR=$(DESTDIR)\" "}, {"sha": "9c2822b996c807ea1ef2dae81d68fb0258c3c060", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -188,7 +188,7 @@ AM_MAKEFLAGS = \\\n \t\"NM=$(NM)\" \\\n \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n-\t\"DESTDIR=$(DESTDIR)\"\n+\t\"DESTDIR=$(DESTDIR)\" \n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs"}, {"sha": "f06473051f8aeea29119047a775935c3ddf1e0a9", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -242,8 +242,8 @@ dnl Check to see what architecture we are compiling for. If it's\n dnl supported, use special hand-crafted routines to provide thread\n dnl primitives.\n dnl \n-dnl Depending on what is found, select various configure/cpu/*/atomicity.h \n-dnl If not found, select configure/cpu/generic/atomicity.h\n+dnl Depending on what is found, select configure/cpu/*/bits/atomicity.h \n+dnl If not found, select configure/cpu/generic/bits/atomicity.h\n dnl\n dnl GLIBCPP_CHECK_CPU\n AC_DEFUN(GLIBCPP_CHECK_CPU, [\n@@ -414,9 +414,9 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   carg cargf nan hypot hypotf atan2f expf copysignf)\n \n   dnl We compile the long double complex functions only if the function \n-  dnl provides the non-complex functions.\n+  dnl provides the non-complex long double functions.\n   USE_LONG_DOUBLE=no\n-  AC_CHECK_FUNC(sinl,\n+  AC_CHECK_FUNC(copysignl,\n   USE_LONG_DOUBLE=yes\n   AC_REPLACE_MATHFUNCS(ccoshl ccosl cexpl cpowl csinhl csinl \\\n   csqrtl ctanhl ctanl cargl hypotl signbitl c_logl clog10l))\n@@ -604,10 +604,19 @@ changequote([, ])dnl\n enable_debug=GLIBCPP_ENABLE_DEBUG_DEFAULT)dnl\n dnl Option parsed, now set things appropriately\n case \"$enable_debug\" in\n-    yes)  DEBUGFLAGS='-ggdb -O0'\n-          ;;\n-    no)   DEBUGFLAGS='-g'\n-          ;;\n+    yes)  \n+        case \"$target_cpu\" in\n+\t\talpha*)\n+\t\t\tDEBUGFLAGS='-O0 -gdwarf-2'\n+\t\t\t;;\t\t\t\n+\t\t*)\n+\t\t\tDEBUGFLAGS='-O0 -g'\t\t\t\n+\t\t\t;;\n+\tesac\n+        ;;\n+    no)   \n+\tDEBUGFLAGS='-g'\n+        ;;\n esac\n AC_SUBST(DEBUGFLAGS)\n ])\n@@ -728,6 +737,11 @@ AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n \t\t  need_libio=yes\n   \t\tfi\n   \t\tAC_SUBST(BUILD_LIBIO_INCLUDE)\n+\n+\t\t# see if the _G_config.h header needs to be built. \n+\t\t# NB: This replaces the _G_CONFIG_H machinery in libio-v2\n+\t\tAC_CHECK_HEADER(_G_config.h,  has_gconf_h=yes, has_gconf_h=no)\n+  \t\tAM_CONDITIONAL(GLIBCPP_NEED_LIBIO_CONFIG_H, test \"$has_gconf_h\" = no)\n \t\t;;\n         xwince)\n                 CSTDIO_H=c_io_wince.h"}, {"sha": "1b5e847f23a839e1511b44872a9ccf95a9667ae1", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -254,8 +254,8 @@ dnl Check to see what architecture we are compiling for. If it's\n dnl supported, use special hand-crafted routines to provide thread\n dnl primitives.\n dnl \n-dnl Depending on what is found, select various configure/cpu/*/atomicity.h \n-dnl If not found, select configure/cpu/generic/atomicity.h\n+dnl Depending on what is found, select configure/cpu/*/bits/atomicity.h \n+dnl If not found, select configure/cpu/generic/bits/atomicity.h\n dnl\n dnl GLIBCPP_CHECK_CPU\n AC_DEFUN(GLIBCPP_CHECK_CPU, [\n@@ -426,9 +426,9 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   carg cargf nan hypot hypotf atan2f expf copysignf)\n \n   dnl We compile the long double complex functions only if the function \n-  dnl provides the non-complex functions.\n+  dnl provides the non-complex long double functions.\n   USE_LONG_DOUBLE=no\n-  AC_CHECK_FUNC(sinl,\n+  AC_CHECK_FUNC(copysignl,\n   USE_LONG_DOUBLE=yes\n   AC_REPLACE_MATHFUNCS(ccoshl ccosl cexpl cpowl csinhl csinl \\\n   csqrtl ctanhl ctanl cargl hypotl signbitl c_logl clog10l))\n@@ -616,10 +616,19 @@ changequote([, ])dnl\n enable_debug=GLIBCPP_ENABLE_DEBUG_DEFAULT)dnl\n dnl Option parsed, now set things appropriately\n case \"$enable_debug\" in\n-    yes)  DEBUGFLAGS='-ggdb -O0'\n-          ;;\n-    no)   DEBUGFLAGS='-g'\n-          ;;\n+    yes)  \n+        case \"$target_cpu\" in\n+\t\talpha*)\n+\t\t\tDEBUGFLAGS='-O0 -gdwarf-2'\n+\t\t\t;;\t\t\t\n+\t\t*)\n+\t\t\tDEBUGFLAGS='-O0 -g'\t\t\t\n+\t\t\t;;\n+\tesac\n+        ;;\n+    no)   \n+\tDEBUGFLAGS='-g'\n+        ;;\n esac\n AC_SUBST(DEBUGFLAGS)\n ])\n@@ -740,6 +749,11 @@ AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n \t\t  need_libio=yes\n   \t\tfi\n   \t\tAC_SUBST(BUILD_LIBIO_INCLUDE)\n+\n+\t\t# see if the _G_config.h header needs to be built. \n+\t\t# NB: This replaces the _G_CONFIG_H machinery in libio-v2\n+\t\tAC_CHECK_HEADER(_G_config.h,  has_gconf_h=yes, has_gconf_h=no)\n+  \t\tAM_CONDITIONAL(GLIBCPP_NEED_LIBIO_CONFIG_H, test \"$has_gconf_h\" = no)\n \t\t;;\n         xwince)\n                 CSTDIO_H=c_io_wince.h"}, {"sha": "6037c2f50e0a223f57770ec3ef0989bc0ab3ed22", "filename": "libstdc++-v3/bits/basic_file.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Fbasic_file.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Fbasic_file.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fbasic_file.h?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -1,6 +1,6 @@\n // Wrapper of C-language FILE struct -*- C++ -*-\n \n-// Copyright (C) 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,8 +49,8 @@ namespace std {\n #endif\n   {\n #if _GLIBCPP_BASIC_FILE_ENCAPSULATION\n-    int _M_fileno;\n-    __c_file_type* _M_cfile;\n+    int \t\t_M_fileno;\n+    __c_file_type* \t_M_cfile;\n #endif\n \n   public:\n@@ -110,15 +110,15 @@ namespace std {\n     // A complex \"seekoff\" function that sets all of __c_file_type's\n     // ponters and associated data members correctly and manages it's\n     // relation to the external byte sequence.\n-    virtual __c_streampos \n+    virtual streamoff\n     seekoff(streamoff __off, ios_base::seekdir __way,\n \t    ios_base::openmode __mode = ios_base::in | ios_base::out);\n \n     // A complex \"seekpos\" function that sets all of __c_file_type's\n     // pointers and associated data members correctly and manages it's\n     // relation to the external byte sequence.\n-    virtual __c_streampos \n-    seekpos(__c_streampos __pos, \n+    virtual streamoff\n+    seekpos(streamoff __pos, \n \t    ios_base::openmode __mode = ios_base::in | ios_base::out);\n \n     virtual streambuf* \n@@ -145,8 +145,8 @@ namespace std {\n     // A simple seek function for the external byte sequence, that\n     // does no mucking around with or setting of the pointers or flags\n     // in __c_file_type.\n-    virtual __c_streampos \n-    sys_seek(__c_streampos __off, ios_base::seekdir __way);\n+    virtual streamoff\n+    sys_seek(streamoff __off, ios_base::seekdir __way);\n \n     virtual int \n     sys_close();"}, {"sha": "b7d73cab62380efd9c2eba6611506bdb7dcedc29", "filename": "libstdc++-v3/bits/basic_string.h", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fbasic_string.h?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -35,7 +35,7 @@\n #define _CPP_BITS_STRING_H\t1\n \n #include <bits/exception_support.h>\n-#include <atomicity.h>\n+#include <bits/atomicity.h>\n \n namespace std {\n \n@@ -123,10 +123,6 @@ namespace std {\n \t// Types:\n \ttypedef typename _Alloc::rebind<char>::other _Raw_bytes_alloc;\n \n-\t// NB: Would be better if atomicity.h defined type(s) itself.\n-\ttypedef uint32_t _State_type; \n-\ttypedef int32_t _Signed_state_type;\n-\n \t// (Public) Data members: \n \n \t// The maximum number of individual char_type elements of an\n@@ -145,19 +141,19 @@ namespace std {\n \n \tsize_type \t\t_M_length;\n \tsize_type \t\t_M_capacity;\n-\t_State_type\t\t_M_state;\n+\t_Atomic_word\t\t_M_state;\n \t\n         bool\n \t_M_is_leaked() const\n-        { return static_cast<_Signed_state_type>(_M_state) < 0; }\n+        { return _M_state < 0; }\n \n         bool\n \t_M_is_shared() const\n-        { return static_cast<_Signed_state_type>(_M_state) > 0; }\n+        { return _M_state > 0; }\n \n         void\n \t_M_set_leaked() \n-        { _M_state = _State_type(-1); }\n+        { _M_state = -1; }\n \n         void\n \t_M_set_sharable() \n@@ -183,7 +179,7 @@ namespace std {\n \tvoid \n \t_M_dispose(const _Alloc& __a)\n \t{ \n-\t  if (_Signed_state_type(exchange_and_add(&_M_state, -1)) <= 0)  \n+\t  if (__exchange_and_add(&_M_state, -1) <= 0)  \n \t    _M_destroy(__a); \n \t}  // XXX MT\n \n@@ -193,7 +189,7 @@ namespace std {\n \t_CharT* \n \t_M_refcopy() throw()\n \t{ \n-\t  atomic_add(&_M_state, 1); \n+\t  __atomic_add(&_M_state, 1); \n \t  return _M_refdata(); \n \t}  // XXX MT\n \n@@ -887,9 +883,10 @@ namespace std {\n     inline basic_string<_CharT, _Traits, _Alloc>\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     {\n-      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;\n+      typedef basic_string<_CharT, _Traits, _Alloc> \t__string_type;\n+      typedef typename __string_type::size_type\t\t__size_type;\n       __string_type __str(__lhs);\n-      __str.append(__string_type::size_type(1), __rhs);\n+      __str.append(__size_type(1), __rhs);\n       return __str;\n     }\n "}, {"sha": "d2d8c26c81c747ef4716f2c285a07a055b9ce452", "filename": "libstdc++-v3/bits/fstream.tcc", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -198,8 +198,8 @@ namespace std\n \t      if (__testout)\n \t\t_M_really_overflow();\n \t      else \n-\t\t_M_file->seekoff(_M_in_cur - _M_in_beg, ios_base::cur, \n-\t\t\t\t ios_base::in);\n+\t\t_M_file->seekoff(_M_in_cur - _M_in_beg, \n+\t\t\t\t ios_base::cur, ios_base::in);\n \t    }\n \n \t  if (__testinit || __testget)\n@@ -208,7 +208,7 @@ namespace std\n \t      // external byte sequence (whatever physical byte sink or\n \t      // FILE actually is.)\n \t      char __conv_buf[_M_buf_size];\n-\t      int_type __size = _M_file->xsgetn(__conv_buf, _M_buf_size);\n+\t      streamsize __size = _M_file->xsgetn(__conv_buf, _M_buf_size);\n \t      \n \t      // Part two: (Re)fill internal buf contents from external buf.\n \t      if (0 < __size)\n@@ -240,9 +240,9 @@ namespace std\n \t\t  // Part three: Sync the current internal buffer\n \t\t  // position with the (now overshot) external buffer\n \t\t  // position.  \n-\t\t  pos_type __p = _M_file->seekoff(0 - __size, ios_base::cur, \n+\t\t  streamoff __p = _M_file->seekoff(0 - __size, ios_base::cur, \n \t\t\t\t\t\t  ios_base::in);\n-\t\t  if (__p._M_position() == -1)\n+\t\t  if (__p == -1)\n \t\t    {\n \t\t      // XXX Something is wrong, do error checking.\n \t\t    }\n@@ -379,11 +379,11 @@ namespace std\n \t  // _M_file->sys_write(), and do error (minimal) checking.\n \t  if (__r != codecvt_base::error)\n \t    {\n-\t      streamsize __r = _M_file->xsputn(__conv_buf, __plen);\n+\t      streamsize __len = _M_file->xsputn(__conv_buf, __plen);\n \t      // NB: Need this so that external byte sequence reflects\n \t      // internal buffer.\n \t      _M_file->sync();\n-\t      if (__r == __plen)\n+\t      if (__len == __plen)\n \t\t{\n \t\t  _M_set_indeterminate();\n \t\t  __retval = traits_type::not_eof(__c);\n@@ -431,8 +431,6 @@ namespace std\n \t\t__computed_off += _M_in_cur - _M_in_beg;\n \t  \n \t      __retval = _M_file->seekoff(__computed_off, __way, __mode);\n-\t      if (__retval._M_position() == -1)\n-\t\t__retval == pos_type(off_type(-1)); \n \t      _M_set_indeterminate();\n \t    }\n \t  // NB: Need to do this in case _M_file in indeterminate\n@@ -511,8 +509,7 @@ namespace std\n \t\t\n \t\tif (__r != codecvt_base::error)\n \t\t  {\n-\t\t    streamsize __r = _M_file->xsputn(__conv_buf, \n-\t\t\t\t\t\t     __rlen);\n+\t\t    streamsize __r = _M_file->xsputn(__conv_buf, __rlen);\n \t\t    if (__r == __rlen)\n \t\t      {\n \t\t\t_M_out_cur = _M_out_beg;"}, {"sha": "5326852358a9d893d5df15fe8ddb0d552a6e2d3c", "filename": "libstdc++-v3/bits/std_fstream.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -171,7 +171,7 @@ namespace std {\n \t    // the position of the external byte sequence (_M_file)\n \t    // plus the offset in the current internal buffer\n \t    // (_M_out_beg - _M_out_cur)\n-\t    __c_streampos __cur = _M_file->seekoff(0, ios_base::cur);\n+\t    streamoff __cur = _M_file->seekoff(0, ios_base::cur);\n \t    off_type __off = _M_out_cur - _M_out_beg;\n \t    this->_M_really_overflow();\n \t    _M_file->seekpos(__cur + __off);"}, {"sha": "8aeb421409ad92cec04aab1e08495533d0a664f6", "filename": "libstdc++-v3/bits/streambuf.tcc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstreambuf.tcc?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -128,8 +128,7 @@ namespace std {\n \t{\n \t  while (__retval < __n)\n \t    {\n-\t      bool __testget = _M_in_cur < _M_in_end;\n-\t      if (__testget)\n+\t      if (_M_in_cur < _M_in_end)\n \t\t{\n \t\t  size_t __len;\n \t\t  if (_M_in_cur + __n - __retval <= _M_in_end)"}, {"sha": "22fa70220197379982f66391689318a4056cccbb", "filename": "libstdc++-v3/config/c_io_libio.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.cc?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -204,14 +204,14 @@ namespace std {\n   __basic_file::xsgetn(char* __s, streamsize __n)\n   { return _IO_default_xsgetn(this, __s, __n); }\n \n-  __c_streampos \n+  streamoff\n   __basic_file::seekoff(streamoff __off, ios_base::seekdir __way, \n \t\t\tios_base::openmode __mode)\n   { return _IO_file_seekoff(this, __off, __way, __mode); }\n \n-  __c_streampos \n-  __basic_file::seekpos(__c_streampos __pos, ios_base::openmode __mode)\n-    { return _IO_file_seekoff(this, __pos, ios_base::beg, __mode); }\n+  streamoff\n+  __basic_file::seekpos(streamoff __pos, ios_base::openmode __mode)\n+  { return _IO_file_seekoff(this, __pos, ios_base::beg, __mode); }\n \n   // NB: Unused.\n   streambuf* \n@@ -238,8 +238,8 @@ namespace std {\n   { return _IO_file_write(this, __s, __n); }\n \n   // NB: Unused.\n-  __c_streampos \n-  __basic_file::sys_seek(__c_streampos __pos, ios_base::seekdir __way)\n+  streamoff\n+  __basic_file::sys_seek(streamoff __pos, ios_base::seekdir __way)\n   { return _IO_file_seek(this, __pos, __way); }\n   \n   // NB: Unused."}, {"sha": "088231ec155a577f59c0e641a22a05a7aeef0043", "filename": "libstdc++-v3/config/c_io_libio.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.h?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -37,22 +37,23 @@\n namespace std {\n \n // from fpos.h\n-  typedef _IO_off_t  \tstreamoff;\n   typedef _IO_ssize_t \tstreamsize; // Signed integral type\n-#if _GLIBCPP_USE_WCHAR_T\n-  typedef _IO_off_t  \twstreamoff;\n   typedef _IO_ssize_t \twstreamsize;\n-#endif\n+\n #if defined(_G_IO_IO_FILE_VERSION) && _G_IO_IO_FILE_VERSION == 0x20001\n-  typedef _IO_fpos64_t  __c_streampos;\n+  typedef _IO_off64_t \tstreamoff;\n+  typedef _IO_fpos64_t \t__c_streampos;\n+  typedef _IO_off64_t  \twstreamoff;\n #else\n-  typedef _IO_fpos_t    __c_streampos;\n+  typedef _IO_off_t \tstreamoff;\n+  typedef _IO_fpos_t \t__c_streampos;\n+  typedef _IO_off_t  \twstreamoff;\n #endif\n \n   typedef _IO_lock_t\t__c_lock;\n \n // from basic_file.h\n-  typedef _IO_FILE __c_file_type;\n+  typedef _IO_FILE \t__c_file_type;\n #define _GLIBCPP_BASIC_FILE_INHERITANCE 1\n \n // from ios_base.h"}, {"sha": "73d8d89c842c0b9d492e63da1d3bf71e1418b7c4", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 169, "deletions": 112, "changes": 281, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -2168,16 +2168,25 @@ else\n   enable_debug=no\n fi\n case \"$enable_debug\" in\n-    yes)  DEBUGFLAGS='-ggdb -O0'\n-          ;;\n-    no)   DEBUGFLAGS='-g'\n-          ;;\n+    yes)  \n+        case \"$target_cpu\" in\n+\t\talpha*)\n+\t\t\tDEBUGFLAGS='-O0 -gdwarf-2'\n+\t\t\t;;\t\t\t\n+\t\t*)\n+\t\t\tDEBUGFLAGS='-O0 -g'\t\t\t\n+\t\t\t;;\n+\tesac\n+        ;;\n+    no)   \n+\tDEBUGFLAGS='-g'\n+        ;;\n esac\n \n \n \n   echo $ac_n \"checking for cstdio to use\"\"... $ac_c\" 1>&6\n-echo \"configure:2181: checking for cstdio to use\" >&5\n+echo \"configure:2190: checking for cstdio to use\" >&5\n   # Check whether --enable-cstdio or --disable-cstdio was given.\n if test \"${enable_cstdio+set}\" = set; then\n   enableval=\"$enable_cstdio\"\n@@ -2201,17 +2210,17 @@ fi\n \t\t# see if we are on a system with libio native (ie, linux)\n   \t\tac_safe=`echo \"libio.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for libio.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2205: checking for libio.h\" >&5\n+echo \"configure:2214: checking for libio.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2210 \"configure\"\n+#line 2219 \"configure\"\n #include \"confdefs.h\"\n #include <libio.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2215: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2224: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2241,6 +2250,52 @@ fi\n \t\t  need_libio=yes\n   \t\tfi\n   \t\t\n+\n+\t\t# see if the _G_config.h header needs to be built. \n+\t\t# NB: This replaces the _G_CONFIG_H machinery in libio-v2\n+\t\tac_safe=`echo \"_G_config.h\" | sed 'y%./+-%__p_%'`\n+echo $ac_n \"checking for _G_config.h\"\"... $ac_c\" 1>&6\n+echo \"configure:2259: checking for _G_config.h\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 2264 \"configure\"\n+#include \"confdefs.h\"\n+#include <_G_config.h>\n+EOF\n+ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n+{ (eval echo configure:2269: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n+if test -z \"$ac_err\"; then\n+  rm -rf conftest*\n+  eval \"ac_cv_header_$ac_safe=yes\"\n+else\n+  echo \"$ac_err\" >&5\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_header_$ac_safe=no\"\n+fi\n+rm -f conftest*\n+fi\n+if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  has_gconf_h=yes\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+has_gconf_h=no\n+fi\n+\n+  \t\t\n+\n+if test \"$has_gconf_h\" = no; then\n+  GLIBCPP_NEED_LIBIO_CONFIG_H_TRUE=\n+  GLIBCPP_NEED_LIBIO_CONFIG_H_FALSE='#'\n+else\n+  GLIBCPP_NEED_LIBIO_CONFIG_H_TRUE='#'\n+  GLIBCPP_NEED_LIBIO_CONFIG_H_FALSE=\n+fi\n \t\t;;\n         xwince)\n                 CSTDIO_H=c_io_wince.h\n@@ -2289,7 +2344,7 @@ EOF\n \n \n       echo $ac_n \"checking for threads package to use\"\"... $ac_c\" 1>&6\n-echo \"configure:2293: checking for threads package to use\" >&5\n+echo \"configure:2348: checking for threads package to use\" >&5\n   # Check whether --enable-threads or --disable-threads was given.\n if test \"${enable_threads+set}\" = set; then\n   enableval=\"$enable_threads\"\n@@ -2352,17 +2407,17 @@ fi\n     posix)\n       ac_safe=`echo \"pthread.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for pthread.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2356: checking for pthread.h\" >&5\n+echo \"configure:2411: checking for pthread.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2361 \"configure\"\n+#line 2416 \"configure\"\n #include \"confdefs.h\"\n #include <pthread.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2366: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2421: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2526,17 +2581,17 @@ else\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:2530: checking for $ac_hdr\" >&5\n+echo \"configure:2585: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2535 \"configure\"\n+#line 2590 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2540: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2595: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2566,7 +2621,7 @@ done\n   \n   \n   echo $ac_n \"checking for GNU C++ __complex__ support\"\"... $ac_c\" 1>&6\n-echo \"configure:2570: checking for GNU C++ __complex__ support\" >&5\n+echo \"configure:2625: checking for GNU C++ __complex__ support\" >&5\n   if eval \"test \\\"`echo '$''{'glibcpp_cv_complex'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2580,7 +2635,7 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes\n cross_compiling=$ac_cv_prog_cxx_cross\n \n     cat > conftest.$ac_ext <<EOF\n-#line 2584 \"configure\"\n+#line 2639 \"configure\"\n #include \"confdefs.h\"\n struct dcomplex { __complex__ double x; }; \\\n \t\t    dcomplex f(const dcomplex& x) { return dcomplex(x); }\n@@ -2589,7 +2644,7 @@ int main() {\n \t\t     dcomplex x; f(x); \n ; return 0; }\n EOF\n-if { (eval echo configure:2593: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2648: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcpp_cv_complex=ok\n else\n@@ -2621,7 +2676,7 @@ EOF\n   \n   \n   echo $ac_n \"checking for GNU C++ __complex__ float support\"\"... $ac_c\" 1>&6\n-echo \"configure:2625: checking for GNU C++ __complex__ float support\" >&5\n+echo \"configure:2680: checking for GNU C++ __complex__ float support\" >&5\n   if eval \"test \\\"`echo '$''{'glibcpp_cv_float_complex'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2654,14 +2709,14 @@ cross_compiling=$ac_cv_prog_cxx_cross\n       };\n EOB\n     cat > conftest.$ac_ext <<EOF\n-#line 2658 \"configure\"\n+#line 2713 \"configure\"\n #include \"confdefs.h\"\n #include \"conftest.h\"\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2665: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2720: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcpp_cv_float_complex=ok\n else\n@@ -2692,16 +2747,16 @@ EOF\n \n   \n     echo $ac_n \"checking for __builtin_sinf\"\"... $ac_c\" 1>&6\n-echo \"configure:2696: checking for __builtin_sinf\" >&5\n+echo \"configure:2751: checking for __builtin_sinf\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 2698 \"configure\"\n+#line 2753 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n float foo(void) { __builtin_sinf(0.0); }\n ; return 0; }\n EOF\n-if { (eval echo configure:2705: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2760: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_builtin_sinf=yes\n else\n@@ -2720,16 +2775,16 @@ EOF\n   fi\n \n   echo $ac_n \"checking for __builtin_cosf\"\"... $ac_c\" 1>&6\n-echo \"configure:2724: checking for __builtin_cosf\" >&5\n+echo \"configure:2779: checking for __builtin_cosf\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 2726 \"configure\"\n+#line 2781 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n float foo(void) { __builtin_cosf(0.0); }\n ; return 0; }\n EOF\n-if { (eval echo configure:2733: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2788: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_builtin_cosf=yes\n else\n@@ -2748,16 +2803,16 @@ EOF\n   fi\n \n   echo $ac_n \"checking for __builtin_fabsf\"\"... $ac_c\" 1>&6\n-echo \"configure:2752: checking for __builtin_fabsf\" >&5\n+echo \"configure:2807: checking for __builtin_fabsf\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 2754 \"configure\"\n+#line 2809 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n float foo(void) { __builtin_fabsf(0.0); }\n ; return 0; }\n EOF\n-if { (eval echo configure:2761: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2816: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_builtin_fabsf=yes\n else\n@@ -2776,16 +2831,16 @@ EOF\n   fi\n \n   echo $ac_n \"checking for __builtin_sqrtf\"\"... $ac_c\" 1>&6\n-echo \"configure:2780: checking for __builtin_sqrtf\" >&5\n+echo \"configure:2835: checking for __builtin_sqrtf\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 2782 \"configure\"\n+#line 2837 \"configure\"\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n float foo(void) { __builtin_sqrtf(0.0); }\n ; return 0; }\n EOF\n-if { (eval echo configure:2789: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2844: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_builtin_sqrtf=yes\n else\n@@ -2805,15 +2860,15 @@ EOF\n \n   \n   echo $ac_n \"checking for sin in -lm\"\"... $ac_c\" 1>&6\n-echo \"configure:2809: checking for sin in -lm\" >&5\n+echo \"configure:2864: checking for sin in -lm\" >&5\n ac_lib_var=`echo m'_'sin | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lm  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 2817 \"configure\"\n+#line 2872 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -2824,7 +2879,7 @@ int main() {\n sin()\n ; return 0; }\n EOF\n-if { (eval echo configure:2828: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2883: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -2851,17 +2906,17 @@ fi\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:2855: checking for $ac_hdr\" >&5\n+echo \"configure:2910: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2860 \"configure\"\n+#line 2915 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2865: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2920: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2893,12 +2948,12 @@ done\n   carg cargf nan hypot hypotf atan2f expf copysignf\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2897: checking for $ac_func\" >&5\n+echo \"configure:2952: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2902 \"configure\"\n+#line 2957 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2921,7 +2976,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2925: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2980: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2949,60 +3004,60 @@ done\n \n \n       USE_LONG_DOUBLE=no\n-  echo $ac_n \"checking for sinl\"\"... $ac_c\" 1>&6\n-echo \"configure:2954: checking for sinl\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_func_sinl'+set}'`\\\" = set\"; then\n+  echo $ac_n \"checking for copysignl\"\"... $ac_c\" 1>&6\n+echo \"configure:3009: checking for copysignl\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_copysignl'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2959 \"configure\"\n+#line 3014 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n-    which can conflict with char sinl(); below.  */\n+    which can conflict with char copysignl(); below.  */\n #include <assert.h>\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n     builtin and then its argument prototype would still apply.  */\n-char sinl();\n+char copysignl();\n \n int main() {\n \n /* The GNU C library defines this for functions which it implements\n     to always fail with ENOSYS.  Some functions are actually named\n     something starting with __ and the normal name is an alias.  */\n-#if defined (__stub_sinl) || defined (__stub___sinl)\n+#if defined (__stub_copysignl) || defined (__stub___copysignl)\n choke me\n #else\n-sinl();\n+copysignl();\n #endif\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2982: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3037: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n-  eval \"ac_cv_func_sinl=yes\"\n+  eval \"ac_cv_func_copysignl=yes\"\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  eval \"ac_cv_func_sinl=no\"\n+  eval \"ac_cv_func_copysignl=no\"\n fi\n rm -f conftest*\n fi\n \n-if eval \"test \\\"`echo '$ac_cv_func_'sinl`\\\" = yes\"; then\n+if eval \"test \\\"`echo '$ac_cv_func_'copysignl`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   USE_LONG_DOUBLE=yes\n   for ac_func in ccoshl ccosl cexpl cpowl csinhl csinl \\\n   csqrtl ctanhl ctanl cargl hypotl signbitl c_logl clog10l\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3001: checking for $ac_func\" >&5\n+echo \"configure:3056: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3006 \"configure\"\n+#line 3061 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3025,7 +3080,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3029: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3084: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3063,12 +3118,12 @@ fi\n   fpclass qfpclass\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3067: checking for $ac_func\" >&5\n+echo \"configure:3122: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3072 \"configure\"\n+#line 3127 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3091,7 +3146,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3095: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3150: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3126,12 +3181,12 @@ _strtof _strtold _fabsf _sincos _sincosf _sincosl _finite _finitef _qfinite \\\n _fpclass _qfpclass\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3130: checking for $ac_func\" >&5\n+echo \"configure:3185: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3135 \"configure\"\n+#line 3190 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3154,7 +3209,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3158: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3213: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3184,17 +3239,17 @@ LIBS=\"$save_LIBS\"\n   \n   ac_safe=`echo \"wchar.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for wchar.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3188: checking for wchar.h\" >&5\n+echo \"configure:3243: checking for wchar.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3193 \"configure\"\n+#line 3248 \"configure\"\n #include \"confdefs.h\"\n #include <wchar.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3198: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3253: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3212,16 +3267,16 @@ if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   \n     echo $ac_n \"checking for native mbstate_t\"\"... $ac_c\" 1>&6\n-echo \"configure:3216: checking for native mbstate_t\" >&5\n+echo \"configure:3271: checking for native mbstate_t\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 3218 \"configure\"\n+#line 3273 \"configure\"\n #include \"confdefs.h\"\n #include <wchar.h>\n int main() {\n mbstate_t teststate;\n ; return 0; }\n EOF\n-if { (eval echo configure:3225: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3280: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   use_native_mbstatet=yes\n else\n@@ -3240,16 +3295,16 @@ EOF\n   fi\n   \n       echo $ac_n \"checking for WCHAR_MIN and WCHAR_MAX\"\"... $ac_c\" 1>&6\n-echo \"configure:3244: checking for WCHAR_MIN and WCHAR_MAX\" >&5\n+echo \"configure:3299: checking for WCHAR_MIN and WCHAR_MAX\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 3246 \"configure\"\n+#line 3301 \"configure\"\n #include \"confdefs.h\"\n #include <wchar.h>\n int main() {\n int i = WCHAR_MIN; int j = WCHAR_MAX;\n ; return 0; }\n EOF\n-if { (eval echo configure:3253: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3308: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   has_wchar_minmax=yes\n else\n@@ -3270,9 +3325,9 @@ EOF\n   # Test wchar.h for WEOF, which is what we use to determine whether\n   # to specialize for wchar_t or not.\n   echo $ac_n \"checking for WEOF\"\"... $ac_c\" 1>&6\n-echo \"configure:3274: checking for WEOF\" >&5\n+echo \"configure:3329: checking for WEOF\" >&5\n   cat > conftest.$ac_ext <<EOF\n-#line 3276 \"configure\"\n+#line 3331 \"configure\"\n #include \"confdefs.h\"\n \n     #include <wchar.h>\n@@ -3281,7 +3336,7 @@ int main() {\n wint_t i = WEOF;\n ; return 0; }\n EOF\n-if { (eval echo configure:3285: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3340: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   has_weof=yes\n else\n@@ -3296,12 +3351,12 @@ rm -f conftest*\n     for ac_func in wcslen wmemchr wmemcmp wmemcpy wmemmove wmemset\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3300: checking for $ac_func\" >&5\n+echo \"configure:3355: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3305 \"configure\"\n+#line 3360 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3324,7 +3379,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3328: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3383: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3353,7 +3408,7 @@ done\n   \n \n   echo $ac_n \"checking for wide character support\"\"... $ac_c\" 1>&6\n-echo \"configure:3357: checking for wide character support\" >&5\n+echo \"configure:3412: checking for wide character support\" >&5\n   if test $has_weof = \"yes\" && test $has_wchar_minmax = \"yes\"; then\n     libinst_wstring_la=\"libinst-wstring.la\"\n     cat >> confdefs.h <<\\EOF\n@@ -3381,17 +3436,17 @@ fi\n   \n   ac_safe=`echo \"ctype.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for ctype.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3385: checking for ctype.h\" >&5\n+echo \"configure:3440: checking for ctype.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3390 \"configure\"\n+#line 3445 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3395: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3450: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3412,9 +3467,9 @@ if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n         ctype_default=yes\n \n         echo $ac_n \"checking for gnu-linux <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3416: checking for gnu-linux <ctype>\" >&5\n+echo \"configure:3471: checking for gnu-linux <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3418 \"configure\"\n+#line 3473 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3425,7 +3480,7 @@ int\n \t+ __ctype_tolower[a] + __ctype_toupper[a] + __ctype_b[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3429: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3484: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_linux=yes\n@@ -3444,9 +3499,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking for solaris 2.6 or 2.7 <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3448: checking for solaris 2.6 or 2.7 <ctype>\" >&5\n+echo \"configure:3503: checking for solaris 2.6 or 2.7 <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3450 \"configure\"\n+#line 3505 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3457,7 +3512,7 @@ int\n \t+ __trans_lower[a] + __trans_upper[a] + __ctype_mask[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3461: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3516: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_solaris=yes\n@@ -3472,7 +3527,7 @@ rm -f conftest*\n \n     if test $ctype_solaris = \"yes\"; then\n       echo $ac_n \"checking   for version\"\"... $ac_c\" 1>&6\n-echo \"configure:3476: checking   for version\" >&5\n+echo \"configure:3531: checking   for version\" >&5\n       ac_ext=C\n # CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n ac_cpp='$CXXCPP $CPPFLAGS'\n@@ -3481,14 +3536,14 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes\n cross_compiling=$ac_cv_prog_cxx_cross\n  \n       cat > conftest.$ac_ext <<EOF\n-#line 3485 \"configure\"\n+#line 3540 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n typedef long* __to_type; __to_type const& _M_toupper = __trans_upper;\n ; return 0; }\n EOF\n-if { (eval echo configure:3492: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3547: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n       ctype_solaris26=yes\n@@ -3520,9 +3575,9 @@ cross_compiling=$ac_cv_prog_cc_cross\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking for solaris 2.5.1 <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3524: checking for solaris 2.5.1 <ctype>\" >&5\n+echo \"configure:3579: checking for solaris 2.5.1 <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3526 \"configure\"\n+#line 3581 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3532,7 +3587,7 @@ int\n \t+ __ctype[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3536: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3591: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_solaris25=yes\n@@ -3552,9 +3607,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking for aix <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3556: checking for aix <ctype>\" >&5\n+echo \"configure:3611: checking for aix <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3558 \"configure\"\n+#line 3613 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3565,7 +3620,7 @@ int\n \t+ _VALC('a') + _IS('c', 0);}\n ; return 0; }\n EOF\n-if { (eval echo configure:3569: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3624: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_aix=yes\n@@ -3585,9 +3640,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking for newlib <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3589: checking for newlib <ctype>\" >&5\n+echo \"configure:3644: checking for newlib <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3591 \"configure\"\n+#line 3646 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3597,7 +3652,7 @@ int\n \t+ _ctype_[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3601: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3656: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_newlib=yes\n@@ -3631,17 +3686,17 @@ fi\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:3635: checking for $ac_hdr\" >&5\n+echo \"configure:3690: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3640 \"configure\"\n+#line 3695 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3645: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3700: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3670,12 +3725,12 @@ done\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3674: checking for $ac_func\" >&5\n+echo \"configure:3729: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3679 \"configure\"\n+#line 3734 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3698,7 +3753,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3702: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3757: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3723,15 +3778,15 @@ fi\n done\n \n echo $ac_n \"checking for working mmap\"\"... $ac_c\" 1>&6\n-echo \"configure:3727: checking for working mmap\" >&5\n+echo \"configure:3782: checking for working mmap\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_fixed_mapped'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_fixed_mapped=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3735 \"configure\"\n+#line 3790 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Haertel and Jim Avera for this test.\n@@ -3871,7 +3926,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:3875: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3930: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -3934,19 +3989,19 @@ fi\n \n if test $ac_cv_header_locale_h = yes; then\n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:3938: checking for LC_MESSAGES\" >&5\n+echo \"configure:3993: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3943 \"configure\"\n+#line 3998 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:3950: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4005: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_val_LC_MESSAGES=yes\n else\n@@ -4177,6 +4232,8 @@ s%@WERRORSUPPRESS@%$WERRORSUPPRESS%g\n s%@cpu_include_dir@%$cpu_include_dir%g\n s%@DEBUGFLAGS@%$DEBUGFLAGS%g\n s%@BUILD_LIBIO_INCLUDE@%$BUILD_LIBIO_INCLUDE%g\n+s%@GLIBCPP_NEED_LIBIO_CONFIG_H_TRUE@%$GLIBCPP_NEED_LIBIO_CONFIG_H_TRUE%g\n+s%@GLIBCPP_NEED_LIBIO_CONFIG_H_FALSE@%$GLIBCPP_NEED_LIBIO_CONFIG_H_FALSE%g\n s%@CSTDIO_H@%$CSTDIO_H%g\n s%@CSTDIO_CC@%$CSTDIO_CC%g\n s%@GLIBCPP_NEED_LIBIO_TRUE@%$GLIBCPP_NEED_LIBIO_TRUE%g"}, {"sha": "80954089d396fd49f815bc3f18f8770fb2341f30", "filename": "libstdc++-v3/libio/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FChangeLog?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -1,3 +1,9 @@\n+2000-04-25  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* libio.h: Change decls for seekoff/seekpos.\n+\t* Makefile.am: Add bits to not generate _G_config.h on linux.\n+\t* gen-params: Remove sigset_t declaration.\n+\n 2000-02-29  Benjamin Kosnik  <bkoz@haight.constant.com>\n \n \t* Makefile.am (libio_headers): Strip out deadweight."}, {"sha": "d4f0a36cd6c0f928fca0bfd560293261e2c4f259", "filename": "libstdc++-v3/libio/Makefile.am", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.am?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -25,6 +25,12 @@ AUTOMAKE_OPTIONS = 1.3 cygnus\n \n noinst_LTLIBRARIES = libio.la\n \n+if GLIBCPP_NEED_LIBIO_CONFIG_H\n+LIBIO_CONFIG_H = _G_config.h\n+else\n+LIBIO_CONFIG_H = \n+endif\n+\n includes = \n \n libio_headers = \\\n@@ -37,16 +43,17 @@ else\n LIBIO_SRCS =\n endif\n \n+\n EXTRA_DIST = iostreamP.h\n \n libio_la_LIBADD = $(LIBIO_SRCS) \n libio_la_DEPENDENCIES = $(libio_la_LIBADD)\n libio_la_SOURCES = $(LIBIO_SRCS)\n \n-LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n-\n # Specifying that *.o depend on this one header\n-$(libio_la_OBJECTS): _G_config.h\n+$(libio_la_OBJECTS): $(LIBIO_CONFIG_H)\n+\n+LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n \n # Generate this file.\n _G_config.h: $(srcdir)/gen-params"}, {"sha": "7f20873d3393b4a25acf5c9bceda07e6c20619ba", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -105,6 +105,9 @@ libinst_wstring_la = @libinst_wstring_la@\n AUTOMAKE_OPTIONS = 1.3 cygnus\n \n noinst_LTLIBRARIES = libio.la\n+@GLIBCPP_NEED_LIBIO_CONFIG_H_TRUE@LIBIO_CONFIG_H = \\\n+@GLIBCPP_NEED_LIBIO_CONFIG_H_TRUE@_G_config.h\n+@GLIBCPP_NEED_LIBIO_CONFIG_H_FALSE@LIBIO_CONFIG_H = \\\n \n includes = \n \n@@ -334,7 +337,7 @@ maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n \n \n # Specifying that *.o depend on this one header\n-$(libio_la_OBJECTS): _G_config.h\n+$(libio_la_OBJECTS): $(LIBIO_CONFIG_H)\n \n # Generate this file.\n _G_config.h: $(srcdir)/gen-params"}, {"sha": "bd93f2f68aa9df38e43e23c61e0b54bd5a914ec1", "filename": "libstdc++-v3/libio/fileops.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2Ffileops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2Ffileops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Ffileops.c?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -155,11 +155,20 @@ _IO_file_finish (fp, dummy)\n   _IO_default_finish (fp, 0);\n }\n \n+#if _G_IO_IO_FILE_VERSION == 0x20001\n+_IO_FILE *\n+_IO_file_fopen (fp, filename, mode, some_int)\n+     _IO_FILE *fp;\n+     const char *filename;\n+     const char *mode;\n+     int some_int;\n+#else\n _IO_FILE *\n _IO_file_fopen (fp, filename, mode)\n      _IO_FILE *fp;\n      const char *filename;\n      const char *mode;\n+#endif\n {\n   int oflags = 0, omode;\n   int read_write, fdesc;\n@@ -419,12 +428,21 @@ _IO_file_sync (fp)\n   return retval;\n }\n \n-_IO_pos_t\n+#if defined(_G_IO_IO_FILE_VERSION) && _G_IO_IO_FILE_VERSION == 0x20001\n+_IO_off64_t\n+_IO_file_seekoff (fp, offset, dir, mode)\n+     _IO_FILE *fp;\n+     _IO_off64_t offset;\n+     int dir;\n+     int mode;\n+#else\n+_IO_off_t\n _IO_file_seekoff (fp, offset, dir, mode)\n      _IO_FILE *fp;\n      _IO_off_t offset;\n      int dir;\n      int mode;\n+#endif\n {\n   _IO_pos_t result;\n   _IO_off_t delta, new_offset;\n@@ -587,11 +605,19 @@ _IO_file_read (fp, buf, size)\n   return read (fp->_fileno, buf, size);\n }\n \n-_IO_pos_t\n+#if defined(_G_IO_IO_FILE_VERSION) && _G_IO_IO_FILE_VERSION == 0x20001\n+_IO_off64_t\n+_IO_file_seek (fp, offset, dir)\n+     _IO_FILE *fp;\n+     _IO_off64_t offset;\n+     int dir;\n+#else\n+_IO_off_t\n _IO_file_seek (fp, offset, dir)\n      _IO_FILE *fp;\n      _IO_off_t offset;\n      int dir;\n+#endif\n {\n   return lseek (fp->_fileno, offset, dir);\n }"}, {"sha": "c7da3210eaf50e468fb8f9de33a957219f2981e8", "filename": "libstdc++-v3/libio/genops.c", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2Fgenops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2Fgenops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Fgenops.c?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -467,15 +467,24 @@ _IO_default_setbuf (fp, p, len)\n     return fp;\n }\n \n-_IO_pos_t\n+#if defined(_G_IO_IO_FILE_VERSION) && _G_IO_IO_FILE_VERSION == 0x20001\n+_IO_off64_t\n _IO_default_seekpos (fp, pos, mode)\n      _IO_FILE *fp;\n-     _IO_pos_t pos;\n+     _IO_off64_t pos;\n      int mode;\n+#else\n+_IO_off_t\n+_IO_default_seekpos (fp, pos, mode)\n+     _IO_FILE *fp;\n+     _IO_off_t pos;\n+     int mode;\n+#endif\n {\n-  return _IO_SEEKOFF (fp, _IO_pos_as_off (pos), 0, mode);\n+  return _IO_SEEKOFF (fp, pos, 0, mode);\n }\n \n+\n int\n _IO_default_doallocate (fp)\n      _IO_FILE *fp;\n@@ -551,12 +560,21 @@ _IO_default_finish (fp, dummy)\n   _IO_un_link (fp);\n }\n \n-_IO_pos_t\n+#if defined(_G_IO_IO_FILE_VERSION) && _G_IO_IO_FILE_VERSION == 0x20001\n+_IO_off64_t\n+_IO_default_seekoff (fp, offset, dir, mode)\n+     _IO_FILE *fp;\n+     _IO_off64_t offset;\n+     int dir;\n+     int mode;\n+#else\n+_IO_off_t\n _IO_default_seekoff (fp, offset, dir, mode)\n      _IO_FILE *fp;\n      _IO_off_t offset;\n      int dir;\n      int mode;\n+#endif\n {\n     return _IO_pos_BAD;\n }\n@@ -882,11 +900,19 @@ _IO_default_pbackfail (fp, c)\n   return (unsigned char) *fp->_IO_read_ptr;\n }\n \n-_IO_pos_t\n+#if defined(_G_IO_IO_FILE_VERSION) && _G_IO_IO_FILE_VERSION == 0x20001\n+_IO_off64_t\n+_IO_default_seek (fp, offset, dir)\n+     _IO_FILE *fp;\n+     _IO_off64_t offset;\n+     int dir;\n+#else\n+_IO_off_t\n _IO_default_seek (fp, offset, dir)\n      _IO_FILE *fp;\n      _IO_off_t offset;\n      int dir;\n+#endif\n {\n   return _IO_pos_BAD;\n }"}, {"sha": "f002097ceaab351a1f02031ca4f425e662661493", "filename": "libstdc++-v3/libio/libioP.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2FlibioP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Flibio%2FlibioP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FlibioP.h?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -344,19 +344,16 @@ extern _IO_off64_t _IO_default_seekoff __P ((_IO_FILE *,\n \t\t\t\t\t      _IO_off64_t, int, int));\n extern _IO_off64_t _IO_default_seekpos __P ((_IO_FILE *,\n \t\t\t\t\t      _IO_off64_t, int));\n+extern _IO_off64_t _IO_default_seek __P ((_IO_FILE *, _IO_off64_t, int));\n #else\n extern _IO_off_t _IO_default_seekoff __P ((_IO_FILE *, _IO_off_t, int, int));\n extern _IO_off_t _IO_default_seekpos __P ((_IO_FILE *, _IO_off_t, int));\n+extern _IO_off_t _IO_default_seek __P ((_IO_FILE *, _IO_off_t, int));\n #endif\n extern _IO_ssize_t _IO_default_write __P ((_IO_FILE *, const void *,\n \t\t\t\t\t   _IO_ssize_t));\n extern _IO_ssize_t _IO_default_read __P ((_IO_FILE *, void *, _IO_ssize_t));\n extern int _IO_default_stat __P ((_IO_FILE *, void *));\n-#if defined(_G_IO_IO_FILE_VERSION) && _G_IO_IO_FILE_VERSION == 0x20001\n-extern _IO_off64_t _IO_default_seek __P ((_IO_FILE *, _IO_off64_t, int));\n-#else\n-extern _IO_off_t _IO_default_seek __P ((_IO_FILE *, _IO_off_t, int));\n-#endif\n extern int _IO_default_sync __P ((_IO_FILE *));\n #define _IO_default_close ((_IO_close_t) _IO_default_sync)\n "}, {"sha": "0d3a6941fc0af3968bcf96664a9cd88653de241e", "filename": "libstdc++-v3/math/Makefile.am", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fmath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fmath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmath%2FMakefile.am?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -26,16 +26,17 @@ AUTOMAKE_OPTIONS = 1.3 cygnus\n noinst_LTLIBRARIES = libmath.la\n \n EXTRA_LONG_DOUBLE_yes = \\\n+\tccosl.c cexpl.c c_logl.c clog10l.c cpowl.c csinhl.c \\\n+\tcsqrtl.c ctanhl.c ctanl.c cargl.c hypotl.c \\\n \tsignbitl.c cabsl.c \n \n EXTRA_DIST = \\\n-\tccos.c ccosf.c ccosh.c ccoshf.c ccoshl.c ccosl.c \\\n-\tcexp.c cexpf.c cexpl.c \\\n-\tc_log.c c_logf.c c_logl.c clog10.c clog10f.c clog10l.c \\\n-\tcpow.c cpowf.c cpowl.c csin.c csinf.c csinh.c csinhf.c csinhl.c  \\\n-\tcsinl.c csqrt.c csqrtf.c csqrtl.c ctan.c ctanf.c ctanh.c \\\n-\tctanhf.c ctanhl.c ctanl.c carg.c cargf.c cargl.c hypot.c hypotf.c\\\n-\thypotl.c atan2f.c expf.c \\\n+\tccos.c ccosf.c ccosh.c ccoshf.c ccoshl.c \\\n+\tcexp.c cexpf.c c_log.c c_logf.c  clog10.c clog10f.c \\\n+\tcpow.c cpowf.c csin.c csinf.c csinh.c csinhf.c \\\n+\tcsinl.c csqrt.c csqrtf.c  ctan.c ctanf.c ctanh.c \\\n+\tctanhf.c  carg.c cargf.c hypot.c hypotf.c\\\n+\tatan2f.c expf.c \\\n \t$(EXTRA_LONG_DOUBLE_yes) \n \n libmath_la_LIBADD = \\\n@@ -54,3 +55,5 @@ INCLUDES = -I..  $(TOPLEVEL_INCLUDES)\n \n \n \n+\n+"}, {"sha": "0d9ef7fb7787a4bf036030604b9795e33d50eba2", "filename": "libstdc++-v3/math/Makefile.in", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmath%2FMakefile.in?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -107,17 +107,18 @@ AUTOMAKE_OPTIONS = 1.3 cygnus\n noinst_LTLIBRARIES = libmath.la\n \n EXTRA_LONG_DOUBLE_yes = \\\n+\tccosl.c cexpl.c c_logl.c clog10l.c cpowl.c csinhl.c \\\n+\tcsqrtl.c ctanhl.c ctanl.c cargl.c hypotl.c \\\n \tsignbitl.c cabsl.c \n \n \n EXTRA_DIST = \\\n-\tccos.c ccosf.c ccosh.c ccoshf.c ccoshl.c ccosl.c \\\n-\tcexp.c cexpf.c cexpl.c \\\n-\tc_log.c c_logf.c c_logl.c clog10.c clog10f.c clog10l.c \\\n-\tcpow.c cpowf.c cpowl.c csin.c csinf.c csinh.c csinhf.c csinhl.c  \\\n-\tcsinl.c csqrt.c csqrtf.c csqrtl.c ctan.c ctanf.c ctanh.c \\\n-\tctanhf.c ctanhl.c ctanl.c carg.c cargf.c cargl.c hypot.c hypotf.c\\\n-\thypotl.c atan2f.c expf.c \\\n+\tccos.c ccosf.c ccosh.c ccoshf.c ccoshl.c \\\n+\tcexp.c cexpf.c c_log.c c_logf.c  clog10.c clog10f.c \\\n+\tcpow.c cpowf.c csin.c csinf.c csinh.c csinhf.c \\\n+\tcsinl.c csqrt.c csqrtf.c  ctan.c ctanf.c ctanh.c \\\n+\tctanhf.c  carg.c cargf.c hypot.c hypotf.c\\\n+\tatan2f.c expf.c \\\n \t$(EXTRA_LONG_DOUBLE_yes) \n \n "}, {"sha": "f847904a8d8e279bc6b23fdd8da3c788316b09be", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -166,7 +166,7 @@ generated_headers = \\\n \tbits/std_limits.h bits/c++config.h bits/c++threads.h bits/c++io.h\n \n cpu_headers = \\\n-\t $(top_srcdir)/@cpu_include_dir@/atomicity.h \n+\t $(top_srcdir)/@cpu_include_dir@/bits/atomicity.h \n \n string_sources = \\\n \tstringMAIN.cc stringCTORNC.cc stringCTORAL.cc \\\n@@ -262,8 +262,8 @@ myinstallheaders: $(headers:%=$(myincludep)%)\n           echo \"$(INSTALL_DATA) $$i $(myincludep)\"; \\\n                 $(INSTALL_DATA) $$i $(myincludep); \\\n \tdone; \\\n-\techo \"$(INSTALL_DATA) $(cpu_headers) $(myincludep)\"; \\\n-\t$(INSTALL_DATA) $(cpu_headers) $(myincludep); \\\n+\techo \"$(INSTALL_DATA) $(cpu_headers) $(myincludep)bits/\"; \\\n+\t$(INSTALL_DATA) $(cpu_headers) $(myincludep)bits/; \\\n \tfi;\n \n $(headers:%=$(myincludep)%): $(myincludep)%: %"}, {"sha": "c93bc79e5908ccb59ca67a69f7caaf62b194a0ca", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=f3b004d8d7fe224c6ccb5c773b52b67c1e4d986f", "patch": "@@ -247,7 +247,7 @@ generated_headers = \\\n \n \n cpu_headers = \\\n-\t $(top_srcdir)/@cpu_include_dir@/atomicity.h \n+\t $(top_srcdir)/@cpu_include_dir@/bits/atomicity.h \n \n \n string_sources = \\\n@@ -614,8 +614,8 @@ myinstallheaders: $(headers:%=$(myincludep)%)\n           echo \"$(INSTALL_DATA) $$i $(myincludep)\"; \\\n                 $(INSTALL_DATA) $$i $(myincludep); \\\n \tdone; \\\n-\techo \"$(INSTALL_DATA) $(cpu_headers) $(myincludep)\"; \\\n-\t$(INSTALL_DATA) $(cpu_headers) $(myincludep); \\\n+\techo \"$(INSTALL_DATA) $(cpu_headers) $(myincludep)bits/\"; \\\n+\t$(INSTALL_DATA) $(cpu_headers) $(myincludep)bits/; \\\n \tfi;\n \n $(headers:%=$(myincludep)%): $(myincludep)%: %"}]}