{"sha": "ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI4ZDI3MzQ0MTZiNzNkMWY3ZTBjNmIzOGJiMzA1OThmNWJiZjkxZg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2009-12-09T16:46:57Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2009-12-09T16:46:57Z"}, "message": "vector.md (absv2sf2, [...]): New expanders.\n\n\t* config/rs6000/vector.md (absv2sf2, negv2sf2, addv2sf3, subv2sf3,\n\tmulv2sf3, divv2sf3): New expanders.\n\t* config/rs6000/spe.md (spe_evabs, spe_evand, spe_evaddw, spe_evsubfw,\n\tspe_evdivws): Rename to use standard GCC names.\n\t* config/rs6000/paired.md (negv2sf, absv2sf2, addv2sf3, subv2sf3,\n\tmulv2sf3, divv2sf3): Rename to avoid conflict with the new expanders.\n\t* config/rs6000/rs6000.c (bdesc_2arg, bdesc_1arg): Use new CODE_FOR_\n\tnames for renamed patterns.\n\nFrom-SVN: r155110", "tree": {"sha": "828ee7e7786a923dfbbd76796f9cd1b21fd3e287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/828ee7e7786a923dfbbd76796f9cd1b21fd3e287"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/comments", "author": null, "committer": null, "parents": [{"sha": "d505015aa52a7113d13a185e2aa4c14e77c9a1fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d505015aa52a7113d13a185e2aa4c14e77c9a1fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d505015aa52a7113d13a185e2aa4c14e77c9a1fa"}], "stats": {"total": 149, "additions": 127, "deletions": 22}, "files": [{"sha": "af6c4f2be94b2e7e6ee4d7930d1da959cf429265", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "patch": "@@ -1,3 +1,14 @@\n+2009-12-09  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/rs6000/vector.md (absv2sf2, negv2sf2, addv2sf3, subv2sf3,\n+\tmulv2sf3, divv2sf3): New expanders.\n+\t* config/rs6000/spe.md (spe_evabs, spe_evand, spe_evaddw, spe_evsubfw,\n+\tspe_evdivws): Rename to use standard GCC names.\n+\t* config/rs6000/paired.md (negv2sf, absv2sf2, addv2sf3, subv2sf3,\n+\tmulv2sf3, divv2sf3): Rename to avoid conflict with the new expanders.\n+\t* config/rs6000/rs6000.c (bdesc_2arg, bdesc_1arg): Use new CODE_FOR_\n+\tnames for renamed patterns.\n+\n 2009-12-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.md (\"copysign<mode>3\"): Pattern removed."}, {"sha": "6981078261796cfec123db905cc8f314e20fa298", "filename": "gcc/config/rs6000/paired.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2Fconfig%2Frs6000%2Fpaired.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2Fconfig%2Frs6000%2Fpaired.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpaired.md?ref=ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "patch": "@@ -27,7 +27,7 @@\n  (UNSPEC_EXTODD_V2SF      333)\n ])\n \n-(define_insn \"negv2sf2\"\n+(define_insn \"paired_negv2sf2\"\n   [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"=f\")\n \t(neg:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"f\")))]\n   \"TARGET_PAIRED_FLOAT\"\n@@ -41,7 +41,7 @@\n   \"ps_rsqrte %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n-(define_insn \"absv2sf2\"\n+(define_insn \"paired_absv2sf2\"\n   [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"=f\")\n \t(abs:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"f\")))]\n   \"TARGET_PAIRED_FLOAT\"\n@@ -55,23 +55,23 @@\n   \"ps_nabs %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n-(define_insn \"addv2sf3\"\n+(define_insn \"paired_addv2sf3\"\n   [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"=f\")\n \t(plus:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"%f\")\n \t\t   (match_operand:V2SF 2 \"gpc_reg_operand\" \"f\")))]\n   \"TARGET_PAIRED_FLOAT\"\n   \"ps_add %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n-(define_insn \"subv2sf3\"\n+(define_insn \"paired_subv2sf3\"\n   [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"=f\")\n         (minus:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"f\")\n                     (match_operand:V2SF 2 \"gpc_reg_operand\" \"f\")))]\n   \"TARGET_PAIRED_FLOAT\"\n   \"ps_sub %0,%1,%2\"\n   [(set_attr \"type\" \"fp\")])\n \n-(define_insn \"mulv2sf3\"\n+(define_insn \"paired_mulv2sf3\"\n   [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"=f\")\n \t(mult:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"%f\")\n \t\t   (match_operand:V2SF 2 \"gpc_reg_operand\" \"f\")))]\n@@ -86,7 +86,7 @@\n   \"ps_res %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n-(define_insn \"divv2sf3\"\n+(define_insn \"paired_divv2sf3\"\n   [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"=f\")\n \t(div:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"f\")\n \t\t  (match_operand:V2SF 2 \"gpc_reg_operand\" \"f\")))]"}, {"sha": "ee55fbbed80577720915713b2162b7ec66c5ac93", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "patch": "@@ -9023,10 +9023,10 @@ static struct builtin_description bdesc_2arg[] =\n   { MASK_VSX, CODE_FOR_nothing, \"__builtin_vec_mul\", VSX_BUILTIN_VEC_MUL },\n   { MASK_VSX, CODE_FOR_nothing, \"__builtin_vec_div\", VSX_BUILTIN_VEC_DIV },\n \n-  { 0, CODE_FOR_divv2sf3, \"__builtin_paired_divv2sf3\", PAIRED_BUILTIN_DIVV2SF3 },\n-  { 0, CODE_FOR_addv2sf3, \"__builtin_paired_addv2sf3\", PAIRED_BUILTIN_ADDV2SF3 },\n-  { 0, CODE_FOR_subv2sf3, \"__builtin_paired_subv2sf3\", PAIRED_BUILTIN_SUBV2SF3 },\n-  { 0, CODE_FOR_mulv2sf3, \"__builtin_paired_mulv2sf3\", PAIRED_BUILTIN_MULV2SF3 },\n+  { 0, CODE_FOR_paired_divv2sf3, \"__builtin_paired_divv2sf3\", PAIRED_BUILTIN_DIVV2SF3 },\n+  { 0, CODE_FOR_paired_addv2sf3, \"__builtin_paired_addv2sf3\", PAIRED_BUILTIN_ADDV2SF3 },\n+  { 0, CODE_FOR_paired_subv2sf3, \"__builtin_paired_subv2sf3\", PAIRED_BUILTIN_SUBV2SF3 },\n+  { 0, CODE_FOR_paired_mulv2sf3, \"__builtin_paired_mulv2sf3\", PAIRED_BUILTIN_MULV2SF3 },\n   { 0, CODE_FOR_paired_muls0, \"__builtin_paired_muls0\", PAIRED_BUILTIN_MULS0 },\n   { 0, CODE_FOR_paired_muls1, \"__builtin_paired_muls1\", PAIRED_BUILTIN_MULS1 },\n   { 0, CODE_FOR_paired_merge00, \"__builtin_paired_merge00\", PAIRED_BUILTIN_MERGE00 },\n@@ -9035,10 +9035,10 @@ static struct builtin_description bdesc_2arg[] =\n   { 0, CODE_FOR_paired_merge11, \"__builtin_paired_merge11\", PAIRED_BUILTIN_MERGE11 },\n \n   /* Place holder, leave as first spe builtin.  */\n-  { 0, CODE_FOR_spe_evaddw, \"__builtin_spe_evaddw\", SPE_BUILTIN_EVADDW },\n-  { 0, CODE_FOR_spe_evand, \"__builtin_spe_evand\", SPE_BUILTIN_EVAND },\n+  { 0, CODE_FOR_addv2si3, \"__builtin_spe_evaddw\", SPE_BUILTIN_EVADDW },\n+  { 0, CODE_FOR_andv2si3, \"__builtin_spe_evand\", SPE_BUILTIN_EVAND },\n   { 0, CODE_FOR_spe_evandc, \"__builtin_spe_evandc\", SPE_BUILTIN_EVANDC },\n-  { 0, CODE_FOR_spe_evdivws, \"__builtin_spe_evdivws\", SPE_BUILTIN_EVDIVWS },\n+  { 0, CODE_FOR_divv2si3, \"__builtin_spe_evdivws\", SPE_BUILTIN_EVDIVWS },\n   { 0, CODE_FOR_spe_evdivwu, \"__builtin_spe_evdivwu\", SPE_BUILTIN_EVDIVWU },\n   { 0, CODE_FOR_spe_eveqv, \"__builtin_spe_eveqv\", SPE_BUILTIN_EVEQV },\n   { 0, CODE_FOR_spe_evfsadd, \"__builtin_spe_evfsadd\", SPE_BUILTIN_EVFSADD },\n@@ -9143,7 +9143,7 @@ static struct builtin_description bdesc_2arg[] =\n   { 0, CODE_FOR_spe_evslw, \"__builtin_spe_evslw\", SPE_BUILTIN_EVSLW },\n   { 0, CODE_FOR_spe_evsrws, \"__builtin_spe_evsrws\", SPE_BUILTIN_EVSRWS },\n   { 0, CODE_FOR_spe_evsrwu, \"__builtin_spe_evsrwu\", SPE_BUILTIN_EVSRWU },\n-  { 0, CODE_FOR_spe_evsubfw, \"__builtin_spe_evsubfw\", SPE_BUILTIN_EVSUBFW },\n+  { 0, CODE_FOR_subv2si3, \"__builtin_spe_evsubfw\", SPE_BUILTIN_EVSUBFW },\n \n   /* SPE binary operations expecting a 5-bit unsigned literal.  */\n   { 0, CODE_FOR_spe_evaddiw, \"__builtin_spe_evaddiw\", SPE_BUILTIN_EVADDIW },\n@@ -9414,7 +9414,7 @@ static struct builtin_description bdesc_1arg[] =\n \n   /* The SPE unary builtins must start with SPE_BUILTIN_EVABS and\n      end with SPE_BUILTIN_EVSUBFUSIAAW.  */\n-  { 0, CODE_FOR_spe_evabs, \"__builtin_spe_evabs\", SPE_BUILTIN_EVABS },\n+  { 0, CODE_FOR_absv2si2, \"__builtin_spe_evabs\", SPE_BUILTIN_EVABS },\n   { 0, CODE_FOR_spe_evaddsmiaaw, \"__builtin_spe_evaddsmiaaw\", SPE_BUILTIN_EVADDSMIAAW },\n   { 0, CODE_FOR_spe_evaddssiaaw, \"__builtin_spe_evaddssiaaw\", SPE_BUILTIN_EVADDSSIAAW },\n   { 0, CODE_FOR_spe_evaddumiaaw, \"__builtin_spe_evaddumiaaw\", SPE_BUILTIN_EVADDUMIAAW },\n@@ -9446,9 +9446,9 @@ static struct builtin_description bdesc_1arg[] =\n   /* Place-holder.  Leave as last unary SPE builtin.  */\n   { 0, CODE_FOR_spe_evsubfusiaaw, \"__builtin_spe_evsubfusiaaw\", SPE_BUILTIN_EVSUBFUSIAAW },\n \n-  { 0, CODE_FOR_absv2sf2, \"__builtin_paired_absv2sf2\", PAIRED_BUILTIN_ABSV2SF2 },\n+  { 0, CODE_FOR_paired_absv2sf2, \"__builtin_paired_absv2sf2\", PAIRED_BUILTIN_ABSV2SF2 },\n   { 0, CODE_FOR_nabsv2sf2, \"__builtin_paired_nabsv2sf2\", PAIRED_BUILTIN_NABSV2SF2 },\n-  { 0, CODE_FOR_negv2sf2, \"__builtin_paired_negv2sf2\", PAIRED_BUILTIN_NEGV2SF2 },\n+  { 0, CODE_FOR_paired_negv2sf2, \"__builtin_paired_negv2sf2\", PAIRED_BUILTIN_NEGV2SF2 },\n   { 0, CODE_FOR_sqrtv2sf2, \"__builtin_paired_sqrtv2sf2\", PAIRED_BUILTIN_SQRTV2SF2 },\n   { 0, CODE_FOR_resv2sf2, \"__builtin_paired_resv2sf2\", PAIRED_BUILTIN_RESV2SF2 }\n };"}, {"sha": "d50ad1aad1dfdfea037685878ecbed55af119c0d", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "patch": "@@ -164,7 +164,7 @@\n \n ;; SPE SIMD instructions\n \n-(define_insn \"spe_evabs\"\n+(define_insn \"absv2si2\"\n   [(set (match_operand:V2SI 0 \"gpc_reg_operand\" \"=r\")\n \t(abs:V2SI (match_operand:V2SI 1 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_SPE\"\n@@ -181,7 +181,7 @@\n   [(set_attr \"type\" \"vecsimple\")\n    (set_attr  \"length\" \"4\")])\n \n-(define_insn \"spe_evand\"\n+(define_insn \"andv2si3\"\n   [(set (match_operand:V2SI 0 \"gpc_reg_operand\" \"=r\")\n         (and:V2SI (match_operand:V2SI 1 \"gpc_reg_operand\" \"r\")\n \t\t  (match_operand:V2SI 2 \"gpc_reg_operand\" \"r\")))]\n@@ -1898,7 +1898,7 @@\n   [(set_attr \"type\" \"veccomplex\")\n    (set_attr  \"length\" \"4\")])\n \n-(define_insn \"spe_evaddw\"\n+(define_insn \"addv2si3\"\n   [(set (match_operand:V2SI 0 \"gpc_reg_operand\" \"=r\")\n         (plus:V2SI (match_operand:V2SI 1 \"gpc_reg_operand\" \"r\")\n \t\t   (match_operand:V2SI 2 \"gpc_reg_operand\" \"r\")))]\n@@ -1967,7 +1967,7 @@\n   [(set_attr \"type\" \"veccomplex\")\n    (set_attr  \"length\" \"4\")])\n \n-(define_insn \"spe_evsubfw\"\n+(define_insn \"subv2si3\"\n   [(set (match_operand:V2SI 0 \"gpc_reg_operand\" \"=r\")\n         (minus:V2SI (match_operand:V2SI 1 \"gpc_reg_operand\" \"r\")\n \t\t    (match_operand:V2SI 2 \"gpc_reg_operand\" \"r\")))]\n@@ -2028,7 +2028,7 @@\n   [(set_attr \"type\" \"veccomplex\")\n    (set_attr  \"length\" \"4\")])\n \n-(define_insn \"spe_evdivws\"\n+(define_insn \"divv2si3\"\n   [(set (match_operand:V2SI 0 \"gpc_reg_operand\" \"=r\")\n         (div:V2SI (match_operand:V2SI 1 \"gpc_reg_operand\" \"r\")\n \t\t  (match_operand:V2SI 2 \"gpc_reg_operand\" \"r\")))"}, {"sha": "d078597306cb78c3ef1e6e3b67bfde0c62fcceb4", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=ab8d2734416b73d1f7e0c6b38bb30598f5bbf91f", "patch": "@@ -944,3 +944,97 @@\n \t\t\t(match_operand:VEC_I 2 \"vint_operand\" \"\")))]\n   \"TARGET_ALTIVEC\"\n   \"\")\n+\f\n+;;; Expanders for vector insn patterns shared between the SPE and TARGET_PAIRED systems.\n+\n+(define_expand \"absv2sf2\"\n+  [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"\")\n+\t(abs:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_PAIRED_FLOAT || TARGET_SPE\"\n+  \"\")\n+\n+(define_expand \"negv2sf2\"\n+  [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"\")\n+\t(neg:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_PAIRED_FLOAT || TARGET_SPE\"\n+  \"\")\n+\n+(define_expand \"addv2sf3\"\n+  [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"\")\n+\t(plus:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"\")\n+\t\t   (match_operand:V2SF 2 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_PAIRED_FLOAT || TARGET_SPE\"\n+  \"\n+{\n+  if (TARGET_SPE)\n+    {\n+      /* We need to make a note that we clobber SPEFSCR.  */\n+      rtx par = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (2));\n+\n+      XVECEXP (par, 0, 0) = gen_rtx_SET (VOIDmode, operands[0],\n+                                         gen_rtx_PLUS (V2SFmode, operands[1], operands[2]));\n+      XVECEXP (par, 0, 1) = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (SImode, SPEFSCR_REGNO));\n+      emit_insn (par);\n+      DONE;\n+    }\n+}\")\n+\n+(define_expand \"subv2sf3\"\n+  [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"\")\n+\t(minus:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"\")\n+\t\t    (match_operand:V2SF 2 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_PAIRED_FLOAT || TARGET_SPE\"\n+  \"\n+{\n+  if (TARGET_SPE)\n+    {\n+      /* We need to make a note that we clobber SPEFSCR.  */\n+      rtx par = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (2));\n+\n+      XVECEXP (par, 0, 0) = gen_rtx_SET (VOIDmode, operands[0],\n+                                         gen_rtx_MINUS (V2SFmode, operands[1], operands[2]));\n+      XVECEXP (par, 0, 1) = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (SImode, SPEFSCR_REGNO));\n+      emit_insn (par);\n+      DONE;\n+    }\n+}\")\n+\n+(define_expand \"mulv2sf3\"\n+  [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"\")\n+\t(mult:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"\")\n+\t\t   (match_operand:V2SF 2 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_PAIRED_FLOAT || TARGET_SPE\"\n+  \"\n+{\n+  if (TARGET_SPE)\n+    {\n+      /* We need to make a note that we clobber SPEFSCR.  */\n+      rtx par = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (2));\n+\n+      XVECEXP (par, 0, 0) = gen_rtx_SET (VOIDmode, operands[0],\n+                                         gen_rtx_MULT (V2SFmode, operands[1], operands[2]));\n+      XVECEXP (par, 0, 1) = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (SImode, SPEFSCR_REGNO));\n+      emit_insn (par);\n+      DONE;\n+    }\n+}\")\n+\n+(define_expand \"divv2sf3\"\n+  [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"\")\n+\t(div:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"\")\n+\t\t  (match_operand:V2SF 2 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_PAIRED_FLOAT || TARGET_SPE\"\n+  \"\n+{\n+  if (TARGET_SPE)\n+    {\n+      /* We need to make a note that we clobber SPEFSCR.  */\n+      rtx par = gen_rtx_PARALLEL (VOIDmode, rtvec_alloc (2));\n+\n+      XVECEXP (par, 0, 0) = gen_rtx_SET (VOIDmode, operands[0],\n+                                         gen_rtx_DIV (V2SFmode, operands[1], operands[2]));\n+      XVECEXP (par, 0, 1) = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (SImode, SPEFSCR_REGNO));\n+      emit_insn (par);\n+      DONE;\n+    }\n+}\")"}]}