{"sha": "8be591a9cd557be85e591a0362d220d84c296bd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJlNTkxYTljZDU1N2JlODVlNTkxYTAzNjJkMjIwZDg0YzI5NmJkNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-08-11T11:29:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-08-11T11:29:12Z"}, "message": "re PR tree-optimization/86835 (Bogus \"is used uninitialized\" warning with -ffast-math)\n\n\tPR tree-optimization/86835\n\t* tree-ssa-math-opts.c (insert_reciprocals): Even when inserting\n\tnew_stmt after def_gsi, make sure to insert new_square_stmt after\n\tthat stmt, not 2 stmts before it.\n\n\t* gcc.dg/pr86835.c: New test.\n\nFrom-SVN: r263487", "tree": {"sha": "e26d90f847d8519eda7b00b95cefd1491a045b12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e26d90f847d8519eda7b00b95cefd1491a045b12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8be591a9cd557be85e591a0362d220d84c296bd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be591a9cd557be85e591a0362d220d84c296bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be591a9cd557be85e591a0362d220d84c296bd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be591a9cd557be85e591a0362d220d84c296bd4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc186cbd1cdff6cecdb8eb0a350c3ee0af2d1332", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc186cbd1cdff6cecdb8eb0a350c3ee0af2d1332", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc186cbd1cdff6cecdb8eb0a350c3ee0af2d1332"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "0da6f84cf938cf39b54b53e20fc5fa2b4189ebf9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be591a9cd557be85e591a0362d220d84c296bd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be591a9cd557be85e591a0362d220d84c296bd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8be591a9cd557be85e591a0362d220d84c296bd4", "patch": "@@ -1,3 +1,10 @@\n+2018-08-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/86835\n+\t* tree-ssa-math-opts.c (insert_reciprocals): Even when inserting\n+\tnew_stmt after def_gsi, make sure to insert new_square_stmt after\n+\tthat stmt, not 2 stmts before it.\n+\n 2018-08-10  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR target/82418"}, {"sha": "38c33299879c6a6890cb5fe834a7046d8567d4b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be591a9cd557be85e591a0362d220d84c296bd4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be591a9cd557be85e591a0362d220d84c296bd4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8be591a9cd557be85e591a0362d220d84c296bd4", "patch": "@@ -1,3 +1,8 @@\n+2018-08-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/86835\n+\t* gcc.dg/pr86835.c: New test.\n+\n 2018-08-10  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/57160"}, {"sha": "a0ebc7432aa9894376c4b856d312795462bf6a4f", "filename": "gcc/testsuite/gcc.dg/pr86835.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be591a9cd557be85e591a0362d220d84c296bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86835.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be591a9cd557be85e591a0362d220d84c296bd4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86835.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86835.c?ref=8be591a9cd557be85e591a0362d220d84c296bd4", "patch": "@@ -0,0 +1,29 @@\n+/* PR tree-optimization/86835 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -Wuninitialized\" } */\n+\n+__attribute__((noipa)) void\n+foo (int n, double *x, double *y)\n+{\t\t/* { dg-bogus \"is used uninitialized in this function\" \"\" { target *-*-* } 0 } */\n+  int i;\n+  double b = y[4];\n+  for (i = 0; i < n; ++i)\n+    y[3] += __builtin_sin (x[i] / b);\n+  y[0] /= b;\n+  y[1] /= b * b;\n+  y[2] /= b;\n+}\n+\n+int\n+main ()\n+{\n+  double y[] = { 16.0, 64.0, 128.0, 0.0, 2.0 };\n+  foo (0, y, y);\n+  if (__builtin_fabs (y[0] - 8.0) > 0.0001\n+      || __builtin_fabs (y[1] - 16.0) > 0.0001\n+      || __builtin_fabs (y[2] - 64.0) > 0.0001\n+      || y[3] != 0.0\n+      || y[4] != 2.0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "a90d9d28e4ef6ce66fa380f314a9749fa952be0a", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be591a9cd557be85e591a0362d220d84c296bd4/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be591a9cd557be85e591a0362d220d84c296bd4/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=8be591a9cd557be85e591a0362d220d84c296bd4", "patch": "@@ -422,28 +422,28 @@ insert_reciprocals (gimple_stmt_iterator *def_gsi, struct occurrence *occ,\n \t    gsi_next (&gsi);\n \n \t  gsi_insert_before (&gsi, new_stmt, GSI_SAME_STMT);\n+\t  if (should_insert_square_recip)\n+\t    gsi_insert_before (&gsi, new_square_stmt, GSI_SAME_STMT);\n \t}\n       else if (def_gsi && occ->bb == def_gsi->bb)\n \t{\n \t  /* Case 2: insert right after the definition.  Note that this will\n \t     never happen if the definition statement can throw, because in\n \t     that case the sole successor of the statement's basic block will\n \t     dominate all the uses as well.  */\n-\t  gsi = *def_gsi;\n \t  gsi_insert_after (def_gsi, new_stmt, GSI_NEW_STMT);\n+\t  if (should_insert_square_recip)\n+\t    gsi_insert_after (def_gsi, new_square_stmt, GSI_NEW_STMT);\n \t}\n       else\n \t{\n \t  /* Case 3: insert in a basic block not containing defs/uses.  */\n \t  gsi = gsi_after_labels (occ->bb);\n \t  gsi_insert_before (&gsi, new_stmt, GSI_SAME_STMT);\n+\t  if (should_insert_square_recip)\n+\t    gsi_insert_before (&gsi, new_square_stmt, GSI_SAME_STMT);\n \t}\n \n-      /* Regardless of which case the reciprocal as inserted in,\n-\t we insert the square immediately after the reciprocal.  */\n-      if (should_insert_square_recip)\n-\tgsi_insert_before (&gsi, new_square_stmt, GSI_SAME_STMT);\n-\n       reciprocal_stats.rdivs_inserted++;\n \n       occ->recip_def_stmt = new_stmt;"}]}