{"sha": "0173c67b308f2662712a187e17663b09e3313be9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE3M2M2N2IzMDhmMjY2MjcxMmExODdlMTc2NjNiMDllMzMxM2JlOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-12-06T18:10:01Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-12-06T18:10:01Z"}, "message": "re PR fortran/51435 (Bad association status after null() of derived type component)\n\n2011-12-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51435\n        * expr.c (gfc_has_default_initializer): Fix handling of\n        DT with initialized pointer components.\n\n2011-12-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51435\n        * gfortran.dg/default_initialization_5.f90: New.\n\nFrom-SVN: r182059", "tree": {"sha": "0e52e1747745d1b0dbb5d871bef478fb63618191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e52e1747745d1b0dbb5d871bef478fb63618191"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0173c67b308f2662712a187e17663b09e3313be9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0173c67b308f2662712a187e17663b09e3313be9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0173c67b308f2662712a187e17663b09e3313be9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0173c67b308f2662712a187e17663b09e3313be9/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a032008aa9715e67db4a71142df73ee09f331df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a032008aa9715e67db4a71142df73ee09f331df6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a032008aa9715e67db4a71142df73ee09f331df6"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "6959a70319c67b5d41f193036401a2fa4f7f2247", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0173c67b308f2662712a187e17663b09e3313be9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0173c67b308f2662712a187e17663b09e3313be9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0173c67b308f2662712a187e17663b09e3313be9", "patch": "@@ -1,3 +1,9 @@\n+2011-12-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51435\n+\t* expr.c (gfc_has_default_initializer): Fix handling of\n+\tDT with initialized pointer components.\n+\n 2011-12-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/51338"}, {"sha": "f3c367c5e7d340c17e555452d7e70c7f5d5b13cf", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0173c67b308f2662712a187e17663b09e3313be9/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0173c67b308f2662712a187e17663b09e3313be9/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=0173c67b308f2662712a187e17663b09e3313be9", "patch": "@@ -3735,6 +3735,8 @@ gfc_has_default_initializer (gfc_symbol *der)\n         if (!c->attr.pointer\n \t     && gfc_has_default_initializer (c->ts.u.derived))\n \t  return true;\n+\tif (c->attr.pointer && c->initializer)\n+\t  return true;\n       }\n     else\n       {\n@@ -3745,6 +3747,7 @@ gfc_has_default_initializer (gfc_symbol *der)\n   return false;\n }\n \n+\n /* Get an expression for a default initializer.  */\n \n gfc_expr *"}, {"sha": "989fa34f8dc8e44baaf28caa877e8aa2caf25514", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0173c67b308f2662712a187e17663b09e3313be9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0173c67b308f2662712a187e17663b09e3313be9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0173c67b308f2662712a187e17663b09e3313be9", "patch": "@@ -1,3 +1,8 @@\n+2011-12-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51435\n+\t* gfortran.dg/default_initialization_5.f90: New.\n+\n 2011-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/51354"}, {"sha": "11927619db4b2b2d2c3a2f345876faae7ad17e2e", "filename": "gcc/testsuite/gfortran.dg/default_initialization_5.f90", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0173c67b308f2662712a187e17663b09e3313be9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0173c67b308f2662712a187e17663b09e3313be9/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization_5.f90?ref=0173c67b308f2662712a187e17663b09e3313be9", "patch": "@@ -0,0 +1,66 @@\n+! { dg-do  run }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/51435\n+!\n+! Contributed by darmar.xxl@gmail.com\n+!\n+module arr_m\n+    type arr_t\n+        real(8), dimension(:), allocatable :: rsk\n+    end type\n+    type arr_t2\n+        integer :: a = 77\n+    end type\n+end module arr_m\n+!*********************\n+module list_m\n+    use arr_m\n+    implicit none\n+\n+    type(arr_t2), target :: tgt\n+\n+    type my_list\n+        type(arr_t), pointer :: head => null()\n+    end type my_list\n+    type my_list2\n+        type(arr_t2), pointer :: head => tgt\n+    end type my_list2\n+end module list_m\n+!***********************\n+module worker_mod\n+    use list_m\n+    implicit none\n+\n+    type data_all_t\n+        type(my_list) :: my_data\n+    end type data_all_t\n+    type data_all_t2\n+        type(my_list2) :: my_data\n+    end type data_all_t2\n+contains\n+    subroutine do_job()\n+        type(data_all_t) :: dum\n+        type(data_all_t2) :: dum2\n+\n+        if (associated(dum%my_data%head)) then\n+          call abort()\n+        else\n+            print *, 'OK: do_job my_data%head is NOT associated'\n+        end if\n+\n+        if (dum2%my_data%head%a /= 77) &\n+          call abort()\n+    end subroutine\n+end module\n+!***************\n+program hello\n+    use worker_mod\n+    implicit none\n+    call do_job()\n+end program\n+\n+! { dg-final { scan-tree-dump-times \"my_data.head = 0B\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"my_data.head = &tgt\" 1 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }\n+! { dg-final { cleanup-modules \"arr_m list_m worker_mod\" } }"}]}