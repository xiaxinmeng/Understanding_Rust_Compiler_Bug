{"sha": "5b8fcab634b94bf988453f93c0c8c413781b26b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI4ZmNhYjYzNGI5NGJmOTg4NDUzZjkzYzBjOGM0MTM3ODFiMjZiNA==", "commit": {"author": {"name": "David O'Brien", "email": "obrien@FreeBSD.org", "date": "2002-04-12T01:08:20Z"}, "committer": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2002-04-12T01:08:20Z"}, "message": "aix.h (CPP_PREDEFINES): Do not define _LP64/__LP64__ or set Acpu or Amachine.\n\n2002-04-11  David O'Brien  <obrien@FreeBSD.org>\n\t* config/ia64/aix.h (CPP_PREDEFINES): Do not define _LP64/__LP64__\n\tor set Acpu or Amachine.  Reformat.\n\t(ASM_SPEC, DONT_USE_BUILTIN_SETJMP, PROFILE_BEFORE_PROLOGUE): Do not\n\tdefine.\n\t(LINK_SPEC): Do not need to undef.\n\t* config/ia64/elf.h (ASM_EXTRA_SPEC): Define.\n\t* config/ia64/freebsd.h (LINK_SPEC): Do not need to undef.\n\t(ASM_SPEC, DONT_USE_BUILTIN_SETJMP, PROFILE_BEFORE_PROLOGUE): Do not\n\tdefine.\n\t* config/ia64/hpux.h (ASM_EXTRA_SPEC): Define.\n\t(ASM_SPEC): Do not define, use ASM_EXTRA_SPEC instead.\n\t(LINK_SPEC): Do not need to undef.\n\t(DONT_USE_BUILTIN_SETJMP): Do not define.\n\t* config/ia64/ia64.h (ASM_SPEC, ASM_EXTRA_SPEC): Add.\n\t(CPP_CPU_SPEC): Define _LP64, set Acpu and Amachine.  Remove -Dia64.\n\t(DONT_USE_BUILTIN_SETJMP, PROFILE_BEFORE_PROLOGUE): Define.\n\tRemove trailing spaces.\n\t* config/ia64/linux.h (CPP_PREDEFINES): Do not define _LP64/__LP64__,\n\t__ELF__, or set Acpu or Amachine.  Reformat.\n\t(ASM_SPEC, DONT_USE_BUILTIN_SETJMP, PROFILE_BEFORE_PROLOGUE): Do not\n\tdefine.\n\nApproved by:  Richard Henderson <rth@redhat.com>\n              Message-ID: <20020411160138.A11250@redhat.com>\n\nFrom-SVN: r52191", "tree": {"sha": "20ca4c15810fdee38c16115e4edfb1e3af252786", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20ca4c15810fdee38c16115e4edfb1e3af252786"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b8fcab634b94bf988453f93c0c8c413781b26b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8fcab634b94bf988453f93c0c8c413781b26b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b8fcab634b94bf988453f93c0c8c413781b26b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8fcab634b94bf988453f93c0c8c413781b26b4/comments", "author": null, "committer": null, "parents": [{"sha": "fee42cc1e8b1c6b114719a2015b9f2902af404f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee42cc1e8b1c6b114719a2015b9f2902af404f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee42cc1e8b1c6b114719a2015b9f2902af404f7"}], "stats": {"total": 128, "additions": 70, "deletions": 58}, "files": [{"sha": "9a6ff9bcfe7e0fd85dd1413e57cb19111a7a458a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b8fcab634b94bf988453f93c0c8c413781b26b4", "patch": "@@ -1,3 +1,27 @@\n+2002-04-11  David O'Brien  <obrien@FreeBSD.org>\n+\n+\t* config/ia64/aix.h (CPP_PREDEFINES): Do not define _LP64/__LP64__\n+\tor set Acpu or Amachine.  Reformat.\n+\t(ASM_SPEC, DONT_USE_BUILTIN_SETJMP, PROFILE_BEFORE_PROLOGUE): Do not\n+\tdefine.\n+\t(LINK_SPEC): Do not need to undef.\n+\t* config/ia64/elf.h (ASM_EXTRA_SPEC): Define.\n+\t* config/ia64/freebsd.h (LINK_SPEC): Do not need to undef.\n+\t(ASM_SPEC, DONT_USE_BUILTIN_SETJMP, PROFILE_BEFORE_PROLOGUE): Do not\n+\tdefine.\n+\t* config/ia64/hpux.h (ASM_EXTRA_SPEC): Define.\n+\t(ASM_SPEC): Do not define, use ASM_EXTRA_SPEC instead.\n+\t(LINK_SPEC): Do not need to undef.\n+\t(DONT_USE_BUILTIN_SETJMP): Do not define.\n+\t* config/ia64/ia64.h (ASM_SPEC, ASM_EXTRA_SPEC): Add.\n+\t(CPP_CPU_SPEC): Define _LP64, set Acpu and Amachine.  Remove -Dia64.\n+\t(DONT_USE_BUILTIN_SETJMP, PROFILE_BEFORE_PROLOGUE): Define.\n+\tRemove trailing spaces.\n+\t* config/ia64/linux.h (CPP_PREDEFINES): Do not define _LP64/__LP64__,\n+\t__ELF__, or set Acpu or Amachine.  Reformat.\n+\t(ASM_SPEC, DONT_USE_BUILTIN_SETJMP, PROFILE_BEFORE_PROLOGUE): Do not\n+\tdefine.\n+\n 2002-04-11  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config.gcc (ia64-*-freebsd*): Fix ordering of tm_files to match"}, {"sha": "fee073213e2983eecd2c84fb65171ad671d31c5c", "filename": "gcc/config/ia64/aix.h", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Faix.h?ref=5b8fcab634b94bf988453f93c0c8c413781b26b4", "patch": "@@ -86,10 +86,9 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"\\\n--D__ia64 -D__ia64__ -D_AIX -D_AIX64 -D_LONGLONG -Dunix \\\n--D_LP64 -D__LP64__ -D__ELF__ \\\n--Asystem=unix -Asystem=aix -Acpu=ia64 -Amachine=ia64 \\\n--D__64BIT__ -D_LONG_LONG -D_IA64 -D__int128=__size128_t\"\n+  -D_AIX -D_AIX64 -D_LONGLONG -Dunix \\\n+  -Asystem=unix -Asystem=aix \\\n+  -D__64BIT__ -D_LONG_LONG -D_IA64 -D__int128=__size128_t\"\n \n /* The GNU C++ standard library requires that these macros be defined.  */\n #undef CPLUSPLUS_CPP_SPEC\n@@ -101,10 +100,6 @@ Boston, MA 02111-1307, USA.  */\n    -D__LONG_MAX__=9223372036854775807L          \\\n    %{cpp_cpu}\"\n \n-/* ia64-specific options for gas */\n-#undef ASM_SPEC\n-#define ASM_SPEC \"-x %{mconstant-gp} %{mauto-pic}\"\n-\n /* Define this for shared library support.  */\n \n #undef LINK_SPEC\n@@ -116,14 +111,8 @@ Boston, MA 02111-1307, USA.  */\n     %{!dynamic-linker:-dynamic-linker /usr/lib/ia64l64/libc.so.1}} \\\n     %{static:-static}}\"\n \n-#define DONT_USE_BUILTIN_SETJMP\n #define JMP_BUF_SIZE  85\n \n-/* Output any profiling code before the prologue.  */\n-\n-#undef PROFILE_BEFORE_PROLOGUE\n-#define PROFILE_BEFORE_PROLOGUE 1\n-\n /* A C statement or compound statement to output to FILE some assembler code to\n    call the profiling subroutine `mcount'.  \n "}, {"sha": "af6d9176a7c6a9e4a5ddb37fc3e5c092baa39d2d", "filename": "gcc/config/ia64/elf.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Felf.h?ref=5b8fcab634b94bf988453f93c0c8c413781b26b4", "patch": "@@ -17,10 +17,12 @@\n \n #if ((TARGET_CPU_DEFAULT | TARGET_DEFAULT) & MASK_GNU_AS) != 0\n /* GNU AS.  */\n-#define ASM_SPEC \\\n-  \"%{mno-gnu-as:-N so} %{!mno-gnu-as:-x} %{mconstant-gp} %{mauto-pic}\"\n+#undef  ASM_EXTRA_SPEC\n+#define ASM_EXTRA_SPEC \\\n+  \"%{mno-gnu-as:-N so} %{!mno-gnu-as:-x}\"\n #else\n /* Intel ias.  */\n+#undef  ASM_SPEC\n #define ASM_SPEC \\\n   \"%{!mgnu-as:-N so} %{mgnu-as:-x} %{mconstant-gp:-M const_gp}\\\n    %{mauto-pic:-M no_plabel}\""}, {"sha": "57bb391e27093aa6b02a0ebfb67fc4d2d0fbc8cd", "filename": "gcc/config/ia64/freebsd.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ffreebsd.h?ref=5b8fcab634b94bf988453f93c0c8c413781b26b4", "patch": "@@ -19,7 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n \n-#undef  LINK_SPEC\n #define LINK_SPEC\t\t\t\t\t\t\t\\\n  \"%{p:%e`-p' not supported; use `-pg' and gprof(1)}\t\t\t\\\n   %{Wl,*:%*}\t\t\t\t\t\t\t\t\\\n@@ -32,9 +31,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n       %{!dynamic-linker:-dynamic-linker /usr/libexec/ld-elf.so.1}}\t\\\n     %{static:-Bstatic}}\"\n \n-#undef  ASM_SPEC\n-#define ASM_SPEC \"-x %{mconstant-gp} %{mauto-pic}\"\n-\n \n /************************[  Target stuff  ]***********************************/\n \n@@ -57,10 +53,4 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define TARGET_ELF\t\t1\n \n-#define DONT_USE_BUILTIN_SETJMP\n #define JMP_BUF_SIZE  76\n-\n-/* Output any profiling code before the prologue.  */\n-\n-#undef  PROFILE_BEFORE_PROLOGUE\n-#define PROFILE_BEFORE_PROLOGUE 1"}, {"sha": "d46acf2b6efa5b1c3e6dc195743f920480353635", "filename": "gcc/config/ia64/hpux.h", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=5b8fcab634b94bf988453f93c0c8c413781b26b4", "patch": "@@ -27,9 +27,9 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"\\\n-  -D__IA64__ -D__ia64 -D__ia64__ -D__hpux -D__hpux__ -Dhpux -Dunix \\\n-  -D__BIG_ENDIAN__ -D_LONGLONG -D__ELF__ \\\n-  -Asystem=hpux -Asystem=posix -Asystem=unix -Acpu=ia64 -Amachine=ia64 \\\n+  -D__IA64__ -D__hpux -D__hpux__ -Dhpux -Dunix \\\n+  -D__BIG_ENDIAN__ -D_LONGLONG \\\n+  -Asystem=hpux -Asystem=posix -Asystem=unix \\\n   -D_UINT128_T\"\n \n /* -D__fpreg=long double is needed to compensate for the lack of __fpreg\n@@ -46,9 +46,8 @@ Boston, MA 02111-1307, USA.  */\n   -D__float80=long\\\\ double \\\n   -D__float128=long\\\\ double\"\n \n-#undef ASM_SPEC\n-#define ASM_SPEC \"-x %{mconstant-gp} %{mauto-pic} \\\n-  %{milp32:-milp32} %{mlp64:-mlp64}\"\n+#undef  ASM_EXTRA_SPEC\n+#define ASM_EXTRA_SPEC \"%{milp32:-milp32} %{mlp64:-mlp64}\"\n \n #undef ENDFILE_SPEC\n \n@@ -84,7 +83,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define POINTERS_EXTEND_UNSIGNED -1\n \n-#define DONT_USE_BUILTIN_SETJMP\n #define JMP_BUF_SIZE  (8 * 76)\n \n #undef CONST_SECTION_ASM_OP"}, {"sha": "30d0a7a5f001f1a806c5b79f46f1658159951080", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 32, "deletions": 13, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=5b8fcab634b94bf988453f93c0c8c413781b26b4", "patch": "@@ -31,12 +31,24 @@ Boston, MA 02111-1307, USA.  */\n \f\n /* Run-time target specifications */\n \n-#define CPP_CPU_SPEC \"\\\n-  -Acpu=ia64 -Amachine=ia64 \\\n-  %{!ansi:%{!std=c*:%{!std=i*:-Dia64}}} -D__ia64 -D__ia64__\"\n+#define EXTRA_SPECS \\\n+  { \"cpp_cpu\", CPP_CPU_SPEC },\n+  { \"asm_extra\", ASM_EXTRA_SPEC },\n+\n+#define CPP_CPU_SPEC \" \\\n+  -Acpu=ia64 -Amachine=ia64 -D__ia64 -D__ia64__ %{!milp32:-D_LP64 -D__LP64__} \\\n+  -D__ELF__\"\n \n #define CC1_SPEC \"%(cc1_cpu) \"\n \n+#define ASM_EXTRA_SPEC \"\"\n+\n+/* ia64-specific options for gas\n+   ??? ia64 gas doesn't accept standard svr4 assembler options?  */\n+#undef ASM_SPEC\n+#define ASM_SPEC \"-x %{mconstant-gp} %{mauto-pic} %(asm_extra)\"\n+\n+\n /* This declaration should be present.  */\n extern int target_flags;\n \n@@ -336,7 +348,7 @@ while (0)\n /* By default, the C++ compiler will use function addresses in the\n    vtable entries.  Setting this non-zero tells the compiler to use\n    function descriptors instead.  The value of this macro says how\n-   many words wide the descriptor is (normally 2).  It is assumed \n+   many words wide the descriptor is (normally 2).  It is assumed\n    that the address of a function descriptor may be treated as a\n    pointer to a function.  */\n #define TARGET_VTABLE_USES_DESCRIPTORS 2\n@@ -391,7 +403,7 @@ while (0)\n \f\n /* Register Basics */\n \n-/* Number of hardware registers known to the compiler.  \n+/* Number of hardware registers known to the compiler.\n    We have 128 general registers, 128 floating point registers,\n    64 predicate registers, 8 branch registers, one frame pointer,\n    and several \"application\" registers.  */\n@@ -453,7 +465,7 @@ while (0)\n    f0: constant 0.0\n    f1: constant 1.0\n    p0: constant true\n-   fp: eliminable frame pointer */   \n+   fp: eliminable frame pointer */\n \n /* The last 16 stacked regs are reserved for the 8 input and 8 output\n    registers.  */\n@@ -523,12 +535,12 @@ while (0)\n      1, 1,  1,   1,  1, 0, 1\t\t\t\t\\\n }\n \n-/* Like `CALL_USED_REGISTERS' but used to overcome a historical \n+/* Like `CALL_USED_REGISTERS' but used to overcome a historical\n    problem which makes CALL_USED_REGISTERS *always* include\n-   all the FIXED_REGISTERS.  Until this problem has been \n+   all the FIXED_REGISTERS.  Until this problem has been\n    resolved this macro can be used to overcome this situation.\n-   In particular, block_propagate() requires this list \n-   be acurate, or we can remove registers which should be live.  \n+   In particular, block_propagate() requires this list\n+   be acurate, or we can remove registers which should be live.\n    This macro is used in regs_invalidated_by_call.  */\n \n #define CALL_REALLY_USED_REGISTERS \\\n@@ -1360,7 +1372,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define FUNCTION_VALUE_REGNO_P(REGNO)\t\t\t\t\\\n   (((REGNO) >= GR_RET_FIRST && (REGNO) <= GR_RET_LAST)\t\t\\\n-   || ((REGNO) >= FR_RET_FIRST && (REGNO) <= FR_RET_LAST)) \n+   || ((REGNO) >= FR_RET_FIRST && (REGNO) <= FR_RET_LAST))\n \n \f\n /* How Large Values are Returned */\n@@ -1731,7 +1743,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    || (CLASS) == GR_AND_FR_REGS ? 4 : 10)\n \n /* A C expression for the cost of a branch instruction.  A value of 1 is the\n-   default; other values are interpreted relative to that.  Used by the \n+   default; other values are interpreted relative to that.  Used by the\n    if-conversion code as max instruction count.  */\n /* ??? This requires investigation.  The primary effect might be how\n    many additional insn groups we run into, vs how good the dynamic\n@@ -2273,7 +2285,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   fprintf (FILE, \"[.%s%d:]\\n\", PREFIX, NUM)\n \n /* Use section-relative relocations for debugging offsets.  Unlike other\n-   targets that fake this by putting the section VMA at 0, IA-64 has \n+   targets that fake this by putting the section VMA at 0, IA-64 has\n    proper relocations for them.  */\n #define ASM_OUTPUT_DWARF_OFFSET(FILE, SIZE, LABEL)\t\\\n   do {\t\t\t\t\t\t\t\\\n@@ -2522,4 +2534,11 @@ enum fetchop_code {\n   IA64_ADD_OP, IA64_SUB_OP, IA64_OR_OP, IA64_AND_OP, IA64_XOR_OP, IA64_NAND_OP\n };\n \n+#define DONT_USE_BUILTIN_SETJMP\n+\n+/* Output any profiling code before the prologue.  */\n+\n+#undef  PROFILE_BEFORE_PROLOGUE\n+#define PROFILE_BEFORE_PROLOGUE 1\n+\n /* End of ia64.h */"}, {"sha": "51ba60f1635887506900af55c80dfc15f9ea1730", "filename": "gcc/config/ia64/linux.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8fcab634b94bf988453f93c0c8c413781b26b4/gcc%2Fconfig%2Fia64%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flinux.h?ref=5b8fcab634b94bf988453f93c0c8c413781b26b4", "patch": "@@ -11,12 +11,8 @@\n \n /* ??? Maybe this should be in sysv4.h?  */\n #define CPP_PREDEFINES \"\\\n--D__ia64 -D__ia64__ -D__linux -D__linux__ -D_LONGLONG -Dlinux -Dunix \\\n--D_LP64 -D__LP64__ -D__ELF__ -Asystem=linux -Acpu=ia64 -Amachine=ia64\"\n-\n-/* ??? ia64 gas doesn't accept standard svr4 assembler options?  */\n-#undef ASM_SPEC\n-#define ASM_SPEC \"-x %{mconstant-gp} %{mauto-pic}\"\n+  -D__linux -D__linux__ -D_LONGLONG -Dlinux -Dunix \\\n+  -Asystem=linux\"\n \n /* Need to override linux.h STARTFILE_SPEC, since it has crtbeginT.o in.  */\n #undef STARTFILE_SPEC\n@@ -46,14 +42,8 @@\n       %{static:-static}}\"\n \n \n-#define DONT_USE_BUILTIN_SETJMP\n #define JMP_BUF_SIZE  76\n \n-/* Output any profiling code before the prologue.  */\n-\n-#undef PROFILE_BEFORE_PROLOGUE\n-#define PROFILE_BEFORE_PROLOGUE 1\n-\n /* Override linux.h LINK_EH_SPEC definition.\n    Signalize that because we have fde-glibc, we don't need all C shared libs\n    linked against -lgcc_s.  */"}]}