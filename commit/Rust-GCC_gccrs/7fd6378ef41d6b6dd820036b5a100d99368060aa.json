{"sha": "7fd6378ef41d6b6dd820036b5a100d99368060aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZkNjM3OGVmNDFkNmI2ZGQ4MjAwMzZiNWExMDBkOTkzNjgwNjBhYQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-03-28T08:31:26Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-03-28T08:31:26Z"}, "message": "re PR target/52737 ([avr]: -mtiny-stack shall not influence multilib selection)\n\n\tPR target/52737\n\t* contrib/gcc_update (files_and_dependencies):\n\tRemove gcc/config/avr/t-multilib from touch data.\n\ngcc/\n\tPR target/52737\n\t* config.gcc (tm_file): Remove avr/multilib.h.\n\n\t* doc/invoke.texi (AVR Options): Adjust\n\tdocumentation of -mtiny-stack.\n\n\t* config/avr/genmultilib.awk: Remove code to generate multilib.h.\n\t(BEGIN): Use -msp8 as multilib option instead of -mtiny-stack.\n\t* config/avr/t-avr: Remove generation of multilib.h.\n\t* config/avr/t-multilib: Regenerate.\n\t* config/avr/multilib.h: Remove.\n\t* config/avr/avr.opt (-msp8): New option.\n\t(avr_sp8): New variable.\n\t* config/avr/driver-avr.c (avr_device_to_sp8): New function.\n\t* config/avr/avr.h (AVR_HAVE_SPH): New define.\n\t(AVR_HAVE_8BIT_SP): Also set by avr_sp8 i.e. -msp8.\n\t(avr_device_to_sp8): New prototype.\n\t(EXTRA_SPEC_FUNCTIONS): Add { \"device_to_sp8\", avr_device_to_sp8 }\n\t(DRIVER_SELF_SPECS): New define.\n\t* config/avr/avr-c.c (avr_cpu_cpp_builtins): New built-in defines:\n\t__AVR_SP8__, __AVR_HAVE_SPH__.\n\t* config/avr/avr.c (output_movhi): Use AVR_HAVE_SPH instead of\n\tAVR_HAVE_8BIT_SP to decide if SP_H is present.\n\t(avr_file_start): Ditto.\n\t\nlibgcc/\n\tPR target/52737\n\t* config/avr/lib1funcs.S: Use __AVR_HAVE_SPH__ for SP_H checks\n\tinstead of __AVR_HAVE_8BIT_SP__.\n\nFrom-SVN: r185907", "tree": {"sha": "a536913b5a523823c9a468572ea1feb321cb1092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a536913b5a523823c9a468572ea1feb321cb1092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fd6378ef41d6b6dd820036b5a100d99368060aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd6378ef41d6b6dd820036b5a100d99368060aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd6378ef41d6b6dd820036b5a100d99368060aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd6378ef41d6b6dd820036b5a100d99368060aa/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be47bf24cbd5e88ebbde79ff7c5352e51c613f47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be47bf24cbd5e88ebbde79ff7c5352e51c613f47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be47bf24cbd5e88ebbde79ff7c5352e51c613f47"}], "stats": {"total": 379, "additions": 146, "deletions": 233}, "files": [{"sha": "45c3ef3d59a78bb4e3c5d2cbb5566b562f7a1aaf", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -1,3 +1,9 @@\n+2012-03-28  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/52737\n+\t* contrib/gcc_update (files_and_dependencies):\n+\tRemove gcc/config/avr/t-multilib from touch data.\n+\n 2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* MAINTAINERS (OS Port Maintainers): Remove irix."}, {"sha": "b81fc0ce458ed7bab9e7d4fcae34f2262f385905", "filename": "contrib/gcc_update", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -83,7 +83,6 @@ gcc/config/arm/arm-tune.md: gcc/config/arm/arm-cores.def gcc/config/arm/gentune.\n gcc/config/arm/arm-tables.opt: gcc/config/arm/arm-arches.def gcc/config/arm/arm-cores.def gcc/config/arm/arm-fpus.def gcc/config/arm/genopt.sh\n gcc/config/avr/avr-tables.opt: gcc/config/avr/avr-mcus.def gcc/config/avr/genopt.sh\n gcc/config/avr/t-multilib: gcc/config/avr/avr-mcus.def gcc/config/avr/genmultilib.awk\n-gcc/config/avr/multilib.h: gcc/config/avr/avr-mcus.def gcc/config/avr/genmultilib.awk\n gcc/config/c6x/c6x-tables.opt: gcc/config/c6x/c6x-isas.def gcc/config/c6x/genopt.sh\n gcc/config/c6x/c6x-sched.md: gcc/config/c6x/c6x-sched.md.in gcc/config/c6x/gensched.sh\n gcc/config/c6x/c6x-mult.md: gcc/config/c6x/c6x-mult.md.in gcc/config/c6x/genmult.sh"}, {"sha": "66e4a4f6fdef61b991e3706ac9415614fa118876", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -1,3 +1,30 @@\n+2012-03-28  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/52737\n+\t* config.gcc (tm_file): Remove avr/multilib.h.\n+\n+\t* doc/invoke.texi (AVR Options): Adjust\n+\tdocumentation of -mtiny-stack.\n+\n+\t* config/avr/genmultilib.awk: Remove code to generate multilib.h.\n+\t(BEGIN): Use -msp8 as multilib option instead of -mtiny-stack.\n+\t* config/avr/t-avr: Remove generation of multilib.h.\n+\t* config/avr/t-multilib: Regenerate.\n+\t* config/avr/multilib.h: Remove.\n+\t* config/avr/avr.opt (-msp8): New option.\n+\t(avr_sp8): New variable.\n+\t* config/avr/driver-avr.c (avr_device_to_sp8): New function.\n+\t* config/avr/avr.h (AVR_HAVE_SPH): New define.\n+\t(AVR_HAVE_8BIT_SP): Also set by avr_sp8 i.e. -msp8.\n+\t(avr_device_to_sp8): New prototype.\n+\t(EXTRA_SPEC_FUNCTIONS): Add { \"device_to_sp8\", avr_device_to_sp8 }\n+\t(DRIVER_SELF_SPECS): New define.\n+\t* config/avr/avr-c.c (avr_cpu_cpp_builtins): New built-in defines:\n+\t__AVR_SP8__, __AVR_HAVE_SPH__.\n+\t* config/avr/avr.c (output_movhi): Use AVR_HAVE_SPH instead of\n+\tAVR_HAVE_8BIT_SP to decide if SP_H is present.\n+\t(avr_file_start): Ditto.\n+\n 2012-03-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/52736"}, {"sha": "1f2baeec05ab61aeb72ce8e1f6a4899c1cf13078", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -898,13 +898,13 @@ arm*-wince-pe*)\n \textra_objs=\"pe.o\"\n \t;;\n avr-*-rtems*)\n-\ttm_file=\"elfos.h avr/elf.h avr/avr.h avr/multilib.h dbxelf.h avr/rtems.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"elfos.h avr/elf.h avr/avr.h dbxelf.h avr/rtems.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"avr/t-avr avr/t-multilib t-rtems avr/t-rtems\"\n \textra_gcc_objs=\"driver-avr.o avr-devices.o\"\n \textra_objs=\"avr-devices.o avr-log.o\"\n \t;;\n avr-*-*)\n-\ttm_file=\"elfos.h avr/elf.h avr/avr.h avr/multilib.h dbxelf.h newlib-stdint.h\"\n+\ttm_file=\"elfos.h avr/elf.h avr/avr.h dbxelf.h newlib-stdint.h\"\n \ttmake_file=\"avr/t-avr avr/t-multilib\"\n \tuse_gcc_stdint=wrap\n \textra_gcc_objs=\"driver-avr.o avr-devices.o\""}, {"sha": "d689fa0238057819a428c867fab4515bc12e4726", "filename": "gcc/config/avr/avr-c.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Favr-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Favr-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-c.c?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -128,6 +128,12 @@ avr_cpu_cpp_builtins (struct cpp_reader *pfile)\n   else\n     cpp_define (pfile, \"__AVR_HAVE_16BIT_SP__\");\n \n+  if (avr_sp8)\n+    cpp_define (pfile, \"__AVR_SP8__\");\n+\n+  if (AVR_HAVE_SPH)\n+    cpp_define (pfile, \"__AVR_HAVE_SPH__\");\n+\n   if (TARGET_NO_INTERRUPTS)\n     cpp_define (pfile, \"__NO_INTERRUPTS__\");\n "}, {"sha": "3ec1b90d411f70627b3985208f6cf3933776a44e", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -963,7 +963,7 @@ avr_prologue_setup_frame (HOST_WIDE_INT size, HARD_REG_SET set)\n             {\n               /* Don't error so that insane code from newlib still compiles\n                  and does not break building newlib.  As PR51345 is implemented\n-                 now, there are multilib variants with -mtiny-stack.\n+                 now, there are multilib variants with -msp8.\n                  \n                  If user wants sanity checks he can use -Wstack-usage=\n                  or similar options.\n@@ -2774,7 +2774,7 @@ output_movhi (rtx insn, rtx xop[], int *plen)\n             }\n           else if (test_hard_reg_class (STACK_REG, src))\n             {\n-              return AVR_HAVE_8BIT_SP\n+              return !AVR_HAVE_SPH\n                 ? avr_asm_len (\"in %A0,__SP_L__\" CR_TAB\n                                \"clr %B0\", xop, plen, -2)\n                 \n@@ -7341,7 +7341,7 @@ avr_file_start (void)\n \n   /* Print I/O addresses of some SFRs used with IN and OUT.  */\n \n-  if (!AVR_HAVE_8BIT_SP)\n+  if (AVR_HAVE_SPH)\n     fprintf (asm_out_file, \"__SP_H__ = 0x%02x\\n\", avr_addr.sp_h - sfr_offset);\n \n   fprintf (asm_out_file, \"__SP_L__ = 0x%02x\\n\", avr_addr.sp_l - sfr_offset);"}, {"sha": "bd5241c9fad51659ca7e0251e0f958a5f714edb6", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -188,7 +188,26 @@ enum\n #define AVR_HAVE_RAMPZ (avr_current_arch->have_elpm             \\\n                         || avr_current_arch->have_rampd)\n #define AVR_HAVE_EIJMP_EICALL (avr_current_arch->have_eijmp_eicall)\n-#define AVR_HAVE_8BIT_SP (avr_current_device->short_sp || TARGET_TINY_STACK)\n+\n+/* Handling of 8-bit SP versus 16-bit SP is as follows:\n+\n+   -msp8 is used internally to select the right multilib for targets with\n+   8-bit SP.  -msp8 is set automatically by DRIVER_SELF_SPECS for devices\n+   with 8-bit SP or by multilib generation machinery.  If a frame pointer is\n+   needed and SP is only 8 bits wide, SP is zero-extended to get FP.\n+\n+   TARGET_TINY_STACK is triggered by -mtiny-stack which is a user option.\n+   This option has no effect on multilib selection.  It serves to save some\n+   bytes on 16-bit SP devices by only changing SP_L and leaving SP_H alone.\n+\n+   These two properties are reflected by built-in macros __AVR_SP8__ resp.\n+   __AVR_HAVE_8BIT_SP__ and __AVR_HAVE_16BIT_SP__.  During multilib generation\n+   there is always __AVR_SP8__ == __AVR_HAVE_8BIT_SP__.  */\n+\n+#define AVR_HAVE_8BIT_SP                                                \\\n+  (avr_current_device->short_sp || TARGET_TINY_STACK || avr_sp8)\n+\n+#define AVR_HAVE_SPH (!avr_sp8)\n \n #define AVR_2_BYTE_PC (!AVR_HAVE_EIJMP_EICALL)\n #define AVR_3_BYTE_PC (AVR_HAVE_EIJMP_EICALL)\n@@ -577,13 +596,16 @@ extern const char *avr_device_to_arch (int argc, const char **argv);\n extern const char *avr_device_to_data_start (int argc, const char **argv);\n extern const char *avr_device_to_startfiles (int argc, const char **argv);\n extern const char *avr_device_to_devicelib (int argc, const char **argv);\n+extern const char *avr_device_to_sp8 (int argc, const char **argv);\n \n-#define EXTRA_SPEC_FUNCTIONS \\\n-  { \"device_to_arch\", avr_device_to_arch }, \\\n+#define EXTRA_SPEC_FUNCTIONS                            \\\n+  { \"device_to_arch\", avr_device_to_arch },             \\\n   { \"device_to_data_start\", avr_device_to_data_start }, \\\n-  { \"device_to_startfile\", avr_device_to_startfiles }, \\\n-  { \"device_to_devicelib\", avr_device_to_devicelib },\n+  { \"device_to_startfile\", avr_device_to_startfiles },  \\\n+  { \"device_to_devicelib\", avr_device_to_devicelib },   \\\n+  { \"device_to_sp8\", avr_device_to_sp8 },\n \n+#define DRIVER_SELF_SPECS \" %:device_to_sp8(%{mmcu=*:%*}) \"\n #define CPP_SPEC \"\"\n \n #define CC1_SPEC \"\""}, {"sha": "d4d6b7826d8fbfecc1b24bb8d79afab86456c9bc", "filename": "gcc/config/avr/avr.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Favr.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Favr.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.opt?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -73,3 +73,7 @@ Accumulate outgoing function arguments and acquire/release the needed stack spac\n mstrict-X\n Target Report Var(avr_strict_X) Init(0)\n When accessing RAM, use X as imposed by the hardware, i.e. just use pre-decrement, post-increment and indirect addressing with the X register.  Without this option, the compiler may assume that there is an addressing mode X+const similar to Y+const and Z+const and emit instructions to emulate such an addressing mode for X.\n+\n+;; For rationale behind -msp8 see explanation in avr.h.\n+msp8\n+Target Report RejectNegative Undocumented Var(avr_sp8) Init(0)"}, {"sha": "26c21412c3f35fb557df121585962ed272eb2c47", "filename": "gcc/config/avr/driver-avr.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fdriver-avr.c?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -112,3 +112,24 @@ avr_device_to_devicelib (int argc, const char **argv)\n   return concat (\"-l\", avr_current_device->library_name, NULL);\n }\n \n+const char*\n+avr_device_to_sp8 (int argc, const char **argv)\n+{\n+  if (0 == argc)\n+    return NULL;\n+\n+  avr_set_current_device (argv[0]);\n+\n+  /* Leave \"avr2\" and \"avr25\" alone.  These two architectures are\n+     the only ones that mix devices with 8-bit SP and 16-bit SP.\n+     -msp8 is set by mmultilib machinery.  */\n+\n+  if (avr_current_device->macro == NULL\n+      && (avr_current_device->arch == ARCH_AVR2\n+          || avr_current_device->arch == ARCH_AVR25))\n+    return \"\";\n+\n+  return avr_current_device->short_sp\n+    ? \"-msp8\"\n+    : \"%<msp8\";\n+}"}, {"sha": "0aab49a407fe4c94d5a4cd82cbe1500522668bca", "filename": "gcc/config/avr/genmultilib.awk", "status": "modified", "additions": 10, "deletions": 109, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Fgenmultilib.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Fgenmultilib.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fgenmultilib.awk?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -26,9 +26,6 @@\n # FORMAT = \"Makefile\": Generate Makefile Snipet that sets some\n #                      MULTILIB_* Variables as needed.\n #\n-# FORMAT = \"multilib.h\": Generate C Header intended to override\n-#                      (parts of) multilib.h used in gcc.c.\n-#\n ##################################################################\n \n BEGIN {\n@@ -41,7 +38,7 @@ BEGIN {\n \n     mtiny[0] = \"\"\n     mtiny[1] = \"tiny-stack\"\n-    option[\"tiny-stack\"] = \"mtiny-stack\"\n+    option[\"tiny-stack\"] = \"msp8\"\n }\n \n ##################################################################\n@@ -54,18 +51,6 @@ BEGIN {\n \tnext\n     else if (comment == 1)\n     {\n-\tif (FORMAT == \"multilib.h\")\n-\t{\n-\t    print \"/*\"\n-\t    print \"   Auto-generated C header\"\n-\t    print \"   Generated by    : ./gcc/config/avr/genmultilib.awk\"\n-\t    print \"   Generated from  : ./gcc/config/avr/avr-mcus.def\"\n-\t    print \"   Used by         : ./gcc/gcc.c via tm.h\"\n-\t    print \"   Purpose         : Override multilib_raw[] from multilib.h\"\n-\t    print \"*/\"\n-\t    print \"/*\"\n-\t}\n-\n \tif (FORMAT == \"Makefile\")\n \t{\n \t    print \"# Auto-generated Makefile Snip\"\n@@ -78,15 +63,12 @@ BEGIN {\n \n     comment = 2;\n \n-    if (FORMAT == \"multilib.h\")\n-\tgsub (\"#\", \"  \")\n-\n     print\n }\n \n /^$/ {\n-    if (comment && FORMAT == \"multilib.h\")\n-\tprint \"*/\"\n+    # The first empty line stops copy-pasting the GPL comments\n+    # from this file to the generated file.\n \n     comment = 0\n }\n@@ -144,7 +126,6 @@ BEGIN {\n #    m_dirnames    <->    MULTILIB_DIRNAMES           \"\n #    m_exceptions  <->    MULTILIB_EXCEPTIONS         \"\n #    m_matches     <->    MULTILIB_MATCHES            \"\n-#    m_raw         <->    avr_multilib_raw         multilib.h\n #\n ##################################################################\n \n@@ -154,11 +135,9 @@ END {\n     m_exceptions = \"\\nMULTILIB_EXCEPTIONS =\"\n     m_matches    = \"\\nMULTILIB_MATCHES =\"\n \n-    m_raw = \"\"\n-\n     ##############################################################\n     # Compose MULTILIB_OPTIONS.  This represents the Cross-Product\n-    #    (avr2, avr25, ...) x mtiny-stack\n+    #    (avr2, avr25, ...) x msp8\n \n     sep = \"\"\n     for (c = 0; c < n_cores; c++)\n@@ -167,54 +146,25 @@ END {\n \tsep = \"/\"\n     }\n \n-    # The ... x mtiny-stack\n+    # The ... x msp8\n     m_options = m_options \" \" option[mtiny[1]]\n \n     ##############################################################\n     # Map Device to its multilib\n \n-    # All Mappings that cannot be represented by GCC's genmultilib\n-    # Machinery must be handcrafted.\n-\n-    dot_excludes = \"\"\n-    m_raw_sp8 = \"\"\n-\n     for (t = 0; t < n_mcu; t++)\n     {\n \tcore = toCore[mcu[t]]\n \t\n-\tif (tiny_stack[mcu[t]] == 1)\n-\t{\n-\t    if (core == \"avr2\")\n-\t\tdir = mtiny[1]\n-\t    else\n-\t\tdir = core \"/\" mtiny[1]\n-\n-\t    m_raw_sp8 = m_raw_sp8 \"  \\\"\" dir \" \" option[mcu[t]] \";\\\",\\n\"\n-\t    dot_excludes = dot_excludes \" !\" option[mcu[t]]\n-\n-\t    line = option[mcu[t]] \":\" option[mcu[t]]\n-\t    gsub (\"=\", \"?\", line)\n-\t    gsub (\":\", \"=\", line)\n-\n-\t    m_matches = m_matches \" \\\\\\n\\t\" line\n-\t}\n+\tline = option[core] \":\" option[mcu[t]]\n+\tgsub (\"=\", \"?\", line)\n+\tgsub (\":\", \"=\", line)\n \n-\t# The SP = 16 Devices are vanilla: Do the same as\n-\t# MULTILIB_MATCHES would yield.  Don't list avr2 (default)\n-\n-\tif (core != \"avr2\")\n-\t{\n-\t    line = option[core] \":\" option[mcu[t]]\n-\t    gsub (\"=\", \"?\", line)\n-\t    gsub (\":\", \"=\", line)\n-\n-\t    m_matches = m_matches \" \\\\\\n\\t\" line\n-\t}\n+\tm_matches = m_matches \" \\\\\\n\\t\" line\n     }\n \n     ####################################################################\n-    # Compose MULTILIB_DIRNAMES, MULTILIB_EXEPTIONS and avr_multilib_raw\n+    # Compose MULTILIB_DIRNAMES and MULTILIB_EXEPTIONS\n \n     n_mtiny = 2\n     for (t = 0; t < n_mtiny; t++)\n@@ -248,38 +198,6 @@ END {\n \n \t    if (core != \"avr2\" || mtiny[t] == \"\")\n \t\tm_dirnames = m_dirnames \" \" mdir\n-\n-\t    # Remainder deals with avr_multilib_raw Entries.\n-\t    # Each Entry looks like\n-\t    #     \"multilib-dir option-to-match !option-to-avoid-match;\"\n-\t    # for Example:\n-\t    #     \"avr25/tiny-stack !mmcu=avr2 mmcu=avr25 !mmcu=avr3 ... mtiny-stack;\"\n-\n-\t    if (mdir == \"\")\n-\t\tmdir = \".\"\n-\n-\t    line = mdir\n-\n-\t    for (s = 0; s < n_cores; s++)\n-\t    {\n-\t\tif (cores[s] == core)\n-\t\t    line = line \" \" option[cores[s]]\n-\t\telse\n-\t\t    line = line \" !\" option[cores[s]]\n-\t    }\n-\n-\t    if (tiny_stack[core] != 0)\n-\t    {\n-\t\tif (mtiny[t] == \"\")\n-\t\t    line = line \" !\" option[mtiny[1]]\n-\t\telse\n-\t\t    line = line \" \" option[mtiny[1]]\n-\t    }\n-\n-\t    if (mdir == \".\")\n-\t\tline = line dot_excludes\n-\n-\t    m_raw = m_raw \"  \\\"\" line \";\\\",\\n\"\n \t}\n \n     ############################################################\n@@ -295,21 +213,4 @@ END {\n \tprint m_exceptions\n \tprint m_matches\n     }\n-\n-    if (FORMAT == \"multilib.h\")\n-    {\n-\t# Intended Target: ./gcc/config/avr/multilib.h\n-\n-\tprint \"#if defined NULL && !defined AVR_MULTILIB_H\"\n-\tprint \"#define AVR_MULTILIB_H\"\n-\n-\tprint \"static const char* const avr_multilib_raw[] = {\"\n-\tprint m_raw_sp8\n-\tprint m_raw\n-\tprint \"  NULL\\n};\"\n-\n-\tprint \"#undef  multilib_raw\"\n-\tprint \"#define multilib_raw avr_multilib_raw\"\n-\tprint \"#endif /* AVR_MULTILIB_H */\"\n-    }\n }"}, {"sha": "582c6dae6f7550acf7abebefd8dd538e126adc1d", "filename": "gcc/config/avr/multilib.h", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be47bf24cbd5e88ebbde79ff7c5352e51c613f47/gcc%2Fconfig%2Favr%2Fmultilib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be47bf24cbd5e88ebbde79ff7c5352e51c613f47/gcc%2Fconfig%2Favr%2Fmultilib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fmultilib.h?ref=be47bf24cbd5e88ebbde79ff7c5352e51c613f47", "patch": "@@ -1,70 +0,0 @@\n-/*\n-   Auto-generated C header\n-   Generated by    : ./gcc/config/avr/genmultilib.awk\n-   Generated from  : ./gcc/config/avr/avr-mcus.def\n-   Used by         : ./gcc/gcc.c via tm.h\n-   Purpose         : Override multilib_raw[] from multilib.h\n-*/\n-/*\n-   Copyright (C) 2011 Free Software Foundation, Inc.\n-  \n-   This file is part of GCC.\n-  \n-   GCC is free software; you can redistribute it and/or modify it under\n-   the terms of the GNU General Public License as published by the Free\n-   Software Foundation; either version 3, or (at your option) any later\n-   version.\n-  \n-   GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-   for more details.\n-  \n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.\n-*/\n-#if defined NULL && !defined AVR_MULTILIB_H\n-#define AVR_MULTILIB_H\n-static const char* const avr_multilib_raw[] = {\n-  \"tiny-stack mmcu=at90s2313;\",\n-  \"tiny-stack mmcu=at90s2323;\",\n-  \"tiny-stack mmcu=at90s2333;\",\n-  \"tiny-stack mmcu=at90s2343;\",\n-  \"tiny-stack mmcu=attiny22;\",\n-  \"tiny-stack mmcu=attiny26;\",\n-  \"tiny-stack mmcu=at90s4433;\",\n-  \"avr25/tiny-stack mmcu=attiny13;\",\n-  \"avr25/tiny-stack mmcu=attiny13a;\",\n-  \"avr25/tiny-stack mmcu=attiny2313;\",\n-  \"avr25/tiny-stack mmcu=attiny2313a;\",\n-  \"avr25/tiny-stack mmcu=attiny24;\",\n-  \"avr25/tiny-stack mmcu=attiny24a;\",\n-  \"avr25/tiny-stack mmcu=attiny25;\",\n-  \"avr25/tiny-stack mmcu=attiny261;\",\n-  \"avr25/tiny-stack mmcu=attiny261a;\",\n-\n-  \". !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7 !mtiny-stack !mmcu=at90s2313 !mmcu=at90s2323 !mmcu=at90s2333 !mmcu=at90s2343 !mmcu=attiny22 !mmcu=attiny26 !mmcu=at90s4433 !mmcu=attiny13 !mmcu=attiny13a !mmcu=attiny2313 !mmcu=attiny2313a !mmcu=attiny24 !mmcu=attiny24a !mmcu=attiny25 !mmcu=attiny261 !mmcu=attiny261a;\",\n-  \"avr2 mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7 !mtiny-stack;\",\n-  \"avr25 !mmcu=avr2 mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7 !mtiny-stack;\",\n-  \"avr3 !mmcu=avr2 !mmcu=avr25 mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avr31 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avr35 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avr4 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avr5 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avr51 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avr6 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avrxmega2 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avrxmega4 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avrxmega5 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avrxmega6 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 mmcu=avrxmega6 !mmcu=avrxmega7;\",\n-  \"avrxmega7 !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 mmcu=avrxmega7;\",\n-  \"tiny-stack !mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7 mtiny-stack;\",\n-  \"avr2/tiny-stack mmcu=avr2 !mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7 mtiny-stack;\",\n-  \"avr25/tiny-stack !mmcu=avr2 mmcu=avr25 !mmcu=avr3 !mmcu=avr31 !mmcu=avr35 !mmcu=avr4 !mmcu=avr5 !mmcu=avr51 !mmcu=avr6 !mmcu=avrxmega2 !mmcu=avrxmega4 !mmcu=avrxmega5 !mmcu=avrxmega6 !mmcu=avrxmega7 mtiny-stack;\",\n-\n-  NULL\n-};\n-#undef  multilib_raw\n-#define multilib_raw avr_multilib_raw\n-#endif /* AVR_MULTILIB_H */"}, {"sha": "996383332040bc4ad70854cdc3b5f1aeee45c63c", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -49,16 +49,10 @@ $(srcdir)/config/avr/avr-tables.opt: $(srcdir)/config/avr/genopt.sh $(AVR_MCUS)\n # MULTILIB_MATCHES\n $(srcdir)/config/avr/t-multilib: s-avr-mlib; @true\n \n-# Override multilib_raw[] from multilib.h\n-$(srcdir)/config/avr/multilib.h: s-avr-mlib; @true\n-\n s-mlib: $(srcdir)/config/avr/t-multilib\n \n s-avr-mlib: $(srcdir)/config/avr/genmultilib.awk $(AVR_MCUS)\n \t$(AWK) -f $< -v FORMAT=Makefile   $< $(AVR_MCUS) > tmp-avr-mlib\n-\t$(AWK) -f $< -v FORMAT=multilib.h $< $(AVR_MCUS) > tmp-avr-mlib.h\n-\t$(SHELL) $(srcdir)/../move-if-change \\\n-\t\ttmp-avr-mlib.h \t$(srcdir)/config/avr/multilib.h\n \t$(SHELL) $(srcdir)/../move-if-change \\\n \t\ttmp-avr-mlib \t$(srcdir)/config/avr/t-multilib\n \t$(STAMP) $@"}, {"sha": "497f63b4ea88cf4b997282f65a538e497fa175d8", "filename": "gcc/config/avr/t-multilib", "status": "modified", "additions": 25, "deletions": 29, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fconfig%2Favr%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-multilib?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -21,57 +21,53 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-MULTILIB_OPTIONS = mmcu=avr2/mmcu=avr25/mmcu=avr3/mmcu=avr31/mmcu=avr35/mmcu=avr4/mmcu=avr5/mmcu=avr51/mmcu=avr6/mmcu=avrxmega2/mmcu=avrxmega4/mmcu=avrxmega5/mmcu=avrxmega6/mmcu=avrxmega7 mtiny-stack\n+MULTILIB_OPTIONS = mmcu=avr2/mmcu=avr25/mmcu=avr3/mmcu=avr31/mmcu=avr35/mmcu=avr4/mmcu=avr5/mmcu=avr51/mmcu=avr6/mmcu=avrxmega2/mmcu=avrxmega4/mmcu=avrxmega5/mmcu=avrxmega6/mmcu=avrxmega7 msp8\n \n MULTILIB_DIRNAMES =  avr2 avr25 avr3 avr31 avr35 avr4 avr5 avr51 avr6 avrxmega2 avrxmega4 avrxmega5 avrxmega6 avrxmega7 tiny-stack avr25/tiny-stack\n \n MULTILIB_EXCEPTIONS = \\\n-\tmmcu=avr3/mtiny-stack \\\n-\tmmcu=avr31/mtiny-stack \\\n-\tmmcu=avr35/mtiny-stack \\\n-\tmmcu=avr4/mtiny-stack \\\n-\tmmcu=avr5/mtiny-stack \\\n-\tmmcu=avr51/mtiny-stack \\\n-\tmmcu=avr6/mtiny-stack \\\n-\tmmcu=avrxmega2/mtiny-stack \\\n-\tmmcu=avrxmega4/mtiny-stack \\\n-\tmmcu=avrxmega5/mtiny-stack \\\n-\tmmcu=avrxmega6/mtiny-stack \\\n-\tmmcu=avrxmega7/mtiny-stack\n+\tmmcu=avr3/msp8 \\\n+\tmmcu=avr31/msp8 \\\n+\tmmcu=avr35/msp8 \\\n+\tmmcu=avr4/msp8 \\\n+\tmmcu=avr5/msp8 \\\n+\tmmcu=avr51/msp8 \\\n+\tmmcu=avr6/msp8 \\\n+\tmmcu=avrxmega2/msp8 \\\n+\tmmcu=avrxmega4/msp8 \\\n+\tmmcu=avrxmega5/msp8 \\\n+\tmmcu=avrxmega6/msp8 \\\n+\tmmcu=avrxmega7/msp8\n \n MULTILIB_MATCHES = \\\n-\tmmcu?at90s2313=mmcu?at90s2313 \\\n-\tmmcu?at90s2323=mmcu?at90s2323 \\\n-\tmmcu?at90s2333=mmcu?at90s2333 \\\n-\tmmcu?at90s2343=mmcu?at90s2343 \\\n-\tmmcu?attiny22=mmcu?attiny22 \\\n-\tmmcu?attiny26=mmcu?attiny26 \\\n-\tmmcu?at90s4433=mmcu?at90s4433 \\\n+\tmmcu?avr2=mmcu?at90s2313 \\\n+\tmmcu?avr2=mmcu?at90s2323 \\\n+\tmmcu?avr2=mmcu?at90s2333 \\\n+\tmmcu?avr2=mmcu?at90s2343 \\\n+\tmmcu?avr2=mmcu?attiny22 \\\n+\tmmcu?avr2=mmcu?attiny26 \\\n+\tmmcu?avr2=mmcu?at90s4414 \\\n+\tmmcu?avr2=mmcu?at90s4433 \\\n+\tmmcu?avr2=mmcu?at90s4434 \\\n+\tmmcu?avr2=mmcu?at90s8515 \\\n+\tmmcu?avr2=mmcu?at90c8534 \\\n+\tmmcu?avr2=mmcu?at90s8535 \\\n \tmmcu?avr25=mmcu?ata6289 \\\n-\tmmcu?attiny13=mmcu?attiny13 \\\n \tmmcu?avr25=mmcu?attiny13 \\\n-\tmmcu?attiny13a=mmcu?attiny13a \\\n \tmmcu?avr25=mmcu?attiny13a \\\n-\tmmcu?attiny2313=mmcu?attiny2313 \\\n \tmmcu?avr25=mmcu?attiny2313 \\\n-\tmmcu?attiny2313a=mmcu?attiny2313a \\\n \tmmcu?avr25=mmcu?attiny2313a \\\n-\tmmcu?attiny24=mmcu?attiny24 \\\n \tmmcu?avr25=mmcu?attiny24 \\\n-\tmmcu?attiny24a=mmcu?attiny24a \\\n \tmmcu?avr25=mmcu?attiny24a \\\n \tmmcu?avr25=mmcu?attiny4313 \\\n \tmmcu?avr25=mmcu?attiny44 \\\n \tmmcu?avr25=mmcu?attiny44a \\\n \tmmcu?avr25=mmcu?attiny84 \\\n \tmmcu?avr25=mmcu?attiny84a \\\n-\tmmcu?attiny25=mmcu?attiny25 \\\n \tmmcu?avr25=mmcu?attiny25 \\\n \tmmcu?avr25=mmcu?attiny45 \\\n \tmmcu?avr25=mmcu?attiny85 \\\n-\tmmcu?attiny261=mmcu?attiny261 \\\n \tmmcu?avr25=mmcu?attiny261 \\\n-\tmmcu?attiny261a=mmcu?attiny261a \\\n \tmmcu?avr25=mmcu?attiny261a \\\n \tmmcu?avr25=mmcu?attiny461 \\\n \tmmcu?avr25=mmcu?attiny461a \\"}, {"sha": "672e597492d4613654cbb3d9b20c97ddfb35403e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -11131,8 +11131,7 @@ sbiw r26, const   ; X -= const\n \n @item -mtiny-stack\n @opindex mtiny-stack\n-Only use the lower 8@tie{}bits of the stack pointer and assume that the high\n-byte of SP is always zero.\n+Only change the lower 8@tie{}bits of the stack pointer.\n @end table\n \n @subsubsection @code{EIND} and Devices with more than 128 Ki Bytes of Flash"}, {"sha": "5efe95023df9d869bb0db96c7c515a825cba3ab9", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -1,3 +1,9 @@\n+2012-03-28  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/52737\n+\t* config/avr/lib1funcs.S: Use __AVR_HAVE_SPH__ for SP_H checks\n+\tinstead of __AVR_HAVE_8BIT_SP__.\n+\n 2012-03-26  Tristan Gingold  <gingold@adacore.com>\n \n \t* config/ia64/unwind-ia64.h: Declare unw_word and unw_sword."}, {"sha": "95a7d3d4eebfbd70da47ba886834572cc0f32bb4", "filename": "libgcc/config/avr/lib1funcs.S", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd6378ef41d6b6dd820036b5a100d99368060aa/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd6378ef41d6b6dd820036b5a100d99368060aa/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Flib1funcs.S?ref=7fd6378ef41d6b6dd820036b5a100d99368060aa", "patch": "@@ -25,7 +25,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define __zero_reg__ r1\n #define __tmp_reg__ r0\n #define __SREG__ 0x3f\n+#if defined (__AVR_HAVE_SPH__)\n #define __SP_H__ 0x3e\n+#endif\n #define __SP_L__ 0x3d\n #define __RAMPZ__ 0x3B\n #define __EIND__  0x3C\n@@ -1258,7 +1260,7 @@ ENDF __divmodsi4\n \n #if defined (__AVR_HAVE_JMP_CALL__)\n #   define SPEED_DIV 8\n-#elif defined (__AVR_HAVE_MOVW__) && !defined (__AVR_HAVE_8BIT_SP__)\n+#elif defined (__AVR_HAVE_MOVW__) && defined (__AVR_HAVE_SPH__)\n #   define SPEED_DIV 16\n #else\n #   define SPEED_DIV 0\n@@ -1540,10 +1542,10 @@ DEFUN  __divdi3_moddi3\n \n 4:  ;; Epilogue: Restore the Z = 12 Registers and return\n     in r28, __SP_L__\n-#if defined (__AVR_HAVE_8BIT_SP__)\n-    clr r29\n-#else\n+#if defined (__AVR_HAVE_SPH__)\n     in r29, __SP_H__\n+#else\n+    clr r29\n #endif /* #SP = 8/16 */\n     ldi r30, 12\n     XJMP __epilogue_restores__ + ((18 - 12) * 2)\n@@ -1691,7 +1693,7 @@ DEFUN __prologue_saves__\n \tpush r17\n \tpush r28\n \tpush r29\n-#if defined (__AVR_HAVE_8BIT_SP__)\n+#if !defined (__AVR_HAVE_SPH__)\n \tin\tr28,__SP_L__\n \tsub\tr28,r26\n \tout\t__SP_L__,r28\n@@ -1747,7 +1749,7 @@ DEFUN __epilogue_restores__\n \tldd\tr16,Y+4\n \tldd\tr17,Y+3\n \tldd\tr26,Y+2\n-#if defined (__AVR_HAVE_8BIT_SP__)\n+#if !defined (__AVR_HAVE_SPH__)\n \tldd\tr29,Y+1\n \tadd\tr28,r30\n \tout\t__SP_L__,r28"}]}