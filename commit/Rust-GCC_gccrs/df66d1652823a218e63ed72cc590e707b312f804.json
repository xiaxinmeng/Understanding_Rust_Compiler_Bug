{"sha": "df66d1652823a218e63ed72cc590e707b312f804", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY2NmQxNjUyODIzYTIxOGU2M2VkNzJjYzU5MGU3MDdiMzEyZjgwNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-10-27T19:41:13Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-10-27T19:41:13Z"}, "message": "raise-gcc (db_region_for): Use _Unwind_GetIPInfo instead of _Unwind_GetIP if HAVE_GETIPINFO is defined.\n\n\t* raise-gcc (db_region_for): Use _Unwind_GetIPInfo instead of\n\t_Unwind_GetIP if HAVE_GETIPINFO is defined.\n\t(db_action_for): Likewise.\n\nFrom-SVN: r153613", "tree": {"sha": "1533ea9b890ad29fc0b40626d470d5c567ecf626", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1533ea9b890ad29fc0b40626d470d5c567ecf626"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df66d1652823a218e63ed72cc590e707b312f804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df66d1652823a218e63ed72cc590e707b312f804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df66d1652823a218e63ed72cc590e707b312f804", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df66d1652823a218e63ed72cc590e707b312f804/comments", "author": null, "committer": null, "parents": [{"sha": "4c0f4b0b2f4d38b532d4602688083f965c50af82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c0f4b0b2f4d38b532d4602688083f965c50af82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c0f4b0b2f4d38b532d4602688083f965c50af82"}], "stats": {"total": 49, "additions": 37, "deletions": 12}, "files": [{"sha": "9c6be32f86056b6027b6b2223cdddfb6e08b63ae", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=df66d1652823a218e63ed72cc590e707b312f804", "patch": "@@ -1,3 +1,9 @@\n+2009-10-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* raise-gcc (db_region_for): Use _Unwind_GetIPInfo instead of\n+\t_Unwind_GetIP if HAVE_GETIPINFO is defined.\n+\t(db_action_for): Likewise.\n+\n 2009-10-27  Robert Dewar  <dewar@adacore.com>\n \n \t* s-fileio.adb, s-fileio.ads, sem_util.adb, sem_warn.adb,"}, {"sha": "3589bc5dfd12780f6752d185ed4e7ad27baa28ac", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=df66d1652823a218e63ed72cc590e707b312f804", "patch": "@@ -56,6 +56,14 @@ typedef char bool;\n #include \"adaint.h\"\n #include \"raise.h\"\n \n+#ifdef __APPLE__\n+/* On MacOS X, versions older than 10.5 don't export _Unwind_GetIPInfo.  */\n+#undef HAVE_GETIPINFO\n+#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1050\n+#define HAVE_GETIPINFO 1\n+#endif\n+#endif\n+\n /* The names of a couple of \"standard\" routines for unwinding/propagation\n    actually vary depending on the underlying GCC scheme for exception handling\n    (SJLJ or DWARF). We need a consistently named interface to import from\n@@ -501,7 +509,14 @@ typedef struct\n static void\n db_region_for (region_descriptor *region, _Unwind_Context *uw_context)\n {\n-  _Unwind_Ptr ip = _Unwind_GetIP (uw_context) - 1;\n+  int ip_before_insn = 0;\n+#ifdef HAVE_GETIPINFO\n+  _Unwind_Ptr ip = _Unwind_GetIPInfo (uw_context, &ip_before_insn);\n+#else\n+  _Unwind_Ptr ip = _Unwind_GetIP (uw_context);\n+#endif\n+  if (!ip_before_insn)\n+    ip--;\n \n   if (! (db_accepted_codes () & DB_REGIONS))\n     return;\n@@ -631,7 +646,14 @@ typedef struct\n static void\n db_action_for (action_descriptor *action, _Unwind_Context *uw_context)\n {\n-  _Unwind_Ptr ip = _Unwind_GetIP (uw_context) - 1;\n+  int ip_before_insn = 0;\n+#ifdef HAVE_GETIPINFO\n+  _Unwind_Ptr ip = _Unwind_GetIPInfo (uw_context, &ip_before_insn);\n+#else\n+  _Unwind_Ptr ip = _Unwind_GetIP (uw_context);\n+#endif\n+  if (!ip_before_insn)\n+    ip--;\n \n   db (DB_ACTIONS, \"For ip @ 0x%08x => \", ip);\n \n@@ -670,14 +692,6 @@ db_action_for (action_descriptor *action, _Unwind_Context *uw_context)\n    There are two variants of this routine, depending on the underlying\n    mechanism (DWARF/SJLJ), which account for differences in the tables.  */\n \n-#ifdef __APPLE__\n-/* On MacOS X, versions older than 10.5 don't export _Unwind_GetIPInfo.  */\n-#undef HAVE_GETIPINFO\n-#if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1050\n-#define HAVE_GETIPINFO 1\n-#endif\n-#endif\n-\n #ifdef __USING_SJLJ_EXCEPTIONS__\n \n #define __builtin_eh_return_data_regno(x) x"}, {"sha": "7c29cdfe1b2882fd2cdc2c0e8d8e7e15c0de488c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df66d1652823a218e63ed72cc590e707b312f804", "patch": "@@ -1,3 +1,8 @@\n+2009-10-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/null_pointer_deref1.adb: Accept Constraint_Error.\n+\t* gnat.dg/null_pointer_deref2.adb: Likewise.\n+\n 2009-10-27  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/torture/ipa-pta-1.c: Adjust testcase."}, {"sha": "6e7bf14e5df5a028c685fea15e39ef6185f52852", "filename": "gcc/testsuite/gnat.dg/null_pointer_deref1.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref1.adb?ref=df66d1652823a218e63ed72cc590e707b312f804", "patch": "@@ -17,5 +17,5 @@ procedure Null_Pointer_Deref1 is\n begin\n    Data.all := 1;\n exception\n-   when Storage_Error => null;\n+   when Constraint_Error | Storage_Error => null;\n end;"}, {"sha": "63e2dd11f39cf24f52862f739ca24a0f675fb5f4", "filename": "gcc/testsuite/gnat.dg/null_pointer_deref2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df66d1652823a218e63ed72cc590e707b312f804/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref2.adb?ref=df66d1652823a218e63ed72cc590e707b312f804", "patch": "@@ -20,7 +20,7 @@ procedure Null_Pointer_Deref2 is\n    begin\n       Data.all := 1;\n    exception\n-      when Storage_Error => null;\n+      when Constraint_Error | Storage_Error => null;\n    end T;\n \n begin"}]}