{"sha": "34c73a75cf0043d3b9bb222c1c506aae18f27195", "node_id": "C_kwDOANBUbNoAKDM0YzczYTc1Y2YwMDQzZDNiOWJiMjIyYzFjNTA2YWFlMThmMjcxOTU", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-28T08:02:16Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-28T08:02:16Z"}, "message": "ast: Add location info to MetaValueStr", "tree": {"sha": "5af2c7e0bf9502328c3e94c0d630501cf0249a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5af2c7e0bf9502328c3e94c0d630501cf0249a18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34c73a75cf0043d3b9bb222c1c506aae18f27195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c73a75cf0043d3b9bb222c1c506aae18f27195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c73a75cf0043d3b9bb222c1c506aae18f27195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c73a75cf0043d3b9bb222c1c506aae18f27195/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4fa67403f3f5f5579e30e03102ca56c4ed6f049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fa67403f3f5f5579e30e03102ca56c4ed6f049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4fa67403f3f5f5579e30e03102ca56c4ed6f049"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "5c8e04fcbbc071068fbe29ac338e3ff75c8fa374", "filename": "gcc/rust/ast/rust-ast-full-test.cc", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c73a75cf0043d3b9bb222c1c506aae18f27195/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c73a75cf0043d3b9bb222c1c506aae18f27195/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-full-test.cc?ref=34c73a75cf0043d3b9bb222c1c506aae18f27195", "patch": "@@ -4118,12 +4118,14 @@ AttributeParser::parse_meta_item_inner ()\n       return parse_path_meta_item ();\n     }\n \n-  Identifier ident = peek_token ()->as_string ();\n+  auto &identifier = peek_token ();\n   if (is_end_meta_item_tok (peek_token (1)->get_id ()))\n     {\n       // meta word syntax\n       skip_token ();\n-      return std::unique_ptr<MetaWord> (new MetaWord (std::move (ident)));\n+      // FIXME: We probably need a Location here as well\n+      return std::unique_ptr<MetaWord> (\n+\tnew MetaWord (identifier->as_string ()));\n     }\n \n   if (peek_token (1)->get_id () == EQUAL)\n@@ -4133,15 +4135,19 @@ AttributeParser::parse_meta_item_inner ()\n \t  && is_end_meta_item_tok (peek_token (3)->get_id ()))\n \t{\n \t  // meta name value str syntax\n-\t  std::string value = peek_token (2)->as_string ();\n+\t  auto &value_tok = peek_token (2);\n+\t  auto value = value_tok->as_string ();\n+\t  auto locus = value_tok->get_locus ();\n \n \t  skip_token (2);\n \n \t  // remove the quotes from the string value\n \t  std::string raw_value = unquote_string (std::move (value));\n \n \t  return std::unique_ptr<MetaNameValueStr> (\n-\t    new MetaNameValueStr (std::move (ident), std::move (raw_value)));\n+\t    new MetaNameValueStr (identifier->as_string (),\n+\t\t\t\t  identifier->get_locus (),\n+\t\t\t\t  std::move (raw_value), locus));\n \t}\n       else\n \t{\n@@ -4183,7 +4189,7 @@ AttributeParser::parse_meta_item_inner ()\n   if (!meta_name_value_str_items.empty ())\n     {\n       return std::unique_ptr<MetaListNameValueStr> (\n-\tnew MetaListNameValueStr (std::move (ident),\n+\tnew MetaListNameValueStr (identifier->as_string (),\n \t\t\t\t  std::move (meta_name_value_str_items)));\n     }\n \n@@ -4222,7 +4228,7 @@ AttributeParser::parse_meta_item_inner ()\n   if (!path_items.empty ())\n     {\n       return std::unique_ptr<MetaListPaths> (\n-\tnew MetaListPaths (std::move (ident), std::move (path_items)));\n+\tnew MetaListPaths (identifier->as_string (), std::move (path_items)));\n     }\n \n   rust_error_at (Linemap::unknown_location (),\n@@ -4694,11 +4700,11 @@ Attribute\n MetaNameValueStr::to_attribute () const\n {\n   LiteralExpr lit_expr (str, Literal::LitType::STRING,\n-\t\t\tPrimitiveCoreType::CORETYPE_UNKNOWN, {}, Location ());\n+\t\t\tPrimitiveCoreType::CORETYPE_UNKNOWN, {}, str_locus);\n   // FIXME: What location do we put here? Is the literal above supposed to have\n   // an empty location as well?\n   // Should MetaNameValueStr keep a location?\n-  return Attribute (SimplePath::from_str (ident, Location ()),\n+  return Attribute (SimplePath::from_str (ident, ident_locus),\n \t\t    std::unique_ptr<AttrInputLiteral> (\n \t\t      new AttrInputLiteral (std::move (lit_expr))));\n }"}, {"sha": "4b0a41217a0e4f525913e8da410d8be5dad441c2", "filename": "gcc/rust/ast/rust-macro.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c73a75cf0043d3b9bb222c1c506aae18f27195/gcc%2Frust%2Fast%2Frust-macro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c73a75cf0043d3b9bb222c1c506aae18f27195/gcc%2Frust%2Fast%2Frust-macro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-macro.h?ref=34c73a75cf0043d3b9bb222c1c506aae18f27195", "patch": "@@ -783,12 +783,17 @@ class MetaWord : public MetaItem\n class MetaNameValueStr : public MetaItem\n {\n   Identifier ident;\n+  Location ident_locus;\n+\n   // NOTE: str stored without quotes\n   std::string str;\n+  Location str_locus;\n \n public:\n-  MetaNameValueStr (Identifier ident, std::string str)\n-    : ident (std::move (ident)), str (std::move (str))\n+  MetaNameValueStr (Identifier ident, Location ident_locus, std::string str,\n+\t\t    Location str_locus)\n+    : ident (std::move (ident)), ident_locus (ident_locus),\n+      str (std::move (str)), str_locus (str_locus)\n   {}\n \n   std::string as_string () const override"}]}