{"sha": "eaca025e57accd92cabab3eaf09d5a27e056d184", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFjYTAyNWU1N2FjY2Q5MmNhYmFiM2VhZjA5ZDVhMjdlMDU2ZDE4NA==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2016-01-21T02:13:24Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2016-01-21T02:13:24Z"}, "message": "fix memory leak in scop-detection\n\n        * graphite-scop-detection.c\n        (scop_detection::harmful_loop_in_region): Free dom and loops.\n        (scop_detection::loop_body_is_valid_scop): Free bbs.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r232655", "tree": {"sha": "0f18bd5e48a0600f436107af1869c0ab2dd0bf38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f18bd5e48a0600f436107af1869c0ab2dd0bf38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaca025e57accd92cabab3eaf09d5a27e056d184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaca025e57accd92cabab3eaf09d5a27e056d184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaca025e57accd92cabab3eaf09d5a27e056d184", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaca025e57accd92cabab3eaf09d5a27e056d184/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5431c9ea56229569343aa9ddc6b176916b41f248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5431c9ea56229569343aa9ddc6b176916b41f248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5431c9ea56229569343aa9ddc6b176916b41f248"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "3d9efe2679f95a51604ec6bd911041ddf0284c14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaca025e57accd92cabab3eaf09d5a27e056d184/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaca025e57accd92cabab3eaf09d5a27e056d184/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eaca025e57accd92cabab3eaf09d5a27e056d184", "patch": "@@ -1,3 +1,10 @@\n+2016-01-21  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+        * graphite-scop-detection.c\n+        (scop_detection::harmful_loop_in_region): Free dom and loops.\n+        (scop_detection::loop_body_is_valid_scop): Free bbs.\n+\n 2016-01-21  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "d1b0fec1d4b596b828da9d91fe06160d1dd12c27", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaca025e57accd92cabab3eaf09d5a27e056d184/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaca025e57accd92cabab3eaf09d5a27e056d184/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=eaca025e57accd92cabab3eaf09d5a27e056d184", "patch": "@@ -1088,7 +1088,11 @@ scop_detection::harmful_loop_in_region (sese_l scop) const\n \t     any loop fully contained in the scop: other bbs are checked below\n \t     in loop_is_valid_in_scop.  */\n \t  if (harmful_stmt_in_bb (scop, bb))\n-\t    return true;\n+\t    {\n+\t      dom.release ();\n+\t      BITMAP_FREE (loops);\n+\t      return true;\n+\t    }\n \t}\n \n     }\n@@ -1104,13 +1108,14 @@ scop_detection::harmful_loop_in_region (sese_l scop) const\n \n       if (!loop_is_valid_in_scop (loop, scop))\n \t{\n+\t  dom.release ();\n \t  BITMAP_FREE (loops);\n \t  return true;\n \t}\n     }\n \n-  BITMAP_FREE (loops);\n   dom.release ();\n+  BITMAP_FREE (loops);\n   return false;\n }\n \n@@ -1503,7 +1508,10 @@ scop_detection::loop_body_is_valid_scop (loop_p loop, sese_l scop) const\n       basic_block bb = bbs[i];\n \n       if (harmful_stmt_in_bb (scop, bb))\n-\treturn false;\n+\t{\n+\t  free (bbs);\n+\t  return false;\n+\t}\n     }\n   free (bbs);\n "}]}