{"sha": "2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhZWVhMTk0YmU1OGYxYWM2MmM1YTNlZjY1MjhlZDJhZThlOTJlYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-03-15T12:08:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-03-15T12:08:31Z"}, "message": "expr.c (cpp_classify_number): Hex floats are new in C++1z.\n\n\t* libcpp/expr.c (cpp_classify_number): Hex floats are new in C++1z.\n\n\t* libcpp/init.c (lang_defaults): Likewise.\n\t* gcc/c-family/c-cppbuiltin.c (c_cpp_builtins): Set __cpp_hex_float.\n\nFrom-SVN: r234213", "tree": {"sha": "5ca057b6eafdc0abc79daff46e0295d6744dbbfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ca057b6eafdc0abc79daff46e0295d6744dbbfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08da25814139d7eb1264acb66b60cbb17a123deb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08da25814139d7eb1264acb66b60cbb17a123deb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08da25814139d7eb1264acb66b60cbb17a123deb"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "d00d9d90947dbf736fbf2d9e16c6299349da3db0", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "patch": "@@ -1,5 +1,7 @@\n 2016-03-14  Jason Merrill  <jason@redhat.com>\n \n+\t* c-cppbuiltin.c (c_cpp_builtins): Set __cpp_hex_float.\n+\n \t* c-cppbuiltin.c (c_cpp_builtins): Bump __cpp_range_based_for.\n \n 2016-03-09  Richard Biener  <rguenther@suse.de>"}, {"sha": "ee953ca44c82abf9f79c3551dd61685957b36ac5", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "patch": "@@ -818,6 +818,10 @@ c_cpp_builtins (cpp_reader *pfile)\n       if (!pedantic || cxx_dialect > cxx11)\n \tcpp_define (pfile, \"__cpp_binary_literals=201304\");\n \n+      /* Similarly for hexadecimal floating point literals and C++17.  */\n+      if (!pedantic || cpp_get_options (parse_in)->extended_numbers)\n+\tcpp_define (pfile, \"__cpp_hex_float=201603\");\n+\n       /* Arrays of runtime bound were removed from C++14, but we still\n \t support GNU VLAs.  Let's define this macro to a low number\n \t (corresponding to the initial test release of GNU C++) if we won't"}, {"sha": "a0e468c5e62735166582e797a88ac6619099acb9", "filename": "gcc/testsuite/g++.dg/cpp/pr23827_cxx98_neg.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpr23827_cxx98_neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpr23827_cxx98_neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fpr23827_cxx98_neg.C?ref=2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "patch": "@@ -1,4 +1,4 @@\n // { dg-do compile { target c++98_only } }\n /* { dg-options \"-ansi -pedantic-errors\" }  */\n \n-double x = 0x3.1415babep0; // { dg-error \"use of C..11 hexadecimal floating constant\" }\n+double x = 0x3.1415babep0; // { dg-error \"use of C..1z hexadecimal floating constant\" }"}, {"sha": "3dc358f4e4bf8ab23cfd4a49bf390a9f7c3f89ff", "filename": "gcc/testsuite/g++.dg/cpp1z/feat-cxx1z.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Ffeat-cxx1z.C?ref=2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "patch": "@@ -337,3 +337,9 @@\n #elif __cpp_nontype_template_args != 201411\n #  error \"__cpp_nontype_template_args != 201411\"\n #endif\n+\n+#ifndef __cpp_hex_float\n+#  error \"__cpp_hex_float\"\n+#elif __cpp_hex_float != 201603\n+#  error \"__cpp_hex_float != 201603\"\n+#endif"}, {"sha": "a2cb02f68a5623bba48d2f8990ae7af2911e8900", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "patch": "@@ -1,3 +1,8 @@\n+2016-03-14  Jason Merrill  <jason@redhat.com>\n+\n+\t* expr.c (cpp_classify_number): Hex floats are new in C++1z.\n+\t* init.c (lang_defaults): Likewise.\n+\n 2016-03-09  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/68473"}, {"sha": "5cdca6f1bec6453cfd494fc4d8b39ed207246714", "filename": "libcpp/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "patch": "@@ -552,7 +552,7 @@ cpp_classify_number (cpp_reader *pfile, const cpp_token *token,\n \t{\n \t  if (CPP_OPTION (pfile, cplusplus))\n \t    cpp_error_with_line (pfile, CPP_DL_PEDWARN, virtual_location, 0,\n-\t\t\t\t \"use of C++11 hexadecimal floating constant\");\n+\t\t\t\t \"use of C++1z hexadecimal floating constant\");\n \t  else\n \t    cpp_error_with_line (pfile, CPP_DL_PEDWARN, virtual_location, 0,\n \t\t\t\t \"use of C99 hexadecimal floating constant\");"}, {"sha": "4343075ba85246a6c87c487107ecec91156c16ac", "filename": "libcpp/init.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=2aaeea194be58f1ac62c5a3ef6528ed2ae8e92ec", "patch": "@@ -105,9 +105,9 @@ static const struct lang_flags lang_defaults[] =\n   /* GNUCXX   */  { 0,  1,  1,  1,  0,  0,  1,   0,   0,   0,    0,     0,     0,   0 },\n   /* CXX98    */  { 0,  1,  0,  1,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0 },\n   /* GNUCXX11 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    0,     0,     0,   0 },\n-  /* CXX11    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    0,     0,     1,   0 },\n+  /* CXX11    */  { 1,  1,  0,  1,  1,  1,  1,   1,   1,   1,    0,     0,     1,   0 },\n   /* GNUCXX14 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   0 },\n-  /* CXX14    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     1,   0 },\n+  /* CXX14    */  { 1,  1,  0,  1,  1,  1,  1,   1,   1,   1,    1,     1,     1,   0 },\n   /* GNUCXX1Z */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1 },\n   /* CXX1Z    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1 },\n   /* ASM      */  { 0,  0,  1,  0,  0,  0,  0,   0,   0,   0,    0,     0,     0,   0 }"}]}