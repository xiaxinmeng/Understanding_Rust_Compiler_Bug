{"sha": "1b73c7ef7c9c3c04610bc2d2819affea917d91d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI3M2M3ZWY3YzljM2MwNDYxMGJjMmQyODE5YWZmZWE5MTdkOTFkMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-04-18T07:40:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-04-18T07:40:35Z"}, "message": "tree.c (get_qualified_type): Put found type variants at the head of the variant list.\n\n2019-04-18  Richard Biener  <rguenther@suse.de>\n\n\t* tree.c (get_qualified_type): Put found type variants at the\n\thead of the variant list.\n\nFrom-SVN: r270437", "tree": {"sha": "29a99fe4c910cd73b11e1d33bd71a1ba7ae40e99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29a99fe4c910cd73b11e1d33bd71a1ba7ae40e99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b73c7ef7c9c3c04610bc2d2819affea917d91d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b73c7ef7c9c3c04610bc2d2819affea917d91d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b73c7ef7c9c3c04610bc2d2819affea917d91d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b73c7ef7c9c3c04610bc2d2819affea917d91d2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d52462c8cdfad4e0839041af3a586ddb13965d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d52462c8cdfad4e0839041af3a586ddb13965d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d52462c8cdfad4e0839041af3a586ddb13965d5"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "c8100e2d1877e6e5006323c7bbbefb88389986eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b73c7ef7c9c3c04610bc2d2819affea917d91d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b73c7ef7c9c3c04610bc2d2819affea917d91d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b73c7ef7c9c3c04610bc2d2819affea917d91d2", "patch": "@@ -1,3 +1,8 @@\n+2019-04-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree.c (get_qualified_type): Put found type variants at the\n+\thead of the variant list.\n+\n 2018-04-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (rs6000_register_move_cost): Fix typo."}, {"sha": "73102c4e75bd3bf21815023d93bbef698a724d0d", "filename": "gcc/tree.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b73c7ef7c9c3c04610bc2d2819affea917d91d2/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b73c7ef7c9c3c04610bc2d2819affea917d91d2/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1b73c7ef7c9c3c04610bc2d2819affea917d91d2", "patch": "@@ -6451,17 +6451,28 @@ check_aligned_type (const_tree cand, const_tree base, unsigned int align)\n tree\n get_qualified_type (tree type, int type_quals)\n {\n-  tree t;\n-\n   if (TYPE_QUALS (type) == type_quals)\n     return type;\n \n+  tree mv = TYPE_MAIN_VARIANT (type);\n+  if (check_qualified_type (mv, type, type_quals))\n+    return mv;\n+\n   /* Search the chain of variants to see if there is already one there just\n      like the one we need to have.  If so, use that existing one.  We must\n      preserve the TYPE_NAME, since there is code that depends on this.  */\n-  for (t = TYPE_MAIN_VARIANT (type); t; t = TYPE_NEXT_VARIANT (t))\n-    if (check_qualified_type (t, type, type_quals))\n-      return t;\n+  for (tree *tp = &TYPE_NEXT_VARIANT (mv); *tp; tp = &TYPE_NEXT_VARIANT (*tp))\n+    if (check_qualified_type (*tp, type, type_quals))\n+      {\n+\t/* Put the found variant at the head of the variant list so\n+\t   frequently searched variants get found faster.  The C++ FE\n+\t   benefits greatly from this.  */\n+\ttree t = *tp;\n+\t*tp = TYPE_NEXT_VARIANT (t);\n+\tTYPE_NEXT_VARIANT (t) = TYPE_NEXT_VARIANT (mv);\n+\tTYPE_NEXT_VARIANT (mv) = t;\n+\treturn t;\n+      }\n \n   return NULL_TREE;\n }"}]}