{"sha": "fb2aebdb8153a57662475fd9bb5d93827ed15a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIyYWViZGI4MTUzYTU3NjYyNDc1ZmQ5YmI1ZDkzODI3ZWQxNWE2Zg==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1998-06-03T07:29:13Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1998-06-03T07:29:13Z"}, "message": "This is a more workable makefile\n\nFrom-SVN: r20208", "tree": {"sha": "0d29a52ed0480f0ee8134bf367b7b87deffe141d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d29a52ed0480f0ee8134bf367b7b87deffe141d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb2aebdb8153a57662475fd9bb5d93827ed15a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2aebdb8153a57662475fd9bb5d93827ed15a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb2aebdb8153a57662475fd9bb5d93827ed15a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2aebdb8153a57662475fd9bb5d93827ed15a6f/comments", "author": null, "committer": null, "parents": [{"sha": "bc516719eccb6e941f036a763ba5a7bdbd1b0d80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc516719eccb6e941f036a763ba5a7bdbd1b0d80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc516719eccb6e941f036a763ba5a7bdbd1b0d80"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "5b622a6b73ad6a5952ef74cb8a7af5b7774d3c18", "filename": "contrib/fixinc/Makefile", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2aebdb8153a57662475fd9bb5d93827ed15a6f/contrib%2Ffixinc%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2aebdb8153a57662475fd9bb5d93827ed15a6f/contrib%2Ffixinc%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffixinc%2FMakefile?ref=fb2aebdb8153a57662475fd9bb5d93827ed15a6f", "patch": "@@ -16,21 +16,28 @@ AG_TEXT    = $(SH_TARGET) fixincl.x \\\n \tinclhack.def inclhack.tpl hackshell.tpl fixincl.tpl\n TARGETS    = $(SH_TARGET) $(BIN_TARGET)\n \n-default : fixincl.sh\n+default : gen\n \n all : $(TARGETS)\n sh  : $(SH_TARGET)\n+gen : $(SH_TARGET) fixincl.x\n \n $(OBJ): $(HDR)\n-fixincl.o: fixincl.x\n \n fixincl: $(OBJ)\n+\t@echo $(CC) -o $@ $(OBJ) $(LIB) ; \\\n \tif $(CC) -o $@ $(OBJ) $(LIB) ; then : ; else \\\n \trm -f $@ ; (echo \"#! /bin/sh\" ; echo exit 1 ) > $@ ; \\\n \tchmod 777 $@ ; fi\n \n regex.o: regex.c\n-\t$(CC) -g -DSTDC_HEADERS=1 -c regex.c\n+\t-$(CC) -g -DSTDC_HEADERS=1 -c regex.c\n+\n+fixincl.o : fixincl.x fixincl.c\n+\t-$(CC) $(CFLAGS) -o $@ -c fixincl.c\n+\n+server.o : server.c server.h\n+\t-$(CC) $(CFLAGS) -o $@ -c server.c\n \n fixincl.x: fixincl.tpl inclhack.def\n \t@if ( autogen --help > /dev/null 2>&1 ) ; then \\\n@@ -44,25 +51,31 @@ inclhack.sh: inclhack.def inclhack.tpl hackshell.tpl\n \t\tautogen inclhack.def ; \\\n \telse echo You need to install autogen ; touch $@ ; fi\n \n-fixincl.sh: inclhack.def inclhack.tpl fixincl inclhack.sh\n-\t@if ( ./fixincl -v > /dev/null 2>&1 ) ; then \\\n-\t\tif ( autogen --help > /dev/null 2>&1 ) ; then \\\n+fixincl.sh: inclhack.def inclhack.tpl\n+\t@if ( autogen --help > /dev/null 2>&1 ) ; then \\\n \t\techo autogen -DPROGRAM=1 -b fixincl inclhack.def ; \\\n \t\tautogen -DPROGRAM=1 -b fixincl inclhack.def ; touch $@ ; \\\n-\t\telse echo You need to install autogen ; touch $@ ; fi ; \\\n-\telse cp inclhack.sh $@ ; echo cp inclhack.sh $@ ; fi\n+\telse echo You need to install autogen ; touch $@ ; fi ; \\\n \n clean:\n-\trm -f *.o fixincl\n+\trm -f *.o $(TARGETS) fixincl.x\n \n-install: fixincl.sh\n+#  Ensure all the targets are built.  If the program \"fixincl\"\n+#  failed to compile, link or load, then we install the\n+#  \"inclhack.sh\" script.  Otherwise, we install that program\n+#  plus the wrapper script, \"fixincl.sh\".\n+#\n+install: $(TARGETS)\n \t@rm -f $(DESTDIR)/fixinc.sh ; \\\n+\tif ( ./fixincl -v > /dev/null 2>&1 ) ; then \\\n \t\techo cp fixincl.sh $(DESTDIR)/fixinc.sh ; \\\n \t\tcp fixincl.sh $(DESTDIR)/fixinc.sh ; \\\n-\t\tchmod 555 $(DESTDIR)/fixinc.sh\n-\t@echo check for fixincl copy...\n-\t@if ( ./fixincl -v > /dev/null 2>&1 ) ; then \\\n-\t    rm -f $(DESTDIR)/fixincl ; \\\n+\t\tchmod 555 $(DESTDIR)/fixinc.sh ; \\\n+    \trm -f $(DESTDIR)/fixincl ; \\\n \t\techo cp fixincl $(DESTDIR) ; \\\n \t\tcp fixincl $(DESTDIR) ; \\\n-\t\tchmod 555 $(DESTDIR)/fixincl ; fi\n+\t\tchmod 555 $(DESTDIR)/fixincl ; \\\n+\telse \\\n+\t\techo cp inclhack.sh $(DESTDIR)/fixinc.sh ; \\\n+\t\tcp inclhack.sh $(DESTDIR)/fixinc.sh ; \\\n+\tfi"}]}