{"sha": "76af4137543b2654c2aeb91c4987590fff8546db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZhZjQxMzc1NDNiMjY1NGMyYWViOTFjNDk4NzU5MGZmZjg1NDZkYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:24:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:24:15Z"}, "message": "[multiple changes]\n\n2011-08-29  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch13.adb (Alignment_Check_For_Esize_Change): Rename to...\n\t(Alignment_Check_For_Size_Change): ...this.  Add SIZE parameter and\n\tuse it instead of the Esize of the first parameter.\n\t(Analyze_Attribute_Definition_Clause) <Object_Size>: Adjust call to\n\tabove change.\n\t<Size>: Likewise.  Call it for composite types on the RM size.\n\n2011-08-29  Yannick Moy  <moy@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Op_Not): Do not expand not on array.\n\t* sem_util.adb (Unique_Name): Correct behaviour for names of\n\tcompilation units.\n\nFrom-SVN: r178157", "tree": {"sha": "0f373ada6336a7b9ade4fefbcc59a03df31327c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f373ada6336a7b9ade4fefbcc59a03df31327c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76af4137543b2654c2aeb91c4987590fff8546db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76af4137543b2654c2aeb91c4987590fff8546db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76af4137543b2654c2aeb91c4987590fff8546db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76af4137543b2654c2aeb91c4987590fff8546db/comments", "author": null, "committer": null, "parents": [{"sha": "9b20e59bb3e8d20d0f385a89c7fc815bff798c8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b20e59bb3e8d20d0f385a89c7fc815bff798c8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b20e59bb3e8d20d0f385a89c7fc815bff798c8a"}], "stats": {"total": 55, "additions": 39, "deletions": 16}, "files": [{"sha": "a2c03681b6c651c0b5b1fad6f40f79503794adbf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76af4137543b2654c2aeb91c4987590fff8546db/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76af4137543b2654c2aeb91c4987590fff8546db/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=76af4137543b2654c2aeb91c4987590fff8546db", "patch": "@@ -1,3 +1,18 @@\n+2011-08-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch13.adb (Alignment_Check_For_Esize_Change): Rename to...\n+\t(Alignment_Check_For_Size_Change): ...this.  Add SIZE parameter and\n+\tuse it instead of the Esize of the first parameter.\n+\t(Analyze_Attribute_Definition_Clause) <Object_Size>: Adjust call to\n+\tabove change.\n+\t<Size>: Likewise.  Call it for composite types on the RM size.\n+\n+2011-08-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Op_Not): Do not expand not on array.\n+\t* sem_util.adb (Unique_Name): Correct behaviour for names of\n+\tcompilation units.\n+\n 2011-08-29  Yannick Moy  <moy@adacore.com>\n \n \t* sem_prag.adb (Check_Precondition_Postcondition): In formal"}, {"sha": "b2984b791d1e14128e4352d5e189ec9f03936d58", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76af4137543b2654c2aeb91c4987590fff8546db/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76af4137543b2654c2aeb91c4987590fff8546db/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=76af4137543b2654c2aeb91c4987590fff8546db", "patch": "@@ -7158,9 +7158,10 @@ package body Exp_Ch4 is\n          end;\n       end if;\n \n-      --  Only array types need any other processing\n+      --  Only array types need any other processing. In formal verification\n+      --  mode, no other processing is done.\n \n-      if not Is_Array_Type (Typ) then\n+      if not Is_Array_Type (Typ) or else ALFA_Mode then\n          return;\n       end if;\n "}, {"sha": "8d6bde537e72eb17dfaeebe983a1af6772b1aa60", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76af4137543b2654c2aeb91c4987590fff8546db/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76af4137543b2654c2aeb91c4987590fff8546db/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=76af4137543b2654c2aeb91c4987590fff8546db", "patch": "@@ -73,11 +73,11 @@ package body Sem_Ch13 is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure Alignment_Check_For_Esize_Change (Typ : Entity_Id);\n-   --  This routine is called after setting the Esize of type entity Typ.\n-   --  The purpose is to deal with the situation where an alignment has been\n-   --  inherited from a derived type that is no longer appropriate for the\n-   --  new Esize value. In this case, we reset the Alignment to unknown.\n+   procedure Alignment_Check_For_Size_Change (Typ : Entity_Id; Size : Uint);\n+   --  This routine is called after setting one of the sizes of type entity\n+   --  Typ to Size. The purpose is to deal with the situation of a derived\n+   --  type whose inherited alignment is no longer appropriate for the new\n+   --  size value. In this case, we reset the Alignment to unknown.\n \n    procedure Build_Predicate_Function (Typ : Entity_Id; N : Node_Id);\n    --  If Typ has predicates (indicated by Has_Predicates being set for Typ,\n@@ -661,11 +661,11 @@ package body Sem_Ch13 is\n       end if;\n    end Adjust_Record_For_Reverse_Bit_Order;\n \n-   --------------------------------------\n-   -- Alignment_Check_For_Esize_Change --\n-   --------------------------------------\n+   -------------------------------------\n+   -- Alignment_Check_For_Size_Change --\n+   -------------------------------------\n \n-   procedure Alignment_Check_For_Esize_Change (Typ : Entity_Id) is\n+   procedure Alignment_Check_For_Size_Change (Typ : Entity_Id; Size : Uint) is\n    begin\n       --  If the alignment is known, and not set by a rep clause, and is\n       --  inconsistent with the size being set, then reset it to unknown,\n@@ -674,11 +674,11 @@ package body Sem_Ch13 is\n \n       if Known_Alignment (Typ)\n         and then not Has_Alignment_Clause (Typ)\n-        and then Esize (Typ) mod (Alignment (Typ) * SSU) /= 0\n+        and then Size mod (Alignment (Typ) * SSU) /= 0\n       then\n          Init_Alignment (Typ);\n       end if;\n-   end Alignment_Check_For_Esize_Change;\n+   end Alignment_Check_For_Size_Change;\n \n    -----------------------------------\n    -- Analyze_Aspect_Specifications --\n@@ -2510,7 +2510,7 @@ package body Sem_Ch13 is\n \n                Set_Esize (U_Ent, Size);\n                Set_Has_Object_Size_Clause (U_Ent);\n-               Alignment_Check_For_Esize_Change (U_Ent);\n+               Alignment_Check_For_Size_Change (U_Ent, Size);\n             end if;\n          end Object_Size;\n \n@@ -2603,6 +2603,9 @@ package body Sem_Ch13 is\n                   --  (object size) unset, the back end will set it from the\n                   --  size and alignment in an appropriate manner.\n \n+                  --  In both cases, we check whether the alignment must be\n+                  --  reset in the wake of the size change.\n+\n                   if Is_Elementary_Type (U_Ent) then\n                      if Size <= System_Storage_Unit then\n                         Init_Esize (U_Ent, System_Storage_Unit);\n@@ -2614,7 +2617,9 @@ package body Sem_Ch13 is\n                         Set_Esize  (U_Ent, (Size + 63) / 64 * 64);\n                      end if;\n \n-                     Alignment_Check_For_Esize_Change (U_Ent);\n+                     Alignment_Check_For_Size_Change (U_Ent, Esize (U_Ent));\n+                  else\n+                     Alignment_Check_For_Size_Change (U_Ent, Size);\n                   end if;\n \n                --  For objects, set Esize only"}, {"sha": "5a07a4f77b6066c90643dbccf6ef4058729498ca", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76af4137543b2654c2aeb91c4987590fff8546db/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76af4137543b2654c2aeb91c4987590fff8546db/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=76af4137543b2654c2aeb91c4987590fff8546db", "patch": "@@ -12384,7 +12384,9 @@ package body Sem_Util is\n       if E = Standard_Standard then\n          return Get_Name_String (Name_Standard);\n \n-      elsif Scope (E) = Standard_Standard then\n+      elsif Scope (E) = Standard_Standard\n+        and then not (Ekind (E) = E_Package or else Is_Subprogram (E))\n+      then\n          return Get_Name_String (Name_Standard) & \"__\" &\n            Get_Name_String (Chars (E));\n "}]}