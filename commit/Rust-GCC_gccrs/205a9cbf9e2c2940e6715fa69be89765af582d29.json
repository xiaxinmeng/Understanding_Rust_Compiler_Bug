{"sha": "205a9cbf9e2c2940e6715fa69be89765af582d29", "node_id": "C_kwDOANBUbNoAKDIwNWE5Y2JmOWUyYzI5NDBlNjcxNWZhNjliZTg5NzY1YWY1ODJkMjk", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-17T14:03:28Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-18T08:08:07Z"}, "message": "fn-arg: Add location on parameter name", "tree": {"sha": "1351e475f58a84af20be46420870bebab2cf2ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1351e475f58a84af20be46420870bebab2cf2ca9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/205a9cbf9e2c2940e6715fa69be89765af582d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/205a9cbf9e2c2940e6715fa69be89765af582d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/205a9cbf9e2c2940e6715fa69be89765af582d29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/205a9cbf9e2c2940e6715fa69be89765af582d29/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb06d66cef70584e7aa2fa3a6ad22ef7def6b84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb06d66cef70584e7aa2fa3a6ad22ef7def6b84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fb06d66cef70584e7aa2fa3a6ad22ef7def6b84"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "94e5cbdb2dc9f26af8f10329f59b0082bcb05884", "filename": "gcc/rust/ast/rust-item.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/205a9cbf9e2c2940e6715fa69be89765af582d29/gcc%2Frust%2Fast%2Frust-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/205a9cbf9e2c2940e6715fa69be89765af582d29/gcc%2Frust%2Fast%2Frust-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-item.h?ref=205a9cbf9e2c2940e6715fa69be89765af582d29", "patch": "@@ -3941,12 +3941,11 @@ struct NamedFunctionParam\n \n   std::unique_ptr<Type> param_type;\n \n-  // TODO: should this store location data?\n-\n   // seemingly new since writing this node\n   std::vector<Attribute> outer_attrs;\n \n   NodeId node_id;\n+  Location locus;\n \n public:\n   /* Returns whether the named function parameter has a name (i.e. name is not\n@@ -3967,14 +3966,14 @@ struct NamedFunctionParam\n   // Creates an error state named function parameter.\n   static NamedFunctionParam create_error ()\n   {\n-    return NamedFunctionParam (\"\", nullptr, {});\n+    return NamedFunctionParam (\"\", nullptr, {}, Location ());\n   }\n \n   NamedFunctionParam (std::string name, std::unique_ptr<Type> param_type,\n-\t\t      std::vector<Attribute> outer_attrs)\n+\t\t      std::vector<Attribute> outer_attrs, Location locus)\n     : name (std::move (name)), param_type (std::move (param_type)),\n       outer_attrs (std::move (outer_attrs)),\n-      node_id (Analysis::Mappings::get ()->get_next_node_id ())\n+      node_id (Analysis::Mappings::get ()->get_next_node_id ()), locus (locus)\n   {}\n \n   // Copy constructor"}, {"sha": "3d1f58bf153675116208e17562fa8180d0867a1b", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/205a9cbf9e2c2940e6715fa69be89765af582d29/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/205a9cbf9e2c2940e6715fa69be89765af582d29/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=205a9cbf9e2c2940e6715fa69be89765af582d29", "patch": "@@ -5993,6 +5993,7 @@ Parser<ManagedTokenSource>::parse_named_function_param (\n   std::string name;\n \n   const_TokenPtr t = lexer.peek_token ();\n+  Location name_location = t->get_locus ();\n   switch (t->get_id ())\n     {\n     case IDENTIFIER:\n@@ -6028,7 +6029,7 @@ Parser<ManagedTokenSource>::parse_named_function_param (\n     }\n \n   return AST::NamedFunctionParam (std::move (name), std::move (param_type),\n-\t\t\t\t  std::move (outer_attrs));\n+\t\t\t\t  std::move (outer_attrs), name_location);\n }\n \n // Parses a statement (will further disambiguate any statement)."}]}