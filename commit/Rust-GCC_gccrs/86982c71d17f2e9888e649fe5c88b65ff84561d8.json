{"sha": "86982c71d17f2e9888e649fe5c88b65ff84561d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY5ODJjNzFkMTdmMmU5ODg4ZTY0OWZlNWM4OGI2NWZmODQ1NjFkOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-05-27T16:09:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-05-27T16:09:28Z"}, "message": "c-simplify.c (simplify_switch_stmt): A SWITCH_EXPR also gets the source location of its first line.\n\n        * c-simplify.c (simplify_switch_stmt): A SWITCH_EXPR also gets the\n        source location of its first line.\n\nFrom-SVN: r67188", "tree": {"sha": "481e79e8ca7de765632a94cd0f1d574e25478dcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/481e79e8ca7de765632a94cd0f1d574e25478dcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86982c71d17f2e9888e649fe5c88b65ff84561d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86982c71d17f2e9888e649fe5c88b65ff84561d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86982c71d17f2e9888e649fe5c88b65ff84561d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86982c71d17f2e9888e649fe5c88b65ff84561d8/comments", "author": null, "committer": null, "parents": [{"sha": "0f35d192649abdabcec0a8a1cabed1409ff5055e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f35d192649abdabcec0a8a1cabed1409ff5055e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f35d192649abdabcec0a8a1cabed1409ff5055e"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "5c68b026dcf74bab0252bd28b91a84ca9fb420f1", "filename": "gcc/testsuite/g++.dg/warn/Wswitch-1.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86982c71d17f2e9888e649fe5c88b65ff84561d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86982c71d17f2e9888e649fe5c88b65ff84561d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-1.C?ref=86982c71d17f2e9888e649fe5c88b65ff84561d8", "patch": "@@ -20,16 +20,16 @@ foo (int i, int j, enum e ei, enum e ej, enum e ek, enum e el,\n     default: break;\n     }\n   switch (ei)\n-    { /* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" { target *-*-* } 24 } */\n-    } /* { dg-warning \"enumeration value `e2' not handled in switch\" \"enum e2\" } */\n+    { /* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" } */\n+    } /* { dg-warning \"enumeration value `e2' not handled in switch\" \"enum e2\" { target *-*-* } 23 } */\n   switch (ej)\n     {\n     default: break;\n     }\n-  switch (ek)\n+  switch (ek) /* { dg-warning \"enumeration value `e2' not handled in switch\" \"enum e2\" } */\n     {\n     case e1: return 1;\n-    } /* { dg-warning \"enumeration value `e2' not handled in switch\" \"enum e2\" } */\n+    }\n   switch (el)\n     {\n     case e1: return 1;\n@@ -46,12 +46,12 @@ foo (int i, int j, enum e ei, enum e ej, enum e ek, enum e el,\n     case e2: return 2;\n     default: break;\n     }\n-  switch (eo)\n+  switch (eo) /* { dg-warning \"case value `3' not in enumerated type `e'\" \"excess 3\" } */\n     {\n     case e1: return 1;\n     case e2: return 2;\n     case 3: return 3;\n-    } /* { dg-warning \"case value `3' not in enumerated type `e'\" \"excess 3\" } */\n+    }\n   switch (ep)\n     {\n     case e1: return 1;"}, {"sha": "9bc7d022b46476ab607caf4024ee3429401f8df0", "filename": "gcc/testsuite/g++.dg/warn/Wswitch-2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86982c71d17f2e9888e649fe5c88b65ff84561d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86982c71d17f2e9888e649fe5c88b65ff84561d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-2.C?ref=86982c71d17f2e9888e649fe5c88b65ff84561d8", "patch": "@@ -13,19 +13,19 @@ foo (enum e ei, int j)\n     case e3: return 2;\n     case e4: return 3;\n     }\t/* No warning here since e2 has the same value as e3.  */\n-  switch (ei)\n+  switch (ei) /* { dg-warning \"enumeration value `e4' not handled in switch\" \"enum e4\" } */\n     {\n     case e1: return 1;\n     case e2: return 2;\n-    }\t/* { dg-warning \"enumeration value `e4' not handled in switch\" \"enum e4\" } */\n+    }\n   switch ((int) ei)\n     {\n     case e1: return 1;\n     }\t/* No warning here since switch condition was cast to int.  */\n-  switch ((enum e) j)\n+  switch ((enum e) j) /* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" } */\n     {\n     case e2: return 1;\n     case e4: return 2;\n-    }\t/* { dg-warning \"enumeration value `e1' not handled in switch\" \"enum e1\" } */\n+    }\n   return 0;\n }"}]}