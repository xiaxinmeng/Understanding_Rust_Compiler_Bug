{"sha": "b27dc43154de9c221e0b66b0591b310fe9761be1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI3ZGM0MzE1NGRlOWMyMjFlMGI2NmIwNTkxYjMxMGZlOTc2MWJlMQ==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2009-12-01T10:29:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-12-01T10:29:57Z"}, "message": "s-osprim-mingw.adb (Get_Base_Time): Make sure that the base time is taken at a clock tick boundary.\n\n2009-12-01  Pascal Obry  <obry@adacore.com>\n\n\t* s-osprim-mingw.adb (Get_Base_Time): Make sure that the base time is\n\ttaken at a clock tick boundary.\n\nFrom-SVN: r154871", "tree": {"sha": "f543eb8e41e7e5179002117c0a20a866aae6f039", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f543eb8e41e7e5179002117c0a20a866aae6f039"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b27dc43154de9c221e0b66b0591b310fe9761be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27dc43154de9c221e0b66b0591b310fe9761be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b27dc43154de9c221e0b66b0591b310fe9761be1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27dc43154de9c221e0b66b0591b310fe9761be1/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f08579c5e251083876d7a64fa843ec4b6a36d2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f08579c5e251083876d7a64fa843ec4b6a36d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f08579c5e251083876d7a64fa843ec4b6a36d2a"}], "stats": {"total": 48, "additions": 36, "deletions": 12}, "files": [{"sha": "4c928457077956ff15ee1ec3550bec24b06541dd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b27dc43154de9c221e0b66b0591b310fe9761be1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b27dc43154de9c221e0b66b0591b310fe9761be1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b27dc43154de9c221e0b66b0591b310fe9761be1", "patch": "@@ -1,3 +1,8 @@\n+2009-12-01  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-osprim-mingw.adb (Get_Base_Time): Make sure that the base time is\n+\ttaken at a clock tick boundary.\n+\n 2009-12-01  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-sechas.ads (GNAT.Secure_Hashes.H.\"=\" on Context): Make abstract."}, {"sha": "c818811ed1a75ae7e36561eaebf7fa59b751f54c", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b27dc43154de9c221e0b66b0591b310fe9761be1/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b27dc43154de9c221e0b66b0591b310fe9761be1/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=b27dc43154de9c221e0b66b0591b310fe9761be1", "patch": "@@ -156,15 +156,17 @@ package body System.OS_Primitives is\n       --  Therefore, the elapsed time reported by GetSystemTime between both\n       --  actions should be null.\n \n-      Max_Elapsed    : constant := 0;\n       epoch_1970     : constant := 16#19D_B1DE_D53E_8000#; -- win32 UTC epoch\n       system_time_ns : constant := 100;                    -- 100 ns per tick\n       Sec_Unit       : constant := 10#1#E9;\n-      Test_Now       : aliased Long_Long_Integer;\n-      Loc_Ticks      : aliased LARGE_INTEGER;\n-      Loc_Time       : aliased Long_Long_Integer;\n-      Elapsed        : Long_Long_Integer;\n-      Current_Max    : Long_Long_Integer := Long_Long_Integer'Last;\n+      Max_Elapsed    : constant LARGE_INTEGER :=\n+                         LARGE_INTEGER (Tick_Frequency / 100_000);\n+      --  Look for a precision of 0.01 ms\n+\n+      Loc_Ticks, Ctrl_Ticks : aliased LARGE_INTEGER;\n+      Loc_Time, Ctrl_Time   : aliased Long_Long_Integer;\n+      Elapsed               : LARGE_INTEGER;\n+      Current_Max           : LARGE_INTEGER := LARGE_INTEGER'Last;\n \n    begin\n       --  Here we must be sure that both of these calls are done in a short\n@@ -182,26 +184,43 @@ package body System.OS_Primitives is\n       --  during the runs.\n \n       for K in 1 .. 10 loop\n-         GetSystemTimeAsFileTime (Loc_Time'Access);\n-\n          if QueryPerformanceCounter (Loc_Ticks'Access) = Win32.FALSE then\n             pragma Assert\n               (Standard.False,\n                \"Could not query high performance counter in Clock\");\n             null;\n          end if;\n \n-         GetSystemTimeAsFileTime (Test_Now'Access);\n+         GetSystemTimeAsFileTime (Ctrl_Time'Access);\n+\n+         --  Scan for clock tick, will take upto 16ms/1ms depending on PC.\n+         --  This cannot be an infinite loop or the system hardware is badly\n+         --  dammaged.\n+\n+         loop\n+            GetSystemTimeAsFileTime (Loc_Time'Access);\n+            if QueryPerformanceCounter (Ctrl_Ticks'Access) = Win32.FALSE then\n+               pragma Assert\n+                 (Standard.False,\n+                  \"Could not query high performance counter in Clock\");\n+               null;\n+            end if;\n+            exit when Loc_Time /= Ctrl_Time;\n+            Loc_Ticks := Ctrl_Ticks;\n+         end loop;\n \n-         Elapsed := Test_Now - Loc_Time;\n+         --  Check elapsed Performance Counter between samples\n+         --  to choose the best one.\n+\n+         Elapsed := Ctrl_Ticks - Loc_Ticks;\n \n          if Elapsed < Current_Max then\n             Base_Time   := Loc_Time;\n             Base_Ticks  := Loc_Ticks;\n             Current_Max := Elapsed;\n+            --  Exit the loop when we have reached the expected precision\n+            exit when Elapsed <= Max_Elapsed;\n          end if;\n-\n-         exit when Elapsed = Max_Elapsed;\n       end loop;\n \n       Base_Clock := Duration"}]}