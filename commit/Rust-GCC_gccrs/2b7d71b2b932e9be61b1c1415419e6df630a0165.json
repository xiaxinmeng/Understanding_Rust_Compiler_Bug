{"sha": "2b7d71b2b932e9be61b1c1415419e6df630a0165", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI3ZDcxYjJiOTMyZTliZTYxYjFjMTQxNTQxOWU2ZGY2MzBhMDE2NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-11-15T10:28:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-11-15T10:28:52Z"}, "message": "jump.c (squeeze_notes): Return true if no real insns were found.\n\n\t* jump.c (squeeze_notes): Return true if no real insns were found.\n\t* rtl.h (squeeze_notes): Adjust prototype.\n\t* cfgcleanup.c (merge_blocks_move_predecessor_nojumps): If\n\tsqueeze_notes finds no real instructions, abort.\n\t(merge_blocks_move_successor_nojumps): Likewise.\n\t* loop.c (find_and_verify_loops): Likewise.\n\t* stmt.c (expand_end_case): Likewise.\n\t* ifcvt.c (dead_or_predicable): Return TRUE if squeeze_notes doesn't\n\tfind any real instructions.\n\n\t* gcc.c-torture/compile/20011114-4.c: New test.\n\nFrom-SVN: r47048", "tree": {"sha": "5dd2e96887032c78418387f269bc5c8e87b31f65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dd2e96887032c78418387f269bc5c8e87b31f65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b7d71b2b932e9be61b1c1415419e6df630a0165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b7d71b2b932e9be61b1c1415419e6df630a0165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b7d71b2b932e9be61b1c1415419e6df630a0165", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b7d71b2b932e9be61b1c1415419e6df630a0165/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36a68fe705785961c143e33c0d52aa4d4ef85097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a68fe705785961c143e33c0d52aa4d4ef85097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36a68fe705785961c143e33c0d52aa4d4ef85097"}], "stats": {"total": 82, "additions": 71, "deletions": 11}, "files": [{"sha": "7fb7529d9672dd36644b48e45b6ef059cf1e45ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -1,3 +1,15 @@\n+2001-11-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* jump.c (squeeze_notes): Return true if no real insns were found.\n+\t* rtl.h (squeeze_notes): Adjust prototype.\n+\t* cfgcleanup.c (merge_blocks_move_predecessor_nojumps): If\n+\tsqueeze_notes finds no real instructions, abort.\n+\t(merge_blocks_move_successor_nojumps): Likewise.\n+\t* loop.c (find_and_verify_loops): Likewise.\n+\t* stmt.c (expand_end_case): Likewise.\n+\t* ifcvt.c (dead_or_predicable): Return TRUE if squeeze_notes doesn't\n+\tfind any real instructions.\n+\n 2001-11-15  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* c-common.c: Include c-lex.h."}, {"sha": "03f767a4df396b1df8c20eb1bd0e0014d830b470", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -329,7 +329,8 @@ merge_blocks_move_predecessor_nojumps (a, b)\n      and adjust the block trees appropriately.   Even better would be to have\n      a tighter connection between block trees and rtl so that this is not\n      necessary.  */\n-  squeeze_notes (&a->head, &a->end);\n+  if (squeeze_notes (&a->head, &a->end))\n+    abort ();\n \n   /* Scramble the insn chain.  */\n   if (a->end != PREV_INSN (b->head))\n@@ -393,7 +394,8 @@ merge_blocks_move_successor_nojumps (a, b)\n      and adjust the block trees appropriately.   Even better would be to have\n      a tighter connection between block trees and rtl so that this is not\n      necessary.  */\n-  squeeze_notes (&b->head, &b->end);\n+  if (squeeze_notes (&b->head, &b->end))\n+    abort ();\n \n   /* Scramble the insn chain.  */\n   reorder_insns_nobb (b->head, b->end, a->end);"}, {"sha": "5dd42fc8d7efa9c0dd5b1a5538118b808909feab", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -2659,7 +2659,8 @@ dead_or_predicable (test_bb, merge_bb, other_bb, new_dest, reversep)\n       if (end == merge_bb->end)\n \tmerge_bb->end = PREV_INSN (head);\n \n-      squeeze_notes (&head, &end);\n+      if (squeeze_notes (&head, &end))\n+\treturn TRUE;\n \n       reorder_insns (head, end, PREV_INSN (earliest));\n     }"}, {"sha": "c886aca6047de2c81a7c2f0823e90b3829cba2f7", "filename": "gcc/jump.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -541,9 +541,10 @@ duplicate_loop_exit_test (loop_start)\n /* Move all block-beg, block-end, loop-beg, loop-cont, loop-vtop, loop-end,\n    notes between START and END out before START.  START and END may be such\n    notes.  Returns the values of the new starting and ending insns, which\n-   may be different if the original ones were such notes.  */\n+   may be different if the original ones were such notes.\n+   Return true if there were only such notes and no real instructions.  */\n \n-void\n+bool\n squeeze_notes (startp, endp)\n      rtx* startp;\n      rtx* endp;\n@@ -584,15 +585,15 @@ squeeze_notes (startp, endp)\n \tlast = insn;\n     }\n \n-  /* There were no real instructions, and we can't represent an empty\n-     range.  Die.  */\n+  /* There were no real instructions.  */\n   if (start == past_end)\n-    abort ();\n+    return true;\n \n   end = last;\n \n   *startp = start;\n   *endp = end;\n+  return false;\n }\n \f\n /* Return the label before INSN, or put a new label there.  */"}, {"sha": "6acdb9cb050eb49979d696274fea731f3bffe30f", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -2748,7 +2748,8 @@ find_and_verify_loops (f, loops)\n \n \t\t\t/* Include the BARRIER after INSN and copy the\n \t\t\t   block after LOC.  */\n-\t\t\tsqueeze_notes (&new_label, &last_insn_to_move);\n+\t\t\tif (squeeze_notes (&new_label, &last_insn_to_move))\n+\t\t\t  abort ();\n \t\t\treorder_insns (new_label, last_insn_to_move, loc);\n \n \t\t\t/* All those insns are now in TARGET_LOOP.  */"}, {"sha": "01e0fb6ec72568e7856b363101dbd615b0ff6c8e", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -1340,7 +1340,7 @@ extern void mark_jump_label\t\tPARAMS ((rtx, rtx, int));\n extern void cleanup_barriers\t\tPARAMS ((void));\n \n /* In jump.c */\n-extern void squeeze_notes\t\tPARAMS ((rtx *, rtx *));\n+extern bool squeeze_notes\t\tPARAMS ((rtx *, rtx *));\n extern rtx delete_related_insns\t\t\tPARAMS ((rtx));\n extern void delete_jump\t\t\tPARAMS ((rtx));\n extern void delete_barrier\t\tPARAMS ((rtx));"}, {"sha": "3f940e379a782836e9524ffd4a1af578d5b795f7", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -5598,7 +5598,8 @@ expand_end_case (orig_index)\n \n       before_case = NEXT_INSN (before_case);\n       end = get_last_insn ();\n-      squeeze_notes (&before_case, &end);\n+      if (squeeze_notes (&before_case, &end))\n+\tabort ();\n       reorder_insns (before_case, end,\n \t\t     thiscase->data.case_stmt.start);\n     }"}, {"sha": "9c2c4c8e29fc1aff26eb481e8956142233affc04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -1,3 +1,7 @@\n+2001-11-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20011114-4.c: New test.\n+\n 2001-11-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/other/init1.C: New test."}, {"sha": "516ef4f2325602915602a5a546dd2d8416847af8", "filename": "gcc/testsuite/gcc.c-torture/compile/20011114-4.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011114-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7d71b2b932e9be61b1c1415419e6df630a0165/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011114-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011114-4.c?ref=2b7d71b2b932e9be61b1c1415419e6df630a0165", "patch": "@@ -0,0 +1,38 @@\n+static inline int foo (long x)\n+{\n+  register int a = 0;\n+  register unsigned b;\n+\n+  do\n+    {\n+      b = (x & 0x7f);\n+      x = (x >> 7) | ~(-1L >> 7);\n+      a += 1;\n+    }\n+  while ((x != 0 || (b & 0x40) != 0) && (x != -1 || (b & 0x40) == 0));\n+  return a;\n+}\n+\n+static inline int bar (unsigned long x)\n+{\n+  register int a = 0;\n+  register unsigned b;\n+\n+  do\n+    {\n+      b = (x & 0x7f);\n+      x >>= 7;\n+      a++;\n+    }\n+  while (x != 0);\n+  return a;\n+}\n+\n+int\n+baz (unsigned long x, int y)\n+{\n+  if (y)\n+    return foo ((long) x);\n+  else\n+    return bar (x);\n+}"}]}