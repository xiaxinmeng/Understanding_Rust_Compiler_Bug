{"sha": "f737b1326e7bd0c786c1d3a49b22e7a2feff6c11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjczN2IxMzI2ZTdiZDBjNzg2YzFkM2E0OWIyMmU3YTJmZWZmNmMxMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-08T22:58:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-08T22:58:06Z"}, "message": "(expand_divmod): Always check result of emit_store_flag.\n\nFrom-SVN: r9905", "tree": {"sha": "55e2ccfd8b1e05ed5cd8c486d7e3028ca25a5a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55e2ccfd8b1e05ed5cd8c486d7e3028ca25a5a3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f737b1326e7bd0c786c1d3a49b22e7a2feff6c11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f737b1326e7bd0c786c1d3a49b22e7a2feff6c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f737b1326e7bd0c786c1d3a49b22e7a2feff6c11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f737b1326e7bd0c786c1d3a49b22e7a2feff6c11/comments", "author": null, "committer": null, "parents": [{"sha": "cd5b346969cbe1799f10575533ace379cdb75652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5b346969cbe1799f10575533ace379cdb75652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5b346969cbe1799f10575533ace379cdb75652"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "e2d31bef155547898d11d664a528ac0cbf0babdf", "filename": "gcc/expmed.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f737b1326e7bd0c786c1d3a49b22e7a2feff6c11/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f737b1326e7bd0c786c1d3a49b22e7a2feff6c11/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=f737b1326e7bd0c786c1d3a49b22e7a2feff6c11", "patch": "@@ -2858,7 +2858,6 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\t       result.  */\n \t\t    quotient = emit_store_flag (tquotient, GEU, op0, op1,\n \t\t\t\t\t\tcompute_mode, 1, 1);\n-\t\t    /* Can emit_store_flag have failed? */\n \t\t    if (quotient == 0)\n \t\t      goto fail1;\n \t\t  }\n@@ -2957,10 +2956,14 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\telse if (d == -1)\n \t\t  quotient = expand_unop (compute_mode, neg_optab, op0,\n \t\t\t\t\t  tquotient, 0);\n-\t\telse if (INTVAL (op1) == (HOST_WIDE_INT) 1 << (size - 1))\n-\t\t  /* This case is not handled correctly below.  */\n-\t\t  quotient = emit_store_flag (tquotient, EQ, op0, op1,\n-\t\t\t\t\t      compute_mode, 1, 1);\n+\t\telse if (abs_d == (unsigned HOST_WIDE_INT) 1 << (size - 1))\n+\t\t  {\n+\t\t    /* This case is not handled correctly below.  */\n+\t\t    quotient = emit_store_flag (tquotient, EQ, op0, op1,\n+\t\t\t\t\t\tcompute_mode, 1, 1);\n+\t\t    if (quotient == 0)\n+\t\t      goto fail1;\n+\t\t  }\n \t\telse if (EXACT_POWER_OF_2_OR_ZERO_P (d)\n \t\t\t && (rem_flag ? smod_pow2_cheap : sdiv_pow2_cheap))\n \t\t  ;"}]}