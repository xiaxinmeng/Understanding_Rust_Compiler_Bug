{"sha": "14d2ec8ffbc6116cee58d94f27ed1647c26e1471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRkMmVjOGZmYmM2MTE2Y2VlNThkOTRmMjdlZDE2NDdjMjZlMTQ3MQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-12-27T17:20:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-12-27T17:20:15Z"}, "message": "i386.md (VI_512): Remove.\n\n\t* config/i386/i386.md (VI_512): Remove.\n\t(vcond<V_512:mode><VI_AVX512BW:mode>): Use VI_AVX512BW\n\tmode iterator instead of VI_512.\n\t(vcondu<V_512:mode><VI_AVX512BW:mode>): Ditto.\n\nFrom-SVN: r243943", "tree": {"sha": "12d3c546c8b104d950439ea1ae0f0fdc74aa5bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12d3c546c8b104d950439ea1ae0f0fdc74aa5bff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14d2ec8ffbc6116cee58d94f27ed1647c26e1471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d2ec8ffbc6116cee58d94f27ed1647c26e1471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14d2ec8ffbc6116cee58d94f27ed1647c26e1471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d2ec8ffbc6116cee58d94f27ed1647c26e1471/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bffa6b6c6214169d8d10f05a418f9f072235f068", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bffa6b6c6214169d8d10f05a418f9f072235f068", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bffa6b6c6214169d8d10f05a418f9f072235f068"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "1e894a20bf09ddfb043ddf9eeb476da8aa1cd25e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d2ec8ffbc6116cee58d94f27ed1647c26e1471/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d2ec8ffbc6116cee58d94f27ed1647c26e1471/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14d2ec8ffbc6116cee58d94f27ed1647c26e1471", "patch": "@@ -1,3 +1,10 @@\n+2016-12-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (VI_512): Remove.\n+\t(vcond<V_512:mode><VI_AVX512BW:mode>): Use VI_AVX512BW\n+\tmode iterator instead of VI_512.\n+\t(vcondu<V_512:mode><VI_AVX512BW:mode>): Ditto.\n+\n 2016-12-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR translation/78922"}, {"sha": "04ccd5faad2caff7f288784b1319c3adfd347892", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14d2ec8ffbc6116cee58d94f27ed1647c26e1471/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14d2ec8ffbc6116cee58d94f27ed1647c26e1471/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=14d2ec8ffbc6116cee58d94f27ed1647c26e1471", "patch": "@@ -521,12 +521,6 @@\n ;; All 256bit vector integer modes\n (define_mode_iterator VI_256 [V32QI V16HI V8SI V4DI])\n \n-;; All 512bit vector integer modes\n-(define_mode_iterator VI_512\n-  [(V64QI \"TARGET_AVX512BW\")\n-   (V32HI \"TARGET_AVX512BW\")\n-   V16SI V8DI])\n-\n ;; Various 128bit vector integer mode combinations\n (define_mode_iterator VI12_128 [V16QI V8HI])\n (define_mode_iterator VI14_128 [V16QI V4SI])\n@@ -11249,17 +11243,17 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_expand \"vcond<V_512:mode><VI_512:mode>\"\n+(define_expand \"vcond<V_512:mode><VI_AVX512BW:mode>\"\n   [(set (match_operand:V_512 0 \"register_operand\")\n \t(if_then_else:V_512\n \t  (match_operator 3 \"\"\n-\t    [(match_operand:VI_512 4 \"nonimmediate_operand\")\n-\t     (match_operand:VI_512 5 \"general_operand\")])\n+\t    [(match_operand:VI_AVX512BW 4 \"nonimmediate_operand\")\n+\t     (match_operand:VI_AVX512BW 5 \"general_operand\")])\n \t  (match_operand:V_512 1)\n \t  (match_operand:V_512 2)))]\n   \"TARGET_AVX512F\n    && (GET_MODE_NUNITS (<V_512:MODE>mode)\n-       == GET_MODE_NUNITS (<VI_512:MODE>mode))\"\n+       == GET_MODE_NUNITS (<VI_AVX512BW:MODE>mode))\"\n {\n   bool ok = ix86_expand_int_vcond (operands);\n   gcc_assert (ok);\n@@ -11315,17 +11309,17 @@\n   DONE;\n })\n \n-(define_expand \"vcondu<V_512:mode><VI_512:mode>\"\n+(define_expand \"vcondu<V_512:mode><VI_AVX512BW:mode>\"\n   [(set (match_operand:V_512 0 \"register_operand\")\n \t(if_then_else:V_512\n \t  (match_operator 3 \"\"\n-\t    [(match_operand:VI_512 4 \"nonimmediate_operand\")\n-\t     (match_operand:VI_512 5 \"nonimmediate_operand\")])\n+\t    [(match_operand:VI_AVX512BW 4 \"nonimmediate_operand\")\n+\t     (match_operand:VI_AVX512BW 5 \"nonimmediate_operand\")])\n \t  (match_operand:V_512 1 \"general_operand\")\n \t  (match_operand:V_512 2 \"general_operand\")))]\n   \"TARGET_AVX512F\n    && (GET_MODE_NUNITS (<V_512:MODE>mode)\n-       == GET_MODE_NUNITS (<VI_512:MODE>mode))\"\n+       == GET_MODE_NUNITS (<VI_AVX512BW:MODE>mode))\"\n {\n   bool ok = ix86_expand_int_vcond (operands);\n   gcc_assert (ok);"}]}