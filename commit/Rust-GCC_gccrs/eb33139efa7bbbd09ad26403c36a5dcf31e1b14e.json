{"sha": "eb33139efa7bbbd09ad26403c36a5dcf31e1b14e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIzMzEzOWVmYTdiYmJkMDlhZDI2NDAzYzM2YTVkY2YzMWUxYjE0ZQ==", "commit": {"author": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-03-17T15:57:16Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-03-22T09:36:59Z"}, "message": "refactor TypeResolution Resolve with new InferType::default_type and defaulting float to f64", "tree": {"sha": "717691f22b5726130bfa1350ccd3954e7b3ab2a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/717691f22b5726130bfa1350ccd3954e7b3ab2a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e/comments", "author": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b061cb099f33a9b76a2701c1d3e35868d026607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b061cb099f33a9b76a2701c1d3e35868d026607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b061cb099f33a9b76a2701c1d3e35868d026607"}], "stats": {"total": 66, "additions": 34, "deletions": 32}, "files": [{"sha": "d5cb0d5f5fd95236b4cadd3386948056ec357ee4", "filename": "gcc/rust/typecheck/rust-hir-type-check.cc", "status": "modified", "additions": 9, "deletions": 32, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc?ref=eb33139efa7bbbd09ad26403c36a5dcf31e1b14e", "patch": "@@ -58,44 +58,21 @@ TypeResolution::Resolve (HIR::Crate &crate)\n     // nothing to do\n     if (ty->get_kind () != TyTy::TypeKind::INFER)\n       return true;\n-\n     TyTy::InferType *infer_var = (TyTy::InferType *) ty;\n-    switch (infer_var->get_infer_kind ())\n+    TyTy::BaseType *default_type;\n+    bool ok = infer_var->default_type (&default_type);\n+    if (!ok)\n       {\n-      case TyTy::InferType::GENERAL:\n \trust_error_at (mappings->lookup_location (id),\n \t\t       \"unable to determine type: please give this a type: %u\",\n \t\t       id);\n-\tbreak;\n-\n-\tcase TyTy::InferType::INTEGRAL: {\n-\t  TyTy::BaseType *default_integer;\n-\t  bool ok = context->lookup_builtin (\"i32\", &default_integer);\n-\t  rust_assert (ok);\n-\n-\t  auto result = ty->unify (default_integer);\n-\t  result->set_ref (id);\n-\t  context->insert_type (\n-\t    Analysis::NodeMapping (mappings->get_current_crate (), 0, id,\n-\t\t\t\t   UNKNOWN_LOCAL_DEFID),\n-\t    result);\n-\t}\n-\tbreak;\n-\n-\tcase TyTy::InferType::FLOAT: {\n-\t  TyTy::BaseType *default_float;\n-\t  bool ok = context->lookup_builtin (\"f32\", &default_float);\n-\t  rust_assert (ok);\n-\n-\t  auto result = ty->unify (default_float);\n-\t  result->set_ref (id);\n-\t  context->insert_type (\n-\t    Analysis::NodeMapping (mappings->get_current_crate (), 0, id,\n-\t\t\t\t   UNKNOWN_LOCAL_DEFID),\n-\t    result);\n-\t}\n-\tbreak;\n+\treturn true;\n       }\n+    auto result = ty->unify (default_type);\n+    result->set_ref (id);\n+    context->insert_type (Analysis::NodeMapping (mappings->get_current_crate (),\n+\t\t\t\t\t\t 0, id, UNKNOWN_LOCAL_DEFID),\n+\t\t\t  result);\n \n     return true;\n   });"}, {"sha": "034bc2d9ed1d56fd1b6cea6b30a539db188d1297", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=eb33139efa7bbbd09ad26403c36a5dcf31e1b14e", "patch": "@@ -106,6 +106,29 @@ InferType::clone ()\n \t\t\tget_combined_refs ());\n }\n \n+bool\n+InferType::default_type (BaseType **type) const\n+{\n+  auto context = Resolver::TypeCheckContext::get ();\n+  bool ok = false;\n+  switch (infer_kind)\n+    {\n+    case GENERAL:\n+      return false;\n+      case INTEGRAL: {\n+\tok = context->lookup_builtin (\"i32\", type);\n+\trust_assert (ok);\n+\treturn ok;\n+      }\n+      case FLOAT: {\n+\tok = context->lookup_builtin (\"f64\", type);\n+\trust_assert (ok);\n+\treturn ok;\n+      }\n+    }\n+  return false;\n+}\n+\n void\n ErrorType::accept_vis (TyVisitor &vis)\n {"}, {"sha": "f0a450ebda98430512f9396d488aedc027509316", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb33139efa7bbbd09ad26403c36a5dcf31e1b14e/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=eb33139efa7bbbd09ad26403c36a5dcf31e1b14e", "patch": "@@ -187,6 +187,8 @@ class InferType : public BaseType\n \n   std::string get_name () const override final { return as_string (); }\n \n+  bool default_type (BaseType **type) const;\n+\n private:\n   InferTypeKind infer_kind;\n };"}]}