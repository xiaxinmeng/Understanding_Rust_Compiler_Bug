{"sha": "ba759acdc8913aa521dd563677f626313cb2d57d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3NTlhY2RjODkxM2FhNTIxZGQ1NjM2NzdmNjI2MzEzY2IyZDU3ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T10:43:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T10:43:17Z"}, "message": "[multiple changes]\n\n2011-09-06  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Call\n\tSet_Corresponding_Aspect when creating pragma from aspect.\n\t(Add_Predicates): Use new field Corresponding_Aspect.\n\t* sem_prag.adb (Analyze_Pragma): Make Pname hold source aspect\n\tname when present, for the purpose of issuing error messages;\n\tremove local procedure Error_Pragma_Arg_Alternate_Name.\n\t* sinfo.adb, sinfo.ads (Corresponding_Aspect): New field in\n\tN_Pragma node.\n\t(From_Dynamic_Predicate, From_Static_Predicate): Remove fields from\n\tN_Pragma node.\n\n2011-09-06  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb, s-except.ads, g-socket.adb: Minor reformatting.\n\n2011-09-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch6.adb (Build_Heap_Allocator): Add new\n\tlocal variable Desig_Typ. Code and comment reformatting. Add\n\tmachinery to ensure that the allocation uses a fat pointer when\n\tthe type of the return object is a constrained array and the\n\tfunction return type is an unconstrained array.\n\n2011-09-06  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb, prj-part.adb, prj-nmsc.adb: Remove unused formal\n\tparameters in subprograms.\n\n2011-09-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-taprop-mingw.adb (Finalize_TCB): Fix typo.\n\n2011-09-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-taprop-vxworks.adb, s-tpoaal.adb, s-tpopsp-vxworks.adb\n\t(System.Tasking.Primitive_Operations.Specific.Delete): Remove\n\tsubprogram.\n\t(System.Tasking.Primitive_Operations.Specific.Set): If argument\n\tis null, destroy task specific data, to make API consistent with\n\tother platforms, and thus compatible with the shared version\n\tof s-tpoaal.adb.\n\t(System.Tasking.Primitive_Operations.ATCB_Allocation.Free_ATCB):\n\tDocument the above assumption.\n\nFrom-SVN: r178583", "tree": {"sha": "1157a2d869f2276dd64328c487465347fc91ac7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1157a2d869f2276dd64328c487465347fc91ac7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba759acdc8913aa521dd563677f626313cb2d57d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba759acdc8913aa521dd563677f626313cb2d57d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba759acdc8913aa521dd563677f626313cb2d57d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba759acdc8913aa521dd563677f626313cb2d57d/comments", "author": null, "committer": null, "parents": [{"sha": "f4f92d9d598953d329db09f4dbb0447d85717d88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f92d9d598953d329db09f4dbb0447d85717d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f92d9d598953d329db09f4dbb0447d85717d88"}], "stats": {"total": 435, "additions": 209, "deletions": 226}, "files": [{"sha": "f39c314bec0b39a78e6b7f0c4765493283055e16", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -1,3 +1,49 @@\n+2011-09-06  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Call\n+\tSet_Corresponding_Aspect when creating pragma from aspect.\n+\t(Add_Predicates): Use new field Corresponding_Aspect.\n+\t* sem_prag.adb (Analyze_Pragma): Make Pname hold source aspect\n+\tname when present, for the purpose of issuing error messages;\n+\tremove local procedure Error_Pragma_Arg_Alternate_Name.\n+\t* sinfo.adb, sinfo.ads (Corresponding_Aspect): New field in\n+\tN_Pragma node.\n+\t(From_Dynamic_Predicate, From_Static_Predicate): Remove fields from\n+\tN_Pragma node.\n+\n+2011-09-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb, s-except.ads, g-socket.adb: Minor reformatting.\n+\n+2011-09-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch6.adb (Build_Heap_Allocator): Add new\n+\tlocal variable Desig_Typ. Code and comment reformatting. Add\n+\tmachinery to ensure that the allocation uses a fat pointer when\n+\tthe type of the return object is a constrained array and the\n+\tfunction return type is an unconstrained array.\n+\n+2011-09-06  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb, prj-part.adb, prj-nmsc.adb: Remove unused formal\n+\tparameters in subprograms.\n+\n+2011-09-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-taprop-mingw.adb (Finalize_TCB): Fix typo.\n+\n+2011-09-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-taprop-vxworks.adb, s-tpoaal.adb, s-tpopsp-vxworks.adb\n+\t(System.Tasking.Primitive_Operations.Specific.Delete): Remove\n+\tsubprogram.\n+\t(System.Tasking.Primitive_Operations.Specific.Set): If argument\n+\tis null, destroy task specific data, to make API consistent with\n+\tother platforms, and thus compatible with the shared version\n+\tof s-tpoaal.adb.\n+\t(System.Tasking.Primitive_Operations.ATCB_Allocation.Free_ATCB):\n+\tDocument the above assumption.\n+\n 2011-09-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch6.adb (Expand_Inlined_Call): Fix use of uninitialized"}, {"sha": "0d2322afa6fb4c02e0b2e91ba17a96b5b1cf3874", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -1877,6 +1877,7 @@ package body Checks is\n       if Is_Subscr_Ref then\n          Arr := Prefix (Parnt);\n          Arr_Typ := Get_Actual_Subtype_If_Available (Arr);\n+\n          if Is_Access_Type (Arr_Typ) then\n             Arr_Typ := Directly_Designated_Type (Arr_Typ);\n          end if;"}, {"sha": "8955e5d917484032efbded4ff1e48d82f2f1f5ac", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -4651,10 +4651,10 @@ package body Exp_Ch6 is\n                               Build_In_Place_Formal\n                                 (Func_Id, BIP_Finalization_Master);\n                Stmts      : constant List_Id := New_List;\n-\n-               Local_Id : Entity_Id;\n-               Pool_Id  : Entity_Id;\n-               Ptr_Typ  : Entity_Id;\n+               Desig_Typ  : Entity_Id;\n+               Local_Id   : Entity_Id;\n+               Pool_Id    : Entity_Id;\n+               Ptr_Typ    : Entity_Id;\n \n             begin\n                --  Generate:\n@@ -4684,8 +4684,19 @@ package body Exp_Ch6 is\n                --  of the temporary. Otherwise the secondary stack allocation\n                --  will fail.\n \n+               Desig_Typ := Ret_Typ;\n+\n+               --  Ensure that the build-in-place machinery uses a fat pointer\n+               --  when allocating an unconstrained array on the heap. In this\n+               --  case the result object type is a constrained array type even\n+               --  though the function type is unconstrained.\n+\n+               if Ekind (Desig_Typ) = E_Array_Subtype then\n+                  Desig_Typ := Base_Type (Desig_Typ);\n+               end if;\n+\n                --  Generate:\n-               --    type Ptr_Typ is access Ret_Typ;\n+               --    type Ptr_Typ is access Desig_Typ;\n \n                Ptr_Typ := Make_Temporary (Loc, 'P');\n \n@@ -4695,7 +4706,7 @@ package body Exp_Ch6 is\n                    Type_Definition     =>\n                      Make_Access_To_Object_Definition (Loc,\n                        Subtype_Indication =>\n-                         New_Reference_To (Ret_Typ, Loc))));\n+                         New_Reference_To (Desig_Typ, Loc))));\n \n                --  Perform minor decoration in order to set the master and the\n                --  storage pool attributes."}, {"sha": "bf1fe9fdde01b8d238696cb26852b73295dd0d83", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -474,6 +474,7 @@ package body GNAT.Sockets is\n \n    procedure Check_For_Fd_Set (Fd : Socket_Type) is\n       use SOSC;\n+\n    begin\n       --  On Windows, fd_set is a FD_SETSIZE array of socket ids:\n       --  no check required. Warnings suppressed because condition"}, {"sha": "bf6a21a0dadca505b5d3e2f03984293e47038a88", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -608,8 +608,6 @@ package body Make is\n \n    procedure Compute_Switches_For_Main\n      (Main_Source_File  : in out File_Name_Type;\n-      Main_Index        : Int;\n-      Project_Node_Tree : Project_Node_Tree_Ref;\n       Root_Environment  : in out Prj.Tree.Environment;\n       Compute_Builder   : Boolean;\n       Current_Work_Dir  : String);\n@@ -744,10 +742,8 @@ package body Make is\n    procedure Add_Switches\n      (The_Package                      : Package_Id;\n       File_Name                        : String;\n-      Index                            : Int;\n       Program                          : Make_Program_Type;\n       Unknown_Switches_To_The_Compiler : Boolean := True;\n-      Project_Node_Tree                : Project_Node_Tree_Ref;\n       Env                              : in out Prj.Tree.Environment);\n    procedure Add_Switch\n      (S             : String_Access;\n@@ -769,7 +765,6 @@ package body Make is\n \n    procedure Check\n      (Source_File    : File_Name_Type;\n-      Source_Index   : Int;\n       Is_Main_Source : Boolean;\n       The_Args       : Argument_List;\n       Lib_File       : File_Name_Type;\n@@ -1276,10 +1271,8 @@ package body Make is\n    procedure Add_Switches\n      (The_Package                      : Package_Id;\n       File_Name                        : String;\n-      Index                            : Int;\n       Program                          : Make_Program_Type;\n       Unknown_Switches_To_The_Compiler : Boolean := True;\n-      Project_Node_Tree                : Project_Node_Tree_Ref;\n       Env                              : in out Prj.Tree.Environment)\n    is\n       Switches    : Variable_Value;\n@@ -1445,7 +1438,6 @@ package body Make is\n \n    procedure Check\n      (Source_File    : File_Name_Type;\n-      Source_Index   : Int;\n       Is_Main_Source : Boolean;\n       The_Args       : Argument_List;\n       Lib_File       : File_Name_Type;\n@@ -3445,7 +3437,6 @@ package body Make is\n \n                   if not Force_Compilations then\n                      Check (Source_File    => Source.File,\n-                            Source_Index   => Source.Index,\n                             Is_Main_Source => Source.File = Main_Source,\n                             The_Args       => Args,\n                             Lib_File       => Lib_File,\n@@ -5206,8 +5197,6 @@ package body Make is\n \n    procedure Compute_Switches_For_Main\n      (Main_Source_File  : in out File_Name_Type;\n-      Main_Index        : Int;\n-      Project_Node_Tree : Project_Node_Tree_Ref;\n       Root_Environment  : in out Prj.Tree.Environment;\n       Compute_Builder   : Boolean;\n       Current_Work_Dir  : String)\n@@ -5349,10 +5338,8 @@ package body Make is\n                end if;\n \n                Add_Switches\n-                 (Project_Node_Tree => Project_Node_Tree,\n-                  Env               => Root_Environment,\n+                 (Env               => Root_Environment,\n                   File_Name         => Main_Unit_File_Name,\n-                  Index             => Main_Index,\n                   The_Package       => Binder_Package,\n                   Program           => Binder);\n             end if;\n@@ -5367,10 +5354,8 @@ package body Make is\n                end if;\n \n                Add_Switches\n-                 (Project_Node_Tree => Project_Node_Tree,\n-                  Env               => Root_Environment,\n+                 (Env               => Root_Environment,\n                   File_Name         => Main_Unit_File_Name,\n-                  Index             => Main_Index,\n                   The_Package       => Linker_Package,\n                   Program           => Linker);\n             end if;\n@@ -6029,8 +6014,6 @@ package body Make is\n \n          Compute_Switches_For_Main\n            (Main_Source_File,\n-            Main_Index,\n-            Project_Node_Tree,\n             Root_Environment,\n             Compute_Builder  => Is_First_Main,\n             Current_Work_Dir => Current_Work_Dir.all);"}, {"sha": "e7d9c5af8591ae75f0ec0bfa7fb143d3a50ee24f", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -426,8 +426,7 @@ package body Prj.Nmsc is\n       Naming    : Lang_Naming_Data;\n       Kind      : out Source_Kind;\n       Unit      : out Name_Id;\n-      Project   : Project_Processing_Data;\n-      In_Tree   : Project_Tree_Ref);\n+      Project   : Project_Processing_Data);\n    --  Check whether the file matches the naming scheme. If it does,\n    --  compute its unit name. If Unit is set to No_Name on exit, none of the\n    --  other out parameters are relevant.\n@@ -5627,8 +5626,7 @@ package body Prj.Nmsc is\n       Naming    : Lang_Naming_Data;\n       Kind      : out Source_Kind;\n       Unit      : out Name_Id;\n-      Project   : Project_Processing_Data;\n-      In_Tree   : Project_Tree_Ref)\n+      Project   : Project_Processing_Data)\n    is\n       Filename : constant String  := Get_Name_String (File_Name);\n       Last     : Integer          := Filename'Last;\n@@ -6724,8 +6722,7 @@ package body Prj.Nmsc is\n                      Naming          => Config.Naming_Data,\n                      Kind            => Kind,\n                      Unit            => Unit,\n-                     Project         => Project,\n-                     In_Tree         => In_Tree);\n+                     Project         => Project);\n \n                   if Unit /= No_Name then\n                      Language    := Tmp_Lang;"}, {"sha": "1c18680fbe8971145a44f8a85891bc498194375a", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -215,7 +215,6 @@ package body Prj.Part is\n       Imported_Projects : in out Project_Node_Id;\n       Project_Directory : Path_Name_Type;\n       From_Extended     : Extension_Origin;\n-      In_Limited        : Boolean;\n       Packages_To_Check : String_List_Access;\n       Depth             : Natural;\n       Current_Dir       : String;\n@@ -752,7 +751,6 @@ package body Prj.Part is\n       Imported_Projects : in out Project_Node_Id;\n       Project_Directory : Path_Name_Type;\n       From_Extended     : Extension_Origin;\n-      In_Limited        : Boolean;\n       Packages_To_Check : String_List_Access;\n       Depth             : Natural;\n       Current_Dir       : String;\n@@ -1503,7 +1501,6 @@ package body Prj.Part is\n                Imported_Projects => Imported_Projects,\n                Project_Directory => Project_Directory,\n                From_Extended     => From_Ext,\n-               In_Limited        => In_Limited,\n                Packages_To_Check => Packages_To_Check,\n                Depth             => Depth + 1,\n                Current_Dir       => Current_Dir,\n@@ -1863,7 +1860,6 @@ package body Prj.Part is\n             Imported_Projects => Imported_Projects,\n             Project_Directory => Project_Directory,\n             From_Extended     => From_Ext,\n-            In_Limited        => In_Limited,\n             Packages_To_Check => Packages_To_Check,\n             Depth             => Depth + 1,\n             Current_Dir       => Current_Dir,"}, {"sha": "7fc505e30bc69ed9b296f5f0162367cbbf409bb8", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -997,7 +997,7 @@ package body System.Task_Primitives.Operations is\n          Known_Tasks (T.Known_Tasks_Index) := null;\n       end if;\n \n-      if Self_ID.Common.LL.Thread /= 0 then\n+      if T.Common.LL.Thread /= 0 then\n \n          --  This task has been activated. Wait for the thread to terminate\n          --  then close it. This is needed to release system resources."}, {"sha": "be76162b284d26f061105cadb6d9cf5715de6334", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -124,11 +124,8 @@ package body System.Task_Primitives.Operations is\n \n       procedure Set (Self_Id : Task_Id);\n       pragma Inline (Set);\n-      --  Set the self id for the current task\n-\n-      procedure Delete;\n-      pragma Inline (Delete);\n-      --  Delete the task specific data associated with the current task\n+      --  Set the self id for the current task, unless Self_Id is null, in\n+      --  which case the task specific data is deleted.\n \n       function Self return Task_Id;\n       pragma Inline (Self);"}, {"sha": "1d25fb84b62dff3beca1319e07559507a0ad075d", "filename": "gcc/ada/s-tpoaal.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fs-tpoaal.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fs-tpoaal.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpoaal.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -59,6 +59,10 @@ package body ATCB_Allocation is\n \n             Specific.Set (Local_ATCB'Unchecked_Access);\n             Free (Tmp);\n+\n+            --  Note: it is assumed here that for all platforms, Specific.Set\n+            --  deletes the task specific information if passed a null value.\n+\n             Specific.Set (null);\n          end;\n "}, {"sha": "09c03efe0617e962b55a5991e5845d9b3e06821b", "filename": "gcc/ada/s-tpopsp-vxworks.adb", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fs-tpopsp-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fs-tpopsp-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpopsp-vxworks.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1992-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,17 +44,6 @@ package body Specific is\n    --  implementation. This mechanism is used to minimize impact on other\n    --  targets.\n \n-   ------------\n-   -- Delete --\n-   ------------\n-\n-   procedure Delete is\n-      Result : STATUS;\n-   begin\n-      Result := taskVarDelete (taskIdSelf, ATCB_Key'Access);\n-      pragma Assert (Result /= ERROR);\n-   end Delete;\n-\n    ----------------\n    -- Initialize --\n    ----------------\n@@ -81,6 +70,14 @@ package body Specific is\n       Result : STATUS;\n \n    begin\n+      --  If Self_Id is null, delete task specific data\n+\n+      if Self_Id = null then\n+         Result := taskVarDelete (taskIdSelf, ATCB_Key'Access);\n+         pragma Assert (Result /= ERROR);\n+         return;\n+      end if;\n+\n       if taskVarGet (0, ATCB_Key'Access) = ERROR then\n          Result := taskVarAdd (0, ATCB_Key'Access);\n          pragma Assert (Result = OK);"}, {"sha": "f5b52d04e0d19062acaef965838d7b86ae16554e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -1146,6 +1146,7 @@ package body Sem_Ch13 is\n                         New_List (Ent, Relocate_Node (Expr)));\n \n                   Set_From_Aspect_Specification (Aitem, True);\n+                  Set_Corresponding_Aspect (Aitem, Aspect);\n \n                   pragma Assert (not Delay_Required);\n \n@@ -1181,6 +1182,7 @@ package body Sem_Ch13 is\n                                    Expression => Relocate_Node (Expr))));\n \n                      Set_From_Aspect_Specification (Aitem, True);\n+                     Set_Corresponding_Aspect (Aitem, Aspect);\n \n                      pragma Assert (not Delay_Required);\n                   end;\n@@ -1259,6 +1261,7 @@ package body Sem_Ch13 is\n                   end if;\n \n                   Set_From_Aspect_Specification (Aitem, True);\n+                  Set_Corresponding_Aspect (Aitem, Aspect);\n                   Set_Is_Delayed_Aspect (Aspect);\n \n                   --  For Pre/Post cases, insert immediately after the entity\n@@ -1316,6 +1319,7 @@ package body Sem_Ch13 is\n                   end if;\n \n                   Set_From_Aspect_Specification (Aitem, True);\n+                  Set_Corresponding_Aspect (Aitem, Aspect);\n                   Set_Is_Delayed_Aspect (Aspect);\n \n                   --  For Invariant case, insert immediately after the entity\n@@ -1345,14 +1349,7 @@ package body Sem_Ch13 is\n                         Make_Identifier (Sloc (Id), Name_Predicate));\n \n                   Set_From_Aspect_Specification (Aitem, True);\n-\n-                  --  Set special flags for dynamic/static cases\n-\n-                  if A_Id = Aspect_Dynamic_Predicate then\n-                     Set_From_Dynamic_Predicate (Aitem);\n-                  elsif A_Id = Aspect_Static_Predicate then\n-                     Set_From_Static_Predicate (Aitem);\n-                  end if;\n+                  Set_Corresponding_Aspect (Aitem, Aspect);\n \n                   --  Make sure we have a freeze node (it might otherwise be\n                   --  missing in cases like subtype X is Y, and we would not\n@@ -1426,6 +1423,7 @@ package body Sem_Ch13 is\n                         Args);\n \n                   Set_From_Aspect_Specification (Aitem, True);\n+                  Set_Corresponding_Aspect (Aitem, Aspect);\n                   Set_Is_Delayed_Aspect (Aspect);\n \n                   --  Insert immediately after the entity declaration\n@@ -1444,6 +1442,11 @@ package body Sem_Ch13 is\n             if Delay_Required then\n                if Present (Aitem) then\n                   Set_From_Aspect_Specification (Aitem, True);\n+\n+                  if Nkind (Aitem) = N_Pragma then\n+                     Set_Corresponding_Aspect (Aitem, Aspect);\n+                  end if;\n+\n                   Set_Is_Delayed_Aspect (Aitem);\n                   Set_Aspect_Rep_Item (Aspect, Aitem);\n                end if;\n@@ -1457,6 +1460,10 @@ package body Sem_Ch13 is\n             else\n                Set_From_Aspect_Specification (Aitem, True);\n \n+               if Nkind (Aitem) = N_Pragma then\n+                  Set_Corresponding_Aspect (Aitem, Aspect);\n+               end if;\n+\n                --  If this is a compilation unit, we will put the pragma in\n                --  the Pragmas_After list of the N_Compilation_Unit_Aux node.\n \n@@ -4734,10 +4741,15 @@ package body Sem_Ch13 is\n             if Nkind (Ritem) = N_Pragma\n               and then Pragma_Name (Ritem) = Name_Predicate\n             then\n-               if From_Dynamic_Predicate (Ritem) then\n-                  Dynamic_Predicate_Present := True;\n-               elsif From_Static_Predicate (Ritem) then\n-                  Static_Predicate_Present := Ritem;\n+               if Present (Corresponding_Aspect (Ritem)) then\n+                  case Chars (Identifier (Corresponding_Aspect (Ritem))) is\n+                     when Name_Dynamic_Predicate =>\n+                        Dynamic_Predicate_Present := True;\n+                     when Name_Static_Predicate =>\n+                        Static_Predicate_Present := Ritem;\n+                     when others =>\n+                        null;\n+                  end case;\n                end if;\n \n                --  Acquire arguments"}, {"sha": "e3db8077f684362ffc5cedfe753ed19a69a00d89", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 70, "deletions": 103, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -29,65 +29,63 @@\n --  to complete the syntax checks. Certain pragmas are handled partially or\n --  completely by the parser (see Par.Prag for further details).\n \n-with System.Case_Util;\n-\n-with Atree;            use Atree;\n-with Casing;           use Casing;\n-with Checks;           use Checks;\n-with Csets;            use Csets;\n-with Debug;            use Debug;\n-with Einfo;            use Einfo;\n-with Elists;           use Elists;\n-with Errout;           use Errout;\n-with Exp_Dist;         use Exp_Dist;\n-with Exp_Util;         use Exp_Util;\n-with Freeze;           use Freeze;\n-with Lib;              use Lib;\n-with Lib.Writ;         use Lib.Writ;\n-with Lib.Xref;         use Lib.Xref;\n-with Namet.Sp;         use Namet.Sp;\n-with Nlists;           use Nlists;\n-with Nmake;            use Nmake;\n-with Opt;              use Opt;\n-with Output;           use Output;\n-with Par_SCO;          use Par_SCO;\n-with Restrict;         use Restrict;\n-with Rident;           use Rident;\n-with Rtsfind;          use Rtsfind;\n-with Sem;              use Sem;\n-with Sem_Aux;          use Sem_Aux;\n-with Sem_Ch3;          use Sem_Ch3;\n-with Sem_Ch6;          use Sem_Ch6;\n-with Sem_Ch8;          use Sem_Ch8;\n-with Sem_Ch12;         use Sem_Ch12;\n-with Sem_Ch13;         use Sem_Ch13;\n-with Sem_Disp;         use Sem_Disp;\n-with Sem_Dist;         use Sem_Dist;\n-with Sem_Elim;         use Sem_Elim;\n-with Sem_Eval;         use Sem_Eval;\n-with Sem_Intr;         use Sem_Intr;\n-with Sem_Mech;         use Sem_Mech;\n-with Sem_Res;          use Sem_Res;\n-with Sem_Type;         use Sem_Type;\n-with Sem_Util;         use Sem_Util;\n-with Sem_VFpt;         use Sem_VFpt;\n-with Sem_Warn;         use Sem_Warn;\n-with Stand;            use Stand;\n-with Sinfo;            use Sinfo;\n-with Sinfo.CN;         use Sinfo.CN;\n-with Sinput;           use Sinput;\n-with Snames;           use Snames;\n-with Stringt;          use Stringt;\n-with Stylesw;          use Stylesw;\n+with Atree;    use Atree;\n+with Casing;   use Casing;\n+with Checks;   use Checks;\n+with Csets;    use Csets;\n+with Debug;    use Debug;\n+with Einfo;    use Einfo;\n+with Elists;   use Elists;\n+with Errout;   use Errout;\n+with Exp_Dist; use Exp_Dist;\n+with Exp_Util; use Exp_Util;\n+with Freeze;   use Freeze;\n+with Lib;      use Lib;\n+with Lib.Writ; use Lib.Writ;\n+with Lib.Xref; use Lib.Xref;\n+with Namet.Sp; use Namet.Sp;\n+with Nlists;   use Nlists;\n+with Nmake;    use Nmake;\n+with Opt;      use Opt;\n+with Output;   use Output;\n+with Par_SCO;  use Par_SCO;\n+with Restrict; use Restrict;\n+with Rident;   use Rident;\n+with Rtsfind;  use Rtsfind;\n+with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n+with Sem_Ch3;  use Sem_Ch3;\n+with Sem_Ch6;  use Sem_Ch6;\n+with Sem_Ch8;  use Sem_Ch8;\n+with Sem_Ch12; use Sem_Ch12;\n+with Sem_Ch13; use Sem_Ch13;\n+with Sem_Disp; use Sem_Disp;\n+with Sem_Dist; use Sem_Dist;\n+with Sem_Elim; use Sem_Elim;\n+with Sem_Eval; use Sem_Eval;\n+with Sem_Intr; use Sem_Intr;\n+with Sem_Mech; use Sem_Mech;\n+with Sem_Res;  use Sem_Res;\n+with Sem_Type; use Sem_Type;\n+with Sem_Util; use Sem_Util;\n+with Sem_VFpt; use Sem_VFpt;\n+with Sem_Warn; use Sem_Warn;\n+with Stand;    use Stand;\n+with Sinfo;    use Sinfo;\n+with Sinfo.CN; use Sinfo.CN;\n+with Sinput;   use Sinput;\n+with Snames;   use Snames;\n+with Stringt;  use Stringt;\n+with Stylesw;  use Stylesw;\n with Table;\n-with Targparm;         use Targparm;\n-with Tbuild;           use Tbuild;\n+with Targparm; use Targparm;\n+with Tbuild;   use Tbuild;\n with Ttypes;\n-with Uintp;            use Uintp;\n-with Uname;            use Uname;\n-with Urealp;           use Urealp;\n-with Validsw;          use Validsw;\n-with Warnsw;           use Warnsw;\n+with Uintp;    use Uintp;\n+with Uname;    use Uname;\n+with Urealp;   use Urealp;\n+with Validsw;  use Validsw;\n+with Warnsw;   use Warnsw;\n \n package body Sem_Prag is\n \n@@ -374,9 +372,13 @@ package body Sem_Prag is\n \n    procedure Analyze_Pragma (N : Node_Id) is\n       Loc     : constant Source_Ptr := Sloc (N);\n-      Pname   : constant Name_Id    := Pragma_Name (N);\n       Prag_Id : Pragma_Id;\n \n+      Pname : Name_Id;\n+      --  Name of the source pragma, or name of the corresponding aspect for\n+      --  pragmas which originate in a source aspect. In the latter case, the\n+      --  name may be different from the pragma name.\n+\n       Pragma_Exit : exception;\n       --  This exception is used to exit pragma processing completely. It is\n       --  used when an error is detected, and no further processing is\n@@ -648,17 +650,6 @@ package body Sem_Prag is\n       --  Similar to above form of Error_Pragma_Arg except that two messages\n       --  are provided, the second is a continuation comment starting with \\.\n \n-      procedure Error_Pragma_Arg_Alternate_Name\n-        (Msg      : String;\n-         Arg      : Node_Id;\n-         Alt_Name : Name_Id);\n-      pragma No_Return (Error_Pragma_Arg_Alternate_Name);\n-      --  Outputs error message for current pragma, similar to\n-      --  Error_Pragma_Arg, except the source name of the aspect/pragma to use\n-      --  in warnings may be equal to Alt_Name (which should be equivalent to\n-      --  the name used in pragma). The location for the source name should be\n-      --  pointed to by Arg.\n-\n       procedure Error_Pragma_Arg_Ident (Msg : String; Arg : Node_Id);\n       pragma No_Return (Error_Pragma_Arg_Ident);\n       --  Outputs error message for current pragma. The message may contain\n@@ -2440,34 +2431,6 @@ package body Sem_Prag is\n          Error_Pragma_Arg (Msg2, Arg);\n       end Error_Pragma_Arg;\n \n-      -------------------------------------\n-      -- Error_Pragma_Arg_Alternate_Name --\n-      -------------------------------------\n-\n-      procedure Error_Pragma_Arg_Alternate_Name\n-        (Msg      : String;\n-         Arg      : Node_Id;\n-         Alt_Name : Name_Id)\n-      is\n-         MsgF        : String := Msg;\n-         Source_Name : String := Exact_Source_Name (Sloc (Arg));\n-         Alter_Name  : String := Get_Name_String (Alt_Name);\n-\n-      begin\n-         System.Case_Util.To_Lower (Source_Name);\n-         System.Case_Util.To_Lower (Alter_Name);\n-\n-         if Source_Name = Alter_Name then\n-            Error_Msg_Name_1 := Alt_Name;\n-         else\n-            Error_Msg_Name_1 := Pname;\n-         end if;\n-\n-         Fix_Error (MsgF);\n-         Error_Msg_N (MsgF, Get_Pragma_Arg (Arg));\n-         raise Pragma_Exit;\n-      end Error_Pragma_Arg_Alternate_Name;\n-\n       ----------------------------\n       -- Error_Pragma_Arg_Ident --\n       ----------------------------\n@@ -6212,6 +6175,8 @@ package body Sem_Prag is\n \n       --  Deal with unrecognized pragma\n \n+      Pname := Pragma_Name (N);\n+\n       if not Is_Pragma_Name (Pname) then\n          if Warn_On_Unrecognized_Pragma then\n             Error_Msg_Name_1 := Pname;\n@@ -6234,6 +6199,10 @@ package body Sem_Prag is\n \n       Prag_Id := Get_Pragma_Id (Pname);\n \n+      if Present (Corresponding_Aspect (N)) then\n+         Pname := Chars (Identifier (Corresponding_Aspect (N)));\n+      end if;\n+\n       --  Preset arguments\n \n       Arg_Count := 0;\n@@ -10182,15 +10151,13 @@ package body Sem_Prag is\n                null;\n \n             elsif In_Private_Part (Current_Scope) then\n-               Error_Pragma_Arg_Alternate_Name\n+               Error_Pragma_Arg\n                  (\"pragma% only allowed for private type \" &\n-                  \"declared in visible part\", Arg1,\n-                  Alt_Name => Name_Type_Invariant);\n+                  \"declared in visible part\", Arg1);\n \n             else\n-               Error_Pragma_Arg_Alternate_Name\n-                 (\"pragma% only allowed for private type\", Arg1,\n-                  Alt_Name => Name_Type_Invariant);\n+               Error_Pragma_Arg\n+                 (\"pragma% only allowed for private type\", Arg1);\n             end if;\n \n             --  Note that the type has at least one invariant, and also that"}, {"sha": "75433470b7145d89d9d5d6bcd18adf30cd7b3f2b", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 32, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -590,6 +590,14 @@ package body Sinfo is\n       return Flag14 (N);\n    end Conversion_OK;\n \n+   function Corresponding_Aspect\n+      (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Pragma);\n+      return Node3 (N);\n+   end Corresponding_Aspect;\n+\n    function Corresponding_Body\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -1337,22 +1345,6 @@ package body Sinfo is\n       return Flag6 (N);\n    end From_Default;\n \n-   function From_Dynamic_Predicate\n-      (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Pragma);\n-      return Flag7 (N);\n-   end From_Dynamic_Predicate;\n-\n-   function From_Static_Predicate\n-      (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Pragma);\n-      return Flag8 (N);\n-   end From_Static_Predicate;\n-\n    function Generic_Associations\n       (N : Node_Id) return List_Id is\n    begin\n@@ -3658,6 +3650,14 @@ package body Sinfo is\n       Set_Flag14 (N, Val);\n    end Set_Conversion_OK;\n \n+   procedure Set_Corresponding_Aspect\n+      (N : Node_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Pragma);\n+      Set_Node3 (N, Val);\n+   end Set_Corresponding_Aspect;\n+\n    procedure Set_Corresponding_Body\n       (N : Node_Id; Val : Node_Id) is\n    begin\n@@ -4396,22 +4396,6 @@ package body Sinfo is\n       Set_Flag6 (N, Val);\n    end Set_From_Default;\n \n-   procedure Set_From_Dynamic_Predicate\n-      (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Pragma);\n-      Set_Flag7 (N, Val);\n-   end Set_From_Dynamic_Predicate;\n-\n-   procedure Set_From_Static_Predicate\n-      (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Pragma);\n-      Set_Flag8 (N, Val);\n-   end Set_From_Static_Predicate;\n-\n    procedure Set_Generic_Associations\n       (N : Node_Id; Val : List_Id) is\n    begin"}, {"sha": "4e239b8203b5d59671d223a147435ba492804e8d", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba759acdc8913aa521dd563677f626313cb2d57d/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=ba759acdc8913aa521dd563677f626313cb2d57d", "patch": "@@ -717,6 +717,10 @@ package Sinfo is\n    --    direct conversion of the underlying integer result, with no regard to\n    --    the small operand.\n \n+   --  Corresponding_Aspect (Node3-Sem)\n+   --    Present in N_Pragma node. Used to point back to the source aspect from\n+   --    the corresponding pragma. This field is Empty for source pragmas.\n+\n    --  Corresponding_Body (Node5-Sem)\n    --    This field is set in subprogram declarations, package declarations,\n    --    entry declarations of protected types, and in generic units. It points\n@@ -1076,14 +1080,6 @@ package Sinfo is\n    --    declaration is treated as an implicit reference to the formal in the\n    --    ali file.\n \n-   --  From_Dynamic_Predicate (Flag7-Sem)\n-   --    Set for generated pragma Predicate node if this is generated by a\n-   --    Dynamic_Predicate aspect.\n-\n-   --  From_Static_Predicate (Flag8-Sem)\n-   --    Set for generated pragma Predicate node if this is generated by a\n-   --    Static_Predicate aspect.\n-\n    --  Generic_Parent (Node5-Sem)\n    --    Generic_Parent is defined on declaration nodes that are instances. The\n    --    value of Generic_Parent is the generic entity from which the instance\n@@ -2063,15 +2059,14 @@ package Sinfo is\n       --  Sloc points to PRAGMA\n       --  Next_Pragma (Node1-Sem)\n       --  Pragma_Argument_Associations (List2) (set to No_List if none)\n+      --  Corresponding_Aspect (Node3-Sem) (set to Empty if not present)\n       --  Pragma_Identifier (Node4)\n       --  Next_Rep_Item (Node5-Sem)\n       --  From_Aspect_Specification (Flag13-Sem)\n       --  Is_Delayed_Aspect (Flag14-Sem)\n       --  Import_Interface_Present (Flag16-Sem)\n       --  Split_PPC (Flag17) set if corresponding aspect had Split_PPC set\n       --  Class_Present (Flag6) set if from Aspect with 'Class\n-      --  From_Dynamic_Predicate (Flag7-Sem) Set if Dynamic_Predicate aspect\n-      --  From_Static_Predicate (Flag8-Sem) Set if Static_Predicate aspect\n \n       --  Note: we should have a section on what pragmas are passed on to\n       --  the back end to be processed. This section should note that pragma\n@@ -8242,6 +8237,9 @@ package Sinfo is\n    function Conversion_OK\n      (N : Node_Id) return Boolean;    -- Flag14\n \n+   function Corresponding_Aspect\n+     (N : Node_Id) return Node_Id;    -- Node3\n+\n    function Corresponding_Body\n      (N : Node_Id) return Node_Id;    -- Node5\n \n@@ -8464,12 +8462,6 @@ package Sinfo is\n    function From_Default\n      (N : Node_Id) return Boolean;    -- Flag6\n \n-   function From_Dynamic_Predicate\n-     (N : Node_Id) return Boolean;    -- Flag7\n-\n-   function From_Static_Predicate\n-     (N : Node_Id) return Boolean;    -- Flag8\n-\n    function Generic_Associations\n      (N : Node_Id) return List_Id;    -- List3\n \n@@ -9220,6 +9212,9 @@ package Sinfo is\n    procedure Set_Conversion_OK\n      (N : Node_Id; Val : Boolean := True);    -- Flag14\n \n+   procedure Set_Corresponding_Aspect\n+     (N : Node_Id; Val : Node_Id);            -- Node3\n+\n    procedure Set_Corresponding_Body\n      (N : Node_Id; Val : Node_Id);            -- Node5\n \n@@ -9439,12 +9434,6 @@ package Sinfo is\n    procedure Set_From_Default\n      (N : Node_Id; Val : Boolean := True);    -- Flag6\n \n-   procedure Set_From_Dynamic_Predicate\n-     (N : Node_Id; Val : Boolean := True);    -- Flag7\n-\n-   procedure Set_From_Static_Predicate\n-     (N : Node_Id; Val : Boolean := True);    -- Flag8\n-\n    procedure Set_Generic_Associations\n      (N : Node_Id; Val : List_Id);            -- List3\n \n@@ -11813,6 +11802,7 @@ package Sinfo is\n    pragma Inline (Context_Pending);\n    pragma Inline (Controlling_Argument);\n    pragma Inline (Conversion_OK);\n+   pragma Inline (Corresponding_Aspect);\n    pragma Inline (Corresponding_Body);\n    pragma Inline (Corresponding_Formal_Spec);\n    pragma Inline (Corresponding_Generic_Association);\n@@ -11887,8 +11877,6 @@ package Sinfo is\n    pragma Inline (From_At_End);\n    pragma Inline (From_At_Mod);\n    pragma Inline (From_Default);\n-   pragma Inline (From_Dynamic_Predicate);\n-   pragma Inline (From_Static_Predicate);\n    pragma Inline (Generic_Associations);\n    pragma Inline (Generic_Formal_Declarations);\n    pragma Inline (Generic_Parent);\n@@ -12136,6 +12124,7 @@ package Sinfo is\n    pragma Inline (Set_Context_Pending);\n    pragma Inline (Set_Controlling_Argument);\n    pragma Inline (Set_Conversion_OK);\n+   pragma Inline (Set_Corresponding_Aspect);\n    pragma Inline (Set_Corresponding_Body);\n    pragma Inline (Set_Corresponding_Formal_Spec);\n    pragma Inline (Set_Corresponding_Generic_Association);\n@@ -12209,8 +12198,6 @@ package Sinfo is\n    pragma Inline (Set_From_At_End);\n    pragma Inline (Set_From_At_Mod);\n    pragma Inline (Set_From_Default);\n-   pragma Inline (Set_From_Dynamic_Predicate);\n-   pragma Inline (Set_From_Static_Predicate);\n    pragma Inline (Set_Generic_Associations);\n    pragma Inline (Set_Generic_Formal_Declarations);\n    pragma Inline (Set_Generic_Parent);"}]}