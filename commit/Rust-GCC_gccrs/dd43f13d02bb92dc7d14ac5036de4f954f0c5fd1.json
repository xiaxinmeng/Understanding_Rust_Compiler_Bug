{"sha": "dd43f13d02bb92dc7d14ac5036de4f954f0c5fd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ0M2YxM2QwMmJiOTJkYzdkMTRhYzUwMzZkZTRmOTU0ZjBjNWZkMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-03T21:36:43Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-03T21:36:43Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r674", "tree": {"sha": "eca39a8e7b61973fbd898cc5ef1fdde6ef679152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eca39a8e7b61973fbd898cc5ef1fdde6ef679152"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd43f13d02bb92dc7d14ac5036de4f954f0c5fd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd43f13d02bb92dc7d14ac5036de4f954f0c5fd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd43f13d02bb92dc7d14ac5036de4f954f0c5fd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd43f13d02bb92dc7d14ac5036de4f954f0c5fd1/comments", "author": null, "committer": null, "parents": [{"sha": "091ad0b9f0f67237bef138fc4a748fd3fc4f0122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091ad0b9f0f67237bef138fc4a748fd3fc4f0122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091ad0b9f0f67237bef138fc4a748fd3fc4f0122"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "ab3591d25c91b41504e20a0c34ed9ea37cfcb526", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd43f13d02bb92dc7d14ac5036de4f954f0c5fd1/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd43f13d02bb92dc7d14ac5036de4f954f0c5fd1/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=dd43f13d02bb92dc7d14ac5036de4f954f0c5fd1", "patch": "@@ -1914,6 +1914,9 @@ output_constant_def (exp)\n   TREE_CST_RTL (exp)\n     = gen_rtx (MEM, TYPE_MODE (TREE_TYPE (exp)), def);\n   RTX_UNCHANGING_P (TREE_CST_RTL (exp)) = 1;\n+  if (TREE_CODE (TREE_TYPE (exp)) == RECORD_TYPE\n+      || TREE_CODE (TREE_TYPE (exp)) == ARRAY_TYPE)\n+    MEM_IN_STRUCT_P (TREE_CST_RTL (exp)) = 1;\n \n   pop_obstacks ();\n "}]}