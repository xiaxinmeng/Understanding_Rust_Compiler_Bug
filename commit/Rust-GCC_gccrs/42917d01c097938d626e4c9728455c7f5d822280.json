{"sha": "42917d01c097938d626e4c9728455c7f5d822280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI5MTdkMDFjMDk3OTM4ZDYyNmU0Yzk3Mjg0NTVjN2Y1ZDgyMjI4MA==", "commit": {"author": {"name": "Yufeng Zhang", "email": "yufeng.zhang@arm.com", "date": "2013-10-25T17:25:08Z"}, "committer": {"name": "Yufeng Zhang", "email": "yufeng@gcc.gnu.org", "date": "2013-10-25T17:25:08Z"}, "message": "tree-ssa-math-opts.c (convert_plusminus_to_widen): Call has_single_use () and not do the conversion if...\n\ngcc/\n\n\t* tree-ssa-math-opts.c (convert_plusminus_to_widen): Call\n\thas_single_use () and not do the conversion if has_single_use ()\n\treturns false for the multiplication result.\n\ngcc/testsuite/\n\n\t* gcc.dg/wmul-1.c: New test.\n\nFrom-SVN: r204072", "tree": {"sha": "accdc86c368a7cdb19555cc714cf66b2b7c88f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/accdc86c368a7cdb19555cc714cf66b2b7c88f27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42917d01c097938d626e4c9728455c7f5d822280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42917d01c097938d626e4c9728455c7f5d822280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42917d01c097938d626e4c9728455c7f5d822280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42917d01c097938d626e4c9728455c7f5d822280/comments", "author": null, "committer": null, "parents": [{"sha": "b02ef56d8d792059f39bef1d9b853d9a2af0aa3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b02ef56d8d792059f39bef1d9b853d9a2af0aa3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b02ef56d8d792059f39bef1d9b853d9a2af0aa3b"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "8b5eec842be22d934230537fc157fb80d02d4d94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42917d01c097938d626e4c9728455c7f5d822280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42917d01c097938d626e4c9728455c7f5d822280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42917d01c097938d626e4c9728455c7f5d822280", "patch": "@@ -1,3 +1,9 @@\n+2013-10-25  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\t* tree-ssa-math-opts.c (convert_plusminus_to_widen): Call\n+\thas_single_use () and not do the conversion if has_single_use ()\n+\treturns false for the multiplication result.\n+\n 2013-10-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* tree.h (EXCEPTIONAL_CLASS_P): Rename parameter from \"CODE\""}, {"sha": "3c27fcc371dee39ec1ee7d2f1c13653d13501687", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42917d01c097938d626e4c9728455c7f5d822280/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42917d01c097938d626e4c9728455c7f5d822280/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42917d01c097938d626e4c9728455c7f5d822280", "patch": "@@ -1,3 +1,7 @@\n+2013-10-25  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\t* gcc.dg/wmul-1.c: New test.\n+\n 2013-10-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58878"}, {"sha": "3e762f4c18c652a350a80afeb98cbcb2a2a66495", "filename": "gcc/testsuite/gcc.dg/wmul-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42917d01c097938d626e4c9728455c7f5d822280/gcc%2Ftestsuite%2Fgcc.dg%2Fwmul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42917d01c097938d626e4c9728455c7f5d822280/gcc%2Ftestsuite%2Fgcc.dg%2Fwmul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwmul-1.c?ref=42917d01c097938d626e4c9728455c7f5d822280", "patch": "@@ -0,0 +1,19 @@\n+/* Not to fuse widening multiply with accumulate if the multiply has more than\n+   one uses.\n+   Note that for targets where pointer and int are of the same size or\n+   widening multiply-and-accumulate is not available, this test just passes.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-widening_mul\" } */\n+\n+typedef int ArrT [10][10];\n+\n+void\n+foo (ArrT Arr, int Idx)\n+{\n+  Arr[Idx][Idx] = 1;\n+  Arr[Idx + 10][Idx] = 2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"WIDEN_MULT_PLUS_EXPR\" \"widening_mul\" } } */\n+/* { dg-final { cleanup-tree-dump \"widening_mul\" } } */"}, {"sha": "9a2941119458621408aa1e6a7d40fbed14a7e97c", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42917d01c097938d626e4c9728455c7f5d822280/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42917d01c097938d626e4c9728455c7f5d822280/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=42917d01c097938d626e4c9728455c7f5d822280", "patch": "@@ -2432,20 +2432,25 @@ convert_plusminus_to_widen (gimple_stmt_iterator *gsi, gimple stmt,\n \n      It might also appear that it would be sufficient to use the existing\n      operands of the widening multiply, but that would limit the choice of\n-     multiply-and-accumulate instructions.  */\n+     multiply-and-accumulate instructions.\n+\n+     If the widened-multiplication result has more than one uses, it is\n+     probably wiser not to do the conversion.  */\n   if (code == PLUS_EXPR\n       && (rhs1_code == MULT_EXPR || rhs1_code == WIDEN_MULT_EXPR))\n     {\n-      if (!is_widening_mult_p (rhs1_stmt, &type1, &mult_rhs1,\n-\t\t\t       &type2, &mult_rhs2))\n+      if (!has_single_use (rhs1)\n+\t  || !is_widening_mult_p (rhs1_stmt, &type1, &mult_rhs1,\n+\t\t\t\t  &type2, &mult_rhs2))\n \treturn false;\n       add_rhs = rhs2;\n       conv_stmt = conv1_stmt;\n     }\n   else if (rhs2_code == MULT_EXPR || rhs2_code == WIDEN_MULT_EXPR)\n     {\n-      if (!is_widening_mult_p (rhs2_stmt, &type1, &mult_rhs1,\n-\t\t\t       &type2, &mult_rhs2))\n+      if (!has_single_use (rhs2)\n+\t  || !is_widening_mult_p (rhs2_stmt, &type1, &mult_rhs1,\n+\t\t\t\t  &type2, &mult_rhs2))\n \treturn false;\n       add_rhs = rhs1;\n       conv_stmt = conv2_stmt;"}]}