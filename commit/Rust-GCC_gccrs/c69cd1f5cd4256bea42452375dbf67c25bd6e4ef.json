{"sha": "c69cd1f5cd4256bea42452375dbf67c25bd6e4ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY5Y2QxZjVjZDQyNTZiZWE0MjQ1MjM3NWRiZjY3YzI1YmQ2ZTRlZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-02-20T10:13:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-02-20T10:13:17Z"}, "message": "re PR target/39240 (Invalid sibcall optimization with promoted return types and differing signedness)\n\n\tPR target/39240\n\t* calls.c (expand_call): Clear try_tail_call if caller and callee\n\tdisagree in promotion of function return value.\n\n\t* gcc.c-torture/execute/pr39240.c: New test.\n\nFrom-SVN: r144316", "tree": {"sha": "9126c53d1ae5105c5fed3f5605c764b6e48fc0bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9126c53d1ae5105c5fed3f5605c764b6e48fc0bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd967b22bc9acbf5c77a1a75fc6df199637f55e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd967b22bc9acbf5c77a1a75fc6df199637f55e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd967b22bc9acbf5c77a1a75fc6df199637f55e3"}], "stats": {"total": 147, "additions": 147, "deletions": 0}, "files": [{"sha": "755a35b4648a7c435ebef432fa3c65d98054a0fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c69cd1f5cd4256bea42452375dbf67c25bd6e4ef", "patch": "@@ -1,3 +1,9 @@\n+2009-02-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/39240\n+\t* calls.c (expand_call): Clear try_tail_call if caller and callee\n+\tdisagree in promotion of function return value.\n+\n 2009-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/39175"}, {"sha": "df7481ab4de2fc98d9240e9b38a8fc2f542096ac", "filename": "gcc/calls.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=c69cd1f5cd4256bea42452375dbf67c25bd6e4ef", "patch": "@@ -2333,6 +2333,37 @@ expand_call (tree exp, rtx target, int ignore)\n       || !lang_hooks.decls.ok_for_sibcall (fndecl))\n     try_tail_call = 0;\n \n+  /* Check if caller and callee disagree in promotion of function\n+     return value.  */\n+  if (try_tail_call)\n+    {\n+      enum machine_mode caller_mode, caller_promoted_mode;\n+      enum machine_mode callee_mode, callee_promoted_mode;\n+      int caller_unsignedp, callee_unsignedp;\n+      tree caller_res = DECL_RESULT (current_function_decl);\n+\n+      caller_unsignedp = TYPE_UNSIGNED (TREE_TYPE (caller_res));\n+      caller_mode = caller_promoted_mode = DECL_MODE (caller_res);\n+      callee_unsignedp = TYPE_UNSIGNED (TREE_TYPE (funtype));\n+      callee_mode = callee_promoted_mode = TYPE_MODE (TREE_TYPE (funtype));\n+      if (targetm.calls.promote_function_return (TREE_TYPE (current_function_decl)))\n+\tcaller_promoted_mode\n+\t  = promote_mode (TREE_TYPE (caller_res), caller_mode,\n+\t\t\t  &caller_unsignedp, 1);\n+      if (targetm.calls.promote_function_return (funtype))\n+\tcallee_promoted_mode\n+\t  = promote_mode (TREE_TYPE (funtype), callee_mode,\n+\t\t\t  &callee_unsignedp, 1);\n+      if (caller_mode != VOIDmode\n+\t  && (caller_promoted_mode != callee_promoted_mode\n+\t      || ((caller_mode != caller_promoted_mode\n+\t\t   || callee_mode != callee_promoted_mode)\n+\t\t  && (caller_unsignedp != callee_unsignedp\n+\t\t      || GET_MODE_BITSIZE (caller_mode)\n+\t\t\t < GET_MODE_BITSIZE (callee_mode)))))\n+\ttry_tail_call = 0;\n+    }\n+\n   /* Ensure current function's preferred stack boundary is at least\n      what we need.  Stack alignment may also increase preferred stack\n      boundary.  */"}, {"sha": "98242b510d16656bf4c7c61f799d087f1f1b38cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c69cd1f5cd4256bea42452375dbf67c25bd6e4ef", "patch": "@@ -1,3 +1,8 @@\n+2009-02-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/39240\n+\t* gcc.c-torture/execute/pr39240.c: New test.\n+\n 2009-02-20  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/39225"}, {"sha": "de5e2ee70a40c062d0c78c0ccb729ef87ff4026b", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39240.c", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39240.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69cd1f5cd4256bea42452375dbf67c25bd6e4ef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39240.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39240.c?ref=c69cd1f5cd4256bea42452375dbf67c25bd6e4ef", "patch": "@@ -0,0 +1,105 @@\n+/* PR target/39240 */\n+\n+extern void abort (void);\n+\n+__attribute__ ((noinline))\n+static int foo1 (int x)\n+{\n+  return x;\n+}\n+\n+__attribute__ ((noinline))\n+unsigned int bar1 (int x)\n+{\n+  return foo1 (x + 6);\n+}\n+\n+volatile unsigned long l1 = (unsigned int) -4;\n+\n+__attribute__ ((noinline))\n+static short int foo2 (int x)\n+{\n+  return x;\n+}\n+\n+__attribute__ ((noinline))\n+unsigned short int bar2 (int x)\n+{\n+  return foo2 (x + 6);\n+}\n+\n+volatile unsigned long l2 = (unsigned short int) -4;\n+\n+__attribute__ ((noinline))\n+static signed char foo3 (int x)\n+{\n+  return x;\n+}\n+\n+__attribute__ ((noinline))\n+unsigned char bar3 (int x)\n+{\n+  return foo3 (x + 6);\n+}\n+\n+volatile unsigned long l3 = (unsigned char) -4;\n+\n+__attribute__ ((noinline))\n+static unsigned int foo4 (int x)\n+{\n+  return x;\n+}\n+\n+__attribute__ ((noinline))\n+int bar4 (int x)\n+{\n+  return foo4 (x + 6);\n+}\n+\n+volatile unsigned long l4 = (int) -4;\n+\n+__attribute__ ((noinline))\n+static unsigned short int foo5 (int x)\n+{\n+  return x;\n+}\n+\n+__attribute__ ((noinline))\n+short int bar5 (int x)\n+{\n+  return foo5 (x + 6);\n+}\n+\n+volatile unsigned long l5 = (short int) -4;\n+\n+__attribute__ ((noinline))\n+static unsigned char foo6 (int x)\n+{\n+  return x;\n+}\n+\n+__attribute__ ((noinline))\n+signed char bar6 (int x)\n+{\n+  return foo6 (x + 6);\n+}\n+\n+volatile unsigned long l6 = (signed char) -4;\n+\n+int\n+main (void)\n+{\n+  if (bar1 (-10) != l1)\n+    abort ();\n+  if (bar2 (-10) != l2)\n+    abort ();\n+  if (bar3 (-10) != l3)\n+    abort ();\n+  if (bar4 (-10) != l4)\n+    abort ();\n+  if (bar5 (-10) != l5)\n+    abort ();\n+  if (bar6 (-10) != l6)\n+    abort ();\n+  return 0;\n+}"}]}