{"sha": "ed7278d98e4727a7def30ab91fcef4658e34baa4", "node_id": "C_kwDOANBUbNoAKGVkNzI3OGQ5OGU0NzI3YTdkZWYzMGFiOTFmY2VmNDY1OGUzNGJhYTQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-10-06T09:14:48Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-10-06T09:15:49Z"}, "message": "git_update_version: add robust logging\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_update_version.py: Use logging module\n\tand provide robust debugging output.", "tree": {"sha": "a0ca844931b62ac7e319da319a16e2f8917066f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0ca844931b62ac7e319da319a16e2f8917066f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed7278d98e4727a7def30ab91fcef4658e34baa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7278d98e4727a7def30ab91fcef4658e34baa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed7278d98e4727a7def30ab91fcef4658e34baa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7278d98e4727a7def30ab91fcef4658e34baa4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c01e3a07531b9d4de4777d0cbc04763c5f81aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c01e3a07531b9d4de4777d0cbc04763c5f81aa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c01e3a07531b9d4de4777d0cbc04763c5f81aa3"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "36995d2520ba0a21ddb84976cbb485b77b75ff1a", "filename": "contrib/gcc-changelog/git_update_version.py", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7278d98e4727a7def30ab91fcef4658e34baa4/contrib%2Fgcc-changelog%2Fgit_update_version.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7278d98e4727a7def30ab91fcef4658e34baa4/contrib%2Fgcc-changelog%2Fgit_update_version.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_update_version.py?ref=ed7278d98e4727a7def30ab91fcef4658e34baa4", "patch": "@@ -18,6 +18,7 @@\n \n import argparse\n import datetime\n+import logging\n import os\n \n from git import Repo\n@@ -34,6 +35,13 @@\n         '3ab5c8cd03d92bf4ec41e351820349d92fbc40c4',\n         '86d8e0c0652ef5236a460b75c25e4f7093cc0651')\n \n+FORMAT = '%(asctime)s:%(levelname)s:%(name)s:%(message)s'\n+logging.basicConfig(level=logging.INFO, format=FORMAT,\n+                    handlers=[\n+                        logging.FileHandler('/tmp/git_update_version.txt'),\n+                        logging.StreamHandler()\n+                    ])\n+\n \n def read_timestamp(path):\n     with open(path) as f:\n@@ -43,11 +51,11 @@ def read_timestamp(path):\n def prepend_to_changelog_files(repo, folder, git_commit, add_to_git):\n     if not git_commit.success:\n         for error in git_commit.errors:\n-            print(error)\n+            logging.info(error)\n         raise AssertionError()\n     for entry, output in git_commit.to_changelog_entries(use_commit_ts=True):\n         full_path = os.path.join(folder, entry, 'ChangeLog')\n-        print('writing to %s' % full_path)\n+        logging.info('writing to %s' % full_path)\n         if os.path.exists(full_path):\n             with open(full_path) as f:\n                 content = f.read()\n@@ -95,7 +103,7 @@ def update_current_branch(ref_name):\n         commit = commit.parents[-1]\n         commit_count += 1\n \n-    print('%d revisions since last Daily bump' % commit_count)\n+    logging.info('%d revisions since last Daily bump' % commit_count)\n     datestamp_path = os.path.join(args.git_path, 'gcc/DATESTAMP')\n     if (read_timestamp(datestamp_path) != current_timestamp\n             or args.dry_mode or args.current):\n@@ -117,26 +125,29 @@ def update_current_branch(ref_name):\n                                  branch.name.split('/')[-1] + '.patch')\n             with open(patch, 'w+') as f:\n                 f.write(diff)\n-            print('branch diff written to %s' % patch)\n+            logging.info('branch diff written to %s' % patch)\n             repo.git.checkout(force=True)\n         else:\n             # update timestamp\n-            print('DATESTAMP will be changed:')\n+            logging.info('DATESTAMP will be changed:')\n             with open(datestamp_path, 'w+') as f:\n                 f.write(current_timestamp)\n             repo.git.add(datestamp_path)\n             if not args.current:\n                 repo.index.commit('Daily bump.')\n                 origin.fetch()\n                 if args.push:\n-                    repo.git.push('origin', branch)\n-                    print('branch is pushed')\n+                    try:\n+                        repo.git.push('origin', branch)\n+                        logging.info('branch is pushed')\n+                    except Exception:\n+                        logging.exception('git push failed')\n     else:\n-        print('DATESTAMP unchanged')\n+        logging.info('DATESTAMP unchanged')\n \n \n if args.current:\n-    print('=== Working on the current branch ===', flush=True)\n+    logging.info('=== Working on the current branch ===')\n     update_current_branch()\n else:\n     for ref in origin.refs:\n@@ -147,10 +158,11 @@ def update_current_branch(ref_name):\n                 branch = repo.branches[name]\n             else:\n                 branch = repo.create_head(name, ref).set_tracking_branch(ref)\n-            print('=== Working on: %s ===' % branch, flush=True)\n+            logging.info('=== Working on: %s ===' % branch)\n             branch.checkout()\n             origin.pull(rebase=True)\n-            print('branch pulled and checked out', flush=True)\n+            logging.info('branch pulled and checked out')\n             update_current_branch(name)\n             assert not repo.index.diff(None)\n-            print('branch is done\\n', flush=True)\n+            logging.info('branch is done')\n+            logging.info('')"}]}