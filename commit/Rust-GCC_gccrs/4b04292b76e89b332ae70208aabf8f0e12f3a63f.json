{"sha": "4b04292b76e89b332ae70208aabf8f0e12f3a63f", "node_id": "C_kwDOANBUbNoAKDRiMDQyOTJiNzZlODliMzMyYWU3MDIwOGFhYmY4ZjBlMTJmM2E2M2Y", "commit": {"author": {"name": "J\u00f8rgen Kvalsvik", "email": "jorgen.kvalsvik@woven-planet.global", "date": "2022-10-04T13:45:59Z"}, "committer": {"name": "J\u00f8rgen Kvalsvik", "email": "jorgen.kvalsvik@woven-planet.global", "date": "2022-10-14T08:46:27Z"}, "message": "gcov: test switch/break line counts\n\nThe coverage support will under some conditions decide to split edges to\naccurately report coverage. By running the test suite with/without this\nedge splitting a small diff shows up, addressed by this patch, which\nshould catch future regressions.\n\nRemoving the edge splitting:\n\n$\u00a0diff --git a/gcc/profile.cc b/gcc/profile.cc\n--- a/gcc/profile.cc\n+++ b/gcc/profile.cc\n@@ -1244,19 +1244,7 @@ branch_prob (bool thunk)\n                Don't do that when the locuses match, so\n                if (blah) goto something;\n                is not computed twice.  */\n-             if (last\n-                 && gimple_has_location (last)\n-                 && !RESERVED_LOCATION_P (e->goto_locus)\n-                 && !single_succ_p (bb)\n-                 && (LOCATION_FILE (e->goto_locus)\n-                     != LOCATION_FILE (gimple_location (last))\n-                     || (LOCATION_LINE (e->goto_locus)\n-                         != LOCATION_LINE (gimple_location (last)))))\n-               {\n-                 basic_block new_bb = split_edge (e);\n-                 edge ne = single_succ_edge (new_bb);\n-                 ne->goto_locus = e->goto_locus;\n-               }\n+\n        if ((e->flags & (EDGE_ABNORMAL | EDGE_ABNORMAL_CALL))\n                && e->dest != EXIT_BLOCK_PTR_FOR_FN (cfun))\n                need_exit_edge = 1;\n\nAssuming the .gcov files from make chec-gcc RUNTESTFLAGS=gcov.exp are\nkept:\n\n$ diff -r no-split-edge with-split-edge | grep -C 2 -E \"^[<>]\\s\\s\"\ndiff -r sans-split-edge/gcc/gcov-4.c.gcov with-split-edge/gcc/gcov-4.c.gcov\n   228c228\n   <         -:  224:        break;\n   ---\n   >         1:  224:        break;\n   231c231\n   <         -:  227:        break;\n   ---\n   >     #####:  227:        break;\n   237c237\n   <         -:  233:        break;\n   ---\n   >         2:  233:        break;\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/gcov/gcov-1.C: Add line count check.\n\t* gcc.misc-tests/gcov-4.c: Likewise.", "tree": {"sha": "e7e6f80b1da677091b901e7d9615de2714159d25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7e6f80b1da677091b901e7d9615de2714159d25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b04292b76e89b332ae70208aabf8f0e12f3a63f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b04292b76e89b332ae70208aabf8f0e12f3a63f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b04292b76e89b332ae70208aabf8f0e12f3a63f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b04292b76e89b332ae70208aabf8f0e12f3a63f/comments", "author": null, "committer": null, "parents": [{"sha": "c2565a31c1622ab0926aeef4a6579413e121b9f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2565a31c1622ab0926aeef4a6579413e121b9f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2565a31c1622ab0926aeef4a6579413e121b9f9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ee383b480a877beffa8ed37c3463c60fa784fa9b", "filename": "gcc/testsuite/g++.dg/gcov/gcov-1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b04292b76e89b332ae70208aabf8f0e12f3a63f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b04292b76e89b332ae70208aabf8f0e12f3a63f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-1.C?ref=4b04292b76e89b332ae70208aabf8f0e12f3a63f", "patch": "@@ -257,20 +257,20 @@ test_switch (int i, int j)\n   switch (i)\t\t\t\t/* count(5) */\n \t\t\t\t\t/* branch(end) */\n     {\n-      case 1:\n+      case 1:\t\t\t\t/* count(1) */\n         result = do_something (2);\t/* count(1) */\n-        break;\n+        break;\t\t\t\t/* count(1) */\n       case 2:\n         result = do_something (1024);\n         break;\n-      case 3:\n+      case 3:\t\t\t\t/* count(3) */\n       case 4:\n \t\t\t\t\t/* branch(67) */\n         if (j == 2)\t\t\t/* count(3) */\n \t\t\t\t\t/* branch(end) */\n           return do_something (4);\t/* count(1) */\n         result = do_something (8);\t/* count(2) */\n-        break;\n+        break;\t\t\t\t/* count(2) */\n       default:\n \tresult = do_something (32);\t/* count(1) */\n \tswitch_m++;\t\t\t/* count(1) */"}, {"sha": "498d299b66b0853d1dabdf09056537a8879791a4", "filename": "gcc/testsuite/gcc.misc-tests/gcov-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b04292b76e89b332ae70208aabf8f0e12f3a63f/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b04292b76e89b332ae70208aabf8f0e12f3a63f/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c?ref=4b04292b76e89b332ae70208aabf8f0e12f3a63f", "patch": "@@ -221,7 +221,7 @@ test_switch (int i, int j)\n     {\n       case 1:\n         result = do_something (2);\t/* count(1) */\n-        break;\n+        break;\t\t\t\t/* count(1) */\n       case 2:\n         result = do_something (1024);\n         break;\n@@ -230,7 +230,7 @@ test_switch (int i, int j)\n         if (j == 2)\t\t\t/* count(3) */\n           return do_something (4);\t/* count(1) */\n         result = do_something (8);\t/* count(2) */\n-        break;\n+        break;\t\t\t\t/* count(2) */\n       default:\n \tresult = do_something (32);\t/* count(1) */\n \tswitch_m++;\t\t\t/* count(1) */"}]}