{"sha": "847dde9555b9dc852d1de2678c99496b498446cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3ZGRlOTU1NWI5ZGM4NTJkMWRlMjY3OGM5OTQ5NmI0OTg0NDZjYw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.co.uk", "date": "2000-11-21T18:24:42Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2000-11-21T18:24:42Z"}, "message": "Fix consec_sets_giv bug.\n\nFrom-SVN: r37619", "tree": {"sha": "0913464a1a9ecbc93c4ce65df7c7a2820085f4b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0913464a1a9ecbc93c4ce65df7c7a2820085f4b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/847dde9555b9dc852d1de2678c99496b498446cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847dde9555b9dc852d1de2678c99496b498446cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/847dde9555b9dc852d1de2678c99496b498446cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847dde9555b9dc852d1de2678c99496b498446cc/comments", "author": null, "committer": null, "parents": [{"sha": "ce79b0cace170a63c38c41e35d1f44b54043ffb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce79b0cace170a63c38c41e35d1f44b54043ffb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce79b0cace170a63c38c41e35d1f44b54043ffb7"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "3ac3a3fb3a3ed07ebe6048609d6039489f30eb17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847dde9555b9dc852d1de2678c99496b498446cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847dde9555b9dc852d1de2678c99496b498446cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=847dde9555b9dc852d1de2678c99496b498446cc", "patch": "@@ -1,5 +1,9 @@\n 2000-11-21  Bernd Schmidt  <bernds@redhat.co.uk>\n \n+\t* loop.c (consec_sets_giv): If the reg we're examining is anything\n+\tbut UNKNOWN_INDUCT, do nothing.\n+\tReset the reg's type to UNKNOWN_INDUCT before returning.\n+\n \tMostly from Vladimir Makarov (vmakarov@redhat.com)\n \t* ia64.md (attr itanium_class): Define insn types as described in\n \tItanium docs."}, {"sha": "a514d051113f539d06fb0d7eab6b24d8ef5c0f3b", "filename": "gcc/loop.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847dde9555b9dc852d1de2678c99496b498446cc/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847dde9555b9dc852d1de2678c99496b498446cc/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=847dde9555b9dc852d1de2678c99496b498446cc", "patch": "@@ -6203,8 +6203,12 @@ consec_sets_giv (loop, first_benefit, p, src_reg, dest_reg,\n      general_induction_var below, so we can allocate it on our stack.\n      If this is a giv, our caller will replace the induct var entry with\n      a new induction structure.  */\n-  struct induction *v\n-    = (struct induction *) alloca (sizeof (struct induction));\n+  struct induction *v;\n+\n+  if (REG_IV_TYPE (ivs, REGNO (dest_reg)) != UNKNOWN_INDUCT)\n+    return 0;\n+\n+  v = (struct induction *) alloca (sizeof (struct induction));\n   v->src_reg = src_reg;\n   v->mult_val = *mult_val;\n   v->add_val = *add_val;\n@@ -6265,6 +6269,7 @@ consec_sets_giv (loop, first_benefit, p, src_reg, dest_reg,\n \t}\n     }\n \n+  REG_IV_TYPE (ivs, REGNO (dest_reg)) = UNKNOWN_INDUCT;\n   *last_consec_insn = p;\n   return v->benefit;\n }"}]}