{"sha": "4bfb35fdce6264b9b711fe70474746fed9dcdfb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJmYjM1ZmRjZTYyNjRiOWI3MTFmZTcwNDc0NzQ2ZmVkOWRjZGZiMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-16T10:29:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-16T10:29:00Z"}, "message": "[multiple changes]\n\n2016-06-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (May_Be_Lvalue): An actual in an unexpanded\n\tattribute reference 'Read is an assignment and must be considered\n\ta modification of the object.\n\n2016-06-16  Gary Dismukes  <dismukes@adacore.com>\n\n\t* einfo.adb: Minor editorial.\n\nFrom-SVN: r237517", "tree": {"sha": "b16e64c009486a9a7e1e1dbe9667bfffa879cb3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b16e64c009486a9a7e1e1dbe9667bfffa879cb3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bfb35fdce6264b9b711fe70474746fed9dcdfb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfb35fdce6264b9b711fe70474746fed9dcdfb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bfb35fdce6264b9b711fe70474746fed9dcdfb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfb35fdce6264b9b711fe70474746fed9dcdfb1/comments", "author": null, "committer": null, "parents": [{"sha": "d1b83e6253d01de1e917f2f32a0142a765e9be5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b83e6253d01de1e917f2f32a0142a765e9be5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1b83e6253d01de1e917f2f32a0142a765e9be5b"}], "stats": {"total": 56, "additions": 39, "deletions": 17}, "files": [{"sha": "6cf68c482eb29023c8b6aba93bc0d471922dd207", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb35fdce6264b9b711fe70474746fed9dcdfb1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb35fdce6264b9b711fe70474746fed9dcdfb1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4bfb35fdce6264b9b711fe70474746fed9dcdfb1", "patch": "@@ -1,3 +1,13 @@\n+2016-06-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (May_Be_Lvalue): An actual in an unexpanded\n+\tattribute reference 'Read is an assignment and must be considered\n+\ta modification of the object.\n+\n+2016-06-16  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* einfo.adb: Minor editorial.\n+\n 2016-06-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_prag.adb (Overridden_Ancestor): Clean up code to use"}, {"sha": "d0d230215f6edd72d519649e84b0dda51a50223b", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb35fdce6264b9b711fe70474746fed9dcdfb1/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb35fdce6264b9b711fe70474746fed9dcdfb1/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=4bfb35fdce6264b9b711fe70474746fed9dcdfb1", "patch": "@@ -8567,7 +8567,7 @@ package body Einfo is\n       Subp_Id  : Entity_Id;\n \n    begin\n-      --  Once set this attribute it cannot be reset\n+      --  Once set, this attribute cannot be reset\n \n       if No (V) then\n          pragma Assert (No (Default_Init_Cond_Procedure (Id)));"}, {"sha": "9e2aba4dab2a92b0c8e01a83be67870976a5fd10", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb35fdce6264b9b711fe70474746fed9dcdfb1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb35fdce6264b9b711fe70474746fed9dcdfb1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4bfb35fdce6264b9b711fe70474746fed9dcdfb1", "patch": "@@ -1231,12 +1231,16 @@ package body Sem_Util is\n          pragma Assert (Has_Default_Init_Cond (Typ));\n          pragma Assert (Present (Prag));\n \n-         --  No action needed if the spec was not built or if the body was\n-         --  already built.\n+         --  Nothing to do if the slec was not built. This occurs when the\n+         --  expression of the Default_Initial_Condition is missing or is\n+         --  null.\n \n-         if No (Proc_Id)\n-           or else\n-             Present (Corresponding_Body (Unit_Declaration_Node (Proc_Id)))\n+         if No (Proc_Id) then\n+            return;\n+\n+         --  Nothing to do if the body was already built\n+\n+         elsif Present (Corresponding_Body (Unit_Declaration_Node (Proc_Id)))\n          then\n             return;\n          end if;\n@@ -1368,6 +1372,7 @@ package body Sem_Util is\n \n       Save_Ghost_Mode : constant Ghost_Mode_Type := Ghost_Mode;\n \n+      Args    : List_Id;\n       Proc_Id : Entity_Id;\n \n    begin\n@@ -1378,20 +1383,23 @@ package body Sem_Util is\n       pragma Assert (Has_Default_Init_Cond (Typ));\n       pragma Assert (Present (Prag));\n \n+      Args := Pragma_Argument_Associations (Prag);\n+\n       --  Nothing to do if default initial condition procedure already built\n \n       if Present (Default_Init_Cond_Procedure (Typ)) then\n          return;\n \n-      --  The procedure must not be generated when DIC has one of these two\n-      --  forms: 1. Default_Initial_Condition => null\n-      --         2. Default_Initial_Condition\n+      --  Nothing to do if the default initial condition appears without an\n+      --  expression.\n \n-      elsif No (Pragma_Argument_Associations (Prag))\n-        or else\n-          Nkind (Get_Pragma_Arg (First (Pragma_Argument_Associations (Prag))))\n-            = N_Null\n-      then\n+      elsif No (Args) then\n+         return;\n+\n+      --  Nothing to do if the expression of the default initial condition is\n+      --  null.\n+\n+      elsif Nkind (Get_Pragma_Arg (First (Args))) = N_Null then\n          return;\n       end if;\n \n@@ -15744,11 +15752,15 @@ package body Sem_Util is\n             return N = Name (P);\n \n          --  Test prefix of component or attribute. Note that the prefix of an\n-         --  explicit or implicit dereference cannot be an l-value.\n+         --  explicit or implicit dereference cannot be an l-value. In the case\n+         --  of a 'Read attribute, the reference can be an actual in the\n+         --  argument list of the attribute.\n \n          when N_Attribute_Reference =>\n-            return N = Prefix (P)\n-              and then Name_Implies_Lvalue_Prefix (Attribute_Name (P));\n+            return (N = Prefix (P)\n+                     and then Name_Implies_Lvalue_Prefix (Attribute_Name (P)))\n+                 or else\n+                   Attribute_Name (P) = Name_Read;\n \n          --  For an expanded name, the name is an lvalue if the expanded name\n          --  is an lvalue, but the prefix is never an lvalue, since it is just"}]}