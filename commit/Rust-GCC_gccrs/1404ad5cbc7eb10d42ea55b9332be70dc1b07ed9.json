{"sha": "1404ad5cbc7eb10d42ea55b9332be70dc1b07ed9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQwNGFkNWNiYzdlYjEwZDQyZWE1NWI5MzMyYmU3MGRjMWIwN2VkOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-18T02:08:55Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-18T02:08:55Z"}, "message": "Another haifa typo.\n\nFrom-SVN: r14828", "tree": {"sha": "e231776100b56524b4e16b8a2e1d318a6be97b5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e231776100b56524b4e16b8a2e1d318a6be97b5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1404ad5cbc7eb10d42ea55b9332be70dc1b07ed9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1404ad5cbc7eb10d42ea55b9332be70dc1b07ed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1404ad5cbc7eb10d42ea55b9332be70dc1b07ed9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1404ad5cbc7eb10d42ea55b9332be70dc1b07ed9/comments", "author": null, "committer": null, "parents": [{"sha": "4e9633f00b5cde065659d7a9de19fbd4d92a22ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9633f00b5cde065659d7a9de19fbd4d92a22ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e9633f00b5cde065659d7a9de19fbd4d92a22ad"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "90bc53320b8a399e1163a3600723fc6b09b98ccd", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1404ad5cbc7eb10d42ea55b9332be70dc1b07ed9/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1404ad5cbc7eb10d42ea55b9332be70dc1b07ed9/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=1404ad5cbc7eb10d42ea55b9332be70dc1b07ed9", "patch": "@@ -7300,7 +7300,7 @@ insert_bct (loop_start, loop_end)\n      This check is repeated from analyze_loop_iterations (),\n      because unrolling might have changed that.  */\n   if (GET_CODE (PREV_INSN (loop_end)) != JUMP_INSN\n-      || !is_condjump_p (PREV_INSN (loop_end))) {\n+      || !condjump_p (PREV_INSN (loop_end))) {\n     if (loop_dump_stream)\n       fprintf (loop_dump_stream,\n \t      \"insert_bct: not instrumenting BCT because of invalid branch\\n\");"}]}