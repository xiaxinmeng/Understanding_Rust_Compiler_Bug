{"sha": "9ef8069a0cc1e5071ca40a5685247b56be5a68d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmODA2OWEwY2MxZTUwNzFjYTQwYTU2ODUyNDdiNTZiZTVhNjhkNA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-11-18T14:44:54Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-11-18T14:44:54Z"}, "message": "ifcvt.c (find_if_block): Move the check for the number of edges above the loops checking for complex edges.\n\n2004-11-18  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * ifcvt.c (find_if_block): Move the check for the number of edges\n        above the loops checking for complex edges.\n        Remove the counting of edges as we use EDGE_COUNT now.\n\nFrom-SVN: r90865", "tree": {"sha": "0b329018e3e258275549531885e8ec4995db2303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b329018e3e258275549531885e8ec4995db2303"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef8069a0cc1e5071ca40a5685247b56be5a68d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef8069a0cc1e5071ca40a5685247b56be5a68d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef8069a0cc1e5071ca40a5685247b56be5a68d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef8069a0cc1e5071ca40a5685247b56be5a68d4/comments", "author": null, "committer": null, "parents": [{"sha": "3afb0820ca3031a93a868e06e42d0ad6c00f116b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3afb0820ca3031a93a868e06e42d0ad6c00f116b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3afb0820ca3031a93a868e06e42d0ad6c00f116b"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "857a5a6aa9826c4b7fcc4cb1b584ee1cbe71275b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef8069a0cc1e5071ca40a5685247b56be5a68d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef8069a0cc1e5071ca40a5685247b56be5a68d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ef8069a0cc1e5071ca40a5685247b56be5a68d4", "patch": "@@ -1,3 +1,9 @@\n+2004-11-18  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* ifcvt.c (find_if_block): Move the check for the number of edges\n+\tabove the loops checking for complex edges.\n+\tRemove the counting of edges as we use EDGE_COUNT now.\n+\n 2004-11-18  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.comn>\n \n \t* config/m32r/linux.h (TARGET_ASM_FILE_END): Set"}, {"sha": "b2275d07610d5a668723598121946ec6592bbd20", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef8069a0cc1e5071ca40a5685247b56be5a68d4/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef8069a0cc1e5071ca40a5685247b56be5a68d4/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=9ef8069a0cc1e5071ca40a5685247b56be5a68d4", "patch": "@@ -2445,8 +2445,6 @@ find_if_block (struct ce_if_block * ce_info)\n   basic_block then_bb = ce_info->then_bb;\n   basic_block else_bb = ce_info->else_bb;\n   basic_block join_bb = NULL_BLOCK;\n-  int then_predecessors;\n-  int else_predecessors;\n   edge cur_edge;\n   basic_block next;\n   edge_iterator ei;\n@@ -2511,28 +2509,24 @@ find_if_block (struct ce_if_block * ce_info)\n \t}\n     }\n \n-  /* Count the number of edges the THEN and ELSE blocks have.  */\n-  then_predecessors = 0;\n+  /* The THEN block of an IF-THEN combo must have exactly one predecessor,\n+     other than any || blocks which jump to the THEN block.  */\n+  if ((EDGE_COUNT (then_bb->preds) - ce_info->num_or_or_blocks) != 1)\n+    return FALSE;\n+    \n+  /* The edges of the THEN and ELSE blocks cannot have complex edges.  */\n   FOR_EACH_EDGE (cur_edge, ei, then_bb->preds)\n     {\n-      then_predecessors++;\n       if (cur_edge->flags & EDGE_COMPLEX)\n \treturn FALSE;\n     }\n \n-  else_predecessors = 0;\n   FOR_EACH_EDGE (cur_edge, ei, else_bb->preds)\n     {\n-      else_predecessors++;\n       if (cur_edge->flags & EDGE_COMPLEX)\n \treturn FALSE;\n     }\n \n-  /* The THEN block of an IF-THEN combo must have exactly one predecessor,\n-     other than any || blocks which jump to the THEN block.  */\n-  if ((then_predecessors - ce_info->num_or_or_blocks) != 1)\n-    return FALSE;\n-\n   /* The THEN block of an IF-THEN combo must have zero or one successors.  */\n   if (EDGE_COUNT (then_bb->succs) > 0\n       && (EDGE_COUNT (then_bb->succs) > 1"}]}