{"sha": "ae7c61dead40c0674b58c676a225ca05cea3ffe8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU3YzYxZGVhZDQwYzA2NzRiNThjNjc2YTIyNWNhMDVjZWEzZmZlOA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-01-17T13:33:11Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-01-17T13:33:11Z"}, "message": "re PR fortran/42677 (Bogus Error: Ambiguous interfaces '...' in intrinsic assignment operator)\n\ngcc/fortran/\n2010-01-17  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42677\n\t* gfortran.h (symbol_attribute): Remove 'ambiguous_interfaces'.\n\t* interface.c (check_interface1): Move a warning message here from\n\tresolve_fl_procedure.\n\t(check_sym_interfaces): Removed 'attr.ambiguous_interfaces'.\n\t* module.c (read_module): Remove call to gfc_check_interfaces, since\n\tthis comes too early here.\n\t* resolve.c (resolve_fl_procedure): Move warning message to\n\tcheck_interface1.\n\ngcc/testsuite/\n2010-01-17  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42677\n\t* gfortran.dg/interface_assignment_5.f90: New test.\n\nFrom-SVN: r155979", "tree": {"sha": "8c1bf05482652f2ce135f68f615e6f5f831954e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c1bf05482652f2ce135f68f615e6f5f831954e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae7c61dead40c0674b58c676a225ca05cea3ffe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae7c61dead40c0674b58c676a225ca05cea3ffe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae7c61dead40c0674b58c676a225ca05cea3ffe8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae7c61dead40c0674b58c676a225ca05cea3ffe8/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8232dc642719b5b19812bffd1ee7f40888a7d328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8232dc642719b5b19812bffd1ee7f40888a7d328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8232dc642719b5b19812bffd1ee7f40888a7d328"}], "stats": {"total": 95, "additions": 75, "deletions": 20}, "files": [{"sha": "b2741b155925beb77aa22dc448818b434945d510", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ae7c61dead40c0674b58c676a225ca05cea3ffe8", "patch": "@@ -1,3 +1,15 @@\n+2010-01-17  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42677\n+\t* gfortran.h (symbol_attribute): Remove 'ambiguous_interfaces'.\n+\t* interface.c (check_interface1): Move a warning message here from\n+\tresolve_fl_procedure.\n+\t(check_sym_interfaces): Removed 'attr.ambiguous_interfaces'.\n+\t* module.c (read_module): Remove call to gfc_check_interfaces, since\n+\tthis comes too early here.\n+\t* resolve.c (resolve_fl_procedure): Move warning message to\n+\tcheck_interface1.\n+\n 2010-01-14 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/42684"}, {"sha": "320de835ce27a542709e16362240c961d86e67ad", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=ae7c61dead40c0674b58c676a225ca05cea3ffe8", "patch": "@@ -714,9 +714,6 @@ typedef struct\n      modification of type or type parameters is permitted.  */\n   unsigned referenced:1;\n \n-  /* Set if the symbol has ambiguous interfaces.  */\n-  unsigned ambiguous_interfaces:1;\n-\n   /* Set if this is the symbol for the main program.  */\n   unsigned is_main_program:1;\n "}, {"sha": "f27d75c333fe65bd5f8cbfef1182004da5b0bc40", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=ae7c61dead40c0674b58c676a225ca05cea3ffe8", "patch": "@@ -1132,16 +1132,16 @@ check_interface1 (gfc_interface *p, gfc_interface *q0,\n \t\t\t\t    NULL, 0))\n \t  {\n \t    if (referenced)\n-\t      {\n-\t\tgfc_error (\"Ambiguous interfaces '%s' and '%s' in %s at %L\",\n-\t\t\t   p->sym->name, q->sym->name, interface_name,\n-\t\t\t   &p->where);\n-\t      }\n-\n-\t    if (!p->sym->attr.use_assoc && q->sym->attr.use_assoc)\n+\t      gfc_error (\"Ambiguous interfaces '%s' and '%s' in %s at %L\",\n+\t\t\t p->sym->name, q->sym->name, interface_name,\n+\t\t\t &p->where);\n+\t    else if (!p->sym->attr.use_assoc && q->sym->attr.use_assoc)\n \t      gfc_warning (\"Ambiguous interfaces '%s' and '%s' in %s at %L\",\n \t\t\t   p->sym->name, q->sym->name, interface_name,\n \t\t\t   &p->where);\n+\t    else\n+\t      gfc_warning (\"Although not referenced, '%s' has ambiguous \"\n+\t\t\t   \"interfaces at %L\", interface_name, &p->where);\n \t    return 1;\n \t  }\n       }\n@@ -1157,7 +1157,6 @@ static void\n check_sym_interfaces (gfc_symbol *sym)\n {\n   char interface_name[100];\n-  bool k;\n   gfc_interface *p;\n \n   if (sym->ns != gfc_current_ns)\n@@ -1184,9 +1183,8 @@ check_sym_interfaces (gfc_symbol *sym)\n       /* Originally, this test was applied to host interfaces too;\n \t this is incorrect since host associated symbols, from any\n \t source, cannot be ambiguous with local symbols.  */\n-      k = sym->attr.referenced || !sym->attr.use_assoc;\n-      if (check_interface1 (sym->generic, sym->generic, 1, interface_name, k))\n-\tsym->attr.ambiguous_interfaces = 1;\n+      check_interface1 (sym->generic, sym->generic, 1, interface_name,\n+\t\t\tsym->attr.referenced || !sym->attr.use_assoc);\n     }\n }\n "}, {"sha": "13c9b8293221901ae128b94261673f0372ec1195", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=ae7c61dead40c0674b58c676a225ca05cea3ffe8", "patch": "@@ -4482,8 +4482,6 @@ read_module (void)\n \t\t module_name);\n     }\n \n-  gfc_check_interfaces (gfc_current_ns);\n-\n   /* Now we should be in a position to fill f2k_derived with derived type\n      extensions, since everything has been loaded.  */\n   set_module_locus (&extensions);"}, {"sha": "6bc5fde020bfe4815529d68d7ba07df8c4f9754a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ae7c61dead40c0674b58c676a225ca05cea3ffe8", "patch": "@@ -9077,10 +9077,6 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n {\n   gfc_formal_arglist *arg;\n \n-  if (sym->attr.ambiguous_interfaces && !sym->attr.referenced)\n-    gfc_warning (\"Although not referenced, '%s' at %L has ambiguous \"\n-\t\t \"interfaces\", sym->name, &sym->declared_at);\n-\n   if (sym->attr.function\n       && resolve_fl_var_and_proc (sym, mp_flag) == FAILURE)\n     return FAILURE;"}, {"sha": "f92f6c55d075606bd2b30c6548f166b0e73146cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae7c61dead40c0674b58c676a225ca05cea3ffe8", "patch": "@@ -1,3 +1,8 @@\n+2010-01-17  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42677\n+\t* gfortran.dg/interface_assignment_5.f90: New test.\n+\n 2010-01-17  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42697"}, {"sha": "8444dd0847ebb53dbf77c6bcc3e9b026d82f86de", "filename": "gcc/testsuite/gfortran.dg/interface_assignment_5.f90", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_assignment_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7c61dead40c0674b58c676a225ca05cea3ffe8/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_assignment_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_assignment_5.f90?ref=ae7c61dead40c0674b58c676a225ca05cea3ffe8", "patch": "@@ -0,0 +1,49 @@\n+! { dg-do compile }\n+!\n+! PR 42677: [4.5 Regression] Bogus Error: Ambiguous interfaces '...' in intrinsic assignment operator\n+!\n+! Contributed by Harald Anlauf <anlauf@gmx.de>\n+\n+module mod1\n+  implicit none\n+  type t_m\n+     integer :: i = 0\n+  end type t_m\n+!------------------------------------------------------------------------------\n+  interface assignment (=)\n+     module procedure assign_m\n+  end interface\n+!------------------------------------------------------------------------------\n+contains\n+  subroutine assign_m (y, x)\n+    type(t_m) ,intent(inout) :: y\n+    type(t_m) ,intent(in)    :: x\n+  end subroutine assign_m\n+end module mod1\n+!==============================================================================\n+module mod2\n+  use mod1, only: t_m, assignment(=)\n+  implicit none\n+  type t_atm\n+     integer :: k\n+  end type t_atm\n+!------------------------------------------------------------------------------\n+  interface assignment(=)\n+     module procedure assign_to_atm\n+  end interface\n+!------------------------------------------------------------------------------\n+  interface\n+     pure subroutine delete_m (x)\n+       use mod1\n+       type(t_m) ,intent(in) :: x\n+     end subroutine delete_m\n+  end interface\n+!------------------------------------------------------------------------------\n+contains\n+  subroutine assign_to_atm (atm, r)\n+    type(t_atm) ,intent(inout) :: atm\n+    integer     ,intent(in)    :: r\n+  end subroutine assign_to_atm\n+end module mod2\n+ \n+! { dg-final { cleanup-modules \"mod1 mod2\" } }"}]}