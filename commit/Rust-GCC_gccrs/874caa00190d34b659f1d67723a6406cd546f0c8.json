{"sha": "874caa00190d34b659f1d67723a6406cd546f0c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0Y2FhMDAxOTBkMzRiNjU5ZjFkNjc3MjNhNjQwNmNkNTQ2ZjBjOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2005-11-09T18:00:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-11-09T18:00:59Z"}, "message": "re PR tree-optimization/24716 (Wrong code generated when optimising)\n\n2005-11-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/24716\n\t* tree-scalar-evolution.c (analyze_evolution_in_loop): Use\n\tt_bool to track results from follow_ssa_edge.\n\n\t* gcc.c-torture/execute/pr24716.c: New testcase.\n\nFrom-SVN: r106700", "tree": {"sha": "bd637c182f6beea4adc189814ea2b0e1bc0f9dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd637c182f6beea4adc189814ea2b0e1bc0f9dd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/874caa00190d34b659f1d67723a6406cd546f0c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874caa00190d34b659f1d67723a6406cd546f0c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874caa00190d34b659f1d67723a6406cd546f0c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874caa00190d34b659f1d67723a6406cd546f0c8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8176fe4bbaaf5e00f13aa6ce8003ff69ccd9380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8176fe4bbaaf5e00f13aa6ce8003ff69ccd9380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8176fe4bbaaf5e00f13aa6ce8003ff69ccd9380"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "10cad44a68c04355a8045afb5cf2c40882c1e631", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874caa00190d34b659f1d67723a6406cd546f0c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874caa00190d34b659f1d67723a6406cd546f0c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=874caa00190d34b659f1d67723a6406cd546f0c8", "patch": "@@ -1,3 +1,9 @@\n+2005-11-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/24716\n+\t* tree-scalar-evolution.c (analyze_evolution_in_loop): Use\n+\tt_bool to track results from follow_ssa_edge.\n+\n 2005-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* final.c (force_source_line): New global variable."}, {"sha": "af46bf210f9f4d0e40760db44a2a3a16843f56f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874caa00190d34b659f1d67723a6406cd546f0c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874caa00190d34b659f1d67723a6406cd546f0c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=874caa00190d34b659f1d67723a6406cd546f0c8", "patch": "@@ -1,3 +1,8 @@\n+2005-11-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/24716\n+\t* gcc.c-torture/execute/pr24716.c: New testcase.\n+\n 2005-11-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* gcc.dg/pr24624.c: Disable for non S/390 targets."}, {"sha": "c2473f84c3155c581b86f0e21ab9f37873d8e96a", "filename": "gcc/testsuite/gcc.c-torture/execute/pr24716.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874caa00190d34b659f1d67723a6406cd546f0c8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr24716.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874caa00190d34b659f1d67723a6406cd546f0c8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr24716.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr24716.c?ref=874caa00190d34b659f1d67723a6406cd546f0c8", "patch": "@@ -0,0 +1,59 @@\n+/* PR24716, scalar evolution returning the wrong result\n+   for pdest.  */\n+\n+int Link[] = { -1 };\n+int W[] = { 2 };\n+\n+extern void abort (void);\n+\n+int f (int k, int p)\n+{\n+  int pdest, j, D1361;\n+  j = 0;\n+  pdest = 0;\n+  for (;;) {\n+    if (pdest > 2)\n+      do\n+        j--, pdest++;\n+      while (j > 2);\n+\n+    if (j == 1)\n+      break;\n+\n+    while (pdest > p)\n+      if (j == p)\n+        pdest++;\n+\n+    do\n+      {\n+        D1361 = W[k];\n+        do\n+          if (D1361 != 0)\n+            pdest = 1, W[k] = D1361 = 0;\n+        while (p < 1);\n+    } while (k > 0);\n+\n+    do\n+      {\n+        p = 0;\n+        k = Link[k];\n+        while (p < j)\n+          if (k != -1)\n+            pdest++, p++;\n+      }\n+    while (k != -1);\n+    j = 1;\n+  }\n+\n+  /* The correct return value should be pdest (1 in the call from main).\n+     DOM3 is mistaken and propagates a 0 here.  */\n+  return pdest;\n+}\n+\n+int main ()\n+{\n+  if (!f (0, 2))\n+    abort ();\n+  return 0;\n+}\n+"}, {"sha": "c2fa2ef995d6203719003e4c1aa5a9a07eb42315", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874caa00190d34b659f1d67723a6406cd546f0c8/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874caa00190d34b659f1d67723a6406cd546f0c8/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=874caa00190d34b659f1d67723a6406cd546f0c8", "patch": "@@ -1503,7 +1503,7 @@ analyze_evolution_in_loop (tree loop_phi_node,\n     {\n       tree arg = PHI_ARG_DEF (loop_phi_node, i);\n       tree ssa_chain, ev_fn;\n-      bool res;\n+      t_bool res;\n \n       /* Select the edges that enter the loop body.  */\n       bb = PHI_ARG_EDGE (loop_phi_node, i)->src;\n@@ -1519,15 +1519,15 @@ analyze_evolution_in_loop (tree loop_phi_node,\n \t  res = follow_ssa_edge (loop, ssa_chain, loop_phi_node, &ev_fn, 0);\n \t}\n       else\n-\tres = false;\n+\tres = t_false;\n \t      \n       /* When it is impossible to go back on the same\n \t loop_phi_node by following the ssa edges, the\n \t evolution is represented by a peeled chrec, i.e. the\n \t first iteration, EV_FN has the value INIT_COND, then\n \t all the other iterations it has the value of ARG.  \n \t For the moment, PEELED_CHREC nodes are not built.  */\n-      if (!res)\n+      if (res != t_true)\n \tev_fn = chrec_dont_know;\n       \n       /* When there are multiple back edges of the loop (which in fact never"}]}