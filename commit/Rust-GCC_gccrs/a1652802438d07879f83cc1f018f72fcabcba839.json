{"sha": "a1652802438d07879f83cc1f018f72fcabcba839", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE2NTI4MDI0MzhkMDc4NzlmODNjYzFmMDE4ZjcyZmNhYmNiYTgzOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-08-29T02:50:10Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-08-29T02:50:10Z"}, "message": "init.c (decl_constant_value): Deal with COND_EXPR specially.\n\n\t* init.c (decl_constant_value): Deal with COND_EXPR specially.\n\t* call.c (build_conditional_expr): Revert previous patch.\n\n\t* g++.dg/expr/cond3.C: New test.\n\nFrom-SVN: r70899", "tree": {"sha": "78da144d2f561564fbbafd52691da9046e9cc06b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78da144d2f561564fbbafd52691da9046e9cc06b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1652802438d07879f83cc1f018f72fcabcba839", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1652802438d07879f83cc1f018f72fcabcba839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1652802438d07879f83cc1f018f72fcabcba839", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1652802438d07879f83cc1f018f72fcabcba839/comments", "author": null, "committer": null, "parents": [{"sha": "2be570f916a5bfa25b09f4acd44c14f5df662889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be570f916a5bfa25b09f4acd44c14f5df662889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be570f916a5bfa25b09f4acd44c14f5df662889"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "402b17720906eb6141a6cb2fbdd47abe51248108", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a1652802438d07879f83cc1f018f72fcabcba839", "patch": "@@ -1,5 +1,8 @@\n 2003-08-28  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* init.c (decl_constant_value): Deal with COND_EXPR specially.\n+\t* call.c (build_conditional_expr): Revert previous patch.\n+\n \tPR optimization/5079\n \t* call.c (build_conditional_expr): Use decl_constant_value to\n \tsimplify the arguments."}, {"sha": "a74fd63d556d993d2f1996041051a98fb682a85f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a1652802438d07879f83cc1f018f72fcabcba839", "patch": "@@ -3358,8 +3358,6 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3)\n     }\n \n  valid_operands:\n-  arg2 = decl_constant_value (arg2);\n-  arg3 = decl_constant_value (arg3);\n   result = fold (build (COND_EXPR, result_type, arg1, arg2, arg3));\n   /* We can't use result_type below, as fold might have returned a\n      throw_expr.  */"}, {"sha": "ace82cdc39f96fefc8cb138ecd3e62785671e60a", "filename": "gcc/cp/init.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a1652802438d07879f83cc1f018f72fcabcba839", "patch": "@@ -1587,6 +1587,24 @@ build_offset_ref (tree type, tree name, bool address_p)\n tree\n decl_constant_value (tree decl)\n {\n+  /* When we build a COND_EXPR, we don't know whether it will be used\n+     as an lvalue or as an rvalue.  If it is an lvalue, it's not safe\n+     to replace the second and third operands with their\n+     initializers.  So, we do that here.  */\n+  if (TREE_CODE (decl) == COND_EXPR)\n+    {\n+      tree d1;\n+      tree d2;\n+\n+      d1 = decl_constant_value (TREE_OPERAND (decl, 1));\n+      d2 = decl_constant_value (TREE_OPERAND (decl, 2));\n+\n+      if (d1 != TREE_OPERAND (decl, 1) || d2 != TREE_OPERAND (decl, 2))\n+\treturn build (COND_EXPR,\n+\t\t      TREE_TYPE (decl),\n+\t\t      TREE_OPERAND (decl, 0), d1, d2);\n+    }\n+\n   if (TREE_READONLY_DECL_P (decl)\n       && ! TREE_THIS_VOLATILE (decl)\n       && DECL_INITIAL (decl)"}, {"sha": "ea39a5d6cacfb50b2fffe3eb60e15dae47576eb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a1652802438d07879f83cc1f018f72fcabcba839", "patch": "@@ -1,3 +1,7 @@\n+2003-08-28  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* g++.dg/expr/cond3.C: New test.\n+\n 2003-08-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/builtins-1.c: Add new builtin cases."}, {"sha": "50a4d9a13004c15d9afc6f9153e9a5f1ccf0058f", "filename": "gcc/testsuite/g++.dg/expr/cond3.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1652802438d07879f83cc1f018f72fcabcba839/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond3.C?ref=a1652802438d07879f83cc1f018f72fcabcba839", "patch": "@@ -0,0 +1,6 @@\n+const int i = 7;\n+const int j = 3;\n+\n+void f(bool b) {\n+  &(b ? i : j);\n+}"}]}