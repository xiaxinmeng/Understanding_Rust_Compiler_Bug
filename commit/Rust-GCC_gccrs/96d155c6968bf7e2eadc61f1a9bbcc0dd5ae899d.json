{"sha": "96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZkMTU1YzY5NjhiZjdlMmVhZGM2MWYxYTliYmNjMGRkNWFlODk5ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-11-07T05:30:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-11-07T05:30:40Z"}, "message": "P0704R1 - fixing const-qualified pointers to members\n\n\t* typeck2.c (build_m_component_ref): Also accept in lower stds with\n\ta pedwarn.\n\nFrom-SVN: r254487", "tree": {"sha": "80ad4800b9dc233c0da9c8423b1b777716d347b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80ad4800b9dc233c0da9c8423b1b777716d347b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d041117f1ee47982a2d8a2a9801f2906df2d91f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d041117f1ee47982a2d8a2a9801f2906df2d91f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d041117f1ee47982a2d8a2a9801f2906df2d91f"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "44788808193bdb9f25db4ff0ba719c22860051d8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d", "patch": "@@ -1,3 +1,9 @@\n+2017-11-06  Jason Merrill  <jason@redhat.com>\n+\n+\tP0704R1 - fixing const-qualified pointers to members\n+\t* typeck2.c (build_m_component_ref): Also accept in lower stds with\n+\ta pedwarn.\n+\n 2017-11-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/65579"}, {"sha": "e8e1339543197b6ba3181dc2a31a32ae4db1ad6f", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d", "patch": "@@ -1922,17 +1922,26 @@ build_m_component_ref (tree datum, tree component, tsubst_flags_t complain)\n \t\t       ptrmem_type);\n \t      return error_mark_node;\n \t    }\n-\t  else if (!lval\n-\t\t   && !FUNCTION_RVALUE_QUALIFIED (type)\n-\t\t   && (cxx_dialect < cxx2a\n-\t\t       || ((type_memfn_quals (type)\n-\t\t\t    & (TYPE_QUAL_CONST | TYPE_QUAL_VOLATILE))\n-\t\t\t   != TYPE_QUAL_CONST)))\n+\t  else if (!lval && !FUNCTION_RVALUE_QUALIFIED (type))\n \t    {\n-\t      if (complain & tf_error)\n-\t\terror (\"pointer-to-member-function type %qT requires an lvalue\",\n-\t\t       ptrmem_type);\n-\t      return error_mark_node;\n+\t      if ((type_memfn_quals (type)\n+\t\t   & (TYPE_QUAL_CONST | TYPE_QUAL_VOLATILE))\n+\t\t  != TYPE_QUAL_CONST)\n+\t\t{\n+\t\t  if (complain & tf_error)\n+\t\t    error (\"pointer-to-member-function type %qT requires \"\n+\t\t\t   \"an lvalue\", ptrmem_type);\n+\t\t  return error_mark_node;\n+\t\t}\n+\t      else if (cxx_dialect < cxx2a)\n+\t\t{\n+\t\t  if (complain & tf_warning_or_error)\n+\t\t    pedwarn (input_location, OPT_Wpedantic,\n+\t\t\t     \"pointer-to-member-function type %qT requires \"\n+\t\t\t     \"an lvalue before C++2a\", ptrmem_type);\n+\t\t  else\n+\t\t    return error_mark_node;\n+\t\t}\n \t    }\n \t}\n       return build2 (OFFSET_REF, type, datum, component);"}, {"sha": "074c8fe5e3acb7691ae24a3936128646b87f7ed4", "filename": "gcc/testsuite/g++.dg/cpp2a/ptrmem1a.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fptrmem1a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fptrmem1a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fptrmem1a.C?ref=96d155c6968bf7e2eadc61f1a9bbcc0dd5ae899d", "patch": "@@ -0,0 +1,24 @@\n+// P0704R1\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct S {\n+  void ref() & {}\n+  void cref() const& {}\n+  void vref() volatile & {}\n+  void cvref() const volatile & {}\n+};\n+\n+void\n+foo ()\n+{\n+  S{}.ref();\t\t// { dg-error \"argument discards qualifiers\" }\n+  S{}.cref();\n+  S{}.vref();\t\t// { dg-error \"argument discards qualifiers\" }\n+  S{}.cvref();\t\t// { dg-error \"argument discards qualifiers\" }\n+\n+  (S{}.*&S::ref)();\t// { dg-error \"pointer-to-member-function type 'void \\\\(S::\\\\*\\\\)\\\\(\\\\) &' requires an lvalue\" }\n+  (S{}.*&S::cref)();\n+  (S{}.*&S::vref)();\t// { dg-error \"pointer-to-member-function type 'void \\\\(S::\\\\*\\\\)\\\\(\\\\) volatile &' requires an lvalue\" }\n+  (S{}.*&S::cvref)();\t// { dg-error \"pointer-to-member-function type 'void \\\\(S::\\\\*\\\\)\\\\(\\\\) const volatile &' requires an lvalue\" }\n+}"}]}