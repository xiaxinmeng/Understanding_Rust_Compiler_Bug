{"sha": "c3d01e19a33b26764c40d67e6f3f86efbd86b203", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNkMDFlMTlhMzNiMjY3NjRjNDBkNjdlNmYzZjg2ZWZiZDg2YjIwMw==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2014-07-18T09:31:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:31:36Z"}, "message": "s-os_lib.ads, [...] (GM_Time_Of): New routine to create an OS_Time from time parts.\n\n2014-07-18  Pascal Obry  <obry@adacore.com>\n\n\t* s-os_lib.ads, s-os_lib.adb (GM_Time_Of): New routine to create an\n\tOS_Time from time parts.\n\t* adaint.h, adaint.c (__gnat_to_os_time): New routine.\n\nFrom-SVN: r212788", "tree": {"sha": "3cf048a2785ddc3db22b53a2e4094c9d31181a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cf048a2785ddc3db22b53a2e4094c9d31181a00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3d01e19a33b26764c40d67e6f3f86efbd86b203", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d01e19a33b26764c40d67e6f3f86efbd86b203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d01e19a33b26764c40d67e6f3f86efbd86b203", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d01e19a33b26764c40d67e6f3f86efbd86b203/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6907542db49aa9d73dcfe4a991bac455b1818953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6907542db49aa9d73dcfe4a991bac455b1818953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6907542db49aa9d73dcfe4a991bac455b1818953"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "897853b0bf183614f894edeb88b25e702ad1785e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c3d01e19a33b26764c40d67e6f3f86efbd86b203", "patch": "@@ -1,3 +1,9 @@\n+2014-07-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-os_lib.ads, s-os_lib.adb (GM_Time_Of): New routine to create an\n+\tOS_Time from time parts.\n+\t* adaint.h, adaint.c (__gnat_to_os_time): New routine.\n+\n 2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch4.adb (Try_Container_Indexing): Refine previous patch for"}, {"sha": "6e0e4a3db0ef23cb237ed405ddc6fcb8eb2c84a9", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=c3d01e19a33b26764c40d67e6f3f86efbd86b203", "patch": "@@ -503,6 +503,25 @@ __gnat_to_gm_time (OS_Time *p_time, int *p_year, int *p_month, int *p_day,\n     *p_year = *p_month = *p_day = *p_hours = *p_mins = *p_secs = 0;\n }\n \n+void\n+__gnat_to_os_time (OS_Time *p_time, int year, int month, int day,\n+\t\t   int hours, int mins, int secs)\n+{\n+  struct tm v;\n+\n+  v.tm_year  = year;\n+  v.tm_mon   = month;\n+  v.tm_mday  = day;\n+  v.tm_hour  = hours;\n+  v.tm_min   = mins;\n+  v.tm_sec   = secs;\n+  v.tm_isdst = 0;\n+\n+  /* returns -1 of failing, this is s-os_lib Invalid_Time */\n+\n+  *p_time = (OS_Time) mktime (&v);\n+}\n+\n /* Place the contents of the symbolic link named PATH in the buffer BUF,\n    which has size BUFSIZ.  If PATH is a symbolic link, then return the number\n    of characters of its content in BUF.  Otherwise, return -1."}, {"sha": "f6b6f69fb66bfa2d25ee6415bbd12e4d515fc9af", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=c3d01e19a33b26764c40d67e6f3f86efbd86b203", "patch": "@@ -107,6 +107,8 @@ extern void   __gnat_current_time_string           (char *);\n extern void   __gnat_to_gm_time\t\t\t   (OS_Time *, int *, int *,\n \t\t\t\t                    int *, int *,\n \t\t\t\t                    int *, int *);\n+extern void   __gnat_to_os_time                    (OS_Time *, int, int, int,\n+                                                    int, int, int);\n extern int    __gnat_get_maximum_file_name_length  (void);\n extern int    __gnat_get_switches_case_sensitive   (void);\n extern int    __gnat_get_file_names_case_sensitive (void);"}, {"sha": "796fe08f5e320b7e9934cacdc3f1cdb673ee9669", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=c3d01e19a33b26764c40d67e6f3f86efbd86b203", "patch": "@@ -1308,6 +1308,28 @@ package body System.OS_Lib is\n       Second := S;\n    end GM_Split;\n \n+   ----------------\n+   -- GM_Time_Of --\n+   ----------------\n+\n+   function GM_Time_Of\n+     (Year   : Year_Type;\n+      Month  : Month_Type;\n+      Day    : Day_Type;\n+      Hour   : Hour_Type;\n+      Minute : Minute_Type;\n+      Second : Second_Type) return OS_Time\n+   is\n+      procedure To_OS_Time\n+        (P_Time_T : Address; Year, Month, Day, Hours, Mins, Secs : Integer);\n+      pragma Import (C, To_OS_Time, \"__gnat_to_os_time\");\n+      Result : OS_Time;\n+   begin\n+      To_OS_Time\n+        (Result'Address, Year - 1900, Month - 1, Day, Hour, Minute, Second);\n+      return Result;\n+   end GM_Time_Of;\n+\n    -------------\n    -- GM_Year --\n    -------------"}, {"sha": "810d7d4414a187c47298862c75b5e292c1a6f94c", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d01e19a33b26764c40d67e6f3f86efbd86b203/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=c3d01e19a33b26764c40d67e6f3f86efbd86b203", "patch": "@@ -152,6 +152,17 @@ package System.OS_Lib is\n    --  provides a representation of it as a set of component parts, to be\n    --  interpreted as a date point in UTC.\n \n+   function GM_Time_Of\n+     (Year   : Year_Type;\n+      Month  : Month_Type;\n+      Day    : Day_Type;\n+      Hour   : Hour_Type;\n+      Minute : Minute_Type;\n+      Second : Second_Type) return OS_Time;\n+   --  Analogous to the Time_Of routine in Ada.Calendar, takes a set of\n+   --  time component parts and returns an OS_Time. Returns Invalid_Time\n+   --  if the creation fails.\n+\n    ----------------\n    -- File Stuff --\n    ----------------"}]}