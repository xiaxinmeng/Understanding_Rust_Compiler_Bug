{"sha": "4abc46b51af5751d657764d0c44b8a4aeed06302", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFiYzQ2YjUxYWY1NzUxZDY1Nzc2NGQwYzQ0YjhhNGFlZWQwNjMwMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-11-26T09:08:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-11-26T09:08:31Z"}, "message": "re PR sanitizer/92154 (new glibc breaks arm bootstrap due to libsanitizer)\n\n\tPR sanitizer/92154\n\t* sanitizer_common/sanitizer_platform_limits_posix.h: Cherry-pick\n\tllvm-project revision 947f9692440836dcb8d88b74b69dd379d85974ce.\n\t* sanitizer_common/sanitizer_platform_limits_posix.cpp: Likewise.\n\nFrom-SVN: r278722", "tree": {"sha": "366d3643cbd8fdb434bc413088828d20d1f5e01c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/366d3643cbd8fdb434bc413088828d20d1f5e01c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4abc46b51af5751d657764d0c44b8a4aeed06302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4abc46b51af5751d657764d0c44b8a4aeed06302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4abc46b51af5751d657764d0c44b8a4aeed06302", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4abc46b51af5751d657764d0c44b8a4aeed06302/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "754f54aa01975a8e2fa4e38850f90dcda7dd02ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754f54aa01975a8e2fa4e38850f90dcda7dd02ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754f54aa01975a8e2fa4e38850f90dcda7dd02ec"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "f2a07adca7723952fe44145d235012d3446b52ad", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4abc46b51af5751d657764d0c44b8a4aeed06302/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4abc46b51af5751d657764d0c44b8a4aeed06302/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=4abc46b51af5751d657764d0c44b8a4aeed06302", "patch": "@@ -1,3 +1,10 @@\n+2019-11-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/92154\n+\t* sanitizer_common/sanitizer_platform_limits_posix.h: Cherry-pick\n+\tllvm-project revision 947f9692440836dcb8d88b74b69dd379d85974ce.\n+\t* sanitizer_common/sanitizer_platform_limits_posix.cpp: Likewise.\n+\n 2019-11-20  Martin Liska  <mliska@suse.cz>\n \n \t* libtool-version: Remove."}, {"sha": "aa845df4dde481ead5c80ef0fac5e361a84c5c39", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cpp", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4abc46b51af5751d657764d0c44b8a4aeed06302/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4abc46b51af5751d657764d0c44b8a4aeed06302/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.cpp?ref=4abc46b51af5751d657764d0c44b8a4aeed06302", "patch": "@@ -1128,11 +1128,9 @@ CHECK_SIZE_AND_OFFSET(ipc_perm, uid);\n CHECK_SIZE_AND_OFFSET(ipc_perm, gid);\n CHECK_SIZE_AND_OFFSET(ipc_perm, cuid);\n CHECK_SIZE_AND_OFFSET(ipc_perm, cgid);\n-#if (!defined(__aarch64__) || !SANITIZER_LINUX || __GLIBC_PREREQ (2, 21)) && \\\n-    !defined(__arm__)\n-/* On aarch64 glibc 2.20 and earlier provided incorrect mode field.  */\n-/* On Arm newer glibc provide a different mode field, it's hard to detect\n-   so just disable the check.  */\n+#if !SANITIZER_LINUX || __GLIBC_PREREQ (2, 31)\n+/* glibc 2.30 and earlier provided 16-bit mode field instead of 32-bit\n+   on many architectures.  */\n CHECK_SIZE_AND_OFFSET(ipc_perm, mode);\n #endif\n "}, {"sha": "d82fd5e400587a46c23ba66d27d9568582c37952", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4abc46b51af5751d657764d0c44b8a4aeed06302/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4abc46b51af5751d657764d0c44b8a4aeed06302/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h?ref=4abc46b51af5751d657764d0c44b8a4aeed06302", "patch": "@@ -207,26 +207,13 @@ struct __sanitizer_ipc_perm {\n   u64 __unused1;\n   u64 __unused2;\n #elif defined(__sparc__)\n-#if defined(__arch64__)\n   unsigned mode;\n-  unsigned short __pad1;\n-#else\n-  unsigned short __pad1;\n-  unsigned short mode;\n   unsigned short __pad2;\n-#endif\n   unsigned short __seq;\n   unsigned long long __unused1;\n   unsigned long long __unused2;\n-#elif defined(__mips__) || defined(__aarch64__) || defined(__s390x__)\n-  unsigned int mode;\n-  unsigned short __seq;\n-  unsigned short __pad1;\n-  unsigned long __unused1;\n-  unsigned long __unused2;\n #else\n-  unsigned short mode;\n-  unsigned short __pad1;\n+  unsigned int mode;\n   unsigned short __seq;\n   unsigned short __pad2;\n #if defined(__x86_64__) && !defined(_LP64)"}]}