{"sha": "4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU0ZDJjNDFiOTkyMWVlNWI4YWE4ZTlkNTg3NGRhODc4NmU0NTU1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-09-10T07:30:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-09-10T07:30:29Z"}, "message": "re PR c++/67511 (ICE with invalid OpenMP random access iterator)\n\n\tPR c++/67511\n\t* semantics.c (handle_omp_for_class_iterator): Don't wrap\n\terror_mark_node into a NOP_EXPR to void_type_node.\n\n\t* g++.dg/gomp/pr67511.C: New test.\n\nFrom-SVN: r227606", "tree": {"sha": "9f7f0971620fe2800517b8675038829c87bade3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f7f0971620fe2800517b8675038829c87bade3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8a098acfcfc0b59ddbbec9075ffb195c3e63b3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a098acfcfc0b59ddbbec9075ffb195c3e63b3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a098acfcfc0b59ddbbec9075ffb195c3e63b3e"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "4b32f5ae3832a4aa303dff4791aa990c1282d3f2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "patch": "@@ -1,3 +1,9 @@\n+2015-09-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/67511\n+\t* semantics.c (handle_omp_for_class_iterator): Don't wrap\n+\terror_mark_node into a NOP_EXPR to void_type_node.\n+\n 2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/53184"}, {"sha": "5c3f1bea808646bb79ec19192b2851f40126a0f0", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "patch": "@@ -6453,7 +6453,8 @@ handle_omp_for_class_iterator (int i, location_t locus, tree declv, tree initv,\n   iter_init = build_x_modify_expr (elocus,\n \t\t\t\t   iter, PLUS_EXPR, iter_init,\n \t\t\t\t   tf_warning_or_error);\n-  iter_init = build1 (NOP_EXPR, void_type_node, iter_init);\n+  if (iter_init != error_mark_node)\n+    iter_init = build1 (NOP_EXPR, void_type_node, iter_init);\n   finish_expr_stmt (iter_init);\n   finish_expr_stmt (build_x_modify_expr (elocus,\n \t\t\t\t\t last, NOP_EXPR, decl,"}, {"sha": "fba8b15559584a08a524ec9a49c7153fd57bd9d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "patch": "@@ -1,5 +1,8 @@\n 2015-09-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/67511\n+\t* g++.dg/gomp/pr67511.C: New test.\n+\n \tPR c/67502\n \t* c-c++-common/gomp/pr67502.c: New test.\n "}, {"sha": "3e0e9a388f6dda953d98bffbb20980e307d435df", "filename": "gcc/testsuite/g++.dg/gomp/pr67511.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr67511.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr67511.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr67511.C?ref=4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/67511\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+struct I\n+{\n+  I ();\n+  I (const I &);\n+  I &operator++ ();\n+  bool operator< (const I &) const;\n+};\n+__PTRDIFF_TYPE__ operator- (const I &, const I &);\n+\n+void\n+foo (I &x, I &y)\n+{\n+#pragma omp for\n+  for (I i = x; i < y; ++i)\t// { dg-error \"no match for\" }\n+    ;\n+}"}]}