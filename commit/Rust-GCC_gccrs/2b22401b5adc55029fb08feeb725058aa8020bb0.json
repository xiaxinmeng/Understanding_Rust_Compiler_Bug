{"sha": "2b22401b5adc55029fb08feeb725058aa8020bb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIyMjQwMWI1YWRjNTUwMjlmYjA4ZmVlYjcyNTA1OGFhODAyMGJiMA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-08-14T21:45:03Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-08-14T21:45:03Z"}, "message": "parse.c (match): Enclosed macro in do...while(0) and braces.\n\n\n2005-08-14  Asher Langton  <langton2@llnl.gov>\n\n        * parse.c (match): Enclosed macro in do...while(0) and braces.\n\nAlso fix formatting of a few previous ChangeLog entries\n\nFrom-SVN: r103086", "tree": {"sha": "5bcc450591802544d95405b27ffc95f59b89821f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bcc450591802544d95405b27ffc95f59b89821f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b22401b5adc55029fb08feeb725058aa8020bb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b22401b5adc55029fb08feeb725058aa8020bb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b22401b5adc55029fb08feeb725058aa8020bb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b22401b5adc55029fb08feeb725058aa8020bb0/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21d7d31f71d4c4e16ee17ac547d3e0b6963e8ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d7d31f71d4c4e16ee17ac547d3e0b6963e8ba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21d7d31f71d4c4e16ee17ac547d3e0b6963e8ba1"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "2d4a86a855089e1e8e2acf7483a4c86cec459a2c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b22401b5adc55029fb08feeb725058aa8020bb0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b22401b5adc55029fb08feeb725058aa8020bb0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2b22401b5adc55029fb08feeb725058aa8020bb0", "patch": "@@ -1,9 +1,13 @@\n-2005-08-14 Paul Thomas  <pault@gcc.gnu.org>\n+2005-08-14  Asher Langton  <langton2@llnl.gov>\n+\n+\t* parse.c (match): Enclosed macro in do...while(0) and braces.\n+\n+2005-08-14  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/21432.\n \t* gfortran.texi: Document PRINT namelist.\n \n-2005-08-14 Paul Thomas  <pault@gcc.gnu.org>\n+2005-08-14  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/21432.\n \t* io.c (match_io): Add code to implement PRINT namelist.\n@@ -178,7 +182,7 @@\n \t* trans-stmt.c (gfc_trans_character_select): Use\n \tbuild_constructor_from_list instead of build_constructor.\n \n-2005-07-19 Paul Thomas  <pault@gcc.gnu.org>\n+2005-07-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/16940\n \t* resolve.c (resolve_symbol): A symbol with FL_UNKNOWN\n@@ -918,7 +922,7 @@\n \t* resolve.c (resolve_variable): If e->symtree is not set, this\n \tought to be a FAILURE, and not a segfault.\n \n-2005-04-17 Paul Thomas <pault@gcc.gnu.org>\n+2005-04-17  Paul Thomas <pault@gcc.gnu.org>\n \n \tPR fortran/17472\n \tPR fortran/18209"}, {"sha": "9c404d5bebed354bc5ad5eb24d7f0d86852a200a", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b22401b5adc55029fb08feeb725058aa8020bb0/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b22401b5adc55029fb08feeb725058aa8020bb0/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=2b22401b5adc55029fb08feeb725058aa8020bb0", "patch": "@@ -75,13 +75,16 @@ match_word (const char *str, match (*subr) (void), locus * old_locus)\n \n \n /* Figure out what the next statement is, (mostly) regardless of\n-   proper ordering.  */\n+   proper ordering.  The do...while(0) is there to prevent if/else\n+   ambiguity.  */\n \n #define match(keyword, subr, st)\t\t\t\t\\\n-    if (match_word(keyword, subr, &old_locus) == MATCH_YES)\t\\\n-      return st;\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\\\n-      undo_new_statement ();\n+    do {                                                        \\\n+      if (match_word(keyword, subr, &old_locus) == MATCH_YES)\t\\\n+        return st;\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+        undo_new_statement ();                                  \\\n+    } while (0);\n \n static gfc_statement\n decode_statement (void)"}]}