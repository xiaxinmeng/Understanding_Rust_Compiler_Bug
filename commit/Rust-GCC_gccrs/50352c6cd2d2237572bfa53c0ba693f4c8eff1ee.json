{"sha": "50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAzNTJjNmNkMmQyMjM3NTcyYmZhNTNjMGJhNjkzZjRjOGVmZjFlZQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-20T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-20T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "7ee02a6b3ed6ecbe8348dc781e5420cd3a7232ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ee02a6b3ed6ecbe8348dc781e5420cd3a7232ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/comments", "author": null, "committer": null, "parents": [{"sha": "14886cbe300c144a4390245d0515cdf28fc5f68f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14886cbe300c144a4390245d0515cdf28fc5f68f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14886cbe300c144a4390245d0515cdf28fc5f68f"}], "stats": {"total": 222, "additions": 221, "deletions": 1}, "files": [{"sha": "eb1a44ae676db0796c499fd60a5223f56be9809b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,45 @@\n+2021-02-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/97172\n+\t* attribs.c (init_attr_rdwr_indices): Guard vblist use.\n+\t(attr_access::free_lang_data): Remove a spurious test.\n+\n+2021-02-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* doc/invoke.texi (flang-info-module-read): Document.\n+\n+2021-02-19  Martin Liska  <mliska@suse.cz>\n+\n+\tPR translation/99167\n+\t* params.opt: Fix typo.\n+\n+2021-02-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/99122\n+\t* tree-inline.c (inline_forbidden_p): Do not inline functions\n+\twith VLA arguments or return value.\n+\n+2021-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/98998\n+\t* config/arm/arm.md (*stack_protect_combined_set_insn,\n+\t*stack_protect_combined_test_insn): If force_const_mem result\n+\tis not valid general operand, force its address into the destination\n+\tregister first.\n+\n+2021-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/99034\n+\t* tree-cfg.c (gimple_merge_blocks): If bb a starts with eh landing\n+\tpad or non-local label, put FORCED_LABELs from bb b after that label\n+\trather than before it.\n+\n+2021-02-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR target/98657\n+\t* config/aarch64/aarch64-sve.md (<ASHIFT:optab><mode>3): Use\n+\texpand_vector_broadcast' to emit the vec_duplicate operand.\n+\n 2021-02-18  Vladimir N. Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/96264"}, {"sha": "0daf6d60b0db2cb35fe0ec011faa7d9b43395631", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1 +1 @@\n-20210219\n+20210220"}, {"sha": "91b6ae66332b7703e47ad2f255180cca361a679e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,7 @@\n+2021-02-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c.opt (flang-info-module-read, flang-info-module-read=): New.\n+\n 2021-02-18  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/99113"}, {"sha": "fe80d4a4fb858d1431fae29460775553ad149f0e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,35 @@\n+2021-02-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98741\n+\t* module.cc (pending_imports): New.\n+\t(declare_module): Adjust test condition.\n+\t(name_pending_imports): New.\n+\t(preprocess_module): Reimplement using pending_imports.\n+\t(preprocessed_module): Move name-getting to name_pending_imports.\n+\t* name-lookup.c (append_imported_binding_slot): Assert module\n+\tordering is increasing.\n+\n+2021-02-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* module.cc (note_cmis): New.\n+\t(struct module_state): Add inform_read_p bit.\n+\t(module_state::do_import): Inform of CMI location, if enabled.\n+\t(init_modules): Canonicalize note_cmis entries.\n+\t(handle_module_option): Handle -flang-info-module-read=FOO.\n+\n+2021-02-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96926\n+\t* call.c (perfect_conversion_p): Limit rvalueness\n+\ttest to reference bindings.\n+\n+2021-02-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96926\n+\t* call.c (perfect_conversion_p): New.\n+\t(perfect_candidate_p): New.\n+\t(add_candidates): Ignore templates after a perfect non-template.\n+\n 2021-02-18  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/99023"}, {"sha": "868cd162e2b181d0722cb4f7c5baa10b152a9348", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,31 @@\n+2021-02-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/98686\n+\t* match.c (gfc_match_namelist): If BT_UNKNOWN, check for\n+\tIMPLICIT NONE and and issue an error, otherwise set the type\n+\tto its IMPLICIT type so that any subsequent use of objects will\n+\twill confirm their types.\n+\n+2021-02-19  Harald Anlauf  <anlauf@gmx.de>\n+\n+\t* symbol.c (gfc_add_flavor): Reverse order of conditions.\n+\n+2021-02-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99010\n+\t* dependency.c (gfc_dep_resolver): Fix coarray handling.\n+\n+2021-02-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99146\n+\t* interface.c:\n+\n+2021-02-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99027\n+\t* simplify.c (simplify_bound_dim): Honor DIMEN_ELEMENT\n+\twhen using dim=.\n+\n 2021-02-17  Julian Brown  <julian@codesourcery.com>\n \n \t* openmp.c (resolve_omp_clauses): Disallow selecting components"}, {"sha": "93d4e44c1b2f77a1122c7d82ff256bf085eaec5a", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,17 @@\n+2021-02-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/99126\n+\t* jit-builtins.c\n+\t(gcc::jit::builtins_manager::get_builtin_function_by_id):\n+\tUpdate assertion to reject BUILT_IN_NONE.\n+\t(gcc::jit::builtins_manager::ensure_optimization_builtins_exist):\n+\tNew.\n+\t* jit-builtins.h\n+\t(gcc::jit::builtins_manager::ensure_optimization_builtins_exist):\n+\tNew decl.\n+\t* jit-playback.c (gcc::jit::playback::context::replay): Call it.\n+\tRemove redundant conditional on bm.\n+\n 2021-01-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* docs/cp/index.rst: Remove \"Alpha\" warning."}, {"sha": "7029a8e57a2bd2202f5cf398f0b1dff390e66e5c", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,13 @@\n+2021-02-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* fr.po: Update.\n+\n+2021-02-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,\n+\tja.po, nl.po, ru.po, sr.po, sv.po, tr.po, uk.po, vi.po, zh_CN.po,\n+\tzh_TW.po: Update.\n+\n 2021-02-05  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.pot: Regenerate."}, {"sha": "50988e9885c55d06c457a6dc19a171a8246b738a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,78 @@\n+2021-02-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98741\n+\t* g++.dg/modules/pr98741_a.H: New.\n+\t* g++.dg/modules/pr98741_b.H: New.\n+\t* g++.dg/modules/pr98741_c.C: New.\n+\t* g++.dg/modules/pr98741_d.C: New.\n+\n+2021-02-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/98686\n+\t* gfortran.dg/namelist_4.f90: Modify.\n+\t* gfortran.dg/namelist_98.f90: New test.\n+\n+2021-02-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/97172\n+\t* gcc.dg/pr97172.c: Add test cases.\n+\n+2021-02-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/modules/pr99166_a.X: New.\n+\t* g++.dg/modules/pr99166_b.C: New.\n+\t* g++.dg/modules/pr99166_c.C: New.\n+\t* g++.dg/modules/pr99166_d.C: New.\n+\n+2021-02-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99010\n+\t* gfortran.dg/coarray/array_temporary-1.f90: New test.\n+\n+2021-02-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99146\n+\t* gfortran.dg/dtio_36.f90: New test.\n+\n+2021-02-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/99122\n+\t* gcc.dg/pr99122-3.c: New testcase.\n+\n+2021-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/98998\n+\t* gcc.target/arm/pure-code/pr98998.c: New test.\n+\n+2021-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/99034\n+\t* g++.dg/opt/pr99034.C: New test.\n+\n+2021-02-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99027\n+\t* gfortran.dg/ubound_1.f90: New test.\n+\n+2021-02-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR target/98657\n+\t* gcc.target/aarch64/sve/pr98657.c: New test.\n+\n+2021-02-19  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/decltype64.C: Change argument to const&.\n+\n+2021-02-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/99126\n+\t* jit.dg/test-trap.c: New test.\n+\n+2021-02-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96926\n+\t* g++.dg/cpp0x/overload4.C: New test.\n+\n 2021-02-18  Vladimir N. Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/96264"}, {"sha": "1e275a948de051d2d9123a5fcc1ed310caf5aeac", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,9 @@\n+2021-02-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* be.po, ca.po, da.po, de.po, el.po, eo.po, es.po, fi.po, fr.po,\n+\tid.po, ja.po, nl.po, pt_BR.po, ru.po, sr.po, sv.po, tr.po, uk.po,\n+\tvi.po, zh_CN.po, zh_TW.po: Update.\n+\n 2021-02-05  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cpplib.pot: Regenerate."}, {"sha": "402bd21994964cc2742df5e12773ed31a9842390", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,7 @@\n+2021-02-19  Ayush Mittal  <ayush.m@samsung.com>\n+\n+\t* argv.c (expandargv): free allocated buffer if read fails.\n+\n 2021-02-01  Martin Sebor  <msebor@redhat.com>\n \n \t* dyn-string.c (dyn_string_insert_cstr): Use memcpy instead of strncpy"}, {"sha": "0186f73436e8ea3e8d6b8548c816ccd6287f4cd0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50352c6cd2d2237572bfa53c0ba693f4c8eff1ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=50352c6cd2d2237572bfa53c0ba693f4c8eff1ee", "patch": "@@ -1,3 +1,8 @@\n+2021-02-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/atomic_wait.h (__thread_relax()): Call\n+\t__thread_yield() not __gthread_yield().\n+\n 2021-02-15  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/atomic_wait.h (__thread_yield()): Check"}]}