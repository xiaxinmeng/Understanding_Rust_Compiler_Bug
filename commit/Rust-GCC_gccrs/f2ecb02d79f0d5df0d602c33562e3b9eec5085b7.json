{"sha": "f2ecb02d79f0d5df0d602c33562e3b9eec5085b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJlY2IwMmQ3OWYwZDVkZjBkNjAyYzMzNTYyZTNiOWVlYzUwODViNw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-11-13T14:02:54Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-11-13T14:02:54Z"}, "message": "invoke.texi (-Wtrigraphs, [...]): Update.\n\n\t* invoke.texi (-Wtrigraphs, -fdump-translation-unit, -save-temps,\n\t-time): Update.\n\nFrom-SVN: r37426", "tree": {"sha": "d31c2c95c695ac954a567a241e3d65e439b82d0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d31c2c95c695ac954a567a241e3d65e439b82d0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2ecb02d79f0d5df0d602c33562e3b9eec5085b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2ecb02d79f0d5df0d602c33562e3b9eec5085b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2ecb02d79f0d5df0d602c33562e3b9eec5085b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2ecb02d79f0d5df0d602c33562e3b9eec5085b7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b082bfdb4f6b2823962f7f90ec5a7fe1fc78e3e7"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "80a80df0e304be961083b95f68bd10aba7e46acb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ecb02d79f0d5df0d602c33562e3b9eec5085b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ecb02d79f0d5df0d602c33562e3b9eec5085b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2ecb02d79f0d5df0d602c33562e3b9eec5085b7", "patch": "@@ -1,3 +1,8 @@\n+2000-11-13  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* invoke.texi (-Wtrigraphs, -fdump-translation-unit, -save-temps,\n+\t-time): Update.\n+\n 2000-11-13  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (mulsidi3adddi, umulsidi3adddi): Revert previous change."}, {"sha": "dad2e7f1fcd0008f3167aba2dc09b556bc60a2ed", "filename": "gcc/invoke.texi", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ecb02d79f0d5df0d602c33562e3b9eec5085b7/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ecb02d79f0d5df0d602c33562e3b9eec5085b7/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=f2ecb02d79f0d5df0d602c33562e3b9eec5085b7", "patch": "@@ -1674,7 +1674,8 @@ warning.)  @code{case} labels outside the enumeration range also\n provoke warnings when this option is used.\n \n @item -Wtrigraphs\n-Warn if any trigraphs are encountered (assuming they are enabled).\n+Warn if any trigraphs are encountered that might change the meaning of\n+the program (trigraphs within comments are not warned about).\n \n @item -Wunused-function\n Warn whenever a static function is declared but not defined or a\n@@ -2521,7 +2522,7 @@ numbers and line number note output.  This makes it more feasible to\n use diff on debugging dumps for compiler invocations with different\n options, in particular with and without -g.\n \n-@item -fdump-translation-unit-@var{file} (C++ only)\n+@item -fdump-translation-unit-@var{file} (C and C++ only)\n Dump a representation of the tree structure for the entire translation\n unit to @var{file}.\n \n@@ -2536,15 +2537,16 @@ the target machine.\n Store the usual ``temporary'' intermediate files permanently; place them\n in the current directory and name them based on the source file.  Thus,\n compiling @file{foo.c} with @samp{-c -save-temps} would produce files\n-@file{foo.i} and @file{foo.s}, as well as @file{foo.o}.\n+@file{foo.i} and @file{foo.s}, as well as @file{foo.o}.  This creates a\n+preprocessed @file{foo.i} output file even though the compiler now\n+normally uses an integrated preprocessor.\n \n @item -time\n Report the CPU time taken by each subprocess in the compilation\n-sequence.  For C source files, this is the preprocessor, compiler\n-proper, and assembler.  The output looks like this:\n+sequence.  For C source files, this is the compiler proper and assembler\n+(plus the linker if linking is done).  The output looks like this:\n \n @smallexample\n-# cpp 0.04 0.04\n # cc1 0.12 0.01\n # as 0.00 0.01\n @end smallexample"}]}