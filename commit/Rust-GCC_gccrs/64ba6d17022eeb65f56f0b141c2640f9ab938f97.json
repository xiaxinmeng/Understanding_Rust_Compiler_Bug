{"sha": "64ba6d17022eeb65f56f0b141c2640f9ab938f97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRiYTZkMTcwMjJlZWI2NWY1NmYwYjE0MWMyNjQwZjlhYjkzOGY5Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-04T11:59:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-04T11:59:04Z"}, "message": "inliner: Copy DECL_BY_REFERENCE in copy_decl_to_var [PR93888]\n\nIn the following testcase we emit wrong debug info for the karg\nparameter in the DW_TAG_inlined_subroutine into main.\nThe problem is that the karg PARM_DECL is DECL_BY_REFERENCE and thus\nin the IL has const K & type, but in the source just const K.\nWhen the function is inlined, we create a VAR_DECL for it, but don't\nset DECL_BY_REFERENCE, so when emitting DW_AT_location, we treat it like\na const K & typed variable, but it has DW_AT_abstract_origin which has\njust the const K type and thus the debugger thinks the variable has\nconst K type.\n\nFixed by copying the DECL_BY_REFERENCE flag.  Not doing it in\ncopy_decl_for_dup_finish, because copy_decl_no_change already copies\nthat flag through copy_node and in copy_result_decl_to_var it is\nundesirable, as we handle DECL_BY_REFERENCE in that case instead\nby changing the type.\n\n2020-03-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/93888\n\t* tree-inline.c (copy_decl_to_var): Copy DECL_BY_REFERENCE flag.\n\n\t* g++.dg/guality/pr93888.C: New test.", "tree": {"sha": "0c1fd44a3b5ba8341466c911d0a924dc07d53a1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c1fd44a3b5ba8341466c911d0a924dc07d53a1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64ba6d17022eeb65f56f0b141c2640f9ab938f97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ba6d17022eeb65f56f0b141c2640f9ab938f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ba6d17022eeb65f56f0b141c2640f9ab938f97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ba6d17022eeb65f56f0b141c2640f9ab938f97/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cdfb80a4ec7b6585b436917e13b205055732232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cdfb80a4ec7b6585b436917e13b205055732232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cdfb80a4ec7b6585b436917e13b205055732232"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "b32bd446a4578bb60f83c9b586ff6cf1fa405248", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ba6d17022eeb65f56f0b141c2640f9ab938f97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ba6d17022eeb65f56f0b141c2640f9ab938f97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64ba6d17022eeb65f56f0b141c2640f9ab938f97", "patch": "@@ -1,5 +1,8 @@\n 2020-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/93888\n+\t* tree-inline.c (copy_decl_to_var): Copy DECL_BY_REFERENCE flag.\n+\n \t* tree-ssa-sccvn.c (vn_walk_cb_data::push_partial_def): Add offseti\n \targument.  Change pd argument so that it can be modified.  Turn\n \tconstant non-CONSTRUCTOR store into non-constant if it is too large."}, {"sha": "90061eee3376326a1ff6258e33e6644b5cd7f4c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ba6d17022eeb65f56f0b141c2640f9ab938f97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ba6d17022eeb65f56f0b141c2640f9ab938f97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64ba6d17022eeb65f56f0b141c2640f9ab938f97", "patch": "@@ -1,3 +1,8 @@\n+2020-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/93888\n+\t* g++.dg/guality/pr93888.C: New test.\n+\n 2020-02-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/93964"}, {"sha": "d54a4dcc8cc54f66216368c090d1b044d34f9415", "filename": "gcc/testsuite/g++.dg/guality/pr93888.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ba6d17022eeb65f56f0b141c2640f9ab938f97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr93888.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ba6d17022eeb65f56f0b141c2640f9ab938f97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr93888.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr93888.C?ref=64ba6d17022eeb65f56f0b141c2640f9ab938f97", "patch": "@@ -0,0 +1,24 @@\n+// PR debug/93888\n+// { dg-do run }\n+// { dg-options \"-g -fvar-tracking -fno-inline\" }\n+// { dg-skip-if \"\" { *-*-* }  { \"*\" } { \"-O0\" } }\n+\n+struct K\n+{\n+  K () {}\n+  K (K const &rhs) { k[0] = 'C'; }\n+  char k[8] = {'B','B','B','B','B','B','B','B'};\n+};\n+\n+__attribute__((always_inline)) inline bool\n+foo (const K karg)\n+{\n+  return karg.k[0] != 'C';\t// { dg-final { gdb-test 16 \"karg.k[0]\" \"'C'\" } }\n+}\t\t\t\t// { dg-final { gdb-test 16 \"karg.k[1]\" \"'B'\" } }\n+\n+int\n+main ()\n+{\n+  K x;\n+  return foo (x);\n+}"}, {"sha": "59798ec04545d4cc98cf3bb6c839a5bbfb35d9bf", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ba6d17022eeb65f56f0b141c2640f9ab938f97/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ba6d17022eeb65f56f0b141c2640f9ab938f97/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=64ba6d17022eeb65f56f0b141c2640f9ab938f97", "patch": "@@ -5929,6 +5929,7 @@ copy_decl_to_var (tree decl, copy_body_data *id)\n   TREE_READONLY (copy) = TREE_READONLY (decl);\n   TREE_THIS_VOLATILE (copy) = TREE_THIS_VOLATILE (decl);\n   DECL_GIMPLE_REG_P (copy) = DECL_GIMPLE_REG_P (decl);\n+  DECL_BY_REFERENCE (copy) = DECL_BY_REFERENCE (decl);\n \n   return copy_decl_for_dup_finish (id, decl, copy);\n }"}]}