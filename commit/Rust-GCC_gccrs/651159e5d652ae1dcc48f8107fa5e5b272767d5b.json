{"sha": "651159e5d652ae1dcc48f8107fa5e5b272767d5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUxMTU5ZTVkNjUyYWUxZGNjNDhmODEwN2ZhNWU1YjI3Mjc2N2Q1Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-08-24T17:59:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-08-24T17:59:31Z"}, "message": "ifcvt.c (HAVE_incscc, [...]): Delete.\n\ngcc/\n\t* ifcvt.c (HAVE_incscc, HAVE_decscc, HAVE_cbranchcc4): Delete.\n\t(have_cbranchcc4): New variable.\n\t(cc_in_cond, noce_emit_cmove, noce_get_alt_condition)\n\t(noce_get_condition): Use it instead of HAVE_cbranchcc4.\n\t(if_convert): Initialize have_cbranchcc4.\n\nFrom-SVN: r227142", "tree": {"sha": "d8caf60a281b6b6a8b3d42c1eb6e78fbcd77509c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8caf60a281b6b6a8b3d42c1eb6e78fbcd77509c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/651159e5d652ae1dcc48f8107fa5e5b272767d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651159e5d652ae1dcc48f8107fa5e5b272767d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/651159e5d652ae1dcc48f8107fa5e5b272767d5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651159e5d652ae1dcc48f8107fa5e5b272767d5b/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f9f48bede168fd629d389d6113a1bbe11e2ad99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f9f48bede168fd629d389d6113a1bbe11e2ad99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f9f48bede168fd629d389d6113a1bbe11e2ad99"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "7ef1166c1453c2c76024e5f11a324d508f1bd464", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651159e5d652ae1dcc48f8107fa5e5b272767d5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651159e5d652ae1dcc48f8107fa5e5b272767d5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=651159e5d652ae1dcc48f8107fa5e5b272767d5b", "patch": "@@ -1,3 +1,11 @@\n+2015-08-24  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* ifcvt.c (HAVE_incscc, HAVE_decscc, HAVE_cbranchcc4): Delete.\n+\t(have_cbranchcc4): New variable.\n+\t(cc_in_cond, noce_emit_cmove, noce_get_alt_condition)\n+\t(noce_get_condition): Use it instead of HAVE_cbranchcc4.\n+\t(if_convert): Initialize have_cbranchcc4.\n+\n 2015-08-24  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* builtins.c (expand_cmpstrn): Rename to..."}, {"sha": "5cf1721fcfabace1c687353aab8fe7d88b72d750", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651159e5d652ae1dcc48f8107fa5e5b272767d5b/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651159e5d652ae1dcc48f8107fa5e5b272767d5b/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=651159e5d652ae1dcc48f8107fa5e5b272767d5b", "patch": "@@ -55,30 +55,22 @@\n #include \"shrink-wrap.h\"\n #include \"ifcvt.h\"\n \n-#ifndef HAVE_incscc\n-#define HAVE_incscc 0\n-#endif\n-#ifndef HAVE_decscc\n-#define HAVE_decscc 0\n-#endif\n-\n #ifndef MAX_CONDITIONAL_EXECUTE\n #define MAX_CONDITIONAL_EXECUTE \\\n   (BRANCH_COST (optimize_function_for_speed_p (cfun), false) \\\n    + 1)\n #endif\n \n-#ifndef HAVE_cbranchcc4\n-#define HAVE_cbranchcc4 0\n-#endif\n-\n #define IFCVT_MULTIPLE_DUMPS 1\n \n #define NULL_BLOCK\t((basic_block) NULL)\n \n /* True if after combine pass.  */\n static bool ifcvt_after_combine;\n \n+/* True if the target has the cbranchcc4 optab.  */\n+static bool have_cbranchcc4;\n+\n /* # of IF-THEN or IF-THEN-ELSE blocks we looked at  */\n static int num_possible_if_blocks;\n \n@@ -1014,7 +1006,7 @@ noce_emit_move_insn (rtx x, rtx y)\n static rtx\n cc_in_cond (rtx cond)\n {\n-  if (HAVE_cbranchcc4 && cond\n+  if (have_cbranchcc4 && cond\n       && GET_MODE_CLASS (GET_MODE (XEXP (cond, 0))) == MODE_CC)\n     return XEXP (cond, 0);\n \n@@ -1557,7 +1549,7 @@ noce_emit_cmove (struct noce_if_info *if_info, rtx x, enum rtx_code code,\n   if (! general_operand (cmp_a, GET_MODE (cmp_a))\n       || ! general_operand (cmp_b, GET_MODE (cmp_b)))\n     {\n-      if (!(HAVE_cbranchcc4)\n+      if (!have_cbranchcc4\n \t  || GET_MODE_CLASS (GET_MODE (cmp_a)) != MODE_CC\n \t  || cmp_b != const0_rtx)\n \treturn NULL_RTX;\n@@ -2052,7 +2044,7 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n     }\n \n   cond = canonicalize_condition (if_info->jump, cond, reverse,\n-\t\t\t\t earliest, target, HAVE_cbranchcc4, true);\n+\t\t\t\t earliest, target, have_cbranchcc4, true);\n   if (! cond || ! reg_mentioned_p (target, cond))\n     return NULL;\n \n@@ -2544,7 +2536,7 @@ noce_get_condition (rtx_insn *jump, rtx_insn **earliest, bool then_else_reversed\n   /* Otherwise, fall back on canonicalize_condition to do the dirty\n      work of manipulating MODE_CC values and COMPARE rtx codes.  */\n   tmp = canonicalize_condition (jump, cond, reverse, earliest,\n-\t\t\t\tNULL_RTX, HAVE_cbranchcc4, true);\n+\t\t\t\tNULL_RTX, have_cbranchcc4, true);\n \n   /* We don't handle side-effects in the condition, like handling\n      REG_INC notes and making sure no duplicate conditions are emitted.  */\n@@ -4645,6 +4637,8 @@ if_convert (bool after_combine)\n \n   /* Record whether we are after combine pass.  */\n   ifcvt_after_combine = after_combine;\n+  have_cbranchcc4 = (direct_optab_handler (cbranch_optab, CCmode)\n+\t\t     != CODE_FOR_nothing);\n   num_possible_if_blocks = 0;\n   num_updated_if_blocks = 0;\n   num_true_changes = 0;"}]}