{"sha": "4613543f827f21ebc28da9ba2fba4cee24b43c5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYxMzU0M2Y4MjdmMjFlYmMyOGRhOWJhMmZiYTRjZWUyNGI0M2M1ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2008-02-28T20:02:09Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-02-28T20:02:09Z"}, "message": "simplify-rtx.c (simplify_unary_operation_1): Extend the handling of SUBREG_PROMOTED_VAR_P to cope with cases where the...\n\ngcc/\n\t* simplify-rtx.c (simplify_unary_operation_1): Extend the handling\n\tof SUBREG_PROMOTED_VAR_P to cope with cases where the extended value\n\tis smaller than the original promoted value.\n\t(simplify_subreg): If OP is a SUBREG, try to preserve its\n\tSUBREG_PROMOTED_VAR_P information.\n\nFrom-SVN: r132755", "tree": {"sha": "cd0619117f326654d83ccadab7ec77b8fa664bfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd0619117f326654d83ccadab7ec77b8fa664bfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4613543f827f21ebc28da9ba2fba4cee24b43c5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4613543f827f21ebc28da9ba2fba4cee24b43c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4613543f827f21ebc28da9ba2fba4cee24b43c5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4613543f827f21ebc28da9ba2fba4cee24b43c5e/comments", "author": null, "committer": null, "parents": [{"sha": "43e7fd21ac4980fc31c40e76abf3223e2be167f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43e7fd21ac4980fc31c40e76abf3223e2be167f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43e7fd21ac4980fc31c40e76abf3223e2be167f1"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "9b7c0ccd44b87392e48d499254ded22fb67389b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4613543f827f21ebc28da9ba2fba4cee24b43c5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4613543f827f21ebc28da9ba2fba4cee24b43c5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4613543f827f21ebc28da9ba2fba4cee24b43c5e", "patch": "@@ -1,3 +1,11 @@\n+2008-02-28  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* simplify-rtx.c (simplify_unary_operation_1): Extend the handling\n+\tof SUBREG_PROMOTED_VAR_P to cope with cases where the extended value\n+\tis smaller than the original promoted value.\n+\t(simplify_subreg): If OP is a SUBREG, try to preserve its\n+\tSUBREG_PROMOTED_VAR_P information.\n+\n 2008-02-28  Steven Bosscher  <stevenb.gcc@gmail.com>\n \n \t* tree-ssa-sccvn (vn_ssa_aux_obstack): New obstack."}, {"sha": "34392dce48a92cc305e0e2b5dacbefa2043b31c6", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4613543f827f21ebc28da9ba2fba4cee24b43c5e/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4613543f827f21ebc28da9ba2fba4cee24b43c5e/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=4613543f827f21ebc28da9ba2fba4cee24b43c5e", "patch": "@@ -859,8 +859,8 @@ simplify_unary_operation_1 (enum rtx_code code, enum machine_mode mode, rtx op)\n       if (GET_CODE (op) == SUBREG\n \t  && SUBREG_PROMOTED_VAR_P (op)\n \t  && ! SUBREG_PROMOTED_UNSIGNED_P (op)\n-\t  && GET_MODE (XEXP (op, 0)) == mode)\n-\treturn XEXP (op, 0);\n+\t  && GET_MODE_SIZE (mode) <= GET_MODE_SIZE (GET_MODE (XEXP (op, 0))))\n+\treturn rtl_hooks.gen_lowpart_no_emit (mode, op);\n \n #if defined(POINTERS_EXTEND_UNSIGNED) && !defined(HAVE_ptr_extend)\n       if (! POINTERS_EXTEND_UNSIGNED\n@@ -881,8 +881,8 @@ simplify_unary_operation_1 (enum rtx_code code, enum machine_mode mode, rtx op)\n       if (GET_CODE (op) == SUBREG\n \t  && SUBREG_PROMOTED_VAR_P (op)\n \t  && SUBREG_PROMOTED_UNSIGNED_P (op) > 0\n-\t  && GET_MODE (XEXP (op, 0)) == mode)\n-\treturn XEXP (op, 0);\n+\t  && GET_MODE_SIZE (mode) <= GET_MODE_SIZE (GET_MODE (XEXP (op, 0))))\n+\treturn rtl_hooks.gen_lowpart_no_emit (mode, op);\n \n #if defined(POINTERS_EXTEND_UNSIGNED) && !defined(HAVE_ptr_extend)\n       if (POINTERS_EXTEND_UNSIGNED > 0\n@@ -5021,7 +5021,22 @@ simplify_subreg (enum machine_mode outermode, rtx op,\n \treturn newx;\n       if (validate_subreg (outermode, innermostmode,\n \t\t\t   SUBREG_REG (op), final_offset))\n-        return gen_rtx_SUBREG (outermode, SUBREG_REG (op), final_offset);\n+\t{\n+\t  newx = gen_rtx_SUBREG (outermode, SUBREG_REG (op), final_offset);\n+\t  if (SUBREG_PROMOTED_VAR_P (op)\n+\t      && SUBREG_PROMOTED_UNSIGNED_P (op) >= 0\n+\t      && GET_MODE_CLASS (outermode) == MODE_INT\n+\t      && IN_RANGE (GET_MODE_SIZE (outermode),\n+\t\t\t   GET_MODE_SIZE (innermode),\n+\t\t\t   GET_MODE_SIZE (innermostmode))\n+\t      && subreg_lowpart_p (newx))\n+\t    {\n+\t      SUBREG_PROMOTED_VAR_P (newx) = 1;\n+\t      SUBREG_PROMOTED_UNSIGNED_SET\n+\t\t(newx, SUBREG_PROMOTED_UNSIGNED_P (op));\n+\t    }\n+\t  return newx;\n+\t}\n       return NULL_RTX;\n     }\n "}]}