{"sha": "d074ed7c016d74f5305d482e5a2b685920802a4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA3NGVkN2MwMTZkNzRmNTMwNWQ0ODJlNWEyYjY4NTkyMDgwMmE0ZA==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2003-02-03T21:23:59Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-02-03T21:23:59Z"}, "message": "natRuntime.cc (java::lang::Runtime::_load)): Take care of the fact that on Win32...\n\n2003-02-03  Ranjit Mathew <rmathew@hotmail.com>\n\n\t* java/lang/natRuntime.cc (java::lang::Runtime::_load)): Take care\n\tof the fact that on Win32, JNI_OnLoad is an \"stdcall\" function and\n\tcould also have been exported as \"JNI_OnLoad@8\" (MinGW) or\n\t\"_JNI_OnLoad@8\" (MSVC).\n\nFrom-SVN: r62348", "tree": {"sha": "41214ef4662ff54a4a3264358d4ba31c3cb1da97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41214ef4662ff54a4a3264358d4ba31c3cb1da97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d074ed7c016d74f5305d482e5a2b685920802a4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d074ed7c016d74f5305d482e5a2b685920802a4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d074ed7c016d74f5305d482e5a2b685920802a4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d074ed7c016d74f5305d482e5a2b685920802a4d/comments", "author": null, "committer": null, "parents": [{"sha": "9762ec767ee8e33089b9d4763cc39ad774b36e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9762ec767ee8e33089b9d4763cc39ad774b36e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9762ec767ee8e33089b9d4763cc39ad774b36e43"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "8a5597a98334add937b2398ec8a9cb24a4733e45", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d074ed7c016d74f5305d482e5a2b685920802a4d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d074ed7c016d74f5305d482e5a2b685920802a4d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d074ed7c016d74f5305d482e5a2b685920802a4d", "patch": "@@ -1,3 +1,10 @@\n+2003-02-03  Ranjit Mathew <rmathew@hotmail.com>\n+\n+\t* java/lang/natRuntime.cc (java::lang::Runtime::_load)): Take care\n+\tof the fact that on Win32, JNI_OnLoad is an \"stdcall\" function and\n+\tcould also have been exported as \"JNI_OnLoad@8\" (MinGW) or\n+\t\"_JNI_OnLoad@8\" (MSVC).\n+\n 2003-02-03  Ranjit Mathew <rmathew@hotmail.com>\n \n \t* resolve.cc (_Jv_JNIMethod::ncode): Use stdcall calling"}, {"sha": "09f1e04f36191504309d185aab067f2fdab0f827", "filename": "libjava/java/lang/natRuntime.cc", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d074ed7c016d74f5305d482e5a2b685920802a4d/libjava%2Fjava%2Flang%2FnatRuntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d074ed7c016d74f5305d482e5a2b685920802a4d/libjava%2Fjava%2Flang%2FnatRuntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatRuntime.cc?ref=d074ed7c016d74f5305d482e5a2b685920802a4d", "patch": "@@ -1,6 +1,6 @@\n // natRuntime.cc - Implementation of native side of Runtime class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -241,6 +241,19 @@ java::lang::Runtime::_load (jstring path, jboolean do_search)\n   add_library (h);\n \n   void *onload = lt_dlsym (h, \"JNI_OnLoad\");\n+\n+#ifdef WIN32\n+  // On Win32, JNI_OnLoad is an \"stdcall\" function taking two pointers\n+  // (8 bytes) as arguments.  It could also have been exported as\n+  // \"JNI_OnLoad@8\" (MinGW) or \"_JNI_OnLoad@8\" (MSVC).\n+  if (onload == NULL)\n+    {\n+      onload = lt_dlsym (h, \"JNI_OnLoad@8\");\n+      if (onload == NULL)\n+\tonload = lt_dlsym (h, \"_JNI_OnLoad@8\");\n+    }\n+#endif /* WIN32 */\n+\n   if (onload != NULL)\n     {\n       JavaVM *vm = _Jv_GetJavaVM ();\n@@ -249,7 +262,7 @@ java::lang::Runtime::_load (jstring path, jboolean do_search)\n \t  // FIXME: what?\n \t  return;\n \t}\n-      jint vers = ((jint (*) (JavaVM *, void *)) onload) (vm, NULL);\n+      jint vers = ((jint (JNICALL *) (JavaVM *, void *)) onload) (vm, NULL);\n       if (vers != JNI_VERSION_1_1 && vers != JNI_VERSION_1_2\n \t  && vers != JNI_VERSION_1_4)\n \t{"}]}