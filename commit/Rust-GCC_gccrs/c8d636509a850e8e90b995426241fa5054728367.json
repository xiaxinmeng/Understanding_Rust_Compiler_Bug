{"sha": "c8d636509a850e8e90b995426241fa5054728367", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkNjM2NTA5YTg1MGU4ZTkwYjk5NTQyNjI0MWZhNTA1NDcyODM2Nw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-04-11T10:39:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T10:39:15Z"}, "message": "exp_ch11.ads, [...] (Expand_N_Raise_Expression): New procedure.\n\n2013-04-11  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch11.ads, exp_ch11.adb (Expand_N_Raise_Expression): New procedure.\n\t* exp_util.adb (Insert_Actions): Add entry for N_Raise_Expression.\n\t* expander.adb: Add call to Expand_N_Raise_Expression.\n\t* par-ch11.adb (P_Raise_Expression): New procedure.\n\t* par-ch4.adb (P_Relation): Handle Raise_Expression.\n\t* par.adb (P_Raise_Expression): New procedure.\n\t* sem.adb: Add handling for N_Raise_Expression.\n\t* sem_ch11.ads, sem_ch11.adb (Analyze_Raise_Expression): New procedure.\n\t* sem_res.adb (Resolve): Add handling for N_Raise_Expression.\n\t* sinfo.ads, sinfo.adb (N_Raise_Expression): New node.\n\t* sprint.adb (Sprint_Node_Actual): Add handling for N_Raise_Expression.\n\t* stand.ads (Any_Type): Document use with N_Raise_Expression.\n\nFrom-SVN: r197764", "tree": {"sha": "a1de6d2f72ee6430d13b59a7e4b07057eea1c2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1de6d2f72ee6430d13b59a7e4b07057eea1c2e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8d636509a850e8e90b995426241fa5054728367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d636509a850e8e90b995426241fa5054728367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d636509a850e8e90b995426241fa5054728367", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d636509a850e8e90b995426241fa5054728367/comments", "author": null, "committer": null, "parents": [{"sha": "845f06e288259ec222b6b6bf00cbe889397f8938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845f06e288259ec222b6b6bf00cbe889397f8938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845f06e288259ec222b6b6bf00cbe889397f8938"}], "stats": {"total": 276, "additions": 256, "deletions": 20}, "files": [{"sha": "238de70703115a26d11d63f4720f27a2caad6e99", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -1,3 +1,18 @@\n+2013-04-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch11.ads, exp_ch11.adb (Expand_N_Raise_Expression): New procedure.\n+\t* exp_util.adb (Insert_Actions): Add entry for N_Raise_Expression.\n+\t* expander.adb: Add call to Expand_N_Raise_Expression.\n+\t* par-ch11.adb (P_Raise_Expression): New procedure.\n+\t* par-ch4.adb (P_Relation): Handle Raise_Expression.\n+\t* par.adb (P_Raise_Expression): New procedure.\n+\t* sem.adb: Add handling for N_Raise_Expression.\n+\t* sem_ch11.ads, sem_ch11.adb (Analyze_Raise_Expression): New procedure.\n+\t* sem_res.adb (Resolve): Add handling for N_Raise_Expression.\n+\t* sinfo.ads, sinfo.adb (N_Raise_Expression): New node.\n+\t* sprint.adb (Sprint_Node_Actual): Add handling for N_Raise_Expression.\n+\t* stand.ads (Any_Type): Document use with N_Raise_Expression.\n+\n 2013-04-11  Vincent Celier  <celier@adacore.com>\n \n \t* gnat_ugn.texi: Remove section \"The Development Environments\""}, {"sha": "1843ee0c932430a53df5cf764b786a59565659f1", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1431,6 +1431,44 @@ package body Exp_Ch11 is\n       Possible_Local_Raise (N, Standard_Constraint_Error);\n    end Expand_N_Raise_Constraint_Error;\n \n+   -------------------------------\n+   -- Expand_N_Raise_Expression --\n+   -------------------------------\n+\n+   procedure Expand_N_Raise_Expression (N : Node_Id) is\n+      Loc : constant Source_Ptr := Sloc (N);\n+      Typ : constant Entity_Id  := Etype (N);\n+      RCE : Node_Id;\n+\n+   begin\n+      Possible_Local_Raise (N, Name (N));\n+\n+      --  Later we must teach the back end/gigi how to deal with this, but\n+      --  for now we will assume the type is Standard_Boolean and transform\n+      --  the node to:\n+\n+      --     do\n+      --       raise X [with string]\n+      --     in\n+      --       raise Consraint_Error;\n+\n+      --  The raise constraint error can never be executed. It is just a dummy\n+      --  node that can be labeled with an arbitrary type.\n+\n+      RCE := Make_Raise_Constraint_Error (Loc, Reason => CE_Explicit_Raise);\n+      Set_Etype (RCE, Typ);\n+\n+      Rewrite (N,\n+        Make_Expression_With_Actions (Loc,\n+          Actions     => New_List (\n+            Make_Raise_Statement (Loc,\n+              Name       => Name (N),\n+              Expression => Expression (N))),\n+           Expression => RCE));\n+\n+      Analyze_And_Resolve (N, Typ);\n+   end Expand_N_Raise_Expression;\n+\n    ----------------------------------\n    -- Expand_N_Raise_Program_Error --\n    ----------------------------------"}, {"sha": "96887e2b58020b295d7c2aea708507f91d355e14", "filename": "gcc/ada/exp_ch11.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fexp_ch11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fexp_ch11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.ads?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,7 @@ package Exp_Ch11 is\n    procedure Expand_N_Exception_Declaration          (N : Node_Id);\n    procedure Expand_N_Handled_Sequence_Of_Statements (N : Node_Id);\n    procedure Expand_N_Raise_Constraint_Error         (N : Node_Id);\n+   procedure Expand_N_Raise_Expression               (N : Node_Id);\n    procedure Expand_N_Raise_Program_Error            (N : Node_Id);\n    procedure Expand_N_Raise_Statement                (N : Node_Id);\n    procedure Expand_N_Raise_Storage_Error            (N : Node_Id);"}, {"sha": "f6e52342296f1fa3593e52a5c3d0b639ca6af3e1", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -3674,6 +3674,7 @@ package body Exp_Util is\n                N_Push_Storage_Error_Label               |\n                N_Qualified_Expression                   |\n                N_Quantified_Expression                  |\n+               N_Raise_Expression                       |\n                N_Range                                  |\n                N_Range_Constraint                       |\n                N_Real_Literal                           |"}, {"sha": "cb20234db173134e9f3efdc08e15f2b457466e48", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -388,6 +388,9 @@ package body Expander is\n                   when N_Raise_Constraint_Error =>\n                      Expand_N_Raise_Constraint_Error (N);\n \n+                  when N_Raise_Expression =>\n+                     Expand_N_Raise_Expression (N);\n+\n                   when N_Raise_Program_Error =>\n                      Expand_N_Raise_Program_Error (N);\n "}, {"sha": "f0537f27cd109597ae59802c4e74e8786b7e9b7e", "filename": "gcc/ada/par-ch11.adb", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fpar-ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fpar-ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch11.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -199,11 +199,43 @@ package body Ch11 is\n          return Error;\n    end P_Exception_Choice;\n \n+   ----------------------------\n+   -- 11.3  Raise Expression --\n+   ----------------------------\n+\n+   --  RAISE_EXPRESSION ::= raise [exception_NAME [with string_EXPRESSION]]\n+\n+   --  The caller has verified that the initial token is RAISE\n+\n+   --  Error recovery: can raise Error_Resync\n+\n+   function P_Raise_Expression return Node_Id is\n+      Raise_Node : Node_Id;\n+\n+   begin\n+      if Ada_Version < Ada_2012 then\n+         Error_Msg_SC (\"raise expression is an Ada 2012 feature\");\n+         Error_Msg_SC (\"\\|unit must be compiled with -gnat2012 switch\");\n+      end if;\n+\n+      Raise_Node := New_Node (N_Raise_Expression, Token_Ptr);\n+      Scan; -- past RAISE\n+\n+      Set_Name (Raise_Node, P_Name);\n+\n+      if Token = Tok_With then\n+         Scan; -- past WITH\n+         Set_Expression (Raise_Node, P_Expression);\n+      end if;\n+\n+      return Raise_Node;\n+   end P_Raise_Expression;\n+\n    ---------------------------\n    -- 11.3  Raise Statement --\n    ---------------------------\n \n-   --  RAISE_STATEMENT ::= raise [exception_NAME];\n+   --  RAISE_STATEMENT ::= raise [exception_NAME with string_EXPRESSION];\n \n    --  The caller has verified that the initial token is RAISE\n "}, {"sha": "8066b8c37f02f28f42821a08dea82d43ccca974d", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1818,13 +1818,16 @@ package body Ch4 is\n \n    --  RELATION ::=\n    --    SIMPLE_EXPRESSION [not] in MEMBERSHIP_CHOICE_LIST\n+   --  | RAISE_EXPRESSION\n \n    --  MEMBERSHIP_CHOICE_LIST ::=\n    --    MEMBERSHIP_CHOICE {'|' MEMBERSHIP CHOICE}\n \n    --  MEMBERSHIP_CHOICE ::=\n    --    CHOICE_EXPRESSION | RANGE | SUBTYPE_MARK\n \n+   --  RAISE_EXPRESSION ::= raise exception_NAME [with string_EXPRESSION]\n+\n    --  On return, Expr_Form indicates the categorization of the expression\n \n    --  Note: if Token = Tok_Apostrophe on return, then Expr_Form is set to\n@@ -1839,6 +1842,15 @@ package body Ch4 is\n       Optok        : Source_Ptr;\n \n    begin\n+      --  First check for raise expression\n+\n+      if Token = Tok_Raise then\n+         Expr_Form := EF_Non_Simple;\n+         return P_Raise_Expression;\n+      end if;\n+\n+      --  All other cases\n+\n       Node1 := P_Simple_Expression;\n \n       if Token not in Token_Class_Relop then"}, {"sha": "ac21375ef46d74fba5d0b064f68c4097068dc5bf", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -838,6 +838,7 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n \n    package Ch11 is\n       function P_Handled_Sequence_Of_Statements       return Node_Id;\n+      function P_Raise_Expression                     return Node_Id;\n       function P_Raise_Statement                      return Node_Id;\n \n       function Parse_Exception_Handlers               return List_Id;"}, {"sha": "a81597a5af63d88f278dc19e4694ea2a7693e754", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -470,6 +470,9 @@ package body Sem is\n          when N_Quantified_Expression =>\n             Analyze_Quantified_Expression (N);\n \n+         when N_Raise_Expression =>\n+            Analyze_Raise_Expression (N);\n+\n          when N_Raise_Statement =>\n             Analyze_Raise_Statement (N);\n "}, {"sha": "180ecc6ca0b23a07d44ced0ec257a3df811d4b3f", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -424,6 +424,60 @@ package body Sem_Ch11 is\n       end if;\n    end Analyze_Handled_Statements;\n \n+   ------------------------------\n+   -- Analyze_Raise_Expression --\n+   ------------------------------\n+\n+   procedure Analyze_Raise_Expression (N : Node_Id) is\n+      Exception_Id   : constant Node_Id := Name (N);\n+      Exception_Name : Entity_Id        := Empty;\n+\n+   begin\n+      Check_SPARK_Restriction (\"raise expression is not allowed\", N);\n+\n+      --  Check exception restrictions on the original source\n+\n+      if Comes_From_Source (N) then\n+         Check_Restriction (No_Exceptions, N);\n+      end if;\n+\n+      Analyze (Exception_Id);\n+\n+      if Is_Entity_Name (Exception_Id) then\n+         Exception_Name := Entity (Exception_Id);\n+      end if;\n+\n+      if No (Exception_Name)\n+        or else Ekind (Exception_Name) /= E_Exception\n+      then\n+         Error_Msg_N\n+           (\"exception name expected in raise statement\", Exception_Id);\n+      else\n+         Set_Is_Raised (Exception_Name);\n+      end if;\n+\n+      --  Deal with RAISE WITH case\n+\n+      if Present (Expression (N)) then\n+         Check_Compiler_Unit (Expression (N));\n+         Analyze_And_Resolve (Expression (N), Standard_String);\n+      end if;\n+\n+      --  Check obsolescent use of Numeric_Error\n+\n+      if Exception_Name = Standard_Numeric_Error then\n+         Check_Restriction (No_Obsolescent_Features, Exception_Id);\n+      end if;\n+\n+      --  Kill last assignment indication\n+\n+      Kill_Current_Values (Last_Assignment_Only => True);\n+\n+      --  Set type as Any_Type since we have no information at all on the type\n+\n+      Set_Etype (N, Any_Type);\n+   end Analyze_Raise_Expression;\n+\n    -----------------------------\n    -- Analyze_Raise_Statement --\n    -----------------------------"}, {"sha": "656f12d8cc342cb5f56ea5e39bab517fde6be493", "filename": "gcc/ada/sem_ch11.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsem_ch11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsem_ch11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.ads?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,6 +27,7 @@ with Types; use Types;\n package Sem_Ch11 is\n    procedure Analyze_Exception_Declaration              (N : Node_Id);\n    procedure Analyze_Handled_Statements                 (N : Node_Id);\n+   procedure Analyze_Raise_Expression                   (N : Node_Id);\n    procedure Analyze_Raise_Statement                    (N : Node_Id);\n    procedure Analyze_Raise_xxx_Error                    (N : Node_Id);\n    procedure Analyze_Subprogram_Info                    (N : Node_Id);"}, {"sha": "49515c8d7722685a083fdeb1058d25a2b46f97cf", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -2060,9 +2060,11 @@ package body Sem_Res is\n          Analyze_Dimension (N);\n          return;\n \n-      --  Return if type = Any_Type (previous error encountered)\n+      --  Return if type = Any_Type (previous error encountered). except that\n+      --  a Raise_Expression node is OK: it is legitimately labeled this way\n+      --  since it provides no information on the context.\n \n-      elsif Etype (N) = Any_Type then\n+      elsif Etype (N) = Any_Type and then Nkind (N) /= N_Raise_Expression then\n          Debug_A_Exit (\"resolving  \", N, \"  (done, Etype = Any_Type)\");\n          return;\n       end if;\n@@ -2804,8 +2806,13 @@ package body Sem_Res is\n             when N_Qualified_Expression\n                              => Resolve_Qualified_Expression     (N, Ctx_Type);\n \n+            --  Why is the following null, needs a comment ???\n+\n             when N_Quantified_Expression => null;\n \n+            when N_Raise_Expression\n+                             => Set_Etype (N, Ctx_Type);\n+\n             when N_Raise_xxx_Error\n                              => Set_Etype (N, Ctx_Type);\n "}, {"sha": "19896ea1c6f8d60b2874d9b68ac3f01d39853dc4", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1233,6 +1233,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Parameter_Specification\n         or else NT (N).Nkind = N_Pragma_Argument_Association\n         or else NT (N).Nkind = N_Qualified_Expression\n+        or else NT (N).Nkind = N_Raise_Expression\n         or else NT (N).Nkind = N_Raise_Statement\n         or else NT (N).Nkind = N_Simple_Return_Statement\n         or else NT (N).Nkind = N_Type_Conversion\n@@ -2130,6 +2131,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Package_Renaming_Declaration\n         or else NT (N).Nkind = N_Procedure_Call_Statement\n         or else NT (N).Nkind = N_Procedure_Instantiation\n+        or else NT (N).Nkind = N_Raise_Expression\n         or else NT (N).Nkind = N_Raise_Statement\n         or else NT (N).Nkind = N_Requeue_Statement\n         or else NT (N).Nkind = N_Subprogram_Renaming_Declaration\n@@ -4305,6 +4307,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Parameter_Specification\n         or else NT (N).Nkind = N_Pragma_Argument_Association\n         or else NT (N).Nkind = N_Qualified_Expression\n+        or else NT (N).Nkind = N_Raise_Expression\n         or else NT (N).Nkind = N_Raise_Statement\n         or else NT (N).Nkind = N_Simple_Return_Statement\n         or else NT (N).Nkind = N_Type_Conversion\n@@ -5202,6 +5205,7 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Package_Renaming_Declaration\n         or else NT (N).Nkind = N_Procedure_Call_Statement\n         or else NT (N).Nkind = N_Procedure_Instantiation\n+        or else NT (N).Nkind = N_Raise_Expression\n         or else NT (N).Nkind = N_Raise_Statement\n         or else NT (N).Nkind = N_Requeue_Statement\n         or else NT (N).Nkind = N_Subprogram_Renaming_Declaration"}, {"sha": "89f11f74579b88656109046638bc8218f87a606a", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3545,6 +3545,7 @@ package Sinfo is\n \n       --  RELATION ::=\n       --    SIMPLE_EXPRESSION [not] in MEMBERSHIP_CHOICE_LIST\n+      --  | RAISE_EXPRESSION\n \n       --  MEMBERSHIP_CHOICE_LIST ::=\n       --    MEMBERSHIP_CHOICE {'|' MEMBERSHIP CHOICE}\n@@ -6119,14 +6120,27 @@ package Sinfo is\n \n       --  In Ada 2005, we have\n \n-      --  RAISE_STATEMENT ::= raise; | raise exception_NAME [with EXPRESSION];\n+      --  RAISE_STATEMENT ::=\n+      --    raise; | raise exception_NAME [with string_EXPRESSION];\n \n       --  N_Raise_Statement\n       --  Sloc points to RAISE\n       --  Name (Node2) (set to Empty if no exception name present)\n       --  Expression (Node3) (set to Empty if no expression present)\n       --  From_At_End (Flag4-Sem)\n \n+      ----------------------------\n+      -- 11.3  Raise Expression --\n+      ----------------------------\n+\n+      --  RAISE_EXPRESSION ::= raise exception_NAME [with string_EXPRESSION]\n+\n+      --  N_Raise_Expression\n+      --  Sloc points to RAISE\n+      --  Name (Node2) (always present)\n+      --  Expression (Node3) (set to Empty if no expression present)\n+      --  plus fields for expression\n+\n       -------------------------------\n       -- 12.1  Generic Declaration --\n       -------------------------------\n@@ -7664,6 +7678,7 @@ package Sinfo is\n       N_Allocator,\n       N_Case_Expression,\n       N_Extension_Aggregate,\n+      N_Raise_Expression,\n       N_Range,\n       N_Real_Literal,\n       N_Reference,\n@@ -11348,6 +11363,13 @@ package Sinfo is\n         4 => False,   --  unused\n         5 => False),  --  unused\n \n+     N_Raise_Expression =>\n+       (1 => False,   --  unused\n+        2 => True,    --  Name (Node2)\n+        3 => True,    --  Expression (Node3)\n+        4 => False,   --  unused\n+        5 => False),  --  Etype (Node5-Sem)\n+\n      N_Generic_Subprogram_Declaration =>\n        (1 => True,    --  Specification (Node1)\n         2 => True,    --  Generic_Formal_Declarations (List2)"}, {"sha": "5185c1527aaf220acb4711045de7c1c0ad928c2e", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -1993,6 +1993,7 @@ package body Sprint is\n                if not Has_Parens then\n                   Write_Char ('(');\n                end if;\n+\n                Write_Str_With_Col_Check_Sloc (\"if \");\n                Sprint_Node (Condition);\n                Write_Str_With_Col_Check (\" then \");\n@@ -2763,6 +2764,32 @@ package body Sprint is\n             Write_Str (\" => \");\n             Sprint_Node (Condition (Node));\n \n+         when N_Raise_Expression =>\n+            declare\n+               Has_Parens : constant Boolean := Paren_Count (Node) > 0;\n+\n+            begin\n+               --  The syntax for raise_expression does not include parentheses\n+               --  but sometimes parentheses are required, so unconditionally\n+               --  generate them here unless already present.\n+\n+               if not Has_Parens then\n+                  Write_Char ('(');\n+               end if;\n+\n+               Write_Str_With_Col_Check_Sloc (\"raise \");\n+               Sprint_Node (Name (Node));\n+\n+               if Present (Expression (Node)) then\n+                  Write_Str_With_Col_Check (\" with \");\n+                  Sprint_Node (Expression (Node));\n+               end if;\n+\n+               if not Has_Parens then\n+                  Write_Char (')');\n+               end if;\n+            end;\n+\n          when N_Raise_Constraint_Error =>\n \n             --  This node can be used either as a subexpression or as a"}, {"sha": "0eeeed6cbb9a44e2115c82a79cdc06255b8f39a0", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d636509a850e8e90b995426241fa5054728367/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=c8d636509a850e8e90b995426241fa5054728367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -362,10 +362,25 @@ package Stand is\n    --  identifier references to prevent cascaded errors.\n \n    Any_Type : Entity_Id;\n-   --  Used to represent some unknown type. Plays an important role in\n-   --  avoiding cascaded errors, since any node that remains labeled with\n-   --  this type corresponds to an already issued error message. Any_Type\n-   --  is propagated to avoid cascaded errors from a single type error.\n+   --  Used to represent some unknown type. Any_Type is the type of an\n+   --  unresolved operator, and it is the type of a node where a type error\n+   --  has been detected.  Any_Type plays an important role in avoiding\n+   --  cascaded errors, because it is compatible with all other types, and is\n+   --  propagated to any expression that has a subexpression of Any_Type.\n+   --  When resolving operators, Any_Type is the initial type of the node\n+   --  before any of its candidate interpretations has been examined. If after\n+   --  examining all of them the type is still Any_Type, the node has no\n+   --  possible interpretation and an error can be emitted (and Any_Type will\n+   --  be propagated upwards).\n+\n+   --  There is one situation in which Any_Type is used to legitimately\n+   --  represent a case where the type is not known pre-resolution, and\n+   --  that is for the N_Raise_Expression node. In this case, the Etype\n+   --  being set to Any_Type is normal and does not represent an error.\n+   --  In particular, it is compatible with the type of any constituend of\n+   --  the enclosing expression, if any.  The type is eventually replaced\n+   --  with the type of the context, which plays no role in the resolution\n+   --  of the Raise_Expression.\n \n    Any_Access : Entity_Id;\n    --  Used to resolve the overloaded literal NULL"}]}