{"sha": "346334d2405c8026f32d4c95d7a04c2bc87f3968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ2MzM0ZDI0MDVjODAyNmYzMmQ0Yzk1ZDdhMDRjMmJjODdmMzk2OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-14T11:27:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-14T11:27:56Z"}, "message": "compatibility.cc (_ZTIe): Use const_cast to avoid warning.\n\n\t* src/c++98/compatibility.cc (_ZTIe): Use const_cast to avoid warning.\n\t(_ZTIPe): Ditto.\n\t(ZTIPKe): Ditto.\n\nFrom-SVN: r201723", "tree": {"sha": "87922b204a2871e764e1ee97ce885edba8841ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87922b204a2871e764e1ee97ce885edba8841ef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/346334d2405c8026f32d4c95d7a04c2bc87f3968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/346334d2405c8026f32d4c95d7a04c2bc87f3968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/346334d2405c8026f32d4c95d7a04c2bc87f3968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/346334d2405c8026f32d4c95d7a04c2bc87f3968/comments", "author": null, "committer": null, "parents": [{"sha": "27ed665fd6bcaaef0593532a0519d167a6f8c8e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ed665fd6bcaaef0593532a0519d167a6f8c8e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27ed665fd6bcaaef0593532a0519d167a6f8c8e4"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "ec48c9e699339a4ab0fd017c8e404ee661cf32be", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346334d2405c8026f32d4c95d7a04c2bc87f3968/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346334d2405c8026f32d4c95d7a04c2bc87f3968/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=346334d2405c8026f32d4c95d7a04c2bc87f3968", "patch": "@@ -1,12 +1,17 @@\n+2013-08-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* src/c++98/compatibility.cc (_ZTIe): Use const_cast to avoid warning.\n+\t(_ZTIPe): Ditto.\n+\t(ZTIPKe): Ditto.\n+\n 2013-08-09  Tim Shen  <timshen91@gmail.com>\n \n \t* include/bits/regex_constants.h: Change syntax_option_type to enum\n \ttype.\n \n 2013-08-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n-\t* include/bits/regex.h: Replace _A, _B, _C, _R by _Ap, _Bp,\n-\t_Cp, _Rp.\n+\t* include/bits/regex.h: Replace _A, _B, _C, _R by _Ap, _Bp, _Cp, _Rp.\n \n 2013-08-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n "}, {"sha": "febce3f42794ef315da8e6f4136a985625840daf", "filename": "libstdc++-v3/src/c++98/compatibility.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346334d2405c8026f32d4c95d7a04c2bc87f3968/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346334d2405c8026f32d4c95d7a04c2bc87f3968/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc?ref=346334d2405c8026f32d4c95d7a04c2bc87f3968", "patch": "@@ -516,15 +516,18 @@ extern void *_ZTVN10__cxxabiv119__pointer_type_infoE[];\n extern __attribute__((used, weak)) const char _ZTSe[2] = \"e\";\n extern __attribute__((used, weak)) const char _ZTSPe[3] = \"Pe\";\n extern __attribute__((used, weak)) const char _ZTSPKe[4] = \"PKe\";\n+// const_casts are used to avoid -Wcast-qual warnings\n extern __attribute__((used, weak)) const void * const _ZTIe[2]\n   = { (void *) &_ZTVN10__cxxabiv123__fundamental_type_infoE[2],\n-      (void *) _ZTSe };\n+      const_cast<char*>(_ZTSe) };\n extern __attribute__((used, weak)) const void * const _ZTIPe[4]\n   = { (void *) &_ZTVN10__cxxabiv119__pointer_type_infoE[2],\n-      (void *) _ZTSPe, (void *) 0L, (void *) _ZTIe };\n+      const_cast<char*>(_ZTSPe), (void *) 0L,\n+      const_cast<void* const*>(_ZTIe) };\n extern __attribute__((used, weak)) const void * const _ZTIPKe[4]\n   = { (void *) &_ZTVN10__cxxabiv119__pointer_type_infoE[2],\n-      (void *) _ZTSPKe, (void *) 1L, (void *) _ZTIe };\n+      const_cast<char*>(_ZTSPKe), (void *) 1L,\n+      const_cast<void* const*>(_ZTIe) };\n #endif // _GLIBCXX_LONG_DOUBLE_COMPAT\n \n #ifdef _GLIBCXX_SYMVER_DARWIN"}]}