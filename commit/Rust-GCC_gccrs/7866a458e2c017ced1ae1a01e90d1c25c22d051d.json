{"sha": "7866a458e2c017ced1ae1a01e90d1c25c22d051d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg2NmE0NThlMmMwMTdjZWQxYWUxYTAxZTkwZDFjMjVjMjJkMDUxZA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2001-09-10T01:21:08Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-09-10T01:21:08Z"}, "message": "jvm.h (_Jv_AllocRawObj): New prototype.\n\n\t* include/jvm.h (_Jv_AllocRawObj): New prototype.\n\t* boehm.cc (_Jv_AllocRawObj): Implement.\n\t* nogc.cc (_Jv_AllocRawObj): Likewise.\n\t* exception.cc (_Jv_Throw): Use _Jv_AllocRawObj, not GC_malloc.\n\nFrom-SVN: r45497", "tree": {"sha": "c9cba2a639bc7b4c52507deb032b19f60bb24057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9cba2a639bc7b4c52507deb032b19f60bb24057"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7866a458e2c017ced1ae1a01e90d1c25c22d051d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7866a458e2c017ced1ae1a01e90d1c25c22d051d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7866a458e2c017ced1ae1a01e90d1c25c22d051d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7866a458e2c017ced1ae1a01e90d1c25c22d051d/comments", "author": null, "committer": null, "parents": [{"sha": "69971cd850625b888f40dacdb4fc122b57602e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69971cd850625b888f40dacdb4fc122b57602e9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69971cd850625b888f40dacdb4fc122b57602e9b"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "8e158adfc77aee015f46b32be392325603b23c23", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7866a458e2c017ced1ae1a01e90d1c25c22d051d", "patch": "@@ -1,3 +1,10 @@\n+2001-09-10  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* include/jvm.h (_Jv_AllocRawObj): New prototype.\n+\t* boehm.cc (_Jv_AllocRawObj): Implement.\n+\t* nogc.cc (_Jv_AllocRawObj): Likewise.\n+\t* exception.cc (_Jv_Throw): Use _Jv_AllocRawObj, not GC_malloc.\n+\n 2001-09-06  Anthony Green  <green@redhat.com>\n \n \t* java/util/ResourceBundle.java (tryLocalBundle): Eliminate"}, {"sha": "27e332b259e973eb345a23e055a182e715734f68", "filename": "libjava/boehm.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=7866a458e2c017ced1ae1a01e90d1c25c22d051d", "patch": "@@ -375,6 +375,14 @@ _Jv_AllocArray (jsize size, jclass klass)\n   return obj;\n }\n \n+/* Allocate space for a new non-Java object, which does not have the usual \n+   Java object header but may contain pointers to other GC'ed objects. */\n+void *\n+_Jv_AllocRawObj (jsize size)\n+{\n+  return (void *) GC_MALLOC (size);\n+}\n+\n static void\n call_finalizer (GC_PTR obj, GC_PTR client_data)\n {"}, {"sha": "a8e6ece6e2841f75c6e6087a949a6f120470b2b0", "filename": "libjava/exception.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexception.cc?ref=7866a458e2c017ced1ae1a01e90d1c25c22d051d", "patch": "@@ -20,8 +20,6 @@ details.  */\n \n #include \"unwind.h\"\n \n-#include <gc.h>\n-\n \f\n struct alignment_test_struct\n {\n@@ -73,9 +71,8 @@ get_exception_header_from_ue (_Unwind_Exception *exc)\n extern \"C\" void\n _Jv_Throw (jthrowable value)\n {\n-  /* FIXME: Use the proper API to the collector.  */\n   java_exception_header *xh\n-    = static_cast<java_exception_header *>(GC_malloc (sizeof (*xh)));\n+    = static_cast<java_exception_header *>(_Jv_AllocRawObj (sizeof (*xh)));\n \n   if (value == NULL)\n     value = new java::lang::NullPointerException ();"}, {"sha": "936d4c690c617103978ab255a52030268fbebe6a", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=7866a458e2c017ced1ae1a01e90d1c25c22d051d", "patch": "@@ -114,6 +114,9 @@ void *_Jv_AllocPtrFreeObj (jsize size, jclass cl) __attribute__((__malloc__));\n void *_Jv_AllocArray (jsize size, jclass cl) __attribute__((__malloc__));\n /* Allocate space that is known to be pointer-free.  */\n void *_Jv_AllocBytes (jsize size) __attribute__((__malloc__));\n+/* Allocate space for a new non-Java object, which does not have the usual \n+   Java object header but may contain pointers to other GC'ed objects.  */\n+void *_Jv_AllocRawObj (jsize size) __attribute__((__malloc__));\n /* Explicitly throw an out-of-memory exception.\t*/\n void _Jv_ThrowNoMemory() __attribute__((__noreturn__));\n /* Allocate an object with a single pointer.  The first word is reserved"}, {"sha": "65cc8c30e22e7d57cd10e085bb9da67ac15120d9", "filename": "libjava/nogc.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2Fnogc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7866a458e2c017ced1ae1a01e90d1c25c22d051d/libjava%2Fnogc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fnogc.cc?ref=7866a458e2c017ced1ae1a01e90d1c25c22d051d", "patch": "@@ -66,6 +66,13 @@ _Jv_AllocBytes (jsize size)\n   return obj;\n }\n \n+void *\n+_Jv_AllocRawObj (jsize size)\n+{\n+  total += size;\n+  return calloc (size, 1);\n+}\n+\n void\n _Jv_RegisterFinalizer (void *, _Jv_FinalizerFunc *)\n {"}]}