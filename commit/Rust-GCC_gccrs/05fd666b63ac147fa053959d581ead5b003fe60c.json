{"sha": "05fd666b63ac147fa053959d581ead5b003fe60c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVmZDY2NmI2M2FjMTQ3ZmEwNTM5NTlkNTgxZWFkNWIwMDNmZTYwYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-11-10T22:31:29Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-11-10T22:31:29Z"}, "message": "error.c (dump_function_name): Don't crash if given a friend pseudo-instantiation.\n\n\t* error.c (dump_function_name): Don't crash if given a friend\n\tpseudo-instantiation.\n\nFrom-SVN: r30479", "tree": {"sha": "a157dfab0f24e1183178f96ba5c7d1a59867f79f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a157dfab0f24e1183178f96ba5c7d1a59867f79f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05fd666b63ac147fa053959d581ead5b003fe60c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fd666b63ac147fa053959d581ead5b003fe60c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05fd666b63ac147fa053959d581ead5b003fe60c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fd666b63ac147fa053959d581ead5b003fe60c/comments", "author": null, "committer": null, "parents": [{"sha": "a1d9074cf12f6f156c1dddc415083b3f679cc91b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d9074cf12f6f156c1dddc415083b3f679cc91b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d9074cf12f6f156c1dddc415083b3f679cc91b"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "c50a175b6f376d4bd9cd11582747d506017a12e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05fd666b63ac147fa053959d581ead5b003fe60c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05fd666b63ac147fa053959d581ead5b003fe60c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=05fd666b63ac147fa053959d581ead5b003fe60c", "patch": "@@ -1,3 +1,24 @@\n+1999-11-10  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* error.c (dump_function_name): Don't crash if given a friend\n+\tpseudo-instantiation.\n+\n+\t* cp-tree.h (build_enumerator): Change prototype.\n+\t* decl.c (enum_next_value): Remove.\n+\t(enum_overflow): Likewise.\n+\t(init_decl_processing): Don't register enum_next_value as a root.\n+\t(start_enum): Clear TYPE_VALUES for a redefined enum.\n+\t(finish_enum): Reset the type of enumeration constants.\n+\t(build_enumerator): Fix indentation.  Don't copy CONST_DECLs when\n+\twe don't need to.  Maintain the TYPE_VALUES list and look there\n+\tfor the previously defined enumeration constant.  Let enumeration\n+\tconstants have the type of their values until the enumeration type\n+\tis complete.\n+\t* parse.y (enumlist_opt, enumlist, enumerator): Don't return a value.\n+\t(structsp): Adjust.\n+\t* parse.c: Regenerated.\n+\t* pt.c (tsubst_enum): Adjust according to build_enumerator changes.\n+\t\n Wed Nov 10 12:43:21 1999  Philippe De Muyter  <phdm@macqel.be>\n                           Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "9151b8c604efc59d2a256bc3503f0a60541540ba", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05fd666b63ac147fa053959d581ead5b003fe60c/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05fd666b63ac147fa053959d581ead5b003fe60c/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=05fd666b63ac147fa053959d581ead5b003fe60c", "patch": "@@ -1283,6 +1283,7 @@ dump_function_name (t, flags)\n     dump_decl (name, flags);\n \n   if (DECL_LANG_SPECIFIC (t) && DECL_TEMPLATE_INFO (t)\n+      && !DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (t)\n       && (DECL_TEMPLATE_SPECIALIZATION (t) \n \t  || TREE_CODE (DECL_TI_TEMPLATE (t)) != TEMPLATE_DECL\n \t  || DECL_TEMPLATE_SPECIALIZATION (DECL_TI_TEMPLATE (t))"}]}