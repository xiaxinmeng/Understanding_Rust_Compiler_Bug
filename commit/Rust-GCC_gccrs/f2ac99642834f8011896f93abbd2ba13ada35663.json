{"sha": "f2ac99642834f8011896f93abbd2ba13ada35663", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJhYzk5NjQyODM0ZjgwMTE4OTZmOTNhYmJkMmJhMTNhZGEzNTY2Mw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-07-17T05:33:18Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-07-17T05:33:18Z"}, "message": "c.opt: Document Uncodumented; use it.\n\n\t* c.opt: Document Uncodumented; use it.  Document ObjC options.\n\t* opts.c (print_filtered_help): Skip undocumented switches.\n\t* opts.h (CL_UNDOCUMENTED): New.\n\t* opts.sh: Handle Undocumented.\n\t* toplev.c (documented_lang_options): Prevent its becoming empty.\nf:\n\t* lang-options.h: Remove.\n\t* lang.opt: Document most options.\nobjc:\n\t* lang-options.h: Remove.\n\nFrom-SVN: r69494", "tree": {"sha": "fec195bdc2e5316cb4e977a34615e03efeb33383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fec195bdc2e5316cb4e977a34615e03efeb33383"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2ac99642834f8011896f93abbd2ba13ada35663", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2ac99642834f8011896f93abbd2ba13ada35663", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2ac99642834f8011896f93abbd2ba13ada35663", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2ac99642834f8011896f93abbd2ba13ada35663/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39703eb9e28d401299fb5c86d4b8d51981fa058d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39703eb9e28d401299fb5c86d4b8d51981fa058d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39703eb9e28d401299fb5c86d4b8d51981fa058d"}], "stats": {"total": 411, "additions": 123, "deletions": 288}, "files": [{"sha": "cbc6bc0eecd0e9f7cb668a5f60895289668dc8bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2ac99642834f8011896f93abbd2ba13ada35663", "patch": "@@ -1,3 +1,13 @@\n+2003-07-17  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c.opt: Document Uncodumented; use it.  Document ObjC options.\n+\t* opts.c (print_filtered_help): Skip undocumented switches.\n+\t* opts.h (CL_UNDOCUMENTED): New.\n+\t* opts.sh: Handle Undocumented.\n+\t* toplev.c (documented_lang_options): Prevent its becoming empty.\n+objc:\n+\t* lang-options.h: Remove.\n+\n 2003-07-16  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* loop.c (check_ext_dependent_givs): Pass const struct loop *"}, {"sha": "042f4cfc86db1b024b3a37712aaeda7f261377ec", "filename": "gcc/c.opt", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=f2ac99642834f8011896f93abbd2ba13ada35663", "patch": "@@ -44,7 +44,11 @@\n ; output.  However, if the help text contains a tab character, the\n ; text to the left of the tab is output instead of the switch, and the\n ; text to its right forms the help.  This is useful for elaborating on\n-; what type of argument a switch takes, for example.\n+; what type of argument a switch takes, for example.  If the second\n+; field contains \"Undocumented\" then nothing is output with --help.\n+; Only do this with good reason like the switch being internal between\n+; the driver and the front end - it is not an excuse to leave a switch\n+; undocumented.\n \n ; Comments can appear on their own line anwhere in the file, preceded\n ; by a semicolon.  Whitespace is permitted before the semicolon.\n@@ -87,7 +91,7 @@ C ObjC C++ ObjC++ Joined Separate\n -D<macro>[=<val>]\tDefine a <macro> with <val> as its value.  If just <macro> is given, <val> is taken to be 1\n \n E\n-C ObjC C++ ObjC++\n+C ObjC C++ ObjC++ Undocumented\n \n H\n C ObjC C++ ObjC++\n@@ -318,6 +322,7 @@ Warn about function pointer arithmetic\n \n Wprotocol\n ObjC ObjC++\n+Warn if inherited methods are unimplemented\n \n Wredundant-decls\n C ObjC C++ ObjC++\n@@ -333,6 +338,7 @@ Warn whenever a function's return type defaults to \\\"int\\\" (C), or about inconsi\n \n Wselector\n ObjC ObjC++\n+Warn if a selector has multiple methods\n \n Wsequence-point\n C ObjC\n@@ -436,6 +442,7 @@ Make string literals \\\"const char[]\\\" not \\\"char[]\\\"\n \n fconstant-string-class=\n ObjC ObjC++ Joined\n+-fconst-string-class=<name>\tUse class <name> for constant strings\n \n fdefault-inline\n C++ ObjC++\n@@ -486,6 +493,7 @@ Recognize GNU-defined keywords\n \n fgnu-runtime\n ObjC ObjC++\n+Generate code for GNU runtime environment\n \n fguiding-decls\n C++ ObjC++\n@@ -531,6 +539,7 @@ C++ ObjC++\n \n fnext-runtime\n ObjC ObjC++\n+Generate code for NeXT runtime environment\n \n fnonansi-builtins\n C++ ObjC++\n@@ -643,6 +652,7 @@ Emit cross referencing information\n \n gen-decls\n ObjC ObjC++\n+Dump declarations to a .decl file\n \n idirafter\n C ObjC C++ ObjC++ Joined Separate\n@@ -677,12 +687,10 @@ C ObjC C++ ObjC++ Joined Separate\n -iwithprefixbefore <dir>\tAdd <dir> to the end of the main include path\n \n lang-asm\n-C\n-For internal use only\n+C Undocumented\n \n lang-objc\n-C ObjC C++ ObjC++\n-For internal use only\n+C ObjC C++ ObjC++ Undocumented\n \n nostdinc\n C ObjC C++ ObjC++\n@@ -706,6 +714,7 @@ C ObjC C++ ObjC++\n \n print-objc-runtime-info\n ObjC ObjC++\n+Generate C header of platform-specific features\n \n remap\n C ObjC C++ ObjC++"}, {"sha": "5ca6035432d6408aafa42abf79e8d597be129517", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=f2ac99642834f8011896f93abbd2ba13ada35663", "patch": "@@ -1,3 +1,8 @@\n+Thu Jul 17 06:34:41 2003  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* lang-options.h: Remove.\n+\t* lang.opt: Document most options.\n+\n 2003-07-14  Geoffrey Keating  <geoffk@apple.com>\n \n \t* lang-specs.h (f77-cpp-input): Use -o to specify the CPP output file."}, {"sha": "b2821ed936fe0752f159dfa41bb97e5412988a26", "filename": "gcc/f/lang-options.h", "status": "removed", "additions": 0, "deletions": 239, "changes": 239, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39703eb9e28d401299fb5c86d4b8d51981fa058d/gcc%2Ff%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39703eb9e28d401299fb5c86d4b8d51981fa058d/gcc%2Ff%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-options.h?ref=39703eb9e28d401299fb5c86d4b8d51981fa058d", "patch": "@@ -1,239 +0,0 @@\n-/* lang-options.h file for Fortran\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n-   Contributed by James Craig Burley.\n-\n-This file is part of GNU Fortran.\n-\n-GNU Fortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Fortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Fortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.\n-\n-*/\n-\n-/* This is the contribution to the `documented_lang_options' array in\n-   toplev.c for g77.  */\n-\n-#ifdef __STDC__\t/* To be consistent with lang-specs.h.  Maybe avoid\n-\t\t   overflowing some old compiler's tables, etc. */\n-\n-DEFINE_LANG_NAME (\"Fortran\")\n-\n-  { \"-fversion\", \n-    N_(\"Print g77-specific compiler version info, run internal tests\") },\n-/*\"-fident\",*/\n-/*\"-fno-ident\",*/\n-  { \"-ff66\", \n-    N_(\"Program is written in typical FORTRAN 66 dialect\") },\n-  { \"-fno-f66\", \"\" },\n-  { \"-ff77\", \n-    N_(\"Program is written in typical Unix f77 dialect\") },\n-  { \"-fno-f77\", \n-    N_(\"Program does not use Unix-f77 dialectal features\") },\n-  { \"-ff90\", \n-    N_(\"Program is written in Fortran-90-ish dialect\") },\n-  { \"-fno-f90\", \"\" },\n-  { \"-fautomatic\", \"\" },\n-  { \"-fno-automatic\", \n-    N_(\"Treat local vars and COMMON blocks as if they were named in SAVE statements\") },\n-  { \"-fdollar-ok\", \n-    N_(\"Allow $ in symbol names\") },\n-  { \"-fno-dollar-ok\", \"\" },\n-  { \"-ff2c\", \"\" },\n-  { \"-fno-f2c\", \n-    N_(\"f2c-compatible code need not be generated\") },\n-  { \"-ff2c-library\", \"\" },\n-  { \"-fno-f2c-library\", \n-    N_(\"Unsupported; do not generate libf2c-calling code\") },\n-  { \"-fflatten-arrays\", \n-    N_(\"Unsupported; affects code-generation of arrays\") },\n-  { \"-fno-flatten-arrays\", \"\" },\n-  { \"-ffree-form\", \n-    N_(\"Program is written in Fortran-90-ish free form\") },\n-  { \"-fno-free-form\", \"\" },\n-  { \"-ffixed-form\", \"\" },\n-  { \"-fno-fixed-form\", \"\" },\n-  { \"-fpedantic\", \n-    N_(\"Warn about use of (only a few for now) Fortran extensions\") },\n-  { \"-fno-pedantic\", \"\" },\n-  { \"-fvxt\", \n-    N_(\"Program is written in VXT (Digital-like) FORTRAN\") },\n-  { \"-fno-vxt\", \"\" },\n-  { \"-fno-ugly\", \n-    N_(\"Disallow all ugly features\") },\n-  { \"-fugly-args\", \"\" },\n-  { \"-fno-ugly-args\", \n-    N_(\"Hollerith and typeless constants not passed as arguments\") },\n-  { \"-fugly-assign\", \n-    N_(\"Allow ordinary copying of ASSIGN'ed vars\") },\n-  { \"-fno-ugly-assign\", \"\" },\n-  { \"-fugly-assumed\", \n-    N_(\"Dummy array dimensioned to (1) is assumed-size\") },\n-  { \"-fno-ugly-assumed\", \"\" },\n-  { \"-fugly-comma\", \n-    N_(\"Trailing comma in procedure call denotes null argument\") },\n-  { \"-fno-ugly-comma\", \"\" },\n-  { \"-fugly-complex\", \n-    N_(\"Allow REAL(Z) and AIMAG(Z) given DOUBLE COMPLEX Z\") },\n-  { \"-fno-ugly-complex\", \"\" },\n-  { \"-fugly-init\", \"\" },\n-  { \"-fno-ugly-init\", \n-    N_(\"Initialization via DATA and PARAMETER is type-compatible\") },\n-  { \"-fugly-logint\", \n-    N_(\"Allow INTEGER and LOGICAL interchangeability\") },\n-  { \"-fno-ugly-logint\", \"\" },\n-  { \"-fxyzzy\", \n-    N_(\"Print internal debugging-related info\") },\n-  { \"-fno-xyzzy\", \"\" },\n-  { \"-finit-local-zero\", \n-    N_(\"Initialize local vars and arrays to zero\") },\n-  { \"-fno-init-local-zero\", \"\" },\n-  { \"-fbackslash\", \"\" },\n-  { \"-fno-backslash\", \n-    N_(\"Backslashes in character/hollerith constants not special (C-style)\") },\n-  { \"-femulate-complex\", \n-    N_(\"Have front end emulate COMPLEX arithmetic to avoid bugs\") },\n-  { \"-fno-emulate-complex\", \"\" },\n-  { \"-funderscoring\", \"\" },\n-  { \"-fno-underscoring\", \n-    N_(\"Disable the appending of underscores to externals\") },\n-  { \"-fsecond-underscore\", \"\" },\n-  { \"-fno-second-underscore\", \n-    N_(\"Never append a second underscore to externals\") },\n-  { \"-fintrin-case-initcap\", \n-    N_(\"Intrinsics spelled as e.g. SqRt\") },\n-  { \"-fintrin-case-upper\", \n-    N_(\"Intrinsics in uppercase\") },\n-  { \"-fintrin-case-lower\", \"\" },\n-  { \"-fintrin-case-any\", \n-    N_(\"Intrinsics letters in arbitrary cases\") },\n-  { \"-fmatch-case-initcap\", \n-    N_(\"Language keywords spelled as e.g. IOStat\") },\n-  { \"-fmatch-case-upper\", \n-    N_(\"Language keywords in uppercase\") },\n-  { \"-fmatch-case-lower\", \"\" },\n-  { \"-fmatch-case-any\", \n-    N_(\"Language keyword letters in arbitrary cases\") },\n-  { \"-fsource-case-upper\", \n-    N_(\"Internally convert most source to uppercase\") },\n-  { \"-fsource-case-lower\", \"\" },\n-  { \"-fsource-case-preserve\", \n-    N_(\"Internally preserve source case\") },\n-  { \"-fsymbol-case-initcap\", \n-    N_(\"Symbol names spelled in mixed case\") },\n-  { \"-fsymbol-case-upper\", \n-    N_(\"Symbol names in uppercase\") },\n-  { \"-fsymbol-case-lower\", \n-    N_(\"Symbol names in lowercase\") },\n-  { \"-fsymbol-case-any\", \"\" },\n-  { \"-fcase-strict-upper\", \n-    N_(\"Program written in uppercase\") },\n-  { \"-fcase-strict-lower\", \n-    N_(\"Program written in lowercase\") },\n-  { \"-fcase-initcap\", \n-    N_(\"Program written in strict mixed-case\") },\n-  { \"-fcase-upper\", \n-    N_(\"Compile as if program written in uppercase\") },\n-  { \"-fcase-lower\", \n-    N_(\"Compile as if program written in lowercase\") },\n-  { \"-fcase-preserve\", \n-    N_(\"Preserve all spelling (case) used in program\") },\n-  { \"-fbadu77-intrinsics-delete\", \n-    N_(\"Delete libU77 intrinsics with bad interfaces\") },\n-  { \"-fbadu77-intrinsics-disable\", \n-    N_(\"Disable libU77 intrinsics with bad interfaces\") },\n-  { \"-fbadu77-intrinsics-enable\", \"\" },\n-  { \"-fbadu77-intrinsics-hide\", \n-    N_(\"Hide libU77 intrinsics with bad interfaces\") },\n-  { \"-ff2c-intrinsics-delete\", \n-    N_(\"Delete non-FORTRAN-77 intrinsics f2c supports\") },\n-  { \"-ff2c-intrinsics-disable\", \n-    N_(\"Disable non-FORTRAN-77 intrinsics f2c supports\") },\n-  { \"-ff2c-intrinsics-enable\", \"\" },\n-  { \"-ff2c-intrinsics-hide\", \n-    N_(\"Hide non-FORTRAN-77 intrinsics f2c supports\") },\n-  { \"-ff90-intrinsics-delete\", \n-    N_(\"Delete non-FORTRAN-77 intrinsics F90 supports\") },\n-  { \"-ff90-intrinsics-disable\", \n-    N_(\"Disable non-FORTRAN-77 intrinsics F90 supports\") },\n-  { \"-ff90-intrinsics-enable\", \"\" },\n-  { \"-ff90-intrinsics-hide\", \n-    N_(\"Hide non-FORTRAN-77 intrinsics F90 supports\") },\n-  { \"-fgnu-intrinsics-delete\", \n-    N_(\"Delete non-FORTRAN-77 intrinsics g77 supports\") },\n-  { \"-fgnu-intrinsics-disable\", \n-    N_(\"Disable non-FORTRAN 77 intrinsics F90 supports\") },\n-  { \"-fgnu-intrinsics-enable\", \"\" },\n-  { \"-fgnu-intrinsics-hide\", \n-    N_(\"Hide non-FORTRAN 77 intrinsics F90 supports\") },\n-  { \"-fmil-intrinsics-delete\", \n-    N_(\"Delete MIL-STD 1753 intrinsics\") },\n-  { \"-fmil-intrinsics-disable\", \n-    N_(\"Disable MIL-STD 1753 intrinsics\") },\n-  { \"-fmil-intrinsics-enable\", \"\" },\n-  { \"-fmil-intrinsics-hide\", \n-    N_(\"Hide MIL-STD 1753 intrinsics\") },\n-  { \"-funix-intrinsics-delete\", \n-    N_(\"Delete libU77 intrinsics\") },\n-  { \"-funix-intrinsics-disable\", \n-    N_(\"Disable libU77 intrinsics\") },\n-  { \"-funix-intrinsics-enable\", \"\" },\n-  { \"-funix-intrinsics-hide\", \n-    N_(\"Hide libU77 intrinsics\") },\n-  { \"-fvxt-intrinsics-delete\", \n-    N_(\"Delete non-FORTRAN-77 intrinsics VXT FORTRAN supports\") },\n-  { \"-fvxt-intrinsics-disable\", \n-    N_(\"Disable non-FORTRAN-77 intrinsics VXT FORTRAN supports\") },\n-  { \"-fvxt-intrinsics-enable\", \"\" },\n-  { \"-fvxt-intrinsics-hide\", \n-    N_(\"Hide non-FORTRAN-77 intrinsics VXT FORTRAN supports\") },\n-  { \"-fzeros\", \n-    N_(\"Treat initial values of 0 like non-zero values\") },\n-  { \"-fno-zeros\", \"\" },\n-  { \"-fdebug-kludge\", \n-    N_(\"Emit special debugging information for COMMON and EQUIVALENCE (disabled)\") },\n-  { \"-fno-debug-kludge\", \"\" },\n-  { \"-fonetrip\", \n-    N_(\"Take at least one trip through each iterative DO loop\") },\n-  { \"-fno-onetrip\", \"\" },\n-  { \"-fsilent\", \"\" },\n-  { \"-fno-silent\", \n-    N_(\"Print names of program units as they are compiled\") },\n-  { \"-fglobals\", \"\" },\n-  { \"-fno-globals\", \n-    N_(\"Disable fatal diagnostics about inter-procedural problems\") },\n-  { \"-ftypeless-boz\", \n-    N_(\"Make prefix-radix non-decimal constants be typeless\") },\n-  { \"-fno-typeless-boz\", \"\" },\n-  { \"-fbounds-check\", \n-    N_(\"Generate code to check subscript and substring bounds\") },\n-  { \"-fno-bounds-check\", \"\" },\n-  { \"-ffortran-bounds-check\",\n-    N_(\"Fortran-specific form of -fbounds-check\") },\n-  { \"-fno-fortran-bounds-check\", \"\" },\n-  { \"-Wglobals\", \"\" },\n-  { \"-Wno-globals\", \n-    N_(\"Disable warnings about inter-procedural problems\") },\n-/*\"-Wimplicit\",*/\n-/*\"-Wno-implicit\",*/\n-  { \"-Wsurprising\", \n-    N_(\"Warn about constructs with surprising meanings\") },\n-  { \"-Wno-surprising\", \"\" },\n-/*\"-Wall\",*/\n-/* Prefix options.  */\n-  { \"-I\", \n-    N_(\"Add a directory for INCLUDE searching\") },\n-  { \"-ffixed-line-length-\", \n-    N_(\"Set the maximum line length\") },\n-\n-#endif"}, {"sha": "d6a53b7dcd13be1502ef66833507792c97d55e24", "filename": "gcc/f/lang.opt", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Ff%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Ff%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang.opt?ref=f2ac99642834f8011896f93abbd2ba13ada35663", "patch": "@@ -27,9 +27,11 @@ F77\n \n I\n F77 Joined\n+Add a directory for INCLUDE searching\n \n Wall\n F77\n+; Documented in C\n \n Wcomment\n F77\n@@ -39,6 +41,7 @@ F77\n \n Wglobals\n F77\n+Enable warnings about inter-procedural problems\n \n Wimplicit\n F77\n@@ -48,93 +51,122 @@ F77\n \n Wsurprising\n F77\n+Warn about constructs with surprising meanings\n \n Wtrigraphs\n F77\n \n fautomatic\n F77\n+Do not treat local variables and COMMON blocks as if they were named in SAVE statements\n \n fbackslash\n F77\n+Backslashes in character and hollerith constants are special (not C-style)\n \n fbadu77-intrinsics-delete\n F77 RejectNegative\n+Delete libU77 intrinsics with bad interfaces\n \n fbadu77-intrinsics-disable\n F77 RejectNegative\n+Disable libU77 intrinsics with bad interfaces\n \n fbadu77-intrinsics-enable\n F77 RejectNegative\n+Enable libU77 intrinsics with bad interfaces\n \n fbadu77-intrinsics-hide\n F77 RejectNegative\n+Hide libU77 intrinsics with bad interfaces\n \n fcase-initcap\n F77 RejectNegative\n+Program written in strict mixed-case\n \n fcase-lower\n F77 RejectNegative\n+Compile as if program written in lowercase\n \n fcase-preserve\n F77 RejectNegative\n+Preserve case used in program\n \n fcase-strict-lower\n F77 RejectNegative\n+Program written in lowercase\n \n fcase-strict-upper\n F77 RejectNegative\n+Program written in uppercase\n \n fcase-upper\n F77 RejectNegative\n+Compile as if program written in uppercase\n \n fdebug-kludge\n F77\n+Emit special debugging information for COMMON and EQUIVALENCE (disabled)\n \n fdollar-ok\n F77\n+Allow '$' in symbol names\n \n femulate-complex\n F77\n+Have front end emulate COMPLEX arithmetic to avoid bugs\n \n ff2c\n F77\n+f2c-compatible code can be generated\n \n ff2c-intrinsics-delete\n F77 RejectNegative\n+Delete non-FORTRAN-77 intrinsics f2c supports\n \n ff2c-intrinsics-disable\n F77 RejectNegative\n+Disable non-FORTRAN-77 intrinsics f2c supports\n \n ff2c-intrinsics-enable\n F77 RejectNegative\n+Enable non-FORTRAN-77 intrinsics f2c supports\n \n ff2c-intrinsics-hide\n F77 RejectNegative\n+Hide non-FORTRAN-77 intrinsics f2c supports\n \n ff2c-library\n F77\n+Unsupported; generate libf2c-calling code\n \n ff66\n F77\n+Program is written in typical FORTRAN 66 dialect\n \n ff77\n F77\n+Program is written in typical Unix-f77 dialect\n \n ff90\n F77\n+Program is written in Fortran-90-ish dialect\n \n ff90-intrinsics-delete\n F77 RejectNegative\n+Delete non-FORTRAN-77 intrinsics F90 supports\n \n ff90-intrinsics-disable\n F77 RejectNegative\n+Disable non-FORTRAN-77 intrinsics F90 supports\n \n ff90-intrinsics-enable\n F77 RejectNegative\n+Enable non-FORTRAN-77 intrinsics F90 supports\n \n ff90-intrinsics-hide\n F77 RejectNegative\n+Hide non-FORTRAN-77 intrinsics F90 supports\n \n ff90-not-vxt\n F77 RejectNegative\n@@ -144,173 +176,227 @@ F77\n \n ffixed-line-length-\n F77 Joined\n+ffixed-line-length-<number>\tSet the maximum line length to <number>\n \n fflatten-arrays\n F77\n+Unsupported; affects code generation of arrays\n \n ffortran-bounds-check\n F77\n+Generate code to check subscript and substring bounds\n \n ffree-form\n F77\n+Program is written in Fortran-90-ish free form\n \n fglobals\n F77\n+Enable fatal diagnostics about inter-procedural problems\n \n fgnu-intrinsics-delete\n F77 RejectNegative\n+Delete non-FORTRAN-77 intrinsics g77 supports\n \n fgnu-intrinsics-disable\n F77 RejectNegative\n+Disable non-FORTRAN 77 intrinsics F90 supports\n \n fgnu-intrinsics-enable\n F77 RejectNegative\n+Enable non-FORTRAN 77 intrinsics F90 supports\n \n fgnu-intrinsics-hide\n F77 RejectNegative\n+Hide non-FORTRAN 77 intrinsics F90 supports\n \n finit-local-zero\n F77\n+Initialize local vars and arrays to zero\n \n fintrin-case-any\n F77 RejectNegative\n+Intrinsics letters in arbitrary cases\n \n fintrin-case-initcap\n F77 RejectNegative\n+Intrinsics spelled as e.g. SqRt\n \n fintrin-case-lower\n F77 RejectNegative\n+Intrinsics in lowercase\n \n fintrin-case-upper\n F77 RejectNegative\n+Intrinsics in uppercase\n \n fmatch-case-any\n F77 RejectNegative\n+Language keyword letters in arbitrary cases\n \n fmatch-case-initcap\n F77 RejectNegative\n+Language keywords spelled as e.g. IOStat\n \n fmatch-case-lower\n F77 RejectNegative\n+Language keywords in lowercase\n \n fmatch-case-upper\n F77 RejectNegative\n+Language keywords in uppercase\n \n fmil-intrinsics-delete\n F77 RejectNegative\n+Delete MIL-STD 1753 intrinsics\n \n fmil-intrinsics-disable\n F77 RejectNegative\n+Disable MIL-STD 1753 intrinsics\n \n fmil-intrinsics-enable\n F77 RejectNegative\n+Enable MIL-STD 1753 intrinsics\n \n fmil-intrinsics-hide\n F77 RejectNegative\n+Hide MIL-STD 1753 intrinsics\n \n fonetrip\n F77\n+Take at least one trip through each iterative DO loop\n \n fpedantic\n F77\n+Warn about use of (only a few for now) Fortran extensions\n \n fpreprocessed\n F77\n \n fsecond-underscore\n F77\n+Allow appending a second underscore to externals\n \n fsilent\n F77\n+Do not print names of program units as they are compiled\n \n fsource-case-lower\n F77 RejectNegative\n+Internally convert most source to lowercase\n \n fsource-case-preserve\n F77 RejectNegative\n+Internally preserve source case\n \n fsource-case-upper\n F77 RejectNegative\n+Internally convert most source to uppercase\n \n fsymbol-case-any\n F77 RejectNegative\n \n fsymbol-case-initcap\n F77 RejectNegative\n+Symbol names spelled in mixed case\n \n fsymbol-case-lower\n F77 RejectNegative\n+Symbol names in lowercase\n \n fsymbol-case-upper\n F77 RejectNegative\n+Symbol names in uppercase\n \n ftypeless-boz\n F77\n+Make prefix-radix non-decimal constants be typeless\n \n fugly\n F77\n+Allow all ugly features\n \n fugly-args\n F77\n+Hollerith and typeless can be passed as arguments\n \n fugly-assign\n F77\n+Allow ordinary copying of ASSIGN'ed vars\n \n fugly-assumed\n F77\n+Dummy array dimensioned to (1) is assumed-size\n \n fugly-comma\n F77\n+Trailing comma in procedure call denotes null argument\n \n fugly-complex\n F77\n+Allow REAL(Z) and AIMAG(Z) given DOUBLE COMPLEX Z\n \n fugly-init\n F77\n+Initialization via DATA and PARAMETER is not type-compatible\n \n fugly-logint\n F77\n+Allow INTEGER and LOGICAL interchangeability\n \n funderscoring\n F77\n+Append underscores to externals\n \n funix-intrinsics-delete\n F77 RejectNegative\n+Delete libU77 intrinsics\n \n funix-intrinsics-disable\n F77 RejectNegative\n+Disable libU77 intrinsics\n \n funix-intrinsics-enable\n F77 RejectNegative\n+Enable libU77 intrinsics\n \n funix-intrinsics-hide\n F77 RejectNegative\n+Hide libU77 intrinsics\n \n fversion\n F77 RejectNegative\n+Print g77-specific version information and run internal tests\n \n fvxt\n F77\n+Program is written in VXT (Digital-like) FORTRAN\n \n fvxt-intrinsics-delete\n F77 RejectNegative\n+Delete non-FORTRAN-77 intrinsics VXT FORTRAN supports\n \n fvxt-intrinsics-disable\n F77 RejectNegative\n+Disable non-FORTRAN-77 intrinsics VXT FORTRAN supports\n \n fvxt-intrinsics-enable\n F77 RejectNegative\n+Enable non-FORTRAN-77 intrinsics VXT FORTRAN supports\n \n fvxt-intrinsics-hide\n F77 RejectNegative\n+Hide non-FORTRAN-77 intrinsics VXT FORTRAN supports\n \n fvxt-not-f90\n F77 RejectNegative\n \n fxyzzy\n F77\n+Print internal debugging-related information\n \n fzeros\n F77\n+Treat initial values of 0 like non-zero values\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "c99529cf21ca837685cd9f22336f72f53f3680b6", "filename": "gcc/objc/lang-options.h", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39703eb9e28d401299fb5c86d4b8d51981fa058d/gcc%2Fobjc%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39703eb9e28d401299fb5c86d4b8d51981fa058d/gcc%2Fobjc%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Flang-options.h?ref=39703eb9e28d401299fb5c86d4b8d51981fa058d", "patch": "@@ -1,43 +0,0 @@\n-/* Switch definitions for the GNU compiler for the Objective-C language.\n-   Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* This is the contribution to the `documented_lang_options' array in\n-   toplev.c for Objective-C.  */\n-\n-DEFINE_LANG_NAME (\"Objective C\")\n-  \n-  { \"-gen-decls\", \n-    N_(\"Dump decls to a .decl file\") },\n-  { \"-fgnu-runtime\", \n-    N_(\"Generate code for GNU runtime environment\") },\n-  { \"-fno-gnu-runtime\", \"\" },\n-  { \"-fnext-runtime\", \n-    N_(\"Generate code for NeXT runtime environment\") },\n-  { \"-fno-next-runtime\", \"\" },\n-  { \"-Wselector\", \n-    N_(\"Warn if a selector has multiple methods\") },\n-  { \"-Wno-selector\", \"\" },\n-  { \"-Wprotocol\", \"\" },\n-  { \"-Wno-protocol\", \n-    N_(\"Do not warn if inherited methods are unimplemented\") },\n-  { \"-print-objc-runtime-info\",\n-    N_(\"Generate C header of platform specific features\") },\n-  { \"-fconstant-string-class\",\n-    N_(\"Specify the name of the class for constant strings\") },"}, {"sha": "6e966633f20d77c7d5585f6ab2e77a6238d3f0d2", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=f2ac99642834f8011896f93abbd2ba13ada35663", "patch": "@@ -1523,6 +1523,10 @@ print_filtered_help (unsigned int flag)\n       if ((cl_options[i].flags & filter) != flag)\n \tcontinue;\n \n+      /* Skip help for internal switches.  */\n+      if (cl_options[i].flags & CL_UNDOCUMENTED)\n+\tcontinue;\n+\n       /* During transition, ignore switches with no help.  */\n       help = cl_options[i].help;\n       if (!help)"}, {"sha": "0848054e56730d168a322bc6a19aeec692e2d88b", "filename": "gcc/opts.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=f2ac99642834f8011896f93abbd2ba13ada35663", "patch": "@@ -42,5 +42,6 @@ extern const char *const lang_names[];\n #define CL_MISSING_OK\t\t(1 << 27) /* Missing argument OK (joined).  */\n #define CL_UINTEGER\t\t(1 << 28) /* Argument is an integer >=0.  */\n #define CL_COMMON\t\t(1 << 29) /* Language-independent.  */\n+#define CL_UNDOCUMENTED\t\t(1 << 30) /* Do not output with --help.  */\n \n #endif"}, {"sha": "13cd4c4fccc12eb592d7ff16a5238ccaeb749258", "filename": "gcc/opts.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Fopts.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Fopts.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.sh?ref=f2ac99642834f8011896f93abbd2ba13ada35663", "patch": "@@ -65,6 +65,7 @@ ${AWK} '\n         if (flags ~ \" Separate \") result = result \" | CL_SEPARATE\"\n         if (flags ~ \" RejectNegative \") result = result \" | CL_REJECT_NEGATIVE\"\n         if (flags ~ \" UInteger \") result = result \" | CL_UINTEGER\"\n+        if (flags ~ \" Undocumented \") result = result \" | CL_UNDOCUMENTED\"\n \tsub( \"^0 \\\\| \", \"\", result )\n \treturn result\n     }"}, {"sha": "4e34bc150d34383211894bcd0ef833f26496c656", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2ac99642834f8011896f93abbd2ba13ada35663/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=f2ac99642834f8011896f93abbd2ba13ada35663", "patch": "@@ -1192,6 +1192,7 @@ documented_lang_options[] =\n \n #include \"options_.h\"\n \n+  { NULL, \"Dummy\" }\n };\n \n /* Here is a table, controlled by the tm.h file, listing each -m switch"}]}