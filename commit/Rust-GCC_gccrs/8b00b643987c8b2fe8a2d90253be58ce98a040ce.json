{"sha": "8b00b643987c8b2fe8a2d90253be58ce98a040ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIwMGI2NDM5ODdjOGIyZmU4YTJkOTAyNTNiZTU4Y2U5OGEwNDBjZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-04-02T21:09:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-04-02T21:09:38Z"}, "message": "re PR c++/34949 (Dead code in empty destructors.)\n\n\tPR c++/34949\n\t* decl.c (begin_destructor_body): Clobber the object in a cleanup.\n\nFrom-SVN: r197375", "tree": {"sha": "5d007408f4fe3731f7c28e6619d6e9e116feb7f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d007408f4fe3731f7c28e6619d6e9e116feb7f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b00b643987c8b2fe8a2d90253be58ce98a040ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b00b643987c8b2fe8a2d90253be58ce98a040ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b00b643987c8b2fe8a2d90253be58ce98a040ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b00b643987c8b2fe8a2d90253be58ce98a040ce/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "622849c9371e14fcec645c22b87adedaa16e34e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622849c9371e14fcec645c22b87adedaa16e34e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/622849c9371e14fcec645c22b87adedaa16e34e4"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "1b847a9acc0e548ea664b8a5fa50d79d47a813dc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b00b643987c8b2fe8a2d90253be58ce98a040ce/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b00b643987c8b2fe8a2d90253be58ce98a040ce/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8b00b643987c8b2fe8a2d90253be58ce98a040ce", "patch": "@@ -1,3 +1,8 @@\n+2013-04-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/34949\n+\t* decl.c (begin_destructor_body): Clobber the object in a cleanup.\n+\n 2013-04-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* friend.c (do_friend): Use COMPLETE_OR_OPEN_TYPE_P."}, {"sha": "70137f4a7fc3b79024c598c939089438b6095a7e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b00b643987c8b2fe8a2d90253be58ce98a040ce/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b00b643987c8b2fe8a2d90253be58ce98a040ce/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8b00b643987c8b2fe8a2d90253be58ce98a040ce", "patch": "@@ -13555,6 +13555,14 @@ begin_destructor_body (void)\n       initialize_vtbl_ptrs (current_class_ptr);\n       finish_compound_stmt (compound_stmt);\n \n+      /* Insert a cleanup to let the back end know that the object is dead\n+\t when we exit the destructor, either normally or via exception.  */\n+      tree clobber = build_constructor (current_class_type, NULL);\n+      TREE_THIS_VOLATILE (clobber) = true;\n+      tree exprstmt = build2 (MODIFY_EXPR, current_class_type,\n+\t\t\t      current_class_ref, clobber);\n+      finish_decl_cleanup (NULL_TREE, exprstmt);\n+\n       /* And insert cleanups for our bases and members so that they\n \t will be properly destroyed if we throw.  */\n       push_base_cleanups ();"}, {"sha": "a77db38755aee55e024740dfb47e412b36edf5e4", "filename": "gcc/testsuite/g++.dg/opt/vt2.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b00b643987c8b2fe8a2d90253be58ce98a040ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b00b643987c8b2fe8a2d90253be58ce98a040ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvt2.C?ref=8b00b643987c8b2fe8a2d90253be58ce98a040ce", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/34949\n+// { dg-options \"-O3\" }\n+// { dg-final { scan-assembler-not \"mov\\[^\\n\\]*_ZTV\" { target i?86-*-* x86_64-*-* } } }\n+\n+class Foo\n+{\n+public:\n+  virtual ~Foo();\n+};\n+\n+Foo::~Foo()\n+{\n+}\n+\n+\n+class Bar : public Foo\n+{\n+public:\n+  virtual ~Bar();\n+};\n+\n+Bar::~Bar()\n+{\n+}"}]}