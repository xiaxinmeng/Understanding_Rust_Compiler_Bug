{"sha": "3664a0f184ad90a0aa65b473d180debce6402ab0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2NGEwZjE4NGFkOTBhMGFhNjViNDczZDE4MGRlYmNlNjQwMmFiMA==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2018-10-19T08:33:52Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@gcc.gnu.org", "date": "2018-10-19T08:33:52Z"}, "message": "lra: fix spill_hard_reg_in_range clobber check\n\nFROM..TO range might contain NOTE_INSN_DELETED insns, for which the\ncorresponding entries in lra_insn_recog_data[] are NULLs.  Example from\nthe problematic code from PR87596:\n\n    (note 148 154 68 7 NOTE_INSN_DELETED)\n\nlra_insn_recog_data[] is used directly only when the insn in question\nis taken from insn_bitmap, which is not the case here.  In other\nsituations lra_get_insn_recog_data () guarded by INSN_P () or other\nstricter predicate are used.  So we need to do this here as well.\n\nA tiny detail worth noting: I put the INSN_P () check before the\ninsn_bitmap check, because I believe that insn_bitmap can contain only\nreal insns anyway.\n\ngcc/ChangeLog:\n\n2018-10-19  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\tPR rtl-optimization/87596\n\t* lra-constraints.c (spill_hard_reg_in_range): Use INSN_P () +\n\tlra_get_insn_recog_data () instead of lra_insn_recog_data[]\n\tfor instructions in FROM..TO range.\n\ngcc/testsuite/ChangeLog:\n\n2018-10-19  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\tPR rtl-optimization/87596\n\t* gcc.target/i386/pr87596.c: New test.\n\nFrom-SVN: r265306", "tree": {"sha": "2a03e07a844a678431b3cd5b040e01907a9e0480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a03e07a844a678431b3cd5b040e01907a9e0480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3664a0f184ad90a0aa65b473d180debce6402ab0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3664a0f184ad90a0aa65b473d180debce6402ab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3664a0f184ad90a0aa65b473d180debce6402ab0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3664a0f184ad90a0aa65b473d180debce6402ab0/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba9a8625b0a7eddb237d140e89ddb78afd1e3539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9a8625b0a7eddb237d140e89ddb78afd1e3539", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9a8625b0a7eddb237d140e89ddb78afd1e3539"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "1b91d7d42a0193fea238aa28577f9e830f17c64f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3664a0f184ad90a0aa65b473d180debce6402ab0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3664a0f184ad90a0aa65b473d180debce6402ab0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3664a0f184ad90a0aa65b473d180debce6402ab0", "patch": "@@ -1,3 +1,10 @@\n+2018-10-19  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR rtl-optimization/87596\n+\t* lra-constraints.c (spill_hard_reg_in_range): Use INSN_P () +\n+\tlra_get_insn_recog_data () instead of lra_insn_recog_data[]\n+\tfor instructions in FROM..TO range.\n+\n 2018-10-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* cfgexpand.c (expand_one_var): Use specific wording in error message"}, {"sha": "3cbe0465a87d54c5d142e84c398d950efbbb7390", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3664a0f184ad90a0aa65b473d180debce6402ab0/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3664a0f184ad90a0aa65b473d180debce6402ab0/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=3664a0f184ad90a0aa65b473d180debce6402ab0", "patch": "@@ -5696,12 +5696,15 @@ spill_hard_reg_in_range (int regno, enum reg_class rclass, rtx_insn *from, rtx_i\n \tcontinue;\n       for (insn = from; insn != NEXT_INSN (to); insn = NEXT_INSN (insn))\n \t{\n-\t  lra_insn_recog_data_t id = lra_insn_recog_data[uid = INSN_UID (insn)];\n-\t  struct lra_static_insn_data *static_id = id->insn_static_data;\n+\t  struct lra_static_insn_data *static_id;\n \t  struct lra_insn_reg *reg;\n \n-\t  if (bitmap_bit_p (&lra_reg_info[hard_regno].insn_bitmap, uid))\n+\t  if (!INSN_P (insn))\n+\t      continue;\n+\t  if (bitmap_bit_p (&lra_reg_info[hard_regno].insn_bitmap,\n+\t\t\t    INSN_UID (insn)))\n \t    break;\n+\t  static_id = lra_get_insn_recog_data (insn)->insn_static_data;\n \t  for (reg = static_id->hard_regs; reg != NULL; reg = reg->next)\n \t    if (reg->regno == hard_regno)\n \t      break;"}, {"sha": "705d745a2d4a586cfac4db35afdd2fd668651fed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3664a0f184ad90a0aa65b473d180debce6402ab0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3664a0f184ad90a0aa65b473d180debce6402ab0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3664a0f184ad90a0aa65b473d180debce6402ab0", "patch": "@@ -1,3 +1,8 @@\n+2018-10-19  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\tPR rtl-optimization/87596\n+\t* gcc.target/i386/pr87596.c: New test.\n+\n 2018-10-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/frame_overflow2.adb: New test."}, {"sha": "764708b694a2563d73be6503e5999b8225a72d13", "filename": "gcc/testsuite/gcc.target/i386/pr87596.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3664a0f184ad90a0aa65b473d180debce6402ab0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87596.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3664a0f184ad90a0aa65b473d180debce6402ab0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87596.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87596.c?ref=3664a0f184ad90a0aa65b473d180debce6402ab0", "patch": "@@ -0,0 +1,16 @@\n+/* LRA corner case which triggered a segfault.  */\n+/* Reduced testcase by Arseny Solokha.  */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O1 -fschedule-insns -ftrapv -funroll-all-loops -fno-tree-dominator-opts -fno-tree-loop-im\" } */\n+    \n+void\n+wh (__int128 *ku)\n+{\n+  unsigned int *dp;\n+\n+  while (*ku < 1)\n+    {\n+      *dp <<= 32;  /* { dg-warning \"left shift count >= width of type\" } */\n+      ++*ku;\n+    }\n+}"}]}