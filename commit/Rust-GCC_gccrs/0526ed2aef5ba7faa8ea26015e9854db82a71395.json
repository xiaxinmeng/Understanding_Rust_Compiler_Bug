{"sha": "0526ed2aef5ba7faa8ea26015e9854db82a71395", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUyNmVkMmFlZjViYTdmYWE4ZWEyNjAxNWU5ODU0ZGI4MmE3MTM5NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-01-11T17:46:01Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-01-11T17:46:01Z"}, "message": "re PR middle-end/83718 (ICE: Floating point exception in profile_count::apply_scale)\n\n\tPR middle-end/83718\n\t* tree-inline.c (copy_cfg_body): Adjust num&den for scaling\n\tafter they are computed.\n\t* g++.dg/torture/pr83718.C: New testcase.\n\nFrom-SVN: r256544", "tree": {"sha": "6a051a2a597b48848496adda5a5ea9f6e557b696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a051a2a597b48848496adda5a5ea9f6e557b696"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0526ed2aef5ba7faa8ea26015e9854db82a71395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0526ed2aef5ba7faa8ea26015e9854db82a71395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0526ed2aef5ba7faa8ea26015e9854db82a71395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0526ed2aef5ba7faa8ea26015e9854db82a71395/comments", "author": null, "committer": null, "parents": [{"sha": "2a3af45c6b932a9697484c681b35b1dd87efce65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3af45c6b932a9697484c681b35b1dd87efce65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3af45c6b932a9697484c681b35b1dd87efce65"}], "stats": {"total": 130, "additions": 128, "deletions": 2}, "files": [{"sha": "f8bd20f6aebd6a5f9ca2733d87e5cbbc871c1f7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0526ed2aef5ba7faa8ea26015e9854db82a71395/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0526ed2aef5ba7faa8ea26015e9854db82a71395/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0526ed2aef5ba7faa8ea26015e9854db82a71395", "patch": "@@ -1,3 +1,9 @@\n+2018-01-11  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/83718\n+\t* tree-inline.c (copy_cfg_body): Adjust num&den for scaling\n+\tafter they are computed.\n+\n 2018-01-11  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/83695"}, {"sha": "f1eb59b80b19b5ffdf6ce5fec65af85d06a8e674", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0526ed2aef5ba7faa8ea26015e9854db82a71395/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0526ed2aef5ba7faa8ea26015e9854db82a71395/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0526ed2aef5ba7faa8ea26015e9854db82a71395", "patch": "@@ -1,3 +1,8 @@\n+2018-01-11  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/83718\n+\t* g++.dg/torture/pr83718.C: New testcase.\n+\n 2018-01-11  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/83178"}, {"sha": "2fa280642027dfa5719fc2b2ff561a16257fee30", "filename": "gcc/testsuite/g++.dg/torture/pr83718.C", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0526ed2aef5ba7faa8ea26015e9854db82a71395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83718.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0526ed2aef5ba7faa8ea26015e9854db82a71395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83718.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83718.C?ref=0526ed2aef5ba7faa8ea26015e9854db82a71395", "patch": "@@ -0,0 +1,115 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -std=c++11\" } */\n+\n+class a\n+{\n+public:\n+  int c (const char *);\n+};\n+class B\n+{\n+  virtual int *d (a, bool);\n+};\n+\n+bool e, f, g;\n+\n+class: B\n+{\n+  int ah;\n+  int *\n+  d (a, bool)\n+  {\n+    if (e)\n+      return &ah;\n+    a bj;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (f)\n+      return &ah;\n+    bj.c (\"\");\n+    if (g)\n+      return &ah;\n+    if (f)\n+      return &ah;\n+      e = a ().c(\"\");\n+    return &ah;\n+  }\n+} b;\n+"}, {"sha": "b0d9beb530a0a0304b772b0d2484947e160fb827", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0526ed2aef5ba7faa8ea26015e9854db82a71395/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0526ed2aef5ba7faa8ea26015e9854db82a71395/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=0526ed2aef5ba7faa8ea26015e9854db82a71395", "patch": "@@ -2683,8 +2683,6 @@ copy_cfg_body (copy_body_data * id,\n   profile_count den = ENTRY_BLOCK_PTR_FOR_FN (src_cfun)->count;\n   profile_count num = entry_block_map->count;\n \n-  profile_count::adjust_for_ipa_scaling (&num, &den);\n-\n   cfun_to_copy = id->src_cfun = DECL_STRUCT_FUNCTION (callee_fndecl);\n \n   /* Register specific tree functions.  */\n@@ -2707,6 +2705,8 @@ copy_cfg_body (copy_body_data * id,\n       ENTRY_BLOCK_PTR_FOR_FN (cfun)->count = den;\n     }\n \n+  profile_count::adjust_for_ipa_scaling (&num, &den);\n+\n   /* Must have a CFG here at this point.  */\n   gcc_assert (ENTRY_BLOCK_PTR_FOR_FN\n \t      (DECL_STRUCT_FUNCTION (callee_fndecl)));"}]}