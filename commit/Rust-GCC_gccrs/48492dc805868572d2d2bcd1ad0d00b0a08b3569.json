{"sha": "48492dc805868572d2d2bcd1ad0d00b0a08b3569", "node_id": "C_kwDOANBUbNoAKDQ4NDkyZGM4MDU4Njg1NzJkMmQyYmNkMWFkMGQwMGIwYTA4YjM1Njk", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-06-20T12:28:17Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-06-20T12:28:59Z"}, "message": "ast: Add location to ConstGenericArg", "tree": {"sha": "1b6f2a6545cbd27a352e6c2057966a43d32f9e03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b6f2a6545cbd27a352e6c2057966a43d32f9e03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48492dc805868572d2d2bcd1ad0d00b0a08b3569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48492dc805868572d2d2bcd1ad0d00b0a08b3569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48492dc805868572d2d2bcd1ad0d00b0a08b3569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48492dc805868572d2d2bcd1ad0d00b0a08b3569/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0f11672d760513256997f325da678016d13f677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f11672d760513256997f325da678016d13f677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f11672d760513256997f325da678016d13f677"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "232f11cfb01283f0952b7d31685b4a1f7aa2068a", "filename": "gcc/rust/ast/rust-path.h", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48492dc805868572d2d2bcd1ad0d00b0a08b3569/gcc%2Frust%2Fast%2Frust-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48492dc805868572d2d2bcd1ad0d00b0a08b3569/gcc%2Frust%2Fast%2Frust-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-path.h?ref=48492dc805868572d2d2bcd1ad0d00b0a08b3569", "patch": "@@ -156,19 +156,20 @@ class ConstGenericArg\n \n   static ConstGenericArg create_error ()\n   {\n-    return ConstGenericArg (nullptr, \"\", Kind::Error);\n+    return ConstGenericArg (nullptr, \"\", Kind::Error, Location ());\n   }\n \n-  ConstGenericArg (std::unique_ptr<Expr> expression)\n-    : expression (std::move (expression)), path (\"\"), kind (Kind::Clear)\n+  ConstGenericArg (std::unique_ptr<Expr> expression, Location locus)\n+    : expression (std::move (expression)), path (\"\"), kind (Kind::Clear),\n+      locus (locus)\n   {}\n \n-  ConstGenericArg (Identifier path)\n-    : expression (nullptr), path (path), kind (Kind::Ambiguous)\n+  ConstGenericArg (Identifier path, Location locus)\n+    : expression (nullptr), path (path), kind (Kind::Ambiguous), locus (locus)\n   {}\n \n   ConstGenericArg (const ConstGenericArg &other)\n-    : path (other.path), kind (other.kind)\n+    : path (other.path), kind (other.kind), locus (other.locus)\n   {\n     if (other.expression)\n       expression = other.expression->clone_expr ();\n@@ -178,6 +179,7 @@ class ConstGenericArg\n   {\n     kind = other.kind;\n     path = other.path;\n+    locus = other.locus;\n \n     if (other.expression)\n       expression = other.expression->clone_expr ();\n@@ -206,8 +208,9 @@ class ConstGenericArg\n \n private:\n   ConstGenericArg (std::unique_ptr<AST::Expr> expression, Identifier path,\n-\t\t   Kind kind)\n-    : expression (std::move (expression)), path (std::move (path)), kind (kind)\n+\t\t   Kind kind, Location locus)\n+    : expression (std::move (expression)), path (std::move (path)), kind (kind),\n+      locus (locus)\n   {}\n \n   /**\n@@ -226,6 +229,8 @@ class ConstGenericArg\n \n   /* Which kind of const generic application are we dealing with */\n   Kind kind;\n+\n+  Location locus;\n };\n \n // Generic arguments allowed in each path expression segment - inline?"}, {"sha": "708140af93dcfdfef6e724fd5996ba16c07021aa", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48492dc805868572d2d2bcd1ad0d00b0a08b3569/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48492dc805868572d2d2bcd1ad0d00b0a08b3569/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=48492dc805868572d2d2bcd1ad0d00b0a08b3569", "patch": "@@ -6181,7 +6181,7 @@ Parser<ManagedTokenSource>::parse_const_generic_expression ()\n       // special variant here\n \n       // FIXME: We need locus here as well\n-      return AST::ConstGenericArg (tok->get_str ());\n+      return AST::ConstGenericArg (tok->get_str (), tok->get_locus ());\n     case LEFT_CURLY:\n       expr = parse_block_expr ();\n       break;\n@@ -6201,7 +6201,7 @@ Parser<ManagedTokenSource>::parse_const_generic_expression ()\n   if (!expr)\n     return AST::ConstGenericArg::create_error ();\n \n-  return AST::ConstGenericArg (std::move (expr));\n+  return AST::ConstGenericArg (std::move (expr), tok->get_locus ());\n }\n \n // Parses the generic arguments in each path segment."}]}