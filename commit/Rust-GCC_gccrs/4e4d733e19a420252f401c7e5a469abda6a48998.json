{"sha": "4e4d733e19a420252f401c7e5a469abda6a48998", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU0ZDczM2UxOWE0MjAyNTJmNDAxYzdlNWE0NjlhYmRhNmE0ODk5OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2002-08-01T23:29:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-08-01T23:29:55Z"}, "message": "output.h (DECL_READONLY_SECTION): Remove.\n\n        * output.h (DECL_READONLY_SECTION): Remove.\n        (decl_readonly_section): Declare.\n        * varasm.c (decl_readonly_section): New.\n        (default_section_type_flags, default_select_section): Use it.\n        * config/arm/pe.c (arm_pe_unique_section): Likewise.\n        * config/i386/interix.c (i386_pe_unique_section): Likewise.\n        * config/i386/winnt.c (i386_pe_unique_section): Likewise.\n        * config/mcore/mcore.c (mcore_unique_section): Likewise.\n        * config/mips/mips.c (mips_unique_section): Likewise.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r55957", "tree": {"sha": "194c05431fa23bd64a67f9d0a7826dbb16f016c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/194c05431fa23bd64a67f9d0a7826dbb16f016c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e4d733e19a420252f401c7e5a469abda6a48998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e4d733e19a420252f401c7e5a469abda6a48998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e4d733e19a420252f401c7e5a469abda6a48998", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e4d733e19a420252f401c7e5a469abda6a48998/comments", "author": null, "committer": null, "parents": [{"sha": "32e9b9606f88e84fc2ffe07a094ed70b60633693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e9b9606f88e84fc2ffe07a094ed70b60633693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32e9b9606f88e84fc2ffe07a094ed70b60633693"}], "stats": {"total": 63, "additions": 44, "deletions": 19}, "files": [{"sha": "22f4ba17a4e94563deb080618259fdfa885966b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e4d733e19a420252f401c7e5a469abda6a48998", "patch": "@@ -1,3 +1,16 @@\n+2002-08-01  H.J. Lu <hjl@gnu.org>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\t* output.h (DECL_READONLY_SECTION): Remove.\n+\t(decl_readonly_section): Declare.\n+\t* varasm.c (decl_readonly_section): New.\n+\t(default_section_type_flags, default_select_section): Use it.\n+\t* config/arm/pe.c (arm_pe_unique_section): Likewise.\n+\t* config/i386/interix.c (i386_pe_unique_section): Likewise.\n+\t* config/i386/winnt.c (i386_pe_unique_section): Likewise.\n+\t* config/mcore/mcore.c (mcore_unique_section): Likewise.\n+\t* config/mips/mips.c (mips_unique_section): Likewise.\n+\n 2002-08-01  Richard Henderson  <rth@redhat.com>\n \n \t* integrate.c (copy_rtx_and_substitute): Squash MEM_EXPR when it"}, {"sha": "848d1986fe8af1855d8f037ac5407cf149aa731a", "filename": "gcc/config/arm/pe.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Farm%2Fpe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Farm%2Fpe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.c?ref=4e4d733e19a420252f401c7e5a469abda6a48998", "patch": "@@ -264,7 +264,7 @@ arm_pe_unique_section (decl, reloc)\n      (everything from the $ on is stripped).  */\n   if (TREE_CODE (decl) == FUNCTION_DECL)\n     prefix = \".text$\";\n-  else if (DECL_READONLY_SECTION (decl, reloc))\n+  else if (decl_readonly_section (decl, reloc))\n     prefix = \".rdata$\";\n   else\n     prefix = \".data$\";"}, {"sha": "e2222cac1f3dff0228a212536545cb73728f6b36", "filename": "gcc/config/i386/interix.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Fi386%2Finterix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Fi386%2Finterix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Finterix.c?ref=4e4d733e19a420252f401c7e5a469abda6a48998", "patch": "@@ -112,7 +112,7 @@ i386_pe_unique_section (decl, reloc)\n      without a .rdata section.  */\n   if (TREE_CODE (decl) == FUNCTION_DECL)\n     prefix = \".text$\";\n-  else if (DECL_READONLY_SECTION (decl, reloc))\n+  else if (decl_readonly_section (decl, reloc))\n     prefix = \".rdata$\";\n   else\n     prefix = \".data$\";"}, {"sha": "066b4d22f3a276d04a906fec6fcf358e4f274e9d", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=4e4d733e19a420252f401c7e5a469abda6a48998", "patch": "@@ -472,7 +472,7 @@ i386_pe_unique_section (decl, reloc)\n      without a .rdata section.  */\n   if (TREE_CODE (decl) == FUNCTION_DECL)\n     prefix = \".text$\";\n-  else if (DECL_READONLY_SECTION (decl, reloc))\n+  else if (decl_readonly_section (decl, reloc))\n     prefix = \".rdata$\";\n   else\n     prefix = \".data$\";\n@@ -518,7 +518,7 @@ i386_pe_section_type_flags (decl, name, reloc)\n \n   if (decl && TREE_CODE (decl) == FUNCTION_DECL)\n     flags = SECTION_CODE;\n-  else if (decl && DECL_READONLY_SECTION (decl, reloc))\n+  else if (decl && decl_readonly_section (decl, reloc))\n     flags = 0;\n   else\n     {"}, {"sha": "650d0dd8a967d4b079ea29af25228b51de762dde", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=4e4d733e19a420252f401c7e5a469abda6a48998", "patch": "@@ -3540,7 +3540,7 @@ mcore_unique_section (decl, reloc)\n     prefix = \".text$\";\n   /* For compatibility with EPOC, we ignore the fact that the\n      section might have relocs against it.  */\n-  else if (DECL_READONLY_SECTION (decl, 0))\n+  else if (decl_readonly_section (decl, 0))\n     prefix = \".rdata$\";\n   else\n     prefix = \".data$\";"}, {"sha": "d04f4ce6baae2458dc582cfe4af9261be6f3fe58", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=4e4d733e19a420252f401c7e5a469abda6a48998", "patch": "@@ -10310,7 +10310,7 @@ mips_unique_section (decl, reloc)\n \t read-only data if possible, in order to reduce RAM\n \t usage.  */\n \n-      if (DECL_READONLY_SECTION (decl, reloc))\n+      if (decl_readonly_section (decl, reloc))\n \tsec = 1;\n       else if (size > 0 && size <= mips_section_threshold)\n \tsec = 3;\n@@ -10325,7 +10325,7 @@ mips_unique_section (decl, reloc)\n \n       if (size > 0 && size <= mips_section_threshold)\n \tsec = 3;\n-      else if (DECL_READONLY_SECTION (decl, reloc))\n+      else if (decl_readonly_section (decl, reloc))\n \tsec = 1;\n       else\n \tsec = 2;"}, {"sha": "533af931e0fde9a6446132b0da4ebe322e85b074", "filename": "gcc/output.h", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=4e4d733e19a420252f401c7e5a469abda6a48998", "patch": "@@ -468,16 +468,9 @@ extern struct rtx_def *current_output_insn;\n    The precise value is the insn being output, to pass to error_for_asm.  */\n extern rtx this_is_asm_operands;\n \n-/* Decide whether DECL needs to be in a writable section.  RELOC is the same\n-   as for SELECT_SECTION.  */\n-\n-#define DECL_READONLY_SECTION(DECL,RELOC)\t\t\\\n-  (TREE_READONLY (DECL)\t\t\t\t\t\\\n-   && ! TREE_THIS_VOLATILE (DECL)\t\t\t\\\n-   && DECL_INITIAL (DECL)\t\t\t\t\\\n-   && (DECL_INITIAL (DECL) == error_mark_node\t\t\\\n-       || TREE_CONSTANT (DECL_INITIAL (DECL)))\t\t\\\n-   && ! (RELOC && (flag_pic || DECL_ONE_ONLY (DECL))))\n+/* Decide whether DECL needs to be in a writable section.\n+   RELOC is the same as for SELECT_SECTION.  */\n+extern bool decl_readonly_section PARAMS ((tree, int));\n \n /* User label prefix in effect for this compilation.  */\n extern const char *user_label_prefix;"}, {"sha": "e35d8a2167e3431415afc53279954de4e4ec7234", "filename": "gcc/varasm.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e4d733e19a420252f401c7e5a469abda6a48998/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=4e4d733e19a420252f401c7e5a469abda6a48998", "patch": "@@ -4712,7 +4712,7 @@ default_section_type_flags (decl, name, reloc)\n \n   if (decl && TREE_CODE (decl) == FUNCTION_DECL)\n     flags = SECTION_CODE;\n-  else if (decl && DECL_READONLY_SECTION (decl, reloc))\n+  else if (decl && decl_readonly_section (decl, reloc))\n     flags = 0;\n   else\n     flags = SECTION_WRITE;\n@@ -4872,7 +4872,7 @@ default_select_section (decl, reloc, align)\n \n   if (DECL_P (decl))\n     {\n-      if (DECL_READONLY_SECTION (decl, reloc))\n+      if (decl_readonly_section (decl, reloc))\n \treadonly = true;\n     }\n   else if (TREE_CODE (decl) == CONSTRUCTOR)\n@@ -5011,6 +5011,25 @@ categorize_decl_for_section (decl, reloc)\n   return ret;\n }\n \n+bool\n+decl_readonly_section (decl, reloc)\n+     tree decl;\n+     int reloc;\n+{\n+  switch (categorize_decl_for_section (decl, reloc))\n+    {\n+    case SECCAT_RODATA:\n+    case SECCAT_RODATA_MERGE_STR:\n+    case SECCAT_RODATA_MERGE_STR_INIT:\n+    case SECCAT_RODATA_MERGE_CONST:\n+      return true;\n+      break;\n+    default:\n+      return false;\n+      break;\n+    }\n+}\n+\n /* Select a section based on the above categorization.  */\n \n void"}]}