{"sha": "732779d073130387365b25f83f1c5266382e3db7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMyNzc5ZDA3MzEzMDM4NzM2NWIyNWY4M2YxYzUyNjYzODJlM2RiNw==", "commit": {"author": {"name": "Indu Bhagat", "email": "indu.bhagat@oracle.com", "date": "2018-11-30T23:54:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-11-30T23:54:30Z"}, "message": "coverage.c (get_coverage_counts): Use from_function_decl for precise function location.\n\n\t* coverage.c (get_coverage_counts): Use from_function_decl for precise\n\tfunction location.\n\t* profile-count.c (profile_count::dump): Add handling for precise\n\tprofile quality.\n\t* profile.c (compute_branch_probabilities): Rely on exec_counts instead\n\tof profile_info to set profile_status of function.\n\t(branch_prob): Do not set profile_status of function based on\n\tprofile_info. Done above based on exec_counts.\n\nFrom-SVN: r266702", "tree": {"sha": "bcacefdd7dad2b72eb700dc648e60fa0ca518648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcacefdd7dad2b72eb700dc648e60fa0ca518648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/732779d073130387365b25f83f1c5266382e3db7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732779d073130387365b25f83f1c5266382e3db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/732779d073130387365b25f83f1c5266382e3db7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732779d073130387365b25f83f1c5266382e3db7/comments", "author": {"login": "ibhagatgnu", "id": 51812649, "node_id": "MDQ6VXNlcjUxODEyNjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/51812649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibhagatgnu", "html_url": "https://github.com/ibhagatgnu", "followers_url": "https://api.github.com/users/ibhagatgnu/followers", "following_url": "https://api.github.com/users/ibhagatgnu/following{/other_user}", "gists_url": "https://api.github.com/users/ibhagatgnu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibhagatgnu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibhagatgnu/subscriptions", "organizations_url": "https://api.github.com/users/ibhagatgnu/orgs", "repos_url": "https://api.github.com/users/ibhagatgnu/repos", "events_url": "https://api.github.com/users/ibhagatgnu/events{/privacy}", "received_events_url": "https://api.github.com/users/ibhagatgnu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4df6a9063433b4f47a2f49535b448408a9dd6b94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4df6a9063433b4f47a2f49535b448408a9dd6b94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4df6a9063433b4f47a2f49535b448408a9dd6b94"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "6ce31bf892717795845618c00cf1c9a3d241d7f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732779d073130387365b25f83f1c5266382e3db7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732779d073130387365b25f83f1c5266382e3db7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=732779d073130387365b25f83f1c5266382e3db7", "patch": "@@ -1,3 +1,14 @@\n+2018-11-30  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\t* coverage.c (get_coverage_counts): Use from_function_decl for precise\n+\tfunction location.\n+\t* profile-count.c (profile_count::dump): Add handling for precise\n+\tprofile quality.\n+\t* profile.c (compute_branch_probabilities): Rely on exec_counts instead\n+\tof profile_info to set profile_status of function.\n+\t(branch_prob): Do not set profile_status of function based on\n+\tprofile_info. Done above based on exec_counts.\n+\n 2018-11-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/88274"}, {"sha": "9dc1cae28b1074b7a2af78a50e448b8fdc0c7f46", "filename": "gcc/coverage.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732779d073130387365b25f83f1c5266382e3db7/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732779d073130387365b25f83f1c5266382e3db7/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=732779d073130387365b25f83f1c5266382e3db7", "patch": "@@ -358,7 +358,7 @@ get_coverage_counts (unsigned counter, unsigned cfg_checksum,\n       if (warning_printed && dump_enabled_p ())\n \t{\n \t  dump_user_location_t loc\n-\t    = dump_user_location_t::from_location_t (input_location);\n+\t    = dump_user_location_t::from_function_decl (current_function_decl);\n           dump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n                            \"use -Wno-error=coverage-mismatch to tolerate \"\n                            \"the mismatch but performance may drop if the \""}, {"sha": "90f4febfd6698a7c0a69ce7359e75c98f02ab11c", "filename": "gcc/profile-count.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732779d073130387365b25f83f1c5266382e3db7/gcc%2Fprofile-count.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732779d073130387365b25f83f1c5266382e3db7/gcc%2Fprofile-count.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile-count.c?ref=732779d073130387365b25f83f1c5266382e3db7", "patch": "@@ -83,6 +83,8 @@ profile_count::dump (FILE *f) const\n \tfprintf (f, \" (auto FDO)\");\n       else if (m_quality == profile_guessed)\n \tfprintf (f, \" (guessed)\");\n+      else if (m_quality == profile_precise)\n+\tfprintf (f, \" (precise)\");\n     }\n }\n "}, {"sha": "ded0958f0aa6b37588bb1de8642b417688e8dfb2", "filename": "gcc/profile.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/732779d073130387365b25f83f1c5266382e3db7/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/732779d073130387365b25f83f1c5266382e3db7/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=732779d073130387365b25f83f1c5266382e3db7", "patch": "@@ -698,14 +698,17 @@ compute_branch_probabilities (unsigned cfg_checksum, unsigned lineno_checksum)\n \t}\n     }\n \n+  if (exec_counts)\n+    profile_status_for_fn (cfun) = PROFILE_READ;\n+\n   /* If we have real data, use them!  */\n   if (bb_gcov_count (ENTRY_BLOCK_PTR_FOR_FN (cfun))\n       || !flag_guess_branch_prob)\n     FOR_ALL_BB_FN (bb, cfun)\n       bb->count = profile_count::from_gcov_type (bb_gcov_count (bb));\n   /* If function was not trained, preserve local estimates including statically\n      determined zero counts.  */\n-  else\n+  else if (profile_status_for_fn (cfun) == PROFILE_READ)\n     FOR_ALL_BB_FN (bb, cfun)\n       if (!(bb->count == profile_count::zero ()))\n         bb->count = bb->count.global0 ();\n@@ -718,6 +721,11 @@ compute_branch_probabilities (unsigned cfg_checksum, unsigned lineno_checksum)\n \n   if (dump_file)\n     {\n+      fprintf (dump_file, \" Profile feedback for function\");\n+      fprintf (dump_file, ((profile_status_for_fn (cfun) == PROFILE_READ)\n+\t\t\t   ? \" is available \\n\"\n+\t\t\t   : \" is not available \\n\"));\n+\n       fprintf (dump_file, \"%d branches\\n\", num_branches);\n       if (num_branches)\n \tfor (i = 0; i < 10; i++)\n@@ -1317,12 +1325,12 @@ branch_prob (void)\n   values.release ();\n   free_edge_list (el);\n   coverage_end_function (lineno_checksum, cfg_checksum);\n-  if (flag_branch_probabilities && profile_info)\n+  if (flag_branch_probabilities\n+      && (profile_status_for_fn (cfun) == PROFILE_READ))\n     {\n       struct loop *loop;\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \treport_predictor_hitrates ();\n-      profile_status_for_fn (cfun) = PROFILE_READ;\n \n       /* At this moment we have precise loop iteration count estimates.\n \t Record them to loop structure before the profile gets out of date. */"}]}