{"sha": "b322f221ce0564b082ba011e570f76c318d013a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMyMmYyMjFjZTA1NjRiMDgyYmEwMTFlNTcwZjc2YzMxOGQwMTNhNA==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-15T20:45:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-15T20:45:21Z"}, "message": "Merge #569 #570\n\n569: Some trait items are optional and should not cause an error r=philberty a=philberty\n\nWhen a trait item is optional this is not a missing trait item.\n\n570: Add missing test case to close out unit-structs r=philberty a=philberty\n\nThis test case will catch regressions in changes to initializing unit structs.\r\n\r\nFixes #155\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "91dcd6c5c2ed321f3a7a252e69feb18b638d48d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91dcd6c5c2ed321f3a7a252e69feb18b638d48d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b322f221ce0564b082ba011e570f76c318d013a4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg8J5hCRBK7hj4Ov3rIwAAMHoIAE5qT1fiwzxxQJH6Sl8hxiey\n0S8AxBWQkpiNkkL6rhZ1ID5oqi7r/lkkJ6muvrbGOQCfNd57Qx/WEz0n/DlIqFEz\nwt1IEytmkfjgPtw+v+Z7PqrTAnyvT6KEhsrxD6dWd++n6Qa1qfFWxK+O9FkS98aQ\n+/KQy6HxYLISzpQg9lXD2A+//qk6hrHxmPrHPE0ITN38Dl7iWp2orYsGgPvToP67\n9QP9u6LCb50kyJxiu9IhPrHNaEcE64uTFNg+Ypn1LokVm2lqKtGYrpMk2gfiZWfM\nagmGcGVEGP/6G26gKE5RoEqdCK8TW/ScY6NK8W/WEOYwA0itzzTPj6ODwJnR+EE=\n=TDy3\n-----END PGP SIGNATURE-----\n", "payload": "tree 91dcd6c5c2ed321f3a7a252e69feb18b638d48d4\nparent 2404e4841d424aa05d5d218c24130cccec04eeef\nparent ebdf933621189db132d0bebec475937f02fbf6a5\nparent 9783726c85e530df67ad952d4ed2dbf9f59da274\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626381921 +0000\ncommitter GitHub <noreply@github.com> 1626381921 +0000\n\nMerge #569 #570\n\n569: Some trait items are optional and should not cause an error r=philberty a=philberty\n\nWhen a trait item is optional this is not a missing trait item.\n\n570: Add missing test case to close out unit-structs r=philberty a=philberty\n\nThis test case will catch regressions in changes to initializing unit structs.\r\n\r\nFixes #155\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b322f221ce0564b082ba011e570f76c318d013a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b322f221ce0564b082ba011e570f76c318d013a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b322f221ce0564b082ba011e570f76c318d013a4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2404e4841d424aa05d5d218c24130cccec04eeef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2404e4841d424aa05d5d218c24130cccec04eeef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2404e4841d424aa05d5d218c24130cccec04eeef"}, {"sha": "ebdf933621189db132d0bebec475937f02fbf6a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebdf933621189db132d0bebec475937f02fbf6a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebdf933621189db132d0bebec475937f02fbf6a5"}, {"sha": "9783726c85e530df67ad952d4ed2dbf9f59da274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9783726c85e530df67ad952d4ed2dbf9f59da274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9783726c85e530df67ad952d4ed2dbf9f59da274"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "8d770f0e8ec989c7a9e89a720639b7a40bdf2f6a", "filename": "gcc/rust/typecheck/rust-hir-type-check-item.h", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b322f221ce0564b082ba011e570f76c318d013a4/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b322f221ce0564b082ba011e570f76c318d013a4/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-item.h?ref=b322f221ce0564b082ba011e570f76c318d013a4", "patch": "@@ -104,21 +104,24 @@ class TypeCheckItem : public TypeCheckBase\n \t      missing_trait_items.push_back (trait_item_ref);\n \t  }\n \n-\tstd::string missing_items_buf;\n-\tRichLocation r (impl_block.get_locus ());\n-\tfor (size_t i = 0; i < missing_trait_items.size (); i++)\n+\tif (missing_trait_items.size () > 0)\n \t  {\n-\t    bool has_more = (i + 1) < missing_trait_items.size ();\n-\t    const TraitItemReference &missing_trait_item\n-\t      = missing_trait_items.at (i);\n-\t    missing_items_buf\n-\t      += missing_trait_item.get_identifier () + (has_more ? \", \" : \"\");\n-\t    r.add_range (missing_trait_item.get_locus ());\n-\t  }\n+\t    std::string missing_items_buf;\n+\t    RichLocation r (impl_block.get_locus ());\n+\t    for (size_t i = 0; i < missing_trait_items.size (); i++)\n+\t      {\n+\t\tbool has_more = (i + 1) < missing_trait_items.size ();\n+\t\tconst TraitItemReference &missing_trait_item\n+\t\t  = missing_trait_items.at (i);\n+\t\tmissing_items_buf += missing_trait_item.get_identifier ()\n+\t\t\t\t     + (has_more ? \", \" : \"\");\n+\t\tr.add_range (missing_trait_item.get_locus ());\n+\t      }\n \n-\trust_error_at (r, \"missing %s in implementation of trait %<%s%>\",\n-\t\t       missing_items_buf.c_str (),\n-\t\t       trait_reference.get_name ().c_str ());\n+\t    rust_error_at (r, \"missing %s in implementation of trait %<%s%>\",\n+\t\t\t   missing_items_buf.c_str (),\n+\t\t\t   trait_reference.get_name ().c_str ());\n+\t  }\n       }\n   }\n "}, {"sha": "3c4323aa73c71f2d2a1de44c8c4a366843557762", "filename": "gcc/testsuite/rust/compile/torture/unit_type5.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b322f221ce0564b082ba011e570f76c318d013a4/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funit_type5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b322f221ce0564b082ba011e570f76c318d013a4/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funit_type5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Funit_type5.rs?ref=b322f221ce0564b082ba011e570f76c318d013a4", "patch": "@@ -0,0 +1,8 @@\n+struct Foo;\n+\n+fn main() {\n+    let a = Foo {};\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n+    let b = Foo;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n+}"}]}