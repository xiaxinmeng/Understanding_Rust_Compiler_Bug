{"sha": "9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFhOGExZGYwNTA2YTk2MjJmZWExNGY3YzI4YjczZmRkNTMyNGY4ZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-12-11T19:42:34Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-12-11T19:42:34Z"}, "message": "c-common.c (combine_strings): Complain if concatenating __FUNCTION__.\n\n\t* c-common.c (combine_strings): Complain if concatenating\n\t__FUNCTION__.\n\t* c-parse.in (yylexname): Flag artificial strings.\n\t* tree.h (TREE_ARTIFICIAL_STRING_P): New.\ndoc:\n\t* extend.texi: Update.\ntestsuite:\n\t* gcc.dg/concat.c: New test.\n\nFrom-SVN: r47890", "tree": {"sha": "2018e6f82b3ca5d8eb854a0d321eb3e9f7091dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2018e6f82b3ca5d8eb854a0d321eb3e9f7091dea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/comments", "author": null, "committer": null, "parents": [{"sha": "0afeef64be52defd45b00c47464183dd43381725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0afeef64be52defd45b00c47464183dd43381725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0afeef64be52defd45b00c47464183dd43381725"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "69959aa52bf73bf212db733074f5f26b84ec9154", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "patch": "@@ -1,3 +1,12 @@\n+2001-12-11  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-common.c (combine_strings): Complain if concatenating\n+\t__FUNCTION__.\n+\t* c-parse.in (yylexname): Flag artificial strings.\n+\t* tree.h (TREE_ARTIFICIAL_STRING_P): New.\n+doc:\n+\t* extend.texi: Update.\n+\n 2001-12-11  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* c-common.c (type_for_mode): Handle unsigned vectors."}, {"sha": "96f8462e3f24b57288bacfed58d1589c78ea56a2", "filename": "gcc/c-common.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "patch": "@@ -544,7 +544,11 @@ combine_strings (strings)\n \t      wide_flag = 1;\n \t    }\n \t  else\n-\t    length += (TREE_STRING_LENGTH (t) - 1);\n+\t    {\n+\t      length += (TREE_STRING_LENGTH (t) - 1);\n+\t      if (C_ARTIFICIAL_STRING_P (t) && !in_system_header)\n+\t\twarning (\"concatenation of string literals with __FUNCTION__ is deprecated.  This feature will be removed in future\"); \n+\t    }\n \t}\n \n       /* If anything is wide, the non-wides will be converted,"}, {"sha": "5ce8923d51904c5e1dec211d22764506cab449f1", "filename": "gcc/c-common.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "patch": "@@ -235,6 +235,10 @@ extern tree c_global_trees[CTI_MAX];\n    These may be shadowed, and may be referenced from nested functions.  */\n #define C_DECLARED_LABEL_FLAG(label) TREE_LANG_FLAG_1 (label)\n \n+/* Flag strings given by __FUNCTION__ and __PRETTY_FUNCTION__ for a\n+   warning if they undergo concatenation.  */\n+#define C_ARTIFICIAL_STRING_P(NODE) TREE_LANG_FLAG_0 (NODE)\n+\n typedef enum c_language_kind\n {\n   clk_c,           /* A dialect of C: K&R C, ANSI/ISO C89, C2000,"}, {"sha": "4967a0939b244d4d567031ca6380bd5a8ac8eddc", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "patch": "@@ -3604,6 +3604,7 @@ end ifobjc\n \t    const char *name = fname_string (rid_code);\n \t  \n \t    yylval.ttype = build_string (strlen (name) + 1, name);\n+\t    C_ARTIFICIAL_STRING_P (yylval.ttype) = 1;\n \t    last_token = CPP_STRING;  /* so yyerror won't choke */\n \t    return STRING;\n \t  }"}, {"sha": "10524a58363e08244831b8cf0993472847d25a94", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "patch": "@@ -4120,8 +4120,9 @@ On the other hand, @samp{#ifdef __FUNCTION__} does not have any special\n meaning inside a function, since the preprocessor does not do anything\n special with the identifier @code{__FUNCTION__}.\n \n-GCC also supports the magic word @code{__func__}, defined by the\n-ISO standard C99:\n+Note that these semantics are deprecated, and that GCC 3.2 will handle\n+@code{__FUNCTION__} and @code{__PRETTY_FUNCTION__} the same way as\n+@code{__func__}.  @code{__func__} is defined by the ISO standard C99:\n \n @display\n The identifier @code{__func__} is implicitly declared by the translator"}, {"sha": "99d04fdf6b38a3d7cb331cf8d55e5c8be2fe3f4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "patch": "@@ -1,3 +1,7 @@\n+2001-12-11  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* gcc.dg/concat.c: New test.\n+\n 2001-12-11  Stan Shebs  <shebs@apple.com>\n \n \t* objc/compile: New test directory."}, {"sha": "4f4f8d7b08b642a2ecbd986afeee1ebbd80ef291", "filename": "gcc/testsuite/gcc.dg/concat.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Ftestsuite%2Fgcc.dg%2Fconcat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa8a1df0506a9622fea14f7c28b73fdd5324f8e/gcc%2Ftestsuite%2Fgcc.dg%2Fconcat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconcat.c?ref=9aa8a1df0506a9622fea14f7c28b73fdd5324f8e", "patch": "@@ -0,0 +1,16 @@\n+/* Copyright (C) 2001 Free Software Foundation, Inc.  */\n+\n+/* { dg-do compile } */\n+\n+/* Test we output a warning for concatenation of artifical strings.\n+\n+   Neil Booth, 10 Dec 2001.  */\n+\n+void foo ()\n+{\n+  char str1[] = __FUNCTION__ \".\";\t/* { dg-warning \"deprecated\" } */\n+  char str2[] = __PRETTY_FUNCTION__ \".\";/* { dg-warning \"deprecated\" } */\n+  char str3[] = \".\" __FUNCTION__;\t/* { dg-warning \"deprecated\" } */\n+  char str4[] = \".\" __PRETTY_FUNCTION__;/* { dg-warning \"deprecated\" } */\n+  char str5[] = \".\" \".\";\t/* No warning.  */\n+}"}]}