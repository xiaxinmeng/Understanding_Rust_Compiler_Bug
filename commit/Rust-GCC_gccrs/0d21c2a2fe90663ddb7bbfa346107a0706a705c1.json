{"sha": "0d21c2a2fe90663ddb7bbfa346107a0706a705c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQyMWMyYTJmZTkwNjYzZGRiN2JiZmEzNDYxMDdhMDcwNmE3MDVjMQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-18T06:10:45Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-18T06:10:45Z"}, "message": "re PR tree-optimization/21001 (VRP is weak when the tested variable in a COND_EXPR is used only in the COND_EXPR.)\n\ngcc/\n\tPR tree-optimization/21001\n\t* tree-optimize.c (init_tree_optimization_passes): Move the\n\tfirst pass_forwprop immediately before pass_vrp.\n\ntestsuite/\n\tPR tree-optimization/21001\n\t* gcc.dg/tree-ssa/pr21001.c: New.\n\nFrom-SVN: r98309", "tree": {"sha": "b2c04268556badfb5c3d2e0861a24fa807938af7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c04268556badfb5c3d2e0861a24fa807938af7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d21c2a2fe90663ddb7bbfa346107a0706a705c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d21c2a2fe90663ddb7bbfa346107a0706a705c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d21c2a2fe90663ddb7bbfa346107a0706a705c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/comments", "author": null, "committer": null, "parents": [{"sha": "0ec7a4d1ee0d222e200bbb9a8cb691a4247a98e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec7a4d1ee0d222e200bbb9a8cb691a4247a98e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec7a4d1ee0d222e200bbb9a8cb691a4247a98e9"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "8a70d696f8a77440124e04993aa15ba076f20e93", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d21c2a2fe90663ddb7bbfa346107a0706a705c1", "patch": "@@ -1,3 +1,9 @@\n+2005-04-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR tree-optimization/21001\n+\t* tree-optimize.c (init_tree_optimization_passes): Move the\n+\tfirst pass_forwprop immediately before pass_vrp.\n+\n 2005-04-17  Ian Lance Taylor  <ian@airs.com>\n \n \t* c-common.def (SIZEOF_EXPR, ARROW_EXPR, ALIGNOF_EXPR): Remove."}, {"sha": "b4e22d52749ead81a2bfa3fa993d60905835ace3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d21c2a2fe90663ddb7bbfa346107a0706a705c1", "patch": "@@ -1,3 +1,8 @@\n+2005-04-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR tree-optimization/21001\n+\t* gcc.dg/tree-ssa/pr21001.c: New.\n+\n 2005-04-17  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/21075"}, {"sha": "c274cd3385e80f5ee002e29e4217696c3c000fc7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21001.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21001.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21001.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21001.c?ref=0d21c2a2fe90663ddb7bbfa346107a0706a705c1", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/21001\n+   VRP did not insert ASSERT_EXPRs when the variable tested in a\n+   COND_EXPR is a single-use variable.  By propagating the definition\n+   of the single-use variable into the COND_EXPR, we can get useful\n+   range infomation out of the conditional.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-vrp-details\" } */\n+\n+int\n+foo (int a)\n+{\n+  int b = a != 0;\n+  if (b)\n+    if (a != 0)\n+      return 1;\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Folding predicate\" 1 \"vrp\"} } */"}, {"sha": "2284a798302af60cce4ed54d13f6355bdcf89346", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21c2a2fe90663ddb7bbfa346107a0706a705c1/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=0d21c2a2fe90663ddb7bbfa346107a0706a705c1", "patch": "@@ -356,9 +356,9 @@ init_tree_optimization_passes (void)\n   NEXT_PASS (pass_dominator);\n   NEXT_PASS (pass_copy_prop);\n   NEXT_PASS (pass_dce);\n+  NEXT_PASS (pass_forwprop);\n   NEXT_PASS (pass_vrp);\n   NEXT_PASS (pass_merge_phi);\n-  NEXT_PASS (pass_forwprop);\n   NEXT_PASS (pass_phiopt);\n   NEXT_PASS (pass_may_alias);\n   NEXT_PASS (pass_tail_recursion);"}]}