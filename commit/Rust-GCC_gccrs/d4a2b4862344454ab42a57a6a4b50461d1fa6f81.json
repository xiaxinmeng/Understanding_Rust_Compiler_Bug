{"sha": "d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRhMmI0ODYyMzQ0NDU0YWI0MmE1N2E2YTRiNTA0NjFkMWZhNmY4MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-04-06T21:13:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-04-06T21:13:07Z"}, "message": "parser.c (cp_parser_class_specifier): Set class location to that of IDENTIFIER_NODE instead of '{' when possible.\n\n\t* parser.c (cp_parser_class_specifier): Set class location to that\n\tof IDENTIFIER_NODE instead of '{' when possible.\n\t* semantics.c (begin_class_definition): Do not overide locations\n\twith less precise ones.\n\nFrom-SVN: r158030", "tree": {"sha": "bce7108409edea2346357626feb21cb76d8a5755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bce7108409edea2346357626feb21cb76d8a5755"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/comments", "author": null, "committer": null, "parents": [{"sha": "9310a3e26905c65e86acfb6634252dab2d346fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9310a3e26905c65e86acfb6634252dab2d346fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9310a3e26905c65e86acfb6634252dab2d346fd0"}], "stats": {"total": 253, "additions": 151, "deletions": 102}, "files": [{"sha": "782c674375d6c8519bbf37ba47b86e340728a672", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,3 +1,11 @@\n+2010-04-06  Taras Glek  <taras@mozilla.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_class_specifier): Set class location to that\n+\tof IDENTIFIER_NODE instead of '{' when possible.\n+\t* semantics.c (begin_class_definition): Do not overide locations\n+\twith less precise ones.\n+\n 2010-04-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/43648"}, {"sha": "e25c280f4867122eac7c73ee7fb71ad0e8fd8e92", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -16395,6 +16395,9 @@ cp_parser_class_head (cp_parser* parser,\n       end_specialization ();\n       --parser->num_template_parameter_lists;\n     }\n+\n+  if (type)\n+    DECL_SOURCE_LOCATION (TYPE_NAME (type)) = type_start_token->location;\n   *attributes_p = attributes;\n   return type;\n }"}, {"sha": "5cf4b693f26eb607c575429dd4697e3f8fc9d9c1", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -2409,9 +2409,6 @@ begin_class_definition (tree t, tree attributes)\n       pushtag (make_anon_name (), t, /*tag_scope=*/ts_current);\n     }\n \n-  /* Update the location of the decl.  */\n-  DECL_SOURCE_LOCATION (TYPE_NAME (t)) = input_location;\n-\n   if (TYPE_BEING_DEFINED (t))\n     {\n       t = make_class_type (TREE_CODE (t));"}, {"sha": "c0b46185d61ae64c95333740bf0736cabf2347ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,3 +1,45 @@\n+2010-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/pr31437.C: Adjust error location.\n+\t* g++.dg/ext/attrib18.C: Likewise.\n+\t* g++.dg/ext/bitfield2.C: Likewise.\n+\t* g++.dg/ext/bitfield4.C: Likewise.\n+\t* g++.dg/ext/visibility/warn2.C: Likewise.\n+\t* g++.dg/ext/visibility/warn3.C: Likewise.\n+\t* g++.dg/gomp/pr26690-1.C: Likewise.\n+\t* g++.dg/inherit/covariant7.C: Likewise.\n+\t* g++.dg/init/synth2.C: Likewise.\n+\t* g++.dg/lookup/using7.C: Likewise.\n+\t* g++.dg/other/crash-4.C: Likewise.\n+\t* g++.dg/other/error13.C: Likewise.\n+\t* g++.dg/other/error20.C: Likewise.\n+\t* g++.dg/parse/crash31.C: Likewise.\n+\t* g++.dg/parse/error16.C: Likewise.\n+\t* g++.dg/parse/error19.C: Likewise.\n+\t* g++.dg/parse/error27.C: Likewise.\n+\t* g++.dg/parse/error28.C: Likewise.\n+\t* g++.dg/parse/fused-params1.C: Likewise.\n+\t* g++.dg/template/error2.C: Likewise.\n+\t* g++.dg/template/local6.C: Likewise.\n+\t* g++.dg/template/qualttp15.C: Likewise.\n+\t* g++.dg/warn/Wnvdtor-2.C: Likewise.\n+\t* g++.dg/warn/anonymous-namespace-3.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/15309-1.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash29.C: Likewise.\n+\t* g++.old-deja/g++.eh/spec6.C: Likewise.\n+\t* g++.old-deja/g++.jason/crash3.C: Likewise.\n+\t* g++.old-deja/g++.jason/destruct2.C: Likewise.\n+\t* g++.old-deja/g++.law/ctors5.C: Likewise.\n+\t* g++.old-deja/g++.law/ctors9.C: Likewise.\n+\t* g++.old-deja/g++.mike/p3538a.C: Likewise.\n+\t* g++.old-deja/g++.mike/p3538b.C: Likewise.\n+\t* g++.old-deja/g++.other/struct1.C: Likewise.\n+\t* g++.old-deja/g++.other/volatile1.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash36.C: Likewise.\n+\t* g++.old-deja/g++.pt/derived3.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb109.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb4.C: Likewise.\n+\n 2010-04-06  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/43519"}, {"sha": "812c695f4ec01c14bff2dc20c9157f759afa1df2", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31437.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31437.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31437.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31437.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n-template <typename... T> struct A\n-{ // { dg-error \"candidates|A\" }\n+template <typename... T> struct A // { dg-error \"candidates|A\" }\n+{\n   A(T* p) {  // { dg-error \"parameter packs|T\" }\n    (A<T...>*)(p); \n   }"}, {"sha": "ab9fea0950cbdcbe18d051ea4f50002a221a41c2", "filename": "gcc/testsuite/g++.dg/ext/attrib18.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib18.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -2,8 +2,8 @@\n // Test that we warn when an attribute preceding the class-key is ignored.\n // { dg-do compile }\n \n-__attribute__ ((packed)) struct A\n-{\t\t\t\t// { dg-warning \"attribute\" }\n+__attribute__ ((packed)) struct A // { dg-warning \"attribute\" }\n+{\n   char c;\n   int x;\n   void f();"}, {"sha": "40effc786a3e90825ecf88b94d0fb1e50c15a6b3", "filename": "gcc/testsuite/g++.dg/ext/bitfield2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -3,8 +3,8 @@\n /* { dg-options \"\" } */\n /* { dg-options \"-mno-ms-bitfields\" { target i?86-*-netware } } */\n \n-struct t\n-{ /* { dg-message \"note: Offset of packed bit-field 't::b' has changed in GCC 4.4\" \"\" { target pcc_bitfield_type_matters } } */\n+struct t /* { dg-message \"note: Offset of packed bit-field 't::b' has changed in GCC 4.4\" \"\" { target pcc_bitfield_type_matters } } */\n+{\n   char a:4;\n   char b:8;\n   char c:4;"}, {"sha": "8dacfaf33cb087a696f0c65d412c064a94e96574", "filename": "gcc/testsuite/g++.dg/ext/bitfield4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -2,8 +2,8 @@\n /* { dg-options \"\" } */\n /* { dg-options \"-mno-ms-bitfields\" { target i?86-*-netware } } */\n \n-struct t\n-{ /* { dg-message \"note: Offset of packed bit-field 't::b' has changed in GCC 4.4\" \"\" { target pcc_bitfield_type_matters } } */\n+struct t /* { dg-message \"note: Offset of packed bit-field 't::b' has changed in GCC 4.4\" \"\" { target pcc_bitfield_type_matters } } */\n+{\n   char a:4;\n   char b:8 __attribute__ ((packed));\n   char c:4;"}, {"sha": "475179fd64be182838a053c4100ad786ee3aceb2", "filename": "gcc/testsuite/g++.dg/ext/visibility/warn2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fwarn2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fwarn2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fwarn2.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -8,8 +8,8 @@ namespace N __attribute ((__visibility__ (\"hidden\")))\n   struct A { };\n }\n \n-struct B\n-{\t\t\t\t// { dg-warning \"visibility\" }\n+struct B\t\t\t// { dg-warning \"visibility\" }\n+{\n   N::A a;\n };\n "}, {"sha": "d1d3ba486eba9f0198e9bfce6bf0139275e83df3", "filename": "gcc/testsuite/g++.dg/ext/visibility/warn3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fwarn3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fwarn3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fwarn3.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -14,8 +14,8 @@ void A::f() { }\n \n // This gets a warning because B objects might rely\n // on hidden symbols from A.\n-struct B\n-{\t\t\t\t// { dg-warning \"visibility\" }\n+struct B\t\t\t// { dg-warning \"visibility\" }\n+{\n   A a;\n };\n "}, {"sha": "c49c8b72180114437a8a95bad185e40f10070b17", "filename": "gcc/testsuite/g++.dg/gomp/pr26690-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,8 +1,8 @@\n // PR c++/26690\n // { dg-do compile }\n \n-struct A\n-{\t\t\t\t\t// { dg-message \"A::A\\\\(const A&\\\\)\" }\n+struct A\t\t\t// { dg-message \"A::A\\\\(const A&\\\\)\" }\n+{\n   A (int);\t\t\t\t// { dg-message \"candidates\" }\n };\n "}, {"sha": "cbd58bb24e19355274d9f9639bd6426be57bb91d", "filename": "gcc/testsuite/g++.dg/inherit/covariant7.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fcovariant7.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -27,7 +27,7 @@ struct c4 : virtual c3, virtual c0, virtual c1\n   int m;\n };\n \n-struct c6 : c0, c3, c4\n-{ // { dg-warning \"direct base\" \"\" }\n+struct c6 : c0, c3, c4\t\t// { dg-warning \"direct base\" \"\" }\n+{\n   virtual c1 &f2() volatile;\n };"}, {"sha": "624f10b2a4d6cca277be2398f8369af28661c7ea", "filename": "gcc/testsuite/g++.dg/init/synth2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fsynth2.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -5,8 +5,8 @@ struct G {\n   G(G&);\t\t\t// { dg-message \"\" \"candidate\" }\n };\n \n-class A\n-{\t\t\t\t// { dg-error \"no match\" }\n+class A\t\t\t\t// { dg-error \"no match\" }\n+{\n   const G g;\n };\n "}, {"sha": "69e27da4700e6bcdd9ebcd5b0bab1af303c2c7ba", "filename": "gcc/testsuite/g++.dg/lookup/using7.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing7.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -3,8 +3,8 @@ template <typename T, bool=T::X> struct A\n   int i;\n };\n \n-template <typename T> struct B : A<T>\n-{ // { dg-error \"incomplete\" }\n+template <typename T> struct B : A<T> // { dg-error \"incomplete\" }\n+{\n   using A<T>::i; // { dg-error \"incomplete\" \"incomplete\" } \n                  // { dg-error \"using\" \"using\" { target *-*-* } 8 }\n };"}, {"sha": "d6247c44f36be5fb2864cbaad93b2be1aa6e5cfd", "filename": "gcc/testsuite/g++.dg/other/crash-4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -14,8 +14,8 @@ struct a\n   int m;\n   a(const a&);\n };\n-struct b\n-{ // { dg-error \"cannot bind packed field\" \"\" { target { ! default_packed } } }\n+struct b // { dg-error \"cannot bind packed field\" \"\" { target { ! default_packed } } }\n+{\n   char c;\n   a aa __attribute__((packed)); // { dg-warning \"attribute ignored\" \"\" { target default_packed } }\n };"}, {"sha": "89e88478679e6a99402b080f671fe06cded033e8", "filename": "gcc/testsuite/g++.dg/other/error13.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,7 +1,7 @@\n //PR c++/28258\n \n-struct A \n-{            // { dg-message \"note\" }\n+struct A\t\t\t// { dg-message \"note\" }\n+{\n   A(void x); // { dg-error \"invalid use|incomplete type|candidates\" }\n };\n "}, {"sha": "6f3f778ab841839b78220220381dda7e8617d0d9", "filename": "gcc/testsuite/g++.dg/other/error20.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,8 +1,8 @@\n // PR c++/34275\n // { dg-do compile }\n \n-struct A\n-{\t\t// { dg-message \"candidate is\" }\n+struct A\t\t\t// { dg-message \"candidate is\" }\n+{\n   virtual A foo ();\n };\n "}, {"sha": "0068846755b87af4cd510540faf5480a394b411e", "filename": "gcc/testsuite/g++.dg/parse/crash31.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,5 +1,5 @@\n-struct A\n-{ // { dg-error \"forward declaration\" }\n+struct A // { dg-error \"forward declaration\" }\n+{\n   A : A; // { dg-error \"expected|incomplete\" }\n   A : B; // { dg-error \"not declared|incomplete\" }\n   A : A(); // { dg-error \"undefined type|incomplete\" }"}, {"sha": "3d9dcc334e5b2894342e587b6e6b70657190a1f7", "filename": "gcc/testsuite/g++.dg/parse/error16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror16.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -3,7 +3,7 @@\n \n struct A\n {\n-  struct B {}; // { dg-error \"12:previous definition of 'struct A::B'\" }\n+  struct B {}; // { dg-error \"10:previous definition of 'struct A::B'\" }\n };\n \n struct A::B{}; // { dg-error \"11:redefinition of 'struct A::B'\" }"}, {"sha": "0955e6a907604bd85414ec31279fdd48e7e320fa", "filename": "gcc/testsuite/g++.dg/parse/error19.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,8 +1,8 @@\n // { dg-options \"-fshow-column -fmessage-length=0   -ansi -pedantic-errors -Wno-long-long \" }\n // PR C++/17867\n \n-struct A\n-{  // { dg-message \"1:candidate is:\" }\n+struct A\t\t\t// { dg-message \"8:candidate is:\" }\n+{\n   A(int);\n };\n "}, {"sha": "90cb231c0ac8c5a20e6a955dfe637eb532da57ad", "filename": "gcc/testsuite/g++.dg/parse/error27.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror27.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,8 +1,8 @@\n // { dg-options \"-fshow-column -ansi -pedantic-errors -Wno-long-long\" }\n // PR c++/20152\n \n-struct KrSelectionMode {  virtual void init() = 0; }; // { dg-error \"24:previous definition of 'struct KrSelectionMode'\" }\n-struct KrKDESelectionMode : public KrSelectionMode { void init() { } }; // { dg-error \"52:previous definition of 'struct KrKDESelectionMode'\" }\n+struct KrSelectionMode {  virtual void init() = 0; }; // { dg-error \"8:previous definition of 'struct KrSelectionMode'\" }\n+struct KrKDESelectionMode : public KrSelectionMode { void init() { } }; // { dg-error \"8:previous definition of 'struct KrKDESelectionMode'\" }\n struct KrSelectionMode {  virtual void init() = 0; }; // { dg-error \"8:redefinition of 'struct KrSelectionMode'\" }\n struct KrKDESelectionMode : public KrSelectionMode { void init() { } }; // { dg-error \"8:redefinition of 'struct KrKDESelectionMode'\" }\n KrKDESelectionMode krKDESelectionMode;"}, {"sha": "7e235a13b21d958b1659a95217c5598dabfc4c79", "filename": "gcc/testsuite/g++.dg/parse/error28.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -2,7 +2,7 @@\n // PR c++/21908\n \n struct virt { virt () {} virt (int i) {} };\n-struct der : public virtual virt { // { dg-message \"34:der::der\" }\n+struct der : public virtual virt { // { dg-message \"8:der::der\" }\n   der (int i) : virt(i) {} // { dg-message \"3:candidates are: der\" }\n };\n struct top : public der { "}, {"sha": "33732fc2871df9df2fe4bf22153b33d6c020c487", "filename": "gcc/testsuite/g++.dg/parse/fused-params1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -2,8 +2,8 @@\n // Origin: Alexander Zvyagin <Alexander.Zviagine@cern.ch>\n // { dg-do compile }\n \n-template <int N,typename T> struct A\n-{ //  { dg-error \"\" } \n+template <int N,typename T> struct A //  { dg-error \"\" }\n+{\n     typedef T X;\n     template <int M> void foo (const A<M,X>&);\n };"}, {"sha": "5bd9b870e7a5e92682157603f56a5dd6665c2d14", "filename": "gcc/testsuite/g++.dg/template/error2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror2.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -15,8 +15,8 @@ template<class T> struct X\n template<class T >\n struct Derived\n {\n-  class Nested : public X<T>\n-  { // { dg-message \"instantiated\" \"\" }\n+  class Nested : public X<T> // { dg-message \"instantiated\" \"\" }\n+  {\n   };\n   \n   Nested m; // { dg-message \"instantiated\" \"\" }"}, {"sha": "6c5e8ac7022ccd0998bf539790bd6b2b70dd8c13", "filename": "gcc/testsuite/g++.dg/template/local6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -1,5 +1,5 @@\n-template <class T> struct PCVector2\n-{ // { dg-message \"candidate is\" }\n+template <class T> struct PCVector2 // { dg-message \"candidate is\" }\n+{\n     template <class T2> PCVector2(const PCVector2<T> &cv) ;\n \n     PCVector2<T> operator- (const PCVector2<T> &ov) const "}, {"sha": "b1c61195d42fbd80e9b38199738e0e8f35d8ab5b", "filename": "gcc/testsuite/g++.dg/template/qualttp15.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp15.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -12,8 +12,8 @@ template <template <class> class TT> struct X\n \tTT<int> y;\n };\n \n-template <class T> struct X<T::template B>\n-{\t// { dg-error \"previous\" }\n+template <class T> struct X<T::template B> // { dg-error \"previous\" }\n+{\n \tT z;\n };\n "}, {"sha": "d40de3d7c1a5578dc8f9467818963d11efefe07b", "filename": "gcc/testsuite/g++.dg/warn/Wnvdtor-2.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnvdtor-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnvdtor-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnvdtor-2.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -6,46 +6,46 @@\n // destructor, in which case it would be possible but unsafe to delete\n // an instance of a derived class through a pointer to the base class.\n \n-struct A\n-{ // { dg-bogus \"non-virtual destructor\" }\n+struct A // { dg-bogus \"non-virtual destructor\" }\n+{\n protected:\n   ~A();\n public:\n   virtual void f() = 0;\n };\n \n-struct B\n-{ // { dg-bogus \"non-virtual destructor\" }\n+struct B // { dg-bogus \"non-virtual destructor\" }\n+{\n private:\n   ~B();\n public:\n   virtual void f() = 0;\n };\n \n-struct C\n-{ // { dg-warning \"non-virtual destructor\" }\n+struct C // { dg-warning \"non-virtual destructor\" }\n+{\n   virtual void f() = 0;\n };\n \n-struct D\n-{ // { dg-warning \"non-virtual destructor\" }\n+struct D // { dg-warning \"non-virtual destructor\" }\n+{\n   ~D();\n   virtual void f() = 0;\n };\n \n struct E;\n \n-struct F\n-{ // { dg-warning \"non-virtual destructor\" }\n+struct F // { dg-warning \"non-virtual destructor\" }\n+{\n protected:\n   friend class E;\n   ~F();\n public:\n   virtual void f() = 0;\n };\n \n-struct G\n-{ // { dg-warning \"non-virtual destructor\" }\n+struct G // { dg-warning \"non-virtual destructor\" }\n+{\n private:\n   friend class E;\n   ~G();"}, {"sha": "0ba6790f4c990435aab7cfcd8461705b3c09158c", "filename": "gcc/testsuite/g++.dg/warn/anonymous-namespace-3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -7,7 +7,7 @@\n struct B { std::auto_ptr<A> p; };\n \n #line 10 \"foo.C\"\n-struct C\n-{ // { dg-warning \"uses the anonymous namespace\" }\n+struct C\t\t   // { dg-warning \"uses the anonymous namespace\" }\n+{\n   std::auto_ptr<A> p;\n };"}, {"sha": "aa5530fff7fdbaf7df4baa6a300bc9dccdc1f6f7", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15309-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-1.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -9,8 +9,8 @@ public:\n   ~bahamian ();  \n };\n \n-class miami : public bahamian\n-{ // { dg-warning \"\" } // WARNING -\n+class miami : public bahamian\t// { dg-warning \"\" } // WARNING -\n+{\n public:\n    miami ();\n    ~miami ();"}, {"sha": "33be95f20447d3743f5f50a0e59d293bdeb2dbc6", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash29.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -6,8 +6,8 @@ union Value\n \tValue(){}\n };\n \n-struct GlobalAddress\n-{// { dg-message \"note\" }\n+struct GlobalAddress\t\t// { dg-message \"note\" }\n+{\n \tGlobalAddress(Value *nvar){} // { dg-message \"candidates\" }\n };\n "}, {"sha": "015bbefdfb540634db9b56b2a0b99086e9d9616e", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -122,8 +122,8 @@ struct B1 : A\n {\n };\n \n-struct C : A, A1\n-{ // { dg-error \"\" } looser throw - A::~A()\n+struct C : A, A1\t\t// { dg-error \"\" } looser throw - A::~A()\n+{\n   virtual void foo() throw(int);    // { dg-error \"\" } looser throw - A::foo\n   virtual void bar() throw(int);    // { dg-error \"\" } looser throw - A1::bar\n };"}, {"sha": "e94cc7c978157e739571775bbd43c2774911eff1", "filename": "gcc/testsuite/g++.old-deja/g++.jason/crash3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -2,8 +2,8 @@\n // Bug: g++ tries to generate initialization semantics for a Node from an int,\n // and fails.\n \n-struct Node\n-{\t\t\t\t// { dg-message \"note\" } \n+struct Node\t\t\t// { dg-message \"note\" }\n+{\n   Node* child[2];\n };\n "}, {"sha": "62c8f8fba2f6422c7bb5d9e573514779ad51642d", "filename": "gcc/testsuite/g++.old-deja/g++.jason/destruct2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdestruct2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdestruct2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdestruct2.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -10,8 +10,8 @@ struct X\n struct Y : public X\n {};\n \n-struct Z : public Y, public X\n-{};\t\t\t\t// { dg-warning \"\" } \n+struct Z : public Y, public X\t// { dg-warning \"\" }\n+{};\n \n void foo ()\n {"}, {"sha": "7c376229b6978309eaf46d89dac84ffcee4ad477", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -5,8 +5,8 @@\n // Subject: bug in handling static const object of the enclosing class\n // Date: Tue, 1 Sep 92 10:38:44 EDT\n \n-class X\n-{ // { dg-message \"1:X::X\\\\(const X&\\\\)\" } implicit constructor\n+class X\t      // { dg-message \"7:X::X\\\\(const X&\\\\)\" } implicit constructor\n+{\n   private:\n     int x;\n   public:"}, {"sha": "43ba1262c95b2884513cc98ec1796a732129f047", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -20,8 +20,8 @@ Foo::Foo(int aa)\n { }\n \n \n-struct var_Foo: public Foo\n-{ // { dg-message \"note\" }  base.*// ERROR -  in class.*\n+struct var_Foo: public Foo // { dg-message \"note\" }  base.*// ERROR -  in class.*\n+{\n   var_Foo* operator-> () {return this;}\n };\n "}, {"sha": "a2c985386e4df0fdabbca5e46a46f4879b372497", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p3538a.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538a.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -24,8 +24,8 @@ const ccObjectInfo& ccHandle<T>::repInvariant (int)\n class ccHandleBase : public ccObjectInfo\n {};\n \n-class cc_CircleHdl : public virtual ccHandleBase, public ccObjectInfo\n-{\t\t\t\t// { dg-warning \"\" } \n+class cc_CircleHdl : public virtual ccHandleBase, public ccObjectInfo // { dg-warning \"\" } \n+{\n public:\n   virtual const ccObjectInfo& ri (int);\n };"}, {"sha": "96ba124a1265d9048c8f1157d11dd3dcb42d659d", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p3538b.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538b.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -26,8 +26,8 @@ const ccObjectInfo& ccHandle<T>::repInvariant (int)\n class ccHandleBase : public ccObjectInfo\n {};\n \n-class cc_CircleHdl : public virtual ccHandleBase, public ccObjectInfo\n-{\t\t\t\t// { dg-warning \"\" } \n+class cc_CircleHdl : public virtual ccHandleBase, public ccObjectInfo // { dg-warning \"\" } \n+{\n public:\n   virtual const ccObjectInfo& repInvariant (int);\n };"}, {"sha": "699d524b9e8b03d57300f3d1eba6b557433fefd7", "filename": "gcc/testsuite/g++.old-deja/g++.other/struct1.C", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstruct1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstruct1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstruct1.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -6,36 +6,36 @@\n // Duplicate definitions are wrong, we should just cough\n // politely, but we used to die horribly.\n \n-class Y\n-{   // { dg-error \"\" } previous definition\n+class Y // { dg-error \"\" } previous definition\n+{\n };\n class Y // { dg-error \"\" } redefinition\n {   \n };\n \n-template<class T> class X\n-{   // { dg-error \"\" } previous definition\n+template<class T> class X // { dg-error \"\" } previous definition\n+{\n };\n template<class T> class X // { dg-error \"\" } redefinition\n {   \n };\n \n-template<class T> class X<T *>\n-{   // { dg-error \"\" } previous definition\n+template<class T> class X<T *> // { dg-error \"\" } previous definition\n+{\n };\n template<class T> class X<T *> // { dg-error \"\" } redefinition\n {   \n };\n \n-template<> class X<int>\n-{   // { dg-error \"\" } previous definition\n+template<> class X<int> // { dg-error \"\" } previous definition\n+{\n };\n template<> class X<int> // { dg-error \"\" } redefinition\n {   \n };\n \n-template<> class X<int *>\n-{   // { dg-error \"\" } previous definition\n+template<> class X<int *> // { dg-error \"\" } previous definition\n+{\n };\n template<> class X<int *> // { dg-error \"\" } redefinition\n {   "}, {"sha": "5c5872870360f15cef236faa81008c56c83134d2", "filename": "gcc/testsuite/g++.old-deja/g++.other/volatile1.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -2,9 +2,8 @@\n // Test that failed lvalue-to-rvalue conversion of vf doesn't crash the\n // compiler.\n \n-class f_class\n-{ };\t\t\t\t// { dg-message \"candidates\" \"candidates\" } \n-// { dg-message \"note\" \"note\" { target *-*-* } 6 }\n+class f_class\t\t       // { dg-message \"note\" \"candidates\" }\n+{ };\n \n volatile f_class\n ret_v_f_class()"}, {"sha": "fa9401bee03af1fcf53ab383c32b8007e9f9036c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash36.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash36.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -13,8 +13,8 @@ struct iterator {\n \n \n template <class Iterator>\n-struct reverse_iterator : public\n-iterator<typename iterator_traits<Iterator>::iterator_category> { // { dg-message \"instantiated\" } no type iterator_category\n+struct reverse_iterator : public // { dg-message \"instantiated\" } no type iterator_category\n+iterator<typename iterator_traits<Iterator>::iterator_category> {\n   protected:\n   Iterator current;\n   "}, {"sha": "b0d1d3bb2b8051a02d3c0546e03bb30a9c44244f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/derived3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fderived3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fderived3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fderived3.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -5,8 +5,8 @@\n \n template<class T>\n class X {\n-\tclass Y : public T\n-\t{ // { dg-error \"base type .* fails to be\" }\n+\tclass Y : public T\t// { dg-error \"base type .* fails to be\" }\n+\t{\n \t};\n \tY y;\t\t\t// { dg-message \"instantiated\" }\n };"}, {"sha": "dae13b67bd574745b735642c9d33b4402f04c21b", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb109.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -19,8 +19,8 @@ inline istream& operator>>(istream& is, Empty& ) { return is;}\n \n \n template<class VertexType, class EdgeType>\n-class Graph\n-{  // { dg-message \"note\" } candidates\n+class Graph\t\t\t// { dg-message \"note\" } candidates\n+{\n   public:\n     // public type interface\n     typedef std::map<int, EdgeType > Successor;"}, {"sha": "dfd3d6ceda4ebe0e6d5c93d9195d065f8a2631f7", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -16,8 +16,8 @@ public:\n         int i;\n         };\n \n-class some_derived : public some_base\n-        {  // { dg-message \"note\" }\n+class some_derived : public some_base // { dg-message \"note\" }\n+        {\n public:\n         class derived_func_args;\n         void func(derived_func_args &);"}, {"sha": "e09ab757b54615e558e46554b2a74d86b8446b14", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -33,6 +33,6 @@ int main()\n }\n \n // { dg-error \"deleted function\" \"\" { target *-*-* } 72 }\n-// { dg-error \"used here\" \"\" { target *-*-* } 31 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 30 }\n // { dg-error \"first required here\" \"\" { target *-*-* } 30 }\n // { dg-excess-errors \"copy constructor\" }"}, {"sha": "e02ab105911a7fea2a360b77ee164e7dcf5527fb", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -32,7 +32,7 @@ void test02()\n   test_base io1;\n   test_base io2 = io1; \n }\n-// { dg-error \"within this context\" \"\" { target *-*-* } 27 } \n+// { dg-error \"within this context\" \"\" { target *-*-* } 26 }\n // { dg-error \"synthesized\" \"\" { target *-*-* } 33 } \n // { dg-error \"is private\" \"\" { target *-*-* } 785 } \n // { dg-error \"copy constructor\" \"\" { target *-*-* } 0 } "}, {"sha": "ba3dd763bd51de7b7601eaaba79812fa4b4defba", "filename": "libstdc++-v3/testsuite/ext/type_traits/add_unsigned_integer_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_integer_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_integer_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_integer_neg.cc?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -36,4 +36,4 @@ int main()\n }\n \n // { dg-error \"invalid use of incomplete\" \"\" { target *-*-* } 28 } \n-// { dg-error \"declaration of\" \"\" { target *-*-* } 62 } \n+// { dg-error \"declaration of\" \"\" { target *-*-* } 61 }"}, {"sha": "2347a14c0e724838b8eafd9bfb912b631c0250d4", "filename": "libstdc++-v3/testsuite/ext/type_traits/remove_unsigned_integer_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_integer_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a2b4862344454ab42a57a6a4b50461d1fa6f81/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_integer_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_integer_neg.cc?ref=d4a2b4862344454ab42a57a6a4b50461d1fa6f81", "patch": "@@ -36,4 +36,4 @@ int main()\n }\n \n // { dg-error \"invalid use of incomplete\" \"\" { target *-*-* } 28 } \n-// { dg-error \"declaration of\" \"\" { target *-*-* } 105 } \n+// { dg-error \"declaration of\" \"\" { target *-*-* } 104 }"}]}