{"sha": "0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFjNjliNDdmYmQ1YzQ2YjI5ZjI3Y2U5YWIxMGZmNjM0OThjZWVlZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-06-27T22:26:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-06-27T22:26:48Z"}, "message": "re PR c++/36364 (Problem with -frepo)\n\n\tPR c++/36364\n\t* repo.c (repo_emit_p): Put const static data members initialized\n\tby const expr into *.rpo file, just return 2 if IDENTIFIER_REPO_CHOSEN\n\tfor it is 0.\n\n\t* g++.dg/template/repo9.C: New test.\n\nFrom-SVN: r137205", "tree": {"sha": "551a1cfdede2d1e29abc740a3fdd9deccda535fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/551a1cfdede2d1e29abc740a3fdd9deccda535fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3fd526b6a0b085e805523eb53c64ebc2099c4e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3fd526b6a0b085e805523eb53c64ebc2099c4e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3fd526b6a0b085e805523eb53c64ebc2099c4e3"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "14d08aca504af86bd8c8ebfd3fcb421689ae4822", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "patch": "@@ -1,3 +1,10 @@\n+2008-06-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36364\n+\t* repo.c (repo_emit_p): Put const static data members initialized\n+\tby const expr into *.rpo file, just return 2 if IDENTIFIER_REPO_CHOSEN\n+\tfor it is 0.\n+\n 2008-06-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/36655"}, {"sha": "b53062dfe8f44ace0b98f800304f69df754438dc", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "patch": "@@ -280,6 +280,7 @@ finish_repo (void)\n int\n repo_emit_p (tree decl)\n {\n+  int ret = 0;\n   gcc_assert (TREE_PUBLIC (decl));\n   gcc_assert (TREE_CODE (decl) == FUNCTION_DECL\n \t      || TREE_CODE (decl) == VAR_DECL);\n@@ -306,10 +307,12 @@ repo_emit_p (tree decl)\n \treturn 2;\n       /* Const static data members initialized by constant expressions must\n \t be processed where needed so that their definitions are\n-\t available.  */\n+\t available.  Still record them into *.rpo files, so if they\n+\t weren't actually emitted and collect2 requests them, they can\n+\t be provided.  */\n       if (DECL_INTEGRAL_CONSTANT_VAR_P (decl)\n \t  && DECL_CLASS_SCOPE_P (decl))\n-\treturn 2;\n+\tret = 2;\n     }\n   else if (!DECL_TEMPLATE_INSTANTIATION (decl))\n     return 2;\n@@ -343,7 +346,7 @@ repo_emit_p (tree decl)\n       pending_repo = tree_cons (NULL_TREE, decl, pending_repo);\n     }\n \n-  return IDENTIFIER_REPO_CHOSEN (DECL_ASSEMBLER_NAME (decl));\n+  return IDENTIFIER_REPO_CHOSEN (DECL_ASSEMBLER_NAME (decl)) ? 1 : ret;\n }\n \n /* Returns true iff the prelinker has explicitly marked CLASS_TYPE for"}, {"sha": "d0d635d3357e46f11d791c80c0a95663607b387e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "patch": "@@ -1,3 +1,8 @@\n+2008-06-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36364\n+\t* g++.dg/template/repo9.C: New test.\n+\n 2008-06-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/36655"}, {"sha": "f55024cb0018fbdda67761086c53c25937a0d018", "filename": "gcc/testsuite/g++.dg/template/repo9.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frepo9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frepo9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frepo9.C?ref=0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "patch": "@@ -0,0 +1,48 @@\n+// PR c++/36364\n+// { dg-options \"-frepo\" }\n+// { dg-final { cleanup-repo-files } }\n+// { dg-require-host-local \"\" }\n+\n+template <typename C> struct A\n+{\n+  static void assign (C &c1, const C &c2) { c1 = c2; }\n+};\n+\n+template <typename C, typename T> struct B\n+{\n+  struct D\n+  {\n+    static const C terminal;\n+    static unsigned long stor[];\n+    static D &empty_rep ()\n+    {\n+      void *p = reinterpret_cast <void *>(&stor);\n+      return *reinterpret_cast <D *>(p);\n+    }\n+    void test (unsigned long n)\n+    {\n+      T::assign (this->refdata ()[n], terminal);\n+    }\n+    C *refdata () throw ()\n+    {\n+      return reinterpret_cast <C *>(this + 1);\n+    }\n+  };\n+  C *dataplus;\n+  C *data () const { return dataplus; }\n+  D *rep () const { return &((reinterpret_cast < D * >(data ()))[-1]); }\n+  static D & empty_rep () { return D::empty_rep (); }\n+  B () : dataplus (empty_rep ().refdata ()) { }\n+  ~B () { }\n+  void push_back (C c) { rep ()->test (10); }\n+};\n+\n+template <typename C, typename T> const C B <C, T>::D::terminal = C ();\n+template <typename C, typename T> unsigned long B <C, T>::D::stor[64];\n+\n+int\n+main ()\n+{\n+  B <char, A <char> > s;\n+  s.push_back ('a');\n+}"}]}