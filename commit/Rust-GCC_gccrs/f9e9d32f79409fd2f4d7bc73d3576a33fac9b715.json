{"sha": "f9e9d32f79409fd2f4d7bc73d3576a33fac9b715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjllOWQzMmY3OTQwOWZkMmY0ZDdiYzczZDM1NzZhMzNmYWM5YjcxNQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-10-15T21:01:43Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-10-15T21:01:43Z"}, "message": "rs6000: Fix shrink-wrap-separate for AIX\n\nAll out-of-line register save routines need LR, so we cannot wrap the\nLR component if there are out-of-line saves.  This didn't show up for\ntesting on Linux because none of the tests there use out-of-line FPR\nsaves without also using out-of-line GPR saves, which we did handle.\n\nThis patch fixes it, and also cleans up code a little.\n\n\n\t* config/rs6000/rs6000.c (rs6000_get_separate_components): Do not\n\tmake LR a separately shrink-wrapped component unless savres_strategy\n\tcontains all of {SAVE,REST}_INLINE_{GPRS,FPRS,VRS}.  Do not wrap\n\tGPRs unless both {SAVE,REST}_INLINE_GPRS.  Do not disallow all\n\twrapping when not both {SAVE,REST}_INLINE_GPRS.\n\nFrom-SVN: r241203", "tree": {"sha": "d89e56362ed9fd3d49b09d9d54cd79dc4c10ef8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d89e56362ed9fd3d49b09d9d54cd79dc4c10ef8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9e9d32f79409fd2f4d7bc73d3576a33fac9b715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e9d32f79409fd2f4d7bc73d3576a33fac9b715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9e9d32f79409fd2f4d7bc73d3576a33fac9b715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e9d32f79409fd2f4d7bc73d3576a33fac9b715/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "baa33d8380e5a74a8709ed5790856c8d07739cc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baa33d8380e5a74a8709ed5790856c8d07739cc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baa33d8380e5a74a8709ed5790856c8d07739cc3"}], "stats": {"total": 49, "additions": 33, "deletions": 16}, "files": [{"sha": "54fba44562d3547d8035594e5b0e720a24fc176f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e9d32f79409fd2f4d7bc73d3576a33fac9b715/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e9d32f79409fd2f4d7bc73d3576a33fac9b715/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9e9d32f79409fd2f4d7bc73d3576a33fac9b715", "patch": "@@ -1,3 +1,11 @@\n+2016-10-15  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_get_separate_components): Do not\n+\tmake LR a separately shrink-wrapped component unless savres_strategy\n+\tcontains all of {SAVE,REST}_INLINE_{GPRS,FPRS,VRS}.  Do not wrap\n+\tGPRs unless both {SAVE,REST}_INLINE_GPRS.  Do not disallow all\n+\twrapping when not both {SAVE,REST}_INLINE_GPRS.\n+\n 2016-10-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* optabs.c (expand_parity): Fix mode mismatch, add final conversion"}, {"sha": "613af483e7431ad35f5564b08e9ec74e01d3dabc", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e9d32f79409fd2f4d7bc73d3576a33fac9b715/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e9d32f79409fd2f4d7bc73d3576a33fac9b715/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f9e9d32f79409fd2f4d7bc73d3576a33fac9b715", "patch": "@@ -27439,27 +27439,29 @@ rs6000_get_separate_components (void)\n {\n   rs6000_stack_t *info = rs6000_stack_info ();\n \n-  if (!(info->savres_strategy & SAVE_INLINE_GPRS)\n-      || !(info->savres_strategy & REST_INLINE_GPRS)\n-      || WORLD_SAVE_P (info))\n+  if (WORLD_SAVE_P (info))\n     return NULL;\n \n   sbitmap components = sbitmap_alloc (32);\n   bitmap_clear (components);\n \n   /* The GPRs we need saved to the frame.  */\n-  int reg_size = TARGET_32BIT ? 4 : 8;\n-  int offset = info->gp_save_offset;\n-  if (info->push_p)\n-    offset += info->total_size;\n-\n-  for (unsigned regno = info->first_gp_reg_save; regno < 32; regno++)\n+  if ((info->savres_strategy & SAVE_INLINE_GPRS)\n+      && (info->savres_strategy & REST_INLINE_GPRS))\n     {\n-      if (IN_RANGE (offset, -0x8000, 0x7fff)\n-\t  && rs6000_reg_live_or_pic_offset_p (regno))\n-\tbitmap_set_bit (components, regno);\n+      int reg_size = TARGET_32BIT ? 4 : 8;\n+      int offset = info->gp_save_offset;\n+      if (info->push_p)\n+\toffset += info->total_size;\n \n-      offset += reg_size;\n+      for (unsigned regno = info->first_gp_reg_save; regno < 32; regno++)\n+\t{\n+\t  if (IN_RANGE (offset, -0x8000, 0x7fff)\n+\t      && rs6000_reg_live_or_pic_offset_p (regno))\n+\t    bitmap_set_bit (components, regno);\n+\n+\t  offset += reg_size;\n+\t}\n     }\n \n   /* Don't mess with the hard frame pointer.  */\n@@ -27472,11 +27474,18 @@ rs6000_get_separate_components (void)\n       || (flag_pic && DEFAULT_ABI == ABI_DARWIN))\n     bitmap_clear_bit (components, RS6000_PIC_OFFSET_TABLE_REGNUM);\n \n-  /* Optimize LR save and restore if we can.  This is component 0.  */\n+  /* Optimize LR save and restore if we can.  This is component 0.  Any\n+     out-of-line register save/restore routines need LR.  */\n   if (info->lr_save_p\n-      && !(flag_pic && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_DARWIN)))\n+      && !(flag_pic && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_DARWIN))\n+      && (info->savres_strategy & SAVE_INLINE_GPRS)\n+      && (info->savres_strategy & REST_INLINE_GPRS)\n+      && (info->savres_strategy & SAVE_INLINE_FPRS)\n+      && (info->savres_strategy & REST_INLINE_FPRS)\n+      && (info->savres_strategy & SAVE_INLINE_VRS)\n+      && (info->savres_strategy & REST_INLINE_VRS))\n     {\n-      offset = info->lr_save_offset;\n+      int offset = info->lr_save_offset;\n       if (info->push_p)\n \toffset += info->total_size;\n       if (IN_RANGE (offset, -0x8000, 0x7fff))"}]}