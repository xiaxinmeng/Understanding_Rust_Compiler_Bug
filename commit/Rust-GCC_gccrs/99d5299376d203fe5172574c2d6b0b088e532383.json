{"sha": "99d5299376d203fe5172574c2d6b0b088e532383", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlkNTI5OTM3NmQyMDNmZTUxNzI1NzRjMmQ2YjBiMDg4ZTUzMjM4Mw==", "commit": {"author": {"name": "Joel Hutton", "email": "joel.hutton@arm.com", "date": "2021-03-10T12:22:45Z"}, "committer": {"name": "Joel Hutton", "email": "joel.hutton@arm.com", "date": "2021-03-10T12:26:21Z"}, "message": "[Vect] Fix mask check on Scatter loads/stores\n\nPreviously, IFN_MASK_SCATTER_STORE was used if 'loop_masks' was\nnon-null, but the mask used is 'final_mask'. This caused a bug where\na 'MASK_STORE' was vectorized into a 'SCATTER_STORE' instead of a\n'MASK_SCATTER_STORE'. This fixes PR target/99102.\n\ngcc/ChangeLog:\n\n\tPR target/99102\n\t* tree-vect-stmts.c (vectorizable_store): Fix scatter store mask\n\tcheck condition.\n\t(vectorizable_load): Fix gather load mask check condition.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/99102\n\t* gcc.dg/vect/pr99102.c: New test.", "tree": {"sha": "f08b76b970cd86cf937498393ca75bab18ecac7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f08b76b970cd86cf937498393ca75bab18ecac7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99d5299376d203fe5172574c2d6b0b088e532383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d5299376d203fe5172574c2d6b0b088e532383", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d5299376d203fe5172574c2d6b0b088e532383", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d5299376d203fe5172574c2d6b0b088e532383/comments", "author": {"login": "JoelHutton", "id": 4455754, "node_id": "MDQ6VXNlcjQ0NTU3NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4455754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelHutton", "html_url": "https://github.com/JoelHutton", "followers_url": "https://api.github.com/users/JoelHutton/followers", "following_url": "https://api.github.com/users/JoelHutton/following{/other_user}", "gists_url": "https://api.github.com/users/JoelHutton/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelHutton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelHutton/subscriptions", "organizations_url": "https://api.github.com/users/JoelHutton/orgs", "repos_url": "https://api.github.com/users/JoelHutton/repos", "events_url": "https://api.github.com/users/JoelHutton/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelHutton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoelHutton", "id": 4455754, "node_id": "MDQ6VXNlcjQ0NTU3NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4455754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelHutton", "html_url": "https://github.com/JoelHutton", "followers_url": "https://api.github.com/users/JoelHutton/followers", "following_url": "https://api.github.com/users/JoelHutton/following{/other_user}", "gists_url": "https://api.github.com/users/JoelHutton/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelHutton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelHutton/subscriptions", "organizations_url": "https://api.github.com/users/JoelHutton/orgs", "repos_url": "https://api.github.com/users/JoelHutton/repos", "events_url": "https://api.github.com/users/JoelHutton/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelHutton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ceb712e2699a493da544b1755f6f73d62930f9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ceb712e2699a493da544b1755f6f73d62930f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ceb712e2699a493da544b1755f6f73d62930f9b"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "9d321b97a68c05ad08646e8e2d6979c2030c65e6", "filename": "gcc/testsuite/gcc.dg/vect/pr99102.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d5299376d203fe5172574c2d6b0b088e532383/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr99102.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d5299376d203fe5172574c2d6b0b088e532383/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr99102.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr99102.c?ref=99d5299376d203fe5172574c2d6b0b088e532383", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+/* { dg-additional-options \"-msve-vector-bits=256\" { target aarch64_sve } } */\n+long a[44];\n+short d, e = -7;\n+__attribute__((noipa)) void b(char f, short j, short k, unsigned l) {\n+  for (int g = 0; g < 9; g += f)\n+    for (int b = 0; b < 90; b -= k)\n+      for (int h = 0; h < f; h++)\n+        for (short i = 0; i < 15; i += 4)\n+          if (!l)\n+            a[i] = j;\n+}\n+int main() {\n+  for (long c = 0; c < 2; ++c)\n+    a[c] = 7;\n+  b(9, d, e, 5);\n+  if (!a[0])\n+    __builtin_abort();\n+}\n+/* { dg-final { scan-tree-dump \"MASK_SCATTER_STORE\" \"vect\"  { target aarch64_sve } } } */"}, {"sha": "d791d3a47205a6f105e25df5fa22e403d30638eb", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99d5299376d203fe5172574c2d6b0b088e532383/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99d5299376d203fe5172574c2d6b0b088e532383/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=99d5299376d203fe5172574c2d6b0b088e532383", "patch": "@@ -8126,7 +8126,7 @@ vectorizable_store (vec_info *vinfo,\n \t\t{\n \t\t  tree scale = size_int (gs_info.scale);\n \t\t  gcall *call;\n-\t\t  if (loop_masks)\n+\t\t  if (final_mask)\n \t\t    call = gimple_build_call_internal\n \t\t      (IFN_MASK_SCATTER_STORE, 5, dataref_ptr, vec_offset,\n \t\t       scale, vec_oprnd, final_mask);\n@@ -9419,7 +9419,7 @@ vectorizable_load (vec_info *vinfo,\n \t\t\ttree zero = build_zero_cst (vectype);\n \t\t\ttree scale = size_int (gs_info.scale);\n \t\t\tgcall *call;\n-\t\t\tif (loop_masks)\n+\t\t\tif (final_mask)\n \t\t\t  call = gimple_build_call_internal\n \t\t\t    (IFN_MASK_GATHER_LOAD, 5, dataref_ptr,\n \t\t\t     vec_offset, scale, zero, final_mask);"}]}