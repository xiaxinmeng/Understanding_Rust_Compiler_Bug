{"sha": "9ade247982d622219e3935880cd2500d2d3c42f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFkZTI0Nzk4MmQ2MjIyMTllMzkzNTg4MGNkMjUwMGQyZDNjNDJmMg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2004-06-12T04:34:58Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2004-06-12T04:34:58Z"}, "message": "libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.\n\n\t* libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.\n\t* libgcc-darwin.ver: Likewise.\n\nFrom-SVN: r83017", "tree": {"sha": "d81ad210bdaa8bd8cb5f8bf4de058a14af941e00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d81ad210bdaa8bd8cb5f8bf4de058a14af941e00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ade247982d622219e3935880cd2500d2d3c42f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ade247982d622219e3935880cd2500d2d3c42f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ade247982d622219e3935880cd2500d2d3c42f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ade247982d622219e3935880cd2500d2d3c42f2/comments", "author": null, "committer": null, "parents": [{"sha": "b605eb59fcb15b79f0b9095654b8db76b997736c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b605eb59fcb15b79f0b9095654b8db76b997736c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b605eb59fcb15b79f0b9095654b8db76b997736c"}], "stats": {"total": 57, "additions": 36, "deletions": 21}, "files": [{"sha": "9ff2b420e63f2d73cbdb437df109be4b809acbdc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ade247982d622219e3935880cd2500d2d3c42f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ade247982d622219e3935880cd2500d2d3c42f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ade247982d622219e3935880cd2500d2d3c42f2", "patch": "@@ -1,3 +1,8 @@\n+2004-06-12  Andreas Jaeger  <aj@suse.de>\n+\n+\t* libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.\n+\t* libgcc-darwin.ver: Likewise.\n+\n 2004-06-12  Peter Jakubek  <peter@laseranimation.com>\n \n \t* reload.c (find_reloads): Force reload for pseudo registers on big\n@@ -10,7 +15,7 @@\n \texit blocks.\n \n 2004-06-11  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \tFix Bug 15899\n \tFix Bug 15460\n \t* tree.h (SSA_NAME_VALUE): New macro.\n@@ -187,10 +192,10 @@\n \t* tree-into-ssa.c (mark_def_sites): Rename occurences of vdef\n \tto v_may_def. Also add code to mark statements with\n \tV_MUST_DEFs as definition sites.\n-\t(rewrite_stmt): Rename occurences of vdef to v_may_def. Also \n+\t(rewrite_stmt): Rename occurences of vdef to v_may_def. Also\n \tadd code to register new V_MUST_DEFs made by the statement.\n \t* tree-outof-ssa.c (VIRTUAL_PARTITION): Update comments.\n-\t(check_replaceable): Rename occurences of vdef to v_may_def. Also \n+\t(check_replaceable): Rename occurences of vdef to v_may_def. Also\n \tadd check for V_MUST_DEFs.\n \t(find_replaceable_in_bb): Ditto.\n \t* tree-pretty-print.c (dump_vops): Rename occurences of vdef\n@@ -200,32 +205,32 @@\n \t(mark_all_v_must_defs): New function.\n \t(create_scalar_copies): Replace call to mark_all_vdefs with\n \tcalls to mark_all_v_may_defs and mark_all_v_must_defs.\n-\t(scalarize_structures): Rename occurences of vdef to v_may_def. \n+\t(scalarize_structures): Rename occurences of vdef to v_may_def.\n \tAlso add a check for V_MUST_DEFs.\n \t(scalarize_modify_expr): Rename occurences of vdef to v_may_def.\n \t* tree-ssa-alias.c (global_var): Update comment.\n \t(compute_may_aliases): Ditto.\n \t(compute_points_to_and_addr_escape): Rename occurences of vdef\n-\tto v_may_def. Also add code to mark variables in V_MUST_DEF \n+\tto v_may_def. Also add code to mark variables in V_MUST_DEF\n \toperands as being written to.\n \t(group_aliases): Update comment.\n \t(maybe_create_global_var): Ditto.\n \t* tree-ssa.c (verify_ssa): Rename occurences of vdef to v_may_def.\n \tAlso add a check for V_MUST_DEFs on GIMPLE registers.\n \t(replace_immediate_uses): Rename occurences of vdef to v_may_def.\n \t* tree-ssa-ccp.c (visit_stmt): Rename occurences of vdef\n-\tto v_may_def. Also add code to mark all V_MUST_DEF operands \n+\tto v_may_def. Also add code to mark all V_MUST_DEF operands\n \tVARYING.\n \t(initialize): Ditto.\n \t(set_rhs): Rename occurences of vdef to v_may_def. Also add\n \tcode to update SSA_NAMEs in V_MUST_DEFs.\n \t* tree-ssa-copy.c (cprop_into_stmt): Rename occurences of vdef\n \tto v_may_def.\n-\t* tree-ssa-dce.c (mark_stmt_if_obviously_necessary): Rename \n+\t* tree-ssa-dce.c (mark_stmt_if_obviously_necessary): Rename\n \toccurences of vdef to v_may_def. Also add code to mark statements\n \twith V_MUST_DEFs as necessary.\n \t(propagate_necessity): Rename occurences of vdef to v_may_def.\n-\t* tree-ssa-dom.c (redirect_edges_and_update_ssa_graph): Rename \n+\t* tree-ssa-dom.c (redirect_edges_and_update_ssa_graph): Rename\n \toccurences of vdef to v_may_def. Also add code to mark operands\n \tin V_MUST_DEFs for renaming.\n \t(eliminate_redundant_computations): Rename occurences of vdef\n@@ -244,10 +249,10 @@\n \t* tree-ssa-live.c (create_ssa_var_map): Rename occurences of vdef\n \tto v_may_def. Also add code to mark V_MUST_DEF operands as being\n \tused in virtual operators.\n-\t* tree-ssa-loop.c (mark_defs_for_rewrite): Rename occurences of \n+\t* tree-ssa-loop.c (mark_defs_for_rewrite): Rename occurences of\n \tvdef to v_may_def. Also add code to mark V_MUST_DEF operands for\n \trenaming.\n-\t* tree-ssa-operands.c (opf_kill_def): New flag for killing \n+\t* tree-ssa-operands.c (opf_kill_def): New flag for killing\n \tdefinitions.\n \t(build_vdefs): Renamed to...\n \t(build_v_may_defs): This.\n@@ -316,7 +321,7 @@\n \twith calls to remove_v_may_defs and remove_v_must_defs.\n \t(process_left_occs_and_kills): Rename occurences of vdef to v_may_def.\n \tAlso add code that marks left occurences of operands in V_MUST_DEFs.\n-\t* tree-tailcall.c (find_tail_calls): Rename occurences of vdef \n+\t* tree-tailcall.c (find_tail_calls): Rename occurences of vdef\n \tto v_may_def. Also add check for V_MUST_DEFs.\n \t(eliminate_tail_call):Rename occurences of vdef to v_may_def.\n \n@@ -353,7 +358,7 @@\n \n 2004-06-10  Jason Merrill  <jason@redhat.com>\n \n-\t* target.h (struct gcc_target): Change gimplify_va_arg_expr \n+\t* target.h (struct gcc_target): Change gimplify_va_arg_expr\n \thook signature.\n \t* tree-gimple.h: Adjust.\n \t* config/alpha/alpha.c (alpha_gimplify_va_arg): Adjust.\n@@ -389,7 +394,7 @@\n \tdf_bb_reg_def_chain_create, df_bb_reg_use_chain_create,\n \tdf_bb_rd_local_compute, df_bb_ru_local_compute, df_bb_lr_local_compute,\n \tdf_analyse_1, df_insn_modify): Support analysing only a part of the cfg.\n-\t\n+\n \t(dataflow_set_a_op_b, dataflow_set_copy): New functions.\n \t(df_rd_transfer_function, df_ru_transfer_function,\n \tdf_lr_transfer_function): Type of bitmaps changed to void *.\n@@ -441,7 +446,7 @@\n \n 2004-06-09  Daniel Berlin <dberlin@dberlin.org>\n \n-\t* tree-ssa.c (verify_ssa): Verify that vdefs/makes_aliased_stores \n+\t* tree-ssa.c (verify_ssa): Verify that vdefs/makes_aliased_stores\n \tmatch.\n \n 2004-06-09  Roger Sayle  <roger@eyesopen.com>\n@@ -452,7 +457,7 @@\n \t(nondestructive_fold_unary_to_constant) <BIT_NOT_EXPR>: Likewise.\n \n 2004-06-09  Richard Henderson  <rth@redhat.com>\n- \n+\n \tPR middle-end/15228\n \t* function.c (assign_parms): Always set_mem_align with the computed\n \tFUNCTION_ARG_BOUNDARY.  Don't clear stack_parm if !STRICT_ALIGNMENT.\n@@ -558,7 +563,7 @@\n \t* config/rs6000/rs6000.c (rs6000_gimplify_va_arg): New fn.\n \t(TARGET_GIMPLIFY_VA_ARG_EXPR): Define.\n \t* alias.c (get_varargs_alias_set): Just return 0 for now.\n-\t\n+\n \t* c-objc-common.c (c_tree_printer): Improve handling of %T.\n \n 2004-06-09  Andrew Pinski  <pinskia@physics.uc.edu>\n@@ -583,7 +588,7 @@\n \t(sched_analyze): When the previous basic block ended in a CALL_INSN,\n \tinitialize in_post_call_group_p as post_call_initial.\n \t(init_deps): initialize in_post_call_group_p to not_post_call.\n-\t\n+\n 2004-06-09  Arnaud Charlet  <charlet@act-europe.fr>\n \n \tPR ada/6637\n@@ -652,7 +657,7 @@\n \t* gimple-low.c (struct lower_data): Replace the_return_label and\n \tone_return_stmt with return_statements.\n \t(lower_function_body): Process the entire list of return_statements.\n-\t(lower_return_expr): Check source value before unifying return_exprs.   \n+\t(lower_return_expr): Check source value before unifying return_exprs.\n \t* gimplify.c (gimplify_return_expr): Force the use of a temporary\n \tfor !aggregate_value_p.\n \t* tree-gimple.c: Update RETURN_EXPR grammer.\n@@ -1183,7 +1188,7 @@\n \n 2004-06-01  Nicola Pero  <nicola@brainstorm.co.uk>\n \n- \tPR objc/7993\n+\tPR objc/7993\n \t* objc-act.c (is_private): Do not emit the 'instance variable %s\n \tis declared private' error.\n \t(is_public): Emit the error after calling is_private."}, {"sha": "0e9f95db73405662bd2f1fe6b9ffbdcbc272ca01", "filename": "gcc/libgcc-darwin.ver", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ade247982d622219e3935880cd2500d2d3c42f2/gcc%2Flibgcc-darwin.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ade247982d622219e3935880cd2500d2d3c42f2/gcc%2Flibgcc-darwin.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc-darwin.ver?ref=9ade247982d622219e3935880cd2500d2d3c42f2", "patch": "@@ -194,8 +194,13 @@ GCC_3.3.1 {\n %inherit GCC_3.3.2 GCC_3.3.1\n GCC_3.3.2 {\n }\n+%inherit GCC_3.3.4 GCC_3.3.2\n+GCC_3.3.4 {\n+  __unorddf2\n+  __unordsf2\n+}\n \n-%inherit GCC_3.4 GCC_3.3\n+%inherit GCC_3.4 GCC_3.3.4\n GCC_3.4 {\n   # bit scanning and counting built-ins\n   ___clzsi2"}, {"sha": "749040e149c021beebc9a9aad45fb2c7578276db", "filename": "gcc/libgcc-std.ver", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ade247982d622219e3935880cd2500d2d3c42f2/gcc%2Flibgcc-std.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ade247982d622219e3935880cd2500d2d3c42f2/gcc%2Flibgcc-std.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc-std.ver?ref=9ade247982d622219e3935880cd2500d2d3c42f2", "patch": "@@ -194,8 +194,13 @@ GCC_3.3.1 {\n %inherit GCC_3.3.2 GCC_3.3.1\n GCC_3.3.2 {\n }\n+%inherit GCC_3.3.4 GCC_3.3.2\n+GCC_3.3.4 {\n+  __unorddf2\n+  __unordsf2\n+}\n \n-%inherit GCC_3.4 GCC_3.3.2\n+%inherit GCC_3.4 GCC_3.3.4\n GCC_3.4 {\n   # bit scanning and counting built-ins\n   __clzsi2"}]}