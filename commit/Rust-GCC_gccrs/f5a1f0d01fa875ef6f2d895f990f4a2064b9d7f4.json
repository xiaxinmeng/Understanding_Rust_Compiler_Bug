{"sha": "f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVhMWYwZDAxZmE4NzVlZjZmMmQ4OTVmOTkwZjRhMjA2NGI5ZDdmNA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-05-11T16:05:45Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-05-11T16:05:45Z"}, "message": "re PR middle-end/40026 (ICE during gimplify_init_constructor)\n\n2009-05-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR tree-optimization/40026\n\t* gimplify.c (gimplify_init_constructor): Change initial conditional\n\tto assertion.  Rewrite TREE_OPERAND (*expr_p, 1) after\n\toptimize_compound_literals_in_ctor.\n\ntestsuite:\n2009-05-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* gcc.c-torture/compile/pr40026.c: New testcase.\n\nFrom-SVN: r147386", "tree": {"sha": "87afb737192a4a6ae82fa278b87e9e7c4bd0c473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87afb737192a4a6ae82fa278b87e9e7c4bd0c473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c260f01fccf711d0915f7faa4c6a0f360cda2274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c260f01fccf711d0915f7faa4c6a0f360cda2274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c260f01fccf711d0915f7faa4c6a0f360cda2274"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "d50fee47db9a1dfbafa288e8e562a04667e2f36c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4", "patch": "@@ -1,3 +1,10 @@\n+2009-05-11  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR tree-optimization/40026\n+\t* gimplify.c (gimplify_init_constructor): Change initial conditional\n+\tto assertion.  Rewrite TREE_OPERAND (*expr_p, 1) after\n+\toptimize_compound_literals_in_ctor.\n+\n 2009-05-11  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/m68k/m68k-devices.def (52274, 52277, 5301x, 5225x, 51xx):"}, {"sha": "bff7cdd4b6fe830c6264a9d50a1de09f96c9081e", "filename": "gcc/gimplify.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4", "patch": "@@ -3643,14 +3643,11 @@ static enum gimplify_status\n gimplify_init_constructor (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t\t\t   bool want_value, bool notify_temp_creation)\n {\n-  tree object, new_ctor;\n-  tree ctor = TREE_OPERAND (*expr_p, 1);\n-  tree type = TREE_TYPE (ctor);\n+  tree object, ctor, type;\n   enum gimplify_status ret;\n   VEC(constructor_elt,gc) *elts;\n \n-  if (TREE_CODE (ctor) != CONSTRUCTOR)\n-    return GS_UNHANDLED;\n+  gcc_assert (TREE_CODE (TREE_OPERAND (*expr_p, 1)) == CONSTRUCTOR);\n \n   if (!notify_temp_creation)\n     {\n@@ -3661,8 +3658,10 @@ gimplify_init_constructor (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n     }\n \n   object = TREE_OPERAND (*expr_p, 0);\n-  new_ctor = optimize_compound_literals_in_ctor (ctor);\n-  elts = CONSTRUCTOR_ELTS (new_ctor);\n+  ctor = TREE_OPERAND (*expr_p, 1) =\n+    optimize_compound_literals_in_ctor (TREE_OPERAND (*expr_p, 1));\n+  type = TREE_TYPE (ctor);\n+  elts = CONSTRUCTOR_ELTS (ctor);\n   ret = GS_ALL_DONE;\n \n   switch (TREE_CODE (type))"}, {"sha": "bb823365745a2af0f7fb5108911ae853f1a1083c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4", "patch": "@@ -1,3 +1,7 @@\n+2009-05-11  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* gcc.c-torture/compile/pr40026.c: New testcase.\n+\n 2009-05-11  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40089"}, {"sha": "0d08f0dc8ac8e69d2c3b83e90f7058e89a04eefb", "filename": "gcc/testsuite/gcc.c-torture/compile/pr40026.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40026.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40026.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40026.c?ref=f5a1f0d01fa875ef6f2d895f990f4a2064b9d7f4", "patch": "@@ -0,0 +1,15 @@\n+typedef struct {\n+    unsigned long bits;\n+} S;\n+struct T {\n+    S span;\n+    int flags;\n+};\n+\n+struct T f(int x)\n+{\n+  return (struct T) {\n+      .span = (S) { 0UL },\n+      .flags = (x ? 256 : 0),\n+  };\n+}"}]}