{"sha": "b0b495563618f288188f2f3fb0de390d8d19166f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBiNDk1NTYzNjE4ZjI4ODE4OGYyZjNmYjBkZTM5MGQ4ZDE5MTY2Zg==", "commit": {"author": {"name": "Greta Yorsh", "email": "greta.yorsh@arm.com", "date": "2013-04-05T15:48:19Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2013-04-05T15:48:19Z"}, "message": "arm.md (arm_subdi3): Convert define_insn into define_insn_and_split.\n\n2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n\n\t* config/arm/arm.md (arm_subdi3): Convert define_insn into\n\tdefine_insn_and_split.\n\t(subdi_di_zesidi,subdi_di_sesidi): Likewise.\n\t(subdi_zesidi_di,subdi_sesidi_di,subdi_zesidi_zesidi): Likewise.\n\nFrom-SVN: r197521", "tree": {"sha": "84088356f4114b5e3843ba9f83fad6bf7aebd5c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84088356f4114b5e3843ba9f83fad6bf7aebd5c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0b495563618f288188f2f3fb0de390d8d19166f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0b495563618f288188f2f3fb0de390d8d19166f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0b495563618f288188f2f3fb0de390d8d19166f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0b495563618f288188f2f3fb0de390d8d19166f/comments", "author": null, "committer": null, "parents": [{"sha": "d633dd8428badb7271d0122e5aeab318673d913b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d633dd8428badb7271d0122e5aeab318673d913b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d633dd8428badb7271d0122e5aeab318673d913b"}], "stats": {"total": 113, "additions": 101, "deletions": 12}, "files": [{"sha": "84d00307bdff4917189cdbb8de257f201fad8cb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0b495563618f288188f2f3fb0de390d8d19166f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0b495563618f288188f2f3fb0de390d8d19166f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0b495563618f288188f2f3fb0de390d8d19166f", "patch": "@@ -1,3 +1,10 @@\n+2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n+\n+\t* config/arm/arm.md (arm_subdi3): Convert define_insn into\n+\tdefine_insn_and_split.\n+\t(subdi_di_zesidi,subdi_di_sesidi): Likewise.\n+\t(subdi_zesidi_di,subdi_sesidi_di,subdi_zesidi_zesidi): Likewise.\n+\n 2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n \t* config/arm/arm.md (subsi3_carryin): New pattern."}, {"sha": "1ef0d32ff5834ba24f7f5ee8028bafa432ab5fb2", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 94, "deletions": 12, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0b495563618f288188f2f3fb0de390d8d19166f/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0b495563618f288188f2f3fb0de390d8d19166f/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=b0b495563618f288188f2f3fb0de390d8d19166f", "patch": "@@ -1147,13 +1147,27 @@\n   \"\n )\n \n-(define_insn \"*arm_subdi3\"\n+(define_insn_and_split \"*arm_subdi3\"\n   [(set (match_operand:DI           0 \"s_register_operand\" \"=&r,&r,&r\")\n \t(minus:DI (match_operand:DI 1 \"s_register_operand\" \"0,r,0\")\n \t\t  (match_operand:DI 2 \"s_register_operand\" \"r,0,0\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT && !TARGET_NEON\"\n-  \"subs\\\\t%Q0, %Q1, %Q2\\;sbc\\\\t%R0, %R1, %R2\"\n+  \"#\"  ; \"subs\\\\t%Q0, %Q1, %Q2\\;sbc\\\\t%R0, %R1, %R2\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (reg:CC CC_REGNUM)\n+\t\t   (compare:CC (match_dup 1) (match_dup 2)))\n+\t      (set (match_dup 0) (minus:SI (match_dup 1) (match_dup 2)))])\n+   (set (match_dup 3) (minus:SI (minus:SI (match_dup 4) (match_dup 5))\n+\t\t\t       (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  {\n+    operands[3] = gen_highpart (SImode, operands[0]);\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+    operands[4] = gen_highpart (SImode, operands[1]);\n+    operands[1] = gen_lowpart (SImode, operands[1]);\n+    operands[5] = gen_highpart (SImode, operands[2]);\n+    operands[2] = gen_lowpart (SImode, operands[2]);\n+   }\n   [(set_attr \"conds\" \"clob\")\n    (set_attr \"length\" \"8\")]\n )\n@@ -1168,63 +1182,131 @@\n   [(set_attr \"length\" \"4\")]\n )\n \n-(define_insn \"*subdi_di_zesidi\"\n+(define_insn_and_split \"*subdi_di_zesidi\"\n   [(set (match_operand:DI           0 \"s_register_operand\" \"=&r,&r\")\n \t(minus:DI (match_operand:DI 1 \"s_register_operand\"  \"0,r\")\n \t\t  (zero_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT\"\n-  \"subs\\\\t%Q0, %Q1, %2\\;sbc\\\\t%R0, %R1, #0\"\n+  \"#\"   ; \"subs\\\\t%Q0, %Q1, %2\\;sbc\\\\t%R0, %R1, #0\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (reg:CC CC_REGNUM)\n+\t\t   (compare:CC (match_dup 1) (match_dup 2)))\n+\t      (set (match_dup 0) (minus:SI (match_dup 1) (match_dup 2)))])\n+   (set (match_dup 3) (minus:SI (plus:SI (match_dup 4) (match_dup 5))\n+                                (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  {\n+    operands[3] = gen_highpart (SImode, operands[0]);\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+    operands[4] = gen_highpart (SImode, operands[1]);\n+    operands[1] = gen_lowpart (SImode, operands[1]);\n+    operands[5] = GEN_INT (~0);\n+   }\n   [(set_attr \"conds\" \"clob\")\n    (set_attr \"length\" \"8\")]\n )\n \n-(define_insn \"*subdi_di_sesidi\"\n+(define_insn_and_split \"*subdi_di_sesidi\"\n   [(set (match_operand:DI            0 \"s_register_operand\" \"=&r,&r\")\n \t(minus:DI (match_operand:DI  1 \"s_register_operand\"  \"0,r\")\n \t\t  (sign_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT\"\n-  \"subs\\\\t%Q0, %Q1, %2\\;sbc\\\\t%R0, %R1, %2, asr #31\"\n+  \"#\"   ; \"subs\\\\t%Q0, %Q1, %2\\;sbc\\\\t%R0, %R1, %2, asr #31\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (reg:CC CC_REGNUM)\n+\t\t   (compare:CC (match_dup 1) (match_dup 2)))\n+\t      (set (match_dup 0) (minus:SI (match_dup 1) (match_dup 2)))])\n+   (set (match_dup 3) (minus:SI (minus:SI (match_dup 4)\n+                                         (ashiftrt:SI (match_dup 2)\n+                                                      (const_int 31)))\n+                                (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  {\n+    operands[3] = gen_highpart (SImode, operands[0]);\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+    operands[4] = gen_highpart (SImode, operands[1]);\n+    operands[1] = gen_lowpart (SImode, operands[1]);\n+  }\n   [(set_attr \"conds\" \"clob\")\n    (set_attr \"length\" \"8\")]\n )\n \n-(define_insn \"*subdi_zesidi_di\"\n+(define_insn_and_split \"*subdi_zesidi_di\"\n   [(set (match_operand:DI            0 \"s_register_operand\" \"=&r,&r\")\n \t(minus:DI (zero_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r,r\"))\n \t\t  (match_operand:DI  1 \"s_register_operand\" \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n-  \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, #0\"\n+  \"#\"   ; \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, #0\"\n+        ; is equivalent to:\n+        ; \"subs\\\\t%Q0, %2, %Q1\\;rsc\\\\t%R0, %R1, #0\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (reg:CC CC_REGNUM)\n+\t\t   (compare:CC (match_dup 2) (match_dup 1)))\n+\t      (set (match_dup 0) (minus:SI (match_dup 2) (match_dup 1)))])\n+   (set (match_dup 3) (minus:SI (minus:SI (const_int 0) (match_dup 4))\n+\t\t\t       (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  {\n+    operands[3] = gen_highpart (SImode, operands[0]);\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+    operands[4] = gen_highpart (SImode, operands[1]);\n+    operands[1] = gen_lowpart (SImode, operands[1]);\n+  }\n   [(set_attr \"conds\" \"clob\")\n    (set_attr \"length\" \"8\")]\n )\n \n-(define_insn \"*subdi_sesidi_di\"\n+(define_insn_and_split \"*subdi_sesidi_di\"\n   [(set (match_operand:DI            0 \"s_register_operand\" \"=&r,&r\")\n \t(minus:DI (sign_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"   \"r,r\"))\n \t\t  (match_operand:DI  1 \"s_register_operand\"  \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n-  \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, %2, asr #31\"\n+  \"#\"   ; \"rsbs\\\\t%Q0, %Q1, %2\\;rsc\\\\t%R0, %R1, %2, asr #31\"\n+        ; is equivalent to:\n+        ; \"subs\\\\t%Q0, %2, %Q1\\;rsc\\\\t%R0, %R1, %2, asr #31\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (reg:CC CC_REGNUM)\n+\t\t   (compare:CC (match_dup 2) (match_dup 1)))\n+\t      (set (match_dup 0) (minus:SI (match_dup 2) (match_dup 1)))])\n+   (set (match_dup 3) (minus:SI (minus:SI\n+                                (ashiftrt:SI (match_dup 2)\n+                                             (const_int 31))\n+                                (match_dup 4))\n+\t\t\t       (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  {\n+    operands[3] = gen_highpart (SImode, operands[0]);\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+    operands[4] = gen_highpart (SImode, operands[1]);\n+    operands[1] = gen_lowpart (SImode, operands[1]);\n+  }\n   [(set_attr \"conds\" \"clob\")\n    (set_attr \"length\" \"8\")]\n )\n \n-(define_insn \"*subdi_zesidi_zesidi\"\n+(define_insn_and_split \"*subdi_zesidi_zesidi\"\n   [(set (match_operand:DI            0 \"s_register_operand\" \"=r\")\n \t(minus:DI (zero_extend:DI\n \t\t   (match_operand:SI 1 \"s_register_operand\"  \"r\"))\n \t\t  (zero_extend:DI\n \t\t   (match_operand:SI 2 \"s_register_operand\"  \"r\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_32BIT\"\n-  \"subs\\\\t%Q0, %1, %2\\;sbc\\\\t%R0, %1, %1\"\n+  \"#\"   ; \"subs\\\\t%Q0, %1, %2\\;sbc\\\\t%R0, %1, %1\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (reg:CC CC_REGNUM)\n+\t\t   (compare:CC (match_dup 1) (match_dup 2)))\n+\t      (set (match_dup 0) (minus:SI (match_dup 1) (match_dup 2)))])\n+   (set (match_dup 3) (minus:SI (minus:SI (match_dup 1) (match_dup 1))\n+\t\t\t       (ltu:SI (reg:CC_C CC_REGNUM) (const_int 0))))]\n+  {\n+       operands[3] = gen_highpart (SImode, operands[0]);\n+       operands[0] = gen_lowpart (SImode, operands[0]);\n+  }\n   [(set_attr \"conds\" \"clob\")\n    (set_attr \"length\" \"8\")]\n )"}]}