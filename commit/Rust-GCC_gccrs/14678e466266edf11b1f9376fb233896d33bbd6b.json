{"sha": "14678e466266edf11b1f9376fb233896d33bbd6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ2NzhlNDY2MjY2ZWRmMTFiMWY5Mzc2ZmIyMzM4OTZkMzNiYmQ2Yg==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2007-11-10T22:20:15Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2007-11-10T22:20:15Z"}, "message": "a-tasatt.adb: Revert previous change for this file as it will generate an error when...\n\n    gcc/ada/\n\t* a-tasatt.adb: Revert previous change for this file as it will\n\tgenerate an error when this package is instantiated from a\n\tlocal context.\n\nFrom-SVN: r130076", "tree": {"sha": "3a85db7a50b5d2fd33504b0d1ad6b5db42ec7210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a85db7a50b5d2fd33504b0d1ad6b5db42ec7210"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14678e466266edf11b1f9376fb233896d33bbd6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14678e466266edf11b1f9376fb233896d33bbd6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14678e466266edf11b1f9376fb233896d33bbd6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14678e466266edf11b1f9376fb233896d33bbd6b/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9113fd7b186bc24978b0e98041de4649f677a99d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9113fd7b186bc24978b0e98041de4649f677a99d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9113fd7b186bc24978b0e98041de4649f677a99d"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "1ea33a6c0a292e69024b92fb7a2a9de4b0a1d207", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14678e466266edf11b1f9376fb233896d33bbd6b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14678e466266edf11b1f9376fb233896d33bbd6b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=14678e466266edf11b1f9376fb233896d33bbd6b", "patch": "@@ -1,3 +1,9 @@\n+2007-11-10  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\t* a-tasatt.adb: Revert previous change for this file as it will\n+\tgenerate an error when this package is instantiated from a\n+\tlocal context.\n+\n 2007-11-07  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* a-tasatt.adb: Type Wrapper should be declared in comment instead"}, {"sha": "97e024c0657496f2400bd7e27bc5395f862098e7", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14678e466266edf11b1f9376fb233896d33bbd6b/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14678e466266edf11b1f9376fb233896d33bbd6b/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=14678e466266edf11b1f9376fb233896d33bbd6b", "patch": "@@ -415,7 +415,7 @@ package body Ada.Task_Attributes is\n             POP.Lock_RTS;\n \n             while P /= null loop\n-               if P.Instance = Access_Instance'(Local'Access) then\n+               if P.Instance = Access_Instance'(Local'Unchecked_Access) then\n                   POP.Unlock_RTS;\n                   Undefer_Abort (Self_Id);\n                   return To_Access_Wrapper (P.Wrapper).Value'Access;\n@@ -429,10 +429,11 @@ package body Ada.Task_Attributes is\n             --  holding any other lock.\n \n             POP.Unlock_RTS;\n-            W := new Wrapper'((null, Local'Access, null), Initial_Value);\n+            W := new Wrapper'\n+                  ((null, Local'Unchecked_Access, null), Initial_Value);\n             POP.Lock_RTS;\n \n-            P := W.Dummy_Node'Access;\n+            P := W.Dummy_Node'Unchecked_Access;\n             P.Wrapper := To_Access_Dummy_Wrapper (W);\n             P.Next := To_Access_Node (TT.Indirect_Attributes);\n             TT.Indirect_Attributes := To_Access_Address (P);\n@@ -493,7 +494,7 @@ package body Ada.Task_Attributes is\n             Q := To_Access_Node (TT.Indirect_Attributes);\n \n             while Q /= null loop\n-               if Q.Instance = Access_Instance'(Local'Access) then\n+               if Q.Instance = Access_Instance'(Local'Unchecked_Access) then\n                   if P = null then\n                      TT.Indirect_Attributes := To_Access_Address (Q.Next);\n                   else\n@@ -580,7 +581,7 @@ package body Ada.Task_Attributes is\n \n          while P /= null loop\n \n-            if P.Instance = Access_Instance'(Local'Access) then\n+            if P.Instance = Access_Instance'(Local'Unchecked_Access) then\n                To_Access_Wrapper (P.Wrapper).Value := Val;\n                POP.Unlock_RTS;\n                Undefer_Abort (Self_Id);\n@@ -594,9 +595,9 @@ package body Ada.Task_Attributes is\n          --  from using new (i.e the Global_Lock) while holding any other lock.\n \n          POP.Unlock_RTS;\n-         W := new Wrapper'((null, Local'Access, null), Val);\n+         W := new Wrapper'((null, Local'Unchecked_Access, null), Val);\n          POP.Lock_RTS;\n-         P := W.Dummy_Node'Access;\n+         P := W.Dummy_Node'Unchecked_Access;\n          P.Wrapper := To_Access_Dummy_Wrapper (W);\n          P.Next := To_Access_Node (TT.Indirect_Attributes);\n          TT.Indirect_Attributes := To_Access_Address (P);\n@@ -668,7 +669,7 @@ package body Ada.Task_Attributes is\n          P := To_Access_Node (TT.Indirect_Attributes);\n \n          while P /= null loop\n-            if P.Instance = Access_Instance'(Local'Access) then\n+            if P.Instance = Access_Instance'(Local'Unchecked_Access) then\n                Result := To_Access_Wrapper (P.Wrapper).Value;\n                POP.Unlock_RTS;\n                Undefer_Abort (Self_Id);\n@@ -723,7 +724,8 @@ begin\n       --  Add this instantiation to the list of all instantiations\n \n       Local.Next := System.Tasking.Task_Attributes.All_Attributes;\n-      System.Tasking.Task_Attributes.All_Attributes := Local'Access;\n+      System.Tasking.Task_Attributes.All_Attributes :=\n+        Local'Unchecked_Access;\n \n       --  Try to find space for the attribute in the TCB\n "}]}