{"sha": "8c6cb782a355e540036b38f8124a1870612c4950", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM2Y2I3ODJhMzU1ZTU0MDAzNmIzOGY4MTI0YTE4NzA2MTJjNDk1MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-01-27T20:11:51Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-01-27T20:11:51Z"}, "message": "re PR fortran/52022 (Wrong-code with procedures passed as actual argument)\n\n2012-01-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52022\n        * trans-expr.c (gfc_conv_procedure_call): Fix passing\n        of functions, which return allocatables.\n\n2012-01-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52022\n        * gfortran.dg/dummy_procedure_7.f90: New.\n\nFrom-SVN: r183643", "tree": {"sha": "552e858d37f35a62753f9f3b345244a4793999ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552e858d37f35a62753f9f3b345244a4793999ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c6cb782a355e540036b38f8124a1870612c4950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6cb782a355e540036b38f8124a1870612c4950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6cb782a355e540036b38f8124a1870612c4950", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6cb782a355e540036b38f8124a1870612c4950/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bea3da64d61c31335b9bf700aeb836dd93558793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bea3da64d61c31335b9bf700aeb836dd93558793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bea3da64d61c31335b9bf700aeb836dd93558793"}], "stats": {"total": 79, "additions": 78, "deletions": 1}, "files": [{"sha": "b1e9402b604a10fc6d3da5c8e367f9fc7769ae97", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6cb782a355e540036b38f8124a1870612c4950/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6cb782a355e540036b38f8124a1870612c4950/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8c6cb782a355e540036b38f8124a1870612c4950", "patch": "@@ -1,3 +1,9 @@\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52022\n+\t* trans-expr.c (gfc_conv_procedure_call): Fix passing\n+\tof functions, which return allocatables.\n+\n 2012-01-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52016"}, {"sha": "7543149e32c6c01347231f116ab21e52565935e1", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6cb782a355e540036b38f8124a1870612c4950/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6cb782a355e540036b38f8124a1870612c4950/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=8c6cb782a355e540036b38f8124a1870612c4950", "patch": "@@ -3662,7 +3662,8 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t\t\t  || (fsym->attr.proc_pointer\n \t\t\t      && e->expr_type == EXPR_VARIABLE\n \t\t\t      && gfc_is_proc_ptr_comp (e, NULL))\n-\t\t\t  || fsym->attr.allocatable))\n+\t\t\t  || (fsym->attr.allocatable\n+\t\t\t      && fsym->attr.flavor != FL_PROCEDURE)))\n \t\t    {\n \t\t      /* Scalar pointer dummy args require an extra level of\n \t\t\t indirection. The null pointer already contains"}, {"sha": "7ebce8dd4dedcadca84a2a54926321c2fc749e97", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6cb782a355e540036b38f8124a1870612c4950/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6cb782a355e540036b38f8124a1870612c4950/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c6cb782a355e540036b38f8124a1870612c4950", "patch": "@@ -1,3 +1,8 @@\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52022\n+\t* gfortran.dg/dummy_procedure_7.f90: New.\n+\n 2012-01-27  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* g++.dg/cpp0x/constexpr-rom.C: Don't add -G0 on *-*-darwin*"}, {"sha": "32cd65ae8b66637bcf7b985448080e810f303a3e", "filename": "gcc/testsuite/gfortran.dg/dummy_procedure_7.f90", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6cb782a355e540036b38f8124a1870612c4950/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6cb782a355e540036b38f8124a1870612c4950/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_7.f90?ref=8c6cb782a355e540036b38f8124a1870612c4950", "patch": "@@ -0,0 +1,65 @@\n+! { dg-do run }\n+!\n+! PR fortran/52022\n+!\n+\n+module check\n+  integer, save :: icheck = 0\n+end module check\n+\n+module t\n+implicit none\n+      contains\n+subroutine  sol(cost)\n+   use check\n+   interface \n+        function cost(p) result(y) \n+                double precision,dimension(:) :: p\n+                double precision,dimension(:),allocatable :: y\n+        end function cost\n+   end interface\n+\n+   if (any (cost([1d0,2d0]) /= [2.d0, 4.d0])) call abort ()\n+   icheck = icheck + 1\n+end subroutine\n+\n+end module t\n+\n+module tt\n+   procedure(cost1),pointer :: pcost\n+contains\n+  subroutine init()\n+        pcost=>cost1\n+  end subroutine\n+\n+  function cost1(x) result(y)\n+        double precision,dimension(:) :: x\n+        double precision,dimension(:),allocatable :: y\n+        allocate(y(2))\n+        y=2d0*x\n+  end function cost1\n+\n+\n+\n+  function cost(x) result(y)\n+        double precision,dimension(:) :: x\n+        double precision,dimension(:),allocatable :: y\n+        allocate(y(2))\n+        y=pcost(x)\n+  end function cost\n+end module\n+\n+program test\n+        use tt\n+        use t\n+        use check\n+        implicit none\n+\n+        call init()\n+        if (any (cost([3.d0,7.d0]) /= [6.d0, 14.d0])) call abort ()\n+        if (icheck /= 0) call abort ()\n+        call sol(cost)\n+        if (icheck /= 1) call abort ()\n+end program test\n+\n+! { dg-final { cleanup-modules \"t tt check\" } }"}]}