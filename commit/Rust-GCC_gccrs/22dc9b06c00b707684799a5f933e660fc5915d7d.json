{"sha": "22dc9b06c00b707684799a5f933e660fc5915d7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJkYzliMDZjMDBiNzA3Njg0Nzk5YTVmOTMzZTY2MGZjNTkxNWQ3ZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-12-30T17:25:49Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-12-30T17:25:49Z"}, "message": "thunk2.C: Remove traces of dead ports.\n\n\t* g++.old-deja/g++.jason/thunk2.C: Remove traces of dead\n\tports.\n\t* g++.old-deja/g++.jason/thunk3.C: Likewise.\n\t* g++.old-deja/g++.law/profile1.C: Likewise.\n\t* gcc.c-torture/compile/981006-1.c: Likewise.\n\t* gcc.c-torture/execute/loop-2e.x: Likewise.\n\t* gcc.c-torture/execute/loop-2f.x: Remove.\n\t* gcc.c-torture/execute/loop-2g.x: Likewise.\n\t* gcc.c-torture/execute/strct-varg-1.x: Likewise.\n\t* gcc.dg/20020312-2.c: Remove traces of dead ports.\n\nFrom-SVN: r75240", "tree": {"sha": "25098ce941af04e3c59f9af652b5b6503d6d9fd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25098ce941af04e3c59f9af652b5b6503d6d9fd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22dc9b06c00b707684799a5f933e660fc5915d7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22dc9b06c00b707684799a5f933e660fc5915d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22dc9b06c00b707684799a5f933e660fc5915d7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22dc9b06c00b707684799a5f933e660fc5915d7d/comments", "author": null, "committer": null, "parents": [{"sha": "8bc6369b8b7ea630e70be3c6d1524090bbe2453f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc6369b8b7ea630e70be3c6d1524090bbe2453f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc6369b8b7ea630e70be3c6d1524090bbe2453f"}], "stats": {"total": 59, "additions": 17, "deletions": 42}, "files": [{"sha": "4bf92b6f2f6e0e386da07c177b2ac2ecd3d3fc42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22dc9b06c00b707684799a5f933e660fc5915d7d", "patch": "@@ -1,3 +1,16 @@\n+2003-12-30  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* g++.old-deja/g++.jason/thunk2.C: Remove traces of dead\n+\tports.\n+\t* g++.old-deja/g++.jason/thunk3.C: Likewise.\n+\t* g++.old-deja/g++.law/profile1.C: Likewise.\n+\t* gcc.c-torture/compile/981006-1.c: Likewise.\n+\t* gcc.c-torture/execute/loop-2e.x: Likewise.\n+\t* gcc.c-torture/execute/loop-2f.x: Remove.\n+\t* gcc.c-torture/execute/loop-2g.x: Likewise.\n+\t* gcc.c-torture/execute/strct-varg-1.x: Likewise.\n+\t* gcc.dg/20020312-2.c: Remove traces of dead ports.\n+\n 2003-12-30  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/13507"}, {"sha": "01a2ec696db2697b184d42cbde74e0d657582834", "filename": "gcc/testsuite/g++.old-deja/g++.jason/thunk2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk2.C?ref=22dc9b06c00b707684799a5f933e660fc5915d7d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do run { xfail m68k-motorola-sysv m88k-motorola-sysv3 } }\n+// { dg-do run }\n // { dg-options \"-fPIC\" }\n // Test that non-variadic function calls using thunks and PIC work right.\n "}, {"sha": "8b8104969a3445dc088163cc56cc65465ce83312", "filename": "gcc/testsuite/g++.old-deja/g++.jason/thunk3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fthunk3.C?ref=22dc9b06c00b707684799a5f933e660fc5915d7d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do run { xfail mips*-*-* rs6000-*-* powerpc-*-eabi m68k-*-coff m68k-motorola-sysv m88k-motorola-sysv3 mn10300-*-* mn10200-*-* v850-*-* sh-*-* sh64-*-* h8*-*-* xtensa-*-* } }\n+// { dg-do run { xfail mips*-*-* rs6000-*-* powerpc-*-eabi m68k-*-coff mn10300-*-* v850-*-* sh-*-* sh64-*-* h8*-*-* xtensa-*-* } }\n // Test that variadic function calls using thunks work right.\n // Note that this will break on any target that uses the generic thunk\n //  support, because it doesn't support variadic functions."}, {"sha": "9ca4a91546928f60b0d1928a1b8997ffffdea545", "filename": "gcc/testsuite/g++.old-deja/g++.law/profile1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fprofile1.C?ref=22dc9b06c00b707684799a5f933e660fc5915d7d", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do run { xfail m68k-motorola-sysv m88k-motorola-sysv3 mips*-*-* i[3456]86-*-sco3.2v5* } }\n+// { dg-do run { xfail mips*-*-* i[3456]86-*-sco3.2v5* } }\n // { dg-require-profiling \"\" }\n // { dg-options \"-pg\" }\n // { dg-options \"-pg -static\" { target hppa*-*-hpux* } }"}, {"sha": "718fa881af5e5bd775173f395448bf55ddc047c0", "filename": "gcc/testsuite/gcc.c-torture/compile/981006-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.c?ref=22dc9b06c00b707684799a5f933e660fc5915d7d", "patch": "@@ -6,7 +6,7 @@\n /* { dg-do assemble } */\n /* For MIPS at least, pic is needed to trigger the problem. */\n /* { dg-options \"-w -Wuninitialized -Werror -fpic\" } */\n-/* { dg-options \"-w -Wuninitialized -Werror\" { target rs6000-*-aix* powerpc*-*-aix* arm*-*-* xscale*-*-* strongarm*-*-* fr30-*-* sh-*-hms sh-*-coff h8300*-*-* mn10200*-*-* cris-*-elf* cris-*-aout* mmix-*-* } } */\n+/* { dg-options \"-w -Wuninitialized -Werror\" { target rs6000-*-aix* powerpc*-*-aix* arm*-*-* xscale*-*-* strongarm*-*-* fr30-*-* sh-*-hms sh-*-coff h8300*-*-* cris-*-elf* cris-*-aout* mmix-*-* } } */\n \n int foo (int a, int b)\n {"}, {"sha": "9836850d8b2c1986bf452256ea8a5d228f675987", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2e.x", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2e.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2e.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2e.x?ref=22dc9b06c00b707684799a5f933e660fc5915d7d", "patch": "@@ -1,11 +1,4 @@\n-# This doesn't work on m68k-motorola-sysv\n-# It also doesn't work on m88k-motorola-sysv3\n-\n global target_triplet\n-if { [istarget \"m68k-motorola-sysv\"] || [istarget \"m88k-motorola-sysv3\"] } {\n-      set torture_compile_xfail \"$target_triplet\"\n-}\n-\n if { [istarget \"i?86-*\"] } {\n     set torture_eval_before_execute {\n \tglobal compiler_conditional_xfail_data"}, {"sha": "e68b8fbb8d293d0d05aa46ad51a923ad17c1cbf0", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2f.x", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6369b8b7ea630e70be3c6d1524090bbe2453f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6369b8b7ea630e70be3c6d1524090bbe2453f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x?ref=8bc6369b8b7ea630e70be3c6d1524090bbe2453f", "patch": "@@ -1,9 +0,0 @@\n-# This doesn't work on m68k-motorola-sysv\n-# It also doesn't work on m88k-motorola-sysv3\n-\n-global target_triplet\n-if { [istarget \"m68k-motorola-sysv\"] || [istarget \"m88k-motorola-sysv3\"] } {\n-      set torture_compile_xfail \"$target_triplet\"\n-}\n-\n-return 0"}, {"sha": "e68b8fbb8d293d0d05aa46ad51a923ad17c1cbf0", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2g.x", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6369b8b7ea630e70be3c6d1524090bbe2453f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6369b8b7ea630e70be3c6d1524090bbe2453f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2g.x?ref=8bc6369b8b7ea630e70be3c6d1524090bbe2453f", "patch": "@@ -1,9 +0,0 @@\n-# This doesn't work on m68k-motorola-sysv\n-# It also doesn't work on m88k-motorola-sysv3\n-\n-global target_triplet\n-if { [istarget \"m68k-motorola-sysv\"] || [istarget \"m88k-motorola-sysv3\"] } {\n-      set torture_compile_xfail \"$target_triplet\"\n-}\n-\n-return 0"}, {"sha": "850736e82dc010012c0ae6cfe43f4a6613666535", "filename": "gcc/testsuite/gcc.c-torture/execute/strct-varg-1.x", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6369b8b7ea630e70be3c6d1524090bbe2453f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrct-varg-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6369b8b7ea630e70be3c6d1524090bbe2453f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrct-varg-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstrct-varg-1.x?ref=8bc6369b8b7ea630e70be3c6d1524090bbe2453f", "patch": "@@ -1,7 +0,0 @@\n-# This doesn't work on mn10200\n-\n-if { [istarget \"mn10200*-*-*\"] } {\n-\tset torture_execute_xfail \"mn10200*-*-*\"\n-}\n-\n-return 0"}, {"sha": "c6b9d8e26fa08b3f6d6c37b6b1b1c625f0351ab3", "filename": "gcc/testsuite/gcc.dg/20020312-2.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22dc9b06c00b707684799a5f933e660fc5915d7d/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c?ref=22dc9b06c00b707684799a5f933e660fc5915d7d", "patch": "@@ -40,8 +40,6 @@\n /* No pic register.  */\n #elif defined(__m68k__)\n # define PIC_REG  \"a5\"\n-#elif defined(__m88k__)\n-# define PIC_REG  \"25\"\n #elif defined(__mc68hc1x__)\n /* No pic register.  */\n #elif defined(__mcore__)\n@@ -50,8 +48,6 @@\n /* PIC register is $28, but is used even without -fpic.  */\n #elif defined(__MMIX__)\n /* No pic register.  */\n-#elif defined(__mn10200__)\n-/* No pic register.  */\n #elif defined(__mn10300__)\n /* No pic register.  */\n #elif #cpu(ns32k)\n@@ -66,8 +62,6 @@\n # else\n #  define PIC_REG  \"30\"\n # endif\n-#elif defined(__ibm032__) /* aka romp */\n-/* No pic register.  */\n #elif defined(__s390__)\n # define PIC_REG  \"12\"\n #elif defined(__sparc__)"}]}