{"sha": "0786ca878437acd1ec713b86b94b02526ea5dcc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc4NmNhODc4NDM3YWNkMWVjNzEzYjg2Yjk0YjAyNTI2ZWE1ZGNjNA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-01-12T15:33:59Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-01-12T15:33:59Z"}, "message": "* simplify-rtx.c (simplify_plus_minus): Always generate canonical form.\n\nFrom-SVN: r75724", "tree": {"sha": "0feb8cbfa34384aaa4766383741d221390c48855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0feb8cbfa34384aaa4766383741d221390c48855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0786ca878437acd1ec713b86b94b02526ea5dcc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0786ca878437acd1ec713b86b94b02526ea5dcc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0786ca878437acd1ec713b86b94b02526ea5dcc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0786ca878437acd1ec713b86b94b02526ea5dcc4/comments", "author": null, "committer": null, "parents": [{"sha": "543ca912c85986884ba869742ec78488950742ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543ca912c85986884ba869742ec78488950742ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/543ca912c85986884ba869742ec78488950742ea"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "724ede3a50ba75d9f45e665be025005522ff6a13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0786ca878437acd1ec713b86b94b02526ea5dcc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0786ca878437acd1ec713b86b94b02526ea5dcc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0786ca878437acd1ec713b86b94b02526ea5dcc4", "patch": "@@ -1,3 +1,7 @@\n+2004-01-09  Paul Brook  <paul@codesourcery.com>\n+\n+\t* simplify-rtx.c (simplify_plus_minus): Always generate canonical form.\n+\n 2004-01-09  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \tPR target/13585"}, {"sha": "615e09f8452d9ac21205608f13101469344b408b", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0786ca878437acd1ec713b86b94b02526ea5dcc4/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0786ca878437acd1ec713b86b94b02526ea5dcc4/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=0786ca878437acd1ec713b86b94b02526ea5dcc4", "patch": "@@ -2250,7 +2250,7 @@ simplify_plus_minus (enum rtx_code code, enum machine_mode mode, rtx op0,\n   struct simplify_plus_minus_op_data ops[8];\n   rtx result, tem;\n   int n_ops = 2, input_ops = 2, input_consts = 0, n_consts;\n-  int first, negate, changed;\n+  int first, changed;\n   int i, j;\n \n   memset (ops, 0, sizeof ops);\n@@ -2460,18 +2460,12 @@ simplify_plus_minus (enum rtx_code code, enum machine_mode mode, rtx op0,\n \t  || (n_ops + n_consts == input_ops && n_consts <= input_consts)))\n     return NULL_RTX;\n \n-  /* Put a non-negated operand first.  If there aren't any, make all\n-     operands positive and negate the whole thing later.  */\n+  /* Put a non-negated operand first, if possible.  */\n \n-  negate = 0;\n   for (i = 0; i < n_ops && ops[i].neg; i++)\n     continue;\n   if (i == n_ops)\n-    {\n-      for (i = 0; i < n_ops; i++)\n-\tops[i].neg = 0;\n-      negate = 1;\n-    }\n+    ops[0].op = gen_rtx_NEG (mode, ops[0].op);\n   else if (i != 0)\n     {\n       tem = ops[0].op;\n@@ -2486,7 +2480,7 @@ simplify_plus_minus (enum rtx_code code, enum machine_mode mode, rtx op0,\n     result = gen_rtx_fmt_ee (ops[i].neg ? MINUS : PLUS,\n \t\t\t     mode, result, ops[i].op);\n \n-  return negate ? gen_rtx_NEG (mode, result) : result;\n+  return result;\n }\n \n /* Like simplify_binary_operation except used for relational operators."}]}