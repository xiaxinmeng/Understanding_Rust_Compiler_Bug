{"sha": "87654f1813a0f582645f72d87f7fb8c78b92ee6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2NTRmMTgxM2EwZjU4MjY0NWY3MmQ4N2Y3ZmI4Yzc4YjkyZWU2YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-14T12:21:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-14T12:21:36Z"}, "message": "re PR rtl-optimization/89679 (wrong code with -Og -frerun-cse-after-loop -fno-tree-fre)\n\n\tPR rtl-optimization/89679\n\t* expmed.c (expand_mult_const): Don't add a REG_EQUAL note if it\n\twould contain a paradoxical SUBREG.\n\n\t* gcc.dg/pr89679.c: New test.\n\nFrom-SVN: r269680", "tree": {"sha": "40dbf553b569f68381f8ca699e138c8daac87caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40dbf553b569f68381f8ca699e138c8daac87caa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87654f1813a0f582645f72d87f7fb8c78b92ee6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87654f1813a0f582645f72d87f7fb8c78b92ee6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87654f1813a0f582645f72d87f7fb8c78b92ee6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87654f1813a0f582645f72d87f7fb8c78b92ee6a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df6d3ac9aa35d4d9cd23bc70e961490c19e2477d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6d3ac9aa35d4d9cd23bc70e961490c19e2477d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df6d3ac9aa35d4d9cd23bc70e961490c19e2477d"}], "stats": {"total": 58, "additions": 51, "deletions": 7}, "files": [{"sha": "fb9a555b59aa7dfc5ba8b54a6211c1110ef3eb0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87654f1813a0f582645f72d87f7fb8c78b92ee6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87654f1813a0f582645f72d87f7fb8c78b92ee6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87654f1813a0f582645f72d87f7fb8c78b92ee6a", "patch": "@@ -1,3 +1,9 @@\n+2019-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/89679\n+\t* expmed.c (expand_mult_const): Don't add a REG_EQUAL note if it\n+\twould contain a paradoxical SUBREG.\n+\n 2019-03-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89710"}, {"sha": "d7f8e9a5d767fa9d607312c73f8e36d10f3e610a", "filename": "gcc/expmed.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87654f1813a0f582645f72d87f7fb8c78b92ee6a/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87654f1813a0f582645f72d87f7fb8c78b92ee6a/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=87654f1813a0f582645f72d87f7fb8c78b92ee6a", "patch": "@@ -3356,13 +3356,20 @@ expand_mult_const (machine_mode mode, rtx op0, HOST_WIDE_INT val,\n \t      tem = gen_lowpart (nmode, op0);\n \t    }\n \n-\t  insn = get_last_insn ();\n-\t  wide_int wval_so_far\n-\t    = wi::uhwi (val_so_far,\n-\t\t\tGET_MODE_PRECISION (as_a <scalar_mode> (nmode)));\n-\t  rtx c = immed_wide_int_const (wval_so_far, nmode);\n-\t  set_dst_reg_note (insn, REG_EQUAL, gen_rtx_MULT (nmode, tem, c),\n-\t\t\t    accum_inner);\n+\t  /* Don't add a REG_EQUAL note if tem is a paradoxical SUBREG.\n+\t     In that case, only the low bits of accum would be guaranteed to\n+\t     be equal to the content of the REG_EQUAL note, the upper bits\n+\t     can be anything.  */\n+\t  if (!paradoxical_subreg_p (tem))\n+\t    {\n+\t      insn = get_last_insn ();\n+\t      wide_int wval_so_far\n+\t\t= wi::uhwi (val_so_far,\n+\t\t\t    GET_MODE_PRECISION (as_a <scalar_mode> (nmode)));\n+\t      rtx c = immed_wide_int_const (wval_so_far, nmode);\n+\t      set_dst_reg_note (insn, REG_EQUAL, gen_rtx_MULT (nmode, tem, c),\n+\t\t\t\taccum_inner);\n+\t    }\n \t}\n     }\n "}, {"sha": "19c319e06918d6f27e16aab405cd0265d5bebab2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87654f1813a0f582645f72d87f7fb8c78b92ee6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87654f1813a0f582645f72d87f7fb8c78b92ee6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87654f1813a0f582645f72d87f7fb8c78b92ee6a", "patch": "@@ -1,3 +1,8 @@\n+2019-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/89679\n+\t* gcc.dg/pr89679.c: New test.\n+\n 2019-03-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89710"}, {"sha": "0d6e2d2c871668775ef7ad610651590d786f1ecb", "filename": "gcc/testsuite/gcc.dg/pr89679.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87654f1813a0f582645f72d87f7fb8c78b92ee6a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89679.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87654f1813a0f582645f72d87f7fb8c78b92ee6a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89679.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89679.c?ref=87654f1813a0f582645f72d87f7fb8c78b92ee6a", "patch": "@@ -0,0 +1,26 @@\n+/* PR rtl-optimization/89679 */\n+/* { dg-do run } */\n+/* { dg-options \"-Og -frerun-cse-after-loop -fno-tree-fre\" } */\n+\n+unsigned short g;\n+\n+void\n+foo (unsigned long long x)\n+{\n+  if (x != 0xffff)\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+#if __SIZEOF_SHORT__ == 2 && __SIZEOF_INT__ == 4 && __CHAR_BIT__ == 8\n+  unsigned short d = 0;\n+  unsigned long long x, c = ~0;\n+  c = c >> d;\n+  __builtin_memset (&d, c, 2);\n+  x = d + g;\n+  foo (x);\n+#endif\n+  return 0;\n+}"}]}