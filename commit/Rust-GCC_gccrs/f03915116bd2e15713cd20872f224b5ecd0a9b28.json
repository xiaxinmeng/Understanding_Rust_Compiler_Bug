{"sha": "f03915116bd2e15713cd20872f224b5ecd0a9b28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzOTE1MTE2YmQyZTE1NzEzY2QyMDg3MmYyMjRiNWVjZDBhOWIyOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-06-26T10:40:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-06-26T10:40:50Z"}, "message": "re PR c++/86291 (OpenMP incorrect for-loop collapsing with iterators and at least 5 nested loops)\n\n\tPR c++/86291\n\t* parser.c (cp_parser_omp_for_loop_init): Change for_block argument\n\ttype from vec<tree, va_gc> * to vec<tree, va_gc> *&.\n\n\t* testsuite/libgomp.c++/pr86291.C: New test.\n\nFrom-SVN: r262137", "tree": {"sha": "edb67767915f25520d780192116df84ee866174e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edb67767915f25520d780192116df84ee866174e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f03915116bd2e15713cd20872f224b5ecd0a9b28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03915116bd2e15713cd20872f224b5ecd0a9b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f03915116bd2e15713cd20872f224b5ecd0a9b28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03915116bd2e15713cd20872f224b5ecd0a9b28/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a73b8e713c99e714c2619b2a536ce878f2f6e7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a73b8e713c99e714c2619b2a536ce878f2f6e7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a73b8e713c99e714c2619b2a536ce878f2f6e7e"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "212306599d923220df249e08df43f413211bb0a0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03915116bd2e15713cd20872f224b5ecd0a9b28/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03915116bd2e15713cd20872f224b5ecd0a9b28/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f03915116bd2e15713cd20872f224b5ecd0a9b28", "patch": "@@ -1,3 +1,9 @@\n+2018-06-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/86291\n+\t* parser.c (cp_parser_omp_for_loop_init): Change for_block argument\n+\ttype from vec<tree, va_gc> * to vec<tree, va_gc> *&.\n+\n 2018-06-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (bad_specifiers): Add const location_t* parameter and"}, {"sha": "a02091e0a5d7b68dae78ad5e74233ee46322ab94", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03915116bd2e15713cd20872f224b5ecd0a9b28/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03915116bd2e15713cd20872f224b5ecd0a9b28/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f03915116bd2e15713cd20872f224b5ecd0a9b28", "patch": "@@ -34917,7 +34917,7 @@ cp_parser_omp_for_incr (cp_parser *parser, tree decl)\n static tree\n cp_parser_omp_for_loop_init (cp_parser *parser,\n \t\t\t     tree &this_pre_body,\n-\t\t\t     vec<tree, va_gc> *for_block,\n+\t\t\t     vec<tree, va_gc> *&for_block,\n \t\t\t     tree &init,\n \t\t\t     tree &orig_init,\n \t\t\t     tree &decl,"}, {"sha": "ef0cdd06422195cfdd8cb8babc4793f177e4cf30", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03915116bd2e15713cd20872f224b5ecd0a9b28/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03915116bd2e15713cd20872f224b5ecd0a9b28/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=f03915116bd2e15713cd20872f224b5ecd0a9b28", "patch": "@@ -1,3 +1,8 @@\n+2018-06-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/86291\n+\t* testsuite/libgomp.c++/pr86291.C: New test.\n+\n 2018-06-24  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* libgomp.texi (Top): Move www.openmp.org to https."}, {"sha": "89c4b2d37cd8b65bcfdab96998bd80bf97ad54f9", "filename": "libgomp/testsuite/libgomp.c++/pr86291.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03915116bd2e15713cd20872f224b5ecd0a9b28/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr86291.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03915116bd2e15713cd20872f224b5ecd0a9b28/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr86291.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr86291.C?ref=f03915116bd2e15713cd20872f224b5ecd0a9b28", "patch": "@@ -0,0 +1,51 @@\n+// PR c++/86291\n+// { dg-do run }\n+// { dg-additional-options \"-std=c++11\" }\n+\n+extern \"C\" void abort ();\n+\n+struct I\n+{\n+  using size_type = __SIZE_TYPE__;\n+  using difference_type = __PTRDIFF_TYPE__;\n+  using value_type = int;\n+  using reference = int &;\n+  using pointer = int *;\n+  static I begin () { return I{}; }\n+  static I end () { I res; res.pos = res.num; return res; }\n+  I &operator++ () { ++pos; return *this; }\n+  reference operator* () const { return val; }\n+  I &operator+= (size_type diff) { pos += diff; return *this; }\n+  friend bool operator< (const I &a, const I &b) { return a.pos < b.pos; }\n+  friend difference_type operator- (const I &a, const I &b) { return a.pos - b.pos; }\n+  size_type pos = 0;\n+  size_type num = 1;\n+  mutable int val = 0;\n+};\n+\n+int c;\n+\n+int\n+main ()\n+{\n+#pragma omp parallel for collapse(10)\n+  for (auto i = I::begin (); i < I::end (); ++i)\n+    for (auto j = I::begin (); j < I::end (); ++j)\n+      for (auto k = I::begin (); k < I::end (); ++k)\n+\tfor (auto l = I::begin (); l < I::end (); ++l)\n+\t  for (auto m = I::begin (); m < I::end (); ++m)\n+\t    for (auto n = I::begin (); n < I::end (); ++n)\n+\t      for (auto o = I::begin (); o < I::end (); ++o)\n+\t\tfor (auto p = I::begin (); p < I::end (); ++p)\n+\t\t  for (auto q = I::begin (); q < I::end (); ++q)\n+\t\t    for (auto r = I::begin (); r < I::end (); ++r)\n+\t\t      {\n+\t\t\tif (*i != 0 || *j != 0 || *k != 0 || *l != 0 || *m != 0\n+\t\t\t    || *n != 0 || *o != 0 || *p != 0 || *q != 0 || *r != 0)\n+\t\t\t  abort ();\n+\t\t\t#pragma omp atomic\n+\t\t\t  c++;\n+\t\t      }\n+  if (c != 1)\n+    abort ();\n+}"}]}