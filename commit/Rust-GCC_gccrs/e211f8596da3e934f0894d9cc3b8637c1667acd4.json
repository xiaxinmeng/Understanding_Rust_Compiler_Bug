{"sha": "e211f8596da3e934f0894d9cc3b8637c1667acd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxMWY4NTk2ZGEzZTkzNGYwODk0ZDljYzNiODYzN2MxNjY3YWNkNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:49:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:49:15Z"}, "message": "(pragma Source_File_Name): add missing documentation for the Index\n argument.\n\nFrom-SVN: r146723", "tree": {"sha": "38755c052d50783fa08603ebe3f244b2b703f3c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38755c052d50783fa08603ebe3f244b2b703f3c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e211f8596da3e934f0894d9cc3b8637c1667acd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e211f8596da3e934f0894d9cc3b8637c1667acd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e211f8596da3e934f0894d9cc3b8637c1667acd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e211f8596da3e934f0894d9cc3b8637c1667acd4/comments", "author": null, "committer": null, "parents": [{"sha": "6db828c3c5271d23d037f55824d9d0a6c07497ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db828c3c5271d23d037f55824d9d0a6c07497ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6db828c3c5271d23d037f55824d9d0a6c07497ab"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "81b6a1140bc4b92bb098faa6b48faa6bd2af8fd8", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e211f8596da3e934f0894d9cc3b8637c1667acd4/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e211f8596da3e934f0894d9cc3b8637c1667acd4/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=e211f8596da3e934f0894d9cc3b8637c1667acd4", "patch": "@@ -4238,11 +4238,13 @@ Syntax:\n @smallexample @c ada\n pragma Source_File_Name (\n   [Unit_Name   =>] unit_NAME,\n-  Spec_File_Name =>  STRING_LITERAL);\n+  Spec_File_Name =>  STRING_LITERAL,\n+  [Index => INTEGER_LITERAL]);\n \n pragma Source_File_Name (\n   [Unit_Name   =>] unit_NAME,\n-  Body_File_Name =>  STRING_LITERAL);\n+  Body_File_Name =>  STRING_LITERAL,\n+  [Index => INTEGER_LITERAL]);\n @end smallexample\n \n @noindent\n@@ -4254,6 +4256,36 @@ compilation, or to a single unit, depending on how it is used.\n the second argument is required, and indicates whether this is the file\n name for the spec or for the body.\n \n+The optional Index argument should be used when a file contains multiple\n+units, and when you do not want to use @code{gnatchop} to separate then\n+into multiple files (which is the recommended procedure to limit the\n+number of recompilation that are needed when some sources change).\n+For instance, if the source file @file{source.ada} contains\n+\n+@smallexample @c ada\n+package B is\n+...\n+end B;\n+\n+with B;\n+procedure A is\n+begin\n+   ..\n+end A;\n+@end smallexample\n+\n+you could use the following configuration pragmas:\n+\n+@smallexample @c ada\n+pragma Source_File_Name\n+  (B, Spec_File_Name => \"source.ada\", Index => 1);\n+pragma Source_File_Name\n+  (A, Body_File_Name => \"source.ada\", Index => 2);\n+@end smallexample\n+\n+Note that the @code{gnatname} utility can also be used to generate those\n+configuration pragmas.\n+\n Another form of the @code{Source_File_Name} pragma allows\n the specification of patterns defining alternative file naming schemes\n to apply to all files."}]}