{"sha": "fcee603081c754044e682f9263f526fcefc9442c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNlZTYwMzA4MWM3NTQwNDRlNjgyZjkyNjNmNTI2ZmNlZmM5NDQyYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2020-01-09T23:14:57Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2020-01-09T23:14:57Z"}, "message": "libgo: compile examples in _test packages\n    \n    Previously if the only names defined by _test packages were examples,\n    the gotest script would emit an incorrect _testmain.go file.\n    I worked around that by marking the example_test.go files +build ignored.\n    \n    This CL changes the gotest script to handle this case correctly,\n    and removes the now-unnecessary build tags.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/214039\n\nFrom-SVN: r280085", "tree": {"sha": "fd799d5e04409a5f50a3570151d4ef62c558bb09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd799d5e04409a5f50a3570151d4ef62c558bb09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcee603081c754044e682f9263f526fcefc9442c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcee603081c754044e682f9263f526fcefc9442c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcee603081c754044e682f9263f526fcefc9442c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcee603081c754044e682f9263f526fcefc9442c/comments", "author": null, "committer": null, "parents": [{"sha": "acd43917df56f8845b1497d939da97f4e22b5ebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd43917df56f8845b1497d939da97f4e22b5ebb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd43917df56f8845b1497d939da97f4e22b5ebb"}], "stats": {"total": 230, "additions": 94, "deletions": 136}, "files": [{"sha": "9189bed5e89d923341dddf5a45cc55a6a209292a", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -1,4 +1,4 @@\n-f9d1bfb3eec2d388c5f239779fd25a580064dd9d\n+92ee4c2e295fc760105f187f6ea6dc65c81fa892\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "578009248f5704d89eef7a3fb6adee2e4c6b8ecd", "filename": "libgo/go/compress/flate/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fcompress%2Fflate%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fcompress%2Fflate%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fflate%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package flate_test\n \n import ("}, {"sha": "ce29e9ba3656ed1e0b9eeaa3e6ddbd2373735672", "filename": "libgo/go/compress/gzip/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fcompress%2Fgzip%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fcompress%2Fgzip%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fgzip%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package gzip_test\n \n import ("}, {"sha": "30bd0d74c9eee01d444f50d15ef69ab8fefec24c", "filename": "libgo/go/container/ring/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fcontainer%2Fring%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fcontainer%2Fring%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcontainer%2Fring%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package ring_test\n \n import ("}, {"sha": "7d73120155cab815bf542fefebb48e57b0300387", "filename": "libgo/go/crypto/sha256/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fcrypto%2Fsha256%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fcrypto%2Fsha256%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha256%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package sha256_test\n \n import ("}, {"sha": "8c61d755bb8458f0a1116019a84b08741406b355", "filename": "libgo/go/database/sql/example_cli_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fdatabase%2Fsql%2Fexample_cli_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fdatabase%2Fsql%2Fexample_cli_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdatabase%2Fsql%2Fexample_cli_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package sql_test\n \n import ("}, {"sha": "768307c1471a7875d4e804addcd053cff2dc2ca0", "filename": "libgo/go/database/sql/example_service_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fdatabase%2Fsql%2Fexample_service_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fdatabase%2Fsql%2Fexample_service_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdatabase%2Fsql%2Fexample_service_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package sql_test\n \n import ("}, {"sha": "dc227d4c8ba85e00783c5fe4daca299cb5f7cf3c", "filename": "libgo/go/encoding/csv/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fcsv%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fcsv%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fcsv%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package csv_test\n \n import ("}, {"sha": "3580757a541d6188764515ac9401cbc91a8221c6", "filename": "libgo/go/encoding/hex/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fhex%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fhex%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fhex%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package hex_test\n \n import ("}, {"sha": "7f15c742b8ef86d4a86711f45b93bc8390f601a1", "filename": "libgo/go/encoding/json/example_marshaling_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fjson%2Fexample_marshaling_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fjson%2Fexample_marshaling_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fexample_marshaling_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package json_test\n \n import ("}, {"sha": "04c7813b2678355a68fe9be74a7424bb78248050", "filename": "libgo/go/encoding/json/example_text_marshaling_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fjson%2Fexample_text_marshaling_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fjson%2Fexample_text_marshaling_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fexample_text_marshaling_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package json_test\n \n import ("}, {"sha": "806e7bbbf72e881461b4a9a14d3307106947847e", "filename": "libgo/go/encoding/pem/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fpem%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fpem%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fpem%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package pem_test\n \n import ("}, {"sha": "9f9e801e74ecad91d55213ef136e43ec5aad7714", "filename": "libgo/go/encoding/xml/example_marshaling_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fxml%2Fexample_marshaling_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fxml%2Fexample_marshaling_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fxml%2Fexample_marshaling_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package xml_test\n \n import ("}, {"sha": "2549cb16ae54f9476aeb55260b20e441cb8fa731", "filename": "libgo/go/encoding/xml/example_text_marshaling_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fxml%2Fexample_text_marshaling_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fencoding%2Fxml%2Fexample_text_marshaling_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fxml%2Fexample_text_marshaling_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package xml_test\n \n import ("}, {"sha": "5962834226b9d58564eafa1b240a9ff4e99171fc", "filename": "libgo/go/fmt/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Ffmt%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Ffmt%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package fmt_test\n \n import ("}, {"sha": "ab19ee3b94d2e310c8962e85aed95cabd0203bd2", "filename": "libgo/go/fmt/gostringer_example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Ffmt%2Fgostringer_example_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Ffmt%2Fgostringer_example_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Fgostringer_example_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package fmt_test\n \n import ("}, {"sha": "c77e78809cc56ccdfa0f13aaddeed1a7a58e3abc", "filename": "libgo/go/fmt/stringer_example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Ffmt%2Fstringer_example_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Ffmt%2Fstringer_example_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Fstringer_example_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package fmt_test\n \n import ("}, {"sha": "5619d20d49438f245e6cd6604424a016bf276381", "filename": "libgo/go/go/types/example_test.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fgo%2Ftypes%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fgo%2Ftypes%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Ftypes%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -5,7 +5,7 @@\n // Only run where builders (build.golang.org) have\n // access to compiled packages for import.\n //\n-// +build ignore,!arm,!arm64,!nacl\n+// +build !arm,!arm64,!nacl\n \n package types_test\n \n@@ -77,7 +77,7 @@ func Unused() { {}; {{ var x int; _ = x }} } // make sure empty block scopes get\n \trx := regexp.MustCompile(` 0x[a-fA-F0-9]*`)\n \tfmt.Println(rx.ReplaceAllString(buf.String(), \"\"))\n \n-\t// Output:\n+\t// no output for gccgo--can't import \"fmt\"\n \t// package \"temperature\" scope {\n \t// .  const temperature.Boiling temperature.Celsius\n \t// .  type temperature.Celsius float64\n@@ -147,7 +147,7 @@ func (c *Celsius) SetF(f float64) { *c = Celsius(f - 32 / 9 * 5) }\n \t\tfmt.Println()\n \t}\n \n-\t// Output:\n+\t// no output for gccgo--can't import \"fmt\"\n \t// Method set of temperature.Celsius:\n \t// method (temperature.Celsius) String() string\n \t//"}, {"sha": "621bf838309ed7cc2613a01097237cdf34463f5f", "filename": "libgo/go/hash/crc32/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhash%2Fcrc32%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhash%2Fcrc32%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fhash%2Fcrc32%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package crc32_test\n \n import ("}, {"sha": "f07b9aaa2c4898b5765ba66da0faf6cf48fa4e42", "filename": "libgo/go/hash/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhash%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhash%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fhash%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package hash_test\n \n import ("}, {"sha": "0e28cac1be5e4f8ead17ffb4b4cfd90803fc2e48", "filename": "libgo/go/html/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhtml%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhtml%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fhtml%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package html_test\n \n import ("}, {"sha": "533c0dd9616a022b852a872708c351d10e525785", "filename": "libgo/go/html/template/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhtml%2Ftemplate%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhtml%2Ftemplate%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fhtml%2Ftemplate%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package template_test\n \n import ("}, {"sha": "60518aee9ec0867820414be4985fd3ef02670369", "filename": "libgo/go/html/template/examplefiles_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhtml%2Ftemplate%2Fexamplefiles_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fhtml%2Ftemplate%2Fexamplefiles_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fhtml%2Ftemplate%2Fexamplefiles_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package template_test\n \n import ("}, {"sha": "2ccc2f4acdbffd88469ca27df79e6c3479adf32c", "filename": "libgo/go/image/draw/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fimage%2Fdraw%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fimage%2Fdraw%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fimage%2Fdraw%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package draw_test\n \n import ("}, {"sha": "c4376320041cfc45575f0a1cc0d2e3453024cb70", "filename": "libgo/go/image/png/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fimage%2Fpng%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fimage%2Fpng%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fimage%2Fpng%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package png_test\n \n import ("}, {"sha": "ea10bfd06a158f069c9fc29667ad4ac4a42a60dc", "filename": "libgo/go/index/suffixarray/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Findex%2Fsuffixarray%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Findex%2Fsuffixarray%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Findex%2Fsuffixarray%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package suffixarray_test\n \n import ("}, {"sha": "a7d340b77fa595a607dc2d4de1828a8742b241c3", "filename": "libgo/go/io/ioutil/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fio%2Fioutil%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fio%2Fioutil%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fio%2Fioutil%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package ioutil_test\n \n import ("}, {"sha": "e47c092a51a3db2682d6e882e0685c8357834573", "filename": "libgo/go/io/ioutil/testdata/hello", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fio%2Fioutil%2Ftestdata%2Fhello", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fio%2Fioutil%2Ftestdata%2Fhello", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fio%2Fioutil%2Ftestdata%2Fhello?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -0,0 +1 @@\n+Hello, Gophers!"}, {"sha": "3d5b76d219cd03e7fac46d8501eed07daeda6ee5", "filename": "libgo/go/log/syslog/example_test.go", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Flog%2Fsyslog%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Flog%2Fsyslog%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Flog%2Fsyslog%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,7 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n // +build !windows,!nacl,!plan9\n \n package syslog_test"}, {"sha": "a97117001c0b5e8a35e7101030a0d216438a842a", "filename": "libgo/go/math/big/example_rat_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmath%2Fbig%2Fexample_rat_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmath%2Fbig%2Fexample_rat_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbig%2Fexample_rat_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package big_test\n \n import ("}, {"sha": "0c6668c93bc592edafc9a826a877f19af1ca35bc", "filename": "libgo/go/math/big/floatexample_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmath%2Fbig%2Ffloatexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmath%2Fbig%2Ffloatexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbig%2Ffloatexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package big_test\n \n import ("}, {"sha": "b2ed2cba4bfb72287dd1189382684baf41995e51", "filename": "libgo/go/math/bits/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmath%2Fbits%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmath%2Fbits%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbits%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -4,8 +4,6 @@\n \n // Code generated by go run make_examples.go. DO NOT EDIT.\n \n-// +build ignore\n-\n package bits_test\n \n import ("}, {"sha": "f0ed9631142295458aee9e3430ec0df0cf67333a", "filename": "libgo/go/math/cmplx/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmath%2Fcmplx%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmath%2Fcmplx%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fcmplx%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package cmplx_test\n \n import ("}, {"sha": "c7d13cdcdb550c0b284855d04e85a8be6240eaf7", "filename": "libgo/go/mime/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmime%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmime%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmime%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package mime_test\n \n import ("}, {"sha": "5a9ab450a3cb6e2a868da5bf585923234917ccf9", "filename": "libgo/go/mime/quotedprintable/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmime%2Fquotedprintable%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fmime%2Fquotedprintable%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmime%2Fquotedprintable%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package quotedprintable_test\n \n import ("}, {"sha": "9b3117358f8a879ff5ba38d585e238abd639ceda", "filename": "libgo/go/net/http/cookiejar/dummy_publicsuffix_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fdummy_publicsuffix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fdummy_publicsuffix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fdummy_publicsuffix_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package cookiejar_test\n \n import \"net/http/cookiejar\""}, {"sha": "91728ca9821b11924014d72cf7c9d55360cf4d39", "filename": "libgo/go/net/http/cookiejar/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package cookiejar_test\n \n import ("}, {"sha": "07fdc0a4726fc35e9f1b776171eb10e404e0e096", "filename": "libgo/go/net/http/httptrace/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fhttp%2Fhttptrace%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fhttp%2Fhttptrace%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttptrace%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package httptrace_test\n \n import ("}, {"sha": "619160367453ad9180857b4438536863ae7d7acf", "filename": "libgo/go/net/http/httputil/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttputil%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package httputil_test\n \n import ("}, {"sha": "c3365642aa4473883179a0fc5b92ea6b8a5194b9", "filename": "libgo/go/net/mail/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fmail%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fnet%2Fmail%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fmail%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package mail_test\n \n import ("}, {"sha": "a1d680e4a054d1599cbed9b36201b9e7eb01ef81", "filename": "libgo/go/path/filepath/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fpath%2Ffilepath%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fpath%2Ffilepath%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fpath%2Ffilepath%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package filepath_test\n \n import ("}, {"sha": "ba96a829a3d064e9185943721a46aaecb27d145e", "filename": "libgo/go/runtime/trace/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fruntime%2Ftrace%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Fruntime%2Ftrace%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Ftrace%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package trace_test\n \n import ("}, {"sha": "5e8c3fbda4ff88abe0551b807fc6b8d0cce61a60", "filename": "libgo/go/text/scanner/example_test.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Ftext%2Fscanner%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Fgo%2Ftext%2Fscanner%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Fscanner%2Fexample_test.go?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ignore\n-\n package scanner_test\n \n import ("}, {"sha": "4293db92664f6711aeebc4bbe6d286297249fb16", "filename": "libgo/testsuite/gotest", "status": "modified", "additions": 89, "deletions": 53, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Ftestsuite%2Fgotest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcee603081c754044e682f9263f526fcefc9442c/libgo%2Ftestsuite%2Fgotest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Fgotest?ref=fcee603081c754044e682f9263f526fcefc9442c", "patch": "@@ -475,7 +475,7 @@ if $havex; then\n \tcp _gotest_.o `dirname $package`/lib`basename $package`.a\n \n \t# Force the test version of the package to be imported first,\n-\t# so that it's type definitions will be used, in case any new\n+\t# so that its type definitions will be used, in case any new\n \t# methods appear in export_test.go files.\n \techo \"package $xpackage\" > _first_test.go\n \techo 'import _ \"'$package'\"' >> _first_test.go\n@@ -535,6 +535,28 @@ symtogo() {\n   done\n }\n \n+# Takes an example name and puts any output into the file example.txt.\n+# It strips comment markers but does not otherwise change the output.\n+exampleoutput() {\n+    local n=$(testname $1)\n+    local f\n+    for f in $gofiles $xgofiles; do\n+\tif ! grep \"^func $n(\" $f >/dev/null 2>&1; then\n+\t    continue\n+\tfi\n+\t# Copy the output comment, if any, into example.txt.\n+\t# Remove the comment markers.\n+\tsed -n \"/^func $n(/,/^}$/ p\" $f |\n+\t    sed -n '\\|// \\([Uu]nordered \\)\\?[Oo]utput:|,$ p' |\n+\t    sed -n '\\|//| s|[ \t]*// \\?||p' > example.txt\n+\t# Check whether we found an output comment.\n+\tif ! sed -n '1p' < example.txt | grep '[Oo]utput:' >/dev/null 2>&1; then\n+\t    rm -f example.txt\n+\tfi\n+\treturn\n+    done\n+}\n+\n {\n \t# On systems using PPC64 ELF ABI v1 function symbols show up\n \t# as descriptors in the data section.\n@@ -546,20 +568,33 @@ symtogo() {\n \tpattern='Test([^a-z].*)?'\n \t# The -p option tells GNU nm not to sort.\n \t# The -v option tells Solaris nm to sort by value.\n-        testsyms=$($NM -p -v _gotest_.o $xofile | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+        testsyms=$($NM -p -v _gotest_.o | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+\ttestxsyms=\n+\tif $havex; then\n+\t    testxsyms=$($NM -p -v $xofile | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+\t    testsyms=\"$testsyms $testxsyms\"\n+\tfi\n         tests=$(symtogo \"$testsyms\")\n \tif [ \"x$tests\" = x ]; then\n \t\techo 'gotest: warning: no tests matching '$pattern in _gotest_.o $xofile 1>&2\n \t\texit 2\n \tfi\n \t# benchmarks are named BenchmarkFoo.\n \tpattern='Benchmark([^a-z].*)?'\n-\tbenchmarksyms=$($NM -p -v _gotest_.o $xofile | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+\tbenchmarksyms=$($NM -p -v _gotest_.o | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+\tif $havex; then\n+\t    benchmarkxsyms=$($NM -p -v $xofile | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+\t    benchmarksyms=\"$benchmarksyms $benchmarkxsyms\"\n+\tfi\n         benchmarks=$(symtogo \"$benchmarksyms\")\n \n \t# examples are named ExampleFoo\n \tpattern='Example([^a-z].*)?'\n-\texamplesyms=$($NM -p -v _gotest_.o $xofile | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+\texamplesyms=$($NM -p -v _gotest_.o | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+\tif $havex; then\n+\t    examplexsyms=$($NM -p -v $xofile | egrep \" $text .*\\.\"$pattern'$' | fgrep -v ' __go_' | egrep -v '\\.\\.\\w+$' | sed 's/.* //')\n+\t    examplesyms=\"$examplesyms $examplexsyms\"\n+\tfi\n \texamples=$(symtogo \"$examplesyms\")\n \n \t# package spec\n@@ -570,7 +605,25 @@ symtogo() {\n \t\techo 'import \"./_gotest_\"'\n \tfi\n \tif $havex; then\n+\t    needxtest=false\n+\t    if test -n \"$testxsyms\" -o -n \"$benchmarkxsyms\"; then\n+\t\tneedxtest=true\n+\t    else\n+\t\t# Check whether any example has output.\n+\t\tfor i in $(symtogo \"$examplexsyms\"); do\n+\t\t    exampleoutput $i\n+\t\t    if test -f example.txt; then\n+\t\t\trm -f example.txt\n+\t\t\tneedxtest=true\n+\t\t\tbreak\n+\t\t    fi\n+\t\tdone\n+\t    fi\n+\t    if test x$needxtest = xtrue; then\n \t\techo 'import \"./_xtest_\"'\n+\t    else\n+\t\techo 'import _ \"./_xtest_\"'\n+\t    fi\n \tfi\n \techo 'import \"testing\"'\n \techo 'import \"testing/internal/testdeps\"'\n@@ -590,7 +643,7 @@ symtogo() {\n \t# benchmark array\n \t# The comment makes the multiline declaration\n \t# gofmt-safe even when there are no benchmarks.\n-\techo 'var benchmarks = []testing.InternalBenchmark{ //'\n+\techo 'var benchmarks = []testing.InternalBenchmark{'\n \tfor i in $benchmarks; do\n \t\tn=$(testname $i)\n \t\tj=$(localname $i)\n@@ -599,62 +652,45 @@ symtogo() {\n \techo '}'\n \n \t# examples array\n-\techo 'var examples = []testing.InternalExample{ //'\n+\techo 'var examples = []testing.InternalExample{'\n \tfor i in $examples; do\n \t\tn=$(testname $i)\n \t\tj=$(localname $i)\n \t\t# Look for a //output comment.\n \t\thasoutput=false\n \t\tunordered=false\n \t\toutput=\n-\t\tfor f in $gofiles $xgofiles; do\n-\t\t    if ! grep \"^func $n(\" $f >/dev/null 2>&1; then\n-\t\t\tcontinue\n-\t\t    fi\n-\t\t    # Copy the output comment, if any, into example.txt.\n-\t\t    # Remove the comment markers.\n-\t\t    sed -n \"/^func $n(/,/^}$/ p\" $f |\n-\t\t\tsed -n '\\|// \\([Uu]nordered \\)\\?[Oo]utput:|,$ p' |\n-\t\t\tsed -n '\\|//| s|[ \t]*// \\?||p' > example.txt\n-\t\t    # Check whether we found an output comment.\n-\t\t    if ! sed -n '1p' < example.txt | grep '[Oo]utput:' >/dev/null 2>&1; then\n-\t\t\t# An example with no output is only compiled, not run,\n-\t\t\t# so don't add it to the examples slice.\n-\t\t\trm -f example.txt\n-\t\t\tbreak\n-\t\t    fi\n-\t\t    # Check whether the output can be unordered.\n-\t\t    unordered=false\n-\t\t    if sed -n '1p' < example.txt | grep -i unordered; then\n-\t\t\tunordered=true\n-\t\t    fi\n-\t\t    # Remove the output header.\n-\t\t    # Quote backslashes.\n-\t\t    # Quote quotation characters.\n-\t\t    # Turn tab into \\t.\n-\t\t    # Turn pairs of spaces into \" \\x20\", because $() will\n-\t\t    # drop duplicate spaces.\n-\t\t    # Drop trailing spaces, and turn newlines into \\n.\n-\t\t    # Remove leading and trailing \\n.\n-\t\t    sed '1 s/\\([Uu]nordered \\)\\?[Oo]utput:[ \t]*//' < example.txt |\n-\t\t\t\t sed -e 's/\\\\/\\\\\\\\/g' \\\n-\t\t\t\t     -e 's/\"/\\\\\"/g' \\\n-\t\t\t\t     -e 's/\t/\\\\t/g' \\\n-\t\t\t\t     -e 's/  / \\\\x20/g' \\\n-\t\t\t\t     -e 's/[ \t]*$/\\\\n/g' |\n-\t\t\t\t tr -d '\\n' |\n-\t\t\t\t sed -e 's/^\\(\\\\n\\)*//' \\\n-\t\t\t\t     -e 's/\\(\\\\n\\)*$//' > example2.txt\n-\t\t    hasoutput=true\n-\t\t    rm -f example.txt\n-\t\t    break\n-\t\tdone\n-\t\tif test x$hasoutput = xtrue; then\n-\t\t    echo '\t{\"'$n'\", '$j','\n-\t\t    sed -e 's/^/\t\t\"/' -e 's/$/\", /' < example2.txt\n-\t\t    echo $unordered'},'\n-\t\t    rm -f example2.txt\n+\t\texampleoutput $i\n+\t\tif ! test -f example.txt; then\n+\t\t    continue\n+\t\tfi\n+\t\t# Check whether the output can be unordered.\n+\t\tunordered=false\n+\t\tif sed -n '1p' < example.txt | grep -i unordered >/dev/null 2>&1; then\n+\t\t    unordered=true\n \t\tfi\n+\t\t# Remove the output header.\n+\t\t# Quote backslashes.\n+\t\t# Quote quotation characters.\n+\t\t# Turn tab into \\t.\n+\t\t# Turn pairs of spaces into \" \\x20\", because $() will\n+\t\t# drop duplicate spaces.\n+\t\t# Drop trailing spaces, and turn newlines into \\n.\n+\t\t# Remove leading and trailing \\n.\n+\t\tsed '1 s/\\([Uu]nordered \\)\\?[Oo]utput:[ \t]*//' < example.txt |\n+\t\t\t     sed -e 's/\\\\/\\\\\\\\/g' \\\n+\t\t\t\t -e 's/\"/\\\\\"/g' \\\n+\t\t\t\t -e 's/\t/\\\\t/g' \\\n+\t\t\t\t -e 's/  / \\\\x20/g' \\\n+\t\t\t\t -e 's/[ \t]*$/\\\\n/g' |\n+\t\t\t     tr -d '\\n' |\n+\t\t\t     sed -e 's/^\\(\\\\n\\)*//' \\\n+\t\t\t\t -e 's/\\(\\\\n\\)*$//' > example2.txt\n+\t\thasoutput=true\n+\t\techo '\t{\"'$n'\", '$j','\n+\t\tsed -e 's/^/\t\t\"/' -e 's/$/\", /' < example2.txt\n+\t\techo $unordered'},'\n+\t\trm -f example.txt example2.txt\n \tdone\n \techo '}'\n "}]}