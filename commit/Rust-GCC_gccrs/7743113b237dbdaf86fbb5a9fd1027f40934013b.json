{"sha": "7743113b237dbdaf86fbb5a9fd1027f40934013b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc0MzExM2IyMzdkYmRhZjg2ZmJiNWE5ZmQxMDI3ZjQwOTM0MDEzYg==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2000-12-11T16:52:42Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-12-11T16:52:42Z"}, "message": "configure.in cleanup for libgcj\n\nFrom-SVN: r38191", "tree": {"sha": "9b897e5a06f749b19aead2a35e1b648c3d4a9fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b897e5a06f749b19aead2a35e1b648c3d4a9fa8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7743113b237dbdaf86fbb5a9fd1027f40934013b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7743113b237dbdaf86fbb5a9fd1027f40934013b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7743113b237dbdaf86fbb5a9fd1027f40934013b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7743113b237dbdaf86fbb5a9fd1027f40934013b/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89741abb8de53230e18c5b0da69dabb008898119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89741abb8de53230e18c5b0da69dabb008898119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89741abb8de53230e18c5b0da69dabb008898119"}], "stats": {"total": 163, "additions": 92, "deletions": 71}, "files": [{"sha": "c9c7d96dc1e97ebc5a429e98f36a92d3a9fe0329", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7743113b237dbdaf86fbb5a9fd1027f40934013b/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7743113b237dbdaf86fbb5a9fd1027f40934013b/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7743113b237dbdaf86fbb5a9fd1027f40934013b", "patch": "@@ -1,3 +1,8 @@\n+2000-12-10  Anthony Green  <green@redhat.com>\n+\n+\t* configure.in: Define libgcj.  Disable libgcj target libraries for\n+\tmost targets.\n+\n 2000-12-10  Neil Booth  <neilb@earthling.net>\n \n \t* MAINTAINERS: Update mail address, remove from WAA list."}, {"sha": "c350b347de05ec957d39e2d0f65a4b8e1be4b070", "filename": "configure.in", "status": "modified", "additions": 87, "deletions": 71, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7743113b237dbdaf86fbb5a9fd1027f40934013b/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7743113b237dbdaf86fbb5a9fd1027f40934013b/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=7743113b237dbdaf86fbb5a9fd1027f40934013b", "patch": "@@ -63,6 +63,13 @@ fi\n # know that we are building the simulator.\n host_tools=\"texinfo byacc flex bison binutils ld gas gcc sim gdb make patch prms send-pr gprof gdbtest tgas etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool ispell grep diff rcs cvssrc fileutils shellutils time textutils wdiff find emacs emacs19 uudecode hello tar gzip indent recode release sed utils guile perl apache inet gawk findutils snavigator libtool gettext zip fastjar\"\n \n+# libgcj represents the runtime libraries only used by gcj.\n+libgcj=\"target-libffi \\\n+\ttarget-boehm-gc \\\n+\ttarget-zlib \\\n+\ttarget-qthreads \\\n+\ttarget-libjava\"\n+\n # these libraries are built for the target environment, and are built after\n # the host libraries and the host tools (which may be a cross compiler)\n #\n@@ -74,11 +81,7 @@ target_libs=\"target-libiberty \\\n \t\ttarget-libg++ \\\n \t\ttarget-libf2c \\\n \t\ttarget-libchill \\\n-\t\ttarget-libffi \\\n-\t\ttarget-libjava \\\n-\t\ttarget-zlib \\\n-\t\ttarget-boehm-gc \\\n-\t\ttarget-qthreads \\\n+\t\t${libgcj}\n \t\ttarget-libobjc\"\n \n # these tools are built using the target libs, and are intended to run only\n@@ -549,7 +552,7 @@ esac\n # target this usually means that a port of the program doesn't\n # exist yet.\n \n-noconfigdirs=\"target-libjava\"\n+noconfigdirs=\"\"\n \n case \"${host}\" in\n   hppa*64*-*-*)\n@@ -582,25 +585,24 @@ case \"${host}\" in\n     ;;\n esac\n \n-\n case \"${target}\" in\n   *-*-netware)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-newlib target-libiberty target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-newlib target-libiberty target-libgloss ${libgcj}\"\n     ;;\n   *-*-rtems*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   *-*-vxworks*)\n-    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss ${libgcj}\"\n     ;;\n   alpha*-dec-osf*)\n     # ld works, but does not support shared libraries.  emacs doesn't\n     # work.  newlib is not 64 bit ready.  I'm not sure about fileutils.\n     # gas doesn't generate exception information.\n-    noconfigdirs=\"$noconfigdirs gas ld emacs fileutils target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gas ld emacs fileutils target-newlib target-libgloss ${libgcj}\"\n     ;;\n   alpha*-*-*vms*)\n-    noconfigdirs=\"$noconfigdirs gdb ld target-newlib target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gdb ld target-newlib target-libgloss ${libgcj}\"\n     ;;\n   alpha*-*-linux*)\n     # newlib is not 64 bit ready\n@@ -610,11 +612,11 @@ case \"${target}\" in\n     ;;\n   alpha*-*-*)\n     # newlib is not 64 bit ready\n-    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss ${libgcj}\"\n     ;;\n   sh*-*-pe|mips*-*-pe|*arm-wince-pe)\n-    noconfigdirs=\"$noconfigdirs target-libjava target-libffi target-zlib\"\n-    noconfigdirs=\"$noconfigdirs target-boehm-gc target-qthreads target-examples\"\n+    noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs target-examples\"\n     noconfigdirs=\"$noconfigdirs target-libiberty texinfo send-pr\"\n     noconfigdirs=\"$noconfigdirs tcl tix tk itcl libgui sim\"\n     noconfigdirs=\"$noconfigdirs expect dejagnu\"\n@@ -628,89 +630,92 @@ case \"${target}\" in\n     esac\n     ;;\n   arc-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   arm-*-pe*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   arm-*-coff*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n     fi\n     ;;\n   arm-*-elf*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n     fi\n     ;;\n   arm-*-oabi*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   c4x-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n     ;;\n   c54x*-*-* | tic54x-*-*)\n-    noconfigdirs=\"$noconfigdirs ${libstdcxx_version} target-libgloss target-libffi gcc gdb newlib\"\n+    noconfigdirs=\"$noconfigdirs ${libstdcxx_version} target-libgloss ${libgcj} gcc gdb newlib\"\n     ;;\n   thumb-*-coff)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   thumb-*-elf)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   thumb-*-oabi)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   strongarm-*-elf)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n     fi\n     ;;\n   strongarm-*-coff)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n     fi\n     ;;\n   xscale-*-elf)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n     fi\n     ;;\n   xscale-*-coff)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n     fi\n     ;;\n   thumb-*-pe)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   arm-*-riscix*)\n-    noconfigdirs=\"$noconfigdirs ld target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs ld target-libgloss ${libgcj}\"\n     ;;\n   d10v-*-*)\n-    noconfigdirs=\"$noconfigdirs target-librx target-libg++ ${libstdcxx_version} target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-librx target-libg++ ${libstdcxx_version} target-libgloss ${libgcj}\"\n     ;;\n   d30v-*-*)\n+    noconfigdirs=\"${libgcj}\"\n     ;;\n   fr30-*-elf*)\n+    noconfigdirs=\"${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n     fi\n     ;;\n   h8300*-*-* | \\\n   h8500-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n     ;;\n   hppa*-*-*elf* | \\\n   hppa*-*-linux* | \\\n   hppa*-*-lites* | \\\n   hppa*64*-*-*)\n+    noconfigdirs=\"${libgcj}\"\n     # Do configure ld/binutils/gas for this case.\n     ;;\n   hppa*-*-*)\n@@ -721,28 +726,34 @@ case \"${target}\" in\n \t\"\" | cc*) noconfigdirs=\"$noconfigdirs emacs emacs19\" ;;\n         *) ;;\n     esac\n-    noconfigdirs=\"$noconfigdirs ld shellutils\"\n+    noconfigdirs=\"$noconfigdirs ld shellutils ${libgcj}\"\n     ;;\n   ia64*-*-elf*)\n     # No gdb support yet.\n     noconfigdirs=\"$noconfigdirs tix readline mmalloc libgui itcl gdb\"\n     ;;\n   i[3456]86-*-coff | i[3456]86-*-elf)\n+    noconfigdirs=\"${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n          target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n     fi\n     ;;\n   i[3456]86-*-go32* | i[3456]-*-msdosdjgpp*)\n     # but don't build gdb\n-    noconfigdirs=\"$noconfigdirs gdb target-libg++ ${libstdcxx_version} target-librx target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gdb target-libg++ ${libstdcxx_version} target-librx ${libgcj}\"\n+    ;;\n+  i[3456]86-*-linux*)\n+    # linux has rx in libc\n+    skipdirs=\"$skipdirs target-librx\"\n     ;;\n   *-*-linux*)\n+    noconfigdirs=\"${libgcj}\"\n     # linux has rx in libc\n     skipdirs=\"$skipdirs target-librx\"\n     ;;\n   i[3456]86-*-mingw32*)\n     target_configdirs=\"$target_configdirs target-mingw\"\n-    noconfigdirs=\"$noconfigdirs expect target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs expect target-libgloss ${libgcj}\"\n \n     # Can't build gdb for mingw32 if not native.\n     case \"${host}\" in\n@@ -753,7 +764,7 @@ case \"${target}\" in\n     ;;    \n   *-*-cygwin*)\n     target_configdirs=\"$target_configdirs target-libtermcap target-winsup\"\n-    noconfigdirs=\"$noconfigdirs target-gperf target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-gperf target-libgloss ${libgcj}\"\n     # always build newlib.\n     skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n \n@@ -765,18 +776,18 @@ case \"${target}\" in\n     esac\n     ;;    \n   i[3456]86-*-pe)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n     ;;\n   i[3456]86-*-sco3.2v5*)\n     # The linker does not yet know about weak symbols in COFF,\n     # and is not configured to handle mixed ELF and COFF.\n-    noconfigdirs=\"$noconfigdirs ld target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs ld target-libgloss ${libgcj}\"\n     ;;\n   i[3456]86-*-sco*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libgloss ${libgcj}\"\n     ;;\n   i[3456]86-*-solaris2*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   i[3456]86-*-sysv4*)\n     # The SYSV4 C compiler doesn't handle Emacs correctly\n@@ -785,29 +796,31 @@ case \"${target}\" in\n         *) ;;\n     esac\n     # but that's okay since emacs doesn't work anyway\n-    noconfigdirs=\"$noconfigdirs emacs emacs19 target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs emacs emacs19 target-libgloss ${libgcj}\"\n     ;;\n   i[3456]86-*-beos*)\n-     noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss\"\n+     noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss ${libgcj}\"\n      ;;\n   m68k-*-elf*)\n+    noconfigdirs=\"${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n     fi\n     ;;\n   m68k-*-coff*)\n+    noconfigdirs=\"${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-cygmon\"\n     fi\n     ;;\n   mn10200-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n     fi\n     ;;\n   mn10300-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libffi\"\n+    noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n     fi\n@@ -818,70 +831,71 @@ case \"${target}\" in\n     # GNU ld is known to be broken for AIX 4.2 and 4.3 (at least)\n     # The symptom is that GDBtk 4.18 fails at startup with a segfault\n     # if linked by GNU ld, but not if linked by the native ld.\n-    noconfigdirs=\"$noconfigdirs gprof cvssrc target-libgloss target-libffi ld\"\n+    noconfigdirs=\"$noconfigdirs gprof cvssrc target-libgloss ${libgcj} ld\"\n     use_gnu_ld=no\n     ;;\n   powerpc*-*-winnt* | powerpc*-*-pe* | ppc*-*-pe)\n     target_configdirs=\"$target_configdirs target-winsup\"\n-    noconfigdirs=\"$noconfigdirs gdb tcl tk make expect target-libgloss itcl tix db snavigator gnuserv target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gdb tcl tk make expect target-libgloss itcl tix db snavigator gnuserv ${libgcj}\"\n     # always build newlib.\n     skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n     ;;\n     # This is temporary until we can link against shared libraries\n   powerpcle-*-solaris*)\n-    noconfigdirs=\"$noconfigdirs gdb sim make tcl tk expect itcl tix db snavigator gnuserv target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gdb sim make tcl tk expect itcl tix db snavigator gnuserv ${libgcj}\"\n     ;;\n   powerpc-*-beos*)\n-    noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss ${libgcj}\"\n     ;;\n   powerpc-*-eabi)\n+    noconfigdirs=\"${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n     fi\n     ;;\n   rs6000-*-lynxos*)\n     # The CVS server code doesn't work on the RS/6000\n-    noconfigdirs=\"$noconfigdirs target-newlib gprof cvssrc target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-newlib gprof cvssrc ${libgcj}\"\n     ;;\n   rs6000-*-aix*)\n     # The configure and build of ld are currently disabled because\n     # GNU ld is known to be broken for AIX 4.2 and 4.3 (at least)\n     # The symptom is that GDBtk 4.18 fails at startup with a segfault\n     # if linked by GNU ld, but not if linked by the native ld.\n-    noconfigdirs=\"$noconfigdirs gprof target-libffi ld\"\n+    noconfigdirs=\"$noconfigdirs gprof ld ${libgcj}\"\n     use_gnu_ld=no\n     ;;\n   rs6000-*-*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gprof ${libgcj}\"\n     ;;\n   m68k-apollo-*)\n-    noconfigdirs=\"$noconfigdirs ld binutils gprof target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs ld binutils gprof target-libgloss ${libgcj}\"\n     ;;\n   mips*-*-irix5*)\n     # The GNU linker does not support shared libraries.\n     # emacs is emacs 18, which does not work on Irix 5 (emacs19 does work)\n-    noconfigdirs=\"$noconfigdirs ld gprof emacs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs ld gprof emacs target-libgloss ${libgcj}\"\n     ;;\n   mips*-*-irix6*)\n     # The GNU assembler does not support IRIX 6.\n     # emacs is emacs 18, which does not work on Irix 5 (emacs19 does work)\n-    noconfigdirs=\"$noconfigdirs gas gprof emacs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gas gprof emacs target-libgloss ${libgcj}\"\n     ;;\n   mips*-dec-bsd*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libgloss ${libgcj}\"\n     ;;\n   mips*-*-bsd*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libgloss ${libgcj}\"\n     ;;\n   mipstx39-*-*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libffi\"   # same as generic mips\n+    noconfigdirs=\"$noconfigdirs gprof ${libgcj}\"   # same as generic mips\n     target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n    ;;\n   mips*-*-*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libffi\"\n+    noconfigdirs=\"$noconfigdirs gprof ${libgcj}\"\n     ;;\n   romp-*-*)\n-    noconfigdirs=\"$noconfigdirs bfd binutils ld gas opcodes target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs bfd binutils ld gas opcodes target-libgloss ${libgcj}\"\n     ;;\n   sh-*-*)\n     case \"${host}\" in\n@@ -890,9 +904,10 @@ case \"${target}\" in\n       i[3456]86-*-msdosdjgpp*) ;; # don't add gprof back in\n       *) skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ gprof / /'` ;;\n     esac\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   sparc-*-elf*)\n+    noconfigdirs=\"${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n     fi\n@@ -901,47 +916,48 @@ case \"${target}\" in\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n     fi\n-    noconfigdirs=\"target-libffi\"\n+    noconfigdirs=\"${libgcj}\"\n     ;;\n   sparclite-*-*)\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n     fi\n-    noconfigdirs=\"target-libffi\"\n+    noconfigdirs=\"${libgcj}\"\n     ;;\n   sparc-*-sunos4*)\n+    noconfigdirs=\"${libgcj}\"\n     if [ x${is_cross_compiler} != xno ] ; then\n            noconfigdirs=\"$noconfigdirs gdb gdbtest target-newlib target-libgloss\"\n     else\n            use_gnu_ld=no\n     fi\n     ;;\n   v810-*-*)\n-    noconfigdirs=\"$noconfigdirs bfd binutils gas gcc gdb ld target-libg++ ${libstdcxx_version} opcodes target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs bfd binutils gas gcc gdb ld target-libg++ ${libstdcxx_version} opcodes target-libgloss ${libgcj}\"\n     ;;\n   v850-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   v850e-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   v850ea-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   vax-*-vms)\n-    noconfigdirs=\"$noconfigdirs bfd binutils gdb ld target-newlib opcodes target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs bfd binutils gdb ld target-newlib opcodes target-libgloss ${libgcj}\"\n     ;;\n   vax-*-*)\n-    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss ${libgcj}\"\n     ;;\n   *-*-lynxos*)\n-    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss target-libffi\"\n+    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss ${libgcj}\"\n     ;; \n   *-*-macos* | \\\n   *-*-mpw*)\n     # Macs want a resource compiler.\n     configdirs=\"$configdirs grez\"\n-    noconfigdirs=\"target-libffi\"\n+    noconfigdirs=\"${libgcj}\"\n     ;;    \n esac\n "}]}