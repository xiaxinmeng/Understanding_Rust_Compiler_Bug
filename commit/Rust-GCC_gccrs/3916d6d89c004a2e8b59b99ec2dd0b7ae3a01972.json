{"sha": "3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkxNmQ2ZDg5YzAwNGEyZThiNTliOTllYzJkZDBiN2FlM2EwMTk3Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-05-06T22:30:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-06T22:30:13Z"}, "message": "Makefile.in (gensupport.o): Compile for the host.\n\n\t* Makefile.in (gensupport.o): Compile for the host.\n\t(host-prefix gensuuprt.o): Remove.\n\t(genflags.o): Depend on gensupport.h and OBSTACK_H.\n\t(genattrtab.o): Likewise.\n\t(gencodes.o): Depend on gensupport.h.\n\t(genemit.o, genopinit.o, genrecog.o, genextract.o): Likewise.\n\t(genpeep.o, genattr.o, genoutput.o): Likewise.\n\n\t* gensupport.c (obstack, rtl_obstack): New.\n\t(init_md_reader): Initialize rtl_obstack.\n\t* gensupport.h (rtl_obstack): Declare.\n\t(message_with_line): Declare.\n\n\t* genattr.c: Remove all traces of obstack manipulation.\n\t* gencodes.c, genconfig.c, genemit.c, genextract.c: Likewise.\n\t* genopinit.c, genoutput.c, genpeep.c, genrecog.c: Likewise.\n\n\t* genattrtab.c (obstack, rtl_obstack): Remove.\n\t(main): Don't init rtl_obstack.\n\t* genflags.c: Likewise.\n\n\t* genrecog.c (message_with_line): Move ...\n\t* gensupport.c: ... here.\n\nFrom-SVN: r33742", "tree": {"sha": "51eb3b35d4bfb3e523bdf3eb12a95f8b995170ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51eb3b35d4bfb3e523bdf3eb12a95f8b995170ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/comments", "author": null, "committer": null, "parents": [{"sha": "efdbc6f8fd6bfb88a8dfe05a3e8bf0c1347e2f4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efdbc6f8fd6bfb88a8dfe05a3e8bf0c1347e2f4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efdbc6f8fd6bfb88a8dfe05a3e8bf0c1347e2f4d"}], "stats": {"total": 224, "additions": 95, "deletions": 129}, "files": [{"sha": "f8a6406d363a52a665057be7d6d2024de2f7835d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -1,3 +1,29 @@\n+2000-05-06  Richard Henderson  <rth@cygnus.com>\n+\n+\t* Makefile.in (gensupport.o): Compile for the host.\n+\t(host-prefix gensuuprt.o): Remove.\n+\t(genflags.o): Depend on gensupport.h and OBSTACK_H.\n+\t(genattrtab.o): Likewise.\n+\t(gencodes.o): Depend on gensupport.h.\n+\t(genemit.o, genopinit.o, genrecog.o, genextract.o): Likewise.\n+\t(genpeep.o, genattr.o, genoutput.o): Likewise.\n+\n+\t* gensupport.c (obstack, rtl_obstack): New.\n+\t(init_md_reader): Initialize rtl_obstack.\n+\t* gensupport.h (rtl_obstack): Declare.\n+\t(message_with_line): Declare.\n+\n+\t* genattr.c: Remove all traces of obstack manipulation.\n+\t* gencodes.c, genconfig.c, genemit.c, genextract.c: Likewise.\n+\t* genopinit.c, genoutput.c, genpeep.c, genrecog.c: Likewise.\n+\n+\t* genattrtab.c (obstack, rtl_obstack): Remove.\n+\t(main): Don't init rtl_obstack.\n+\t* genflags.c: Likewise.\n+\n+\t* genrecog.c (message_with_line): Move ...\n+\t* gensupport.c: ... here.\n+\n 2000-05-06  Richard Henderson  <rth@cygnus.com>\n \n \t* c-typeck.c (build_c_cast): Remove dead code."}, {"sha": "5350b00767a1f6744645857ae9baf2b5489234df", "filename": "gcc/Makefile.in", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -590,7 +590,7 @@ HOST_LIBS = $(USE_HOST_OBSTACK) $(USE_HOST_ALLOCA) $(USE_HOST_MALLOC)  \\\n \t    $(HOST_CLIB)\n \n HOST_RTL = $(HOST_PREFIX)rtl.o $(HOST_PREFIX)bitmap.o \\\n-\t\t$(HOST_PREFIX)ggc-none.o $(HOST_PREFIX)gensupport.o\n+\t\t$(HOST_PREFIX)ggc-none.o gensupport.o\n \n HOST_PRINT = $(HOST_PREFIX)print-rtl.o\n HOST_ERRORS = $(HOST_PREFIX)errors.o\n@@ -1242,7 +1242,6 @@ toplev.o : toplev.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) function.h \\\n \t  -c `echo $(srcdir)/toplev.c | sed 's,^\\./,,'`\n \n rtl.o : rtl.c $(CONFIG_H) system.h $(RTL_H) bitmap.h $(GGC_H) toplev.h\n-gensupport.o : gensupport.c $(CONFIG_H) system.h $(RTL_H) \n \n print-rtl.o : print-rtl.c $(CONFIG_H) system.h $(RTL_H) $(BASIC_BLOCK_H)\n rtlanal.o : rtlanal.c $(CONFIG_H) system.h $(RTL_H)\n@@ -1575,81 +1574,91 @@ $(MD_FILE): $(MD_DEPS)\n \t$(MD_CPP) $(MD_CPPFLAGS) $(md_file) | sed 's/^# /; /g' > tmp-$@\n \tmv tmp-$@ $@\n \n+gensupport.o: gensupport.c $(RTL_H) $(OBSTACK_H) system.h errors.h gensupport.h\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)$(srcdir)/gensupport.c\n+\n genconfig : genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t  genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genconfig.o : genconfig.c $(RTL_H) $(build_xm_file) system.h errors.h\n+genconfig.o : genconfig.c $(RTL_H) $(build_xm_file) \\\n+  system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c\n \n genflags : genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genflags.o : genflags.c $(RTL_H) $(build_xm_file) system.h errors.h\n+genflags.o : genflags.c $(RTL_H) $(OBSTACK_H) $(build_xm_file) \\\n+  system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c\n \n gencodes : gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-gencodes.o : gencodes.c $(RTL_H) $(build_xm_file) system.h errors.h\n+gencodes.o : gencodes.c $(RTL_H) $(build_xm_file) \\\n+  system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c\n \n genemit : genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genemit.o : genemit.c $(RTL_H) $(build_xm_file) system.h errors.h\n+genemit.o : genemit.c $(RTL_H) $(build_xm_file) system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c\n \n genopinit : genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genopinit.o : genopinit.c $(RTL_H) $(build_xm_file) system.h errors.h\n+genopinit.o : genopinit.c $(RTL_H) $(build_xm_file) \\\n+  system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c\n \n genrecog : genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genrecog.o : genrecog.c $(RTL_H) $(build_xm_file) system.h errors.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c\n-\n+genrecog.o : genrecog.c $(RTL_H) $(build_xm_file) \\\n+  system.h errors.h gensupport.h\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c \n genextract : genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genextract.o : genextract.c $(RTL_H) $(build_xm_file) system.h insn-config.h errors.h\n+genextract.o : genextract.c $(RTL_H) $(build_xm_file) \\\n+  system.h insn-config.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c\n \n genpeep : genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genpeep.o : genpeep.c $(RTL_H) $(build_xm_file) system.h errors.h\n+genpeep.o : genpeep.c $(RTL_H) $(build_xm_file) system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c\n \n genattr : genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genattr.o : genattr.c $(RTL_H) $(build_xm_file) system.h errors.h\n+genattr.o : genattr.c $(RTL_H) $(build_xm_file) system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c\n \n genattrtab : genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genattrtab.o : genattrtab.c $(RTL_H)  $(build_xm_file) system.h errors.h $(GGC_H)\n+genattrtab.o : genattrtab.c $(RTL_H) $(OBSTACK_H) $(build_xm_file) \\\n+  system.h errors.h $(GGC_H) gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c\n \n genoutput : genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n-genoutput.o : genoutput.c $(RTL_H) $(build_xm_file) system.h errors.h\n+genoutput.o : genoutput.c $(RTL_H) $(build_xm_file) \\\n+  system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c\n \n gengenrtl : gengenrtl.o $(HOST_LIBDEPS)\n@@ -1727,11 +1736,6 @@ $(HOST_PREFIX_1)ggc-none.o: ggc-none.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/ggc-none.c > $(HOST_PREFIX)ggc-none.c\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)ggc-none.c\n \n-$(HOST_PREFIX_1)gensupport.o: gensupport.c\n-\trm -f $(HOST_PREFIX)gensupport.c\n-\t$(LN_S) $(srcdir)/gensupport.c $(HOST_PREFIX)gensupport.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)gensupport.c\n-\n #\f\n # Remake internationalization support.\n "}, {"sha": "9207876e817e5b3c6ae7c6f4b54ab7dfd57a685f", "filename": "gcc/genattr.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -23,15 +23,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n \n /* A range of values.  */\n \n@@ -239,7 +233,6 @@ main (argc, argv)\n   init_range (&all_blockage);\n \n   progname = \"genattr\";\n-  obstack_init (rtl_obstack);\n \n   if (argc <= 1)\n     fatal (\"No input file name.\");"}, {"sha": "2c09e3d5fb221205be4273fc21657c99c5c1356b", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -111,8 +111,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"obstack.h\"\n #include \"errors.h\"\n \n-static struct obstack obstack, obstack1, obstack2;\n-struct obstack *rtl_obstack = &obstack;\n+static struct obstack obstack1, obstack2;\n struct obstack *hash_obstack = &obstack1;\n struct obstack *temp_obstack = &obstack2;\n \n@@ -5978,9 +5977,6 @@ main (argc, argv)\n   if (argc <= 1)\n     fatal (\"No input file name.\");\n \n-  if (init_md_reader (argv[1]) != SUCCESS_EXIT_CODE)\n-    return (FATAL_EXIT_CODE);\n-\n #if defined (RLIMIT_STACK) && defined (HAVE_GETRLIMIT) && defined (HAVE_SETRLIMIT)\n   /* Get rid of any avoidable limit on stack size.  */\n   {\n@@ -5993,8 +5989,9 @@ main (argc, argv)\n   }\n #endif\n \n-  progname = \"genattrtab\";\n-  obstack_init (rtl_obstack);\n+  if (init_md_reader (argv[1]) != SUCCESS_EXIT_CODE)\n+    return (FATAL_EXIT_CODE);\n+\n   obstack_init (hash_obstack);\n   obstack_init (temp_obstack);\n "}, {"sha": "0e36e9fd52d4f93f73844177f0efe5e85c01e9d7", "filename": "gcc/gencodes.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgencodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgencodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencodes.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -25,15 +25,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n \n static int insn_code_number;\n \n@@ -87,7 +81,6 @@ main (argc, argv)\n   rtx desc;\n \n   progname = \"gencodes\";\n-  obstack_init (rtl_obstack);\n \n   if (argc <= 1)\n     fatal (\"No input file name.\");"}, {"sha": "a18f896a5b995cb55f90de6a559553d6b1a47c71", "filename": "gcc/genconfig.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -24,15 +24,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n \n /* flags to determine output of machine description dependent #define's.  */\n static int max_recog_operands;  /* Largest operand number seen.  */\n@@ -282,7 +276,6 @@ main (argc, argv)\n   rtx desc;\n \n   progname = \"genconfig\";\n-  obstack_init (rtl_obstack);\n \n   if (argc <= 1)\n     fatal (\"No input file name.\");"}, {"sha": "f559eb978696b8f63580a1fa095d757075a9a097", "filename": "gcc/genemit.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -23,15 +23,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n \n static int max_opno;\n static int max_dup_opno;\n@@ -782,7 +776,6 @@ main (argc, argv)\n   rtx desc;\n \n   progname = \"genemit\";\n-  obstack_init (rtl_obstack);\n \n   if (argc <= 1)\n     fatal (\"No input file name.\");"}, {"sha": "1b653600c434960616f089cc043d59ac1f93b715", "filename": "gcc/genextract.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -23,16 +23,10 @@ Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"insn-config.h\"\n #include \"gensupport.h\"\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n \n /* This structure contains all the information needed to describe one\n    set of extractions methods.  Each method may be used by more than \n@@ -396,7 +390,6 @@ main (argc, argv)\n   const char *name;\n \n   progname = \"genextract\";\n-  obstack_init (rtl_obstack);\n \n   if (argc <= 1)\n     fatal (\"No input file name.\");"}, {"sha": "e96ac618e4a8a8246806dd1f03c1dee6a763ea08", "filename": "gcc/genflags.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenflags.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenflags.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenflags.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -29,8 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n \n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n@@ -230,7 +228,6 @@ main (argc, argv)\n   rtx *insn_ptr;\n \n   progname = \"genflags\";\n-  obstack_init (rtl_obstack);\n   obstack_init (&call_obstack);\n   obstack_init (&normal_obstack);\n "}, {"sha": "4bcabc61a5cb78498a4dd8a1ed7cd6839daeaf93", "filename": "gcc/genopinit.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -23,15 +23,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n \n /* Many parts of GCC use arrays that are indexed by machine mode and\n    contain the insn codes for pattern in the MD file that perform a given\n@@ -316,7 +310,6 @@ main (argc, argv)\n   rtx desc;\n \n   progname = \"genopinit\";\n-  obstack_init (rtl_obstack);\n \n   if (argc <= 1)\n     fatal (\"No input file name.\");"}, {"sha": "ce93da798361b9e0185bfeefc99c1bbd2e289b8a", "filename": "gcc/genoutput.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -88,7 +88,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n@@ -98,12 +97,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define MAX_MAX_OPERANDS 40\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n-\n static int n_occurrences\t\tPARAMS ((int, const char *));\n static const char *strip_whitespace\tPARAMS ((const char *));\n \n@@ -906,7 +899,6 @@ main (argc, argv)\n   rtx desc;\n \n   progname = \"genoutput\";\n-  obstack_init (rtl_obstack);\n \n   if (argc <= 1)\n     fatal (\"No input file name.\");"}, {"sha": "dc90c73e2c8336c83997dc2fb6a909ded347140b", "filename": "gcc/genpeep.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -23,15 +23,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n \n /* While tree-walking an instruction pattern, we keep a chain\n    of these `struct link's to record how to get down to the\n@@ -413,7 +407,6 @@ main (argc, argv)\n   max_opno = -1;\n \n   progname = \"genpeep\";\n-  obstack_init (rtl_obstack);\n \n   if (argc <= 1)\n     fatal (\"No input file name.\");"}, {"sha": "3cc438ca49b087b486b1510755585809205fbeb4", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 34, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -53,19 +53,13 @@\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n-#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n+\n #define OUTPUT_LABEL(INDENT_STRING, LABEL_NUMBER) \\\n   printf(\"%sL%d: ATTRIBUTE_UNUSED_LABEL\\n\", (INDENT_STRING), (LABEL_NUMBER))\n \n-static struct obstack obstack;\n-struct obstack *rtl_obstack = &obstack;\n-\n-#define obstack_chunk_alloc xmalloc\n-#define obstack_chunk_free free\n-\n /* Holds an array of names indexed by insn_code_number.  */\n static char **insn_name_ptr = 0;\n static int insn_name_ptr_size = 0;\n@@ -231,9 +225,6 @@ static const char * special_mode_pred_table[] = {\n #define NUM_SPECIAL_MODE_PREDS \\\n   (sizeof (special_mode_pred_table) / sizeof (special_mode_pred_table[0]))\n \n-static void message_with_line\n-  PARAMS ((int, const char *, ...)) ATTRIBUTE_PRINTF_2;\n-\n static struct decision *new_decision\n   PARAMS ((const char *, struct decision_head *));\n static struct decision_test *new_decision_test\n@@ -317,29 +308,6 @@ extern void debug_decision\n extern void debug_decision_list\n   PARAMS ((struct decision *));\n \f\n-static void\n-message_with_line VPARAMS ((int lineno, const char *msg, ...))\n-{\n-#ifndef ANSI_PROTOTYPES\n-  int lineno;\n-  const char *msg;\n-#endif\n-  va_list ap;\n-\n-  VA_START (ap, msg);\n-\n-#ifndef ANSI_PROTOTYPES\n-  lineno = va_arg (ap, int);\n-  msg = va_arg (ap, const char *);\n-#endif\n-\n-  fprintf (stderr, \"%s:%d: \", read_rtx_filename, lineno);\n-  vfprintf (stderr, msg, ap);\n-  fputc ('\\n', stderr);\n-\n-  va_end (ap);\n-}\n-\f\n /* Create a new node in sequence after LAST.  */\n \n static struct decision *\n@@ -2509,7 +2477,6 @@ main (argc, argv)\n   register int c;\n \n   progname = \"genrecog\";\n-  obstack_init (rtl_obstack);\n \n   memset (&recog_tree, 0, sizeof recog_tree);\n   memset (&split_tree, 0, sizeof split_tree);"}, {"sha": "2de3f4481c3a57463f23477b4ae5f50333b541a3", "filename": "gcc/gensupport.c", "status": "modified", "additions": 35, "deletions": 7, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -1,6 +1,4 @@\n-/* Read machine descriptions, return top level rtx for use by the\n-   various generation passes. \n-\n+/* Support routines for the various generation passes.\n    Copyright (C) 2000 Free Software Foundation, Inc.\n \n    This file is part of GNU CC.\n@@ -23,9 +21,17 @@\n #include \"hconfig.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"obstack.h\"\n #include \"errors.h\"\n #include \"gensupport.h\"\n \n+\n+static struct obstack obstack;\n+struct obstack *rtl_obstack = &obstack;\n+\n+#define obstack_chunk_alloc xmalloc\n+#define obstack_chunk_free free\n+\n static FILE *input_file;\n \n static int sequence_num;\n@@ -39,7 +45,30 @@ static struct queue_elem *rtx_ready_queue;\n \n static void remove_constraints PARAMS ((rtx));\n static void process_rtx PARAMS ((rtx *));\n+\f\n+void\n+message_with_line VPARAMS ((int lineno, const char *msg, ...))\n+{\n+#ifndef ANSI_PROTOTYPES\n+  int lineno;\n+  const char *msg;\n+#endif\n+  va_list ap;\n+\n+  VA_START (ap, msg);\n+\n+#ifndef ANSI_PROTOTYPES\n+  lineno = va_arg (ap, int);\n+  msg = va_arg (ap, const char *);\n+#endif\n \n+  fprintf (stderr, \"%s:%d: \", read_rtx_filename, lineno);\n+  vfprintf (stderr, msg, ap);\n+  fputc ('\\n', stderr);\n+\n+  va_end (ap);\n+}\n+\f\n /* Recursively remove constraints from an rtx.  */\n \n static void\n@@ -125,23 +154,22 @@ process_rtx (desc)\n       rtx_ready_queue = elem;  \n     }\n }\n-\n+\f\n /* The entry point for initializing the reader.  */\n \n int \n init_md_reader (filename)\n     const char *filename;\n {\n-\n+  read_rtx_filename = filename;\n   input_file = fopen (filename, \"r\");\n-\n   if (input_file == 0)\n     {\n       perror (filename);\n       return FATAL_EXIT_CODE;\n     }\n \n-  read_rtx_filename = filename;\n+  obstack_init (rtl_obstack);\n   sequence_num = 0;\n   rtx_ready_queue = NULL; \n "}, {"sha": "6202f524a244f46c842e374acdc2d7d727238170", "filename": "gcc/gensupport.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgensupport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972/gcc%2Fgensupport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.h?ref=3916d6d89c004a2e8b59b99ec2dd0b7ae3a01972", "patch": "@@ -18,7 +18,11 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+struct obstack;\n+extern struct obstack *rtl_obstack;\n+\n extern int init_md_reader\tPARAMS ((const char *));\n extern rtx read_md_rtx\t\tPARAMS ((int *, int *));\n \n-\n+extern void message_with_line\tPARAMS ((int, const char *, ...))\n+     ATTRIBUTE_PRINTF_2;"}]}