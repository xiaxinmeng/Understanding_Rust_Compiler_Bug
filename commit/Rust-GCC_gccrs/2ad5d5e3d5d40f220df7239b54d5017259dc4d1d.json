{"sha": "2ad5d5e3d5d40f220df7239b54d5017259dc4d1d", "node_id": "C_kwDOANBUbNoAKDJhZDVkNWUzZDVkNDBmMjIwZGY3MjM5YjU0ZDUwMTcyNTlkYzRkMWQ", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2021-10-04T22:33:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-11T13:38:12Z"}, "message": "[Ada] Incorrect Dynamic_Predicate results for static arguments\n\ngcc/ada/\n\n\t* exp_ch6.adb (Can_Fold_Predicate_Call): Do not attempt folding\n\tif there is more than one predicate involved. Recall that\n\tpredicate aspect specification are additive, not overriding, and\n\tthat there are three different predicate\n\taspects (Dynamic_Predicate, Static_Predicate, and the\n\tGNAT-defined Predicate aspect). These various ways of\n\tintroducing multiple predicates are all checked for.  A new\n\tnested function, Augments_Other_Dynamic_Predicate, is\n\tintroduced.\n\t* sem_ch4.adb\n\t(Analyze_Indexed_Component_Form.Process_Function_Call): When\n\tdetermining whether a name like \"X (Some_Discrete_Type)\" might\n\tbe interpreted as a slice, the answer should be \"no\" if the\n\ttype/subtype name denotes the current instance of type/subtype.", "tree": {"sha": "c5c2def98d6a5e0dd9b05f762ce35ef657f0b791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5c2def98d6a5e0dd9b05f762ce35ef657f0b791"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ad5d5e3d5d40f220df7239b54d5017259dc4d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad5d5e3d5d40f220df7239b54d5017259dc4d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad5d5e3d5d40f220df7239b54d5017259dc4d1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad5d5e3d5d40f220df7239b54d5017259dc4d1d/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26a7b2ada5f9be63a99ca3eca2a66168c8b2b26f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a7b2ada5f9be63a99ca3eca2a66168c8b2b26f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a7b2ada5f9be63a99ca3eca2a66168c8b2b26f"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "3f836852f85de51dfc2eb4f4536152137ceb2a3f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad5d5e3d5d40f220df7239b54d5017259dc4d1d/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad5d5e3d5d40f220df7239b54d5017259dc4d1d/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2ad5d5e3d5d40f220df7239b54d5017259dc4d1d", "patch": "@@ -3143,13 +3143,50 @@ package body Exp_Ch6 is\n       function Can_Fold_Predicate_Call (P : Entity_Id) return Boolean is\n          Actual : Node_Id;\n \n+         function Augments_Other_Dynamic_Predicate (DP_Aspect_Spec : Node_Id)\n+           return Boolean;\n+         --  Given a Dynamic_Predicate aspect aspecification for a\n+         --  discrete type, returns True iff another DP specification\n+         --  applies (indirectly, via a subtype type or a derived type)\n+         --  to the same entity that this aspect spec applies to.\n+\n          function May_Fold (N : Node_Id) return Traverse_Result;\n          --  The predicate expression is foldable if it only contains operators\n          --  and literals. During this check, we also replace occurrences of\n          --  the formal of the constructed predicate function with the static\n          --  value of the actual. This is done on a copy of the analyzed\n          --  expression for the predicate.\n \n+         --------------------------------------\n+         -- Augments_Other_Dynamic_Predicate --\n+         --------------------------------------\n+\n+         function Augments_Other_Dynamic_Predicate (DP_Aspect_Spec : Node_Id)\n+           return Boolean\n+         is\n+            Aspect_Bearer : Entity_Id := Entity (DP_Aspect_Spec);\n+         begin\n+            loop\n+               Aspect_Bearer := Nearest_Ancestor (Aspect_Bearer);\n+\n+               if not Present (Aspect_Bearer) then\n+                  return False;\n+               end if;\n+\n+               declare\n+                  Aspect_Spec : constant Node_Id :=\n+                    Find_Aspect (Aspect_Bearer, Aspect_Dynamic_Predicate);\n+               begin\n+                  if Present (Aspect_Spec)\n+                    and then Aspect_Spec /= DP_Aspect_Spec\n+                  then\n+                     --  Found another Dynamic_Predicate aspect spec\n+                     return True;\n+                  end if;\n+               end;\n+            end loop;\n+         end Augments_Other_Dynamic_Predicate;\n+\n          --------------\n          -- May_Fold --\n          --------------\n@@ -3192,7 +3229,7 @@ package body Exp_Ch6 is\n \n          function Try_Fold is new Traverse_Func (May_Fold);\n \n-         --  Other lLocal variables\n+         --  Other Local variables\n \n          Subt   : constant Entity_Id := Etype (First_Entity (P));\n          Aspect : Node_Id;\n@@ -3220,6 +3257,11 @@ package body Exp_Ch6 is\n            or else Nkind (Actual) /= N_Integer_Literal\n            or else not Has_Dynamic_Predicate_Aspect (Subt)\n            or else No (Aspect)\n+\n+           --  Do not fold if multiple applicable predicate aspects\n+           or else Present (Find_Aspect (Subt, Aspect_Static_Predicate))\n+           or else Present (Find_Aspect (Subt, Aspect_Predicate))\n+           or else Augments_Other_Dynamic_Predicate (Aspect)\n            or else CodePeer_Mode\n          then\n             return False;"}, {"sha": "169b01b5d0c179dfb42cb28e76c4b3672a911a52", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad5d5e3d5d40f220df7239b54d5017259dc4d1d/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad5d5e3d5d40f220df7239b54d5017259dc4d1d/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=2ad5d5e3d5d40f220df7239b54d5017259dc4d1d", "patch": "@@ -2534,6 +2534,7 @@ package body Sem_Ch4 is\n               and then Is_Entity_Name (Actual)\n               and then Is_Type (Entity (Actual))\n               and then Is_Discrete_Type (Entity (Actual))\n+              and then not Is_Current_Instance (Actual)\n             then\n                Replace (N,\n                  Make_Slice (Loc,"}]}