{"sha": "b52209728c23e229bb55e858aec048da305e2c42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUyMjA5NzI4YzIzZTIyOWJiNTVlODU4YWVjMDQ4ZGEzMDVlMmM0Mg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-03-04T19:17:35Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-03-04T19:17:35Z"}, "message": "re PR target/35453 (nmmintrin.h defines macros SIDD_XXX)\n\ngcc/\n\n2008-03-04  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/35453\n\t* config/i386/smmintrin.h (SIDD_XXX): Renamed to ...\n\t(_SIDD_XXX): This.\n\ngcc/testsuite/\n\n2008-03-04  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/35453\n\t* gcc.target/i386/sse4_2-pcmpestri-1.c: Replace SIDD_XXX with\n\t_SIDD_XXX.\n\t* gcc.target/i386/sse4_2-pcmpestri-2.c: Likewise.\n\t* gcc.target/i386/sse4_2-pcmpestrm-1.c: Likewise.\n\t* gcc.target/i386/sse4_2-pcmpestrm-2.c: Likewise.\n\t* gcc.target/i386/sse4_2-pcmpistri-1.c: Likewise.\n\t* gcc.target/i386/sse4_2-pcmpistri-2.c: Likewise.\n\t* gcc.target/i386/sse4_2-pcmpistrm-1.c: Likewise.\n\t* gcc.target/i386/sse4_2-pcmpistrm-2.c: Likewise.\n\t* gcc.target/i386/sse4_2-pcmpstr.h: Likewise.\n\nFrom-SVN: r132867", "tree": {"sha": "291283a3aa946afb2c8fee57149219bc40388bca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/291283a3aa946afb2c8fee57149219bc40388bca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b52209728c23e229bb55e858aec048da305e2c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52209728c23e229bb55e858aec048da305e2c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b52209728c23e229bb55e858aec048da305e2c42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52209728c23e229bb55e858aec048da305e2c42/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74dd418cb82d8fc95d91f1c776cd54ce33773fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74dd418cb82d8fc95d91f1c776cd54ce33773fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74dd418cb82d8fc95d91f1c776cd54ce33773fa3"}], "stats": {"total": 188, "additions": 104, "deletions": 84}, "files": [{"sha": "38b3b1a6d23b2c6bfdb203b965494ca21750e628", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -1,3 +1,9 @@\n+2008-03-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/35453\n+\t* config/i386/smmintrin.h (SIDD_XXX): Renamed to ...\n+\t(_SIDD_XXX): This.\n+\n 2008-03-04  Rafael Espindola  <espindola@google.com>\n \n \t* fold-const.c (tree_unary_nonzero_warnv_p): New."}, {"sha": "08bfd107232ea347a8e29087ab9fe08b41a72555", "filename": "gcc/config/i386/smmintrin.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Fconfig%2Fi386%2Fsmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Fconfig%2Fi386%2Fsmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsmmintrin.h?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -470,30 +470,30 @@ _mm_stream_load_si128 (__m128i *__X)\n #ifdef __SSE4_2__\n \n /* These macros specify the source data format.  */\n-#define SIDD_UBYTE_OPS\t\t\t0x00\n-#define SIDD_UWORD_OPS\t\t\t0x01\n-#define SIDD_SBYTE_OPS\t\t\t0x02\n-#define SIDD_SWORD_OPS\t\t\t0x03\n+#define _SIDD_UBYTE_OPS\t\t\t0x00\n+#define _SIDD_UWORD_OPS\t\t\t0x01\n+#define _SIDD_SBYTE_OPS\t\t\t0x02\n+#define _SIDD_SWORD_OPS\t\t\t0x03\n \n /* These macros specify the comparison operation.  */\n-#define SIDD_CMP_EQUAL_ANY\t\t0x00\n-#define SIDD_CMP_RANGES\t\t\t0x04\n-#define SIDD_CMP_EQUAL_EACH\t\t0x08\n-#define SIDD_CMP_EQUAL_ORDERED\t\t0x0c\n+#define _SIDD_CMP_EQUAL_ANY\t\t0x00\n+#define _SIDD_CMP_RANGES\t\t0x04\n+#define _SIDD_CMP_EQUAL_EACH\t\t0x08\n+#define _SIDD_CMP_EQUAL_ORDERED\t\t0x0c\n \n /* These macros specify the the polarity.  */\n-#define SIDD_POSITIVE_POLARITY\t\t0x00\n-#define SIDD_NEGATIVE_POLARITY\t\t0x10\n-#define SIDD_MASKED_POSITIVE_POLARITY\t0x20\n-#define SIDD_MASKED_NEGATIVE_POLARITY\t0x30\n+#define _SIDD_POSITIVE_POLARITY\t\t0x00\n+#define _SIDD_NEGATIVE_POLARITY\t\t0x10\n+#define _SIDD_MASKED_POSITIVE_POLARITY\t0x20\n+#define _SIDD_MASKED_NEGATIVE_POLARITY\t0x30\n \n /* These macros specify the output selection in _mm_cmpXstri ().  */\n-#define SIDD_LEAST_SIGNIFICANT\t\t0x00\n-#define SIDD_MOST_SIGNIFICANT\t\t0x40\n+#define _SIDD_LEAST_SIGNIFICANT\t\t0x00\n+#define _SIDD_MOST_SIGNIFICANT\t\t0x40\n \n /* These macros specify the output selection in _mm_cmpXstrm ().  */\n-#define SIDD_BIT_MASK\t\t\t0x00\n-#define SIDD_UNIT_MASK\t\t\t0x40\n+#define _SIDD_BIT_MASK\t\t\t0x00\n+#define _SIDD_UNIT_MASK\t\t\t0x40\n \n /* Intrinsics for text/string processing.  */\n "}, {"sha": "1f364ee8570975c53564ca697889ab691d375c4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -1,3 +1,17 @@\n+2008-03-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/35453\n+\t* gcc.target/i386/sse4_2-pcmpestri-1.c: Replace SIDD_XXX with\n+\t_SIDD_XXX.\n+\t* gcc.target/i386/sse4_2-pcmpestri-2.c: Likewise.\n+\t* gcc.target/i386/sse4_2-pcmpestrm-1.c: Likewise.\n+\t* gcc.target/i386/sse4_2-pcmpestrm-2.c: Likewise.\n+\t* gcc.target/i386/sse4_2-pcmpistri-1.c: Likewise.\n+\t* gcc.target/i386/sse4_2-pcmpistri-2.c: Likewise.\n+\t* gcc.target/i386/sse4_2-pcmpistrm-1.c: Likewise.\n+\t* gcc.target/i386/sse4_2-pcmpistrm-2.c: Likewise.\n+\t* gcc.target/i386/sse4_2-pcmpstr.h: Likewise.\n+\n 2008-03-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR middle-end/35456"}, {"sha": "c84ddd3f44965b7cb4525da01a72a9fc480c86c5", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpestri-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestri-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestri-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestri-1.c?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -8,15 +8,15 @@\n #define NUM 1024\n \n #define IMM_VAL0 \\\n-  (SIDD_SBYTE_OPS | SIDD_CMP_RANGES | SIDD_MASKED_POSITIVE_POLARITY)\n+  (_SIDD_SBYTE_OPS | _SIDD_CMP_RANGES | _SIDD_MASKED_POSITIVE_POLARITY)\n #define IMM_VAL1 \\\n- (SIDD_UBYTE_OPS | SIDD_CMP_EQUAL_EACH | SIDD_NEGATIVE_POLARITY \\\n-  | SIDD_MOST_SIGNIFICANT)\n+ (_SIDD_UBYTE_OPS | _SIDD_CMP_EQUAL_EACH | _SIDD_NEGATIVE_POLARITY \\\n+  | _SIDD_MOST_SIGNIFICANT)\n #define IMM_VAL2 \\\n- (SIDD_UWORD_OPS | SIDD_CMP_EQUAL_ANY | SIDD_MASKED_NEGATIVE_POLARITY)\n+ (_SIDD_UWORD_OPS | _SIDD_CMP_EQUAL_ANY | _SIDD_MASKED_NEGATIVE_POLARITY)\n #define IMM_VAL3 \\\n-  (SIDD_SWORD_OPS | SIDD_CMP_EQUAL_ORDERED \\\n-   | SIDD_MASKED_NEGATIVE_POLARITY | SIDD_LEAST_SIGNIFICANT)\n+  (_SIDD_SWORD_OPS | _SIDD_CMP_EQUAL_ORDERED \\\n+   | _SIDD_MASKED_NEGATIVE_POLARITY | _SIDD_LEAST_SIGNIFICANT)\n \n \n static void"}, {"sha": "bc35eb7a323d4fa9d19d718c22dea195268ace43", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpestri-2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestri-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestri-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestri-2.c?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -8,15 +8,15 @@\n #define NUM 1024\n \n #define IMM_VAL0 \\\n-  (SIDD_SBYTE_OPS | SIDD_CMP_RANGES | SIDD_MASKED_POSITIVE_POLARITY)\n+  (_SIDD_SBYTE_OPS | _SIDD_CMP_RANGES | _SIDD_MASKED_POSITIVE_POLARITY)\n #define IMM_VAL1 \\\n- (SIDD_UBYTE_OPS | SIDD_CMP_EQUAL_EACH | SIDD_NEGATIVE_POLARITY \\\n-  | SIDD_MOST_SIGNIFICANT)\n+ (_SIDD_UBYTE_OPS | _SIDD_CMP_EQUAL_EACH | _SIDD_NEGATIVE_POLARITY \\\n+  | _SIDD_MOST_SIGNIFICANT)\n #define IMM_VAL2 \\\n- (SIDD_UWORD_OPS | SIDD_CMP_EQUAL_ANY | SIDD_MASKED_NEGATIVE_POLARITY)\n+ (_SIDD_UWORD_OPS | _SIDD_CMP_EQUAL_ANY | _SIDD_MASKED_NEGATIVE_POLARITY)\n #define IMM_VAL3 \\\n-  (SIDD_SWORD_OPS | SIDD_CMP_EQUAL_ORDERED \\\n-   | SIDD_MASKED_NEGATIVE_POLARITY | SIDD_LEAST_SIGNIFICANT)\n+  (_SIDD_SWORD_OPS | _SIDD_CMP_EQUAL_ORDERED \\\n+   | _SIDD_MASKED_NEGATIVE_POLARITY | _SIDD_LEAST_SIGNIFICANT)\n \n \n static void"}, {"sha": "1c75a9b2e4dbdd294f42a0eb57543643278e1723", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpestrm-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestrm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestrm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestrm-1.c?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -8,15 +8,15 @@\n #define NUM 1024\n \n #define IMM_VAL0 \\\n-  (SIDD_SBYTE_OPS | SIDD_CMP_RANGES | SIDD_MASKED_POSITIVE_POLARITY)\n+  (_SIDD_SBYTE_OPS | _SIDD_CMP_RANGES | _SIDD_MASKED_POSITIVE_POLARITY)\n #define IMM_VAL1 \\\n-  (SIDD_UBYTE_OPS | SIDD_CMP_EQUAL_EACH | SIDD_NEGATIVE_POLARITY \\\n-   | SIDD_BIT_MASK)\n+  (_SIDD_UBYTE_OPS | _SIDD_CMP_EQUAL_EACH | _SIDD_NEGATIVE_POLARITY \\\n+   | _SIDD_BIT_MASK)\n #define IMM_VAL2 \\\n-  (SIDD_UWORD_OPS | SIDD_CMP_EQUAL_ANY | SIDD_MASKED_NEGATIVE_POLARITY)\n+  (_SIDD_UWORD_OPS | _SIDD_CMP_EQUAL_ANY | _SIDD_MASKED_NEGATIVE_POLARITY)\n #define IMM_VAL3 \\\n-  (SIDD_SWORD_OPS | SIDD_CMP_EQUAL_ORDERED \\\n-   | SIDD_MASKED_NEGATIVE_POLARITY | SIDD_UNIT_MASK)\n+  (_SIDD_SWORD_OPS | _SIDD_CMP_EQUAL_ORDERED \\\n+   | _SIDD_MASKED_NEGATIVE_POLARITY | _SIDD_UNIT_MASK)\n \n \n static void"}, {"sha": "baf377c3aad2827421fbd93049091793faefefaf", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpestrm-2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestrm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestrm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpestrm-2.c?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -8,15 +8,15 @@\n #define NUM 1024\n \n #define IMM_VAL0 \\\n-  (SIDD_SBYTE_OPS | SIDD_CMP_RANGES | SIDD_MASKED_POSITIVE_POLARITY)\n+  (_SIDD_SBYTE_OPS | _SIDD_CMP_RANGES | _SIDD_MASKED_POSITIVE_POLARITY)\n #define IMM_VAL1 \\\n-  (SIDD_UBYTE_OPS | SIDD_CMP_EQUAL_EACH | SIDD_NEGATIVE_POLARITY \\\n-   | SIDD_BIT_MASK)\n+  (_SIDD_UBYTE_OPS | _SIDD_CMP_EQUAL_EACH | _SIDD_NEGATIVE_POLARITY \\\n+   | _SIDD_BIT_MASK)\n #define IMM_VAL2 \\\n-  (SIDD_UWORD_OPS | SIDD_CMP_EQUAL_ANY | SIDD_NEGATIVE_POLARITY)\n+  (_SIDD_UWORD_OPS | _SIDD_CMP_EQUAL_ANY | _SIDD_NEGATIVE_POLARITY)\n #define IMM_VAL3 \\\n-  (SIDD_SWORD_OPS | SIDD_CMP_EQUAL_ORDERED \\\n-   | SIDD_MASKED_NEGATIVE_POLARITY | SIDD_UNIT_MASK)\n+  (_SIDD_SWORD_OPS | _SIDD_CMP_EQUAL_ORDERED \\\n+   | _SIDD_MASKED_NEGATIVE_POLARITY | _SIDD_UNIT_MASK)\n \n static void\n sse4_2_test (void)"}, {"sha": "9dbeb30b01c9adad435c840edf7357395fe479cc", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpistri-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistri-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistri-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistri-1.c?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -8,15 +8,15 @@\n #define NUM 1024\n \n #define IMM_VAL0 \\\n-  (SIDD_SBYTE_OPS | SIDD_CMP_RANGES | SIDD_MASKED_POSITIVE_POLARITY)\n+  (_SIDD_SBYTE_OPS | _SIDD_CMP_RANGES | _SIDD_MASKED_POSITIVE_POLARITY)\n #define IMM_VAL1 \\\n- (SIDD_UBYTE_OPS | SIDD_CMP_EQUAL_EACH | SIDD_NEGATIVE_POLARITY \\\n-  | SIDD_MOST_SIGNIFICANT)\n+ (_SIDD_UBYTE_OPS | _SIDD_CMP_EQUAL_EACH | _SIDD_NEGATIVE_POLARITY \\\n+  | _SIDD_MOST_SIGNIFICANT)\n #define IMM_VAL2 \\\n- (SIDD_UWORD_OPS | SIDD_CMP_EQUAL_ANY | SIDD_MASKED_NEGATIVE_POLARITY)\n+ (_SIDD_UWORD_OPS | _SIDD_CMP_EQUAL_ANY | _SIDD_MASKED_NEGATIVE_POLARITY)\n #define IMM_VAL3 \\\n-  (SIDD_SWORD_OPS | SIDD_CMP_EQUAL_ORDERED \\\n-   | SIDD_MASKED_NEGATIVE_POLARITY | SIDD_MOST_SIGNIFICANT)\n+  (_SIDD_SWORD_OPS | _SIDD_CMP_EQUAL_ORDERED \\\n+   | _SIDD_MASKED_NEGATIVE_POLARITY | _SIDD_MOST_SIGNIFICANT)\n \n \n static void"}, {"sha": "6bad02e9d078201251c321a126532b3e1eb9013c", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpistri-2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistri-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistri-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistri-2.c?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -8,15 +8,15 @@\n #define NUM 1024\n \n #define IMM_VAL0 \\\n-  (SIDD_SBYTE_OPS | SIDD_CMP_RANGES | SIDD_MASKED_POSITIVE_POLARITY)\n+  (_SIDD_SBYTE_OPS | _SIDD_CMP_RANGES | _SIDD_MASKED_POSITIVE_POLARITY)\n #define IMM_VAL1 \\\n- (SIDD_UBYTE_OPS | SIDD_CMP_EQUAL_EACH | SIDD_NEGATIVE_POLARITY \\\n-  | SIDD_MOST_SIGNIFICANT)\n+ (_SIDD_UBYTE_OPS | _SIDD_CMP_EQUAL_EACH | _SIDD_NEGATIVE_POLARITY \\\n+  | _SIDD_MOST_SIGNIFICANT)\n #define IMM_VAL2 \\\n- (SIDD_UWORD_OPS | SIDD_CMP_EQUAL_ANY | SIDD_MASKED_NEGATIVE_POLARITY)\n+ (_SIDD_UWORD_OPS | _SIDD_CMP_EQUAL_ANY | _SIDD_MASKED_NEGATIVE_POLARITY)\n #define IMM_VAL3 \\\n-  (SIDD_SWORD_OPS | SIDD_CMP_EQUAL_ORDERED \\\n-   | SIDD_MASKED_NEGATIVE_POLARITY | SIDD_MOST_SIGNIFICANT)\n+  (_SIDD_SWORD_OPS | _SIDD_CMP_EQUAL_ORDERED \\\n+   | _SIDD_MASKED_NEGATIVE_POLARITY | _SIDD_MOST_SIGNIFICANT)\n \n \n static void"}, {"sha": "3975728c09dae6fb6a745c9c656aad688921bbd0", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpistrm-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistrm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistrm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistrm-1.c?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -8,15 +8,15 @@\n #define NUM 1024\n \n #define IMM_VAL0 \\\n-  (SIDD_SBYTE_OPS | SIDD_CMP_RANGES | SIDD_MASKED_POSITIVE_POLARITY)\n+  (_SIDD_SBYTE_OPS | _SIDD_CMP_RANGES | _SIDD_MASKED_POSITIVE_POLARITY)\n #define IMM_VAL1 \\\n-  (SIDD_UBYTE_OPS | SIDD_CMP_EQUAL_EACH | SIDD_NEGATIVE_POLARITY \\\n-   | SIDD_BIT_MASK)\n+  (_SIDD_UBYTE_OPS | _SIDD_CMP_EQUAL_EACH | _SIDD_NEGATIVE_POLARITY \\\n+   | _SIDD_BIT_MASK)\n #define IMM_VAL2 \\\n-  (SIDD_UWORD_OPS | SIDD_CMP_EQUAL_ANY | SIDD_MASKED_NEGATIVE_POLARITY)\n+  (_SIDD_UWORD_OPS | _SIDD_CMP_EQUAL_ANY | _SIDD_MASKED_NEGATIVE_POLARITY)\n #define IMM_VAL3 \\\n-  (SIDD_SWORD_OPS | SIDD_CMP_EQUAL_ORDERED \\\n-   | SIDD_MASKED_NEGATIVE_POLARITY | SIDD_UNIT_MASK)\n+  (_SIDD_SWORD_OPS | _SIDD_CMP_EQUAL_ORDERED \\\n+   | _SIDD_MASKED_NEGATIVE_POLARITY | _SIDD_UNIT_MASK)\n \n \n static void"}, {"sha": "6d3a23a75dbba5c4b1820acad115ae967b4db74b", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpistrm-2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistrm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistrm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpistrm-2.c?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -8,15 +8,15 @@\n #define NUM 1024\n \n #define IMM_VAL0 \\\n-  (SIDD_SBYTE_OPS | SIDD_CMP_RANGES | SIDD_MASKED_POSITIVE_POLARITY)\n+  (_SIDD_SBYTE_OPS | _SIDD_CMP_RANGES | _SIDD_MASKED_POSITIVE_POLARITY)\n #define IMM_VAL1 \\\n-  (SIDD_UBYTE_OPS | SIDD_CMP_EQUAL_EACH | SIDD_NEGATIVE_POLARITY \\\n-   | SIDD_BIT_MASK)\n+  (_SIDD_UBYTE_OPS | _SIDD_CMP_EQUAL_EACH | _SIDD_NEGATIVE_POLARITY \\\n+   | _SIDD_BIT_MASK)\n #define IMM_VAL2 \\\n-  (SIDD_UWORD_OPS | SIDD_CMP_EQUAL_ANY | SIDD_MASKED_NEGATIVE_POLARITY)\n+  (_SIDD_UWORD_OPS | _SIDD_CMP_EQUAL_ANY | _SIDD_MASKED_NEGATIVE_POLARITY)\n #define IMM_VAL3 \\\n-  (SIDD_SWORD_OPS | SIDD_CMP_EQUAL_ORDERED \\\n-   | SIDD_POSITIVE_POLARITY | SIDD_UNIT_MASK)\n+  (_SIDD_SWORD_OPS | _SIDD_CMP_EQUAL_ORDERED \\\n+   | _SIDD_POSITIVE_POLARITY | _SIDD_UNIT_MASK)\n \n static void\n sse4_2_test (void)"}, {"sha": "999b5c8edabd926d042aeca3fa2127070a30d806", "filename": "gcc/testsuite/gcc.target/i386/sse4_2-pcmpstr.h", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpstr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52209728c23e229bb55e858aec048da305e2c42/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpstr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_2-pcmpstr.h?ref=b52209728c23e229bb55e858aec048da305e2c42", "patch": "@@ -42,14 +42,14 @@ override_invalid (unsigned char res[16][16], int la, int lb,\n       else if (i >= la)\n \tswitch ((mode & 0x0C))\n \t  {\n-\t  case SIDD_CMP_EQUAL_ANY:\n-\t  case SIDD_CMP_RANGES:\n+\t  case _SIDD_CMP_EQUAL_ANY:\n+\t  case _SIDD_CMP_RANGES:\n \t    res[j][i] = 0;\n \t    break;\n-\t  case SIDD_CMP_EQUAL_EACH:\n+\t  case _SIDD_CMP_EQUAL_EACH:\n \t    res[j][i] = (j >= lb) ? 1: 0;\n \t    break;\n-\t  case SIDD_CMP_EQUAL_ORDERED:\n+\t  case _SIDD_CMP_EQUAL_ORDERED:\n \t    res[j][i] = 1;\n \t    break;\n           }\n@@ -73,8 +73,8 @@ calc_matrix (__m128i a, int la, __m128i b, int lb, const int mode,\n \n   switch ((mode & 3))\n     {\n-    case SIDD_UBYTE_OPS:\n-      if ((mode & 0x0C) == SIDD_CMP_RANGES)\n+    case _SIDD_UBYTE_OPS:\n+      if ((mode & 0x0C) == _SIDD_CMP_RANGES)\n \t{\n \t  PCMPSTR_RNG (d.uc, s.uc, res);\n \t}\n@@ -83,8 +83,8 @@ calc_matrix (__m128i a, int la, __m128i b, int lb, const int mode,\n \t  PCMPSTR_EQ (d.uc, s.uc, res);\n \t}\n       break;\n-    case SIDD_UWORD_OPS:\n-      if ((mode & 0x0C) == SIDD_CMP_RANGES)\n+    case _SIDD_UWORD_OPS:\n+      if ((mode & 0x0C) == _SIDD_CMP_RANGES)\n \t{\n \t  PCMPSTR_RNG (d.us, s.us, res);\n \t}\n@@ -93,8 +93,8 @@ calc_matrix (__m128i a, int la, __m128i b, int lb, const int mode,\n \t  PCMPSTR_EQ (d.us, s.us, res);\n \t}\n       break;\n-    case SIDD_SBYTE_OPS:\n-      if ((mode & 0x0C) == SIDD_CMP_RANGES)\n+    case _SIDD_SBYTE_OPS:\n+      if ((mode & 0x0C) == _SIDD_CMP_RANGES)\n \t{\n \t  PCMPSTR_RNG (d.sc, s.sc, res);\n \t}\n@@ -103,8 +103,8 @@ calc_matrix (__m128i a, int la, __m128i b, int lb, const int mode,\n \t  PCMPSTR_EQ (d.sc, s.sc, res);\n \t}\n       break;\n-    case SIDD_SWORD_OPS:\n-      if ((mode & 0x0C) == SIDD_CMP_RANGES)\n+    case _SIDD_SWORD_OPS:\n+      if ((mode & 0x0C) == _SIDD_CMP_RANGES)\n \t{\n \t  PCMPSTR_RNG (d.ss, s.ss, res);\n \t}\n@@ -144,27 +144,27 @@ calc_res (__m128i a, int la, __m128i b, int lb, const int mode)\n \n   switch ((mode & 0x0C))\n     {\n-    case SIDD_CMP_EQUAL_ANY:\n+    case _SIDD_CMP_EQUAL_ANY:\n       for (i = 0; i < dim; i++)\n \tfor (j = 0; j < dim; j++)\n \t  if (mtx[i][j])\n \t    res |= (1 << i);\n       break;\n \n-     case SIDD_CMP_RANGES:\n+     case _SIDD_CMP_RANGES:\n       for (i = 0; i < dim; i += 2)\n \tfor(j = 0; j < dim; j++)\n \t  if (mtx[j][i] && mtx[j][i+1])\n \t    res |= (1 << j);\n       break;\n \n-     case SIDD_CMP_EQUAL_EACH:\n+     case _SIDD_CMP_EQUAL_EACH:\n       for(i = 0; i < dim; i++)\n \tif (mtx[i][i])\n \t  res |= (1 << i);\n       break;\n \n-     case SIDD_CMP_EQUAL_ORDERED:\n+     case _SIDD_CMP_EQUAL_ORDERED:\n       for(i = 0; i < dim; i++)\n \t{\n \t  unsigned char val = 1;\n@@ -182,15 +182,15 @@ calc_res (__m128i a, int la, __m128i b, int lb, const int mode)\n \n   switch ((mode & 0x30))\n     {\n-    case SIDD_POSITIVE_POLARITY:\n-    case SIDD_MASKED_POSITIVE_POLARITY:\n+    case _SIDD_POSITIVE_POLARITY:\n+    case _SIDD_MASKED_POSITIVE_POLARITY:\n       break;\n \n-    case SIDD_NEGATIVE_POLARITY:\n+    case _SIDD_NEGATIVE_POLARITY:\n       res ^= -1;\n       break;\n \n-    case SIDD_MASKED_NEGATIVE_POLARITY:\n+    case _SIDD_MASKED_NEGATIVE_POLARITY:\n       for (i = 0; i < lb; i++)\n \tif (res & (1 << i))\n \t  res &= ~(1 << i);"}]}