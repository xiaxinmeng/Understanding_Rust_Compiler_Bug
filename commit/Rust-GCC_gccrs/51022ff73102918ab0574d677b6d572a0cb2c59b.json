{"sha": "51022ff73102918ab0574d677b6d572a0cb2c59b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwMjJmZjczMTAyOTE4YWIwNTc0ZDY3N2I2ZDU3MmEwY2IyYzU5Yg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-10-26T10:37:22Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-10-26T10:37:22Z"}, "message": "Fix race on temp file in gfortran tests.\n\n2015-10-26  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gfortran.dg/chmod_1.f90: Add suffix to the temporary filename to\n\tmake it unique per testcase.\n\t* gfortran.dg/chmod_2.f90: Likewise.\n\t* gfortran.dg/chmod_3.f90: Likewise.\n\t* gfortran.dg/direct_io_8.f90: Likewise.\n\t* gfortran.dg/f2003_inquire_1.f03: Likewise.\n\t* gfortran.dg/f2003_io_1.f03: Likewise.\n\t* gfortran.dg/f2003_io_2.f03: Likewise.\n\t* gfortran.dg/f2003_io_8.f03: Likewise.\n\t* gfortran.dg/inquire_size.f90: Likewise.\n\t* gfortran.dg/namelist_66.f90: Likewise.\n\t* gfortran.dg/namelist_82.f90: Likewise.\n\t* gfortran.dg/namelist_87.f90: Likewise.\n\t* gfortran.dg/open_negative_unit_1.f90: Likewise.\n\t* gfortran.dg/open_new.f90: Likewise.\n\t* gfortran.dg/stat_1.f90: Likewise.\n\t* gfortran.dg/stat_2.f90: Likewise.\n\t* gfortran.dg/streamio_15.f90: Likewise.\n\t* gfortran.dg/unf_read_corrupted_1.f90: Likewise.\n\nFrom-SVN: r229319", "tree": {"sha": "ed1639be7bf1bf285c8f5af16d4ec773079d92a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed1639be7bf1bf285c8f5af16d4ec773079d92a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51022ff73102918ab0574d677b6d572a0cb2c59b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51022ff73102918ab0574d677b6d572a0cb2c59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51022ff73102918ab0574d677b6d572a0cb2c59b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51022ff73102918ab0574d677b6d572a0cb2c59b/comments", "author": null, "committer": null, "parents": [{"sha": "a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4"}], "stats": {"total": 78, "additions": 50, "deletions": 28}, "files": [{"sha": "73e0a39434a7f635e48931a4d69e66d22bcd2d7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -1,3 +1,25 @@\n+2015-10-26  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gfortran.dg/chmod_1.f90: Add suffix to the temporary filename to\n+\tmake it unique per testcase.\n+\t* gfortran.dg/chmod_2.f90: Likewise.\n+\t* gfortran.dg/chmod_3.f90: Likewise.\n+\t* gfortran.dg/direct_io_8.f90: Likewise.\n+\t* gfortran.dg/f2003_inquire_1.f03: Likewise.\n+\t* gfortran.dg/f2003_io_1.f03: Likewise.\n+\t* gfortran.dg/f2003_io_2.f03: Likewise.\n+\t* gfortran.dg/f2003_io_8.f03: Likewise.\n+\t* gfortran.dg/inquire_size.f90: Likewise.\n+\t* gfortran.dg/namelist_66.f90: Likewise.\n+\t* gfortran.dg/namelist_82.f90: Likewise.\n+\t* gfortran.dg/namelist_87.f90: Likewise.\n+\t* gfortran.dg/open_negative_unit_1.f90: Likewise.\n+\t* gfortran.dg/open_new.f90: Likewise.\n+\t* gfortran.dg/stat_1.f90: Likewise.\n+\t* gfortran.dg/stat_2.f90: Likewise.\n+\t* gfortran.dg/streamio_15.f90: Likewise.\n+\t* gfortran.dg/unf_read_corrupted_1.f90: Likewise.\n+\n 2015-10-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR middle-end/67989"}, {"sha": "452b333dc35f6bd13686758e8fc91aba66822309", "filename": "gcc/testsuite/gfortran.dg/chmod_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_1.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -2,7 +2,7 @@\n ! { dg-options \"-std=gnu\" }\n ! See PR38956.  Test fails on cygwin when user has Administrator rights\n   implicit none\n-  character(len=*), parameter :: n = \"foobar_file\"\n+  character(len=*), parameter :: n = \"foobar_file_chmod_1\"\n   integer :: i\n \n   open (10,file=n)"}, {"sha": "68ff17d6cbffec9d5398ac6aeffeacc44dd62a49", "filename": "gcc/testsuite/gfortran.dg/chmod_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_2.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -2,7 +2,7 @@\n ! { dg-options \"-std=gnu\" }\n ! See PR38956.  Test fails on cygwin when user has Administrator rights\n   implicit none\n-  character(len=*), parameter :: n = \"foobar_file\"\n+  character(len=*), parameter :: n = \"foobar_file_chmod_2\"\n   integer :: i\n \n   open (10,file=n)"}, {"sha": "5df752844a86cd4a3aba3f7fec10301f8b0c44a0", "filename": "gcc/testsuite/gfortran.dg/chmod_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchmod_3.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -2,7 +2,7 @@\n ! { dg-options \"-std=gnu -fdefault-integer-8\" }\n ! See PR38956.  Test fails on cygwin when user has Administrator rights\n   implicit none\n-  character(len=*), parameter :: n = \"foobar_file\"\n+  character(len=*), parameter :: n = \"foobar_file_chmod_3\"\n   integer :: i\n \n   open (10,file=n)"}, {"sha": "87a8a6b54e344c632b8f521de8d4e2992ae49893", "filename": "gcc/testsuite/gfortran.dg/direct_io_8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdirect_io_8.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -7,7 +7,7 @@ program main\n   i=44\n   ir = -42\n \n-  open(11,file=\"foo.dat\")\n+  open(11,file=\"foo_direct_io_8.dat\")\n   ! Try a direct access read on a formatted sequential rile\n   READ (11, REC = I, ERR = 99) TEMP_CHANGES\n   call abort"}, {"sha": "87ddf59c4a4fddfab2bd9481177011818150f44f", "filename": "gcc/testsuite/gfortran.dg/f2003_inquire_1.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_inquire_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_inquire_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_inquire_1.f03?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -4,7 +4,7 @@\n integer :: vsize, vid\n logical :: vpending\n \n-open(10, file='mydata', asynchronous=\"yes\", blank=\"null\", &\n+open(10, file='mydata_f2003_inquire_1', asynchronous=\"yes\", blank=\"null\", &\n & decimal=\"comma\", encoding=\"utf-8\", sign=\"plus\")\n \n inquire(unit=10, round=sround, sign=ssign, size=vsize, id=vid, &"}, {"sha": "2a2294fa21dfdb30ce26404ff06904b670a6837c", "filename": "gcc/testsuite/gfortran.dg/f2003_io_1.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -8,7 +8,7 @@\n \n a = 23.45\n b = 0.0\n-open(10, file='mydata', asynchronous=\"yes\", blank=\"null\")\n+open(10, file='mydata_f2003_io_1', asynchronous=\"yes\", blank=\"null\")\n \n write(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"comma\", id=j) a\n rewind(10)"}, {"sha": "599eb5b181f76a42c0440bf27f1fac80407d8c77", "filename": "gcc/testsuite/gfortran.dg/f2003_io_2.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_2.f03?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -7,7 +7,7 @@\n real, dimension(10) :: a, b\n \n a = 43.21\n-open(10, file='mydata', asynchronous=\"yes\")\n+open(10, file='mydata_f2003_io_2', asynchronous=\"yes\")\n write(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"comma\") a\n rewind(10)\n read(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"comma\", id=idvar) b"}, {"sha": "4d2f002fd0e618c9081d16d096b76208a12e9925", "filename": "gcc/testsuite/gfortran.dg/f2003_io_8.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_8.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_8.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_8.f03?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -6,7 +6,7 @@\n integer :: istat, j\n character(25) :: msg\n \n-open(10, file='mydata', asynchronous=\"yes\", blank=\"null\")\n+open(10, file='mydata_f2003_io_8', asynchronous=\"yes\", blank=\"null\")\n write(10,'(10f8.3)', asynchronous='no', decimal=\"comma\", id=j) a ! { dg-error \"must be with ASYNCHRONOUS=\" }\n read(10,'(10f8.3)', id=j, decimal=\"comma\", blank=\"zero\") b ! { dg-error \"must be with ASYNCHRONOUS=\" }\n read(10,'(10f8.3)', asynchronous=msg, decimal=\"comma\", blank=\"zero\") b ! { dg-error \"must be an initialization expression\" }"}, {"sha": "ce2db48e725fa12ec9cbc5f7b2a3d47fa397c08d", "filename": "gcc/testsuite/gfortran.dg/inquire_size.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_size.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_size.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_size.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -4,7 +4,7 @@\n character(30) :: aname = \"noname\"\n logical :: is_named\n \n-open(25, file=\"testfile\", status=\"replace\", access=\"stream\", form=\"unformatted\")\n+open(25, file=\"testfile_inquire_size\", status=\"replace\", access=\"stream\", form=\"unformatted\")\n do i=1,100\n   write(25) i, \"abcdefghijklmnopqrstuvwxyz\"\n enddo\n@@ -14,16 +14,16 @@\n \n inquire(unit=25, named=is_named, name=aname, size=i)\n if (.not.is_named) call abort\n-if (aname /= \"testfile\") call abort\n+if (aname /= \"testfile_inquire_size\") call abort\n if (i /= 3000) call abort\n \n-inquire(file=\"testfile\", size=i)\n+inquire(file=\"testfile_inquire_size\", size=i)\n if (.not.is_named) call abort\n-if (aname /= \"testfile\") call abort\n+if (aname /= \"testfile_inquire_size\") call abort\n if (i /= 3000) call abort\n \n close(25, status=\"delete\")\n-inquire(file=\"testfile\", size=i)\n+inquire(file=\"testfile_inquire_size\", size=i)\n if (i /= -1)  call abort\n end\n "}, {"sha": "436304e26765932d9a0364c717ccda9892cc5e43", "filename": "gcc/testsuite/gfortran.dg/namelist_66.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_66.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_66.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_66.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -17,7 +17,7 @@\n type(qptracer) , dimension(3) :: qtracer\n namelist/naml2/  qtracer\n \n-open (99, file='nml.dat', status=\"replace\")\n+open (99, file='nml_66.dat', status=\"replace\")\n write(99,*) \"&naml1\"\n write(99,*) \"   tracer(1)   = 'aa', .true.\"\n write(99,*) \"   tracer(2)   = 'bb', .true.\""}, {"sha": "aae700f686da105203b6d3e725587520741c94a5", "filename": "gcc/testsuite/gfortran.dg/namelist_82.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_82.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_82.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_82.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -10,7 +10,7 @@\n \n tracer(:) = ptracer('XXX', .false.)\n \n-open (99, file='nml.dat', status=\"replace\")\n+open (99, file='nml_82.dat', status=\"replace\")\n write(99,*) \"&naml1\"\n !write(99,*) \"   tracer(2)   = 'bb' , .true.\"\n write(99,*) \"   tracer(:)   = 'aa' , .true.\""}, {"sha": "c19d106d68f0d33151537ef1d976f1cdeb37a882", "filename": "gcc/testsuite/gfortran.dg/namelist_87.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_87.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_87.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_87.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -30,7 +30,7 @@\n character(3) :: c3 = 'ZZZ'\n namelist /nml/ i, r1,r2,r3,r4,r5,c,ll,c1,c2,c3\n \n-open (99, file='nml.dat', status=\"replace\")\n+open (99, file='nml_87.dat', status=\"replace\")\n write(99,*) \"&nml\"\n write(99,*) \"  i=42!11\"         ! Fixed BUG: wrong result: Unmodified, no error\n write(99,*) \"  r1=43!11\"        ! Fixed BUG: wrong result: Unmodified, no error"}, {"sha": "93ea1f12178f132d53cc541c5c0dc64949e6296f", "filename": "gcc/testsuite/gfortran.dg/open_negative_unit_1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen_negative_unit_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen_negative_unit_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen_negative_unit_1.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -9,22 +9,22 @@ program nutest\n     logical l\n     integer id, ios\n \n-    open(newunit=id, file=\"foo.txt\", iostat=ios)\n+    open(newunit=id, file=\"foo_open_negative_unit_1.txt\", iostat=ios)\n     if (ios /= 0) call abort\n \n     open(id, file=\"bar.txt\", iostat=ios)\n     if (ios /= 0) call abort\n \n     close(id, status=\"delete\")\n \n-    open(unit=10, file=\"foo.txt\", status=\"old\", iostat=ios)\n+    open(unit=10, file=\"foo_open_negative_unit_1.txt\", status=\"old\", iostat=ios)\n     if (ios /= 0) call abort\n \n     close(10, status=\"delete\")\n \n-    open(-10, file=\"foo.txt\", iostat=ios)\n+    open(-10, file=\"foo_open_negative_unit_1.txt\", iostat=ios)\n     if (ios == 0) call abort\n \n-    inquire(file=\"foo.txt\", exist=l)\n+    inquire(file=\"foo_open_negative_unit_1.txt\", exist=l)\n     if (l) call abort\n end program nutest"}, {"sha": "6f36ca04d31e0f5630d072ad105a94a5763c13c5", "filename": "gcc/testsuite/gfortran.dg/open_new.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen_new.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen_new.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fopen_new.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -3,9 +3,9 @@\n !            status=\"new\" is an error\n program main\n   nout = 10\n-  open(nout, file=\"foo.dat\", status=\"replace\")     ! make sure foo.dat exists\n+  open(nout, file=\"foo_open_new.dat\", status=\"replace\")     ! make sure foo_open_new.dat exists\n   close(nout)\n-  open(nout, file=\"foo.dat\", status=\"new\",err=100)\n+  open(nout, file=\"foo_open_new.dat\", status=\"new\",err=100)\n   call abort                 ! This should never happen\n-100 call unlink (\"foo.dat\")\n+100 call unlink (\"foo_open_new.dat\")\n end program main"}, {"sha": "ec582f904a50ac5b31134158d887213e6c7edaa5", "filename": "gcc/testsuite/gfortran.dg/stat_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fstat_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fstat_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstat_1.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do run }\n ! { dg-skip-if \"\" { *-*-mingw* spu-*-* } { \"*\" } { \"\" } }\n ! { dg-options \"-std=gnu\" }\n-  character(len=*), parameter :: f = \"testfile\"\n+  character(len=*), parameter :: f = \"testfile_stat_1\"\n   integer :: s1(13), r1, s2(13), r2, s3(13), r3, d(13), rd\n   \n   open (10,file=f)"}, {"sha": "a3eb6b2d475aeb545d55ff504e3f81df4dfa8ed7", "filename": "gcc/testsuite/gfortran.dg/stat_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fstat_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fstat_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstat_2.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do run }\n ! { dg-skip-if \"\" { *-*-mingw* spu-*-* } { \"*\" } { \"\" } }\n ! { dg-options \"-std=gnu\" }\n-  character(len=*), parameter :: f = \"testfile\"\n+  character(len=*), parameter :: f = \"testfile_stat_2\"\n   integer :: s1(13), r1, s2(13), r2, s3(13), r3, d(13), rd\n   \n   open (10,file=f)"}, {"sha": "eee59a4e888fe542bc8d21cbf8c30898e326168f", "filename": "gcc/testsuite/gfortran.dg/streamio_15.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_15.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -13,7 +13,7 @@ program main\n   if (newline_length < 1 .or. newline_length > 2) call abort\n   close(20)\n \n-  open(20,file=\"foo.txt\",form=\"formatted\",access=\"stream\")\n+  open(20,file=\"foo_streamio_15.txt\",form=\"formatted\",access=\"stream\")\n   write(20,'(A)') '123456'\n   write(20,'(A)') 'abcdef'\n   write(20,'(A)') 'qwerty'"}, {"sha": "1cf879bd10c96072b8a27e9397f805354f4efbb9", "filename": "gcc/testsuite/gfortran.dg/unf_read_corrupted_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_read_corrupted_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51022ff73102918ab0574d677b6d572a0cb2c59b/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_read_corrupted_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funf_read_corrupted_1.f90?ref=51022ff73102918ab0574d677b6d572a0cb2c59b", "patch": "@@ -10,13 +10,13 @@ program main\n   ! Write out a truncated unformatted sequential file by\n   ! using unformatted stream.\n \n-  open (10, form=\"unformatted\", access=\"stream\", file=\"foo.dat\", &\n+  open (10, form=\"unformatted\", access=\"stream\", file=\"foo_unf_read_corrupted_1.dat\", &\n   status=\"unknown\")\n   write (10) 16_4, 1_4\n   close (10, status=\"keep\")\n \n   ! Try to read\n-  open (10, file=\"foo.dat\", form=\"unformatted\", access=\"sequential\")\n+  open (10, file=\"foo_unf_read_corrupted_1.dat\", form=\"unformatted\", access=\"sequential\")\n   i1 = 0\n   i2 = 0\n   read (10, iostat=ios, iomsg=msg) i1, i2"}]}