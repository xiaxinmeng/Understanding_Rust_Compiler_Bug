{"sha": "73b5cdf98ad368b41766577395b2a5bbd91e3f1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNiNWNkZjk4YWQzNjhiNDE3NjY1NzczOTViMmE1YmJkOTFlM2YxYg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-01-27T22:27:24Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-01-27T22:27:24Z"}, "message": "Test cases for c++ comments and endif labels in system headers.\n\nI made them up all by myself.\n\nFrom-SVN: r31653", "tree": {"sha": "3289ce56abd1bc315e175e229d5aed981b408477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3289ce56abd1bc315e175e229d5aed981b408477"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73b5cdf98ad368b41766577395b2a5bbd91e3f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b5cdf98ad368b41766577395b2a5bbd91e3f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73b5cdf98ad368b41766577395b2a5bbd91e3f1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b5cdf98ad368b41766577395b2a5bbd91e3f1b/comments", "author": null, "committer": null, "parents": [{"sha": "35ac3890ec195a629b2562bcf43153eb4f75d2f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ac3890ec195a629b2562bcf43153eb4f75d2f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35ac3890ec195a629b2562bcf43153eb4f75d2f9"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "c7c51d6e34794fa5f596161b54a6756b66713ca6", "filename": "gcc/testsuite/gcc.dg/cxx-comments-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b5cdf98ad368b41766577395b2a5bbd91e3f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fcxx-comments-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b5cdf98ad368b41766577395b2a5bbd91e3f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fcxx-comments-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcxx-comments-1.c?ref=73b5cdf98ad368b41766577395b2a5bbd91e3f1b", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-pedantic -std=gnu89\" } */\n+\n+/* You can't do this in your own code... */\n+// C++ comment is not in C89  { dg-warning \"style comment|reported only once\" \"good warning\" }\n+\n+/* ...but we don't bitch about it more than once.  */\n+// C++ comment is not in C89  { dg-bogus \"style comment\" \"bad warning\" }\n+\n+/*\n+   { dg-final { if ![file exists cxx-comments-1.i] { return }\t\t} }\n+   { dg-final { set tmp [grep cxx-comments-1.i \"is not in C89\" line]\t} }\n+   { dg-final { # send_user \"$tmp\\n\"\t\t\t\t\t} }\n+   { dg-final { if [regexp \"is not in C89\" $tmp] \\{\t\t\t} }\n+   { dg-final {     fail \"cxx-comments-1: comment strip check\"\t\t} }\n+   { dg-final { \\} else \\{\t\t\t\t\t\t} }\n+   { dg-final {     pass \"cxx-comments-1: comment strip check\"\t\t} }\n+   { dg-final { \\}\t\t\t\t\t\t\t} }\n+*/\n+"}, {"sha": "7d0fe09a2141313bf3fc4f10d91baa8c09e2b902", "filename": "gcc/testsuite/gcc.dg/cxx-comments-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b5cdf98ad368b41766577395b2a5bbd91e3f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fcxx-comments-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b5cdf98ad368b41766577395b2a5bbd91e3f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fcxx-comments-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcxx-comments-2.c?ref=73b5cdf98ad368b41766577395b2a5bbd91e3f1b", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-pedantic -std=c89\" } */\n+\n+/* This is an extension and therefore gets a warning.  */\n+#line 5 \"cxx-comments-2.c\" 3  /* { dg-warning \"garbage at end\" \"#line extension\" } */\n+\n+/* A system header may contain C++ comments irrespective of mode.  */\n+// C++ comment is not in C89  { dg-bogus \"style comment\" \"bad warning\" }\n+\n+/*\n+   { dg-final { if ![file exists cxx-comments-2.i] { return }\t\t} }\n+   { dg-final { set tmp [grep cxx-comments-2.i \"is not in C89\" line]\t} }\n+   { dg-final { # send_user \"$tmp\\n\"\t\t\t\t\t} }\n+   { dg-final { if [regexp \"is not in C89\" $tmp] \\{\t\t\t} }\n+   { dg-final {     fail \"cxx-comments-2: comment strip check\"\t\t} }\n+   { dg-final { \\} else \\{\t\t\t\t\t\t} }\n+   { dg-final {     pass \"cxx-comments-2: comment strip check\"\t\t} }\n+   { dg-final { \\}\t\t\t\t\t\t\t} }\n+*/\n+"}, {"sha": "95bd05d51a79f5aee96dc4dbc0836eb3044dc687", "filename": "gcc/testsuite/gcc.dg/endif-label.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b5cdf98ad368b41766577395b2a5bbd91e3f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fendif-label.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b5cdf98ad368b41766577395b2a5bbd91e3f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fendif-label.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fendif-label.c?ref=73b5cdf98ad368b41766577395b2a5bbd91e3f1b", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do preprocess } */\n+/* { dg-options \"-pedantic -Wall\" } */\n+\n+/* You can't get away with this in your own code... */\n+#ifdef KERNEL\n+#define foo\n+#endif KERNEL  /* { dg-warning \"text following\" \"good warning\" } */\n+\n+/* This will provoke a warning because the '3' is an extension.  */\n+#line 10 \"endif-label.c\" 3 /* { dg-warning \"garbage at end\" \"#line extension\" } */\n+\n+/* ... but in a system header, it's acceptable.  */\n+#ifdef KERNEL\n+#define foo\n+#endif KERNEL  /* { dg-bogus \"text following\" \"bad warning\" } */"}]}