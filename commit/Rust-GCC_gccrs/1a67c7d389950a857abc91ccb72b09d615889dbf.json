{"sha": "1a67c7d389950a857abc91ccb72b09d615889dbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE2N2M3ZDM4OTk1MGE4NTdhYmM5MWNjYjcyYjA5ZDYxNTg4OWRiZg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-15T15:30:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-15T15:30:52Z"}, "message": "cppdefault.h (WINT_TYPE): Define.\n\n        * cppdefault.h (WINT_TYPE): Define.\n        * cppinit.c (builtin_array): Define __WINT_TYPE__.\n        * tradcpp.c (initialize_builtins): Define __WINT_TYPE__.\n        * tm.texi (NO_BUILTIN_WINT_TYPE, WINT_TYPE): Document.\nAlmost done.\n\nFrom-SVN: r35719", "tree": {"sha": "6cba891e3dfcf8d260a8f0e2db9ccd88b71f653a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cba891e3dfcf8d260a8f0e2db9ccd88b71f653a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a67c7d389950a857abc91ccb72b09d615889dbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a67c7d389950a857abc91ccb72b09d615889dbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a67c7d389950a857abc91ccb72b09d615889dbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a67c7d389950a857abc91ccb72b09d615889dbf/comments", "author": null, "committer": null, "parents": [{"sha": "7c2720799c132883ff07e297c87e07cbed575787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2720799c132883ff07e297c87e07cbed575787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2720799c132883ff07e297c87e07cbed575787"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "9571c480de841902f048725a48a10f38271a8c1e", "filename": "gcc/tm.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a67c7d389950a857abc91ccb72b09d615889dbf/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a67c7d389950a857abc91ccb72b09d615889dbf/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=1a67c7d389950a857abc91ccb72b09d615889dbf", "patch": "@@ -138,6 +138,16 @@ This should be defined if @code{WCHAR_TYPE} depends on target dependent flags\n which are not accessible to the preprocessor.  Otherwise, it should not\n be defined.\n \n+@findex NO_BUILTIN_WINT_TYPE\n+@item NO_BUILTIN_WINT_TYPE\n+If this macro is defined, the preprocessor will not define the builtin macro\n+@code{__WINT_TYPE__}.  The macro @code{__WINT_TYPE__} must then be\n+defined by @code{CPP_SPEC} instead.\n+\n+This should be defined if @code{WINT_TYPE} depends on target dependent flags\n+which are not accessible to the preprocessor.  Otherwise, it should not\n+be defined.\n+\n @findex SIGNED_CHAR_SPEC\n @item SIGNED_CHAR_SPEC\n A C string constant that tells the GCC driver program options to\n@@ -1285,6 +1295,16 @@ characters.  If this is undefined, the default is\n largest value that @code{WCHAR_TYPE_SIZE} can have at run-time.  This is\n used in @code{cpp}.\n \n+@findex WINT_TYPE\n+@item WINT_TYPE\n+A C expression for a string describing the name of the data type to\n+use for wide characters passed to @code{printf} and returned from\n+@code{getwc}.  The typedef name @code{wint_t} is defined using the\n+contents of the string.  See @code{SIZE_TYPE} above for more\n+information.\n+\n+If you don't define this macro, the default is @code{\"unsigned int\"}.\n+\n @findex OBJC_INT_SELECTORS\n @item OBJC_INT_SELECTORS\n Define this macro if the type of Objective C selectors should be"}]}