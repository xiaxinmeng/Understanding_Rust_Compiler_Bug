{"sha": "fce68ebe21414ddb666ea729f21b515c1dedd5e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNlNjhlYmUyMTQxNGRkYjY2NmVhNzI5ZjIxYjUxNWMxZGVkZDVlNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T13:37:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T13:37:02Z"}, "message": "[multiple changes]\n\n2013-04-11  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb, prj-env.adb: Minor reformatting.\n\n2013-04-11  Ben Brosgol  <brosgol@adacore.com>\n\n\t* gnat_ugn.texi: Clean ups.\n\n2013-04-11  Yannick Moy  <moy@adacore.com>\n\n\t* set_targ.adb: Minor comment update.\n\nFrom-SVN: r197798", "tree": {"sha": "51a49a7845b883b741815071da0721a109a7de28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51a49a7845b883b741815071da0721a109a7de28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fce68ebe21414ddb666ea729f21b515c1dedd5e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fce68ebe21414ddb666ea729f21b515c1dedd5e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fce68ebe21414ddb666ea729f21b515c1dedd5e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fce68ebe21414ddb666ea729f21b515c1dedd5e7/comments", "author": null, "committer": null, "parents": [{"sha": "e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2441021a85d77f8915ee4b5fb8046bb82c7f91b"}], "stats": {"total": 414, "additions": 185, "deletions": 229}, "files": [{"sha": "5451d7c82e28a3abd26c9d4d66ac30caa9c8f9c6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fce68ebe21414ddb666ea729f21b515c1dedd5e7", "patch": "@@ -1,3 +1,15 @@\n+2013-04-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb, prj-env.adb: Minor reformatting.\n+\n+2013-04-11  Ben Brosgol  <brosgol@adacore.com>\n+\n+\t* gnat_ugn.texi: Clean ups.\n+\n+2013-04-11  Yannick Moy  <moy@adacore.com>\n+\n+\t* set_targ.adb: Minor comment update.\n+\n 2013-04-11  Pascal Obry  <obry@adacore.com>\n \n \t* gnat_ugn.texi: Remove obsolete comment about DLL calling"}, {"sha": "9be0dbff2f27da1b6cdd63a76a2340517b32509d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 58, "deletions": 125, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=fce68ebe21414ddb666ea729f21b515c1dedd5e7", "patch": "@@ -169,9 +169,9 @@ AdaCore@*\n * About This Guide::\n * Getting Started with GNAT::\n * The GNAT Compilation Model::\n-* Compiling Using gcc::\n-* Binding Using gnatbind::\n-* Linking Using gnatlink::\n+* Compiling With gcc::\n+* Binding With gnatbind::\n+* Linking With gnatlink::\n * The GNAT Make Program gnatmake::\n * Improving Performance::\n * Renaming Files Using gnatchop::\n@@ -198,10 +198,10 @@ AdaCore@*\n * Performing Dimensionality Analysis in GNAT::\n * Generating Ada Bindings for C and C++ headers::\n * Other Utility Programs::\n-* Running and Debugging Ada Programs::\n @ifclear vms\n * Code Coverage and Profiling::\n @end ifclear\n+* Running and Debugging Ada Programs::\n @ifset vms\n * Compatibility with HP Ada::\n @end ifset\n@@ -217,17 +217,15 @@ AdaCore@*\n * GNU Free Documentation License::\n * Index::\n \n- --- The Detailed Node Listing ---\n+ --- Detailed Contents ---\n \n About This Guide\n-\n * What This Guide Contains::\n * What You Should Know before Reading This Guide::\n * Related Information::\n * Conventions::\n \n Getting Started with GNAT\n-\n * Running GNAT::\n * Running a Simple Ada Program::\n * Running a Program with Multiple Units::\n@@ -240,7 +238,6 @@ Getting Started with GNAT\n @end ifclear\n \n The GNAT Compilation Model\n-\n * Source Representation::\n * Foreign Language Representation::\n * File Naming Rules::\n@@ -260,67 +257,25 @@ The GNAT Compilation Model\n * Placement of temporary files::\n @end ifset\n \n-Foreign Language Representation\n-\n-* Latin-1::\n-* Other 8-Bit Codes::\n-* Wide Character Encodings::\n-\n-Compiling Ada Programs With gcc\n-\n+Compiling With gcc\n * Compiling Programs::\n * Switches for gcc::\n * Search Paths and the Run-Time Library (RTL)::\n * Order of Compilation Issues::\n * Examples::\n \n-Switches for gcc\n-\n-* Output and Error Message Control::\n-* Warning Message Control::\n-* Debugging and Assertion Control::\n-* Validity Checking::\n-* Style Checking::\n-* Run-Time Checks::\n-* Using gcc for Syntax Checking::\n-* Using gcc for Semantic Checking::\n-* Compiling Different Versions of Ada::\n-* Character Set Control::\n-* File Naming Control::\n-* Subprogram Inlining Control::\n-* Auxiliary Output Control::\n-* Debugging Control::\n-* Exception Handling Control::\n-* Units to Sources Mapping Files::\n-* Integrated Preprocessing::\n-@ifset vms\n-* Return Codes::\n-@end ifset\n-\n-Binding Ada Programs With gnatbind\n-\n+Binding With gnatbind\n * Running gnatbind::\n * Switches for gnatbind::\n * Command-Line Access::\n * Search Paths for gnatbind::\n * Examples of gnatbind Usage::\n \n-Switches for gnatbind\n-\n-* Consistency-Checking Modes::\n-* Binder Error Message Control::\n-* Elaboration Control::\n-* Output Control::\n-* Binding with Non-Ada Main Programs::\n-* Binding Programs with No Main Subprogram::\n-\n-Linking Using gnatlink\n-\n+Linking With gnatlink\n * Running gnatlink::\n * Switches for gnatlink::\n \n The GNAT Make Program gnatmake\n-\n * Running gnatmake::\n * Switches for gnatmake::\n * Mode Switches for gnatmake::\n@@ -334,53 +289,42 @@ Improving Performance\n * Reducing Size of Ada Executables with gnatelim::\n * Reducing Size of Executables with unused subprogram/data elimination::\n \n-Performance Considerations\n-* Controlling Run-Time Checks::\n-* Use of Restrictions::\n-* Optimization Levels::\n-* Debugging Optimized Code::\n-* Inlining of Subprograms::\n-* Vectorization of loops::\n-* Other Optimization Switches::\n-* Optimization and Strict Aliasing::\n-@ifset vms\n-* Coverage Analysis::\n-@end ifset\n-\n-Reducing Size of Ada Executables with gnatelim\n-* About gnatelim::\n-* Running gnatelim::\n-* Processing Precompiled Libraries::\n-* Correcting the List of Eliminate Pragmas::\n-* Making Your Executables Smaller::\n-* Summary of the gnatelim Usage Cycle::\n-\n-Reducing Size of Executables with unused subprogram/data elimination\n-* About unused subprogram/data elimination::\n-* Compilation options::\n-\n Renaming Files Using gnatchop\n-\n * Handling Files with Multiple Units::\n * Operating gnatchop in Compilation Mode::\n * Command Line for gnatchop::\n * Switches for gnatchop::\n * Examples of gnatchop Usage::\n \n Configuration Pragmas\n-\n * Handling of Configuration Pragmas::\n * The Configuration Pragmas Files::\n \n Handling Arbitrary File Naming Conventions Using gnatname\n-\n * Arbitrary File Naming Conventions::\n * Running gnatname::\n * Switches for gnatname::\n * Examples of gnatname Usage::\n \n-The Cross-Referencing Tools gnatxref and gnatfind\n+GNAT Project Manager\n+* Introduction::\n+* Building With Projects::\n+* Organizing Projects into Subsystems::\n+* Scenarios in Projects::\n+* Library Projects::\n+* Project Extension::\n+* Aggregate Projects::\n+* Aggregate Library Projects::\n+* Project File Reference::\n+\n+Tools Supporting Project Files\n+* Switches Related to Project Files::\n+* Switches and Project Files::\n+* Specifying Configuration Pragmas::\n+* Project Files and Main Subprograms::\n+* Library Project Files::\n \n+The Cross-Referencing Tools gnatxref and gnatfind\n * Switches for gnatxref::\n * Switches for gnatfind::\n * Project Files for gnatxref and gnatfind::\n@@ -389,16 +333,13 @@ The Cross-Referencing Tools gnatxref and gnatfind\n * Examples of gnatfind Usage::\n \n The GNAT Pretty-Printer gnatpp\n-\n * Switches for gnatpp::\n * Formatting Rules::\n \n The GNAT Metrics Tool gnatmetric\n-\n * Switches for gnatmetric::\n \n File Name Krunching Using gnatkr\n-\n * About gnatkr::\n * Using gnatkr::\n * Krunching Method::\n@@ -412,57 +353,48 @@ Preprocessing Using gnatprep\n * Form of Input Text for gnatprep::\n \n The GNAT Library Browser gnatls\n-\n * Running gnatls::\n * Switches for gnatls::\n * Examples of gnatls Usage::\n \n Cleaning Up Using gnatclean\n-\n * Running gnatclean::\n * Switches for gnatclean::\n @c * Examples of gnatclean Usage::\n \n @ifclear vms\n-\n GNAT and Libraries\n-\n * Introduction to Libraries in GNAT::\n * General Ada Libraries::\n * Stand-alone Ada Libraries::\n * Rebuilding the GNAT Run-Time Library::\n \n Using the GNU make Utility\n-\n * Using gnatmake in a Makefile::\n * Automatically Creating a List of Directories::\n * Generating the Command Line Switches::\n * Overcoming Command Line Length Limits::\n @end ifclear\n \n Memory Management Issues\n-\n * Some Useful Memory Pools::\n * The GNAT Debug Pool Facility::\n @ifclear vms\n * The gnatmem Tool::\n @end ifclear\n \n Stack Related Facilities\n-\n * Stack Overflow Checking::\n * Static Stack Usage Analysis::\n * Dynamic Stack Usage Analysis::\n \n Verifying Properties Using gnatcheck\n \n-Sample Bodies Using gnatstub\n-\n+Creating Sample Bodies Using gnatstub\n * Running gnatstub::\n * Switches for gnatstub::\n \n Creating Unit Tests Using gnattest\n-\n * Running gnattest::\n * Switches for gnattest::\n * Project Attributes for gnattest::\n@@ -480,21 +412,30 @@ Creating Unit Tests Using gnattest\n @end ifclear\n * Current Limitations::\n \n-Other Utility Programs\n+Performing Dimensionality Analysis in GNAT\n+\n+Generating Ada Bindings for C and C++ headers\n+* Running the binding generator::\n+* Generating bindings for C++ headers::\n+* Switches::\n \n+Other Utility Programs\n * Using Other Utility Programs with GNAT::\n * The External Symbol Naming Scheme of GNAT::\n * Converting Ada Files to html with gnathtml::\n+* Installing gnathtml::\n+@ifset vms\n+* LSE::\n+* Profiling::\n+@end ifset\n \n @ifclear vms\n Code Coverage and Profiling\n-\n * Code Coverage of Ada Programs using gcov::\n * Profiling an Ada Program using gprof::\n @end ifclear\n \n Running and Debugging Ada Programs\n-\n * The GNAT Debugger GDB::\n * Running GDB::\n * Introduction to GDB Commands::\n@@ -510,13 +451,8 @@ Running and Debugging Ada Programs\n * Getting Internal Debugging Information::\n * Stack Traceback::\n \n-@ifset vms\n-* LSE::\n-@end ifset\n-\n @ifset vms\n Compatibility with HP Ada\n-\n * Ada Language Compatibility::\n * Differences in the Definition of Package System::\n * Language-Related Features::\n@@ -535,7 +471,6 @@ Compatibility with HP Ada\n * Tools and Utilities::\n \n Language-Related Features\n-\n * Integer Types and Representations::\n * Floating-Point Types and Representations::\n * Pragmas Float_Representation and Long_Float::\n@@ -545,7 +480,6 @@ Language-Related Features\n * Other Representation Clauses::\n \n Tasking and Task-Related Features\n-\n * Implementation of Tasks in HP Ada for OpenVMS Alpha Systems::\n * Assigning Task IDs::\n * Task IDs and Delays::\n@@ -555,23 +489,19 @@ Tasking and Task-Related Features\n * External Interrupts::\n \n Pragmas and Pragma-Related Features\n-\n * Restrictions on the Pragma INLINE::\n * Restrictions on the Pragma INTERFACE::\n * Restrictions on the Pragma SYSTEM_NAME::\n \n Library of Predefined Units\n-\n * Changes to DECLIB::\n \n Bindings\n-\n * Shared Libraries and Options Files::\n * Interfaces to C::\n @end ifset\n \n Platform-Specific Information for the Run-Time Libraries\n-\n * Summary of Run-Time Configurations::\n * Specifying a Run-Time Library::\n * Choosing the Scheduling Policy::\n@@ -584,7 +514,6 @@ Platform-Specific Information for the Run-Time Libraries\n Example of Binder Output File\n \n Elaboration Order Handling in GNAT\n-\n * Elaboration Code::\n * Checking the Elaboration Order::\n * Controlling the Elaboration Order::\n@@ -614,7 +543,6 @@ Conditional Compilation\n * Preprocessing::\n \n Inline Assembler\n-\n * Basic Assembler Syntax::\n * A Simple Example of Inline Assembler::\n * Output Variables in Inline Assembler::\n@@ -623,7 +551,6 @@ Inline Assembler\n * Other Asm Functionality::\n \n Compatibility and Porting Guide\n-\n * Compatibility with Ada 83::\n * Compatibility between Ada 95 and Ada 2005::\n * Implementation-dependent characteristics::\n@@ -639,7 +566,6 @@ Compatibility and Porting Guide\n @end ifset\n \n Microsoft Windows Topics\n-\n @ifclear FSFEDITION\n * Installing from the Command Line::\n @end ifclear\n@@ -658,10 +584,11 @@ Microsoft Windows Topics\n * Setting Heap Size from gnatlink::\n \n Mac OS Topics\n-\n * Codesigning the Debugger::\n \n-* Index::\n+GNU Free Documentation License\n+\n+Index\n @end menu\n @end ifnottex\n \n@@ -723,16 +650,16 @@ and running Ada programs with the GNAT Ada programming environment.\n by GNAT.\n \n @item\n-@ref{Compiling Using gcc}, describes how to compile\n+@ref{Compiling With gcc}, describes how to compile\n Ada programs with @command{gcc}, the Ada compiler.\n \n @item\n-@ref{Binding Using gnatbind}, describes how to\n+@ref{Binding With gnatbind}, describes how to\n perform binding of Ada programs with @code{gnatbind}, the GNAT binding\n utility.\n \n @item\n-@ref{Linking Using gnatlink},\n+@ref{Linking With gnatlink},\n describes @command{gnatlink}, a\n program that provides for linking using the GNAT run-time library to\n construct a program. @command{gnatlink} can also incorporate foreign language\n@@ -3798,8 +3725,8 @@ GNAT uses the current directory for temporary files.\n @end ifset\n \n @c *************************\n-@node Compiling Using gcc\n-@chapter Compiling Using @command{gcc}\n+@node Compiling With gcc\n+@chapter Compiling With @command{gcc}\n \n @noindent\n This chapter discusses how to compile Ada programs using the @command{gcc}\n@@ -7088,7 +7015,7 @@ on subprogram calls and generic instantiations.\n Note that @option{-gnatE} is not necessary for safety, because in the\n default mode, GNAT ensures statically that the checks would not fail.\n For full details of the effect and use of this switch,\n-@xref{Compiling Using gcc}.\n+@xref{Compiling With gcc}.\n \n @item -fstack-check\n @cindex @option{-fstack-check} (@command{gcc})\n@@ -8280,8 +8207,8 @@ Compile the subunit in file @file{abc-def.adb} in semantic-checking-only\n mode.\n @end table\n \n-@node Binding Using gnatbind\n-@chapter Binding Using @code{gnatbind}\n+@node Binding With gnatbind\n+@chapter Binding With @code{gnatbind}\n @findex gnatbind\n \n @menu\n@@ -9276,8 +9203,8 @@ since gnatlink will not be able to find the generated file.\n @end table\n \n @c ------------------------------------\n-@node Linking Using gnatlink\n-@chapter Linking Using @command{gnatlink}\n+@node Linking With gnatlink\n+@chapter Linking With @command{gnatlink}\n @c ------------------------------------\n @findex gnatlink\n \n@@ -29729,6 +29656,12 @@ end API;\n @end group\n @end smallexample\n \n+@noindent\n+Note that a variable is\n+@strong{always imported with a DLL convention}. A function\n+can have @code{C} or @code{Stdcall} convention.\n+(@pxref{Windows Calling Conventions}).\n+\n @node Creating an Import Library\n @subsection Creating an Import Library\n @cindex Import library"}, {"sha": "67b077f372ff44ef5281c37577d0ea30dbcff111", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=fce68ebe21414ddb666ea729f21b515c1dedd5e7", "patch": "@@ -23,8 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Text_IO; use Ada.Text_IO;\n-\n with Fmap;\n with Hostparm;\n with Makeutl;  use Makeutl;\n@@ -35,6 +33,8 @@ with Prj.Com;  use Prj.Com;\n with Sdefault;\n with Tempdir;\n \n+with Ada.Text_IO; use Ada.Text_IO;\n+\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n package body Prj.Env is"}, {"sha": "c31056cdd602da167cc3e314d8b8a0924d44c9a4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 87, "deletions": 94, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=fce68ebe21414ddb666ea729f21b515c1dedd5e7", "patch": "@@ -401,9 +401,8 @@ package body Sem_Prag is\n                Error_Msg_Name_2 := Name_Class;\n \n                Error_Msg_N\n-                 (\"aspect `%''%` can only be specified for a primitive \" &\n-                  \"operation of a tagged type\",\n-                  Corresponding_Aspect (N));\n+                 (\"aspect `%''%` can only be specified for a primitive \"\n+                  & \"operation of a tagged type\", Corresponding_Aspect (N));\n             end if;\n \n             Replace_Type (Get_Pragma_Arg (Arg1));\n@@ -1430,8 +1429,8 @@ package body Sem_Prag is\n            and then not Is_Unchecked_Union (Etype (Subtype_Mark (Sindic)))\n          then\n             Error_Msg_N\n-              (\"component subtype subject to per-object constraint \" &\n-               \"must be an Unchecked_Union\", Comp);\n+              (\"component subtype subject to per-object constraint \"\n+               & \"must be an Unchecked_Union\", Comp);\n \n          --  Ada 2012 (AI05-0026): For an unchecked union type declared within\n          --  the body of a generic unit, or within the body of any of its\n@@ -1948,12 +1947,12 @@ package body Sem_Prag is\n          begin\n             if Nkind (Constr) = N_Pragma then\n                Error_Pragma\n-                 (\"pragma % must appear immediately within the statements \" &\n-                  \"of a loop\");\n+                 (\"pragma % must appear immediately within the statements \"\n+                  & \"of a loop\");\n             else\n                Error_Pragma_Arg\n-                 (\"block containing pragma % must appear immediately within \" &\n-                  \"the statements of a loop\", Constr);\n+                 (\"block containing pragma % must appear immediately within \"\n+                  & \"the statements of a loop\", Constr);\n             end if;\n          end Placement_Error;\n \n@@ -3482,9 +3481,8 @@ package body Sem_Prag is\n               and then C /= Convention (Overridden_Operation (E))\n             then\n                Error_Pragma_Arg\n-                 (\"cannot change convention for \" &\n-                  \"overridden dispatching operation\",\n-                  Arg1);\n+                 (\"cannot change convention for overridden \"\n+                  & \"dispatching operation\", Arg1);\n             end if;\n \n             --  Set the convention\n@@ -4796,8 +4794,8 @@ package body Sem_Prag is\n                      then\n                         Error_Msg_Sloc := Sloc (Def_Id);\n                         Error_Msg_NE\n-                          (\"cannot import&, renaming already provided for \" &\n-                           \"declaration #\", N, Def_Id);\n+                          (\"cannot import&, renaming already provided for \"\n+                           & \"declaration #\", N, Def_Id);\n                      end if;\n                   end;\n \n@@ -6878,8 +6876,8 @@ package body Sem_Prag is\n                        (not Input_Seen and then not Output_Seen))  --  none\n                   then\n                      Error_Msg_N\n-                       (\"property Volatile requires exactly one Input or \" &\n-                        \"Output\", State);\n+                       (\"property Volatile requires exactly one Input or \"\n+                        & \"Output\", State);\n                   end if;\n \n                   --  Either Input or Output require Volatile\n@@ -7606,8 +7604,7 @@ package body Sem_Prag is\n                --  unit (RM E.4.1(4)).\n \n                Error_Pragma\n-                 (\"pragma% not in Remote_Call_Interface or \" &\n-                  \"Remote_Types unit\");\n+                 (\"pragma% not in Remote_Call_Interface or Remote_Types unit\");\n             end if;\n \n             if Ekind (Nm) = E_Procedure\n@@ -8238,8 +8235,8 @@ package body Sem_Prag is\n                  and then not Is_Array_Type (Typ)\n                then\n                   Error_Pragma_Arg\n-                    (\"Name parameter of pragma% must identify record or \" &\n-                     \"array type\", Name);\n+                    (\"Name parameter of pragma% must identify record or \"\n+                     & \"array type\", Name);\n                end if;\n \n                --  An explicit Component_Alignment pragma overrides an\n@@ -8525,10 +8522,9 @@ package body Sem_Prag is\n             GNAT_Pragma;\n \n             if Warn_On_Obsolescent_Feature then\n-               --  Following message is obsolete ???\n                Error_Msg_N\n-                 (\"'G'N'A'T pragma cpp'_class is now obsolete and has no \" &\n-                  \"effect; replace it by pragma import?j?\", N);\n+                 (\"'G'N'A'T pragma cpp'_class is now obsolete and has no \"\n+                  & \"effect; replace it by pragma import?j?\", N);\n             end if;\n \n             Check_Arg_Count (1);\n@@ -8591,8 +8587,8 @@ package body Sem_Prag is\n             then\n                if Scope (Def_Id) /= Scope (Etype (Def_Id)) then\n                   Error_Msg_N\n-                    (\"'C'P'P constructor must be defined in the scope of \" &\n-                     \"its returned type\", Arg1);\n+                    (\"'C'P'P constructor must be defined in the scope of \"\n+                     & \"its returned type\", Arg1);\n                end if;\n \n                if Arg_Count >= 2 then\n@@ -8652,8 +8648,8 @@ package body Sem_Prag is\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n-                 (\"'G'N'A'T pragma cpp'_virtual is now obsolete and has \" &\n-                  \"no effect?j?\", N);\n+                 (\"'G'N'A'T pragma cpp'_virtual is now obsolete and has \"\n+                  & \"no effect?j?\", N);\n             end if;\n          end CPP_Virtual;\n \n@@ -8667,8 +8663,8 @@ package body Sem_Prag is\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n-                 (\"'G'N'A'T pragma cpp'_vtable is now obsolete and has \" &\n-                  \"no effect?j?\", N);\n+                 (\"'G'N'A'T pragma cpp'_vtable is now obsolete and has \"\n+                  & \"no effect?j?\", N);\n             end if;\n          end CPP_Vtable;\n \n@@ -9071,8 +9067,8 @@ package body Sem_Prag is\n                      then\n                         Error_Msg_Name_1 := Name_Result;\n                         Error_Msg_N\n-                          (\"prefix of attribute % must denote the enclosing \" &\n-                           \"function\", Item);\n+                          (\"prefix of attribute % must denote the enclosing \"\n+                           & \"function\", Item);\n \n                      --  Function'Result is allowed to appear on the output\n                      --  side of a dependency clause.\n@@ -9096,8 +9092,8 @@ package body Sem_Prag is\n \n                         if Is_Output and then not Is_Last then\n                            Error_Msg_N\n-                             (\"null output list must be the last clause in \" &\n-                              \"a dependency relation\", Item);\n+                             (\"null output list must be the last clause in \"\n+                              & \"a dependency relation\", Item);\n                         end if;\n                      end if;\n \n@@ -9142,8 +9138,8 @@ package body Sem_Prag is\n                              and then Contains (All_Inputs_Seen, Item_Id)\n                            then\n                               Error_Msg_N\n-                                (\"input of a null output list appears in \" &\n-                                 \"multiple input lists\", Item);\n+                                (\"input of a null output list appears in \"\n+                                 & \"multiple input lists\", Item);\n                            else\n                               if No (All_Inputs_Seen) then\n                                  All_Inputs_Seen := New_Elmt_List;\n@@ -9165,16 +9161,16 @@ package body Sem_Prag is\n \n                         else\n                            Error_Msg_N\n-                             (\"item must denote variable, state or formal \" &\n-                              \"parameter\", Item);\n+                             (\"item must denote variable, state or formal \"\n+                              & \"parameter\", Item);\n                         end if;\n \n                      --  All other input/output items are illegal\n \n                      else\n                         Error_Msg_N\n-                          (\"item must denote variable, state or formal \" &\n-                           \"parameter\", Item);\n+                          (\"item must denote variable, state or formal \"\n+                           & \"parameter\", Item);\n                      end if;\n                   end if;\n                end Analyze_Input_Output;\n@@ -10047,8 +10043,8 @@ package body Sem_Prag is\n                 Present (Source_Location)\n             then\n                Error_Pragma\n-                 (\"parameter profile and source location cannot \" &\n-                  \"be used together in pragma%\");\n+                 (\"parameter profile and source location cannot \"\n+                  & \"be used together in pragma%\");\n             end if;\n \n             Process_Eliminate_Pragma\n@@ -10904,17 +10900,17 @@ package body Sem_Prag is\n                   if Ekind (Item_Id) = E_Abstract_State\n                     and then Is_Volatile_State (Item_Id)\n                   then\n-                     --  A global item of mode In_Out or Output cannot denote a\n-                     --  volatile Input state.\n+                     --  A global item of mode In_Out or Output cannot denote\n+                     --  a volatile Input state.\n \n                      if Is_Input_State (Item_Id)\n                        and then (Global_Mode = Name_In_Out\n                                    or else\n                                  Global_Mode = Name_Output)\n                      then\n                         Error_Msg_N\n-                          (\"global item of mode In_Out or Output cannot \" &\n-                           \"reference Volatile Input state\", Item);\n+                          (\"global item of mode In_Out or Output cannot \"\n+                           & \"reference Volatile Input state\", Item);\n \n                      --  A global item of mode In_Out or Input cannot reference\n                      --  a volatile Output state.\n@@ -11316,8 +11312,8 @@ package body Sem_Prag is\n                   null;\n                else\n                   Error_Pragma_Arg\n-                    (\"controlling formal must be of synchronized \" &\n-                     \"tagged type\", Arg1);\n+                    (\"controlling formal must be of synchronized \"\n+                     & \"tagged type\", Arg1);\n                   return;\n                end if;\n \n@@ -11345,8 +11341,8 @@ package body Sem_Prag is\n               and then Is_Task_Interface (Typ)\n             then\n                Error_Pragma_Arg\n-                 (\"implementation kind By_Protected_Procedure cannot be \" &\n-                  \"applied to a task interface primitive\", Arg2);\n+                 (\"implementation kind By_Protected_Procedure cannot be \"\n+                  & \"applied to a task interface primitive\", Arg2);\n                return;\n             end if;\n \n@@ -12168,8 +12164,8 @@ package body Sem_Prag is\n                   Int_Val > Expr_Value (Type_High_Bound (Int_Id))\n                then\n                   Error_Pragma_Arg\n-                    (\"value not in range of type \" &\n-                     \"\"\"Ada.Interrupts.Interrupt_'I'D\"\"\", Arg1);\n+                    (\"value not in range of type \"\n+                     & \"\"\"Ada.Interrupts.Interrupt_'I'D\"\"\", Arg1);\n                end if;\n             end if;\n \n@@ -12275,8 +12271,8 @@ package body Sem_Prag is\n \n             elsif In_Private_Part (Current_Scope) then\n                Error_Pragma_Arg\n-                 (\"pragma% only allowed for private type \" &\n-                  \"declared in visible part\", Arg1);\n+                 (\"pragma% only allowed for private type \"\n+                  & \"declared in visible part\", Arg1);\n \n             else\n                Error_Pragma_Arg\n@@ -12369,12 +12365,12 @@ package body Sem_Prag is\n                if Ekind (Def_Id) /= E_Function then\n                   if VM_Target = JVM_Target then\n                      Error_Pragma_Arg\n-                       (\"pragma% requires function returning a \" &\n-                        \"'Java access type\", Def_Id);\n+                       (\"pragma% requires function returning a \"\n+                        & \"'Java access type\", Def_Id);\n                   else\n                      Error_Pragma_Arg\n-                       (\"pragma% requires function returning a \" &\n-                        \"'C'I'L access type\", Def_Id);\n+                       (\"pragma% requires function returning a \"\n+                        & \"'C'I'L access type\", Def_Id);\n                   end if;\n                end if;\n \n@@ -12470,8 +12466,8 @@ package body Sem_Prag is\n                   then\n                      Error_Msg_Name_1 := Pname;\n                      Error_Msg_N\n-                       (\"first formal of % function must be a named access\" &\n-                        \" to subprogram type\",\n+                       (\"first formal of % function must be a named access \"\n+                        & \"to subprogram type\",\n                         Parameter_Type (Parent (This_Formal)));\n \n                   --  Warning: We should reject anonymous access types because\n@@ -12487,9 +12483,8 @@ package body Sem_Prag is\n                   then\n                      Error_Msg_Name_1 := Pname;\n                      Error_Msg_N\n-                       (\"first formal of % function must be a named access\" &\n-                        \" type\",\n-                        Parameter_Type (Parent (This_Formal)));\n+                       (\"first formal of % function must be a named access \"\n+                        & \" type\", Parameter_Type (Parent (This_Formal)));\n \n                   elsif Atree.Convention\n                          (Designated_Type (Etype (This_Formal))) /= Convention\n@@ -12498,14 +12493,12 @@ package body Sem_Prag is\n \n                      if Convention = Convention_Java then\n                         Error_Msg_N\n-                          (\"pragma% requires convention 'Cil in designated\" &\n-                           \" type\",\n-                           Parameter_Type (Parent (This_Formal)));\n+                          (\"pragma% requires convention 'Cil in designated \"\n+                           & \"type\", Parameter_Type (Parent (This_Formal)));\n                      else\n                         Error_Msg_N\n-                          (\"pragma% requires convention 'Java in designated\" &\n-                           \" type\",\n-                           Parameter_Type (Parent (This_Formal)));\n+                          (\"pragma% requires convention 'Java in designated \"\n+                           & \"type\", Parameter_Type (Parent (This_Formal)));\n                      end if;\n \n                   elsif No (Expression (Parent (This_Formal)))\n@@ -12534,13 +12527,13 @@ package body Sem_Prag is\n                   if Atree.Convention (Etype (Def_Id)) /= Convention then\n                      if Convention = Convention_Java then\n                         Error_Pragma_Arg\n-                          (\"pragma% requires function returning a \" &\n-                           \"'Java access type\", Arg1);\n+                          (\"pragma% requires function returning a \"\n+                           & \"'Java access type\", Arg1);\n                      else\n                         pragma Assert (Convention = Convention_CIL);\n                         Error_Pragma_Arg\n-                          (\"pragma% requires function returning a \" &\n-                           \"'C'I'L access type\", Arg1);\n+                          (\"pragma% requires function returning a \"\n+                           & \"'C'I'L access type\", Arg1);\n                      end if;\n                   end if;\n \n@@ -12555,12 +12548,12 @@ package body Sem_Prag is\n \n                      if Convention = Convention_Java then\n                         Error_Pragma_Arg\n-                          (\"pragma% requires function returning a named\" &\n-                           \"'Java access type\", Arg1);\n+                          (\"pragma% requires function returning a named \"\n+                           & \"'Java access type\", Arg1);\n                      else\n                         Error_Pragma_Arg\n-                          (\"pragma% requires function returning a named\" &\n-                           \"'C'I'L access type\", Arg1);\n+                          (\"pragma% requires function returning a named \"\n+                           & \"'C'I'L access type\", Arg1);\n                      end if;\n                   end if;\n                end if;\n@@ -13585,8 +13578,8 @@ package body Sem_Prag is\n                      loop\n                         if No (Ent) then\n                            Error_Pragma\n-                             (\"pragma % entity name does not match any \" &\n-                              \"enumeration literal\");\n+                             (\"pragma % entity name does not match any \"\n+                              & \"enumeration literal\");\n \n                         elsif Chars (Ent) = Chars (Ename) then\n                            Set_Entity (Ename, Ent);\n@@ -14154,8 +14147,8 @@ package body Sem_Prag is\n               and then not Has_Preelaborable_Initialization (Ent)\n             then\n                Error_Msg_N\n-                 (\"protected type & does not have preelaborable \" &\n-                  \"initialization\", Ent);\n+                 (\"protected type & does not have preelaborable \"\n+                  & \"initialization\", Ent);\n \n             --  Otherwise mark the type as definitely having preelaborable\n             --  initialization.\n@@ -14614,8 +14607,8 @@ package body Sem_Prag is\n \n             elsif Lower_Val > Upper_Val then\n                Error_Pragma\n-                 (\"last_priority_expression must be greater than\" &\n-                  \" or equal to first_priority_expression\");\n+                 (\"last_priority_expression must be greater than \"\n+                  & \"or equal to first_priority_expression\");\n \n             --  Store the new policy, but always preserve System_Location since\n             --  we like the error message with the run-time name.\n@@ -15457,8 +15450,8 @@ package body Sem_Prag is\n               or else In_Package_Body (Current_Scope)\n             then\n                Error_Pragma\n-                 (\"pragma% can only apply to type declared immediately \" &\n-                  \"within a package declaration\");\n+                 (\"pragma% can only apply to type declared immediately\"\n+                  & \" within a package declaration\");\n             end if;\n \n             --  A simple storage pool type must be an immutably limited record\n@@ -15696,8 +15689,8 @@ package body Sem_Prag is\n                  or else Present (Next_Formal (First_Formal (Ent)))\n                then\n                   Error_Pragma_Arg\n-                    (\"argument for pragma% must be\" &\n-                     \" function of one argument\", Arg);\n+                   (\"argument for pragma% must be function of one argument\",\n+                     Arg);\n                end if;\n             end Check_OK_Stream_Convert_Function;\n \n@@ -16831,8 +16824,8 @@ package body Sem_Prag is\n \n                   elsif not Is_Static_String_Expression (Arg1) then\n                      Error_Pragma_Arg\n-                       (\"argument of pragma% must be On/Off or \" &\n-                        \"static string expression\", Arg1);\n+                       (\"argument of pragma% must be On/Off or \"\n+                        & \"static string expression\", Arg1);\n \n                   --  One argument string expression case\n \n@@ -16876,8 +16869,8 @@ package body Sem_Prag is\n \n                                  if not Set_Dot_Warning_Switch (Chr) then\n                                     Error_Pragma_Arg\n-                                      (\"invalid warning switch character \" &\n-                                       '.' & Chr, Arg1);\n+                                      (\"invalid warning switch character \"\n+                                       & '.' & Chr, Arg1);\n                                  end if;\n \n                               --  Non-Dot case\n@@ -16970,8 +16963,8 @@ package body Sem_Prag is\n \n                      elsif not Is_Static_String_Expression (Arg2) then\n                         Error_Pragma_Arg\n-                          (\"second argument of pragma% must be entity \" &\n-                           \"name or static string expression\", Arg2);\n+                          (\"second argument of pragma% must be entity \"\n+                           & \"name or static string expression\", Arg2);\n \n                      --  String literal case\n \n@@ -17010,8 +17003,8 @@ package body Sem_Prag is\n \n                            if Err then\n                               Error_Msg\n-                                (\"??pragma Warnings On with no \" &\n-                                 \"matching Warnings Off\",\n+                                (\"??pragma Warnings On with no \"\n+                                 & \"matching Warnings Off\",\n                                  Loc);\n                            end if;\n                         end if;"}, {"sha": "4b0c75c4b65ba1ab99c8442994401c14a5ce50e2", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce68ebe21414ddb666ea729f21b515c1dedd5e7/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=fce68ebe21414ddb666ea729f21b515c1dedd5e7", "patch": "@@ -487,22 +487,40 @@ begin\n       pragma Import (C, save_argv);\n       --  Saved value of argv (argument pointers), imported from misc.c\n \n+      function Len_Arg (Arg : Pos) return Nat;\n+      --  Determine length of argument number Arg on original gnat1 command\n+      --  line.\n+\n+      -------------\n+      -- Len_Arg --\n+      -------------\n+\n+      function Len_Arg (Arg : Pos) return Nat is\n+      begin\n+         for J in 1 .. Nat'Last loop\n+            if save_argv (Arg).all (Natural (J)) = ASCII.NUL then\n+               return J - 1;\n+            end if;\n+         end loop;\n+\n+         raise Program_Error;\n+      end Len_Arg;\n+\n    begin\n       --  Loop through arguments looking for -gnateT, also look for -gnatd.b\n \n       for Arg in 1 .. save_argc - 1 loop\n          declare\n             Argv_Ptr : constant Big_String_Ptr := save_argv (Arg);\n+            Argv_Len : constant Nat            := Len_Arg (Arg);\n          begin\n-\n-            --  ??? Is there no problem accessing at indices 1 to 7 or 8\n-            --  without first checking if the length of the underlying string\n-            --  may be smaller? See back_end.adb for an example where function\n-            --  Len_Arg is used to retrieve this length.\n-\n-            if Argv_Ptr (1 .. 7) = \"-gnateT\" then\n+            if Argv_Len = 7\n+              and then Argv_Ptr (1 .. 7) = \"-gnateT\"\n+            then\n                Opt.Target_Dependent_Info_Read := True;\n-            elsif Argv_Ptr (1 .. 8) = \"-gnatd.b\" then\n+            elsif Argv_Len >= 8\n+              and then Argv_Ptr (1 .. 8) = \"-gnatd.b\"\n+            then\n                Debug_Flag_Dot_B := True;\n             end if;\n          end;"}]}