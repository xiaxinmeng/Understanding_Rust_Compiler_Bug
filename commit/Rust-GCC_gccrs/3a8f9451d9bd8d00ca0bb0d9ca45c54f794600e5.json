{"sha": "3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E4Zjk0NTFkOWJkOGQwMGNhMGJiMGQ5Y2E0NWM1NGY3OTQ2MDBlNQ==", "commit": {"author": {"name": "Bill Seurer", "email": "seurer@linux.vnet.ibm.com", "date": "2016-12-21T19:09:10Z"}, "committer": {"name": "Bill Seurer", "email": "seurer@gcc.gnu.org", "date": "2016-12-21T19:09:10Z"}, "message": "[PATCH, v2, rs6000] pr65479 Add -fasynchronous-unwind-tables when the -fsanitize=address option is seen.\n\nAll feedback from the earlier version has been taken into account now.\n\nThis patch adds the -fasynchronous-unwind-tables option to compilations when\nthe -fsanitize=address option is seen but not if any\n-fasynchronous-unwind-tables options were already specified.\n-fasynchronous-unwind-tables causes a full strack trace to be produced when\nthe sanitizer detects an error.  Without the full trace several of the asan\ntest cases fail on powerpc.\n\nSee https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65479 for more information.\n\nBootstrapped and tested on powerpc64le-unknown-linux-gnu,\npowerpc64be-unknown-linux-gnu, and x86_64-pc-linux-gnu with no regressions.\nIs this ok for trunk?\n\n[gcc]\n\n2016-12-21  Bill Seurer  <seurer@linux.vnet.ibm.com>\n\n\tPR sanitizer/65479\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Add\n\t-fasynchronous-unwind-tables option when -fsanitize=address is\n\tspecified.\n\nFrom-SVN: r243863", "tree": {"sha": "40a9bde9dedb1489f4ec3daa33e17f919abeb73f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40a9bde9dedb1489f4ec3daa33e17f919abeb73f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5/comments", "author": {"login": "BillSeurer", "id": 8561221, "node_id": "MDQ6VXNlcjg1NjEyMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/8561221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BillSeurer", "html_url": "https://github.com/BillSeurer", "followers_url": "https://api.github.com/users/BillSeurer/followers", "following_url": "https://api.github.com/users/BillSeurer/following{/other_user}", "gists_url": "https://api.github.com/users/BillSeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/BillSeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BillSeurer/subscriptions", "organizations_url": "https://api.github.com/users/BillSeurer/orgs", "repos_url": "https://api.github.com/users/BillSeurer/repos", "events_url": "https://api.github.com/users/BillSeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/BillSeurer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f0db5664a193a11e1141f003edbff48c29274ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0db5664a193a11e1141f003edbff48c29274ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0db5664a193a11e1141f003edbff48c29274ca"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "0a7f34a8cd46570da86d701f56f8f951a21a9d3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5", "patch": "@@ -1,3 +1,10 @@\n+2016-12-21  Bill Seurer  <seurer@linux.vnet.ibm.com>\n+\n+\tPR sanitizer/65479\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Add\n+\t-fasynchronous-unwind-tables option when -fsanitize=address is\n+\tspecified.\n+\n 2016-12-21  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR target/71321"}, {"sha": "a870d60ae7cbfc45f9f41be971c0ee161fb0eb6a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3a8f9451d9bd8d00ca0bb0d9ca45c54f794600e5", "patch": "@@ -3858,6 +3858,13 @@ rs6000_option_override_internal (bool global_init_p)\n       && !global_options_set.x_flag_ira_loop_pressure)\n     flag_ira_loop_pressure = 1;\n \n+  /* -fsanitize=address needs to turn on -fasynchronous-unwind-tables in order\n+     for tracebacks to be complete but not if any -fasynchronous-unwind-tables\n+     options were already specified.  */\n+  if (flag_sanitize & SANITIZE_USER_ADDRESS\n+      && !global_options_set.x_flag_asynchronous_unwind_tables)\n+    flag_asynchronous_unwind_tables = 1;\n+\n   /* Set the pointer size.  */\n   if (TARGET_64BIT)\n     {"}]}