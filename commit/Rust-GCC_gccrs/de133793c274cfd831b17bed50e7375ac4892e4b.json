{"sha": "de133793c274cfd831b17bed50e7375ac4892e4b", "node_id": "C_kwDOANBUbNoAKGRlMTMzNzkzYzI3NGNmZDgzMWIxN2JlZDUwZTczNzVhYzQ4OTJlNGI", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-13T20:59:59Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-14T08:35:06Z"}, "message": "Revert \"sphinx: update baseconf.py file\"\n\nThis reverts commit 8dc319eb495d6fa742a265dfa12dc75bf3576d07.", "tree": {"sha": "919af17a2de25792749a4203d59320d0e1574f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/919af17a2de25792749a4203d59320d0e1574f16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de133793c274cfd831b17bed50e7375ac4892e4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de133793c274cfd831b17bed50e7375ac4892e4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de133793c274cfd831b17bed50e7375ac4892e4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de133793c274cfd831b17bed50e7375ac4892e4b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d92b5067f0af8b34f753e463cc7538466190c2db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92b5067f0af8b34f753e463cc7538466190c2db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d92b5067f0af8b34f753e463cc7538466190c2db"}], "stats": {"total": 75, "additions": 44, "deletions": 31}, "files": [{"sha": "2eea8298dae2e88f88766079ca2417eb9ebb721f", "filename": "doc/baseconf.py", "status": "modified", "additions": 44, "deletions": 31, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de133793c274cfd831b17bed50e7375ac4892e4b/doc%2Fbaseconf.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de133793c274cfd831b17bed50e7375ac4892e4b/doc%2Fbaseconf.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/doc%2Fbaseconf.py?ref=de133793c274cfd831b17bed50e7375ac4892e4b", "patch": "@@ -11,7 +11,7 @@\n # documentation root, use os.path.abspath to make it absolute, like shown here.\n #\n import os\n-import time\n+import subprocess\n import sys\n # sys.path.insert(0, os.path.abspath('.'))\n \n@@ -22,34 +22,44 @@\n \n # The full version, including alpha/beta/rc tags\n \n+# FIXME\n folder = os.path.dirname(os.path.realpath(__file__))\n-gcc_srcdir = os.path.join(folder, '..', 'gcc')\n+gcc_srcdir = os.path.join(folder, './objdir')\n \n-def read_file(name):\n+\n+def __read_file(name):\n     path = os.path.join(gcc_srcdir, name)\n     if os.path.exists(path):\n         return open(path).read().strip()\n     else:\n         return ''\n \n+\n+def __get_git_revision():\n+    try:\n+        r = subprocess.check_output('git rev-parse --short HEAD', shell=True, encoding='utf8',\n+                                    stderr=subprocess.DEVNULL)\n+        return r.strip()\n+    except subprocess.CalledProcessError:\n+        return None\n+\n+\n def __get_builder_name():\n     if '-b' in sys.argv:\n         return sys.argv[sys.argv.index('-b') + 1]\n     else:\n         return None\n \n \n-gcc_BASEVER = read_file('BASE-VER')\n-gcc_DEVPHASE = read_file('DEV-PHASE')\n-gcc_DATESTAMP = read_file('DATESTAMP')\n-gcc_REVISION = read_file('REVISION')\n+gcc_BASEVER = __read_file('BASE-VER')\n+gcc_DEVPHASE = __read_file('DEV-PHASE')\n+gcc_DATESTAMP = __read_file('DATESTAMP')\n+gcc_REVISION = __read_file('REVISION')\n \n-VERSION_PACKAGE = os.getenv('VERSION_PACKAGE')\n-BUGURL = os.getenv('BUGURL')\n+VERSION_PACKAGE = os.getenv('VERSION_PACKAGE', '(GCC)')\n+BUGURL = os.getenv('BUGURL', 'https://gcc.gnu.org/bugs/')\n MONOCHROMATIC = os.getenv('MONOCHROMATIC')\n \n-YEAR = time.strftime('%Y')\n-\n # The short X.Y version.\n version = gcc_BASEVER\n \n@@ -70,14 +80,10 @@ def __get_builder_name():\n \n rst_epilog = '''\n .. |gcc_version| replace:: %s\n-.. |needs_sphinx| replace:: %s\\n\n-''' % (gcc_BASEVER, needs_sphinx)\n-\n-if BUGURL:\n-    rst_epilog += '.. |bugurl| replace:: %s\\n' % BUGURL\n-\n-if VERSION_PACKAGE:\n-    rst_epilog += '.. |package_version| replace:: %s\\n' % VERSION_PACKAGE\n+.. |package_version| replace:: %s\n+.. |bugurl| replace:: %s\n+.. |needs_sphinx| replace:: %s\n+''' % (gcc_BASEVER, VERSION_PACKAGE, BUGURL, needs_sphinx)\n \n # -- General configuration ---------------------------------------------------\n \n@@ -124,14 +130,18 @@ def __get_builder_name():\n     'navigation_with_keys': True,\n }\n \n-html_logo = os.path.join(folder, 'logo.svg')\n+html_logo = '../logo.svg'\n \n-html_favicon = os.path.join(folder, 'favicon.ico')\n+html_favicon = '../favicon.ico'\n \n html_last_updated_fmt = ''\n \n+html_context = {\n+    'commit': __get_git_revision()\n+}\n+\n html_static_path = [\n-    os.path.join(folder, '_static')\n+    '../_static'\n ]\n \n html_css_files = [\n@@ -149,7 +159,7 @@ def __get_builder_name():\n # Use xelatex by default\n latex_engine = 'xelatex'\n \n-latex_logo = os.path.join(folder, 'logo.pdf')\n+latex_logo = '../logo.pdf'\n \n latex_elements = {\n     'pointsize': '11pt',\n@@ -171,11 +181,14 @@ def __get_builder_name():\n \n latex_table_style = ['colorrows']\n \n-# makeindex is much common on older systems\n-latex_use_xindy = False\n-\n texinfo_cross_references = False\n \n+texinfo_elements = {'preamble': \"\"\"\n+@definfoenclose strong,*,*\n+@definfoenclose emph,','\n+\"\"\"\n+}\n+\n # Use default as RTD theme uses default as well\n pygments_style = 'bw' if MONOCHROMATIC else 'default'\n \n@@ -188,13 +201,13 @@ def __get_builder_name():\n ]\n \n USER_LEVEL_DOCS = ('install', 'gcc', 'gfortran', 'cpp', 'gnat_rm', 'gnat_ugn',\n-                   'gccgo', 'gdc', 'libgomp', 'libquadmath', 'libitm', 'libgccjit')\n-INTERNAL_DOCS = ('gccint', 'cppinternals', 'gfc-internals', 'gnat-style', 'libiberty')\n+                   'gccgo', 'libgomp', 'libquadmath', 'libgccjit')\n+INTERNAL_DOCS = ('gccint', 'cppinternals', 'gfc-internals', 'gnat-style')\n \n # Cross manual reference mapping\n intersphinx_mapping = {}\n for manual in USER_LEVEL_DOCS + INTERNAL_DOCS:\n-    intersphinx_mapping[manual] = (f'https://gcc.gnu.org/onlinedocs/{manual}/', None)\n+    intersphinx_mapping[manual] = (f'https://splichal.eu/scripts/sphinx/{manual}/_build/html/', None)\n \n # Custom references\n extlinks = {\n@@ -213,5 +226,5 @@ def set_common(name, module):\n         module['todo_include_todos'] = True\n         module['tags'].add('development')\n \n-    html_theme_options['source_edit_link'] = f'https://gcc.gnu.org/onlinedocs/{name}' \\\n-                                               '/_sources/{filename}.txt'\n+    html_theme_options['source_edit_link'] = f'https://splichal.eu/scripts/sphinx/{name}' \\\n+                                               '/_build/html/_sources/{filename}.txt'"}]}