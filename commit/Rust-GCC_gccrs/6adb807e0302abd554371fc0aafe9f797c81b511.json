{"sha": "6adb807e0302abd554371fc0aafe9f797c81b511", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkYjgwN2UwMzAyYWJkNTU0MzcxZmMwYWFmZTlmNzk3YzgxYjUxMQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2009-04-03T23:38:51Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2009-04-03T23:38:51Z"}, "message": "ia64.md (extendsfdf2, [...]): Use fr_reg_or_fp01_operand instead of fr_register_operand\n\n\t* config/ia64/ia64.md (extendsfdf2, extendsfxf2, extenddfxf2,\n\ttruncdfsf2, truncxfsf2, truncxfdf2, floatdixf2, fix_truncsfdi2,\n\tfix_truncdfdi2, fix_truncxfdi2, fix_truncxfdi2_alts, floatunsdisf2,\n\tfloatunsdidf2, floatunsdixf2, fixuns_truncsfdi2, fixuns_truncdfdi2,\n\tfixuns_truncxfdi2, fixuns_truncxfdi2_alts, divsi3_internal,\n\tsmuldi3_highpart, umuldi3_highpart, ctzdi2, *getf_exp_xf,\n\tdivdi3_internal_lat, divdi3_internal_thr, mulditi3, *mulditi3_internal,\n\tumulditi3, *umulditi3_internal, addsf3, mulsf3, abssf2, negsf2,\n\t*nabssf2, sminsf3, smaxsf3, *maddsf4, *msubsf4, *nmulsf3, *nmaddsf4,\n\t*nmaddsf4_alts, divsf3, *sqrt_approx, sqrtsf2, sqrtsf2_internal_thr,\n\tadddf3, *adddf3_trunc, muldf3, *muldf3_trunc, absdf2, negdf2, *nabsdf2,\n\tsmindf3, smaxdf3, *madddf4, *madddf4_trunc, *msubdf4, *msubdf4_trunc,\n\t*nmuldf3, *nmuldf3_trunc, *nmadddf4, *nmadddf4_alts, *nmadddf4_truncsf,\n\t*nmadddf4_truncsf_alts, divdf3, sqrtdf2, sqrtdf2_internal_thr, divxf3,\n\tsqrtxf2, sqrtxf2_internal_thr, *recip_approx):\n\tUse fr_reg_or_fp01_operand instead of fr_register_operand\n\n\t* config/ia64/div.md (extend<mode>rf2, truncrf<mode>2,\n\trecip_approx_rf, divsf3_internal_thr, divsf3_internal_lat,\n\tdivdf3_internal_thr, divdf3_internal_lat divxf3_internal): Ditto.\n\nFrom-SVN: r145527", "tree": {"sha": "b954d7f05c77dcd6161da099747e6fe1f8420fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b954d7f05c77dcd6161da099747e6fe1f8420fec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6adb807e0302abd554371fc0aafe9f797c81b511", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6adb807e0302abd554371fc0aafe9f797c81b511", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6adb807e0302abd554371fc0aafe9f797c81b511", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6adb807e0302abd554371fc0aafe9f797c81b511/comments", "author": null, "committer": null, "parents": [{"sha": "d75b46b43476ac392f2cfe10d64940c075da468c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d75b46b43476ac392f2cfe10d64940c075da468c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d75b46b43476ac392f2cfe10d64940c075da468c"}], "stats": {"total": 381, "additions": 207, "deletions": 174}, "files": [{"sha": "bc1d68e9094b94b0c8191494141186876f5aa744", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6adb807e0302abd554371fc0aafe9f797c81b511/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6adb807e0302abd554371fc0aafe9f797c81b511/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6adb807e0302abd554371fc0aafe9f797c81b511", "patch": "@@ -1,3 +1,26 @@\n+2009-04-03  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* config/ia64/ia64.md (extendsfdf2, extendsfxf2, extenddfxf2,\n+\ttruncdfsf2, truncxfsf2, truncxfdf2, floatdixf2, fix_truncsfdi2,\n+\tfix_truncdfdi2, fix_truncxfdi2, fix_truncxfdi2_alts, floatunsdisf2,\n+\tfloatunsdidf2, floatunsdixf2, fixuns_truncsfdi2, fixuns_truncdfdi2,\n+\tfixuns_truncxfdi2, fixuns_truncxfdi2_alts, divsi3_internal,\n+\tsmuldi3_highpart, umuldi3_highpart, ctzdi2, *getf_exp_xf,\n+\tdivdi3_internal_lat, divdi3_internal_thr, mulditi3, *mulditi3_internal,\n+\tumulditi3, *umulditi3_internal, addsf3, mulsf3, abssf2, negsf2,\n+\t*nabssf2, sminsf3, smaxsf3, *maddsf4, *msubsf4, *nmulsf3, *nmaddsf4,\n+\t*nmaddsf4_alts, divsf3, *sqrt_approx, sqrtsf2, sqrtsf2_internal_thr,\n+\tadddf3, *adddf3_trunc, muldf3, *muldf3_trunc, absdf2, negdf2, *nabsdf2,\n+\tsmindf3, smaxdf3, *madddf4, *madddf4_trunc, *msubdf4, *msubdf4_trunc,\n+\t*nmuldf3, *nmuldf3_trunc, *nmadddf4, *nmadddf4_alts, *nmadddf4_truncsf,\n+\t*nmadddf4_truncsf_alts, divdf3, sqrtdf2, sqrtdf2_internal_thr, divxf3,\n+\tsqrtxf2, sqrtxf2_internal_thr, *recip_approx):\n+\tUse fr_reg_or_fp01_operand instead of fr_register_operand\n+\n+\t* config/ia64/div.md (extend<mode>rf2, truncrf<mode>2,\n+\trecip_approx_rf, divsf3_internal_thr, divsf3_internal_lat,\n+\tdivdf3_internal_thr, divdf3_internal_lat divxf3_internal): Ditto.\n+\n 2009-04-03  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/39607"}, {"sha": "6b29dfda6412d4942bf5a8b9f23a8cbf176300aa", "filename": "gcc/config/ia64/div.md", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6adb807e0302abd554371fc0aafe9f797c81b511/gcc%2Fconfig%2Fia64%2Fdiv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6adb807e0302abd554371fc0aafe9f797c81b511/gcc%2Fconfig%2Fia64%2Fdiv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fdiv.md?ref=6adb807e0302abd554371fc0aafe9f797c81b511", "patch": "@@ -162,60 +162,70 @@\n \n (define_insn \"extend<mode>rf2\"\n   [(set (match_operand:RF 0 \"fr_register_operand\" \"=f\")\n-        (float_extend:RF (match_operand:SDX_F 1 \"fr_register_operand\" \"f\")))]\n+        (float_extend:RF (match_operand:SDX_F 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"#\"\n   [(set_attr \"itanium_class\" \"fmisc\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_split\n   [(set (match_operand:RF 0 \"fr_register_operand\" \"\")\n-        (float_extend:RF (match_operand:SDX_F 1 \"fr_register_operand\" \"\")))]\n+        (float_extend:RF (match_operand:SDX_F 1 \"fr_reg_or_fp01_operand\" \"\")))]\n    \"reload_completed\"\n    [(set (match_dup 0) (match_dup 2))]\n {\n-   operands[2] = gen_rtx_REG (RFmode, REGNO (operands[1]));\n+   if (operands[1] == CONST0_RTX (<MODE>mode))\n+     operands[2] = gen_rtx_REG (RFmode, FR_REG (0));\n+   else if (operands[1] == CONST1_RTX (<MODE>mode))\n+     operands[2] = gen_rtx_REG (RFmode, FR_REG (1));\n+   else\n+     operands[2] = gen_rtx_REG (RFmode, REGNO (operands[1]));\n })\n \n \n (define_insn \"truncrf<mode>2\"\n   [(set (match_operand:SDX_F 0 \"fr_register_operand\" \"=f\")\n-        (float_truncate:SDX_F (match_operand:RF 1 \"fr_register_operand\" \"f\")))]\n+        (float_truncate:SDX_F (match_operand:RF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"#\"\n   [(set_attr \"itanium_class\" \"fmisc\")\n    (set_attr \"predicable\" \"yes\")])\n \n (define_split\n   [(set (match_operand:SDX_F 0 \"fr_register_operand\" \"\")\n-        (float_truncate:SDX_F (match_operand:RF 1 \"fr_register_operand\" \"\")))]\n+        (float_truncate:SDX_F (match_operand:RF 1 \"fr_reg_or_fp01_operand\" \"\")))]\n    \"reload_completed\"\n    [(set (match_dup 0) (match_dup 2))]\n {\n-   operands[2] = gen_rtx_REG (<MODE>mode, REGNO (operands[1]));\n+   if (operands[1] == CONST0_RTX (RFmode))\n+     operands[2] = gen_rtx_REG (<MODE>mode, FR_REG (0));\n+   else if (operands[1] == CONST1_RTX (RFmode))\n+     operands[2] = gen_rtx_REG (<MODE>mode, FR_REG (1));\n+   else\n+     operands[2] = gen_rtx_REG (<MODE>mode, REGNO (operands[1]));\n })\n \n ;; Reciprocal approximation\n \n (define_insn \"recip_approx_rf\"\n   [(set (match_operand:RF 0 \"fr_register_operand\" \"=f\")\n-        (unspec:RF [(match_operand:RF 1 \"fr_register_operand\" \"f\")\n-\t\t    (match_operand:RF 2 \"fr_register_operand\" \"f\")]\n+        (unspec:RF [(match_operand:RF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t    (match_operand:RF 2 \"fr_reg_or_fp01_operand\" \"fG\")]\n \t\t   UNSPEC_FR_RECIP_APPROX_RES))\n    (set (match_operand:BI 3 \"register_operand\" \"=c\")\n         (unspec:BI [(match_dup 1) (match_dup 2)] UNSPEC_FR_RECIP_APPROX))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"frcpa.s%4 %0, %3 = %1, %2\"\n+  \"frcpa.s%4 %0, %3 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")\n    (set_attr \"predicable\" \"no\")])\n \n ;; Single precision floating point division (maximum throughput algorithm).\n \n (define_expand \"divsf3_internal_thr\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"\")\n-        (div:SF (match_operand:SF 1 \"fr_register_operand\" \"\")\n-                (match_operand:SF 2 \"fr_register_operand\" \"\")))]\n+        (div:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"\")\n+                (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"\")))]\n   \"TARGET_INLINE_FLOAT_DIV\"\n {\n   rtx y     = gen_reg_rtx (RFmode);\n@@ -261,8 +271,8 @@\n \n (define_expand \"divsf3_internal_lat\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"\")\n-        (div:SF (match_operand:SF 1 \"fr_register_operand\" \"\")\n-                (match_operand:SF 2 \"fr_register_operand\" \"\")))]\n+        (div:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"\")\n+                (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"\")))]\n   \"TARGET_INLINE_FLOAT_DIV\"\n {\n   rtx y         = gen_reg_rtx (RFmode);\n@@ -312,8 +322,8 @@\n \n (define_expand \"divdf3_internal_thr\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"\")\n-        (div:DF (match_operand:DF 1 \"fr_register_operand\" \"\")\n-                (match_operand:DF 2 \"fr_register_operand\" \"\")))]\n+        (div:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"\")\n+                (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"\")))]\n   \"TARGET_INLINE_FLOAT_DIV\"\n {\n   rtx q_res = gen_reg_rtx (RFmode);\n@@ -367,8 +377,8 @@\n \n (define_expand \"divdf3_internal_lat\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"\")\n-        (div:DF (match_operand:DF 1 \"fr_register_operand\" \"\")\n-                (match_operand:DF 2 \"fr_register_operand\" \"\")))]\n+        (div:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"\")\n+                (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"\")))]\n   \"TARGET_INLINE_FLOAT_DIV\"\n {\n   rtx q_res     = gen_reg_rtx (RFmode);\n@@ -429,8 +439,8 @@\n \n (define_expand \"divxf3_internal\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"\")\n-        (div:XF (match_operand:XF 1 \"fr_register_operand\" \"\")\n-                (match_operand:XF 2 \"fr_register_operand\" \"\")))]\n+        (div:XF (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"\")\n+                (match_operand:XF 2 \"fr_reg_or_fp01_operand\" \"\")))]\n   \"TARGET_INLINE_FLOAT_DIV\"\n {\n   rtx q_res     = gen_reg_rtx (RFmode);"}, {"sha": "7c09236d045d3303a01e80239560e224c829fb87", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 155, "deletions": 155, "changes": 310, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6adb807e0302abd554371fc0aafe9f797c81b511/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6adb807e0302abd554371fc0aafe9f797c81b511/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=6adb807e0302abd554371fc0aafe9f797c81b511", "patch": "@@ -1188,134 +1188,134 @@\n \n (define_insn \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(float_extend:DF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n+\t(float_extend:DF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnorm.d %0 = %1\"\n+  \"fnorm.d %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"extendsfxf2\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n-\t(float_extend:XF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n+\t(float_extend:XF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnorm %0 = %1\"\n+  \"fnorm %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"extenddfxf2\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n-\t(float_extend:XF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n+\t(float_extend:XF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnorm %0 = %1\"\n+  \"fnorm %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(float_truncate:SF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n+\t(float_truncate:SF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnorm.s %0 = %1\"\n+  \"fnorm.s %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"truncxfsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(float_truncate:SF (match_operand:XF 1 \"fr_register_operand\" \"f\")))]\n+\t(float_truncate:SF (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnorm.s %0 = %1\"\n+  \"fnorm.s %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"truncxfdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(float_truncate:DF (match_operand:XF 1 \"fr_register_operand\" \"f\")))]\n+\t(float_truncate:DF (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnorm.d %0 = %1\"\n+  \"fnorm.d %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; Convert between signed integer types and floating point.\n \n (define_insn \"floatdixf2\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n-\t(float:XF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n+\t(float:XF (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.xf %0 = %1\"\n+  \"fcvt.xf %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n-\t(fix:DI (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n+\t(fix:DI (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.fx.trunc %0 = %1\"\n+  \"fcvt.fx.trunc %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n-\t(fix:DI (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n+\t(fix:DI (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.fx.trunc %0 = %1\"\n+  \"fcvt.fx.trunc %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_truncxfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n-\t(fix:DI (match_operand:XF 1 \"fr_register_operand\" \"f\")))]\n+\t(fix:DI (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.fx.trunc %0 = %1\"\n+  \"fcvt.fx.trunc %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_truncxfdi2_alts\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n-\t(fix:DI (match_operand:XF 1 \"fr_register_operand\" \"f\")))\n+\t(fix:DI (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")))\n    (use (match_operand:SI 2 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fcvt.fx.trunc.s%2 %0 = %1\"\n+  \"fcvt.fx.trunc.s%2 %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n ;; Convert between unsigned integer types and floating point.\n \n (define_insn \"floatunsdisf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(unsigned_float:SF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n+\t(unsigned_float:SF (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.xuf.s %0 = %1\"\n+  \"fcvt.xuf.s %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"floatunsdidf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(unsigned_float:DF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n+\t(unsigned_float:DF (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.xuf.d %0 = %1\"\n+  \"fcvt.xuf.d %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"floatunsdixf2\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n-\t(unsigned_float:XF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n+\t(unsigned_float:XF (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.xuf %0 = %1\"\n+  \"fcvt.xuf %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_truncsfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n-\t(unsigned_fix:DI (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n+\t(unsigned_fix:DI (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.fxu.trunc %0 = %1\"\n+  \"fcvt.fxu.trunc %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_truncdfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n-\t(unsigned_fix:DI (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n+\t(unsigned_fix:DI (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.fxu.trunc %0 = %1\"\n+  \"fcvt.fxu.trunc %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_truncxfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n-\t(unsigned_fix:DI (match_operand:XF 1 \"fr_register_operand\" \"f\")))]\n+\t(unsigned_fix:DI (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fcvt.fxu.trunc %0 = %1\"\n+  \"fcvt.fxu.trunc %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_truncxfdi2_alts\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n-\t(unsigned_fix:DI (match_operand:XF 1 \"fr_register_operand\" \"f\")))\n+\t(unsigned_fix:DI (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")))\n    (use (match_operand:SI 2 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fcvt.fxu.trunc.s%2 %0 = %1\"\n+  \"fcvt.fxu.trunc.s%2 %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \f\n ;; ::::::::::::::::::::\n@@ -2295,8 +2295,8 @@\n \n (define_insn_and_split \"divsi3_internal\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=&f\")\n-\t(float:XF (div:SI (match_operand:XF 1 \"fr_register_operand\" \"f\")\n-\t\t\t  (match_operand:XF 2 \"fr_register_operand\" \"f\"))))\n+\t(float:XF (div:SI (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t  (match_operand:XF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))\n    (clobber (match_scratch:XF 4 \"=&f\"))\n    (clobber (match_scratch:XF 5 \"=&f\"))\n    (clobber (match_scratch:BI 6 \"=c\"))\n@@ -2460,25 +2460,25 @@\n \t(truncate:DI\n \t (lshiftrt:TI\n \t  (mult:TI (sign_extend:TI\n-\t\t     (match_operand:DI 1 \"fr_register_operand\" \"f\"))\n+\t\t     (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t   (sign_extend:TI\n-\t\t     (match_operand:DI 2 \"fr_register_operand\" \"f\")))\n+\t\t     (match_operand:DI 2 \"fr_reg_or_fp01_operand\" \"fG\")))\n \t  (const_int 64))))]\n   \"\"\n-  \"xmpy.h %0 = %1, %2\"\n+  \"xmpy.h %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"umuldi3_highpart\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(truncate:DI\n \t (lshiftrt:TI\n \t  (mult:TI (zero_extend:TI\n-\t\t     (match_operand:DI 1 \"fr_register_operand\" \"f\"))\n+\t\t     (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t   (zero_extend:TI\n-\t\t     (match_operand:DI 2 \"fr_register_operand\" \"f\")))\n+\t\t     (match_operand:DI 2 \"fr_reg_or_fp01_operand\" \"fG\")))\n \t  (const_int 64))))]\n   \"\"\n-  \"xmpy.hu %0 = %1, %2\"\n+  \"xmpy.hu %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"negdi2\"\n@@ -2574,7 +2574,7 @@\n ;; Note the computation here is op0 = 63 - (exp - 0xffff).\n (define_expand \"clzdi2\"\n   [(set (match_dup 2)\n-\t(unsigned_float:XF (match_operand:DI 1 \"fr_register_operand\" \"\")))\n+\t(unsigned_float:XF (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"\")))\n    (set (match_dup 3)\n \t(unspec:DI [(match_dup 2)] UNSPEC_GETF_EXP))\n    (set (match_dup 4) (const_int 65598))\n@@ -2603,10 +2603,10 @@\n \n (define_insn \"*getf_exp_xf\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n-\t(unspec:DI [(match_operand:XF 1 \"fr_register_operand\" \"f\")]\n+\t(unspec:DI [(match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")]\n \t\t   UNSPEC_GETF_EXP))]\n   \"\"\n-  \"getf.exp %0 = %1\"\n+  \"getf.exp %0 = %F1\"\n   [(set_attr \"itanium_class\" \"frfr\")])\n \n (define_expand \"divdi3\"\n@@ -2709,8 +2709,8 @@\n \n (define_insn_and_split \"divdi3_internal_lat\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=&f\")\n-\t(float:XF (div:SI (match_operand:XF 1 \"fr_register_operand\" \"f\")\n-\t\t\t  (match_operand:XF 2 \"fr_register_operand\" \"f\"))))\n+\t(float:XF (div:SI (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t  (match_operand:XF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))\n    (clobber (match_scratch:XF 3 \"=&f\"))\n    (clobber (match_scratch:XF 4 \"=&f\"))\n    (clobber (match_scratch:XF 5 \"=&f\"))\n@@ -2770,8 +2770,8 @@\n \n (define_insn_and_split \"divdi3_internal_thr\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=&f\")\n-\t(float:XF (div:SI (match_operand:XF 1 \"fr_register_operand\" \"f\")\n-\t\t\t  (match_operand:XF 2 \"fr_register_operand\" \"f\"))))\n+\t(float:XF (div:SI (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t  (match_operand:XF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))\n    (clobber (match_scratch:XF 3 \"=&f\"))\n    (clobber (match_scratch:XF 4 \"=f\"))\n    (clobber (match_scratch:BI 5 \"=c\"))]\n@@ -2934,18 +2934,18 @@\n (define_expand \"mulditi3\"\n   [(set (match_operand:TI 0 \"fr_register_operand\" \"\")\n \t(mult:TI (sign_extend:TI\n-\t\t   (match_operand:DI 1 \"fr_register_operand\" \"\"))\n+\t\t   (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"\"))\n \t\t (sign_extend:TI\n-\t\t   (match_operand:DI 2 \"fr_register_operand\" \"\"))))]\n+\t\t   (match_operand:DI 2 \"fr_reg_or_fp01_operand\" \"\"))))]\n   \"\"\n   \"\")\n \n (define_insn_and_split \"*mulditi3_internal\"\n   [(set (match_operand:TI 0 \"fr_register_operand\" \"=&f\")\n \t(mult:TI (sign_extend:TI\n-\t\t   (match_operand:DI 1 \"fr_register_operand\" \"%f\"))\n+\t\t   (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t (sign_extend:TI\n-\t\t   (match_operand:DI 2 \"fr_register_operand\" \"f\"))))]\n+\t\t   (match_operand:DI 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"#\"\n   \"reload_completed\"\n@@ -2964,18 +2964,18 @@\n (define_expand \"umulditi3\"\n   [(set (match_operand:TI 0 \"fr_register_operand\" \"\")\n \t(mult:TI (zero_extend:TI\n-\t\t   (match_operand:DI 1 \"fr_register_operand\" \"\"))\n+\t\t   (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"\"))\n \t\t (zero_extend:TI\n-\t\t   (match_operand:DI 2 \"fr_register_operand\" \"\"))))]\n+\t\t   (match_operand:DI 2 \"fr_reg_or_fp01_operand\" \"\"))))]\n   \"\"\n   \"\")\n \n (define_insn_and_split \"*umulditi3_internal\"\n   [(set (match_operand:TI 0 \"fr_register_operand\" \"=&f\")\n \t(mult:TI (zero_extend:TI\n-\t\t   (match_operand:DI 1 \"fr_register_operand\" \"%f\"))\n+\t\t   (match_operand:DI 1 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t (zero_extend:TI\n-\t\t   (match_operand:DI 2 \"fr_register_operand\" \"f\"))))]\n+\t\t   (match_operand:DI 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"#\"\n   \"reload_completed\"\n@@ -3020,10 +3020,10 @@\n \n (define_insn \"addsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:SF (match_operand:SF 1 \"fr_register_operand\" \"%f\")\n+\t(plus:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fadd.s %0 = %1, %F2\"\n+  \"fadd.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subsf3\"\n@@ -3036,31 +3036,31 @@\n \n (define_insn \"mulsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(mult:SF (match_operand:SF 1 \"fr_register_operand\" \"%f\")\n-\t\t (match_operand:SF 2 \"fr_register_operand\" \"f\")))]\n+\t(mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmpy.s %0 = %1, %2\"\n+  \"fmpy.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"abssf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(abs:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n+\t(abs:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fabs %0 = %1\"\n+  \"fabs %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(neg:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n+\t(neg:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fneg %0 = %1\"\n+  \"fneg %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*nabssf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(neg:SF (abs:SF (match_operand:SF 1 \"fr_register_operand\" \"f\"))))]\n+\t(neg:SF (abs:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnegabs %0 = %1\"\n+  \"fnegabs %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"copysignsf3\"\n@@ -3083,69 +3083,69 @@\n \n (define_insn \"sminsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(smin:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n+\t(smin:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmin %0 = %1, %F2\"\n+  \"fmin %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"smaxsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(smax:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n+\t(smax:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmax %0 = %1, %F2\"\n+  \"fmax %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*maddsf4\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:SF (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n-\t\t\t  (match_operand:SF 2 \"fr_register_operand\" \"f\"))\n+\t(plus:SF (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t  (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fma.s %0 = %1, %2, %F3\"\n+  \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubsf4\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(minus:SF (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\"))\n+\t(minus:SF (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t  (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fms.s %0 = %1, %2, %F3\"\n+  \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmulsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(neg:SF (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n-\t\t\t (match_operand:SF 2 \"fr_register_operand\" \"f\"))))]\n+\t(neg:SF (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnmpy.s %0 = %1, %2\"\n+  \"fnmpy.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddsf4\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(minus:SF (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\") \n-\t\t  (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\"))))]\n+\t\t  (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnma.s %0 = %1, %2, %F3\"\n+  \"fnma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddsf4_alts\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(minus:SF (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\") \n-\t\t  (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\"))))\n+\t\t  (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fnma.s.s%4 %0 = %1, %2, %F3\"\n+  \"fnma.s.s%4 %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_expand \"divsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"\")\n-\t(div:SF (match_operand:SF 1 \"fr_register_operand\" \"\")\n-\t\t(match_operand:SF 2 \"fr_register_operand\" \"\")))]\n+\t(div:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"\")\n+\t\t(match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"\")))]\n   \"TARGET_INLINE_FLOAT_DIV\"\n {\n   rtx insn;\n@@ -3162,7 +3162,7 @@\n (define_insn \"*sqrt_approx\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n         (div:XF (const_int 1)\n-\t\t(unspec:XF [(match_operand:XF 2 \"fr_register_operand\" \"f\")]\n+\t\t(unspec:XF [(match_operand:XF 2 \"fr_reg_or_fp01_operand\" \"fG\")]\n \t\t\t   UNSPEC_FR_SQRT_RECIP_APPROX_RES)))\n    (set (match_operand:BI 1 \"register_operand\" \"=c\")\n         (unspec:BI [(match_dup 2)] UNSPEC_FR_SQRT_RECIP_APPROX))\n@@ -3182,7 +3182,7 @@\n \n (define_expand \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=&f\")\n-\t(sqrt:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n+\t(sqrt:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"TARGET_INLINE_SQRT\"\n {\n   rtx insn;\n@@ -3205,7 +3205,7 @@\n \n (define_insn_and_split \"sqrtsf2_internal_thr\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=&f\")\n-\t(sqrt:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")))\n+\t(sqrt:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")))\n    ;; Register r2 in optimization guide.\n    (clobber (match_scratch:DI 2 \"=r\"))\n    ;; Register f8 in optimization guide\n@@ -3316,19 +3316,19 @@\n \n (define_insn \"adddf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:DF (match_operand:DF 1 \"fr_register_operand\" \"%f\")\n+\t(plus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fadd.d %0 = %1, %F2\"\n+  \"fadd.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*adddf3_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (plus:DF (match_operand:DF 1 \"fr_register_operand\" \"%f\")\n+\t  (plus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fadd.s %0 = %1, %F2\"\n+  \"fadd.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subdf3\"\n@@ -3350,40 +3350,40 @@\n \n (define_insn \"muldf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"fr_register_operand\" \"f\")))]\n+\t(mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmpy.d %0 = %1, %2\"\n+  \"fmpy.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*muldf3_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n+\t  (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fmpy.s %0 = %1, %2\"\n+  \"fmpy.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(abs:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n+\t(abs:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fabs %0 = %1\"\n+  \"fabs %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(neg:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n+\t(neg:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fneg %0 = %1\"\n+  \"fneg %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*nabsdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(neg:DF (abs:DF (match_operand:DF 1 \"fr_register_operand\" \"f\"))))]\n+\t(neg:DF (abs:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnegabs %0 = %1\"\n+  \"fnegabs %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"copysigndf3\"\n@@ -3406,119 +3406,119 @@\n \n (define_insn \"smindf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(smin:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t(smin:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmin %0 = %1, %F2\"\n+  \"fmin %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"smaxdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(smax:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n+\t(smax:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmax %0 = %1, %F2\"\n+  \"fmax %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*madddf4\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t  (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n+\t(plus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t  (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fma.d %0 = %1, %2, %F3\"\n+  \"fma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*madddf4_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (plus:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t    (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n+\t  (plus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t    (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fma.s %0 = %1, %2, %F3\"\n+  \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubdf4\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(minus:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n+\t(minus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t  (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fms.d %0 = %1, %2, %F3\"\n+  \"fms.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubdf4_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (minus:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t     (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n+\t  (minus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t     (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n \t\t    (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fms.s %0 = %1, %2, %F3\"\n+  \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmuldf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(neg:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n+\t(neg:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnmpy.d %0 = %1, %2\"\n+  \"fnmpy.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmuldf3_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (neg:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))))]\n+\t  (neg:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))))]\n   \"\"\n-  \"fnmpy.s %0 = %1, %2\"\n+  \"fnmpy.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n+\t\t  (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnma.d %0 = %1, %2, %F3\"\n+  \"fnma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4_alts\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))))\n+\t\t  (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fnma.d.s%4 %0 = %1, %2, %F3\"\n+  \"fnma.d.s%4 %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n \t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))))]\n+\t\t  (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))))]\n   \"\"\n-  \"fnma.s %0 = %1, %2, %F3\"\n+  \"fnma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4_truncsf_alts\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n \t(minus:DF (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))))\n+\t\t  (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n+\t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fnma.s.s%4 %0 = %1, %2, %F3\"\n+  \"fnma.s.s%4 %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_expand \"divdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"\")\n-\t(div:DF (match_operand:DF 1 \"fr_register_operand\" \"\")\n-\t\t(match_operand:DF 2 \"fr_register_operand\" \"\")))]\n+\t(div:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"\")\n+\t\t(match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"\")))]\n   \"TARGET_INLINE_FLOAT_DIV\"\n {\n   rtx insn;\n@@ -3534,7 +3534,7 @@\n \n (define_expand \"sqrtdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=&f\")\n-\t(sqrt:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n+\t(sqrt:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"TARGET_INLINE_SQRT\"\n {\n   rtx insn;\n@@ -3557,7 +3557,7 @@\n \n (define_insn_and_split \"sqrtdf2_internal_thr\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=&f\")\n-\t(sqrt:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))\n+\t(sqrt:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")))\n    ;; Register r2 in optimization guide.\n    (clobber (match_scratch:DI 2 \"=r\"))\n    ;; Register f8 in optimization guide\n@@ -4035,8 +4035,8 @@\n \n (define_expand \"divxf3\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"\")\n-\t(div:XF (match_operand:XF 1 \"fr_register_operand\" \"\")\n-\t\t(match_operand:XF 2 \"fr_register_operand\" \"\")))]\n+\t(div:XF (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"\")\n+\t\t(match_operand:XF 2 \"fr_reg_or_fp01_operand\" \"\")))]\n   \"TARGET_INLINE_FLOAT_DIV\"\n {\n   /* There is only one divxf3 sequence, not two like for divsf and divdf.  */\n@@ -4048,7 +4048,7 @@\n \n (define_expand \"sqrtxf2\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=&f\")\n-\t(sqrt:XF (match_operand:XF 1 \"fr_register_operand\" \"f\")))]\n+\t(sqrt:XF (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"TARGET_INLINE_SQRT\"\n {\n   rtx insn;\n@@ -4071,7 +4071,7 @@\n \n (define_insn_and_split \"sqrtxf2_internal_thr\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=&f\")\n-\t(sqrt:XF (match_operand:XF 1 \"fr_register_operand\" \"f\")))\n+\t(sqrt:XF (match_operand:XF 1 \"fr_reg_or_fp01_operand\" \"fG\")))\n    ;; Register r2 in optimization guide.\n    (clobber (match_scratch:DI 2 \"=r\"))\n    ;; Register f8 in optimization guide\n@@ -4214,14 +4214,14 @@\n (define_insn \"*recip_approx\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n \t(unspec:XF [(const_int 1)\n-\t\t    (match_operand:XF 3 \"fr_register_operand\" \"f\")]\n+\t\t    (match_operand:XF 3 \"fr_reg_or_fp01_operand\" \"fG\")]\n \t\t   UNSPEC_FR_RECIP_APPROX_RES))\n    (set (match_operand:BI 1 \"register_operand\" \"=c\")\n-\t(unspec:BI [(match_operand:XF 2 \"fr_register_operand\" \"f\")\n+\t(unspec:BI [(match_operand:XF 2 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t    (match_dup 3)] UNSPEC_FR_RECIP_APPROX))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"frcpa.s%4 %0, %1 = %2, %3\"\n+  \"frcpa.s%4 %0, %1 = %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmisc\")\n    (set_attr \"predicable\" \"no\")])\n \f"}]}