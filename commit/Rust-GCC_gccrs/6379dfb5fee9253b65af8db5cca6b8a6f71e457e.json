{"sha": "6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3OWRmYjVmZWU5MjUzYjY1YWY4ZGI1Y2NhNmI4YTZmNzFlNDU3ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-17T14:30:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-17T14:30:53Z"}, "message": "re PR tree-optimization/68946 (ICE at -O3 on x86_64-linux-gnu in both 32- and 64-bit modes (in vect_analyze_stmt, at tree-vect-stmts.c:8013))\n\n2015-12-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68946\n\t* tree-vect-slp.c (vect_slp_analyze_node_operations): Push\n\tSLP def type to stmt operands one stmt at a time.\n\n\t* gcc.dg/torture/pr68946.c: New testcase.\n\nFrom-SVN: r231770", "tree": {"sha": "dd75a3b7a7467cbc5216d82bed2901709164e826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd75a3b7a7467cbc5216d82bed2901709164e826"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1dc39e5ec29e2d587b722efac4e7742ddc581c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1dc39e5ec29e2d587b722efac4e7742ddc581c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1dc39e5ec29e2d587b722efac4e7742ddc581c4"}], "stats": {"total": 65, "additions": 48, "deletions": 17}, "files": [{"sha": "e1c522800b918f91813593f07d5af026c2957bdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "patch": "@@ -1,3 +1,9 @@\n+2015-12-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68946\n+\t* tree-vect-slp.c (vect_slp_analyze_node_operations): Push\n+\tSLP def type to stmt operands one stmt at a time.\n+\n 2015-12-17  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* langhooks.h (struct lang_hooks_for_types): New get_bias_field."}, {"sha": "976356d42dba26987f4d8f5f0f26e6148e3ecf16", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "patch": "@@ -1,3 +1,8 @@\n+2015-12-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68946\n+\t* gcc.dg/torture/pr68946.c: New testcase.\n+\n 2015-12-17  Nathan Sidwell  <nathan@acm.org>\n \n \t* c-c++-common/Wunused-var-13.c: Requires label values."}, {"sha": "3a1cff41fcf07a2277fd0ec83388cec22f8683a7", "filename": "gcc/testsuite/gcc.dg/torture/pr68946.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68946.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68946.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68946.c?ref=6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fno-vect-cost-model\" } */\n+\n+int printf (const char *, ...);\n+\n+int a, b, g;\n+short c, e, h, i;\n+int f[8];\n+void fn1() {\n+    short j;\n+    for (; a;) {\n+\tprintf(\"%d\", g);\n+\tb = 7;\n+\tfor (; b >= 0; b--) {\n+\t    i = 1;\n+\t    short k = f[b];\n+\t    e = k ? k : 3;\n+\t    j = (i && (c |= e)) << 3;\n+\t    int l = j, m = 0;\n+\t    h = l < 0 || l >> m;\n+\t    f[b] = h;\n+\t}\n+    }\n+}"}, {"sha": "7ec20469fe2e0a057888360da1349afa0bf5ee9c", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6379dfb5fee9253b65af8db5cca6b8a6f71e457e/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=6379dfb5fee9253b65af8db5cca6b8a6f71e457e", "patch": "@@ -2221,32 +2221,28 @@ vect_slp_analyze_node_operations (slp_tree node)\n     if (!vect_slp_analyze_node_operations (child))\n       return false;\n \n-  /* Push SLP node def-type to stmts.  */\n-  FOR_EACH_VEC_ELT (SLP_TREE_CHILDREN (node), i, child)\n-    if (SLP_TREE_DEF_TYPE (child) != vect_internal_def)\n-      FOR_EACH_VEC_ELT (SLP_TREE_SCALAR_STMTS (child), j, stmt)\n-\tSTMT_VINFO_DEF_TYPE (vinfo_for_stmt (stmt)) = SLP_TREE_DEF_TYPE (child);\n-\n   bool res = true;\n   FOR_EACH_VEC_ELT (SLP_TREE_SCALAR_STMTS (node), i, stmt)\n     {\n       stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n       gcc_assert (stmt_info);\n       gcc_assert (STMT_SLP_TYPE (stmt_info) != loop_vect);\n \n-      if (!vect_analyze_stmt (stmt, &dummy, node))\n-\t{\n-\t  res = false;\n-\t  break;\n-\t}\n+      /* Push SLP node def-type to stmt operands.  */\n+      FOR_EACH_VEC_ELT (SLP_TREE_CHILDREN (node), j, child)\n+\tif (SLP_TREE_DEF_TYPE (child) != vect_internal_def)\n+\t  STMT_VINFO_DEF_TYPE (vinfo_for_stmt (SLP_TREE_SCALAR_STMTS (child)[i]))\n+\t    = SLP_TREE_DEF_TYPE (child);\n+      res = vect_analyze_stmt (stmt, &dummy, node);\n+      /* Restore def-types.  */\n+      FOR_EACH_VEC_ELT (SLP_TREE_CHILDREN (node), j, child)\n+\tif (SLP_TREE_DEF_TYPE (child) != vect_internal_def)\n+\t  STMT_VINFO_DEF_TYPE (vinfo_for_stmt (SLP_TREE_SCALAR_STMTS (child)[i]))\n+\t    = vect_internal_def;\n+      if (! res)\n+\tbreak;\n     }\n \n-  /* Restore stmt def-types.  */\n-  FOR_EACH_VEC_ELT (SLP_TREE_CHILDREN (node), i, child)\n-    if (SLP_TREE_DEF_TYPE (child) != vect_internal_def)\n-      FOR_EACH_VEC_ELT (SLP_TREE_SCALAR_STMTS (child), j, stmt)\n-\tSTMT_VINFO_DEF_TYPE (vinfo_for_stmt (stmt)) = vect_internal_def;\n-\n   return res;\n }\n "}]}