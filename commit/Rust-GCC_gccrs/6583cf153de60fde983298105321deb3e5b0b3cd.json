{"sha": "6583cf153de60fde983298105321deb3e5b0b3cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU4M2NmMTUzZGU2MGZkZTk4MzI5ODEwNTMyMWRlYjNlNWIwYjNjZA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2006-07-25T15:33:50Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2006-07-25T15:33:50Z"}, "message": "ggc-page.c (NUM_SIZE_LOOKUP): New constant - the length of the size_lookup[] array.\n\n* ggc-page.c (NUM_SIZE_LOOKUP): New constant - the length of the size_lookup[] array.\n  (ggc_alloc_stat): Use NUM_SIZE_LOOKUP.\n  (ggc_pch_count_object): Likewise.\n  (ggc_pch_alloc_object): Likewise.\n  (ggc_pch_write_object): Likewise.\n  (init_ggc): Do not attempt to initialize entries in the size_lookup[] array\n  for objects whose size is greater than than the length of the array.\n\nFrom-SVN: r115738", "tree": {"sha": "097df08f8c404a8e292b7d34a666becdc2a914d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/097df08f8c404a8e292b7d34a666becdc2a914d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6583cf153de60fde983298105321deb3e5b0b3cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6583cf153de60fde983298105321deb3e5b0b3cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6583cf153de60fde983298105321deb3e5b0b3cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6583cf153de60fde983298105321deb3e5b0b3cd/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2daec0f0854b1517fa6a2eb44762dda8cb8000ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2daec0f0854b1517fa6a2eb44762dda8cb8000ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2daec0f0854b1517fa6a2eb44762dda8cb8000ed"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "636ec23747230e0d5c93d675f9d57c3f1c7f0cb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6583cf153de60fde983298105321deb3e5b0b3cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6583cf153de60fde983298105321deb3e5b0b3cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6583cf153de60fde983298105321deb3e5b0b3cd", "patch": "@@ -1,3 +1,15 @@\n+2006-07-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* ggc-page.c (NUM_SIZE_LOOKUP): New constant - the length of the\n+\tsize_lookup[] array.\n+\t(ggc_alloc_stat): Use NUM_SIZE_LOOKUP.\n+\t(ggc_pch_count_object): Likewise.\n+\t(ggc_pch_alloc_object): Likewise.\n+\t(ggc_pch_write_object): Likewise.\n+\t(init_ggc): Do not attempt to initialize entries in the\n+\tsize_lookup[] array for objects whose size is greater than than\n+\tthe length of the array.\n+\n 2006-07-25  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* dbxout.c (output_used_types_helper): Push queued types"}, {"sha": "5d880339d5a3e56d0244930ab1a6426b3c8fa3d5", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6583cf153de60fde983298105321deb3e5b0b3cd/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6583cf153de60fde983298105321deb3e5b0b3cd/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=6583cf153de60fde983298105321deb3e5b0b3cd", "patch": "@@ -1029,8 +1029,8 @@ release_pages (void)\n \n /* This table provides a fast way to determine ceil(log_2(size)) for\n    allocation requests.  The minimum allocation size is eight bytes.  */\n-\n-static unsigned char size_lookup[512] =\n+#define NUM_SIZE_LOOKUP 512\n+static unsigned char size_lookup[NUM_SIZE_LOOKUP] =\n {\n   3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4,\n   4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n@@ -1084,7 +1084,7 @@ ggc_alloc_stat (size_t size MEM_STAT_DECL)\n   struct page_entry *entry;\n   void *result;\n \n-  if (size < 512)\n+  if (size < NUM_SIZE_LOOKUP)\n     {\n       order = size_lookup[size];\n       object_size = OBJECT_SIZE (order);\n@@ -1534,8 +1534,11 @@ init_ggc (void)\n       int o;\n       int i;\n \n-      o = size_lookup[OBJECT_SIZE (order)];\n-      for (i = OBJECT_SIZE (order); size_lookup [i] == o; --i)\n+      i = OBJECT_SIZE (order);\n+      if (i >= NUM_SIZE_LOOKUP)\n+\tcontinue;\n+\n+      for (o = size_lookup[i]; o == size_lookup [i]; --i)\n \tsize_lookup[i] = order;\n     }\n \n@@ -2046,7 +2049,7 @@ ggc_pch_count_object (struct ggc_pch_data *d, void *x ATTRIBUTE_UNUSED,\n {\n   unsigned order;\n \n-  if (size < 512)\n+  if (size < NUM_SIZE_LOOKUP)\n     order = size_lookup[size];\n   else\n     {\n@@ -2091,7 +2094,7 @@ ggc_pch_alloc_object (struct ggc_pch_data *d, void *x ATTRIBUTE_UNUSED,\n   unsigned order;\n   char *result;\n \n-  if (size < 512)\n+  if (size < NUM_SIZE_LOOKUP)\n     order = size_lookup[size];\n   else\n     {\n@@ -2120,7 +2123,7 @@ ggc_pch_write_object (struct ggc_pch_data *d ATTRIBUTE_UNUSED,\n   unsigned order;\n   static const char emptyBytes[256];\n \n-  if (size < 512)\n+  if (size < NUM_SIZE_LOOKUP)\n     order = size_lookup[size];\n   else\n     {"}]}