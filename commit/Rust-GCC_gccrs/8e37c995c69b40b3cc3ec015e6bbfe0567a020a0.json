{"sha": "8e37c995c69b40b3cc3ec015e6bbfe0567a020a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzN2M5OTVjNjliNDBiM2NjM2VjMDE1ZTZiYmZlMDU2N2EwMjBhMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-07-03T08:29:08Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-07-03T08:29:08Z"}, "message": "Add -fprofile-note option.\n\n2019-07-03  Martin Liska  <mliska@suse.cz>\n\n\t* common.opt: Add fprofile-note.\n\t* coverage.c (coverage_init): Append the option\n\tto bbg_file_name.\n\t* doc/invoke.texi: Document -fprofile-note.\n\nFrom-SVN: r272990", "tree": {"sha": "05796cb776b5759125071800eac8dd76d118e8ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05796cb776b5759125071800eac8dd76d118e8ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7b3509eb6aa51d696be5edba6f4e451ceff03a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7b3509eb6aa51d696be5edba6f4e451ceff03a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7b3509eb6aa51d696be5edba6f4e451ceff03a0"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "ca9ca7bfd06c936ff65e9a28607c192021fd7f4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e37c995c69b40b3cc3ec015e6bbfe0567a020a0", "patch": "@@ -1,3 +1,10 @@\n+2019-07-03  Martin Liska  <mliska@suse.cz>\n+\n+\t* common.opt: Add fprofile-note.\n+\t* coverage.c (coverage_init): Append the option\n+\tto bbg_file_name.\n+\t* doc/invoke.texi: Document -fprofile-note.\n+\n 2019-07-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/91033"}, {"sha": "c1b90562b9b1eddd089d6f8cb6aac9c6165e59dc", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=8e37c995c69b40b3cc3ec015e6bbfe0567a020a0", "patch": "@@ -2096,6 +2096,10 @@ Common Joined RejectNegative Var(profile_data_prefix)\n Set the top-level directory for storing the profile data.\n The default is 'pwd'.\n \n+fprofile-note=\n+Common Joined RejectNegative Var(profile_note_location)\n+Select the name for storing the profile note file.\n+\n fprofile-correction\n Common Report Var(flag_profile_correction)\n Enable correction of flow inconsistent profile data input."}, {"sha": "960ff7ee86ab7a99cfd2ae1d2811f597ac658987", "filename": "gcc/coverage.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=8e37c995c69b40b3cc3ec015e6bbfe0567a020a0", "patch": "@@ -1255,9 +1255,14 @@ coverage_init (const char *filename)\n   /* Name of bbg file.  */\n   if (flag_test_coverage && !flag_compare_debug)\n     {\n-      bbg_file_name = XNEWVEC (char, len + strlen (GCOV_NOTE_SUFFIX) + 1);\n-      memcpy (bbg_file_name, filename, len);\n-      strcpy (bbg_file_name + len, GCOV_NOTE_SUFFIX);\n+      if (profile_note_location)\n+\tbbg_file_name = xstrdup (profile_note_location);\n+      else\n+\t{\n+\t  bbg_file_name = XNEWVEC (char, len + strlen (GCOV_NOTE_SUFFIX) + 1);\n+\t  memcpy (bbg_file_name, filename, len);\n+\t  strcpy (bbg_file_name + len, GCOV_NOTE_SUFFIX);\n+\t}\n \n       if (!gcov_open (bbg_file_name, -1))\n \t{"}, {"sha": "73d16b59d91695a17f2f93588074ddb151d2c284", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e37c995c69b40b3cc3ec015e6bbfe0567a020a0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8e37c995c69b40b3cc3ec015e6bbfe0567a020a0", "patch": "@@ -493,8 +493,8 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-p  -pg  -fprofile-arcs  --coverage  -ftest-coverage @gol\n -fprofile-abs-path @gol\n -fprofile-dir=@var{path}  -fprofile-generate  -fprofile-generate=@var{path} @gol\n--fprofile-update=@var{method}  -fprofile-filter-files=@var{regex} @gol\n--fprofile-exclude-files=@var{regex} @gol\n+-fprofile-note=@var{path}  -fprofile-update=@var{method} @gol\n+-fprofile-filter-files=@var{regex}  -fprofile-exclude-files=@var{regex} @gol\n -fsanitize=@var{style}  -fsanitize-recover  -fsanitize-recover=@var{style} @gol\n -fasan-shadow-offset=@var{number}  -fsanitize-sections=@var{s1},@var{s2},... @gol\n -fsanitize-undefined-trap-on-error  -fbounds-check @gol\n@@ -12404,6 +12404,11 @@ the profile feedback data files. See @option{-fprofile-dir}.\n To optimize the program based on the collected profile information, use\n @option{-fprofile-use}.  @xref{Optimize Options}, for more information.\n \n+@item -fprofile-note=@var{path}\n+@opindex fprofile-note\n+\n+If @var{path} is specified, GCC saves gcno filename into @var{path} location.\n+\n @item -fprofile-update=@var{method}\n @opindex fprofile-update\n "}]}