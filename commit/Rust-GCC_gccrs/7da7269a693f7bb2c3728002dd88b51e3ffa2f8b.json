{"sha": "7da7269a693f7bb2c3728002dd88b51e3ffa2f8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RhNzI2OWE2OTNmN2JiMmMzNzI4MDAyZGQ4OGI1MWUzZmZhMmY4Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-23T09:49:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-23T09:49:12Z"}, "message": "re PR target/70321 (STV generates less optimized code)\n\n\tPR target/70321\n\t* config/i386/i386.md (*anddi3_doubleword, *<code>di3_doubleword):\n\tOptimize TARGET_STV splitters, if high or low word of last argument\n\tis 0 or -1.\n\nFrom-SVN: r234416", "tree": {"sha": "31e4ae9d7d1f244377660df92cfd0b2e860c27bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31e4ae9d7d1f244377660df92cfd0b2e860c27bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bfd84e6ba55031f17539f94be6a78b017e47e6f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd84e6ba55031f17539f94be6a78b017e47e6f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd84e6ba55031f17539f94be6a78b017e47e6f4"}], "stats": {"total": 79, "additions": 63, "deletions": 16}, "files": [{"sha": "6261b3a8162c9a94789d5bc184b7e649369839be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7da7269a693f7bb2c3728002dd88b51e3ffa2f8b", "patch": "@@ -1,3 +1,10 @@\n+2016-03-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70321\n+\t* config/i386/i386.md (*anddi3_doubleword, *<code>di3_doubleword):\n+\tOptimize TARGET_STV splitters, if high or low word of last argument\n+\tis 0 or -1.\n+\n 2016-03-22  Jeff Law  <law@redhat.com>\n \n \tPR target/70232"}, {"sha": "51e9a6eb75a9bb03903b2c57edce40fc76ebef77", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 56, "deletions": 16, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da7269a693f7bb2c3728002dd88b51e3ffa2f8b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7da7269a693f7bb2c3728002dd88b51e3ffa2f8b", "patch": "@@ -8141,16 +8141,31 @@\n \t (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0\")\n \t (match_operand:DI 2 \"x86_64_szext_general_operand\" \"Z,re,rm\")))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2 && ix86_binary_operator_ok (AND, DImode, operands)\"\n+  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2\n+   && ix86_binary_operator_ok (AND, DImode, operands)\"\n   \"#\"\n   \"&& reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t\t   (and:SI (match_dup 1) (match_dup 2)))\n-\t      (clobber (reg:CC FLAGS_REG))])\n-   (parallel [(set (match_dup 3)\n-\t\t   (and:SI (match_dup 4) (match_dup 5)))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n-  \"split_double_mode (DImode, &operands[0], 3, &operands[0], &operands[3]);\")\n+  [(const_int 0)]\n+{\n+  split_double_mode (DImode, &operands[0], 3, &operands[0], &operands[3]);\n+  if (operands[2] == const0_rtx)\n+    {\n+      operands[1] = const0_rtx;\n+      ix86_expand_move (SImode, &operands[0]);\n+    }\n+  else if (operands[2] != constm1_rtx)\n+    emit_insn (gen_andsi3 (operands[0], operands[1], operands[2]));\n+  else if (operands[5] == constm1_rtx)\n+    emit_note (NOTE_INSN_DELETED);\n+  if (operands[5] == const0_rtx)\n+    {\n+      operands[4] = const0_rtx;\n+      ix86_expand_move (SImode, &operands[3]);\n+    }\n+  else if (operands[5] != constm1_rtx)\n+    emit_insn (gen_andsi3 (operands[3], operands[4], operands[5]));\n+  DONE;\n+})\n \n (define_insn \"*andsi_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,r,Ya,!k\")\n@@ -8665,16 +8680,41 @@\n \t (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0\")\n \t (match_operand:DI 2 \"x86_64_szext_general_operand\" \"Z,re,rm\")))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2 && ix86_binary_operator_ok (<CODE>, DImode, operands)\"\n+  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2\n+   && ix86_binary_operator_ok (<CODE>, DImode, operands)\"\n   \"#\"\n   \"&& reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t\t   (any_or:SI (match_dup 1) (match_dup 2)))\n-\t      (clobber (reg:CC FLAGS_REG))])\n-   (parallel [(set (match_dup 3)\n-\t\t   (any_or:SI (match_dup 4) (match_dup 5)))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n-  \"split_double_mode (DImode, &operands[0], 3, &operands[0], &operands[3]);\")\n+  [(const_int 0)]\n+{\n+  split_double_mode (DImode, &operands[0], 3, &operands[0], &operands[3]);\n+  if (operands[2] == constm1_rtx)\n+    {\n+      if (<CODE> == IOR)\n+\t{\n+\t  operands[1] = constm1_rtx;\n+\t  ix86_expand_move (SImode, &operands[0]);\n+\t}\n+      else\n+\tix86_expand_unary_operator (NOT, SImode, &operands[0]);\n+    }\n+  else if (operands[2] != const0_rtx)\n+    ix86_expand_binary_operator (<CODE>, SImode, &operands[0]);\n+  else if (operands[5] == const0_rtx)\n+    emit_note (NOTE_INSN_DELETED);\n+  if (operands[5] == constm1_rtx)\n+    {\n+      if (<CODE> == IOR)\n+\t{\n+\t  operands[4] = constm1_rtx;\n+\t  ix86_expand_move (SImode, &operands[3]);\n+\t}\n+      else\n+\tix86_expand_unary_operator (NOT, SImode, &operands[3]);\n+    }\n+  else if (operands[5] != const0_rtx)\n+    ix86_expand_binary_operator (<CODE>, SImode, &operands[3]);\n+  DONE;\n+})\n \n (define_insn_and_split \"*andndi3_doubleword\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")"}]}