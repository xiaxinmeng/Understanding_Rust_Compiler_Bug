{"sha": "ccf7aef4284066b77a1424df2d282be17d2b2083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NmN2FlZjQyODQwNjZiNzdhMTQyNGRmMmQyODJiZTE3ZDJiMjA4Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-30T03:26:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-30T03:26:47Z"}, "message": "combine.c (force_to_mode): Handle FLOAT_MODE destinations for CONST_INT.\n\n        * combine.c (force_to_mode): Handle FLOAT_MODE destinations\n        for CONST_INT.\n\nFrom-SVN: r57634", "tree": {"sha": "169958d3dc24faf2b53031b4b49215b9603a4d73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/169958d3dc24faf2b53031b4b49215b9603a4d73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccf7aef4284066b77a1424df2d282be17d2b2083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf7aef4284066b77a1424df2d282be17d2b2083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccf7aef4284066b77a1424df2d282be17d2b2083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf7aef4284066b77a1424df2d282be17d2b2083/comments", "author": null, "committer": null, "parents": [{"sha": "d454e75a29e98c70b2ba97e8e3400e96b70935e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d454e75a29e98c70b2ba97e8e3400e96b70935e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d454e75a29e98c70b2ba97e8e3400e96b70935e1"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "e0d7735f1166ebf75cb1319a34b530b4378da7f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf7aef4284066b77a1424df2d282be17d2b2083/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf7aef4284066b77a1424df2d282be17d2b2083/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccf7aef4284066b77a1424df2d282be17d2b2083", "patch": "@@ -1,3 +1,8 @@\n+2002-09-29  Richard Henderson  <rth@redhat.com>\n+\n+\t* combine.c (force_to_mode): Handle FLOAT_MODE destinations\n+\tfor CONST_INT.\n+\n 2002-09-29  David Edelsohn  <edelsohn@gnu.org>\n \n \t* real.h (ibm_extended_format): Declare."}, {"sha": "ea12e05c2d2ceda4c6f3cf6bbc24665e7f26f945", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf7aef4284066b77a1424df2d282be17d2b2083/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf7aef4284066b77a1424df2d282be17d2b2083/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=ccf7aef4284066b77a1424df2d282be17d2b2083", "patch": "@@ -6817,12 +6817,20 @@ force_to_mode (x, mode, mask, reg, just_select)\n \n   /* If none of the bits in X are needed, return a zero.  */\n   if (! just_select && (nonzero & mask) == 0)\n-    return const0_rtx;\n+    x = const0_rtx;\n \n   /* If X is a CONST_INT, return a new one.  Do this here since the\n      test below will fail.  */\n   if (GET_CODE (x) == CONST_INT)\n-    return gen_int_mode (INTVAL (x) & mask, mode);\n+    {\n+      if (SCALAR_INT_MODE_P (mode))\n+        return gen_int_mode (INTVAL (x) & mask, mode);\n+      else\n+\t{\n+\t  x = GEN_INT (INTVAL (x) & mask);\n+\t  return gen_lowpart_common (mode, x);\n+\t}\n+    }\n \n   /* If X is narrower than MODE and we want all the bits in X's mode, just\n      get X in the proper mode.  */"}]}