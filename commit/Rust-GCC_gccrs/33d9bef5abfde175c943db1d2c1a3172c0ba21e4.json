{"sha": "33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkOWJlZjVhYmZkZTE3NWM5NDNkYjFkMmMxYTMxNzJjMGJhMjFlNA==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-04-26T09:45:17Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-04-26T09:45:17Z"}, "message": "Changed unsigned int to size_t when casting pointers to integers\n\nFrom-SVN: r4233", "tree": {"sha": "e99078884236c1b6b24d781a2d98a46f72a4a3d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e99078884236c1b6b24d781a2d98a46f72a4a3d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/comments", "author": null, "committer": null, "parents": [{"sha": "e312f9659f19f47ec5029920406f79d2ab314915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e312f9659f19f47ec5029920406f79d2ab314915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e312f9659f19f47ec5029920406f79d2ab314915"}], "stats": {"total": 67, "additions": 37, "deletions": 30}, "files": [{"sha": "6516b8a407c8444425dfa9aa83c30049975e2c92", "filename": "gcc/objc/hash.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fhash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fhash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fhash.h?ref=33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "patch": "@@ -27,7 +27,11 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #ifndef __hash_INCLUDE_GNU\n #define __hash_INCLUDE_GNU\n \n-\n+#ifdef IN_OBJC\n+#include \"gstddef.h\"\n+#else\n+#include <stddef.h>\n+#endif\n \n /*\n  * This data structure is used to hold items\n@@ -152,10 +156,10 @@ void *hash_value_for_key (cache_ptr cache, const void *key);\n    manipulation of the key pointer.  (Use the lowest bits\n    except for those likely to be 0 due to alignment.)  */\n \n-static inline unsigned int \n+static inline unsigned int\n hash_ptr (cache_ptr cache, const void *key)\n {\n-  return ((unsigned int)key / sizeof (void *)) & cache->mask;\n+  return ((size_t)key / sizeof (void *)) & cache->mask;\n }\n \n "}, {"sha": "453f166ef1c6940fdae27ef1257e360db0b3cc40", "filename": "gcc/objc/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Finit.c?ref=33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "patch": "@@ -241,7 +241,7 @@ __objc_init_protocols (struct objc_protocol_list* protos)\n \n   for(i = 0; i < protos->count; i++)\n     {\n-      if (((int)((id)protos->list[i])->class_pointer) == PROTOCOL_VERSION)\n+      if (((size_t)((id)protos->list[i])->class_pointer) == PROTOCOL_VERSION)\n \t((id)protos->list[i])->class_pointer = proto_class;\n       else\n \t{"}, {"sha": "8d7b0594a833b6146c7c1865160b880f6eef44bc", "filename": "gcc/objc/objc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fobjc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fobjc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc.h?ref=33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "patch": "@@ -485,7 +485,7 @@ extern __inline__ IMP\n objc_msg_lookup(id receiver, SEL op)\n {\n   if(receiver)\n-    return sarray_get(receiver->class_pointer->dtable, (unsigned int) op);\n+    return sarray_get(receiver->class_pointer->dtable, (size_t) op);\n   else\n     return nil_method;\n }"}, {"sha": "50deeb0cf390bfebcee0be165cfd9eb47365b503", "filename": "gcc/objc/sarray.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fsarray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fsarray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsarray.c?ref=33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "patch": "@@ -46,10 +46,10 @@ sarray_at_put(struct sarray* array, sidx index, void* element)\n   struct sindex** the_index;\n   struct sbucket** the_bucket;\n #ifdef OBJC_SPARSE3\n-  unsigned int ioffset;\n+  size_t ioffset;\n #endif\n-  unsigned int boffset;\n-  unsigned int eoffset;\n+  size_t boffset;\n+  size_t eoffset;\n #ifdef PRECOMPUTE_SELECTORS\n   union sofftype xx; \n   xx.idx = index;\n@@ -139,9 +139,9 @@ struct sarray*\n sarray_new (int size, void* default_element)\n {\n #ifdef OBJC_SPARSE3\n-  unsigned num_indices = ((size-1)/(INDEX_CAPACITY))+1;\n+  size_t num_indices = ((size-1)/(INDEX_CAPACITY))+1;\n #else /* OBJC_SPARSE2 */\n-  unsigned num_indices = ((size-1)/BUCKET_SIZE)+1;\n+  size_t num_indices = ((size-1)/BUCKET_SIZE)+1;\n #endif\n   int counter;\n   struct sarray* arr;\n@@ -314,9 +314,9 @@ sarray_realloc(struct sarray* array, int newsize)\n void \n sarray_free(struct sarray* array) {\n #ifdef OBJC_SPARSE3\n-  unsigned int old_max_index = (array->capacity-1)/INDEX_CAPACITY;\n+  size_t old_max_index = (array->capacity-1)/INDEX_CAPACITY;\n #else\n-  unsigned int old_max_index = (array->capacity-1)/BUCKET_SIZE;\n+  size_t old_max_index = (array->capacity-1)/BUCKET_SIZE;\n #endif\n   int counter = 0;\n \n@@ -393,9 +393,9 @@ struct sarray*\n sarray_lazy_copy(struct sarray* oarr)\n {\n #ifdef OBJC_SPARSE3\n-  unsigned num_indices = ((oarr->capacity-1)/INDEX_CAPACITY)+1;\n+  size_t num_indices = ((oarr->capacity-1)/INDEX_CAPACITY)+1;\n #else /* OBJC_SPARSE2 */\n-  unsigned num_indices = ((oarr->capacity-1)/BUCKET_SIZE)+1;\n+  size_t num_indices = ((oarr->capacity-1)/BUCKET_SIZE)+1;\n #endif\n   struct sarray* arr;\n "}, {"sha": "1d96078dc74ca34224af8a5e4e1de1952c0165a8", "filename": "gcc/objc/sarray.h", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fsarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fsarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsarray.h?ref=33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "patch": "@@ -52,6 +52,9 @@ extern int idxsize;\n \n #include <assert.h>\n \n+/* An unsigned integer of same size as a pointer */\n+#define SIZET_BITS (sizeof(size_t)*8)\n+\n #if defined(sparc) || defined(OBJC_SPARSE2)\n #define PRECOMPUTE_SELECTORS\n #endif\n@@ -79,24 +82,24 @@ extern int idxsize;\n \n #endif /* OBJC_SPARSE2 */\n \n-typedef unsigned int sidx;\n+typedef size_t sidx;\n \n #ifdef PRECOMPUTE_SELECTORS\n \n struct soffset {\n #ifdef OBJC_SPARSE3\n-  unsigned char unused;\n-  unsigned char eoffset;\n-  unsigned char boffset;\n-  unsigned char ioffset;\n+  unsigned int unused : SIZET_BITS/4;\n+  unsigned int eoffset : SIZET_BITS/4;\n+  unsigned int boffset : SIZET_BITS/4;\n+  unsigned int ioffset : SIZET_BITS/4;\n #else /* OBJC_SPARSE2 */\n #ifdef sparc\n-  unsigned int boffset : 30 - BUCKET_BITS;\n+  unsigned int boffset : (SIZET_BITS - 2) - BUCKET_BITS;\n   unsigned int eoffset : BUCKET_BITS;\n   unsigned int unused  : 2;\n #else\n-  unsigned short boffset;\n-  unsigned short eoffset;\n+  unsigned int boffset : SIZET_BITS/2;\n+  unsigned int eoffset : SIZET_BITS/2;\n #endif\n #endif /* OBJC_SPARSE2 */\n };\n@@ -165,7 +168,7 @@ soffset_decode(sidx index)\n }\n \n static inline sidx\n-soffset_encode(unsigned int offset)\n+soffset_encode(size_t offset)\n {\n   union sofftype x;\n   x.off.eoffset = offset%BUCKET_SIZE;\n@@ -180,14 +183,14 @@ soffset_encode(unsigned int offset)\n \n #else /* not PRECOMPUTE_SELECTORS */\n \n-static inline unsigned int\n+static inline size_t\n soffset_decode(sidx index)\n {\n   return index;\n }\n \n static inline sidx\n-soffset_encode(unsigned int offset)\n+soffset_encode(size_t offset)\n {\n   return offset;\n }"}, {"sha": "6eb2e43199ca717185d68420415b298829a9414a", "filename": "gcc/objc/selector.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fselector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fselector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fselector.c?ref=33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "patch": "@@ -95,8 +95,8 @@ sel_get_uid (const char *name)\n const char*\n sel_get_name (SEL selector)\n {\n-  if ((soffset_decode((unsigned)selector) > 0)\n-      && (soffset_decode((unsigned)selector) <= __objc_selector_max_index))\n+  if ((soffset_decode((sidx)selector) > 0)\n+      && (soffset_decode((sidx)selector) <= __objc_selector_max_index))\n     return sarray_get (__objc_selector_array, (sidx) selector);\n   else\n     return NULL;"}, {"sha": "1e14470cab697ded764277a2af3f2b62fd119903", "filename": "gcc/objc/sendmsg.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9bef5abfde175c943db1d2c1a3172c0ba21e4/gcc%2Fobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsendmsg.c?ref=33d9bef5abfde175c943db1d2c1a3172c0ba21e4", "patch": "@@ -68,10 +68,10 @@ __inline__ IMP\n get_imp (Class_t class, SEL sel)\n {\n #ifdef OBJC_SPARSE_LOOKUP\n-  void* res = sarray_get (class->dtable, (unsigned int) sel);\n+  void* res = sarray_get (class->dtable, (size_t) sel);\n   if(res == __objc_init_install_dtable)\n     __objc_install_dispatch_table_for_class (class);\n-  return sarray_get (class->dtable, (unsigned int) sel);\n+  return sarray_get (class->dtable, (size_t) sel);\n #else\n   return cache_get (class, sel);\n #endif\n@@ -529,7 +529,7 @@ __objc_double_cache(Cache_t cache)\n static Cache_t\n __objc_cache_insert(Cache_t cache, SEL op, IMP imp)\n {\n-  int index = ((unsigned int)op)&(cache)->mask;\n+  int index = ((size_t)op)&(cache)->mask;\n \n   if(op == 0)\n     return cache;"}]}