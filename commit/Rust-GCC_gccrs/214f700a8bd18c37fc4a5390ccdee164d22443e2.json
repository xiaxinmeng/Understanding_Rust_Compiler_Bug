{"sha": "214f700a8bd18c37fc4a5390ccdee164d22443e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE0ZjcwMGE4YmQxOGMzN2ZjNGE1MzkwY2NkZWUxNjRkMjI0NDNlMg==", "commit": {"author": {"name": "Michael Collison", "email": "michael.collison@arm.com", "date": "2017-07-11T00:17:02Z"}, "committer": {"name": "Michael Collison", "email": "collison@gcc.gnu.org", "date": "2017-07-11T00:17:02Z"}, "message": "var_shift_mask_1.c: Fix for ILP32\n\n2017-07-10  Michael Collison <michael.collison@arm.com>\n\n\t* gcc.target/aarch64/var_shift_mask_1.c: Fix for ILP32\n\nFrom-SVN: r250112", "tree": {"sha": "eb71e584ce0f23f627231f13907b93dab34d8715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb71e584ce0f23f627231f13907b93dab34d8715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/214f700a8bd18c37fc4a5390ccdee164d22443e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/214f700a8bd18c37fc4a5390ccdee164d22443e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/214f700a8bd18c37fc4a5390ccdee164d22443e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/214f700a8bd18c37fc4a5390ccdee164d22443e2/comments", "author": null, "committer": null, "parents": [{"sha": "6636b6ff9aa33d99ab0639ef8e532c114b6776b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6636b6ff9aa33d99ab0639ef8e532c114b6776b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6636b6ff9aa33d99ab0639ef8e532c114b6776b4"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "153da28e014114bd397d4e9556301c32c5fb1b9c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/214f700a8bd18c37fc4a5390ccdee164d22443e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/214f700a8bd18c37fc4a5390ccdee164d22443e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=214f700a8bd18c37fc4a5390ccdee164d22443e2", "patch": "@@ -1,3 +1,7 @@\n+2017-07-10  Michael Collison <michael.collison@arm.com>\n+\n+\t* gcc.target/aarch64/var_shift_mask_1.c: Fix for ILP32\n+\n 2017-07-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/81375"}, {"sha": "0bd326a879d8294f7b75c5ff32a1a2bc904c5bfc", "filename": "gcc/testsuite/gcc.target/aarch64/var_shift_mask_1.c", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/214f700a8bd18c37fc4a5390ccdee164d22443e2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvar_shift_mask_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/214f700a8bd18c37fc4a5390ccdee164d22443e2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvar_shift_mask_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvar_shift_mask_1.c?ref=214f700a8bd18c37fc4a5390ccdee164d22443e2", "patch": "@@ -11,17 +11,17 @@ f1 (unsigned x, int y)\n   return x << (y & 31);\n }\n \n-unsigned long\n-f2 (unsigned long x, int y)\n+unsigned long long\n+f2 (unsigned long long x, int y)\n {\n   return x << (y & 63);\n }\n \n-unsigned long\n-f3 (unsigned long bit_addr, int y)\n+unsigned long long\n+f3 (unsigned long long bit_addr, int y)\n {\n   unsigned long bitnumb = bit_addr & 63;\n-  return (1L << bitnumb);\n+  return (1LL << bitnumb);\n }\n \n unsigned int\n@@ -31,28 +31,32 @@ f4 (unsigned int x, unsigned int y)\n   return x >> y | (x << (32 - y));\n }\n \n-unsigned long\n-f5 (unsigned long x, unsigned long y)\n+unsigned long long\n+f5 (unsigned long long x, unsigned long long y)\n {\n   y &= 63;\n   return x >> y | (x << (64 - y));\n }\n \n-unsigned long\n-f6 (unsigned long x, unsigned long y)\n+unsigned int\n+f6 (unsigned int x, unsigned int y)\n {\n+  return (x << (32 - (y & 31)));\n+}\n \n+unsigned long long\n+f7 (unsigned long long x, unsigned long long y)\n+{\n   return (x << (64 - (y & 63)));\n-\n }\n \n-unsigned long\n-f7 (unsigned long x, unsigned long y)\n+unsigned long long\n+f8 (unsigned long long x, unsigned long long y)\n {\n   return (x << -(y & 63));\n }\n \n-/* { dg-final { scan-assembler-times \"lsl\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"lsl\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" 2 } } */\n /* { dg-final { scan-assembler-times \"lsl\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" 4 } } */\n /* { dg-final { scan-assembler-times \"ror\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" 1 } } */\n /* { dg-final { scan-assembler-times \"ror\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" 1 } } */"}]}