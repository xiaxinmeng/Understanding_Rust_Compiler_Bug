{"sha": "c8a0c7b660a96081f320c8155f135a46b2202968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhhMGM3YjY2MGE5NjA4MWYzMjBjODE1NWYxMzVhNDZiMjIwMjk2OA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2018-01-09T00:45:46Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2018-01-09T00:45:46Z"}, "message": "RISC-V: Fix -msave-restore bug with sibcalls.\n\n\t2018-01-08  Monk Chiang  <sh.chiang04@gmail.com>\n\t\t    Kito Cheng  <kito.cheng@gmail.com>\n\n\tgcc/\n\t* config/riscv/riscv.c (machine_function::is_leaf): Remove field.\n\t(riscv_leaf_function_p): Delete.\n\t(riscv_function_ok_for_sibcall): Return false when TARGET_SAVE_RESTORE.\n\n\t2018-01-08  Chih-Mao Chen <pkmx.tw@gmail.com>\n\t\t    Monk Chiang  <sh.chiang04@gmail.com>\n\n\tgcc/testsuite/\n\t* gcc.target/riscv/save-restore-1.c: New.\n\nFrom-SVN: r256362", "tree": {"sha": "1ec950b0acd31b52fdea6aed493eb151f61e2a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ec950b0acd31b52fdea6aed493eb151f61e2a34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8a0c7b660a96081f320c8155f135a46b2202968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8a0c7b660a96081f320c8155f135a46b2202968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8a0c7b660a96081f320c8155f135a46b2202968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8a0c7b660a96081f320c8155f135a46b2202968/comments", "author": null, "committer": null, "parents": [{"sha": "b48ae4b0809cc56c645de45008e7ce886987fa3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48ae4b0809cc56c645de45008e7ce886987fa3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48ae4b0809cc56c645de45008e7ce886987fa3b"}], "stats": {"total": 55, "additions": 39, "deletions": 16}, "files": [{"sha": "d8e84c57aacbadd9f75d62c37ec2c0e80a64fa64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8a0c7b660a96081f320c8155f135a46b2202968/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8a0c7b660a96081f320c8155f135a46b2202968/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8a0c7b660a96081f320c8155f135a46b2202968", "patch": "@@ -1,3 +1,10 @@\n+2018-01-08  Monk Chiang  <sh.chiang04@gmail.com>\n+\t    Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* config/riscv/riscv.c (machine_function::is_leaf): Remove field.\n+\t(riscv_leaf_function_p): Delete.\n+\t(riscv_function_ok_for_sibcall): Return false when TARGET_SAVE_RESTORE.\n+\n 2018-01-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/83677"}, {"sha": "b6270f7bfd7ff30659d7238941171af8bd2dcb00", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8a0c7b660a96081f320c8155f135a46b2202968/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8a0c7b660a96081f320c8155f135a46b2202968/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=c8a0c7b660a96081f320c8155f135a46b2202968", "patch": "@@ -127,9 +127,6 @@ struct GTY(())  machine_function {\n      This area is allocated by the callee at the very top of the frame.  */\n   int varargs_size;\n \n-  /* Memoized return value of leaf_function_p.  <0 if false, >0 if true.  */\n-  int is_leaf;\n-\n   /* The current frame information, calculated by riscv_compute_frame_info.  */\n   struct riscv_frame_info frame;\n };\n@@ -4176,26 +4173,15 @@ riscv_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n   emit_insn (gen_clear_cache (addr, end_addr));\n }\n \n-/* Return leaf_function_p () and memoize the result.  */\n-\n-static bool\n-riscv_leaf_function_p (void)\n-{\n-  if (cfun->machine->is_leaf == 0)\n-    cfun->machine->is_leaf = leaf_function_p () ? 1 : -1;\n-\n-  return cfun->machine->is_leaf > 0;\n-}\n-\n /* Implement TARGET_FUNCTION_OK_FOR_SIBCALL.  */\n \n static bool\n riscv_function_ok_for_sibcall (tree decl ATTRIBUTE_UNUSED,\n \t\t\t       tree exp ATTRIBUTE_UNUSED)\n {\n-  /* When optimzing for size, don't use sibcalls in non-leaf routines */\n+  /* Don't use sibcalls when use save-restore routine.  */\n   if (TARGET_SAVE_RESTORE)\n-    return riscv_leaf_function_p ();\n+    return false;\n \n   return true;\n }"}, {"sha": "9b0f827349fa63cefeaa49949ddde7a75c5bcfaa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8a0c7b660a96081f320c8155f135a46b2202968/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8a0c7b660a96081f320c8155f135a46b2202968/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8a0c7b660a96081f320c8155f135a46b2202968", "patch": "@@ -1,3 +1,8 @@\n+2018-01-08  Chih-Mao Chen <pkmx.tw@gmail.com>\n+\t    Monk Chiang  <sh.chiang04@gmail.com>\n+\n+\t* gcc.target/riscv/save-restore-1.c: New.\n+\n 2018-01-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/83677"}, {"sha": "35b08b9676068857542a02d7d6711ba3b296584e", "filename": "gcc/testsuite/gcc.target/riscv/save-restore-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8a0c7b660a96081f320c8155f135a46b2202968/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsave-restore-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8a0c7b660a96081f320c8155f135a46b2202968/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsave-restore-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fsave-restore-1.c?ref=c8a0c7b660a96081f320c8155f135a46b2202968", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -msave-restore -fomit-frame-pointer\" } */\n+\n+#include <stdlib.h>\n+\n+__attribute__((noinline)) int g(void) { return 42; }\n+\n+__attribute__((noinline)) int f(void) {\n+  asm volatile (\"li s0, 0x87654321\" ::: \"s0\");\n+  return g();\n+}\n+\n+int main(void) {\n+  asm volatile (\"li s0, 0x12345678\" ::: \"s0\");\n+\n+  f();\n+\n+  long s0;\n+  asm volatile (\"mv %0, s0\" : \"=r\"(s0));\n+\n+  if (s0 == 0x12345678)\n+    exit (0);\n+  else\n+    abort();\n+}"}]}