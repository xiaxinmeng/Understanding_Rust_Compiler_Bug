{"sha": "c91db798ec65b3e55f2380ca1530ecb71544f1bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxZGI3OThlYzY1YjNlNTVmMjM4MGNhMTUzMGVjYjcxNTQ0ZjFiYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-27T14:20:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-27T16:33:34Z"}, "message": "tree-optimization/98854 - avoid some PHI BB vectorization\n\nThis avoids cases of PHI node vectorization that just causes us\nto insert vector CTORs inside loops for values only required\noutside of the loop.\n\n2021-01-27  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/98854\n\t* tree-vect-slp.c (vect_build_slp_tree_2): Also build\n\tPHIs from scalars when the number of CTORs matches the\n\tnumber of children.\n\n\t* gcc.dg/vect/bb-slp-pr98854.c: New testcase.", "tree": {"sha": "04dda92d83caa69419cbc1b51205de5550c0f7b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04dda92d83caa69419cbc1b51205de5550c0f7b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c91db798ec65b3e55f2380ca1530ecb71544f1bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91db798ec65b3e55f2380ca1530ecb71544f1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91db798ec65b3e55f2380ca1530ecb71544f1bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91db798ec65b3e55f2380ca1530ecb71544f1bb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fd10728cb1aacf593a7a006ad40e874f791d655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd10728cb1aacf593a7a006ad40e874f791d655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd10728cb1aacf593a7a006ad40e874f791d655"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "0c8141e1d17ad5e5e8c909cc65776b6b8f182ec6", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr98854.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91db798ec65b3e55f2380ca1530ecb71544f1bb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98854.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91db798ec65b3e55f2380ca1530ecb71544f1bb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98854.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98854.c?ref=c91db798ec65b3e55f2380ca1530ecb71544f1bb", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+\n+double a[1024];\n+\n+int bar();\n+void foo (int n)\n+{\n+  double x = 0, y = 0;\n+  int i = 1023;\n+  do\n+    {\n+      x += a[i] + a[i+1];\n+      y += a[i] / a[i+1];\n+      if (bar ())\n+        break;\n+    }\n+  while (--i);\n+  /* We want to avoid vectorizing the LC PHI and insert vector CTORs\n+     inside of the loop where it is only needed here.  */\n+  a[0] = x;\n+  a[1] = y;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"vectorizing SLP node starting from: ._\\[0-9\\]+ = PHI\" \"slp1\" } } */"}, {"sha": "10b876ff5ede8896eb95abd22f716e458c99416d", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91db798ec65b3e55f2380ca1530ecb71544f1bb/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91db798ec65b3e55f2380ca1530ecb71544f1bb/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=c91db798ec65b3e55f2380ca1530ecb71544f1bb", "patch": "@@ -1896,7 +1896,10 @@ vect_build_slp_tree_2 (vec_info *vinfo, slp_tree node,\n \t\tn_vector_builds++;\n \t    }\n \t}\n-      if (all_uniform_p || n_vector_builds > 1)\n+      if (all_uniform_p\n+\t  || n_vector_builds > 1\n+\t  || (n_vector_builds == children.length ()\n+\t      && is_a <gphi *> (stmt_info->stmt)))\n \t{\n \t  /* Roll back.  */\n \t  matches[0] = false;"}]}