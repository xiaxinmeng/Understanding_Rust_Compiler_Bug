{"sha": "e26d1bb2394d5973410baf630ad882810e5b0985", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI2ZDFiYjIzOTRkNTk3MzQxMGJhZjYzMGFkODgyODEwZTViMDk4NQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-09-08T20:45:32Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-09-08T20:45:32Z"}, "message": "gcse.c's modify_mem_list is a list of insns\n\ngcc/ChangeLog:\n2014-09-08  David Malcolm  <dmalcolm@redhat.com>\n\n\t* gcse.c (modify_mem_list): Strengthen this variable from\n\tvec<rtx> * to vec<rtx_insn *> *.\n\t(vec_rtx_heap): Strengthen this typedef from vec<rtx> to\n\tvec<rtx_insn *>.\n\t(load_killed_in_block_p): Strengthen local \"list\" from vec<rtx> to\n\tvec<rtx_insn *>, and local \"setter\" from rtx to rtx_insn *.\n\t(record_last_mem_set_info): Strengthen param \"insn\" from rtx to\n\trtx_insn *.\n\t(record_last_set_info): Likewise for local \"last_set_insn\".\n\nFrom-SVN: r215027", "tree": {"sha": "a5b4330f8ad54939edc37bbd5519319195d307ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5b4330f8ad54939edc37bbd5519319195d307ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e26d1bb2394d5973410baf630ad882810e5b0985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26d1bb2394d5973410baf630ad882810e5b0985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e26d1bb2394d5973410baf630ad882810e5b0985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e26d1bb2394d5973410baf630ad882810e5b0985/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19b472cc70745b42fc74b1ef9883e7da1031f47b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b472cc70745b42fc74b1ef9883e7da1031f47b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b472cc70745b42fc74b1ef9883e7da1031f47b"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "10b3f85c56e9d0d42df266fe3e6f1db0e4ced547", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26d1bb2394d5973410baf630ad882810e5b0985/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26d1bb2394d5973410baf630ad882810e5b0985/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e26d1bb2394d5973410baf630ad882810e5b0985", "patch": "@@ -1,3 +1,15 @@\n+2014-09-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcse.c (modify_mem_list): Strengthen this variable from\n+\tvec<rtx> * to vec<rtx_insn *> *.\n+\t(vec_rtx_heap): Strengthen this typedef from vec<rtx> to\n+\tvec<rtx_insn *>.\n+\t(load_killed_in_block_p): Strengthen local \"list\" from vec<rtx> to\n+\tvec<rtx_insn *>, and local \"setter\" from rtx to rtx_insn *.\n+\t(record_last_mem_set_info): Strengthen param \"insn\" from rtx to\n+\trtx_insn *.\n+\t(record_last_set_info): Likewise for local \"last_set_insn\".\n+\n 2014-09-08  DJ Delorie  <dj@redhat.com>\n \n \t* doc/invoke.texi (MSP430 Options): Add -minrt."}, {"sha": "ad92e25cfb8ba44e10511a85ccc0f1a852d60ad9", "filename": "gcc/gcse.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e26d1bb2394d5973410baf630ad882810e5b0985/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e26d1bb2394d5973410baf630ad882810e5b0985/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=e26d1bb2394d5973410baf630ad882810e5b0985", "patch": "@@ -395,7 +395,7 @@ static regset reg_set_bitmap;\n \n /* Array, indexed by basic block number for a list of insns which modify\n    memory within that block.  */\n-static vec<rtx> *modify_mem_list;\n+static vec<rtx_insn *> *modify_mem_list;\n static bitmap modify_mem_list_set;\n \n typedef struct modify_pair_s\n@@ -474,7 +474,7 @@ static void insert_expr_in_table (rtx, enum machine_mode, rtx_insn *, int, int,\n \t\t\t\t  int, struct hash_table_d *);\n static unsigned int hash_expr (const_rtx, enum machine_mode, int *, int);\n static void record_last_reg_set_info (rtx, int);\n-static void record_last_mem_set_info (rtx);\n+static void record_last_mem_set_info (rtx_insn *);\n static void record_last_set_info (rtx, const_rtx, void *);\n static void compute_hash_table (struct hash_table_d *);\n static void alloc_hash_table (struct hash_table_d *);\n@@ -631,7 +631,7 @@ alloc_gcse_mem (void)\n   /* Allocate array to keep a list of insns which modify memory in each\n      basic block.  The two typedefs are needed to work around the\n      pre-processor limitation with template types in macro arguments.  */\n-  typedef vec<rtx> vec_rtx_heap;\n+  typedef vec<rtx_insn *> vec_rtx_heap;\n   typedef vec<modify_pair> vec_modify_pair_heap;\n   modify_mem_list = GCNEWVEC (vec_rtx_heap, last_basic_block_for_fn (cfun));\n   canon_modify_mem_list = GCNEWVEC (vec_modify_pair_heap,\n@@ -1031,8 +1031,8 @@ static int\n load_killed_in_block_p (const_basic_block bb, int uid_limit, const_rtx x,\n \t\t\tint avail_p)\n {\n-  vec<rtx> list = modify_mem_list[bb->index];\n-  rtx setter;\n+  vec<rtx_insn *> list = modify_mem_list[bb->index];\n+  rtx_insn *setter;\n   unsigned ix;\n \n   /* If this is a readonly then we aren't going to be changing it.  */\n@@ -1502,7 +1502,7 @@ canon_list_insert (rtx dest ATTRIBUTE_UNUSED, const_rtx x ATTRIBUTE_UNUSED,\n    a CALL_INSN).  We merely need to record which insns modify memory.  */\n \n static void\n-record_last_mem_set_info (rtx insn)\n+record_last_mem_set_info (rtx_insn *insn)\n {\n   int bb;\n \n@@ -1528,7 +1528,7 @@ record_last_mem_set_info (rtx insn)\n static void\n record_last_set_info (rtx dest, const_rtx setter ATTRIBUTE_UNUSED, void *data)\n {\n-  rtx last_set_insn = (rtx) data;\n+  rtx_insn *last_set_insn = (rtx_insn *) data;\n \n   if (GET_CODE (dest) == SUBREG)\n     dest = SUBREG_REG (dest);"}]}