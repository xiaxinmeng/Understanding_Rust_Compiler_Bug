{"sha": "8d1a718e0685688e763d768d357e8ed84db22d30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQxYTcxOGUwNjg1Njg4ZTc2M2Q3NjhkMzU3ZThlZDg0ZGIyMmQzMA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2019-10-18T06:46:03Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2019-10-18T06:46:03Z"}, "message": "Fix some fallout for small targets.\n\ngcc/testsuite/\n\tFix some fallout for small targets.\n\n\tPR testsuite/52641\n\t* gcc.c-torture/execute/20190820-1.c:\n\tAdd dg-require-effective-target int32plus.\n\t* gcc.c-torture/execute/pr85331.c\n\tAdd dg-require-effective-target double64plus.\n\t* gcc.dg/pow-sqrt-1.c: Same.\n\t* gcc.dg/pow-sqrt-2.c: Same.\n\t* gcc.dg/pow-sqrt-3.c: Same.\n\t* gcc.c-torture/execute/20190901-1.c: Same.\n\t* gcc.c-torture/execute/user-printf.c [avr]: Skip.\n\t* gcc.c-torture/execute/fprintf-2.c [avr]: Skip.\n\t* gcc.c-torture/execute/printf-2.c [avr]: Skip.\n\t* gcc.dg/Wlarger-than3.c [avr]: Skip.\n\t* gcc.c-torture/execute/ieee/20041213-1.c (sqrt)\n\t[avr,double=float]: Provide custom prototype.\n\t* gcc.dg/pr36017.c: Same.\n\t* gcc.c-torture/execute/pr90025.c: Use 32-bit int.\n\t* gcc.dg/complex-7.c: Add dg-require-effective-target double64.\n\t* gcc.dg/loop-versioning-1.c:\n\tAdd dg-require-effective-target size32plus.\n\t* gcc.dg/loop-versioning-2.c: Same.\n\nFrom-SVN: r277142", "tree": {"sha": "b399628e073b193f07a762613f82d9c99ca4b81f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b399628e073b193f07a762613f82d9c99ca4b81f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d1a718e0685688e763d768d357e8ed84db22d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1a718e0685688e763d768d357e8ed84db22d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1a718e0685688e763d768d357e8ed84db22d30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1a718e0685688e763d768d357e8ed84db22d30/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc1facefe3b4e3b067d95291a7dba834b830ff18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc1facefe3b4e3b067d95291a7dba834b830ff18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc1facefe3b4e3b067d95291a7dba834b830ff18"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "b783c8dede37411a449dd488aa43b62c529620f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,3 +1,29 @@\n+2019-10-18  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tFix some fallout for small targets.\n+\n+\tPR testsuite/52641\n+\t* gcc.c-torture/execute/20190820-1.c:\n+\tAdd dg-require-effective-target int32plus.\n+\t* gcc.c-torture/execute/pr85331.c\n+\tAdd dg-require-effective-target double64plus.\n+\t* gcc.dg/pow-sqrt-1.c: Same.\n+\t* gcc.dg/pow-sqrt-2.c: Same.\n+\t* gcc.dg/pow-sqrt-3.c: Same.\n+\t* gcc.c-torture/execute/20190901-1.c: Same.\n+\t* gcc.c-torture/execute/user-printf.c [avr]: Skip.\n+\t* gcc.c-torture/execute/fprintf-2.c [avr]: Skip.\n+\t* gcc.c-torture/execute/printf-2.c [avr]: Skip.\n+\t* gcc.dg/Wlarger-than3.c [avr]: Skip.\n+\t* gcc.c-torture/execute/ieee/20041213-1.c (sqrt)\n+\t[avr,double=float]: Provide custom prototype.\n+\t* gcc.dg/pr36017.c: Same.\n+\t* gcc.c-torture/execute/pr90025.c: Use 32-bit int.\n+\t* gcc.dg/complex-7.c: Add dg-require-effective-target double64.\n+\t* gcc.dg/loop-versioning-1.c:\n+\tAdd dg-require-effective-target size32plus.\n+\t* gcc.dg/loop-versioning-2.c: Same.\n+\n 2019-10-18  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \t    Richard Sandiford  <richard.sandiford@arm.com>\n "}, {"sha": "10e48d35750f947e6a66a6a314b8d41ef1c0cf89", "filename": "gcc/testsuite/gcc.c-torture/execute/20190820-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190820-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190820-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190820-1.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,5 +1,6 @@\n /* PR rtl-optimization/91347 */\r\n /* Reported by John David Anglin <danglin@gcc.gnu.org> */\r\n+/* { dg-require-effective-target int32plus } */\r\n \r\n typedef unsigned short __u16;\r\n typedef __signed__ int __s32;\r"}, {"sha": "2345e51896f2eedca0e65de7fd7b6f522bf1b880", "filename": "gcc/testsuite/gcc.c-torture/execute/20190901-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190901-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190901-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20190901-1.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,7 +1,12 @@\n /* PR target/91472 */\n /* Reported by John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de> */\n+/* { dg-require-effective-target double64plus } */\n \n+#if __SIZEOF_INT__ >= 4\n typedef unsigned int gmp_uint_least32_t;\n+#else\n+typedef __UINT_LEAST32_TYPE__ gmp_uint_least32_t;\n+#endif\n \n union ieee_double_extract\n {"}, {"sha": "7280b9b5e3cf11ae2e5905fc80e96275eacc9a4f", "filename": "gcc/testsuite/gcc.c-torture/execute/fprintf-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-2.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,6 +1,7 @@\n /* Verify that calls to fprintf don't get eliminated even if their\n    result on success can be computed at compile time (they can fail).\n    The calls can still be transformed into those of other functions.\n+   { dg-skip-if \"requires io\" { avr-*-* } }\n    { dg-skip-if \"requires io\" { freestanding } } */\n \n #include <stdio.h>"}, {"sha": "6830359e1f901dc301a1f45fa2a874b50bbff016", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/20041213-1.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2F20041213-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2F20041213-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2F20041213-1.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,4 +1,8 @@\n+#if defined (__AVR__) && (__SIZEOF_DOUBLE__ == __SIZEOF_FLOAT__)\n+extern double sqrt (double) __asm (\"sqrtf\");\n+#else\n extern double sqrt (double);\n+#endif\n extern void abort (void);\n int once;\n "}, {"sha": "e0c426f81dafb49494bc8c71813c3140b60b0304", "filename": "gcc/testsuite/gcc.c-torture/execute/pr85331.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85331.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85331.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85331.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/85331 */\n+/* { dg-require-effective-target double64plus } */\n \n typedef double V __attribute__((vector_size (2 * sizeof (double))));\n typedef long long W __attribute__((vector_size (2 * sizeof (long long))));"}, {"sha": "052d97c7fc2574fab1a8f1fe407fa924a9a35872", "filename": "gcc/testsuite/gcc.c-torture/execute/pr90025.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr90025.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr90025.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr90025.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -13,10 +13,10 @@ bar (char *p)\n }\n \n __attribute__((noipa)) void\n-foo (unsigned int x)\n+foo (__UINT32_TYPE__ x)\n {\n   char s[32] = { 'f', 'o', 'o', 'b', 'a', 'r', 0 };\n-  ((unsigned int *) s)[2] = __builtin_bswap32 (x);\n+  ((__UINT32_TYPE__ *) s)[2] = __builtin_bswap32 (x);\n   bar (s);\n }\n "}, {"sha": "c2d729a665cb0376b5647c88374cae4006c351da", "filename": "gcc/testsuite/gcc.c-torture/execute/printf-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -2,6 +2,7 @@\n    result on success can be computed at compile time (they can fail).\n    The calls can still be transformed into those of other functions.\n    { dg-require-effective-target unwrapped }\n+   { dg-skip-if \"requires io\" { avr-*-* } }\n    { dg-skip-if \"requires io\" { freestanding } } */\n \n #include <stdio.h>"}, {"sha": "0f81bec60b7bd7b8d1a65c6687d01bfd73db4d1d", "filename": "gcc/testsuite/gcc.c-torture/execute/user-printf.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -2,6 +2,7 @@\n    don't get eliminated even if their result on success can be computed at\n    compile time (they can fail).\n    { dg-require-effective-target unwrapped }\n+   { dg-skip-if \"requires io\" { avr-*-* } }\n    { dg-skip-if \"requires io\" { freestanding } } */\n \n #include <stdarg.h>"}, {"sha": "17af07b72e2fba115cd90b76aa600004c6c07c9a", "filename": "gcc/testsuite/gcc.dg/Wlarger-than3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than3.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,6 +1,6 @@\n /* Exercise -Wlarger-than= with a byte-size suffix.\n    { dg-do compile }\n-   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n+   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } { \"avr-*-*\" } }\n    { dg-options \"-Wlarger-than=1MiB\" } */\n \n #define MB (1000 * 1000)    /* MegaByte */"}, {"sha": "a1f136ce9a23ca248ec6a9f409c9905950b81126", "filename": "gcc/testsuite/gcc.dg/complex-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-7.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -2,6 +2,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-cplxlower\" } */\n+/* { dg-require-effective-target double64 } */\n \n __complex double\n foo (__complex double a, __complex double b)"}, {"sha": "17e95fdfbab3266e76c1ca93f5e92e3e9b1d97bf", "filename": "gcc/testsuite/gcc.dg/loop-versioning-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Floop-versioning-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Floop-versioning-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-versioning-1.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-O3 -fdump-tree-lversion-details\" } */\n+/* { dg-require-effective-target size32plus } */\n \n /* The simplest IV case.  */\n "}, {"sha": "3d07f83d20544abc0944156ac7d9e4c8384fa9a9", "filename": "gcc/testsuite/gcc.dg/loop-versioning-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Floop-versioning-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Floop-versioning-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-versioning-2.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-O3 -fdump-tree-lversion-details\" } */\n+/* { dg-require-effective-target size32plus } */\n \n /* Versioning for step == 1 in these loops would allow loop interchange,\n    but otherwise isn't worthwhile.  At the moment we decide not to version.  */"}, {"sha": "17003c5d71c5ed21604feba5c7c40a0c011ccefc", "filename": "gcc/testsuite/gcc.dg/pow-sqrt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-1.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -ffast-math --param max-pow-sqrt-depth=5\" } */\n+/* { dg-require-effective-target double64plus } */\n \n #define EXPN (-6 * (0.5*0.5*0.5*0.5))\n "}, {"sha": "96d7ce9c8cff0fa2c69690a6951555f88295c916", "filename": "gcc/testsuite/gcc.dg/pow-sqrt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-2.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -ffast-math --param max-pow-sqrt-depth=5\" } */\n+/* { dg-require-effective-target double64plus } */\n \n #define EXPN (-5.875)\n #include \"pow-sqrt.x\""}, {"sha": "c166586ac6317fe95e1446db2d43f8ef0a9ec36f", "filename": "gcc/testsuite/gcc.dg/pow-sqrt-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpow-sqrt-3.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -ffast-math --param max-pow-sqrt-depth=3\" } */\n+/* { dg-require-effective-target double64plus } */\n \n #define EXPN (1.25)\n #include \"pow-sqrt.x\""}, {"sha": "d18c97ddfadb16c055074ad19ac8f214f4b342da", "filename": "gcc/testsuite/gcc.dg/pr36017.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36017.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1a718e0685688e763d768d357e8ed84db22d30/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36017.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36017.c?ref=8d1a718e0685688e763d768d357e8ed84db22d30", "patch": "@@ -2,7 +2,11 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n \n+#if defined (__AVR__) && (__SIZEOF_DOUBLE__ == __SIZEOF_FLOAT__)\n+extern double sqrt (double) __asm (\"sqrtf\");\n+#else\n extern double sqrt (double);\n+#endif\n extern void abort (void);\n \n __attribute__((noinline)) double"}]}