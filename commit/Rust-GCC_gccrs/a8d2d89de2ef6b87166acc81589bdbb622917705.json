{"sha": "a8d2d89de2ef6b87166acc81589bdbb622917705", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThkMmQ4OWRlMmVmNmI4NzE2NmFjYzgxNTg5YmRiYjYyMjkxNzcwNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-09-26T08:44:53Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-09-26T08:44:53Z"}, "message": "Add modref testcases\n\ngcc/testsuite/\n\n\t* gcc.dg/lto/modref-1_0.c: New test.\n\t* gcc.dg/lto/modref-1_1.c: New test.\n\t* gcc.dg/tree-ssa/modref-2.c: New test.", "tree": {"sha": "60e368e04fcf2cf4ac2bc09df4688a1642b01f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60e368e04fcf2cf4ac2bc09df4688a1642b01f1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8d2d89de2ef6b87166acc81589bdbb622917705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d2d89de2ef6b87166acc81589bdbb622917705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8d2d89de2ef6b87166acc81589bdbb622917705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d2d89de2ef6b87166acc81589bdbb622917705/comments", "author": null, "committer": null, "parents": [{"sha": "ada353b87909fd6cd37a30083b4fdcb76acbf5fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada353b87909fd6cd37a30083b4fdcb76acbf5fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ada353b87909fd6cd37a30083b4fdcb76acbf5fe"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "8fcb9ec52f1e51521e9fb7054c7988716a3f1f4f", "filename": "gcc/testsuite/gcc.dg/lto/modref-1_0.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d2d89de2ef6b87166acc81589bdbb622917705/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmodref-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d2d89de2ef6b87166acc81589bdbb622917705/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmodref-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmodref-1_0.c?ref=a8d2d89de2ef6b87166acc81589bdbb622917705", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options {\"-O2 -flto-partition=max -flto\"}  } */\n+extern void recursive (int *a, int *b, int *c, int level);\n+int\n+main()\n+{\n+  int x = 123, y=124, z=125;\n+  recursive (&x,&y,&z,1);\n+  if (y)\n+    __builtin_abort ();\n+  if (!__builtin_constant_p (z))\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "c7c0eaec971e31483c16656eadd4cfea6b63f431", "filename": "gcc/testsuite/gcc.dg/lto/modref-1_1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d2d89de2ef6b87166acc81589bdbb622917705/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmodref-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d2d89de2ef6b87166acc81589bdbb622917705/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmodref-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fmodref-1_1.c?ref=a8d2d89de2ef6b87166acc81589bdbb622917705", "patch": "@@ -0,0 +1,13 @@\n+short aa;\n+void\n+__attribute__ ((noinline, noclone))\n+recursive (int *a, int *b, int *c, int level)\n+{\n+  if (level && c)\n+    {\n+      recursive (b,a,c,0);\n+      aa++;\n+    }\n+  else\n+    *a=0;\n+}"}, {"sha": "9999d37369df57f85dbf56824d3780063163ddaa", "filename": "gcc/testsuite/gcc.dg/tree-ssa/modref-2.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d2d89de2ef6b87166acc81589bdbb622917705/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d2d89de2ef6b87166acc81589bdbb622917705/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-2.c?ref=a8d2d89de2ef6b87166acc81589bdbb622917705", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\"  } */\n+short aa;\n+void\n+__attribute__ ((noinline, noclone))\n+recursive (int *a, int *b, int *c, int level)\n+{\n+  if (level && c)\n+    {\n+      recursive (b,a,c,0);\n+      aa++;\n+    }\n+  else\n+    *a=0;\n+}\n+int\n+main()\n+{\n+  int x = 123, y=124, z=125;\n+  recursive (&x,&y,&z,1);\n+  if (y)\n+    __builtin_abort ();\n+  if (!__builtin_constant_p (z))\n+    __builtin_abort ();\n+  return 0;\n+}"}]}