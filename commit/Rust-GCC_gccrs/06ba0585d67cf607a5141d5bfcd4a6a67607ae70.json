{"sha": "06ba0585d67cf607a5141d5bfcd4a6a67607ae70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZiYTA1ODVkNjdjZjYwN2E1MTQxZDViZmNkNGE2YTY3NjA3YWU3MA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-10-14T08:19:17Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-14T08:19:17Z"}, "message": "AVX-512. 60/n. Update 128bit ashrv insn pattern.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_mode_iterator VI128_128 [V16QI V8HI V2DI]): Delete.\n\t(define_expand \"vashr<mode>3<mask_name>\"): Add masking,\n\tuse VI12_128 mode iterator.\n\t(define_expand \"ashrv2di3<mask_name>\"): New.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r216178", "tree": {"sha": "c475a51b678f89f744d1d2b78a3ce51ba82ab939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c475a51b678f89f744d1d2b78a3ce51ba82ab939"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ba0585d67cf607a5141d5bfcd4a6a67607ae70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ba0585d67cf607a5141d5bfcd4a6a67607ae70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ba0585d67cf607a5141d5bfcd4a6a67607ae70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ba0585d67cf607a5141d5bfcd4a6a67607ae70/comments", "author": null, "committer": null, "parents": [{"sha": "54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54967fb0c8c2a1ab5d8fff59446e5fee8d6e79d9"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "18cefaf2a891295060199a011f3e8604574745fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ba0585d67cf607a5141d5bfcd4a6a67607ae70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ba0585d67cf607a5141d5bfcd4a6a67607ae70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06ba0585d67cf607a5141d5bfcd4a6a67607ae70", "patch": "@@ -1,3 +1,18 @@\n+2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_mode_iterator VI128_128 [V16QI V8HI V2DI]): Delete.\n+\t(define_expand \"vashr<mode>3<mask_name>\"): Add masking,\n+\tuse VI12_128 mode iterator.\n+\t(define_expand \"ashrv2di3<mask_name>\"): New.\n+\n 2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "f4586d94da9beb332bc759128640cae4435518b4", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ba0585d67cf607a5141d5bfcd4a6a67607ae70/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ba0585d67cf607a5141d5bfcd4a6a67607ae70/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=06ba0585d67cf607a5141d5bfcd4a6a67607ae70", "patch": "@@ -503,7 +503,6 @@\n (define_mode_iterator VI12_128 [V16QI V8HI])\n (define_mode_iterator VI14_128 [V16QI V4SI])\n (define_mode_iterator VI124_128 [V16QI V8HI V4SI])\n-(define_mode_iterator VI128_128 [V16QI V8HI V2DI])\n (define_mode_iterator VI24_128 [V8HI V4SI])\n (define_mode_iterator VI248_128 [V8HI V4SI V2DI])\n (define_mode_iterator VI48_128 [V4SI V2DI])\n@@ -15529,17 +15528,36 @@\n \t  (match_operand:VI48_256 2 \"nonimmediate_operand\")))]\n   \"TARGET_AVX2\")\n \n-(define_expand \"vashr<mode>3\"\n-  [(set (match_operand:VI128_128 0 \"register_operand\")\n-\t(ashiftrt:VI128_128\n-\t  (match_operand:VI128_128 1 \"register_operand\")\n-\t  (match_operand:VI128_128 2 \"nonimmediate_operand\")))]\n-  \"TARGET_XOP\"\n+(define_expand \"vashr<mode>3<mask_name>\"\n+  [(set (match_operand:VI12_128 0 \"register_operand\")\n+\t(ashiftrt:VI12_128\n+\t  (match_operand:VI12_128 1 \"register_operand\")\n+\t  (match_operand:VI12_128 2 \"nonimmediate_operand\")))]\n+  \"TARGET_XOP || (TARGET_AVX512BW && TARGET_AVX512VL)\"\n {\n-  rtx neg = gen_reg_rtx (<MODE>mode);\n-  emit_insn (gen_neg<mode>2 (neg, operands[2]));\n-  emit_insn (gen_xop_sha<mode>3 (operands[0], operands[1], neg));\n-  DONE;\n+  if (TARGET_XOP)\n+    {\n+      rtx neg = gen_reg_rtx (<MODE>mode);\n+      emit_insn (gen_neg<mode>2 (neg, operands[2]));\n+      emit_insn (gen_xop_sha<mode>3 (operands[0], operands[1], neg));\n+      DONE;\n+    }\n+})\n+\n+(define_expand \"vashrv2di3<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\")\n+\t(ashiftrt:V2DI\n+\t  (match_operand:V2DI 1 \"register_operand\")\n+\t  (match_operand:V2DI 2 \"nonimmediate_operand\")))]\n+  \"TARGET_XOP || TARGET_AVX512VL\"\n+{\n+  if (TARGET_XOP)\n+    {\n+      rtx neg = gen_reg_rtx (V2DImode);\n+      emit_insn (gen_negv2di2 (neg, operands[2]));\n+      emit_insn (gen_xop_shav2di3 (operands[0], operands[1], neg));\n+      DONE;\n+    }\n })\n \n (define_expand \"vashrv4si3\""}]}