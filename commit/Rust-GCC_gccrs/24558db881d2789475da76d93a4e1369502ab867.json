{"sha": "24558db881d2789475da76d93a4e1369502ab867", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ1NThkYjg4MWQyNzg5NDc1ZGE3NmQ5M2E0ZTEzNjk1MDJhYjg2Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T13:59:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T13:59:40Z"}, "message": "[multiple changes]\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch3.adb, sem_ch5.adb, sem_util.adb, sem_ch4.adb, sem_ch8.adb,\n\topt.ads, lib-xref.ads: Code clean up.\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi: Update description of Test_Case\n\t* gnat_ugn.texi: Typo.\n\n2011-08-04  Ed Falis  <falis@adacore.com>\n\n\t* adaint.c (__gnat_get_number_of_cpus): fix typo in last checkin.\n\n2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch4.adb (Suitable_Element): Skip field _parent on .NET/JVM when\n\tit is of type Root_Controlled. This action eliminates fields Prev and\n\tNext from type equality.\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref-alfa.adb: Correct typo.\n\n2011-08-04  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-cohata.ads (Hash_Table_Type): default-initialize the Nodes\n\tcomponent.\n\nFrom-SVN: r177390", "tree": {"sha": "5a84e08f0904574b440e89320efb745d9d593cba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a84e08f0904574b440e89320efb745d9d593cba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24558db881d2789475da76d93a4e1369502ab867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24558db881d2789475da76d93a4e1369502ab867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24558db881d2789475da76d93a4e1369502ab867", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24558db881d2789475da76d93a4e1369502ab867/comments", "author": null, "committer": null, "parents": [{"sha": "1f9939b5d9f5722d18fc84139826b2d8845a68c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9939b5d9f5722d18fc84139826b2d8845a68c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f9939b5d9f5722d18fc84139826b2d8845a68c2"}], "stats": {"total": 79, "additions": 62, "deletions": 17}, "files": [{"sha": "d22593d340191c4c2cfffc0a21b295e5b6d0434e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -1,3 +1,32 @@\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch3.adb, sem_ch5.adb, sem_util.adb, sem_ch4.adb, sem_ch8.adb,\n+\topt.ads, lib-xref.ads: Code clean up.\n+\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_rm.texi: Update description of Test_Case\n+\t* gnat_ugn.texi: Typo.\n+\n+2011-08-04  Ed Falis  <falis@adacore.com>\n+\n+\t* adaint.c (__gnat_get_number_of_cpus): fix typo in last checkin.\n+\n+2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch4.adb (Suitable_Element): Skip field _parent on .NET/JVM when\n+\tit is of type Root_Controlled. This action eliminates fields Prev and\n+\tNext from type equality.\n+\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref-alfa.adb: Correct typo.\n+\n+2011-08-04  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-cohata.ads (Hash_Table_Type): default-initialize the Nodes\n+\tcomponent.\n+\n 2011-08-04  Yannick Moy  <moy@adacore.com>\n \n \t* sem_prag.adb (Check_Arg_Is_String_Literal): remove useless procedure"}, {"sha": "2a6c6ab5706576f6f92c13a4107dbd0639c6b054", "filename": "gcc/ada/a-cohata.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fa-cohata.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fa-cohata.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohata.ads?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,7 +66,7 @@ package Ada.Containers.Hash_Tables is\n          Busy    : Natural := 0;\n          Lock    : Natural := 0;\n          Free    : Count_Type'Base := -1;\n-         Nodes   : Nodes_Type (1 .. Capacity);\n+         Nodes   : Nodes_Type (1 .. Capacity) := (others => <>);\n          Buckets : Buckets_Type (1 .. Modulus) := (others => 0);\n       end record;\n    end Generic_Bounded_Hash_Table_Types;"}, {"sha": "ab8446def3547e4f4ce8e5c4f1a6b9cb5fc4e491", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -2448,7 +2448,7 @@ __gnat_number_of_cpus (void)\n   if ((status & 1) != 0)\n     cores = res;\n \n-#elif defined (__WRS_CONFIG_SMP)\n+#elif defined (_WRS_CONFIG_SMP)\n   unsigned int vxCpuConfiguredGet (void);\n \n   cores = vxCpuConfiguredGet ();"}, {"sha": "9acc3e4fa8c69062cb3c4f40b69ca46d3ed1df70", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -9328,6 +9328,17 @@ package body Exp_Ch4 is\n          elsif Chars (C) = Name_uTag then\n             return Suitable_Element (Next_Entity (C));\n \n+         --  The .NET/JVM version of type Root_Controlled contains two fields\n+         --  which should not be considered part of the object. To achieve\n+         --  proper equiality between two controlled objects on .NET/JVM, skip\n+         --  field _parent whenever it is of type Root_Controlled.\n+\n+         elsif Chars (C) = Name_uParent\n+           and then VM_Target /= No_VM\n+           and then Etype (C) = RTE (RE_Root_Controlled)\n+         then\n+            return Suitable_Element (Next_Entity (C));\n+\n          elsif Is_Interface (Etype (C)) then\n             return Suitable_Element (Next_Entity (C));\n "}, {"sha": "1cfcf715960055a00ca821b3e34679991e099567", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -5018,7 +5018,7 @@ Syntax:\n \n @smallexample @c ada\n pragma Test_Case (\n-   [Name     =>] String_Expression\n+   [Name     =>] static_string_Expression\n   ,[Mode     =>] (Normal | Robustness)\n  [, Requires =>  Boolean_Expression]\n  [, Ensures  =>  Boolean_Expression]);\n@@ -5047,14 +5047,23 @@ expression. The following is an example of use within a package spec:\n package Math_Functions is\n    ...\n    function Sqrt (Arg : Float) return Float;\n-   pragma Test_Case (Name     => ``Test_1``,\n+   pragma Test_Case (Name     => \"Test 1\",\n                      Mode     => Normal,\n                      Requires => Arg < 100,\n                      Ensures  => Sqrt'Result < 10);\n    ...\n end Math_Functions;\n @end smallexample\n \n+@noindent\n+The meaning of a test case is that, if the associated subprogram is\n+executed in a context where @code{Requires} holds, then @code{Ensures}\n+should hold when the subprogram returns. Mode @code{Normal} indicates\n+that the input context should satisfy the normal precondition of the\n+subprogram, and the output context should then satisfy its\n+postcondition. More @code{Robustness} indicates that the normal pre- and\n+postcondition of the subprogram should be ignored for this test case.\n+\n @node Pragma Thread_Local_Storage\n @unnumberedsec Pragma Thread_Local_Storage\n @findex Thread_Local_Storage"}, {"sha": "3e689938cdd8e0ea93b09c8e7aca8f48909da16a", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -17285,7 +17285,7 @@ much has actually been used.\n The environment task stack, e.g., the stack that contains the main unit, is\n only processed when the environment variable GNAT_STACK_LIMIT is set.\n \n-@noident\n+@noindent\n The package @code{GNAT.Task_Stack_Usage} provides facilities to get\n stack usage reports at run-time. See its body for the details.\n "}, {"sha": "9b78b438562300001254e17ce8afb8d5216fc22d", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -546,7 +546,7 @@ package body ALFA is\n \n          function Is_Global_Constant (E : Entity_Id) return Boolean is\n          begin\n-            return Ekind (E) in E_Constant\n+            return Ekind (E) = E_Constant\n               and then Ekind_In (Scope (E), E_Package, E_Package_Body);\n          end Is_Global_Constant;\n "}, {"sha": "ecee22a337710ee124b2ad349f3aff232d0ef1bc", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -177,7 +177,6 @@ package Lib.Xref is\n    --              e = end of spec\n    --              H = abstract type\n    --              i = implicit reference\n-   --              I = object definition with initialization\n    --              k = implicit reference to parent unit in child unit\n    --              l = label on END line\n    --              m = modification"}, {"sha": "ec1213600074f97c849f9ea1eba1e80332fe2107", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -1878,9 +1878,6 @@ package Opt is\n    --  the generation of Why code for those parts of the input code that\n    --  belong to the ALFA subset of Ada. Set by debuf flag -gnatd.F.\n \n-   SPARK_Mode : Boolean := False;\n-   --  Reject constructs not allowed by SPARK. Set by flag -gnatd.D.\n-\n private\n \n    --  The following type is used to save and restore settings of switches in"}, {"sha": "4e8ae6d6a57454e0760eb759e44f00d9d8cf0ce5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -2057,7 +2057,7 @@ package body Sem_Ch3 is\n    --  Start of processing for Analyze_Declarations\n \n    begin\n-      if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n+      if Restriction_Check_Required (SPARK) then\n          Check_Later_Vs_Basic_Declarations (L, During_Parsing => False);\n       end if;\n "}, {"sha": "276c2843274205a6aed8a10f415fa5b44ee7d4c0", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -881,7 +881,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Call\n \n    begin\n-      if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n+      if Restriction_Check_Required (SPARK) then\n          Check_Mixed_Parameter_And_Named_Associations;\n       end if;\n "}, {"sha": "2e4adcde4a9e058dbf4b73d4f18e6b00d7fdce75", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -2620,7 +2620,7 @@ package body Sem_Ch5 is\n \n                   --  Now issue the warning (or error in formal mode)\n \n-                  if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n+                  if Restriction_Check_Required (SPARK) then\n                      Check_SPARK_Restriction\n                        (\"unreachable code is not allowed\", Error_Node);\n                   else"}, {"sha": "9c7700194705e3903f22ae975e47b016f0580def", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -5572,7 +5572,7 @@ package body Sem_Ch8 is\n       --  Selector name cannot be a character literal or an operator symbol in\n       --  SPARK, except for the operator symbol in a renaming.\n \n-      if SPARK_Mode or else Restriction_Check_Required (SPARK) then\n+      if Restriction_Check_Required (SPARK) then\n          if Nkind (Selector_Name (N)) = N_Character_Literal then\n             Check_SPARK_Restriction\n               (\"character literal cannot be prefixed\", N);\n@@ -5911,7 +5911,7 @@ package body Sem_Ch8 is\n          --  Selector name is restricted in SPARK\n \n          if Nkind (N) = N_Expanded_Name\n-           and then (SPARK_Mode or else Restriction_Check_Required (SPARK))\n+           and then Restriction_Check_Required (SPARK)\n          then\n             if Is_Subprogram (P_Name) then\n                Check_SPARK_Restriction"}, {"sha": "b7b8fe01a6f79154591c013ebf99c81e9125532d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24558db881d2789475da76d93a4e1369502ab867/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=24558db881d2789475da76d93a4e1369502ab867", "patch": "@@ -11022,7 +11022,7 @@ package body Sem_Util is\n          --  subprogram bodies. Detect those cases by testing whether\n          --  Process_End_Label was called for a body (Typ = 't') or a package.\n \n-         if (SPARK_Mode or else Restriction_Check_Required (SPARK))\n+         if Restriction_Check_Required (SPARK)\n            and then (Typ = 't' or else Ekind (Ent) = E_Package)\n          then\n             Error_Msg_Node_1 := Endl;"}]}