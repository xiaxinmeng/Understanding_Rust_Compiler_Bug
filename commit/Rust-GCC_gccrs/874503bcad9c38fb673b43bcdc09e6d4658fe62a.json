{"sha": "874503bcad9c38fb673b43bcdc09e6d4658fe62a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0NTAzYmNhZDljMzhmYjY3M2I0M2JjZGMwOWU2ZDQ2NThmZTYyYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-06-07T12:13:54Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-06-07T12:13:54Z"}, "message": "class.c (instantiate_type): Handle pointer-to-members where the member is a template.\n\n\t* class.c (instantiate_type): Handle pointer-to-members where the\n\tmember is a template.\n\t* init.c (build_offset_ref): Likewise.\n\t* typeck.c (build_unary_op): Likewise.\n\nFrom-SVN: r20269", "tree": {"sha": "6c03d69c022263d9aa94cd9a9e6ae9a38cde6cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c03d69c022263d9aa94cd9a9e6ae9a38cde6cfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/874503bcad9c38fb673b43bcdc09e6d4658fe62a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874503bcad9c38fb673b43bcdc09e6d4658fe62a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874503bcad9c38fb673b43bcdc09e6d4658fe62a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874503bcad9c38fb673b43bcdc09e6d4658fe62a/comments", "author": null, "committer": null, "parents": [{"sha": "dfdfa60f540afcfb54a599ce9a59770225d11ce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfdfa60f540afcfb54a599ce9a59770225d11ce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfdfa60f540afcfb54a599ce9a59770225d11ce6"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "c1f58bd5407be48ebf99c604230179c88997c6c0", "filename": "gcc/cp/class.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874503bcad9c38fb673b43bcdc09e6d4658fe62a/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874503bcad9c38fb673b43bcdc09e6d4658fe62a/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=874503bcad9c38fb673b43bcdc09e6d4658fe62a", "patch": "@@ -5092,6 +5092,21 @@ instantiate_type (lhstype, rhs, complain)\n \treturn rhs;\n       }\n \n+    case SCOPE_REF:\n+      {\n+\t/* This can happen if we are forming a pointer-to-member for a\n+\t   member template.  */\n+\ttree template_id_expr = TREE_OPERAND (rhs, 1);\n+\ttree name;\n+\tmy_friendly_assert (TREE_CODE (template_id_expr) == TEMPLATE_ID_EXPR,\n+\t\t\t    0);\n+\texplicit_targs = TREE_OPERAND (template_id_expr, 1);\n+\tname = TREE_OPERAND (template_id_expr, 0);\n+\tmy_friendly_assert (TREE_CODE (name) == IDENTIFIER_NODE, 0);\n+\trhs = lookup_fnfields (TYPE_BINFO (TREE_OPERAND (rhs, 0)), name, 1);\n+\tgoto overload;\n+      }\n+\n     case TEMPLATE_ID_EXPR:\n       {\n \texplicit_targs = TREE_OPERAND (rhs, 1);\n@@ -5101,6 +5116,7 @@ instantiate_type (lhstype, rhs, complain)\n       my_friendly_assert (TREE_CODE (rhs) == OVERLOAD, 980401);\n \n     case OVERLOAD:\n+    overload:\n       {\n \ttree elem, elems;\n \n@@ -5112,7 +5128,8 @@ instantiate_type (lhstype, rhs, complain)\n \tif (lhstype == error_mark_node)\n \t  return lhstype;\n \n-\tif (TREE_CODE (lhstype) != FUNCTION_TYPE)\n+\tif (TREE_CODE (lhstype) != FUNCTION_TYPE\n+\t    && TREE_CODE (lhstype) != METHOD_TYPE)\n \t  {\n \t    rhs = DECL_NAME (OVL_FUNCTION (rhs));\n \t    if (complain)"}, {"sha": "b7b74c0ec96eb1f0a6a5bb9dfc6efa7c7a4069a9", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874503bcad9c38fb673b43bcdc09e6d4658fe62a/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874503bcad9c38fb673b43bcdc09e6d4658fe62a/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=874503bcad9c38fb673b43bcdc09e6d4658fe62a", "patch": "@@ -1615,14 +1615,15 @@ build_offset_ref (type, name)\n   int dtor = 0;\n \n   /* class templates can come in as TEMPLATE_DECLs here.  */\n-  if (TREE_CODE (name) != IDENTIFIER_NODE)\n+  if (TREE_CODE (name) == TEMPLATE_DECL)\n     return name;\n \n   if (type == std_node)\n     return do_scoped_id (name, 0);\n \n-  if (processing_template_decl || uses_template_parms (type))\n-    return build_min_nt (SCOPE_REF, type, name);\n+  if (processing_template_decl || uses_template_parms (type)\n+      || TREE_CODE (name) == TEMPLATE_ID_EXPR)\n+    return build_min (SCOPE_REF, unknown_type_node, type, name);\n \n   /* Handle namespace names fully here.  */\n   if (TREE_CODE (type) == NAMESPACE_DECL)"}, {"sha": "f394f403b7f790ed5e4ebe5ea5edc5e30159e24f", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874503bcad9c38fb673b43bcdc09e6d4658fe62a/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874503bcad9c38fb673b43bcdc09e6d4658fe62a/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=874503bcad9c38fb673b43bcdc09e6d4658fe62a", "patch": "@@ -4560,7 +4560,9 @@ build_unary_op (code, xarg, noconvert)\n \t  return build1 (ADDR_EXPR, unknown_type_node, arg);\n \t}\n \n-      if (TREE_CODE (arg) == OVERLOAD)\n+      if (TREE_CODE (arg) == OVERLOAD \n+\t  || (TREE_CODE (arg) == SCOPE_REF \n+\t      && TREE_CODE (TREE_OPERAND (arg, 1)) == TEMPLATE_ID_EXPR))\n \treturn build1 (ADDR_EXPR, unknown_type_node, arg);\n       else if (TREE_CODE (arg) == TREE_LIST)\n \t{"}, {"sha": "3cd9c2b0cb6274c2644525e99402d64fabb5260b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ptrmem1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874503bcad9c38fb673b43bcdc09e6d4658fe62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874503bcad9c38fb673b43bcdc09e6d4658fe62a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem1.C?ref=874503bcad9c38fb673b43bcdc09e6d4658fe62a", "patch": "@@ -0,0 +1,16 @@\n+// Build don't run:\n+\n+class foo\n+{\n+public:\n+  template<class T>\n+  T bar() {}\n+};\n+\n+int\n+main()\n+{\n+  foo f;\n+  \n+  int (foo::*s)() = &foo::template bar<int>;\n+}"}]}