{"sha": "b80e6d97a9e2425f2a8b97a436335e0abf9105db", "node_id": "C_kwDOANBUbNoAKGI4MGU2ZDk3YTllMjQyNWYyYThiOTdhNDM2MzM1ZTBhYmY5MTA1ZGI", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2021-12-11T08:46:08Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2021-12-13T13:54:11Z"}, "message": "Ensure VxWorks headers expose C99 features for C++\n\nC++ relies on C99 features since C++11 and libstdc++ down to c++98\nchecks for C99 features at configure time. Simpler is to request C99\nfeatures from system headers unconditionally.\n\n2021-12-11  Olivier Hainque  <hainque@adacore.com>\n\n\t* config/vxworks.h (VXWORKS_OS_CPP_BUILTINS): Define\n\t_C99 for C++.", "tree": {"sha": "7bc5599c89a7b799ca97a4c005f7788c37ab54a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bc5599c89a7b799ca97a4c005f7788c37ab54a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b80e6d97a9e2425f2a8b97a436335e0abf9105db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b80e6d97a9e2425f2a8b97a436335e0abf9105db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b80e6d97a9e2425f2a8b97a436335e0abf9105db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b80e6d97a9e2425f2a8b97a436335e0abf9105db/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3f923e51391d279adace7ae24260d87e94b1108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3f923e51391d279adace7ae24260d87e94b1108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3f923e51391d279adace7ae24260d87e94b1108"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "f76141ffdca88aadba45a851da7193d6c3bda1c3", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b80e6d97a9e2425f2a8b97a436335e0abf9105db/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b80e6d97a9e2425f2a8b97a436335e0abf9105db/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=b80e6d97a9e2425f2a8b97a436335e0abf9105db", "patch": "@@ -286,6 +286,12 @@ extern void vxworks_asm_out_destructor (rtx symbol, int priority);\n \t   if (!flag_isoc99 && !c_dialect_cxx())\t\t\t\\\n              builtin_define (\"_ALLOW_KEYWORD_MACROS\");\t\t\t\\\n         }\t\t\t\t\t\t\t\t\\\n+      /* C++ support relies on C99 features from C++11, even C++98\t\\\n+         for listdc++ in particular, with corresponding checks at\t\\\n+         configure time.  Make sure C99 features are exposed by the\t\\\n+         system headers.  */\t\t\t\t\t\t\\\n+      if (c_dialect_cxx())\t\t\t\t\t\t\\\n+        builtin_define(\"_C99\");\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n "}]}