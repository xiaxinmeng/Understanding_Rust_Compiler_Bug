{"sha": "c52243fe1103584323ced1e66d601233c23a4b75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUyMjQzZmUxMTAzNTg0MzIzY2VkMWU2NmQ2MDEyMzNjMjNhNGI3NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-12-23T00:31:44Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-12-23T00:31:44Z"}, "message": "mmintrin.h (_mm_add_si64): Only define for SSE2.\n\n        * config/i386/mmintrin.h (_mm_add_si64): Only define for SSE2.\n        (_mm_sub_si64): Likewise.\n        * config/i386/xmmintrin.h (_mm_shuffle_pi16, _m_pshufw): Likewise.\n\n        * gcc.target/i386/sse-7.c: Use -msse2.\n\nFrom-SVN: r108996", "tree": {"sha": "37ccb20d8519567d5a7c1117e7894bc8004a318a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37ccb20d8519567d5a7c1117e7894bc8004a318a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c52243fe1103584323ced1e66d601233c23a4b75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52243fe1103584323ced1e66d601233c23a4b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c52243fe1103584323ced1e66d601233c23a4b75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52243fe1103584323ced1e66d601233c23a4b75/comments", "author": null, "committer": null, "parents": [{"sha": "2b2f3077f3bac5ea1dfe312b5856d00eeceabdcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b2f3077f3bac5ea1dfe312b5856d00eeceabdcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b2f3077f3bac5ea1dfe312b5856d00eeceabdcd"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "2c592a262c3f9c960ec996494eb779023127e21d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c52243fe1103584323ced1e66d601233c23a4b75", "patch": "@@ -1,3 +1,9 @@\n+2005-12-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/mmintrin.h (_mm_add_si64): Only define for SSE2.\n+\t(_mm_sub_si64): Likewise.\n+\t* config/i386/xmmintrin.h (_mm_shuffle_pi16, _m_pshufw): Likewise.\n+\n 2005-12-23  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR rtl-optimization/25432\n@@ -2213,7 +2219,7 @@\n 2005-12-06  Jan Beulich  <jbeulich@novell.com>\n \n \t* config/i386/i386.c (builtin_description): Use MASK_SSE2 for\n-\t__builtin_ia32_paddq and __builtin_ia32_subq.\n+\t__builtin_ia32_paddq and __builtin_ia32_psubq.\n \t(ix86_init_mmx_sse_builtins): Use MASK_SSE|MASK_3DNOW_A for\n \t__builtin_ia32_pshufw.\n \t* config/i386/i386.md (mmx_adddi3, mmx_subdi3): Depend on TARGET_SSE2."}, {"sha": "b98caf0cac2231646e68b7ffc7f9e6b160acdabe", "filename": "gcc/config/i386/mmintrin.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2Fconfig%2Fi386%2Fmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2Fconfig%2Fi386%2Fmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmintrin.h?ref=c52243fe1103584323ced1e66d601233c23a4b75", "patch": "@@ -274,11 +274,13 @@ _m_paddd (__m64 __m1, __m64 __m2)\n }\n \n /* Add the 64-bit values in M1 to the 64-bit values in M2.  */\n+#ifdef __SSE2__\n static __inline __m64 __attribute__((__always_inline__))\n _mm_add_si64 (__m64 __m1, __m64 __m2)\n {\n   return (__m64) __builtin_ia32_paddq ((long long)__m1, (long long)__m2);\n }\n+#endif\n \n /* Add the 8-bit values in M1 to the 8-bit values in M2 using signed\n    saturated arithmetic.  */\n@@ -376,11 +378,13 @@ _m_psubd (__m64 __m1, __m64 __m2)\n }\n \n /* Add the 64-bit values in M1 to the 64-bit values in M2.  */\n+#ifdef __SSE2__\n static __inline __m64 __attribute__((__always_inline__))\n _mm_sub_si64 (__m64 __m1, __m64 __m2)\n {\n   return (__m64) __builtin_ia32_psubq ((long long)__m1, (long long)__m2);\n }\n+#endif\n \n /* Subtract the 8-bit values in M2 from the 8-bit values in M1 using signed\n    saturating arithmetic.  */"}, {"sha": "20c41c739d54d3244d0b5659ea8eadedead3690a", "filename": "gcc/config/i386/xmmintrin.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxmmintrin.h?ref=c52243fe1103584323ced1e66d601233c23a4b75", "patch": "@@ -1075,6 +1075,7 @@ _m_pmulhuw (__m64 __A, __m64 __B)\n \n /* Return a combination of the four 16-bit values in A.  The selector\n    must be an immediate.  */\n+#ifdef __SSE2__\n #if 0\n static __inline __m64 __attribute__((__always_inline__))\n _mm_shuffle_pi16 (__m64 __A, int __N)\n@@ -1092,6 +1093,7 @@ _m_pshufw (__m64 __A, int __N)\n   ((__m64) __builtin_ia32_pshufw ((__v4hi)(A), (N)))\n #define _m_pshufw(A, N)\t\t_mm_shuffle_pi16 ((A), (N))\n #endif\n+#endif\n \n /* Conditionally store byte elements of A into P.  The high bit of each\n    byte in the selector N determines whether the corresponding byte from"}, {"sha": "078c5417bae0ab3882a0faafc1a7633c39b8917a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c52243fe1103584323ced1e66d601233c23a4b75", "patch": "@@ -1,3 +1,7 @@\n+2005-12-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* gcc.target/i386/sse-7.c: Use -msse2.\n+\n 2005-12-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/25432"}, {"sha": "41e771e696a7189df3e98b8f2e4a311fd5d199f7", "filename": "gcc/testsuite/gcc.target/i386/sse-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52243fe1103584323ced1e66d601233c23a4b75/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-7.c?ref=c52243fe1103584323ced1e66d601233c23a4b75", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse\" } */\n+/* { dg-options \"-O2 -msse2\" } */\n #include <xmmintrin.h>\n #include <stdio.h>\n #include <stdlib.h>"}]}