{"sha": "e0cdd8d4c204592661f161e9be8009355488c46f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBjZGQ4ZDRjMjA0NTkyNjYxZjE2MWU5YmU4MDA5MzU1NDg4YzQ2Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-09-18T15:39:18Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-09-18T15:39:18Z"}, "message": "Remove tmp from bmiintrin.h and tbmintrin.h.\n\n2011-09-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/bmiintrin.h: Remove tmp.\n\t* config/i386/tbmintrin.h: Likewise.\n\nFrom-SVN: r178943", "tree": {"sha": "d1931e96f1be0c2c133b4c88a422e11616d6751f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1931e96f1be0c2c133b4c88a422e11616d6751f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0cdd8d4c204592661f161e9be8009355488c46f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0cdd8d4c204592661f161e9be8009355488c46f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0cdd8d4c204592661f161e9be8009355488c46f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0cdd8d4c204592661f161e9be8009355488c46f/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8953b0aeede946f7e7ba900329713df51ee58167", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8953b0aeede946f7e7ba900329713df51ee58167", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8953b0aeede946f7e7ba900329713df51ee58167"}], "stats": {"total": 92, "additions": 35, "deletions": 57}, "files": [{"sha": "461840f52da9540d9fa33d9e06640a8f328f9fa4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0cdd8d4c204592661f161e9be8009355488c46f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0cdd8d4c204592661f161e9be8009355488c46f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0cdd8d4c204592661f161e9be8009355488c46f", "patch": "@@ -1,3 +1,8 @@\n+2011-09-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/bmiintrin.h: Remove tmp.\n+\t* config/i386/tbmintrin.h: Likewise.\n+\n 2011-09-18  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/50414"}, {"sha": "ad174336f9e8b8c6c928c5b7cd1413f6d03cd6f0", "filename": "gcc/config/i386/bmiintrin.h", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0cdd8d4c204592661f161e9be8009355488c46f/gcc%2Fconfig%2Fi386%2Fbmiintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0cdd8d4c204592661f161e9be8009355488c46f/gcc%2Fconfig%2Fi386%2Fbmiintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbmiintrin.h?ref=e0cdd8d4c204592661f161e9be8009355488c46f", "patch": "@@ -42,8 +42,7 @@ __tzcnt_u16 (unsigned short __X)\n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __andn_u32 (unsigned int __X, unsigned int __Y)\n {\n-  unsigned int tmp = ~(__X) & (__Y);\n-  return tmp;\n+  return ~__X & __Y;\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n@@ -55,22 +54,19 @@ __bextr_u32 (unsigned int __X, unsigned int __Y)\n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsi_u32 (unsigned int __X)\n {\n-  unsigned int tmp = (__X) & (-(__X));\n-  return tmp;\n+  return __X & -__X;\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsmsk_u32 (unsigned int __X)\n {\n-  unsigned int tmp = (__X) ^ (__X - 1);\n-  return tmp;\n+  return __X ^ (__X - 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsr_u32 (unsigned int __X)\n {\n-  unsigned int tmp = (__X) & (__X - 1);\n-  return tmp;\n+  return __X & (__X - 1);\n }\n \n \n@@ -85,8 +81,7 @@ __tzcnt_u32 (unsigned int __X)\n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __andn_u64 (unsigned long long __X, unsigned long long __Y)\n {\n-  unsigned long long tmp = ~(__X) & (__Y);\n-  return tmp;\n+  return ~__X & __Y;\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n@@ -98,22 +93,19 @@ __bextr_u64 (unsigned long long __X, unsigned long long __Y)\n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsi_u64 (unsigned long long __X)\n {\n-  unsigned long long tmp = (__X) & (-(__X));\n-  return tmp;\n+  return __X & -__X;\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsmsk_u64 (unsigned long long __X)\n {\n-  unsigned long long tmp = (__X) ^ (__X - 1);\n-  return tmp;\n+  return __X ^ (__X - 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsr_u64 (unsigned long long __X)\n {\n-  unsigned long long tmp = (__X) & (__X - 1);\n-  return tmp;\n+  return __X & (__X - 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))"}, {"sha": "2f87a6471c4459150efc980516412ec82e17d62d", "filename": "gcc/config/i386/tbmintrin.h", "status": "modified", "additions": 22, "deletions": 41, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0cdd8d4c204592661f161e9be8009355488c46f/gcc%2Fconfig%2Fi386%2Ftbmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0cdd8d4c204592661f161e9be8009355488c46f/gcc%2Fconfig%2Fi386%2Ftbmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ftbmintrin.h?ref=e0cdd8d4c204592661f161e9be8009355488c46f", "patch": "@@ -47,64 +47,55 @@ __bextri_u32 (unsigned int __X, const unsigned int __I)\n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blcfill_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (__X) & ((__X) + 1);\n-\treturn tmp;\n+  return __X & (__X + 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blci_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (__X) | (~((__X) + 1));\n-\treturn tmp;\n+  return __X | ~(__X + 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blcic_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (~(__X)) & ((__X) + 1);\n-\treturn tmp;\n+  return ~__X & (__X + 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blcmsk_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (__X) ^ ((__X) + 1);\n-\treturn tmp;\n+  return __X ^ (__X + 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blcs_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (__X) | ((__X) + 1);\n-\treturn tmp;\n+  return __X | (__X + 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsfill_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (__X) | ((__X) - 1);\n-\treturn tmp;\n+  return __X | (__X - 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsic_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (~(__X)) | ((__X) - 1);\n-\treturn tmp;\n+  return ~__X | (__X - 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __t1mskc_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (~(__X)) | ((__X) + 1);\n-\treturn tmp;\n+  return ~__X | (__X + 1);\n }\n \n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __tzmsk_u32 (unsigned int __X)\n {\n-\tunsigned int tmp = (~(__X)) & ((__X) - 1);\n-\treturn tmp;\n+  return ~__X & (__X - 1);\n }\n \n \n@@ -114,78 +105,68 @@ __tzmsk_u32 (unsigned int __X)\n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __bextri_u64 (unsigned long long __X, const unsigned int __I)\n {\n-\treturn __builtin_ia32_bextri_u64 (__X, __I);\n+  return __builtin_ia32_bextri_u64 (__X, __I);\n }\n #else\n-#define __bextri_u64(X, I)                                                       \\\n-        ((unsigned long long)__builtin_ia32_bextri_u64 ((unsigned long long)(X), \\\n-\t                                                (unsigned long long)(I)))\n+#define __bextri_u64(X, I)\t\t\t\t\t\t   \\\n+  ((unsigned long long)__builtin_ia32_bextri_u64 ((unsigned long long)(X), \\\n+\t\t\t\t\t\t  (unsigned long long)(I)))\n #endif /*__OPTIMIZE__ */\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blcfill_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (__X) & ((__X) + 1);\n-\treturn tmp;\n+  return __X & (__X + 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blci_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (__X) | (~((__X) + 1));\n-\treturn tmp;\n+  return __X | ~(__X + 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blcic_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (~(__X)) & ((__X) + 1);\n-\treturn tmp;\n+  return ~__X & (__X + 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blcmsk_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (__X) ^ ((__X) + 1);\n-\treturn tmp;\n+  return __X ^ (__X + 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blcs_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (__X) | ((__X) + 1);\n-\treturn tmp;\n+  return __X | (__X + 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsfill_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (__X) | ((__X) - 1);\n-\treturn tmp;\n+  return __X | (__X - 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __blsic_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (~(__X)) | ((__X) - 1);\n-\treturn tmp;\n+  return ~__X | (__X - 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __t1mskc_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (~(__X)) | ((__X) + 1);\n-\treturn tmp;\n+  return ~__X | (__X + 1);\n }\n \n extern __inline unsigned long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n __tzmsk_u64 (unsigned long long __X)\n {\n-\tunsigned long long tmp = (~(__X)) & ((__X) - 1);\n-\treturn tmp;\n+  return ~__X & (__X - 1);\n }\n \n \n #endif /* __x86_64__  */\n #endif /* _TBMINTRIN_H_INCLUDED */\n-"}]}