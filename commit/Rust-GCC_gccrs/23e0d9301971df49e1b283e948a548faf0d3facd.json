{"sha": "23e0d9301971df49e1b283e948a548faf0d3facd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNlMGQ5MzAxOTcxZGY0OWUxYjI4M2U5NDhhNTQ4ZmFmMGQzZmFjZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-02-21T19:59:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-02-21T19:59:52Z"}, "message": "re PR target/47840 (incorrect _mm256_insert_epi{32,64} implementations)\n\n\tPR target/47840\n\t* config/i386/avxintrin.h (_mm256_insert_epi32): Use _mm_insert_epi32.\n\t(_mm256_insert_epi64): Use _mm_insert_epi64.\n\nFrom-SVN: r170371", "tree": {"sha": "3d7aedb66e9309f17f2bf184b9ca9e6ffaf29856", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d7aedb66e9309f17f2bf184b9ca9e6ffaf29856"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23e0d9301971df49e1b283e948a548faf0d3facd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e0d9301971df49e1b283e948a548faf0d3facd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23e0d9301971df49e1b283e948a548faf0d3facd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e0d9301971df49e1b283e948a548faf0d3facd/comments", "author": null, "committer": null, "parents": [{"sha": "11c9e8f1db33c5aa3aae3b2400f3386bc05e740a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c9e8f1db33c5aa3aae3b2400f3386bc05e740a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c9e8f1db33c5aa3aae3b2400f3386bc05e740a"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "89113ffbfd7b5d852e57dee9bb0cea39296a65a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e0d9301971df49e1b283e948a548faf0d3facd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e0d9301971df49e1b283e948a548faf0d3facd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23e0d9301971df49e1b283e948a548faf0d3facd", "patch": "@@ -1,3 +1,9 @@\n+2011-02-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/47840\n+\t* config/i386/avxintrin.h (_mm256_insert_epi32): Use _mm_insert_epi32.\n+\t(_mm256_insert_epi64): Use _mm_insert_epi64.\n+\n 2011-02-21  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/stormy16/stormy16.h (GO_IF_MODE_DEPENDENT_ADDRESS): Remove.\n@@ -15,15 +21,15 @@\n \tDo not stream DECL_INITIAL for TRANSLATION_UNIT_DECLs.\n \t(lto_input_ts_block_tree_pointers): Hook a BLOCK into the\n \tTUs context.\n-\t* lto-streamer-out.c (lto_output_ts_decl_common_tree_pointers): \n+\t* lto-streamer-out.c (lto_output_ts_decl_common_tree_pointers):\n \tDo not stream DECL_INITIAL for TRANSLATION_UNIT_DECLs.\n \n 2011-02-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/47822\n \t* tree.c (free_lang_data_in_decl): Clean builtins from\n \tthe TU decl BLOCK_VARS.\n- \n+\n 2011-02-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/47620\n@@ -131,7 +137,7 @@\n 2011-02-17  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* config/darwin-c.c (darwin_cpp_builtins): Define __OBJC2__ for\n-\tobjc_abi == 2.\t\n+\tobjc_abi == 2.\n \t* config/darwin.c (output_objc_section_asm_op): Added support for\n \tABI v1 and v2.\n \t(is_objc_metadata): New.\n@@ -187,12 +193,10 @@\n \t(copy_arguments_for_versioning): Drop redundant get_var_ann.\n \t* ipa-inline.c (compute_inline_parameters): Do not compute\n \tdisregard_inline_limits here.\n-\tare not available.\n \t(compute_inlinable_for_current, pass_inlinable): New.\n \t(pass_inline_parameters): Require PROP_referenced_vars.\n \t* cgraphunit.c (cgraph_process_new_functions): Don't run\n-\tcompute_inline_parameters explicitly unless function is in\n-\tSSA form.\n+\tcompute_inline_parameters explicitly unless function is in SSA form.\n \t(cgraph_analyze_function): Set .disregard_inline_limits.\n \t* tree-sra.c (convert_callers): Compute inliner parameters\n \tonly for functions already in SSA form."}, {"sha": "8055cc607224e8e69d9ac1b235f5d3dbd6be6216", "filename": "gcc/config/i386/avxintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e0d9301971df49e1b283e948a548faf0d3facd/gcc%2Fconfig%2Fi386%2Favxintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e0d9301971df49e1b283e948a548faf0d3facd/gcc%2Fconfig%2Fi386%2Favxintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favxintrin.h?ref=23e0d9301971df49e1b283e948a548faf0d3facd", "patch": "@@ -737,7 +737,7 @@ extern __inline __m256i __attribute__((__gnu_inline__, __always_inline__, __arti\n _mm256_insert_epi32 (__m256i __X, int __D, int const __N)\n {\n   __m128i __Y = _mm256_extractf128_si256 (__X, __N >> 2);\n-  __Y = _mm_insert_epi16 (__Y, __D, __N % 4);\n+  __Y = _mm_insert_epi32 (__Y, __D, __N % 4);\n   return _mm256_insertf128_si256 (__X, __Y, __N >> 2);\n }\n \n@@ -762,7 +762,7 @@ extern __inline __m256i __attribute__((__gnu_inline__, __always_inline__, __arti\n _mm256_insert_epi64 (__m256i __X, int __D, int const __N)\n {\n   __m128i __Y = _mm256_extractf128_si256 (__X, __N >> 1);\n-  __Y = _mm_insert_epi16 (__Y, __D, __N % 2);\n+  __Y = _mm_insert_epi64 (__Y, __D, __N % 2);\n   return _mm256_insertf128_si256 (__X, __Y, __N >> 1);\n }\n #endif"}]}