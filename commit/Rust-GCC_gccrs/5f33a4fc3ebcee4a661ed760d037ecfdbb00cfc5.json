{"sha": "5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYzM2E0ZmMzZWJjZWU0YTY2MWVkNzYwZDAzN2VjZmRiYjAwY2ZjNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-08-07T12:11:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-08-07T12:11:43Z"}, "message": "tree-into-ssa.c (rewrite_stmt): Remove clobbers for variables we rewrite into SSA form.\n\n2012-08-07  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-into-ssa.c (rewrite_stmt): Remove clobbers for variables\n\twe rewrite into SSA form.\n\t(rewrite_enter_block): Adjust.\n\t* gimple-iterator.c (gsi_replace): Also allow replacement with\n\ta stmt without a lhs.\n\t* tree-ssa-live.c (remove_unused_locals): Remove code handling\n\tclobbers of SSA names.\n\t* tree-nested.c (convert_local_reference_stmt): Remove clobbers\n\tfor variables we access through the local chain.\n\t* tree-cfg.c (verify_gimple_assign_single): Verify clobbers\n\tclobber full decls only.\n\nFrom-SVN: r190200", "tree": {"sha": "02e3ec579b10a719a3d7f4d2ad5c2cdc6cc883c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02e3ec579b10a719a3d7f4d2ad5c2cdc6cc883c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcc748dd77c692eb3ef01043a8fed55c796f6f0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc748dd77c692eb3ef01043a8fed55c796f6f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc748dd77c692eb3ef01043a8fed55c796f6f0e"}], "stats": {"total": 66, "additions": 57, "deletions": 9}, "files": [{"sha": "65f194aeb09f91e76709a5293c03066630b2e7dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "patch": "@@ -1,3 +1,17 @@\n+2012-08-07  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-into-ssa.c (rewrite_stmt): Remove clobbers for variables\n+\twe rewrite into SSA form.\n+\t(rewrite_enter_block): Adjust.\n+\t* gimple-iterator.c (gsi_replace): Also allow replacement with\n+\ta stmt without a lhs.\n+\t* tree-ssa-live.c (remove_unused_locals): Remove code handling\n+\tclobbers of SSA names.\n+\t* tree-nested.c (convert_local_reference_stmt): Remove clobbers\n+\tfor variables we access through the local chain.\n+\t* tree-cfg.c (verify_gimple_assign_single): Verify clobbers\n+\tclobber full decls only.\n+\n 2012-08-07  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple.h (gimple_phi_set_result): Adjust SSA_NAME_DEF_STMT."}, {"sha": "914685c911a8696aabe9d96279028c7cce479da4", "filename": "gcc/gimple-iterator.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Fgimple-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Fgimple-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.c?ref=5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "patch": "@@ -427,7 +427,7 @@ gsi_replace (gimple_stmt_iterator *gsi, gimple stmt, bool update_eh_info)\n   if (stmt == orig_stmt)\n     return;\n \n-  gcc_assert (!gimple_has_lhs (orig_stmt)\n+  gcc_assert (!gimple_has_lhs (orig_stmt) || !gimple_has_lhs (stmt)\n \t      || gimple_get_lhs (orig_stmt) == gimple_get_lhs (stmt));\n \n   gimple_set_location (stmt, gimple_location (orig_stmt));"}, {"sha": "bc4045ef56d8b1c4c1f427e40bf42e7cb9996af1", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "patch": "@@ -3930,6 +3930,14 @@ verify_gimple_assign_single (gimple stmt)\n       return true;\n     }\n \n+  if (gimple_clobber_p (stmt)\n+      && !DECL_P (lhs))\n+    {\n+      error (\"non-decl LHS in clobber statement\");\n+      debug_generic_expr (lhs);\n+      return true;\n+    }\n+\n   if (handled_component_p (lhs))\n     res |= verify_types_in_gimple_reference (lhs, true);\n "}, {"sha": "74ef7f5b61d5da42e165c41f5e0f5d6e4cd64494", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "patch": "@@ -1323,12 +1323,12 @@ rewrite_debug_stmt_uses (gimple stmt)\n    definition of a variable when a new real or virtual definition is found.  */\n \n static void\n-rewrite_stmt (gimple_stmt_iterator si)\n+rewrite_stmt (gimple_stmt_iterator *si)\n {\n   use_operand_p use_p;\n   def_operand_p def_p;\n   ssa_op_iter iter;\n-  gimple stmt = gsi_stmt (si);\n+  gimple stmt = gsi_stmt (*si);\n \n   /* If mark_def_sites decided that we don't need to rewrite this\n      statement, ignore it.  */\n@@ -1362,17 +1362,32 @@ rewrite_stmt (gimple_stmt_iterator si)\n     FOR_EACH_SSA_DEF_OPERAND (def_p, stmt, iter, SSA_OP_ALL_DEFS)\n       {\n \ttree var = DEF_FROM_PTR (def_p);\n-\ttree name = make_ssa_name (var, stmt);\n+\ttree name;\n \ttree tracked_var;\n+\n \tgcc_assert (DECL_P (var));\n+\n+\tif (gimple_clobber_p (stmt)\n+\t    && is_gimple_reg (var))\n+\t  {\n+\t    /* If we rewrite a DECL into SSA form then drop its\n+\t       clobber stmts and replace uses with a new default def.  */\n+\t    gcc_assert (TREE_CODE (var) == VAR_DECL\n+\t\t\t&& !gimple_vdef (stmt));\n+\t    gsi_replace (si, gimple_build_nop (), true);\n+\t    register_new_def (get_or_create_ssa_default_def (cfun, var), var);\n+\t    break;\n+\t  }\n+\n+\tname = make_ssa_name (var, stmt);\n \tSET_DEF (def_p, name);\n \tregister_new_def (DEF_FROM_PTR (def_p), var);\n \n \ttracked_var = target_for_debug_bind (var);\n \tif (tracked_var)\n \t  {\n \t    gimple note = gimple_build_debug_bind (tracked_var, name, stmt);\n-\t    gsi_insert_after (&si, note, GSI_SAME_STMT);\n+\t    gsi_insert_after (si, note, GSI_SAME_STMT);\n \t  }\n       }\n }\n@@ -1439,7 +1454,7 @@ rewrite_enter_block (struct dom_walk_data *walk_data ATTRIBUTE_UNUSED,\n      of a variable when a new real or virtual definition is found.  */\n   if (TEST_BIT (interesting_blocks, bb->index))\n     for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-      rewrite_stmt (gsi);\n+      rewrite_stmt (&gsi);\n \n   /* Step 3.  Visit all the successor blocks of BB looking for PHI nodes.\n      For every PHI node found, add a new argument containing the current"}, {"sha": "0b99803615d1c23fde7d15bd48a8b803993cf26d", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "patch": "@@ -1727,6 +1727,20 @@ convert_local_reference_stmt (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n       *handled_ops_p = false;\n       return NULL_TREE;\n \n+    case GIMPLE_ASSIGN:\n+      if (gimple_clobber_p (stmt))\n+\t{\n+\t  tree lhs = gimple_assign_lhs (stmt);\n+\t  if (!use_pointer_in_frame (lhs)\n+\t      && lookup_field_for_decl (info, lhs, NO_INSERT))\n+\t    {\n+\t      gsi_replace (gsi, gimple_build_nop (), true);\n+\t      break;\n+\t    }\n+\t}\n+      *handled_ops_p = false;\n+      return NULL_TREE;\n+\n     default:\n       /* For every other statement that we are not interested in\n \t handling here, let the walker traverse the operands.  */"}, {"sha": "903faa9164907a492806758b0b02b2010d16eef7", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=5f33a4fc3ebcee4a661ed760d037ecfdbb00cfc5", "patch": "@@ -773,9 +773,6 @@ remove_unused_locals (void)\n \t    if (gimple_clobber_p (stmt))\n \t      {\n \t\ttree lhs = gimple_assign_lhs (stmt);\n-\t\tlhs = get_base_address (lhs);\n-\t\tif (TREE_CODE (lhs) == SSA_NAME)\n-\t\t  lhs = SSA_NAME_VAR (lhs);\n \t\tif (TREE_CODE (lhs) == VAR_DECL && !is_used_p (lhs))\n \t\t  {\n \t\t    unlink_stmt_vdef (stmt);"}]}