{"sha": "1b528097cdf347b2149b2c81dd2c3327642e61f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1MjgwOTdjZGYzNDdiMjE0OWIyYzgxZGQyYzMzMjc2NDJlNjFmMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-01-26T19:34:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-01-26T19:34:46Z"}, "message": "tweak formatting\n\nFrom-SVN: r24874", "tree": {"sha": "6e5e81137491bed2002836115a7d440140334685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e5e81137491bed2002836115a7d440140334685"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b528097cdf347b2149b2c81dd2c3327642e61f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b528097cdf347b2149b2c81dd2c3327642e61f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b528097cdf347b2149b2c81dd2c3327642e61f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b528097cdf347b2149b2c81dd2c3327642e61f1/comments", "author": null, "committer": null, "parents": [{"sha": "eb686064cad732d3bd2caeffde4e0f14f2aa0354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb686064cad732d3bd2caeffde4e0f14f2aa0354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb686064cad732d3bd2caeffde4e0f14f2aa0354"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "bed053d8953de213bfb1f4d813279ea111d69161", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b528097cdf347b2149b2c81dd2c3327642e61f1/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b528097cdf347b2149b2c81dd2c3327642e61f1/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=1b528097cdf347b2149b2c81dd2c3327642e61f1", "patch": "@@ -1,6 +1,6 @@\n /* More subroutines needed by GCC output code on some machines.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1989, 92-97, 1998 Free Software Foundation, Inc.\n+/* Copyright (C) 1989, 92-98, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -3759,22 +3759,24 @@ throw_helper (eh, pc, my_udata, udata_p)\n          for cleanups, we save the state, and keep looking. This allows\n          us to call a debug hook if there are nothing but cleanups left. */\n       if (handler)\n-\tif (cleanup)\n-\t  {\n-\t    if (!saved_state)\n-\t      {\n-\t\tsaved_ustruct = *udata;\n-\t\thandler_p = handler;\n-\t\tpc_p = pc;\n-\t\tsaved_state = 1;\n-\t\tonly_cleanup = 1;\n-\t      }\n-\t  }\n-\telse\n-\t  {\n-\t    only_cleanup = 0;\n-\t    break;\n-\t  }\n+\t{\n+\t  if (cleanup)\n+\t    {\n+\t      if (!saved_state)\n+\t\t{\n+\t\t  saved_ustruct = *udata;\n+\t\t  handler_p = handler;\n+\t\t  pc_p = pc;\n+\t\t  saved_state = 1;\n+\t\t  only_cleanup = 1;\n+\t\t}\n+\t    }\n+\t  else\n+\t    {\n+\t      only_cleanup = 0;\n+\t      break;\n+\t    }\n+\t}\n \n       /* Otherwise, we continue searching.  We subtract 1 from PC to avoid\n \t hitting the beginning of the next region.  */"}]}