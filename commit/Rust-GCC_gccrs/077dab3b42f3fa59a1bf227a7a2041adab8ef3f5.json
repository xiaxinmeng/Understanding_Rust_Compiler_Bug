{"sha": "077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc3ZGFiM2I0MmYzZmE1OWExYmYyMjdhN2EyMDQxYWRhYjhlZjNmNQ==", "commit": {"author": {"name": "Hartmut Penner", "email": "hpenner@de.ibm.com", "date": "2003-01-15T10:38:01Z"}, "committer": {"name": "Hartmut Penner", "email": "hpenner@gcc.gnu.org", "date": "2003-01-15T10:38:01Z"}, "message": "s390.c (s390_safe_attr_type): New function.\n\n        * config/s390/s390.c (s390_safe_attr_type): New function.\n        (s390_use_dfa_pipeline_interface): New function, return true for z900.\n        (s390_issue_rate): New function.\n        (s390_agen_dep_p): New function.\n        (addr_generation_dependency_p): Use 's390_safe_attr_type'.\n        (s390_adjust_cost): Return 'cost' if new DFA is used.\n        (s390_adjust_priority): Delete function.\n        * config/s390/s390-protos.h: (s390_agen_dep_p): New prototype.\n        * config/s390/s390.md (atype attribute): Attribute 'atype' default\n        determined by 'op_type'.\n        (type attribute): Added more type attributes.\n        * config/s390/2064.md: New DFA description for z900 pipeline.\n\nFrom-SVN: r61321", "tree": {"sha": "f2de337970ff0f6f21ec8b7d4079166d85e89b3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2de337970ff0f6f21ec8b7d4079166d85e89b3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/comments", "author": null, "committer": null, "parents": [{"sha": "2b28d405dcc24881f502dc0b906b9b534275c777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b28d405dcc24881f502dc0b906b9b534275c777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b28d405dcc24881f502dc0b906b9b534275c777"}], "stats": {"total": 1129, "additions": 607, "deletions": 522}, "files": [{"sha": "224f08d143c412b40c211d3bc73061a8b99f1c8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "patch": "@@ -1,8 +1,20 @@\n+2003-01-15  Hartmut Penner  <hpenner@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_safe_attr_type): New function.\n+\t(s390_use_dfa_pipeline_interface): New function, return true for z900.\n+\t(s390_issue_rate): New function.\n+\t(s390_agen_dep_p): New function.\n+\t(addr_generation_dependency_p): Use 's390_safe_attr_type'.\n+\t(s390_adjust_cost): Return 'cost' if new DFA is used.\n+\t(s390_adjust_priority): Delete function.\n+\t* config/s390/s390-protos.h: (s390_agen_dep_p): New prototype.\n+\t* config/s390/s390.md (atype attribute): Attribute 'atype' default\n+\tdetermined by 'op_type'.\n+\t(type attribute): Added more type attributes.\n+\t* config/s390/2064.md: New DFA description for z900 pipeline.\n+\t\n 2003-01-15  Alexandre Oliva  <aoliva@redhat.com>\n \n-\t* config/i386/i386.c (ix86_expand_vector_move): Validize constant\n-\tforced to memory.  Fixes PR bootstrap/9036.\n-\n \t* config/mips/mips.h (CRT_CALL_STATIC_FUNCTION): Define so as\n \tto set $gp before the call.\n "}, {"sha": "a4296c0a0718be8e41ff5128d5daf8463681809c", "filename": "gcc/config/s390/2064.md", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2Fconfig%2Fs390%2F2064.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2Fconfig%2Fs390%2F2064.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2F2064.md?ref=077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "patch": "@@ -0,0 +1,131 @@\n+;; Scheduling description for z900 (cpu 2064).\n+;;   Copyright (C) 2002 Free Software Foundation, Inc.\n+;;   Contributed by Hartmut Penner (hpenner@de.ibm.com) and\n+;;                  Ulrich Weigand (uweigand@de.ibm.com).\n+;;\n+;; This file is part of GNU CC.\n+;;\n+;; GNU CC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 2, or (at your option)\n+;; any later version.\n+;;\n+;; GNU CC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GNU CC; see the file COPYING.  If not, write to\n+;; the Free Software Foundation, 59 Temple Place - Suite 330,\n+;; Boston, MA 02111-1307, USA.\n+\n+;;\n+;; References:\n+;;   The microarchitecture of the IBM eServer z900 processor. \n+;;   E.M. Schwarz et al.\n+;;   IBM Journal of Research and Development Vol. 46 No 4/5, 2002.\n+;; \n+;;            z900 (cpu 2064) pipeline\n+;;     \n+;;                 dec\n+;;              --> | <---\n+;;  LA bypass  |  agen    |\n+;;             |    |     | \n+;;              --- c1    |  Load bypass\n+;;                  |     | \n+;;                  c2----\n+;;                  |\n+;;                  e1 \n+;;                  | \n+;;                  wr\n+\n+(define_automaton \"z_ipu\")\n+(define_cpu_unit \"z_e1\"   \"z_ipu\")\n+(define_cpu_unit \"z_wr\"   \"z_ipu\")\n+\n+\n+(define_insn_reservation \"z_la\" 1 \n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"type\" \"la\"))\n+  \"z_e1,z_wr\")\n+\n+(define_insn_reservation \"z_larl\" 1 \n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"type\" \"larl\"))\n+  \"z_e1,z_wr\")\n+\n+(define_insn_reservation \"z_load\" 1\n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"type\" \"load\"))\n+  \"z_e1,z_wr\")\n+\n+(define_insn_reservation \"z_store\" 1\n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"type\" \"store\"))\n+  \"z_e1,z_wr\")\n+\n+(define_insn_reservation \"z_call\" 5\n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"type\" \"jsr\"))\n+  \"z_e1*5,z_wr\")\n+\n+(define_insn_reservation \"z_o2\" 2\n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"type\" \"o2\"))\n+  \"z_e1*2,z_wr\")\n+\n+(define_insn_reservation \"z_o3\" 3\n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"type\" \"o3\"))\n+  \"z_e1*3,z_wr\")\n+\n+;\n+; Insn still not mentioned are check for\n+; the usage of the agen unit \n+;\n+\n+(define_insn_reservation \"z_int\" 1\n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"atype\" \"reg\"))\n+  \"z_e1,z_wr\")\n+\n+(define_insn_reservation \"z_agen\" 1\n+  (and (eq_attr \"cpu\" \"z900\")\n+       (eq_attr \"atype\" \"agen\"))\n+  \"z_e1,z_wr\")\n+\n+\n+;;\n+;; s390_agen_dep_p returns 1, if a register is set in the \n+;; first insn and used in the dependend insn to form a address.\n+;;\n+\n+;;\n+;; If a intruction uses a register to address memory, it needs\n+;; to be set 5 cycles in advance.\n+;; \n+\n+(define_bypass 5 \"z_int,z_agen\" \n+\t       \"z_agen,z_la,z_call,z_load,z_store\" \"s390_agen_dep_p\")\n+\n+;;\n+;; A load type instruction uses a bypass to feed the result back\t\n+;; to the address generation pipeline stage. \n+;;\n+\n+(define_bypass 2 \"z_load\"    \n+\t         \"z_agen,z_la,z_call,z_load,z_store\" \"s390_agen_dep_p\")\n+\n+;;\n+;; A load address type instruction uses a bypass to feed the \n+;; result back to the address generation pipeline stage. \n+;;\n+\n+(define_bypass 1 \"z_larl,z_la\" \n+\t         \"z_agen,z_la,z_call,z_load,z_store\" \"s390_agen_dep_p\")\n+\n+\n+\n+\n+"}, {"sha": "641680992b96b728bca682297e8b60c110e9b149", "filename": "gcc/config/s390/s390-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-protos.h?ref=077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "patch": "@@ -76,6 +76,8 @@ extern void s390_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n extern rtx s390_gen_rtx_const_DI PARAMS ((int, int));\n extern rtx s390_simplify_dwarf_addr PARAMS ((rtx));\n extern void s390_machine_dependent_reorg PARAMS ((rtx));\n+extern int s390_agen_dep_p PARAMS ((rtx, rtx));\n+\n #endif /* RTX_CODE */\n \n #ifdef TREE_CODE"}, {"sha": "c80bcc8c84627de7eba76b61965c785d83e58dce", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 76, "deletions": 75, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "patch": "@@ -51,13 +51,17 @@ Boston, MA 02111-1307, USA.  */\n #include \"optabs.h\"\n \n static bool s390_assemble_integer PARAMS ((rtx, unsigned int, int));\n-static int s390_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n-static int s390_adjust_priority PARAMS ((rtx, int));\n static void s390_select_rtx_section PARAMS ((enum machine_mode, rtx, \n \t\t\t\t\t     unsigned HOST_WIDE_INT));\n static void s390_encode_section_info PARAMS ((tree, int));\n static void s390_output_mi_thunk PARAMS ((FILE *, tree, HOST_WIDE_INT,\n \t\t\t\t\t  HOST_WIDE_INT, tree));\n+static enum attr_type s390_safe_attr_type PARAMS ((rtx));\n+\n+static int s390_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n+static int s390_issue_rate PARAMS ((void));\n+static int s390_use_dfa_pipeline_interface PARAMS ((void));\n+\n \n #undef  TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.word\\t\"\n@@ -75,12 +79,6 @@ static void s390_output_mi_thunk PARAMS ((FILE *, tree, HOST_WIDE_INT,\n #undef\tTARGET_ASM_SELECT_RTX_SECTION\n #define\tTARGET_ASM_SELECT_RTX_SECTION  s390_select_rtx_section\n \n-#undef  TARGET_SCHED_ADJUST_COST\n-#define TARGET_SCHED_ADJUST_COST s390_adjust_cost\n-\n-#undef  TARGET_SCHED_ADJUST_PRIORITY\n-#define TARGET_SCHED_ADJUST_PRIORITY s390_adjust_priority\n-\n #undef\tTARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO s390_encode_section_info\n \n@@ -89,6 +87,14 @@ static void s390_output_mi_thunk PARAMS ((FILE *, tree, HOST_WIDE_INT,\n #undef TARGET_ASM_CAN_OUTPUT_MI_THUNK\n #define TARGET_ASM_CAN_OUTPUT_MI_THUNK hook_bool_tree_hwi_hwi_tree_true\n \n+#undef  TARGET_SCHED_ADJUST_COST\n+#define TARGET_SCHED_ADJUST_COST s390_adjust_cost\n+#undef TARGET_SCHED_ISSUE_RATE\n+#define TARGET_SCHED_ISSUE_RATE s390_issue_rate\n+#undef TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE\n+#define TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE s390_use_dfa_pipeline_interface\n+\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n extern int reload_completed;\n@@ -936,6 +942,17 @@ const enum reg_class regclass_map[FIRST_PSEUDO_REGISTER] =\n   ADDR_REGS,    NO_REGS,   ADDR_REGS \n };\n \n+/* Return attribute type of insn.  */\n+\n+static enum attr_type\n+s390_safe_attr_type (insn)\n+     rtx insn;\n+{\n+  if (recog_memoized (insn) >= 0)\n+    return get_attr_type (insn);\n+  else\n+    return TYPE_NONE;\n+}\n \n /* Return true if OP a (const_int 0) operand.\n    OP is the current operation.\n@@ -2892,9 +2909,6 @@ s390_assemble_integer (x, size, aligned_p)\n   return default_assemble_integer (x, size, aligned_p);\n }\n \n-\n-#define DEBUG_SCHED 0\n-\n /* Returns true if register REGNO is used  for forming \n    a memory address in expression X.  */\n \n@@ -2946,6 +2960,9 @@ addr_generation_dependency_p (dep_rtx, insn)\n {\n   rtx target, pat;\n \n+  if (GET_CODE (dep_rtx) == INSN)\n+      dep_rtx = PATTERN (dep_rtx);\n+\n   if (GET_CODE (dep_rtx) == SET)\n     {\n       target = SET_DEST (dep_rtx);\n@@ -2958,7 +2975,7 @@ addr_generation_dependency_p (dep_rtx, insn)\n \t{\n \t  int regno = REGNO (target);\n \n-\t  if (get_attr_type (insn) == TYPE_LA)\n+\t  if (s390_safe_attr_type (insn) == TYPE_LA)\n \t    {\n \t      pat = PATTERN (insn);\n \t      if (GET_CODE (pat) == PARALLEL)\n@@ -2972,13 +2989,38 @@ addr_generation_dependency_p (dep_rtx, insn)\n \t      else\n \t\tabort();\n \t    }\n-\t  else if (get_attr_atype (insn) == ATYPE_MEM)\n+\t  else if (get_attr_atype (insn) == ATYPE_AGEN)\n \t    return reg_used_in_mem_p (regno, PATTERN (insn));\n \t}\n     }\n   return 0;\n }\n \n+/* Return 1, if dep_insn sets register used in insn in the agen unit.  */\n+\n+\n+int \n+s390_agen_dep_p(dep_insn, insn)\n+     rtx dep_insn;\n+     rtx insn;\n+{ \n+  rtx dep_rtx = PATTERN (dep_insn);\n+  int i;\n+  \n+  if (GET_CODE (dep_rtx) == SET  \n+      && addr_generation_dependency_p (dep_rtx, insn))\n+    return 1;\n+  else if (GET_CODE (dep_rtx) == PARALLEL)\n+    {\n+      for (i = 0; i < XVECLEN (dep_rtx, 0); i++)\n+\t{\n+\t  if (addr_generation_dependency_p (XVECEXP (dep_rtx, 0, i), insn))\n+\t    return 1;\n+\t}\n+    }\n+  return 0;\n+}\n+\n \n /* Return the modified cost of the dependency of instruction INSN\n    on instruction DEP_INSN through the link LINK.  COST is the \n@@ -3012,88 +3054,47 @@ s390_adjust_cost (insn, link, dep_insn, cost)\n   if (recog_memoized (insn) < 0 || recog_memoized (dep_insn) < 0)\n     return cost;\n \n+  /* DFA based scheduling checks address dependency in md file.  */\n+  if (s390_use_dfa_pipeline_interface ())\n+     return cost;\n+\n   dep_rtx = PATTERN (dep_insn);\n \n-  if (GET_CODE (dep_rtx) == SET)\n-    {\n-      if (addr_generation_dependency_p (dep_rtx, insn))\n-\t{\n-\t  cost += (get_attr_type (dep_insn) == TYPE_LA) ? 1 : 4;  \n-\t  if (DEBUG_SCHED)\n-\t    {\n-\t      fprintf (stderr, \"\\n\\nAddress dependency detected: cost %d\\n\",\n-\t\t       cost);\n-\t      debug_rtx (dep_insn);\n-\t      debug_rtx (insn);\n-\t    }\n-\t}\n-    }\n+  if (GET_CODE (dep_rtx) == SET \n+      && addr_generation_dependency_p (dep_rtx, insn))\n+    cost += (s390_safe_attr_type (dep_insn) == TYPE_LA) ? 1 : 4;  \n   else if (GET_CODE (dep_rtx) == PARALLEL)\n     {\n       for (i = 0; i < XVECLEN (dep_rtx, 0); i++)\n \t{\n-\t  if (addr_generation_dependency_p (XVECEXP (dep_rtx, 0, i),\n-\t\t\t\t\t    insn))\n-\t    {\n-\t      cost += (get_attr_type (dep_insn) == TYPE_LA) ? 1 : 4;  \n-\t      if (DEBUG_SCHED)\n-\t\t{\n-\t\t  fprintf (stderr, \"\\n\\nAddress dependency detected: cost %d\\n\"\n-\t\t\t   ,cost);\n-\t\t  debug_rtx (dep_insn);\n-\t\t  debug_rtx (insn);\n-\t\t}\n-\t    }\n+\t  if (addr_generation_dependency_p (XVECEXP (dep_rtx, 0, i), insn))\n+\t    cost += (s390_safe_attr_type (dep_insn) == TYPE_LA) ? 1 : 4;  \n \t}\n     }\n \n   return cost;\n }\n \n+/* The number of instructions that can be issued per cycle.  */\n \n-/* A C statement (sans semicolon) to update the integer scheduling priority\n-   INSN_PRIORITY (INSN).  Reduce the priority to execute the INSN earlier,\n-   increase the priority to execute INSN later.  Do not define this macro if\n-   you do not need to adjust the scheduling priorities of insns. \n+static int\n+s390_issue_rate ()\n+{\n+  return 1;\n+}\n \n-   A LA instruction maybe scheduled later, since the pipeline bypasses the\n-   calculated value.  */\n+/* If the following function returns TRUE, we will use the the DFA\n+   insn scheduler.  */\n \n static int\n-s390_adjust_priority (insn, priority)\n-     rtx insn ATTRIBUTE_UNUSED;\n-     int priority;\n+s390_use_dfa_pipeline_interface ()\n {\n-  if (! INSN_P (insn))\n-    return priority;\n+  if (s390_cpu == PROCESSOR_2064_Z900)\n+    return 1;\n+  return 0;\n \n-  if (GET_CODE (PATTERN (insn)) == USE \n-      || GET_CODE (PATTERN (insn)) == CLOBBER)\n-    return priority;\n-  \n-  switch (get_attr_type (insn))\n-    {\n-    default:\n-      break;\n-      \n-    case TYPE_LA:\n-      if (priority >= 0 && priority < 0x01000000)\n-\tpriority <<= 3;\n-      break;\n-    case TYPE_LM:\n-      /* LM in epilogue should never be scheduled. This\n-\t is due to literal access done in function body.\n-\t The usage of register 13 is not mentioned explicitly,\n-\t leading to scheduling 'LM' accross this instructions.  \n-      */ \n-      priority = 0x7fffffff;\n-      break;\n-    }\n-  \n-  return priority;\n }\n \n-\n /* Split all branches that exceed the maximum distance.  \n    Returns true if this created a new literal pool entry.  \n "}, {"sha": "480d152e59188058973591b50ef6522c3933515d", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 383, "deletions": 444, "changes": 827, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077dab3b42f3fa59a1bf227a7a2041adab8ef3f5/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=077dab3b42f3fa59a1bf227a7a2041adab8ef3f5", "patch": "@@ -3,7 +3,7 @@\n ;;  Contributed by Hartmut Penner (hpenner@de.ibm.com) and\n ;;                 Ulrich Weigand (uweigand@de.ibm.com).\n ;; This file is part of GNU CC.\n-\n+ \n ;; GNU CC is free software; you can redistribute it and/or modify\n ;; it under the terms of the GNU General Public License as published by\n ;; the Free Software Foundation; either version 2, or (at your option)\n@@ -53,15 +53,41 @@\n ;; Define an insn type attribute.  This is used in function unit delay\n ;; computations.\n \n-(define_attr \"type\" \"none,integer,load,lr,la,lm,stm,cs,vs,store,imul,lmul,fmul,idiv,ldiv,fdiv,branch,jsr,other,o2,o3\"\n-  (const_string \"integer\"))\n+(define_attr \"type\" \"none,integer,load,lr,la,larl,lm,stm,\n+\t             cs,vs,store,imul,idiv,\n+\t\t     branch,jsr,fsimpd,fsimps,\n+\t\t     floadd,floads,fstored, fstores,\n+\t\t     fmuld,fmuls,fdivd,fdivs,\n+\t\t     ftoi,itof,fsqrtd,fsqrts,\n+                     other,o2,o3\"\n+  (const_string \"integer\")) \n \n-;; Insn are devide in two classes:\n-;;   mem: Insn accessing memory\n-;;   reg: Insn operands all in registers\n+;; Operand type. Used to default length attribute values\n \n-(define_attr \"atype\" \"reg,mem\"\n-  (const_string \"reg\"))\n+(define_attr \"op_type\"\n+  \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE\"\n+  (const_string \"RX\"))\n+\n+;; Insn are devide in two classes:\n+;;   agen: Insn using agen\n+;;   reg: Insn not using agen\n+\n+(define_attr \"atype\" \"agen,reg\"\n+(cond [ (eq_attr \"op_type\" \"E\")    (const_string \"reg\")\n+         (eq_attr \"op_type\" \"RR\")  (const_string \"reg\")\n+         (eq_attr \"op_type\" \"RX\")  (const_string \"agen\")\n+         (eq_attr \"op_type\" \"RI\")  (const_string \"reg\")\n+         (eq_attr \"op_type\" \"RRE\") (const_string \"reg\")\n+         (eq_attr \"op_type\" \"RS\")  (const_string \"agen\")\n+         (eq_attr \"op_type\" \"RSI\") (const_string \"agen\")\n+         (eq_attr \"op_type\" \"S\")   (const_string \"agen\")\n+         (eq_attr \"op_type\" \"SI\")  (const_string \"agen\")\n+         (eq_attr \"op_type\" \"SS\")  (const_string \"agen\")\n+         (eq_attr \"op_type\" \"SSE\") (const_string \"agen\")\n+         (eq_attr \"op_type\" \"RXE\") (const_string \"agen\")\n+         (eq_attr \"op_type\" \"RSE\") (const_string \"agen\")\n+         (eq_attr \"op_type\" \"RIL\") (const_string \"agen\")]\n+  (const_string \"reg\")))\n \n ;; Generic pipeline function unit.  \n \n@@ -71,18 +97,42 @@\n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"integer\") 1 1)\n \n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fsimpd\") 1 1)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fsimps\") 1 1)\n+\n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"load\") 1 1)\n \n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"floadd\") 1 1)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"floads\") 1 1)\n+\n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"la\") 1 1)\n \n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"larl\") 1 1)\n+\n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"lr\") 1 1)\n \n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"branch\") 1 1)\n+\n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"store\") 1 1)\n \n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fstored\") 1 1)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fstores\") 1 1)\n+\n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"lm\") 2 2)\n \n@@ -102,13 +152,31 @@\n   (eq_attr \"type\" \"imul\") 7 7)\n \n (define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fmul\") 6 6)\n+  (eq_attr \"type\" \"fmuld\") 6 6)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fmuls\") 6 6)\n \n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"idiv\") 33 33)\n \n (define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fdiv\") 33 33)\n+  (eq_attr \"type\" \"fdivd\") 33 33)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fdivs\") 33 33)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fsqrtd\") 30 30)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"fsqrts\") 30 30)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"ftoi\") 2 2)\n+\n+(define_function_unit \"integer\" 1 0\n+  (eq_attr \"type\" \"itof\") 2 2)\n \n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"o2\") 2 2)\n@@ -119,11 +187,9 @@\n (define_function_unit \"integer\" 1 0\n   (eq_attr \"type\" \"other\") 5 5)\n \n-;; Operand type. Used to default length attribute values\n+;; Pipeline description for z900\n \n-(define_attr \"op_type\"\n-  \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE\"\n-  (const_string \"RX\"))\n+(include \"2064.md\")\n \n ;; Length in bytes.\n \n@@ -135,7 +201,6 @@\n          (eq_attr \"op_type\" \"RRE\") (const_int 4)\n          (eq_attr \"op_type\" \"RS\")  (const_int 4)\n          (eq_attr \"op_type\" \"RSI\") (const_int 4)\n-         (eq_attr \"op_type\" \"RX\")  (const_int 4)\n          (eq_attr \"op_type\" \"S\")   (const_int 4)\n          (eq_attr \"op_type\" \"SI\")  (const_int 4)\n          (eq_attr \"op_type\" \"SS\")  (const_int 6)\n@@ -298,8 +363,7 @@\n   operands[2] = GEN_INT (block << shift);\n   return \\\"tm\\\\t%0,%b2\\\";\n }\"\n-  [(set_attr \"op_type\" \"SI\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SI\")])\n \n ; Test-under-Mask instructions\n \n@@ -320,8 +384,7 @@\n \t\t\t     plus_constant (XEXP (operands[0], 0), part));\n   return \\\"tm\\\\t%0,%b1\\\";\n }\"\n-  [(set_attr \"op_type\" \"SI\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SI\")])\n \n (define_insn \"*tmsi_mem\"\n   [(set (reg 33)\n@@ -339,8 +402,7 @@\n \t\t\t     plus_constant (XEXP (operands[0], 0), part));\n   return \\\"tm\\\\t%0,%b1\\\";\n }\"\n-  [(set_attr \"op_type\" \"SI\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SI\")])\n \n (define_insn \"*tmhi_mem\"\n   [(set (reg 33)\n@@ -358,8 +420,7 @@\n \t\t\t     plus_constant (XEXP (operands[0], 0), part));\n   return \\\"tm\\\\t%0,%b1\\\";\n }\"\n-  [(set_attr \"op_type\" \"SI\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SI\")])\n \n (define_insn \"*tmqi_mem\"\n   [(set (reg 33)\n@@ -368,8 +429,7 @@\n                  (match_operand:SI 2 \"immediate_operand\" \"n\")))]\n   \"s390_match_ccmode (insn, s390_tm_ccmode (operands[1], operands[2], 0))\"\n   \"tm\\\\t%0,%b1\"\n-  [(set_attr \"op_type\" \"SI\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SI\")])\n \n (define_insn \"*tmdi_reg\"\n   [(set (reg 33)\n@@ -470,7 +530,9 @@\n                  (match_operand:DI 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && !TARGET_64BIT\"\n   \"srda\\\\t%0,0\"\n-  [(set_attr \"op_type\" \"RS\")])\n+  [(set_attr \"op_type\" \"RS\")\n+   (set_attr \"atype\"   \"reg\")])\n+\n \n (define_insn \"*tstsi\"\n   [(set (reg 33)\n@@ -482,8 +544,7 @@\n   \"@\n    ltr\\\\t%2,%0\n    icm\\\\t%2,15,%0\"\n-  [(set_attr \"op_type\" \"RR,RS\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+  [(set_attr \"op_type\" \"RR,RS\")])\n \n (define_insn \"*tstsi_cconly\"\n   [(set (reg 33)\n@@ -494,8 +555,7 @@\n   \"@\n    ltr\\\\t%0,%0\n    icm\\\\t%2,15,%0\"\n-  [(set_attr \"op_type\" \"RR,RS\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+  [(set_attr \"op_type\" \"RR,RS\")])\n \n (define_insn \"*tstsi_cconly2\"\n   [(set (reg 33)\n@@ -515,8 +575,7 @@\n   \"@\n    icm\\\\t%2,3,%0\n    tml\\\\t%0,65535\"\n-  [(set_attr \"op_type\" \"RS,RI\")\n-   (set_attr \"atype\"   \"mem,reg\")])\n+  [(set_attr \"op_type\" \"RS,RI\")])\n \n (define_insn \"*tsthiCCT_cconly\"\n   [(set (reg 33)\n@@ -527,8 +586,7 @@\n   \"@\n    icm\\\\t%2,3,%0\n    tml\\\\t%0,65535\"\n-  [(set_attr \"op_type\" \"RS,RI\")\n-   (set_attr \"atype\"   \"mem,reg\")])\n+  [(set_attr \"op_type\" \"RS,RI\")])\n \n (define_insn \"*tsthi\"\n   [(set (reg 33)\n@@ -538,8 +596,7 @@\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,3,%0\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn \"*tsthi_cconly\"\n   [(set (reg 33)\n@@ -548,8 +605,7 @@\n    (clobber (match_scratch:HI 2 \"=d\"))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,3,%0\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn \"*tstqiCCT\"\n   [(set (reg 33)\n@@ -561,8 +617,7 @@\n   \"@\n    icm\\\\t%2,1,%0\n    tml\\\\t%0,255\"\n-  [(set_attr \"op_type\" \"RS,RI\")\n-   (set_attr \"atype\"   \"mem,reg\")])\n+  [(set_attr \"op_type\" \"RS,RI\")])\n \n (define_insn \"*tstqiCCT_cconly\"\n   [(set (reg 33)\n@@ -572,8 +627,7 @@\n   \"@\n    cli\\\\t%0,0\n    tml\\\\t%0,255\"\n-  [(set_attr \"op_type\" \"SI,RI\")\n-   (set_attr \"atype\"   \"mem,reg\")])\n+  [(set_attr \"op_type\" \"SI,RI\")])\n \n (define_insn \"*tstqi\"\n   [(set (reg 33)\n@@ -583,8 +637,7 @@\n         (match_dup 0))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,1,%0\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn \"*tstqi_cconly\"\n   [(set (reg 33)\n@@ -593,9 +646,7 @@\n    (clobber (match_scratch:QI 2 \"=d\"))]\n   \"s390_match_ccmode(insn, CCSmode)\"\n   \"icm\\\\t%2,1,%0\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n-\n+  [(set_attr \"op_type\" \"RS\")])\n \n ; Compare (signed) instructions\n \n@@ -607,8 +658,7 @@\n   \"@\n    cgfr\\\\t%0,%1\n    cgf\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+  [(set_attr \"op_type\" \"RRE,RXE\")])\n \n (define_insn \"*cmpdi_ccs\"\n   [(set (reg 33)\n@@ -619,17 +669,15 @@\n    cgr\\\\t%0,%1\n    cghi\\\\t%0,%c1\n    cg\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RI,RXE\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")])\n+  [(set_attr \"op_type\" \"RRE,RI,RXE\")])\n    \n (define_insn \"*cmpsi_ccs_sign\"\n   [(set (reg 33)\n         (compare (sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"m\"))\n                  (match_operand:SI 0 \"register_operand\" \"d\")))]\n   \"s390_match_ccmode(insn, CCSRmode)\"\n   \"ch\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RX\")])\n \n (define_insn \"*cmpsi_ccs\"\n   [(set (reg 33)\n@@ -640,8 +688,7 @@\n    cr\\\\t%0,%1\n    chi\\\\t%0,%c1\n    c\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RR,RI,RX\")\n-   (set_attr \"atype\"   \"reg,reg,mem\")])\n+  [(set_attr \"op_type\" \"RR,RI,RX\")])\n    \n \n ; Compare (unsigned) instructions\n@@ -654,8 +701,7 @@\n   \"@\n    clgfr\\\\t%0,%1\n    clgf\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+  [(set_attr \"op_type\" \"RRE,RXE\")])\n \n (define_insn \"*cmpdi_ccu\"\n   [(set (reg 33)\n@@ -665,8 +711,7 @@\n   \"@\n    clgr\\\\t%0,%1\n    clg\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+  [(set_attr \"op_type\" \"RRE,RXE\")])\n \n (define_insn \"*cmpsi_ccu\"\n   [(set (reg 33)\n@@ -676,71 +721,63 @@\n   \"@\n    clr\\\\t%0,%1\n    cl\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RR,RX\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+  [(set_attr \"op_type\" \"RR,RX\")])\n \n (define_insn \"*cmphi_ccu\"\n   [(set (reg 33)\n         (compare (match_operand:HI 0 \"register_operand\" \"d\")\n                  (match_operand:HI 1 \"s_imm_operand\" \"Q\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clm\\\\t%0,3,%1\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn \"*cmpqi_ccu\"\n   [(set (reg 33)\n         (compare (match_operand:QI 0 \"register_operand\" \"d\")\n                  (match_operand:QI 1 \"s_imm_operand\" \"Q\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clm\\\\t%0,1,%1\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn \"*cli\"\n   [(set (reg 33)\n         (compare (match_operand:QI 0 \"memory_operand\" \"Q\")\n                  (match_operand:QI 1 \"immediate_operand\" \"n\")))]\n   \"s390_match_ccmode (insn, CCUmode)\"\n   \"cli\\\\t%0,%b1\"\n-  [(set_attr \"op_type\" \"SI\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SI\")])\n \n (define_insn \"*cmpdi_ccu_mem\"\n   [(set (reg 33)\n         (compare (match_operand:DI 0 \"s_operand\" \"Q\")\n                  (match_operand:DI 1 \"s_imm_operand\" \"Q\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n (define_insn \"*cmpsi_ccu_mem\"\n   [(set (reg 33)\n         (compare (match_operand:SI 0 \"s_operand\" \"Q\")\n                  (match_operand:SI 1 \"s_imm_operand\" \"Q\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clc\\\\t%O0(4,%R0),%1\"\n-   [(set_attr \"op_type\" \"SS\")\n-    (set_attr \"atype\"   \"mem\")])\n+   [(set_attr \"op_type\" \"SS\")])\n \n (define_insn \"*cmphi_ccu_mem\"\n   [(set (reg 33)\n         (compare (match_operand:HI 0 \"s_operand\" \"Q\")\n                  (match_operand:HI 1 \"s_imm_operand\" \"Q\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n (define_insn \"*cmpqi_ccu_mem\"\n   [(set (reg 33)\n         (compare (match_operand:QI 0 \"s_operand\" \"Q\")\n                  (match_operand:QI 1 \"s_imm_operand\" \"Q\")))]\n   \"s390_match_ccmode(insn, CCUmode)\"\n   \"clc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n \n ; DF instructions\n@@ -751,15 +788,17 @@\n                  (match_operand:DF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ltdbr\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RRE\")])\n+   [(set_attr \"op_type\" \"RRE\")\n+    (set_attr \"type\"  \"fsimpd\")])\n \n (define_insn \"*cmpdf_ccs_0_ibm\"\n   [(set (reg 33)\n         (compare (match_operand:DF 0 \"register_operand\" \"f\")\n                  (match_operand:DF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"ltdr\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")])\n+   [(set_attr \"op_type\" \"RR\")\n+    (set_attr \"type\"  \"fsimpd\")])\n \n (define_insn \"*cmpdf_ccs\"\n   [(set (reg 33)\n@@ -770,7 +809,7 @@\n    cdbr\\\\t%0,%1\n    cdb\\\\t%0,%1\"\n    [(set_attr \"op_type\" \"RRE,RXE\")\n-    (set_attr \"atype\"   \"reg,mem\")])  \n+    (set_attr \"type\"  \"fsimpd\")])\n \n (define_insn \"*cmpdf_ccs_ibm\"\n   [(set (reg 33)\n@@ -781,7 +820,7 @@\n    cdr\\\\t%0,%1\n    cd\\\\t%0,%1\"\n    [(set_attr \"op_type\" \"RR,RX\")\n-    (set_attr \"atype\"   \"reg,mem\")])  \n+    (set_attr \"type\"  \"fsimpd\")])\n \n \n ; SF instructions\n@@ -792,15 +831,17 @@\n                  (match_operand:SF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ltebr\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RRE\")])\n+   [(set_attr \"op_type\" \"RRE\")\n+    (set_attr \"type\"  \"fsimps\")])\n \n (define_insn \"*cmpsf_ccs_0_ibm\"\n   [(set (reg 33)\n         (compare (match_operand:SF 0 \"register_operand\" \"f\")\n                  (match_operand:SF 1 \"const0_operand\" \"\")))]\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lter\\\\t%0,%0\"\n-   [(set_attr \"op_type\" \"RR\")])\n+   [(set_attr \"op_type\" \"RR\")\n+    (set_attr \"type\"  \"fsimps\")])\n \n (define_insn \"*cmpsf_ccs\"\n   [(set (reg 33)\n@@ -810,8 +851,8 @@\n   \"@\n    cebr\\\\t%0,%1\n    ceb\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+   [(set_attr \"op_type\" \"RRE,RXE\")\n+    (set_attr \"type\"  \"fsimps\")])\n \n (define_insn \"*cmpsf_ccs\"\n   [(set (reg 33)\n@@ -821,8 +862,8 @@\n   \"@\n    cer\\\\t%0,%1\n    ce\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RR,RX\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+   [(set_attr \"op_type\" \"RR,RX\")\n+    (set_attr \"type\"  \"fsimps\")])\n \n \n ;;\n@@ -843,8 +884,7 @@\n    #\n    #\n    mvc\\\\t%O0(16,%R0),%1\"\n-  [(set_attr \"op_type\" \"RSE,RSE,NN,NN,SS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RSE,RSE,NN,NN,SS\")])\n \n (define_split\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n@@ -928,8 +968,7 @@\n    && CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'K')\n    && !FP_REG_P (operands[0])\"\n   \"lghi\\\\t%0,%h1\"\n-  [(set_attr \"op_type\" \"RI\")\n-   (set_attr \"atype\"   \"reg\")])\n+  [(set_attr \"op_type\" \"RI\")])\n \n (define_insn \"*movdi_lli\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -950,8 +989,7 @@\n       default: abort ();\n     }\n }\"\n-  [(set_attr \"op_type\" \"RI\")\n-   (set_attr \"atype\"   \"reg\")])\n+  [(set_attr \"op_type\" \"RI\")])\n \n (define_insn \"*movdi_larl\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -960,8 +998,7 @@\n    && !FP_REG_P (operands[0])\"\n   \"larl\\\\t%0,%1\"\n    [(set_attr \"op_type\" \"RIL\")\n-    (set_attr \"atype\"   \"reg\")\n-    (set_attr \"type\"    \"la\")])\n+    (set_attr \"type\"    \"larl\")])\n \n (define_insn \"*movdi_64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,m,!*f,!*f,!m,Q\")\n@@ -976,7 +1013,7 @@\n    std\\\\t%1,%0\n    mvc\\\\t%O0(8,%R0),%1\"\n   [(set_attr \"op_type\" \"RRE,RXE,RXE,RR,RX,RX,SS\")\n-   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n+   (set_attr \"type\" \"lr,load,store,floadd,floadd,fstored,cs\")])\n \n (define_insn \"*movdi_31\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,Q,d,m,!*f,!*f,!m,Q\")\n@@ -992,7 +1029,7 @@\n    std\\\\t%1,%0\n    mvc\\\\t%O0(8,%R0),%1\"\n   [(set_attr \"op_type\" \"RS,RS,NN,NN,RR,RX,RX,SS\")\n-   (set_attr \"atype\"   \"mem,mem,*,*,reg,mem,mem,mem\")])\n+   (set_attr \"type\" \"lm,stm,*,*,floadd,floadd,fstored,cs\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n@@ -1138,7 +1175,7 @@\n    ste\\\\t%1,%0\n    mvc\\\\t%O0(4,%R0),%1\"\n   [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX,SS\")\n-   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n+   (set_attr \"type\" \"lr,load,store,floads,floads,fstores,cs\")])\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -1165,8 +1202,7 @@\n    lh\\\\t%0,%1\n    sth\\\\t%1,%0\n    mvc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RI,RX,RX,SS\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")])\n+  [(set_attr \"op_type\" \"RR,RI,RX,RX,SS\")])\n \n (define_peephole2\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n@@ -1194,8 +1230,7 @@\n    mvi\\\\t%0,%b1\n    mvc\\\\t%O0(1,%R0),%1\"\n   [(set_attr \"op_type\" \"RR,RI,RXE,RX,SI,SS\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem,mem,mem\")])\n-\n+   (set_attr \"type\" \"lr,*,*,store,store,cs\")])\n \n (define_insn \"movqi\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q,Q\")\n@@ -1208,8 +1243,7 @@\n    stc\\\\t%1,%0\n    mvi\\\\t%0,%b1\n    mvc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\" \"RR,RI,RX,RX,SI,SS\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem,mem,mem\")])\n+  [(set_attr \"op_type\" \"RR,RI,RX,RX,SI,SS\")])\n \n (define_peephole2\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n@@ -1230,8 +1264,7 @@\n                          (match_operand:QI 1 \"memory_operand\" \"m\"))]\n   \"\"\n   \"ic\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"RX\")])\n \n ;\n ; movstricthi instruction pattern(s).\n@@ -1243,8 +1276,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"icm\\\\t%0,3,%1\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n \n ;\n@@ -1259,7 +1291,7 @@\n    lr\\\\t%0,%1\n    l\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR,RS\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+   (set_attr \"type\" \"lr,load\")])\n \n \n ;\n@@ -1292,7 +1324,7 @@\n    stg\\\\t%1,%0\n    mvc\\\\t%O0(8,%R0),%1\"\n   [(set_attr \"op_type\" \"RR,RX,RX,RRE,RXE,RXE,SS\")\n-   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n+   (set_attr \"type\" \"floadd,floadd,fstored,lr,load,store,cs\")])\n \n (define_insn \"*movdf_31\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,Q,d,m,Q\")\n@@ -1308,7 +1340,7 @@\n    #\n    mvc\\\\t%O0(8,%R0),%1\"\n   [(set_attr \"op_type\" \"RR,RX,RX,RS,RS,NN,NN,SS\")\n-   (set_attr \"atype\"   \"reg,mem,mem,mem,mem,*,*,mem\")])\n+   (set_attr \"type\" \"floadd,floadd,fstored,lm,stm,*,*,cs\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n@@ -1392,7 +1424,7 @@\n    st\\\\t%1,%0\n    mvc\\\\t%O0(4,%R0),%1\"\n   [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX,SS\")\n-   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n+   (set_attr \"type\" \"floads,floads,fstores,lr,load,store,cs\")])\n \n ;\n ; load_multiple pattern(s).\n@@ -1474,7 +1506,6 @@\n     return \\\"lmg\\\\t%1,%0,%2\\\";\n }\"\n    [(set_attr \"op_type\" \"RXE\")\n-    (set_attr \"atype\"   \"mem\")\n     (set_attr \"type\"    \"lm\")])\n \n (define_insn \"*load_multiple_si\"\n@@ -1493,7 +1524,6 @@\n     return \\\"lm\\\\t%1,%0,%2\\\";\n }\"\n    [(set_attr \"op_type\" \"RXE\")\n-    (set_attr \"atype\"   \"mem\")\n     (set_attr \"type\"    \"lm\")])\n \n ;\n@@ -1578,7 +1608,6 @@\n     return \\\"stmg\\\\t%2,%0,%1\\\";\n }\"\n    [(set_attr \"op_type\" \"RXE\")\n-    (set_attr \"atype\"   \"mem\")\n     (set_attr \"type\"    \"stm\")])\n \n \n@@ -1598,7 +1627,6 @@\n     return \\\"stm\\\\t%2,%0,%1\\\";\n }\"\n    [(set_attr \"op_type\" \"RXE\")\n-    (set_attr \"atype\"   \"mem\")\n     (set_attr \"type\"    \"stm\")])\n \n ;;\n@@ -1652,7 +1680,7 @@\n }\"\n   [(set_attr \"op_type\" \"SS,NN\")\n    (set_attr \"type\"    \"cs,cs\")\n-   (set_attr \"atype\"   \"mem,mem\")\n+   (set_attr \"atype\"   \"*,agen\")\n    (set_attr \"length\"  \"*,14\")])\n \n (define_insn \"movstr_short_31\"\n@@ -1679,7 +1707,7 @@\n }\"\n   [(set_attr \"op_type\" \"SS,NN\")\n    (set_attr \"type\"    \"cs,cs\")\n-   (set_attr \"atype\"   \"mem,mem\")\n+   (set_attr \"atype\"   \"*,agen\")\n    (set_attr \"length\"  \"*,14\")])\n \n ; Move a block of arbitrary length.\n@@ -1700,7 +1728,6 @@\n   \"mvcle\\\\t%0,%1,0\\;jo\\\\t.-4\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"type\"    \"vs\")\n-   (set_attr \"atype\"   \"mem\")\n    (set_attr \"length\"  \"8\")])\n \n (define_insn \"movstr_long_31\"\n@@ -1719,7 +1746,6 @@\n   \"mvcle\\\\t%0,%1,0\\;jo\\\\t.-4\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"type\"    \"vs\")\n-   (set_attr \"atype\"   \"mem\")\n    (set_attr \"length\"  \"8\")])\n \n ;\n@@ -1770,7 +1796,7 @@\n }\"\n   [(set_attr \"op_type\" \"SS,NN\")\n    (set_attr \"type\"    \"cs,cs\")\n-   (set_attr \"atype\"   \"mem,mem\")\n+   (set_attr \"atype\"   \"*,agen\")\n    (set_attr \"length\"  \"*,14\")])\n \n (define_insn \"clrstr_short_31\"\n@@ -1798,7 +1824,7 @@\n }\"\n   [(set_attr \"op_type\" \"SS,NN\")\n    (set_attr \"type\"    \"cs,cs\")\n-   (set_attr \"atype\"   \"mem,mem\")\n+   (set_attr \"atype\"   \"*,agen\")\n    (set_attr \"length\"  \"*,14\")])\n \n ; Clear a block of arbitrary length.\n@@ -1815,7 +1841,6 @@\n   \"TARGET_64BIT\"\n   \"mvcle\\\\t%0,%1,0\\;jo\\\\t.-4\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"atype\"   \"mem\")\n    (set_attr \"type\"    \"vs\")\n    (set_attr \"length\"  \"8\")])\n \n@@ -1831,7 +1856,6 @@\n   \"!TARGET_64BIT\"\n   \"mvcle\\\\t%0,%1,0\\;jo\\\\t.-4\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"atype\"   \"mem\")\n    (set_attr \"type\"    \"vs\")\n    (set_attr \"length\"  \"8\")])\n \n@@ -1887,7 +1911,7 @@\n }\"\n   [(set_attr \"op_type\" \"SS,NN\")\n    (set_attr \"type\"    \"cs,cs\")\n-   (set_attr \"atype\"   \"mem,mem\")\n+   (set_attr \"atype\"   \"*,agen\")\n    (set_attr \"length\"  \"*,14\")])\n \n (define_insn \"cmpstr_short_31\"\n@@ -1915,7 +1939,7 @@\n }\"\n   [(set_attr \"op_type\" \"SS,NN\")\n    (set_attr \"type\"    \"cs,cs\")\n-   (set_attr \"atype\"   \"mem,mem\")\n+   (set_attr \"atype\"   \"*,agen\")\n    (set_attr \"length\"  \"*,14\")])\n \n ; Compare a block of arbitrary length.\n@@ -1931,7 +1955,6 @@\n   \"TARGET_64BIT\"\n   \"clcl\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"atype\"   \"mem\")\n    (set_attr \"type\"    \"vs\")])\n \n (define_insn \"cmpstr_long_31\"\n@@ -1945,7 +1968,6 @@\n   \"!TARGET_64BIT\"\n   \"clcl\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"atype\"   \"mem\")\n    (set_attr \"type\"    \"vs\")])\n \n ; Convert condition code to integer in range (-1, 0, 1)\n@@ -1964,7 +1986,6 @@\n }\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"length\"  \"16\")\n-   (set_attr \"atype\"   \"reg\")\n    (set_attr \"type\"    \"other\")])\n \n (define_insn \"cmpint_di\"\n@@ -1981,7 +2002,6 @@\n }\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"length\"  \"22\")\n-   (set_attr \"atype\"   \"reg\")\n    (set_attr \"type\"    \"other\")])\n \n \n@@ -1995,35 +2015,31 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"icm\\\\t%0,8,%1\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn \"*sethighhisi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (unspec:SI [(match_operand:HI 1 \"s_operand\" \"Q\")] 10))\n    (clobber (reg:CC 33))]\n   \"\"\n   \"icm\\\\t%0,12,%1\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn \"*sethighqidi_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (unspec:DI [(match_operand:QI 1 \"s_operand\" \"Q\")] 10))\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"icmh\\\\t%0,8,%1\"\n-  [(set_attr \"op_type\" \"RSE\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RSE\")])\n \n (define_insn \"*sethighqidi_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (unspec:DI [(match_operand:QI 1 \"s_operand\" \"Q\")] 10))\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n   \"icm\\\\t%0,8,%1\"\n-  [(set_attr \"op_type\" \"RS\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RS\")])\n \n (define_insn_and_split \"*extractqi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -2045,7 +2061,7 @@\n   operands[1] = change_address (operands[1], QImode, 0);\n }\"\n   [(set_attr \"type\"    \"o2\")\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"atype\"   \"agen\")])\n \n (define_insn_and_split \"*extracthi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -2067,7 +2083,7 @@\n   operands[1] = change_address (operands[1], HImode, 0);\n }\"\n   [(set_attr \"type\"    \"o2\")\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"atype\"   \"agen\")])\n \n ;\n ; extendsidi2 instruction pattern(s).\n@@ -2097,8 +2113,7 @@\n   \"@\n    lgfr\\\\t%0,%1\n    lgf\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+  [(set_attr \"op_type\" \"RRE,RXE\")])\n \n ;\n ; extendhidi2 instruction pattern(s).\n@@ -2132,8 +2147,7 @@\n         (sign_extend:DI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"lgh\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RXE\")])\n \n ;\n ; extendqidi2 instruction pattern(s).\n@@ -2196,8 +2210,7 @@\n         (sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n   \"\"\n   \"lh\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RX\")])\n \n ;\n ; extendqisi2 instruction pattern(s).\n@@ -2260,8 +2273,7 @@\n   \"@\n    llgfr\\\\t%0,%1\n    llgf\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem\")])\n+  [(set_attr \"op_type\" \"RRE,RXE\")])\n \n ;\n ; zero_extendhidi2 instruction pattern(s).\n@@ -2295,8 +2307,7 @@\n         (zero_extend:DI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgh\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RXE\")])\n \n ;\n ; zero_extendqidi2 instruction pattern(s)\n@@ -2330,8 +2341,7 @@\n         (zero_extend:DI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgc\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RXE\")])\n \n ;\n ; zero_extendhisi2 instruction pattern(s).\n@@ -2354,8 +2364,7 @@\n         (zero_extend:SI (match_operand:HI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgh\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RXE\")])\n \n (define_insn_and_split \"*zero_extendhisi2_31\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n@@ -2370,7 +2379,7 @@\n      (clobber (reg:CC 33))])]\n   \"operands[2] = gen_lowpart (HImode, operands[0]);\"\n   [(set_attr \"type\" \"o2\")\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"atype\" \"agen\")])\n  \n ;\n ; zero_extendqisi2 instruction pattern(s).\n@@ -2393,8 +2402,7 @@\n         (zero_extend:SI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgc\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RXE\")])\n \n (define_insn_and_split \"*zero_extendqisi2_31\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n@@ -2406,7 +2414,7 @@\n    (set (strict_low_part (match_dup 2)) (match_dup 1))]\n   \"operands[2] = gen_lowpart (QImode, operands[0]);\"\n   [(set_attr \"type\" \"o2\")\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"atype\" \"agen\")])\n  \n ;\n ; zero_extendqihi2 instruction pattern(s).\n@@ -2429,8 +2437,7 @@\n         (zero_extend:HI (match_operand:QI 1 \"memory_operand\" \"m\")))]\n   \"TARGET_64BIT\"\n   \"llgc\\\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RXE\")\n-   (set_attr \"atype\"   \"mem\")])\n+  [(set_attr \"op_type\" \"RXE\")])\n \n (define_insn_and_split \"*zero_extendqihi2_31\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=&d\")\n@@ -2442,7 +2449,7 @@\n    (set (strict_low_part (match_dup 2)) (match_dup 1))]\n   \"operands[2] = gen_lowpart (QImode, operands[0]);\"\n   [(set_attr \"type\" \"o2\")\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"atype\" \"agen\")])\n \n \n ;\n@@ -2495,7 +2502,7 @@\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cgdbr\\\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"other\")])\n+   (set_attr \"type\"    \"ftoi\")])\n \n ;\n ; fixuns_truncdfsi2 and fix_truncdfsi2 instruction pattern(s).\n@@ -2582,7 +2589,8 @@\n    return \\\"l\\\\t%0,%N4\\\";\n }\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"other\")\n+   (set_attr \"type\"    \"ftoi\")\n+   (set_attr \"atype\"   \"agen\")\n    (set_attr \"length\"  \"20\")])\n \n ;\n@@ -2636,7 +2644,7 @@\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cgebr\\\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"other\")])\n+   (set_attr \"type\"    \"ftoi\")])\n \n ;\n ; fixuns_truncsfsi2 and fix_truncsfsi2 instruction pattern(s).\n@@ -2699,7 +2707,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cfebr\\\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"other\")])\n+   (set_attr \"type\"    \"ftoi\")])\n \n ;\n ; floatdidf2 instruction pattern(s).\n@@ -2725,7 +2733,7 @@\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cegbr\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"other\" )])\n+   (set_attr \"type\"    \"itof\" )])\n \n ;\n ; floatsidf2 instruction pattern(s).\n@@ -2758,7 +2766,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cdfbr\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"   \"other\" )])\n+   (set_attr \"type\"   \"itof\" )])\n \n (define_insn \"floatsidf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -2777,6 +2785,7 @@\n }\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"type\"    \"other\" )\n+   (set_attr \"atype\"   \"agen\")\n    (set_attr \"length\"  \"20\")])\n \n ;\n@@ -2808,7 +2817,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"cefbr\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"other\" )])\n+   (set_attr \"type\"    \"itof\" )])\n \n ;\n ; truncdfsf2 instruction pattern(s).\n@@ -2835,7 +2844,7 @@\n    lrer\\\\t%0,%1\n    le\\\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"   \"floads,floads\")])\n \n ;\n ; extendsfdf2 instruction pattern(s).\n@@ -2861,7 +2870,8 @@\n   \"@\n    ldebr\\\\t%0,%1\n    ldeb\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")\n+   (set_attr \"type\"   \"floads,floads\")])\n \n (define_insn \"extendsfdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -2871,8 +2881,9 @@\n   \"@\n    sdr\\\\t%0,%0\\;ler\\\\t%0,%1\n    sdr\\\\t%0,%0\\;le\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")\n+  [(set_attr \"op_type\"  \"NN,NN\")\n+   (set_attr \"atype\"    \"reg,agen\")\n+   (set_attr \"length\"   \"4,6\")\n    (set_attr \"type\"     \"o2,o2\")]) \n \n \n@@ -2899,7 +2910,6 @@\n    && preferred_la_operand_p (operands[1], 1)\"\n   \"#\"\n   [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")\n    (set_attr \"type\"     \"la\")])\n \n (define_split\n@@ -2919,8 +2929,7 @@\n   \"@\n    agfr\\\\t%0,%2\n    agf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*adddi3_zero_cc\"\n   [(set (reg 33) \n@@ -2933,8 +2942,7 @@\n   \"@\n    algfr\\\\t%0,%2\n    algf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*adddi3_zero_cconly\"\n   [(set (reg 33) \n@@ -2946,8 +2954,7 @@\n   \"@\n    algfr\\\\t%0,%2\n    algf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*adddi3_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -2958,8 +2965,7 @@\n   \"@\n    algfr\\\\t%0,%2\n    algf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*adddi3_imm_cc\"\n   [(set (reg 33) \n@@ -2972,8 +2978,7 @@\n    && s390_match_ccmode (insn, CCAmode) \n    && CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'K')\"\n   \"aghi\\\\t%0,%h2\"\n-  [(set_attr \"op_type\"  \"RI\")\n-   (set_attr \"atype\"    \"reg\")])  \n+  [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"*adddi3_cc\"\n   [(set (reg 33) \n@@ -2986,8 +2991,7 @@\n   \"@\n    algr\\\\t%0,%2\n    alg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*adddi3_cconly\"\n   [(set (reg 33) \n@@ -2999,8 +3003,7 @@\n   \"@\n    algr\\\\t%0,%2\n    alg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*adddi3_cconly2\"\n   [(set (reg 33) \n@@ -3011,8 +3014,7 @@\n   \"@\n    algr\\\\t%0,%2\n    alg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*adddi3_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d,d\")\n@@ -3024,8 +3026,7 @@\n    agr\\\\t%0,%2\n    aghi\\\\t%0,%h2\n    ag\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RI,RXE\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RI,RXE\")])\n \n (define_insn_and_split \"*adddi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n@@ -3076,7 +3077,6 @@\n   \"TARGET_64BIT\"\n   \"la\\\\t%0,%a1\"      \n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"atype\"   \"mem\")\n    (set_attr \"type\"    \"la\")])\n \n (define_expand \"reload_indi\"\n@@ -3103,7 +3103,6 @@\n    && preferred_la_operand_p (operands[1], 1)\"\n   \"#\"\n   [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")\n    (set_attr \"type\"     \"la\")])\n \n (define_split\n@@ -3124,8 +3123,7 @@\n   \"s390_match_ccmode (insn, CCAmode)\n    && CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'K')\"\n   \"ahi\\\\t%0,%h2\"\n-  [(set_attr \"op_type\"  \"RI\")\n-   (set_attr \"atype\"    \"reg\")])  \n+  [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"*addsi3_carry1_cc\"\n   [(set (reg 33) \n@@ -3138,8 +3136,7 @@\n   \"@\n    alr\\\\t%0,%2\n    al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*addsi3_carry1_cconly\"\n   [(set (reg 33) \n@@ -3151,8 +3148,7 @@\n   \"@\n    alr\\\\t%0,%2\n    al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*addsi3_carry2_cc\"\n   [(set (reg 33) \n@@ -3165,8 +3161,7 @@\n   \"@\n    alr\\\\t%0,%2\n    al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*addsi3_carry2_cconly\"\n   [(set (reg 33) \n@@ -3178,8 +3173,7 @@\n   \"@\n    alr\\\\t%0,%2\n    al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*addsi3_cc\"\n   [(set (reg 33) \n@@ -3192,8 +3186,7 @@\n   \"@\n    alr\\\\t%0,%2\n    al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*addsi3_cconly\"\n   [(set (reg 33) \n@@ -3205,8 +3198,7 @@\n   \"@\n    alr\\\\t%0,%2\n    al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*addsi3_cconly2\"\n   [(set (reg 33) \n@@ -3217,8 +3209,7 @@\n   \"@\n    alr\\\\t%0,%2\n    al\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*addsi3_sign\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -3227,8 +3218,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"ah\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"RX\")])\n \n (define_insn \"*addsi3_sub\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -3237,8 +3227,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"ah\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"RX\")])\n \n (define_insn \"addsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d,d\")\n@@ -3250,16 +3239,14 @@\n    ar\\\\t%0,%2\n    ahi\\\\t%0,%h2\n    a\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RI,RX\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RI,RX\")])\n \n (define_insn \"*la_31\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (match_operand:QI 1 \"address_operand\" \"p\"))]\n   \"!TARGET_64BIT && legitimate_la_operand_p (operands[1])\"\n   \"la\\\\t%0,%a1\"\n   [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")\n    (set_attr \"type\"     \"la\")])\n \n (define_insn \"*la_31_and\"\n@@ -3269,7 +3256,6 @@\n   \"!TARGET_64BIT\"\n   \"la\\\\t%0,%a1\"\n   [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")\n    (set_attr \"type\"     \"la\")])\n \n (define_insn_and_split \"*la_31_and_cc\"\n@@ -3284,7 +3270,6 @@\n         (and:SI (match_dup 1) (const_int 2147483647)))]\n   \"\"\n   [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")\n    (set_attr \"type\"     \"la\")])\n \n (define_insn \"force_la_31\"\n@@ -3294,7 +3279,6 @@\n   \"!TARGET_64BIT\"\n   \"la\\\\t%0,%a1\"\n   [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")\n    (set_attr \"type\"     \"la\")])\n \n (define_expand \"reload_insi\"\n@@ -3332,7 +3316,7 @@\n    adbr\\\\t%0,%2\n    adb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n \n (define_insn \"*adddf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -3344,7 +3328,7 @@\n    adr\\\\t%0,%2\n    ad\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n \n ;\n ; addsf3 instruction pattern(s).\n@@ -3369,7 +3353,7 @@\n    aebr\\\\t%0,%2\n    aeb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fsimps,fsimps\")])\n \n (define_insn \"*addsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -3381,7 +3365,7 @@\n    aer\\\\t%0,%2\n    ae\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fsimps,fsimps\")])\n \n \n ;;\n@@ -3401,8 +3385,7 @@\n   \"@\n    sgfr\\\\t%0,%2\n    sgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*subdi3_zero_cc\"\n   [(set (reg 33) \n@@ -3415,8 +3398,7 @@\n   \"@\n    slgfr\\\\t%0,%2\n    slgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*subdi3_zero_cconly\"\n   [(set (reg 33) \n@@ -3428,8 +3410,7 @@\n   \"@\n    slgfr\\\\t%0,%2\n    slgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])  \n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*subdi3_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3440,8 +3421,7 @@\n   \"@\n    slgfr\\\\t%0,%2\n    slgf\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*subdi3_cc\"\n   [(set (reg 33)\n@@ -3454,8 +3434,7 @@\n   \"@\n    slgr\\\\t%0,%2\n    slg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*subdi3_cconly\"\n   [(set (reg 33)\n@@ -3467,8 +3446,7 @@\n   \"@\n    slgr\\\\t%0,%2\n    slg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*subdi3_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3479,8 +3457,7 @@\n   \"@\n    sgr\\\\t%0,%2\n    sg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RRE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RRE\")])\n \n (define_insn_and_split \"*subdi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n@@ -3540,8 +3517,7 @@\n   \"@\n    slr\\\\t%0,%2\n    sl\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*subsi3_borrow_cconly\"\n   [(set (reg 33)\n@@ -3553,8 +3529,7 @@\n   \"@\n    slr\\\\t%0,%2\n    sl\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*subsi3_cc\"\n   [(set (reg 33)\n@@ -3567,8 +3542,7 @@\n   \"@\n    slr\\\\t%0,%2\n    sl\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*subsi3_cconly\"\n   [(set (reg 33)\n@@ -3580,8 +3554,7 @@\n   \"@\n    slr\\\\t%0,%2\n    sl\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*subsi3_sign\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -3590,8 +3563,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"sh\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"RX\")])\n \n (define_insn \"*subsi3_sub\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -3600,8 +3572,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"sh\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RX\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"RX\")])\n \n (define_insn \"subsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -3612,8 +3583,7 @@\n   \"@\n    sr\\\\t%0,%2\n    s\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n \n ;\n@@ -3639,7 +3609,7 @@\n    sdbr\\\\t%0,%2\n    sdb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n \n (define_insn \"*subdf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -3651,7 +3621,7 @@\n    sdr\\\\t%0,%2\n    sd\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n \n ;\n ; subsf3 instruction pattern(s).\n@@ -3676,7 +3646,7 @@\n    sebr\\\\t%0,%2\n    seb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fsimps,fsimps\")])\n \n (define_insn \"*subsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -3688,7 +3658,7 @@\n    ser\\\\t%0,%2\n    se\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fsimps,fsimps\")])\n \n \n ;;\n@@ -3708,7 +3678,6 @@\n    msgfr\\\\t%0,%2\n    msgf\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")\n    (set_attr \"type\"     \"imul\")])\n \n \n@@ -3722,7 +3691,6 @@\n    mghi\\\\t%0,%h2\n    msg\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RI,RXE\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")\n    (set_attr \"type\"     \"imul\")])\n \n ;\n@@ -3739,7 +3707,6 @@\n    mhi\\\\t%0,%h2\n    ms\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RI,RX\")\n-   (set_attr \"atype\"    \"reg,reg,mem\")\n    (set_attr \"type\"     \"imul\")])\n \n ;\n@@ -3778,7 +3745,6 @@\n     mr\\\\t%0,%2\n     m\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")\n    (set_attr \"type\"     \"imul\")])\n  \n ;\n@@ -3804,8 +3770,7 @@\n    mdbr\\\\t%0,%2\n    mdb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fmul\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fmuld\")])\n \n (define_insn \"*muldf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -3817,8 +3782,7 @@\n    mdr\\\\t%0,%2\n    md\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"    \"fmul\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"    \"fmuld\")])\n \n ;\n ; mulsf3 instruction pattern(s).\n@@ -3843,8 +3807,7 @@\n    meebr\\\\t%0,%2\n    meeb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fmul\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fmuls\")])\n \n (define_insn \"*mulsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -3856,8 +3819,7 @@\n    mer\\\\t%0,%2\n    me\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fmul\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fmuls\")])\n \n \n ;;\n@@ -3923,8 +3885,7 @@\n    dsgr\\\\t%0,%2\n    dsg\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"idiv\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"idiv\")])\n \n (define_insn \"divmodtisi3\"\n   [(set (match_operand:TI 0 \"register_operand\" \"=d,d\")\n@@ -3942,8 +3903,7 @@\n    dsgfr\\\\t%0,%2\n    dsgf\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"idiv\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"idiv\")])\n \n ;\n ; udivmoddi4 instruction pattern(s).\n@@ -4005,8 +3965,7 @@\n    dlgr\\\\t%0,%2\n    dlg\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"idiv\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"idiv\")])\n \n ;\n ; divmodsi4 instruction pattern(s).\n@@ -4066,8 +4025,7 @@\n    dr\\\\t%0,%2\n    d\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"idiv\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"idiv\")])\n \n ;\n ; udivsi3 and umodsi3 instruction pattern(s).\n@@ -4281,8 +4239,7 @@\n    ddbr\\\\t%0,%2\n    ddb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fdiv\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fdivd\")])\n \n (define_insn \"*divdf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -4294,8 +4251,7 @@\n    ddr\\\\t%0,%2\n    dd\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fdiv\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fdivd\")])\n \n ;\n ; divsf3 instruction pattern(s).\n@@ -4320,8 +4276,7 @@\n    debr\\\\t%0,%2\n    deb\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fdiv\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fdivs\")])\n \n (define_insn \"*divsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -4333,8 +4288,7 @@\n    der\\\\t%0,%2\n    de\\\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fdiv\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+   (set_attr \"type\"     \"fdivs\")])\n \n \n ;;\n@@ -4356,8 +4310,7 @@\n   \"@\n    ngr\\\\t%0,%2\n    ng\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*anddi3_cconly\"\n   [(set (reg 33)\n@@ -4369,8 +4322,7 @@\n   \"@\n    ngr\\\\t%0,%2\n    ng\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*anddi3_ni\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -4392,8 +4344,7 @@\n       default: abort ();\n     }\n }\"\n-  [(set_attr \"op_type\"  \"RI\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"anddi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -4404,8 +4355,7 @@\n   \"@\n    ngr\\\\t%0,%2\n    ng\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*anddi3_ss\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4414,8 +4364,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"nc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*anddi3_ss_inv\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4424,8 +4373,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"nc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; andsi3 instruction pattern(s).\n@@ -4442,8 +4390,7 @@\n   \"@\n    nr\\\\t%0,%2\n    n\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*andsi3_cconly\"\n   [(set (reg 33)\n@@ -4455,8 +4402,7 @@\n   \"@\n    nr\\\\t%0,%2\n    n\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*andsi3_ni\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -4476,8 +4422,7 @@\n       default: abort ();\n     }\n }\"\n-  [(set_attr \"op_type\"  \"RI\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"andsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -4488,8 +4433,7 @@\n   \"@\n    nr\\\\t%0,%2\n    n\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*andsi3_ss\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -4498,8 +4442,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"nc\\\\t%O0(4,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*andsi3_ss_inv\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -4508,8 +4451,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"nc\\\\t%O0(4,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; andhi3 instruction pattern(s).\n@@ -4524,8 +4466,7 @@\n   \"@\n    nr\\\\t%0,%2\n    nill\\\\t%0,%x2\"\n-  [(set_attr \"op_type\"  \"RR,RI\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR,RI\")])\n \n (define_insn \"andhi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n@@ -4534,8 +4475,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"nr\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*andhi3_ss\"\n   [(set (match_operand:HI 0 \"s_operand\" \"=Q\")\n@@ -4544,8 +4484,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"nc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*andhi3_ss_inv\"\n   [(set (match_operand:HI 0 \"s_operand\" \"=Q\")\n@@ -4554,8 +4493,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"nc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; andqi3 instruction pattern(s).\n@@ -4570,8 +4508,7 @@\n   \"@\n    nr\\\\t%0,%2\n    nill\\\\t%0,%b2\"\n-  [(set_attr \"op_type\"  \"RR,RI\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR,RI\")])\n \n (define_insn \"andqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n@@ -4580,8 +4517,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"nr\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*andqi3_ss\"\n   [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n@@ -4592,8 +4528,7 @@\n   \"@\n    ni\\\\t%0,%b1\n    nc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SI,SS\")])\n \n (define_insn \"*andqi3_ss_inv\"\n   [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n@@ -4604,8 +4539,7 @@\n   \"@\n    ni\\\\t%0,%b1\n    nc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SI,SS\")])\n \n \n ;;\n@@ -4627,8 +4561,7 @@\n   \"@\n    ogr\\\\t%0,%2\n    og\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*iordi3_cconly\"\n   [(set (reg 33)\n@@ -4640,8 +4573,7 @@\n   \"@\n    ogr\\\\t%0,%2\n    og\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*iordi3_oi\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -4663,8 +4595,7 @@\n       default: abort ();\n     }\n }\"\n-  [(set_attr \"op_type\"  \"RI\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"iordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -4675,8 +4606,7 @@\n   \"@\n    ogr\\\\t%0,%2\n    og\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*iordi3_ss\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4685,8 +4615,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"oc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*iordi3_ss_inv\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4695,8 +4624,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"oc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; iorsi3 instruction pattern(s).\n@@ -4713,8 +4641,7 @@\n   \"@\n    or\\\\t%0,%2\n    o\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*iorsi3_cconly\"\n   [(set (reg 33)\n@@ -4726,8 +4653,7 @@\n   \"@\n    or\\\\t%0,%2\n    o\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*iorsi3_oi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -4747,8 +4673,7 @@\n       default: abort ();\n     }\n }\"\n-  [(set_attr \"op_type\"  \"RI\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RI\")])\n \n (define_insn \"iorsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -4759,8 +4684,7 @@\n   \"@\n    or\\\\t%0,%2\n    o\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*iorsi3_ss\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -4769,8 +4693,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"oc\\\\t%O0(4,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*iorsi3_ss_inv\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -4779,8 +4702,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"oc\\\\t%O0(4,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; iorhi3 instruction pattern(s).\n@@ -4795,8 +4717,7 @@\n   \"@\n    or\\\\t%0,%2\n    oill\\\\t%0,%x2\"\n-  [(set_attr \"op_type\"  \"RR,RI\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR,RI\")])\n \n (define_insn \"iorhi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n@@ -4805,8 +4726,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"or\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*iorhi3_ss\"\n   [(set (match_operand:HI 0 \"s_operand\" \"=Q\")\n@@ -4815,8 +4735,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"oc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*iorhi3_ss_inv\"\n   [(set (match_operand:HI 0 \"s_operand\" \"=Q\")\n@@ -4825,8 +4744,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"oc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; iorqi3 instruction pattern(s).\n@@ -4841,8 +4759,7 @@\n   \"@\n    or\\\\t%0,%2\n    oill\\\\t%0,%b2\"\n-  [(set_attr \"op_type\"  \"RR,RI\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR,RI\")])\n \n (define_insn \"iorqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n@@ -4851,8 +4768,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"or\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*iorqi3_ss\"\n   [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n@@ -4863,8 +4779,7 @@\n   \"@\n    oi\\\\t%0,%b1\n    oc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"SI,SS\")])\n \n (define_insn \"*iorqi3_ss_inv\"\n   [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n@@ -4875,8 +4790,7 @@\n   \"@\n    oi\\\\t%0,%b1\n    oc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"SI,SS\")])\n \n \n ;;\n@@ -4898,8 +4812,7 @@\n   \"@\n    xgr\\\\t%0,%2\n    xg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*xordi3_cconly\"\n   [(set (reg 33)\n@@ -4911,8 +4824,7 @@\n   \"@\n    xgr\\\\t%0,%2\n    xr\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"xordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -4923,8 +4835,7 @@\n   \"@\n    xgr\\\\t%0,%2\n    xg\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RRE,RXE\")])\n \n (define_insn \"*xordi3_ss\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4933,8 +4844,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"xc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*xordi3_ss_inv\"\n   [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n@@ -4943,8 +4853,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"xc\\\\t%O0(8,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; xorsi3 instruction pattern(s).\n@@ -4961,8 +4870,7 @@\n   \"@\n    xr\\\\t%0,%2\n    x\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*xorsi3_cconly\"\n   [(set (reg 33)\n@@ -4974,8 +4882,7 @@\n   \"@\n    xr\\\\t%0,%2\n    x\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"xorsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -4986,8 +4893,7 @@\n   \"@\n    xr\\\\t%0,%2\n    x\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"atype\"    \"reg,mem\")])\n+  [(set_attr \"op_type\"  \"RR,RX\")])\n \n (define_insn \"*xorsi3_ss\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -4996,8 +4902,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"xc\\\\t%O0(4,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*xorsi3_ss_inv\"\n   [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n@@ -5006,8 +4911,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"xc\\\\t%O0(4,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; xorhi3 instruction pattern(s).\n@@ -5030,8 +4934,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"xc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n (define_insn \"*xorhi3_ss_inv\"\n   [(set (match_operand:HI 0 \"s_operand\" \"=Q\")\n@@ -5040,8 +4943,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"xc\\\\t%O0(2,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SS\")])\n \n ;\n ; xorqi3 instruction pattern(s).\n@@ -5054,8 +4956,7 @@\n    (clobber (reg:CC 33))]\n   \"\"\n   \"xr\\\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"atype\"    \"reg\")])\n+  [(set_attr \"op_type\"  \"RR\")])\n \n (define_insn \"*xorqi3_ss\"\n   [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n@@ -5066,8 +4967,7 @@\n   \"@\n    xi\\\\t%0,%b1\n    xc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SI,SS\")])\n \n (define_insn \"*xorqi3_ss_inv\"\n   [(set (match_operand:QI 0 \"s_operand\" \"=Q,Q\")\n@@ -5078,8 +4978,7 @@\n   \"@\n    xi\\\\t%0,%b1\n    xc\\\\t%O0(1,%R0),%1\"\n-  [(set_attr \"op_type\"  \"SI,SS\")\n-   (set_attr \"atype\"    \"mem\")])\n+  [(set_attr \"op_type\"  \"SI,SS\")])\n \n \n ;;\n@@ -5157,15 +5056,17 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcdbr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"type\"     \"fsimpd\")])\n \n (define_insn \"*negdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n         (neg:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lcdr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RR\")\n+   (set_attr \"type\"     \"fsimpd\")])\n \n ;\n ; negsf2 instruction pattern(s).\n@@ -5185,15 +5086,17 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcebr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"type\"     \"fsimps\")])\n \n (define_insn \"*negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n         (neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lcer\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RR\")\n+   (set_attr \"type\"     \"fsimps\")])\n \n \n ;;\n@@ -5242,15 +5145,17 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpdbr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"type\"     \"fsimpd\")])\n \n (define_insn \"*absdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n         (abs:DF (match_operand:DF 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lpdr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RR\")\n+   (set_attr \"type\"     \"fsimpd\")])\n \n ;\n ; abssf2 instruction pattern(s).\n@@ -5270,15 +5175,17 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpebr\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"type\"     \"fsimps\")])\n \n (define_insn \"*abssf2_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n         (abs:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lper\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RR\")])\n+  [(set_attr \"op_type\"  \"RR\")\n+   (set_attr \"type\"     \"fsimps\")])\n \n ;;\n ;;- Square root instructions.\n@@ -5295,7 +5202,8 @@\n   \"@\n    sqdbr\\\\t%0,%1\n    sqdb\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE,RSE\")])\n+  [(set_attr \"op_type\"  \"RRE,RSE\")\n+   (set_attr \"type\"     \"fsqrtd\")])\n \n ;\n ; sqrtsf2 instruction pattern(s).\n@@ -5308,7 +5216,8 @@\n   \"@\n    sqebr\\\\t%0,%1\n    sqeb\\\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE,RSE\")])\n+  [(set_attr \"op_type\"  \"RRE,RSE\")\n+   (set_attr \"type\"     \"fsqrts\")])\n \n ;;\n ;;- One complement instructions.\n@@ -5383,7 +5292,8 @@\n   \"@\n    rllg\\\\t%0,%1,%c2\n    rllg\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")])\n+  [(set_attr \"op_type\"  \"RSE\")\n+   (set_attr \"atype\"    \"reg\")])\n \n ;\n ; rotlsi3 instruction pattern(s).\n@@ -5397,7 +5307,8 @@\n   \"@\n    rll\\\\t%0,%1,%c2\n    rll\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")])\n+  [(set_attr \"op_type\"  \"RSE\")\n+   (set_attr \"atype\"    \"reg\")])\n \n \n ;;\n@@ -5423,7 +5334,8 @@\n   \"@\n    sldl\\\\t%0,%c2\n    sldl\\\\t%0,0(%2)\"     \n-  [(set_attr \"op_type\"  \"RS\")])\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*ashldi3_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -5433,7 +5345,8 @@\n   \"@\n    sllg\\\\t%0,%1,%2\n    sllg\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")])\n+  [(set_attr \"op_type\"  \"RSE\")\n+   (set_attr \"atype\"    \"reg\")])\n \n ;\n ; ashrdi3 instruction pattern(s).\n@@ -5459,7 +5372,8 @@\n   \"@\n    srda\\\\t%0,%c2\n    srda\\\\t%0,0(%2)\"     \n-  [(set_attr \"op_type\"  \"RS\")])\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*ashrdi3_cconly_31\"\n   [(set (reg 33)\n@@ -5471,7 +5385,8 @@\n   \"@\n    srda\\\\t%0,%c2\n    srda\\\\t%0,0(%2)\"     \n-  [(set_attr \"op_type\"  \"RS\")])\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*ashrdi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -5482,8 +5397,9 @@\n   \"@\n    srda\\\\t%0,%c2\n    srda\\\\t%0,0(%2)\"     \n-  [(set_attr \"op_type\"  \"RS\")])\n-\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n+ \n (define_insn \"*ashrdi3_cc_64\"\n   [(set (reg 33)\n         (compare (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"d,d\")\n@@ -5495,7 +5411,8 @@\n   \"@\n    srag\\\\t%0,%1,%c2\n    srag\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")])\n+  [(set_attr \"op_type\"  \"RSE\")\n+   (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*ashrdi3_cconly_64\"\n   [(set (reg 33)\n@@ -5507,7 +5424,8 @@\n   \"@\n    srag\\\\t%0,%1,%c2\n    srag\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")])\n+  [(set_attr \"op_type\"  \"RSE\")\n+   (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*ashrdi3_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -5518,7 +5436,9 @@\n   \"@\n    srag\\\\t%0,%1,%c2\n    srag\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE\")])\n+  [(set_attr \"op_type\"  \"RSE\")\n+   (set_attr \"atype\"    \"reg\")])\n+\n \n ;\n ; ashlsi3 instruction pattern(s).\n@@ -5532,7 +5452,8 @@\n   \"@\n    sll\\\\t%0,%c2\n    sll\\\\t%0,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS\")])\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n \n ;\n ; ashrsi3 instruction pattern(s).\n@@ -5549,7 +5470,9 @@\n   \"@\n    sra\\\\t%0,%c2\n    sra\\\\t%0,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS\")])\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n+\n \n (define_insn \"*ashrsi3_cconly\"\n   [(set (reg 33)\n@@ -5561,7 +5484,8 @@\n   \"@\n    sra\\\\t%0,%c2\n    sra\\\\t%0,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS\")])\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"ashrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n@@ -5572,7 +5496,8 @@\n   \"@\n    sra\\\\t%0,%c2\n    sra\\\\t%0,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS\")])\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n \n \n ;;\n@@ -5598,7 +5523,8 @@\n   \"@\n    srdl\\\\t%0,%c2\n    srdl\\\\t%0,0(%2)\"     \n-   [(set_attr \"op_type\"  \"RS,RS\")])\n+   [(set_attr \"op_type\"  \"RS,RS\")\n+    (set_attr \"atype\"    \"reg\")])\n \n (define_insn \"*lshrdi3_64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -5608,7 +5534,8 @@\n   \"@\n    srlg\\\\t%0,%1,%c2\n    srlg\\\\t%0,%1,0(%2)\"\n-  [(set_attr \"op_type\"  \"RSE,RSE\")])\n+  [(set_attr \"op_type\"  \"RSE,RSE\")\n+   (set_attr \"atype\"    \"reg\")])\n \n ;\n ; lshrsi3 instruction pattern(s).\n@@ -5622,7 +5549,8 @@\n   \"@\n    srl\\\\t%0,%c2\n    srl\\\\t%0,0(%2)\"\n-  [(set_attr \"op_type\"  \"RS\")])\n+  [(set_attr \"op_type\"  \"RS\")\n+   (set_attr \"atype\"    \"reg\")])\n \n \n ;;\n@@ -5813,6 +5741,7 @@\n     abort ();\n }\"\n   [(set_attr \"op_type\" \"RI\")\n+   (set_attr \"type\"    \"branch\")\n    (set (attr \"length\")\n         (cond [(lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                 (const_int 4)\n@@ -5838,7 +5767,8 @@\n   [(set (attr \"op_type\") \n         (if_then_else (match_operand 0 \"register_operand\" \"\")\n                       (const_string \"RR\") (const_string \"RX\")))\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"type\"    \"branch\")\n+   (set_attr \"atype\" \"agen\")])\n \n \n ;;\n@@ -5862,6 +5792,7 @@\n     abort ();\n }\"\n   [(set_attr \"op_type\" \"RI\")\n+   (set_attr \"type\"    \"branch\")\n    (set (attr \"length\")\n         (cond [(lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                 (const_int 4)\n@@ -5887,7 +5818,8 @@\n   [(set (attr \"op_type\") \n         (if_then_else (match_operand 0 \"register_operand\" \"\")\n                       (const_string \"RR\") (const_string \"RX\")))\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"type\"  \"branch\")\n+   (set_attr \"atype\" \"agen\")])\n \n ;;\n ;;- Trap instructions.\n@@ -5897,7 +5829,8 @@\n   [(trap_if (const_int 1) (const_int 0))]\n   \"\"\n   \"j\\\\t.+2\"\n-  [(set_attr \"op_type\" \"RX\")])\n+  [(set_attr \"op_type\" \"RX\")\n+   (set_attr \"type\"  \"branch\")])\n \n (define_expand \"conditional_trap\"\n   [(set (match_dup 2) (match_dup 3))\n@@ -5922,7 +5855,8 @@\n \t    (const_int 0))]\n   \"\"\n   \"j%C0\\\\t.+2\";\n-  [(set_attr \"op_type\" \"RX\")])\n+  [(set_attr \"op_type\" \"RI\")\n+   (set_attr \"type\"  \"branch\")])\n \n ;;\n ;;- Loop instructions.\n@@ -5971,6 +5905,7 @@\n     abort ();\n }\"\n   [(set_attr \"op_type\"  \"RI\")\n+   (set_attr \"type\"  \"branch\")\n    (set (attr \"length\")\n         (cond [(lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                 (const_int 4)\n@@ -6001,7 +5936,8 @@\n   [(set (attr \"op_type\") \n         (if_then_else (match_operand 0 \"register_operand\" \"\")\n                       (const_string \"RR\") (const_string \"RX\")))\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"type\"  \"branch\")\n+   (set_attr \"atype\" \"agen\")])\n \n (define_split\n   [(set (pc)\n@@ -6049,6 +5985,7 @@\n     abort ();\n }\"\n   [(set_attr \"op_type\"  \"RI\")\n+   (set_attr \"type\"  \"branch\")\n    (set (attr \"length\")\n         (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                       (const_int 4) (const_int 12)))])\n@@ -6075,7 +6012,8 @@\n   [(set (attr \"op_type\") \n         (if_then_else (match_operand 0 \"register_operand\" \"\")\n                       (const_string \"RRE\") (const_string \"RXE\")))\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"type\"  \"branch\")\n+   (set_attr \"atype\" \"agen\")])\n \n (define_split\n   [(set (pc)\n@@ -6122,6 +6060,7 @@\n     abort ();\n }\"\n   [(set_attr \"op_type\" \"RI\")\n+   (set_attr \"type\"  \"branch\")\n    (set (attr \"length\")\n         (cond [(lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n                 (const_int 4)\n@@ -6147,7 +6086,8 @@\n   [(set (attr \"op_type\") \n         (if_then_else (match_operand 0 \"register_operand\" \"\")\n                       (const_string \"RR\") (const_string \"RX\")))\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"type\"  \"branch\")\n+   (set_attr \"atype\" \"agen\")])\n \n ;\n ; casesi instruction pattern(s).\n@@ -6167,7 +6107,8 @@\n   [(set (attr \"op_type\") \n         (if_then_else (match_operand 0 \"register_operand\" \"\")\n                       (const_string \"RR\") (const_string \"RX\")))\n-   (set_attr \"atype\" \"mem\")])\n+   (set_attr \"type\"  \"branch\")\n+   (set_attr \"atype\" \"agen\")])\n \n (define_expand \"casesi\"\n   [(match_operand:SI 0 \"general_operand\" \"\")\n@@ -6346,7 +6287,7 @@\n   \"basr\\\\t%2,%0\"\n   [(set_attr \"op_type\" \"RR\")\n    (set_attr \"type\"    \"jsr\")\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"atype\"   \"agen\")])\n \n (define_insn \"basr_31\"\n   [(call (mem:QI (match_operand:SI 0 \"register_operand\" \"a\"))\n@@ -6356,7 +6297,7 @@\n   \"basr\\\\t%2,%0\"\n   [(set_attr \"op_type\" \"RR\")\n    (set_attr \"type\"    \"jsr\")\n-   (set_attr \"atype\"    \"mem\")])\n+   (set_attr \"atype\"    \"agen\")])\n \n (define_insn \"bas_64\"\n   [(call (mem:QI (match_operand:QI 0 \"address_operand\" \"p\"))\n@@ -6365,8 +6306,7 @@\n   \"TARGET_64BIT\"\n   \"bas\\\\t%2,%a0\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"type\"    \"jsr\")\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"type\"    \"jsr\")])\n \n (define_insn \"bas_31\"\n   [(call (mem:QI (match_operand:QI 0 \"address_operand\" \"p\"))\n@@ -6375,8 +6315,7 @@\n   \"!TARGET_64BIT\"\n   \"bas\\\\t%2,%a0\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"type\"    \"jsr\")\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"type\"    \"jsr\")])\n \n \n ;\n@@ -6471,7 +6410,8 @@\n   \"TARGET_64BIT\"\n   \"basr\\\\t%3,%1\"\n   [(set_attr \"op_type\" \"RR\")\n-   (set_attr \"type\"    \"jsr\")])\n+   (set_attr \"type\"    \"jsr\")\n+   (set_attr \"atype\"   \"agen\")])\n \n (define_insn \"basr_r_31\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n@@ -6482,7 +6422,7 @@\n   \"basr\\\\t%3,%1\"\n   [(set_attr \"op_type\" \"RR\")\n    (set_attr \"type\"    \"jsr\")\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"atype\"   \"agen\")])\n \n (define_insn \"bas_r_64\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n@@ -6492,8 +6432,7 @@\n   \"TARGET_64BIT\"\n   \"bas\\\\t%3,%a1\"\n   [(set_attr \"op_type\" \"RX\")\n-   (set_attr \"type\"    \"jsr\")\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"type\"    \"jsr\")])\n \n (define_insn \"bas_r_31\"\n   [(set (match_operand 0 \"register_operand\" \"=df\")\n@@ -6503,8 +6442,7 @@\n   \"!TARGET_64BIT\"\n   \"bas\\\\t%3,%a1\"\n    [(set_attr \"op_type\" \"RX\")\n-    (set_attr \"type\"    \"jsr\")\n-    (set_attr \"atype\"   \"mem\")])\n+    (set_attr \"type\"    \"jsr\")])\n \n \n ;;\n@@ -6808,7 +6746,7 @@\n   \"TARGET_64BIT\"\n   \"larl\\\\t%0,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n-   (set_attr \"type\"    \"la\")])\n+   (set_attr \"type\"    \"larl\")])\n \n (define_insn \"reload_anchor\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n@@ -6817,6 +6755,7 @@\n   \"l\\\\t%0,0(%1)\\;la\\\\t%0,0(%0,%1)\"\n   [(set_attr \"op_type\" \"NN\")\n    (set_attr \"type\"    \"la\")\n+   (set_attr \"atype\"   \"agen\")\n    (set_attr \"length\"  \"8\")])\n \n (define_insn \"pool\"\n@@ -6857,7 +6796,7 @@\n   \"br\\\\t%0\"\n   [(set_attr \"op_type\" \"RR\")\n    (set_attr \"type\"    \"jsr\")\t\t\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"atype\"   \"agen\")])\n \n (define_insn \"*return_di\"\n   [(return)\n@@ -6866,7 +6805,7 @@\n   \"br\\\\t%0\"\n   [(set_attr \"op_type\" \"RR\")\n    (set_attr \"type\"    \"jsr\")\t\t\n-   (set_attr \"atype\"   \"mem\")])\n+   (set_attr \"atype\"   \"agen\")])\n \n (define_insn \"literal_pool_31\"\n   [(unspec_volatile [(const_int 0)] 300)\n@@ -6883,7 +6822,7 @@\n    return \\\"\\\";\t\n }\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"la\")])\n+   (set_attr \"type\"    \"larl\")])\n \n (define_insn \"literal_pool_64\"\n   [(unspec_volatile [(const_int 0)] 300)\n@@ -6900,4 +6839,4 @@\n    return \\\"\\\";\t\n }\"\n   [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"la\")])\n+   (set_attr \"type\"    \"larl\")])"}]}