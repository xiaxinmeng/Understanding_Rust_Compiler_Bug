{"sha": "2ff78183f805777a4ff9e1032f85bb099112f2cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZmNzgxODNmODA1Nzc3YTRmZjllMTAzMmY4NWJiMDk5MTEyZjJjYw==", "commit": {"author": {"name": "Jeff Sturm", "email": "jsturm@one-point.com", "date": "2001-07-31T01:59:44Z"}, "committer": {"name": "Jeff Sturm", "email": "jsturm@gcc.gnu.org", "date": "2001-07-31T01:59:44Z"}, "message": "natPlainDatagramSocketImpl.cc: Undefine bind if defined.\n\n* java/net/natPlainDatagramSocketImpl.cc: Undefine bind if defined.\n(_Jv_bind): New static function.\n(bind): Use _Jv_bind.\n* java/net/natPlainSocketImpl.cc: Undefine bind, connect if defined.\n(_Jv_bind, _Jv_connect): New static functions.\n(bind): Use _Jv_bind.\n(connect): Use _Jv_connect.\n\nFrom-SVN: r44494", "tree": {"sha": "49ae370fda65d96bca2ba7e94b2d5662aa25cc93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49ae370fda65d96bca2ba7e94b2d5662aa25cc93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ff78183f805777a4ff9e1032f85bb099112f2cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff78183f805777a4ff9e1032f85bb099112f2cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff78183f805777a4ff9e1032f85bb099112f2cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff78183f805777a4ff9e1032f85bb099112f2cc/comments", "author": null, "committer": null, "parents": [{"sha": "3fe670a4692e1d01051ad305f0cb5f8fcd13125d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe670a4692e1d01051ad305f0cb5f8fcd13125d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe670a4692e1d01051ad305f0cb5f8fcd13125d"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "f3dd6826600c0b431e31fa9a52092ed4d39ea7b7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff78183f805777a4ff9e1032f85bb099112f2cc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff78183f805777a4ff9e1032f85bb099112f2cc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2ff78183f805777a4ff9e1032f85bb099112f2cc", "patch": "@@ -1,3 +1,13 @@\n+2001-07-30  Jeff Sturm  <jsturm@one-point.com>\n+\n+\t* java/net/natPlainDatagramSocketImpl.cc: Undefine bind if defined.\n+\t(_Jv_bind): New static function.\n+\t(bind): Use _Jv_bind.\n+\t* java/net/natPlainSocketImpl.cc: Undefine bind, connect if defined.\n+\t(_Jv_bind, _Jv_connect): New static functions.\n+\t(bind): Use _Jv_bind.\n+\t(connect): Use _Jv_connect.\n+\n 2001-07-30  Tom Tromey  <tromey@redhat.com>\n \t    Corey Minyard  <minyard@acm.org>\n "}, {"sha": "e15ead22b14bcda0172c1e7f44ddc7253dcde569", "filename": "libjava/java/net/natPlainDatagramSocketImpl.cc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff78183f805777a4ff9e1032f85bb099112f2cc/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff78183f805777a4ff9e1032f85bb099112f2cc/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc?ref=2ff78183f805777a4ff9e1032f85bb099112f2cc", "patch": "@@ -36,6 +36,18 @@ details.  */\n #include <bstring.h>\n #endif\n \n+// Avoid macro definitions of bind from system headers, e.g. on\n+// Solaris 7 with _XOPEN_SOURCE.  FIXME\n+static inline int\n+_Jv_bind (int fd, struct sockaddr *addr, int addrlen)\n+{\n+  return ::bind (fd, addr, addrlen);\n+}\n+\n+#ifdef bind\n+#undef bind\n+#endif\n+\n #include <gcj/cni.h>\n #include <java/io/IOException.h>\n #include <java/io/FileDescriptor.h>\n@@ -210,7 +222,7 @@ java::net::PlainDatagramSocketImpl::bind (jint lport,\n   else\n     throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n-  if (::bind (fnum, ptr, len) == 0)\n+  if (_Jv_bind (fnum, ptr, len) == 0)\n     {\n       socklen_t addrlen = sizeof(u);\n       if (lport != 0)"}, {"sha": "545c51406961c14397fcf5babf9efbb203896aa4", "filename": "libjava/java/net/natPlainSocketImpl.cc", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff78183f805777a4ff9e1032f85bb099112f2cc/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff78183f805777a4ff9e1032f85bb099112f2cc/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc?ref=2ff78183f805777a4ff9e1032f85bb099112f2cc", "patch": "@@ -33,6 +33,28 @@ details.  */\n #include <bstring.h>\n #endif\n \n+// Avoid macro definitions of bind, connect from system headers, e.g. on\n+// Solaris 7 with _XOPEN_SOURCE.  FIXME\n+static inline int\n+_Jv_bind (int fd, struct sockaddr *addr, int addrlen)\n+{\n+  return ::bind (fd, addr, addrlen);\n+}\n+\n+#ifdef bind\n+#undef bind\n+#endif\n+\n+static inline int\n+_Jv_connect (int fd, struct sockaddr *addr, int addrlen)\n+{\n+  return ::connect (fd, addr, addrlen);\n+}\n+\n+#ifdef connect\n+#undef connect\n+#endif\n+\n #include <gcj/cni.h>\n #include <gcj/javaprims.h>\n #include <java/io/IOException.h>\n@@ -164,7 +186,7 @@ java::net::PlainSocketImpl::bind (java::net::InetAddress *host, jint lport)\n   // Enable SO_REUSEADDR, so that servers can reuse ports left in TIME_WAIT.\n   ::setsockopt(fnum, SOL_SOCKET, SO_REUSEADDR, (char *) &i, sizeof(i));\n   \n-  if (::bind (fnum, ptr, len) == 0)\n+  if (_Jv_bind (fnum, ptr, len) == 0)\n     {\n       address = host;\n       socklen_t addrlen = sizeof(u);\n@@ -209,7 +231,7 @@ java::net::PlainSocketImpl::connect (java::net::InetAddress *host, jint rport)\n   else\n     throw new java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n \n-  if (::connect (fnum, ptr, len) != 0)\n+  if (_Jv_connect (fnum, ptr, len) != 0)\n     goto error;\n   address = host;\n   port = rport;"}]}